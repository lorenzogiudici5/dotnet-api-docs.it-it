<Type Name="SqlMembershipProvider" FullName="System.Web.Security.SqlMembershipProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c653fcd735b425b1a29ff05b8e411e9f2c59cc5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36397776" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlMembershipProvider : System.Web.Security.MembershipProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlMembershipProvider extends System.Web.Security.MembershipProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlMembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlMembershipProvider&#xA;Inherits MembershipProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMembershipProvider : System::Web::Security::MembershipProvider" />
  <TypeSignature Language="F#" Value="type SqlMembershipProvider = class&#xA;    inherit MembershipProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.MembershipProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Manages storage of membership information for an ASP.NET application in a SQL Server database.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe viene utilizzata per la <xref:System.Web.Security.Membership> e <xref:System.Web.Security.MembershipUser> classi per fornire servizi di appartenenza per un'applicazione ASP.NET tramite un database di SQL Server. Non è possibile utilizzare un <xref:System.Web.Security.SqlMembershipProvider> senza SQL Server. Quando il computer dispone di SQL Server Express installata con il nome dell'istanza predefinita e istanze utente abilitate, il <xref:System.Web.Security.SqlMembershipProvider> oggetto verrà creato un database denominato `aspnetdb` dell'applicazione `App_Data` directory la prima volta che l'applicazione viene eseguito.  
  
 Per creare manualmente il database, eseguire la `Aspnet_regsql.exe` trovare eseguibile nel `%systemroot%\Microsoft.NET\Framework\ versionNumber` cartella e specificare il `-A m` opzione (ad esempio `aspnet_regsql.exe -A m`). Il database creato è denominato Aspnetdb. In alternativa, eseguire `Aspnet_regsql.exe` per attivare la modalità di configurazione GUI e si sceglie di configurare tutte le funzionalità di ASP.NET.  
  
 Se il provider di appartenenze è configurato con una stringa di connessione che utilizza la sicurezza integrata, l'account di processo dell'applicazione ASP.NET deve disporre di diritti per la connessione al database di SQL Server.  
  
 Il file Machine. config definisce un valore predefinito <xref:System.Web.Security.SqlMembershipProvider> istanza denominata `AspNetSqlMembershipProvider` che si connette all'istanza predefinita di SQL Server Express nel computer locale. Se è stato installato SQL Server Express con il nome dell'istanza predefinita oppure è possibile definire la propria istanza nel file Web. config per l'applicazione ASP.NET, è possibile utilizzare questa istanza del provider.  
  
 Se si imposta la `passwordCompatMode` attributo <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework40>, l'applicazione può utilizzare l'hash dell'indirizzo e l'appartenenza di crittografia opzioni che sono state aggiunte in ASP.NET 4. Tuttavia, se il `passwordCompatMode` attributo è impostato su <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>, solo l'appartenenza hash e crittografia opzioni da ASP.NET 2.0, ASP.NET 3.5 e ASP.NET 3.5 SP1 può essere utilizzato. Il valore predefinito è <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>. Per altre informazioni, vedere <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato il file Web. config per un'applicazione ASP.NET configurata per utilizzare un <xref:System.Web.Security.SqlMembershipProvider>.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
    </authorization>  
    <membership defaultProvider="SqlProvider"  
      userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          maxInvalidPasswordAttempts="5"  
          passwordAttemptWindow="10" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Security.SqlMembershipProvider" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlMembershipProvider.%23ctor%2A> costruttore viene chiamato da ASP.NET per creare un'istanza di <xref:System.Web.Security.SqlMembershipProvider> classe come specificato nella configurazione per l'applicazione. Questo costruttore non può essere utilizzato dal codice.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the application to store and retrieve membership information for.</summary>
        <value>Il nome dell'applicazione da archiviare e recuperare informazioni di appartenenza. Il valore predefinito è il <see cref="P:System.Web.HttpRequest.ApplicationPath" /> valore della proprietà per l'oggetto corrente <see cref="P:System.Web.HttpContext.Request" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> viene utilizzato il <xref:System.Web.Security.SqlMembershipProvider> per raggruppare le informazioni utente. Specificando le informazioni utente con un nome dell'applicazione, è possibile archiviare le informazioni per più applicazioni in un singolo database senza che si verifichino conflitti tra nomi utente duplicati. Inoltre, più applicazioni ASP.NET possono utilizzare lo stesso database utente specificando lo stesso valore nel <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> proprietà. Il <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> può essere impostata a livello di programmazione, o può essere impostata in modo dichiarativo nel file di configurazione per l'applicazione Web con il `applicationName` attributo.  
  
 Se non viene specificato un valore per il `applicationName` attributo nel file di configurazione per l'applicazione Web, quindi il <xref:System.Web.HttpRequest.ApplicationPath%2A> viene utilizzato il valore di proprietà per la prima richiesta all'applicazione.  
  
> [!CAUTION]
>  Poiché un'istanza di provider di appartenenze predefinito singolo viene utilizzata per tutte le richieste servite da un <xref:System.Web.HttpApplication> dell'oggetto, è possibile avere più richieste in esecuzione contemporaneamente e si tenta di impostare il <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> valore della proprietà. Il <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> proprietà non è thread-safe per più operazioni di scrittura e la modifica di <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> valore della proprietà può comportare un comportamento imprevisto per più utenti di un'applicazione. È consigliabile evitare di scrivere codice per consentire agli utenti di impostare il <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> proprietà solo se necessario. Un esempio di un'applicazione in cui l'impostazione di <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> proprietà potrebbe essere necessario un'applicazione amministrativa che gestisce i dati di appartenenza per più applicazioni. Un'applicazione di questo tipo deve essere un utente singolo e non è un'applicazione Web.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica l'applicazione <xref:System.Web.Security.SqlMembershipProvider> istanza e imposta il <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> a `MyApplication`.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> property to an empty string or <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> property to a string that is longer than 256 characters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public override bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="override this.ChangePassword : string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePassword (username, oldPassword, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to update the password for.</param>
        <param name="oldPassword">The current password for the specified user.</param>
        <param name="newPassword">The new password for the specified user.</param>
        <summary>Modifies a user's password.</summary>
        <returns>
          <see langword="true" /> if the password was updated successfully. <see langword="false" /> if the supplied old password is invalid, the user is locked out, or the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal <xref:System.Web.Security.Membership> classe per aggiornare la password per un utente nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 La lunghezza massima della password è 128 caratteri.  
  
 Se viene fornita una password non corretta di <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> (metodo), il contatore interno che tiene traccia dei tentativi di password non valida viene incrementato di uno. Ciò può comportare l'utente viene bloccato e non è possibile accedere finché non viene eliminato lo stato di blocco da una chiamata al <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> metodo. Se la password corretta viene fornita e l'utente non sia attualmente bloccato, quindi i contatori interni che traccia la password non valida e della risposta segreta tenta vengono reimpostati su zero. Per altre informazioni, vedere la <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà.  
  
 È possibile chiamare il <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> metodo direttamente ottenendo innanzitutto un riferimento al <xref:System.Web.Security.SqlMembershipProvider> istanza tramite il <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Il <xref:System.Web.Security.Membership.Provider%2A> proprietà espone il `defaultProvider` specificato nel file Web. config per l'applicazione. Provider configurati che non sono il provider predefinito fatto riferimento utilizzando il <xref:System.Web.Security.Membership.Providers%2A> proprietà.  
  
 È inoltre possibile modificare le password utente utilizzando il <xref:System.Web.Security.MembershipUser.ChangePassword%2A> metodo.  
  
 Spazi iniziali e finali vengono rimossi da tutti i valori di parametro.  
  
   
  
## Examples  
 Esempio di codice seguente modifica la password per l'utente specificato.  
  
> [!NOTE]
>  Questo esempio viene utilizzata la <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà del <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordcs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="oldPassword" /> is an empty string or longer than 128 characters.  \- or -  <paramref name="newPassword" /> is an empty string or longer than 128 characters.  \- or -  The encoded version of <paramref name="newPassword" /> is greater than 128 characters.  \- or -  The change-password action was canceled by a subscriber to the <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> event, and the <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> property was <see langword="null" />.  \- or -  The length of <paramref name="newPassword" /> is less than the minimum length specified in the <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" /> property.  \- or -  The number of non-alphabetic characters in <paramref name="newPassword" /> is less than the required number of non-alphabetic characters specified in the <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" /> property.  \- or -  <paramref name="newPassword" /> does not pass the regular expression defined in the <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" /> property.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="oldPassword" /> is <see langword="null" />.  \- or -  <paramref name="newPassword" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="username" /> was not found in the database.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An error occurred while setting the new password value at the database.</exception>
        <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ChangePasswordQuestionAndAnswer : string * string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePasswordQuestionAndAnswer (username, password, newPasswordQuestion, newPasswordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to change the password question and answer for.</param>
        <param name="password">The password for the specified user.</param>
        <param name="newPasswordQuestion">The new password question for the specified user.</param>
        <param name="newPasswordAnswer">The new password answer for the specified user.</param>
        <summary>Updates the password question and answer for a user in the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the update was successful; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the <paramref name="password" /> is incorrect, the user is locked out, or the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal <xref:System.Web.Security.MembershipUser> classe per aggiornare la domanda segreta e la risposta per un utente nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config). Risposta segreta viene crittografata utilizzando il formato specificato nella <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> proprietà.  
  
 La richiesta di domanda e risposta fornisce un ulteriore livello di sicurezza durante il recupero o la reimpostazione password di un utente. Quando si crea un nome utente, un utente può fornire una domanda e risposta che può essere utilizzato in un secondo momento per recuperare o reimpostare una password dimenticata. Il <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> metodo aggiorna la domanda e risposta per un utente di appartenenza.  
  
 Se viene fornita una password non corretta di <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> (metodo), i contatori interni che i tentativi di password non valida per track viene incrementato di uno. Ciò può comportare l'utente viene bloccato e non è possibile accedere finché non viene eliminato lo stato di blocco chiamando il <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> metodo. Se la password corretta viene fornita e l'utente non sia attualmente bloccato, quindi i contatori interni che traccia la password non valida e della risposta segreta tenta vengono reimpostati su zero. Per altre informazioni, vedere la <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà.  
  
 La lunghezza massima per la domanda segreta è 256 caratteri. La lunghezza massima per la risposta segreta è 128 caratteri.  
  
 Per altre informazioni, vedere <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>, <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> e <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.  
  
 Spazi iniziali e finali vengono rimossi da tutti i valori di parametro.  
  
   
  
## Examples  
 L'esempio di codice seguente aggiorna la domanda e risposta per un utente.  
  
> [!NOTE]
>  Questo esempio viene utilizzata la <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà del <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordQuestioncs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordQuestionvb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="password" /> is an empty string or is longer than 128 characters.  \- or -  <paramref name="newPasswordQuestion" /> is an empty string or is longer than 256 characters.  \- or -  <paramref name="newPasswordAnswer" /> is an empty string or is longer than 128 characters.  \- or -  The encoded version of <paramref name="newPasswordAnswer" /> is longer than 128 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="password" /> is <see langword="null" />.  \- or -  <paramref name="newPasswordQuestion" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="newPasswordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An error occurred when changing the password question and answer in the database.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="override this.CreateUser : string * string * string * string * string * bool * obj *  -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the new user.</param>
        <param name="password">The password for the new user.</param>
        <param name="email">The email address for the new user.</param>
        <param name="passwordQuestion">The password question for the new user.</param>
        <param name="passwordAnswer">The password answer for the new user.</param>
        <param name="isApproved">Whether or not the new user is approved to be validated.</param>
        <param name="providerUserKey">A <see cref="T:System.Guid" /> that uniquely identifies the membership user in the SQL Server database.</param>
        <param name="status">One of the <see cref="T:System.Web.Security.MembershipCreateStatus" /> values, indicating whether the user was created successfully.</param>
        <summary>Adds a new user to the SQL Server membership database.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user. If no user was created, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal <xref:System.Web.Security.Membership> classe per creare un nuovo utente nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET.  
  
 Nuovi utenti vengono identificati con l'applicazione configurata <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Se il <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> è impostata su `true`, e `null` o una stringa vuota ("") viene specificato per il `email` parametro, la creazione dell'utente non riuscirà. La creazione dell'utente riuscirà anche se il <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> è impostata su `true` e il valore specificato per il `email` parametro è un duplicato dell'indirizzo di posta elettronica per un utente esistente nel database per l'applicazione configurata <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 La lunghezza massima per il nome utente è 256 caratteri. La lunghezza massima per l'indirizzo di posta elettronica è 256 caratteri. La lunghezza massima per la password in testo non crittografato o dopo che è stato eseguito l'hashing o crittografato è 128 caratteri.  
  
 Altre condizioni che impediscono la creazione di utente esito negativo:  
  
-   Il `password` parametro `null`, o una stringa vuota dopo la rimozione.  
  
-   La lunghezza del `password` parametro è minore del valore specificato nella <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> proprietà.  
  
-   Il numero di caratteri non alfabetici nel `password` parametro è minore del valore specificato nella <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> proprietà.  
  
-   Il `password` parametro non supera all'espressione regolare il <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> proprietà.  
  
-   Codice personalizzato di convalida della password ha annullato la creazione di utente durante la <xref:System.Web.Security.MembershipProvider.ValidatingPassword> evento.  
  
-   Il <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> proprietà è `true` e il `passwordAnswer` parametro `null` o una stringa vuota dopo la rimozione.  
  
-   Il `passwordAnswer` parametro è una stringa vuota.  
  
-   Il `passwordAnswer` parametro è più lungo di 128 caratteri.  
  
-   Il <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> proprietà è `true` e la domanda segreta è `null` o una stringa vuota dopo la rimozione.  
  
-   Il `passwordQuestion` parametro è una stringa vuota.  
  
-   Il `passwordQuestion` parametro è supera a 256 caratteri.  
  
-   Il `providerUserKey` parametro impostato su un oggetto di un tipo diverso da <xref:System.Guid?displayProperty=nameWithType>.  
  
-   Il `providerUserKey` parametro è un duplicato di una chiave utente esistente.  
  
-   Il `username` parametro è un duplicato di un nome utente esistente.  
  
 Spazi iniziali e finali vengono rimossi da tutti i valori dei parametri di stringa.  
  
   
  
## Examples  
 Esempio di codice seguente crea un nuovo utente per un'applicazione ASP.NET configurato per l'utilizzo dell'autenticazione form e <xref:System.Web.Security.SqlMembershipProvider>. Se l'utente non è stato creato correttamente, viene visualizzato un messaggio all'utente. In caso contrario, l'utente viene reindirizzato alla pagina di accesso per l'applicazione.  
  
> [!NOTE]
>  Questo esempio viene chiamato il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel Web. config file mediante il <xref:System.Web.Security.Membership> classe. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà del <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public override bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="override this.DeleteUser : string * bool -&gt; bool" Usage="sqlMembershipProvider.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to delete.</param>
        <param name="deleteAllRelatedData">
          <see langword="true" /> to delete data related to the user from the database; <see langword="false" /> to leave data related to the user in the database.</param>
        <summary>Removes a user's membership information from the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the user was deleted; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal <xref:System.Web.Security.Membership> (classe) per rimuovere un utente dal database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET.  
  
 Gli utenti eliminati vengono rimossi solo dall'applicazione configurata <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Se `deleteAllRelatedData` è impostata su `true`, quindi tutti i dati utente archiviati nel database per il <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, o <xref:System.Web.UI.WebControls.WebParts.WebPart> viene eliminata anche la funzionalità di personalizzazione per l'applicazione configurata <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Se l'utente di appartenenza non esiste nel database, e `deleteAllRelatedData` viene `true`, quindi i dati correlati e le informazioni utente archiviate per il <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, o <xref:System.Web.UI.WebControls.WebParts.WebPart> funzionalità di personalizzazione verranno comunque eliminate per il applicazione specificata nel <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> proprietà. Di conseguenza, il <xref:System.Web.Security.SqlMembershipProvider.DeleteUser%2A> metodo può essere utilizzato per eliminare rapidamente le informazioni relative a un utente, anche quando il <xref:System.Web.Security.SqlMembershipProvider> oggetto non viene utilizzato per archiviare le informazioni utente autenticato.  
  
 Spazi iniziali e finali vengono rimossi dal `username` valore del parametro.  
  
   
  
## Examples  
 Esempio di codice seguente elimina l'utente attualmente connesso.  
  
> [!NOTE]
>  Questo esempio viene utilizzato <xref:System.Web.Security.SqlMembershipProvider> per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà del <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to allow users to reset their passwords.</summary>
        <value>
          <see langword="true" /> se il provider di appartenenze supporta la reimpostazione della password. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La reimpostazione della password consente al provider di appartenenza sostituire la password corrente per il nome utente con un nuovo oggetto, in modo casuale password generata. Ciò è particolarmente utile quando le <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> è impostata su <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, come gli utenti non possono recuperare i valori hash delle password.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica l'applicazione <xref:System.Web.Security.SqlMembershipProvider> di reimpostazione della password di istanza e attiva.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to allow users to retrieve their passwords.</summary>
        <value>
          <see langword="true" /> Se il provider di appartenenze supporta il recupero della password; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> è impostata su <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, un utente non sarà in grado di recuperare la propria password esistenti dal database. Il <xref:System.Web.Security.MembershipPasswordFormat.Hashed> formato della password consente la codifica unidirezionale delle password. Le password sono sottoposti ad hashing con un valore salt generato casualmente e rispetto ai valori archiviati nel database per l'autenticazione. Valori hash non possono essere decodificati per recuperare il valore della password originale.  
  
 Se il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> è impostata su <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, e <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> è impostata su `true`, <xref:System.Configuration.Provider.ProviderException> viene generata quando viene inizializzato il provider.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica l'applicazione <xref:System.Web.Security.SqlMembershipProvider> istanza e abilita il recupero della password.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByEmail : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">The email address to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of matched users.</param>
        <summary>Returns a collection of membership users for which the email address field contains the specified email address.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> Restituisce un elenco degli utenti di appartenenza in cui l'indirizzo di posta elettronica contiene una corrispondenza con il parametro fornito `emailToMatch` per l'applicazione configurata <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Il <xref:System.Web.Security.SqlMembershipProvider> esegue la ricerca di un nome utente che corrisponda il `emailToMatch` valore del parametro, utilizzando la clausola LIKE. Caratteri jolly di SQL Server possono essere incluso nel valore del parametro. Ad esempio, se il `emailToMatch` parametro è impostato su "address@example.com", quindi le informazioni degli utenti con l'indirizzo di posta elettronica "address@example.com" viene restituito, se esistente. Se il `emailToMatch` parametro è impostato su "%@example.com", quindi le informazioni degli utenti con l'indirizzo di posta elettronica "address@example.com","address2@example.com","admin@example.com" e così via viene restituito.  
  
 I risultati restituiti da <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> sono limitati dal `pageIndex` e `pageSize` parametri. Il `pageSize` parametro identifica il numero massimo di <xref:System.Web.Security.MembershipUser> oggetti da restituire nella <xref:System.Web.Security.MembershipUserCollection>. Il `pageIndex` parametro identifica la pagina di risultati da restituire, dove 0 indica la prima pagina. Il `totalRecords` parametro è un `out` parametro impostato per il numero totale di utenti di appartenenza per l'applicazione configurata `applicationName`. Ad esempio, se sono presenti 13 utenti per l'applicazione configurata `applicationName`e il `pageIndex` 1 e una `pageSize` pari a 5, il <xref:System.Web.Security.MembershipUserCollection> restituito conterrebbe dal sesto al decimo utente. Il `totalRecords` parametro verrà impostato su 13.  
  
 Spazi iniziali e finali vengono rimossi dal `emailToMatch` valore del parametro.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> metodo per recuperare le informazioni utente di appartenenza e consente di visualizzare i risultati in pagine di dati.  
  
> [!NOTE]
>  Questo esempio viene utilizzata la <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà del <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emailToMatch" /> is longer than 256 characters.  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than one.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByName : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">The user name to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains the total number of matched users.</param>
        <summary>Gets a collection of membership users where the user name contains the specified user name to match.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> Restituisce un elenco degli utenti di appartenenza per il quale il nome utente contiene una corrispondenza con il parametro fornito `usernameToMatch` per l'applicazione configurata <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Il <xref:System.Web.Security.SqlMembershipProvider> esegue la ricerca di un nome utente che corrisponda il `usernameToMatch` valore del parametro, utilizzando la clausola LIKE. Caratteri jolly di SQL Server possono essere inclusi con il valore del parametro. Ad esempio, se il `usernameToMatch` parametro è impostato su "user1", quindi vengono restituite informazioni utente per l'utente con il nome utente "User1", se esistente. Se il `usernameToMatch` parametro è impostato su "user %", le informazioni utente per gli utenti con il nome utente di "user1", "user2", "user_admin" e così via vengono restituiti.  
  
 I risultati restituiti da <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> sono limitati dal `pageIndex` e `pageSize` parametri. Il `pageSize` parametro identifica il numero massimo di <xref:System.Web.Security.MembershipUser> oggetti da restituire nella <xref:System.Web.Security.MembershipUserCollection>. Il `pageIndex` parametro identifica la pagina di risultati da restituire, dove 0 indica la prima pagina. Il `totalRecords` parametro è un `out` parametro impostato per il numero totale di utenti di appartenenza per l'applicazione configurata `applicationName`. Ad esempio, se sono presenti 13 utenti per l'applicazione configurata `applicationName`e il `pageIndex` 1 e una `pageSize` pari a 5, il <xref:System.Web.Security.MembershipUserCollection> restituito conterrebbe dal sesto al decimo utente restituito. Il `totalRecords` parametro verrà impostato su 13.  
  
 Spazi iniziali e finali vengono rimossi dal `usernameToMatch` valore del parametro.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> metodo per recuperare le informazioni utente di appartenenza e consente di visualizzare i risultati in pagine di dati.  
  
> [!NOTE]
>  In questo esempio Usa Security. SqlMembershipProvider per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà del <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("") or is longer than 256 characters.  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public virtual string GeneratePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GeneratePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GeneratePassword" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GeneratePassword () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GeneratePassword();" />
      <MemberSignature Language="F#" Value="abstract member GeneratePassword : unit -&gt; string&#xA;override this.GeneratePassword : unit -&gt; string" Usage="sqlMembershipProvider.GeneratePassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates a random password that is at least 14 characters long.</summary>
        <returns>A random password that is at least 14 characters long.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Membership> classe fornisce un <xref:System.Web.Security.Membership.GeneratePassword%2A> metodo, che genera una password di un oggetto specificato di dimensioni con almeno il numero specificato di caratteri non alfabetici. Il <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> metodo per il <xref:System.Web.Security.SqlMembershipProvider> chiamate il <xref:System.Web.Security.Membership.GeneratePassword%2A> metodo del <xref:System.Web.Security.Membership> classe per recuperare una password casuale da almeno 14 caratteri. Se il <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> proprietà è maggiore di 14, la password restituita sarà la lunghezza specificata nel <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> proprietà.  
  
 In particolare, è possibile chiamare il <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> metodo facendo riferimento il <xref:System.Web.Security.SqlMembershipProvider> direttamente dalla classe il <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe.  
  
 La password generata contiene solo caratteri alfanumerici e i seguenti segni di punteggiatura: `!@#$%^&*()_-+=[{]};:<>|./?`. Nessun carattere di controllo nascosto o non stampabili vengono inclusi nella password generata.  
  
> [!NOTE]
>  La password caso creata il <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> metodo non è garantito da passare all'espressione regolare il <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> proprietà. Tuttavia, la password casuale soddisferà i criteri stabiliti dal <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> e <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente genera una password casuale di 10 caratteri.  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GeneratePasswordcs.aspx#9)]
 [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GeneratePasswordvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.GetAllUsers : int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of users.</param>
        <summary>Gets a collection of all the users in the SQL Server membership database.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> of <see cref="T:System.Web.Security.MembershipUser" /> objects representing all the users in the database for the configured <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal <xref:System.Web.Security.Membership> classe per recuperare le informazioni utente dal database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 I risultati restituiti da <xref:System.Web.Security.SqlMembershipProvider.GetAllUsers%2A> sono limitati dal `pageIndex` e `pageSize` parametri. Il `pageSize` parametro identifica il numero massimo di <xref:System.Web.Security.MembershipUser> oggetti da restituire nella <xref:System.Web.Security.MembershipUserCollection>. Il `pageIndex` parametro identifica la pagina di risultati da restituire, dove 0 indica la prima pagina. Il `totalRecords` parametro è un `out` parametro impostato per il numero totale di utenti di appartenenza per l'applicazione configurata `applicationName`. Ad esempio, se sono presenti 13 utenti per l'applicazione configurata `applicationName`e il `pageIndex` 1 e una `pageSize` pari a 5, il <xref:System.Web.Security.MembershipUserCollection> restituito conterrebbe dal sesto al decimo utente restituito. Il `totalRecords` parametro verrà impostato su 13.  
  
   
  
## Examples  
 L'esempio di codice seguente restituisce un elenco di utenti nelle pagine di dati con un conteggio del numero di utenti attualmente online.  
  
> [!NOTE]
>  Questo esempio viene utilizzata la <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà del <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than one.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public override int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="override this.GetNumberOfUsersOnline : unit -&gt; int" Usage="sqlMembershipProvider.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of users currently accessing the application.</summary>
        <returns>The number of users currently accessing the application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal <xref:System.Web.Security.Membership> classe per recuperare il numero di utenti considerati online dal database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> Restituisce il numero di utenti dell'applicazione corrente la cui data dell'attività e ora dell'ultima è maggiore di data e ora correnti meno il valore della <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> proprietà in minuti.  
  
 Solo gli utenti associati configurati <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> sono inclusi nel conteggio.  
  
   
  
## Examples  
 Esempio di codice seguente restituisce un elenco di utenti con un numero di utenti attualmente online.  
  
> [!NOTE]
>  Questo esempio viene utilizzata la <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà del <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public override string GetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.GetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.GetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to retrieve the password for.</param>
        <param name="passwordAnswer">The password answer for the user.</param>
        <summary>Returns the password for the specified user name from the SQL Server membership database.</summary>
        <returns>The password for the specified user name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal <xref:System.Web.Security.MembershipUser> classe per recuperare la password per un utente dal database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 Se viene fornita una risposta di password errata per il <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> (metodo), il contatore interno che tiene traccia dei tentativi non valido della risposta segreta viene incrementato di uno. Ciò può comportare l'utente viene bloccato e non è possibile accedere finché non viene eliminato lo stato di blocco da una chiamata al <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> metodo. Se viene fornita la password corretta la risposta e l'utente non sia attualmente bloccato, quindi il contatore interno che tiene traccia dei tentativi di risposta segreta non validi viene reimpostato su zero. Per altre informazioni, vedere la <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà.  
  
 È possibile chiamare il <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> metodo direttamente ottenendo innanzitutto un riferimento al <xref:System.Web.Security.SqlMembershipProvider> istanza tramite il <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe.  
  
 Se il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> è impostata su <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, il <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> (metodo) non è possibile recuperare la password. Le password con hash vengono crittografate in modo unidirezionale e non possono essere decrittografate. Se il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> è impostata su <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, e <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> è impostata su `true`, <xref:System.Configuration.Provider.ProviderException> viene generata quando viene inizializzato il provider.  
  
 Spazi iniziali e finali vengono rimossi da tutti i valori di parametro.  
  
   
  
## Examples  
 Esempio di codice seguente recupera la password per un nome utente specificato e lo invia all'utente in un messaggio di posta elettronica.  
  
> [!NOTE]
>  Restituzione di una password in testo non crittografato tramite posta elettronica non è consigliabile per i siti che richiedono un elevato livello di sicurezza. Per i siti con sicurezza elevata, è consigliabile che venga restituito password mediante crittografia, ad esempio SSL.  
  
> [!NOTE]
>  Questo esempio viene chiamato il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config usando il <xref:System.Web.Security.Membership> classe. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà del <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> is invalid.  \- or -  The membership user identified by <paramref name="username" /> is locked out.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" /> is set to <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> is not found in the membership database.  \- or -  An error occurred while retrieving the password from the database.</exception>
        <exception cref="T:System.ArgumentException">One of the parameter values exceeds the maximum allowed length.  \- or -  <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="passwordAnswer" /> is an empty string and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="passwordAnswer" /> is greater than 128 characters.  \- or -  The encoded version of <paramref name="passwordAnswer" /> is greater than 128 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="passwordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the information for a membership user from the data source.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">The unique identifier for the user.</param>
        <param name="userIsOnline">
          <see langword="true" /> to update the last-activity date/time stamp for the specified user; otherwise, <see langword="false" />.</param>
        <summary>Gets the information from the data source for the membership user associated with the specified unique identifier and updates the last activity date/time stamp for the user, if specified.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the user associated with the specified unique identifier. If no user is found in the database for the specified <paramref name="providerUserKey" /> value, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> Recupera le informazioni sull'utente dall'origine dati e crea un <xref:System.Web.Security.MembershipUser> oggetto popolato con i dati restituiti. L'utente viene identificato tramite l'identificatore univoco specificato con il `providerUserKey` parametro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerUserKey" /> is not of type <see cref="T:System.Guid" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to get information for.</param>
        <param name="userIsOnline">
          <see langword="true" /> to update the last activity date/time stamp for the user; <see langword="false" /> to return user information without updating the last activity date/time stamp for the user.</param>
        <summary>Returns information from the SQL Server membership database for a user and provides an option to update the last activity date/time stamp for the user.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the specified user. If no user is found in the database for the specified <paramref name="username" /> value, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal <xref:System.Web.Security.Membership> classe per recuperare le informazioni utente dal database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 Se `userIsOnline` è `true`, indicatore di data/ora ultima attività per l'utente viene aggiornato per la data e ora correnti. Ciò si riflette nel <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> e <xref:System.Web.Security.MembershipUser.IsOnline%2A> delle proprietà e il valore restituito da <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>.  
  
 Spazi iniziali e finali vengono rimossi dal `username` valore del parametro.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.Security.SqlMembershipProvider.GetUser%2A> metodo per determinare la presenza di un utente prima di recuperare la password per l'utente.  
  
> [!NOTE]
>  Questo esempio viene utilizzata la <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà del <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> exceeds 256 characters.  \- or -  <paramref name="username" /> contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public override string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberSignature Language="F#" Value="override this.GetUserNameByEmail : string -&gt; string" Usage="sqlMembershipProvider.GetUserNameByEmail email" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">The email address to search for.</param>
        <summary>Gets the user name associated with the specified email address.</summary>
        <returns>The user name associated with the specified email address. If no match is found, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal <xref:System.Web.Security.Membership> classe con un indirizzo di posta elettronica, viene utilizzato per recuperare un nome utente associato dal database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 Se più di un utente nel database delle appartenenze ha lo stesso indirizzo di posta elettronica, viene restituito il primo nome utente rilevato. È possibile impostare il `requiresUniqueEmail` attributo `true` nel file di configurazione dell'applicazione per garantire che ogni messaggio di posta elettronica indirizzo nel database è univoco.  
  
 Spazi iniziali e finali vengono rimossi dal `email` valore del parametro.  
  
   
  
## Examples  
 Esempio di codice seguente recupera il nome utente per un indirizzo di posta elettronica specificato.  
  
> [!NOTE]
>  Questo esempio viene utilizzata la <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà del <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> exceeds 256 characters.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">More than one user with the same email address exists in the database and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlMembershipProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:System.Web.Security.SqlMembershipProvider" /> instance to initialize.</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the names and values of configuration options for the membership provider.</param>
        <summary>Initializes the SQL Server membership provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo inizializza la <xref:System.Web.Security.SqlMembershipProvider> con la proprietà i valori specificati nel file di configurazione dell'applicazione ASP.NET (Web. config) e non può essere utilizzato direttamente dal codice.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="enablePasswordRetrieval" />, <see langword="enablePasswordReset" />, <see langword="requiresQuestionAndAnswer" />, or <see langword="requiresUniqueEmail" /> attribute is set to a value other than a <see langword="Boolean" />.  \- or -  The <see langword="maxInvalidPasswordAttempts" /> or the <see langword="passwordAttemptWindow" /> attribute is set to a value other than a positive integer.  \- or -  The <see langword="minRequiredPasswordLength" /> attribute is set to a value other than a positive integer, or the value is greater than 128.  \- or -  The <see langword="minRequiredNonalphanumericCharacters" /> attribute is set to a value other than zero or a positive integer, or the value is greater than 128.  \- or -  The value for the <see langword="passwordStrengthRegularExpression" /> attribute is not a valid regular expression.  \- or -  The <see langword="applicationName" /> attribute is set to a value that is greater than 256 characters.  \- or -  The <see langword="passwordFormat" /> attribute specified in the application configuration file is an invalid <see cref="T:System.Web.Security.MembershipPasswordFormat" /> enumeration.  \- or -  The <see langword="passwordFormat" /> attribute is set to <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" /> and the <see langword="enablePasswordRetrieval" /> attribute is set to <see langword="true" /> in the application configuration.  \- or -  The <see langword="passwordFormat" /> attribute is set to <see langword="Encrypted" /> and the  configuration element specifies <see langword="AutoGenerate" /> for the <see langword="decryptionKey" /> attribute.  \- or -  The <see langword="connectionStringName" /> attribute is empty or does not exist in the application configuration.  \- or -  The value of the connection string for the <see langword="connectionStringName" /> attribute value is empty, or the specified <see langword="connectionStringName" /> does not exist in the application configuration file.  \- or -  The value for the <see langword="commandTimeout" /> attribute is set to a value other than zero or a positive integer.  \- or -  The application configuration file for this <see cref="T:System.Web.Security.SqlMembershipProvider" /> instance contains an unrecognized attribute.</exception>
        <exception cref="T:System.Web.HttpException">The current trust level is less than <see langword="Low" />.</exception>
        <exception cref="T:System.InvalidOperationException">The provider has already been initialized prior to the current call to the <see cref="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> method.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public override int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.</summary>
        <value>Numero consentito di tentativi non validi di immissione della password o di risposta alla domanda segreta della password prima che l'utente di appartenenza venga bloccato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> funziona in combinazione con il <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> salvaguardarsi da un'origine indesiderata indovinare la password o della risposta di un utente di appartenenza attraverso ripetuti tentativi. Se il numero di password non valide o di risposte forniti per un utente di appartenenza è maggiore o uguale al valore del <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> entro il numero di minuti specificato dal valore della proprietà di <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> proprietà, quindi l'utente di appartenenza bloccato impostando il <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> proprietà da `true` fino a quando l'utente viene sbloccato con la <xref:System.Web.Security.MembershipUser.UnlockUser%2A> metodo. Se viene fornita una password valida prima di <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> valore viene raggiunto, i contatori che rilevano il numero di tentativi di password e della risposta segreta non validi vengono reimpostati su zero. Se viene fornita una risposta segreta valida prima che il <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> valore viene raggiunto, solo il contatore che tiene traccia del numero di tentativi di risposta segreta non validi viene reimpostato su zero.  
  
 Il <xref:System.Web.Security.SqlMembershipProvider> mantiene separatamente i conteggi di tentativi di password non valida e di tentativi di risposta segreta non valido. Password non valida prova comportare solo il tentativo di password l'incremento del contatore. Non valido della risposta segreta prova comportare solo il risposta segreta l'incremento del contatore.  
  
 Il <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> valore della proprietà è impostato nella configurazione dell'applicazione mediante il `maxInvalidPasswordAttempts` attributo della sezione di configurazione.  
  
 Se il <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> è impostata su `false`, non vengono registrati i tentativi di risposta segreta non valido.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica che l'applicazione utilizza un'istanza del <xref:System.Web.Security.SqlMembershipProvider> e imposta il `maxInvalidPasswordAttempts` attributo a cinque tentativi non validi e `passwordAttemptWindow` su 30 minuti.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public override int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum number of special characters that must be present in a valid password.</summary>
        <value>Numero minimo di caratteri speciali che devono essere presenti in una password valida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> proprietà restituisce il numero minimo di caratteri speciali e non alfabetici che devono essere immessi per creare una password valida per il <xref:System.Web.Security.SqlMembershipProvider> oggetto.  
  
 Il <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> valore della proprietà è impostato nella configurazione dell'applicazione mediante il `minRequiredNonalphanumericCharacters` attributo del [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione.  
  
 Un carattere non alfanumerico è un carattere per il quale il <xref:System.Char.IsLetterOrDigit%2A> metodo `false`.  
  
   
  
## Examples  
 Nell'esempio seguente il [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione nel `system.web` sezione del file Web. config dell'applicazione. Specifica che l'applicazione utilizza un'istanza del <xref:System.Web.Security.SqlMembershipProvider> classe per fornire servizi di appartenenza e imposta il `minRequiredNonalphanumericCharacters` dell'attributo a un carattere.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonalphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public override int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum length required for a password.</summary>
        <value>Lunghezza minima richiesta per una password.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> proprietà ottiene il numero minimo di caratteri che devono essere immessi per creare una password valida per il <xref:System.Web.Security.SqlMembershipProvider> oggetto.  
  
 Il <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> valore della proprietà è impostato nella configurazione dell'applicazione mediante il `minRequiredPasswordLength` attributo del [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione.  
  
   
  
## Examples  
 Nell'esempio seguente il [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione nel `system.web` sezione del file Web. config dell'applicazione. Specifica che l'applicazione utilizza un'istanza del <xref:System.Web.Security.SqlMembershipProvider> classe per fornire servizi di appartenenza e imposta il `minRequiredPasswordLength` attributo sette caratteri.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
    <providers>  
      <add  
        name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        minRequiredPasswordLength="7"  
        />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public override int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time window between which consecutive failed attempts to provide a valid password or password answers are tracked.</summary>
        <value>Le risposte password vengono registrate o l'intervallo di tempo, espresso in minuti, durante i quali consecutivi non riusciti per fornire una password valida. Il valore predefinito è 10 minuti. Se l'intervallo tra il tentativo corrente e l'ultimo tentativo non riuscito è maggiore di <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" /> proprietà impostazione, ogni tentativo viene trattata come se fosse il primo tentativo non riuscito.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà viene utilizzata in combinazione con il <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> proprietà per impedire che un'origine indesiderata indovinare la password o la risposta per la password di un utente di appartenenza attraverso ripetuti tentativi. Quando gli utenti tentano di accedere, modificare la password o reimpostazione della password, solo un determinato numero di tentativi consecutivi consentito all'interno di un intervallo di tempo specificato. La lunghezza dell'intervallo di tempo viene specificata per il <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà, che identifica il numero di minuti consentiti tra tentativi non validi. Se il numero di tentativi consecutivi non riusciti che un utente apporta alla reimpostazione della password è uguale al valore archiviato nella <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> proprietà e il tempo trascorso dall'ultimo tentativo non valido è inferiore al numero di minuti specificato per il <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà, quindi l'utente di appartenenza viene bloccato impostando il <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> proprietà `true`. L'utente può essere sbloccato mediante una chiamata di <xref:System.Web.Security.MembershipUser.UnlockUser%2A> metodo. Se l'intervallo tra il tentativo corrente e l'ultimo tentativo non riuscito è maggiore di <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà impostazione, il tentativo non valido corrente viene conteggiata come prima. Se viene fornita una risposta di password valida prima che venga raggiunto il numero massimo di tentativi non validi consentiti, il numero di tentativi di risposta segreta non valido è impostato su zero. Se viene fornita una password valida prima di non valido consentiti il numero massimo di tentativi viene raggiunto, il numero di tentativi di password non valida e il numero di tentativi di risposta segreta non validi vengono impostati su zero.  
  
 Il <xref:System.Web.Security.SqlMembershipProvider> conta separatamente di tentativi di password non valida e di tentativi di risposta segreta non valido. Password non valida prova comportare solo il tentativo di password l'incremento del contatore. Non valido della risposta segreta prova comportare solo il risposta segreta l'incremento del contatore.  
  
 Il <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> valore della proprietà è impostato nella configurazione dell'applicazione mediante il `passwordAttemptWindow` attributo della sezione di configurazione.  
  
 Se il <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> è impostata su `false`, non vengono registrati i tentativi di risposta segreta non valido.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica che l'applicazione utilizza un'istanza del <xref:System.Web.Security.SqlMembershipProvider> e imposta il `maxInvalidPasswordAttempts` attributo a cinque tentativi non validi e `passwordAttemptWindow` su 30 minuti.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordFormat : System.Web.Security.MembershipPasswordFormat" Usage="System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating the format for storing passwords in the SQL Server membership database.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.Security.MembershipPasswordFormat" />, che indica il formato di archiviazione delle password nel database di SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uso `Hashed` only `Clear` e `Encrypted` non sono protette. `Hashed` le password vengono eseguito l'hashing mediante un algoritmo di hash unidirezionale e un valore salt generato casualmente quando archiviati nel database. Quando una password viene convalidata, viene generato un hash con il valore salt nel database per la verifica. Impossibile recuperare le password con hash. `Encrypted` le password non sono considerate sicuri, come una violazione di sicurezza che consente di visualizzare il contenuto del database possono anche esporre la chiave di crittografia. Ciò significa che le password crittografate è state decrittografate ed esposti.  
  
 Il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> valore viene specificato nella sezione del file Web. config per l'applicazione ASP.NET.  
  
 `Encrypted` e `Hashed` le password vengono crittografate o eseguito l'hashing per impostazione predefinita in base alle informazioni fornite nell'elemento di configurazione. Si noti che se si specifica un valore di `3DES` per il `validation` attributo, o se viene specificato alcun valore, le password con hash verranno sottoposta a hashing usando il <xref:System.Security.Cryptography.SHA1> algoritmo.  
  
 Un algoritmo hash personalizzato può essere definito utilizzando il `hashAlgorithmType` attributo del [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione. Se si sceglie di crittografia, la crittografia di password predefinito Usa AES. È possibile modificare l'algoritmo di crittografia impostando il `decryption` attributo dell'elemento di configurazione. Se si esegue la crittografia delle password, è necessario fornire un valore esplicito per il `decryptionKey` attributo nell'elemento. Il valore predefinito di `AutoGenerate` per il `decryptionKey` attributo non è supportato quando si utilizzano password crittografate con appartenenza ASP.NET.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica l'applicazione <xref:System.Web.Security.SqlMembershipProvider> dell'istanza e imposta il formato della password su `Hashed`.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public override string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the regular expression used to evaluate a password.</summary>
        <value>Espressione regolare usata per valutare una password.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> proprietà ottiene l'espressione regolare utilizzata per valutare la complessità delle password per il <xref:System.Web.Security.SqlMembershipProvider> oggetto.  
  
 Il <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> viene impostata in configurazione dell'applicazione mediante il `passwordStrengthRegularExpression` attributo del [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione.  
  
   
  
## Examples  
 Nell'esempio seguente il [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione nel `system.web` sezione del file Web. config dell'applicazione. Specifica che l'applicazione utilizza un'istanza del <xref:System.Web.Security.SqlMembershipProvider> classe per fornire servizi di appartenenza e imposta il `passwordStrengthRegularExpression` dell'attributo a un'espressione regolare che verifica che la password soddisfi i criteri seguenti:  
  
-   È composta da almeno sette caratteri.  
  
-   Contiene almeno una cifra.  
  
-   Contiene almeno un carattere speciale (non alfanumerico).  
  
 Se la password non soddisfa questi criteri, la password non viene accettata dal provider di appartenenze.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression="@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to require the user to answer a password question for password reset and retrieval.</summary>
        <value>
          <see langword="true" /> Se una risposta per la password è necessaria per la reimpostazione della password e il recupero; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La richiesta di domanda e risposta fornisce un ulteriore livello di sicurezza durante il recupero o la reimpostazione password di un utente. Quando si crea un nome utente, un utente può fornire una domanda e risposta che può essere utilizzato in un secondo momento per recuperare o reimpostare una password dimenticata. Se il <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A> proprietà e il <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> proprietà sono entrambi `false`, il valore della <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> proprietà non è rilevante.  
  
 Per altre informazioni, vedere <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> e <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica l'applicazione <xref:System.Web.Security.SqlMembershipProvider> istanza e lo configura per richiedere una risposta segreta per la reimpostazione della password o il recupero.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public override bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueEmail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueEmail : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to require a unique email address for each user name.</summary>
        <value>
          <see langword="true" /> Se il provider di appartenenze richiede un indirizzo di posta elettronica univoco. in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica il <xref:System.Web.Security.SqlMembershipProvider> istanza e lo configura per richiedere un indirizzo di posta elettronica univoco per ogni nome utente.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      requiresUniqueEmail="true"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public override string ResetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ResetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.ResetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to reset the password for.</param>
        <param name="passwordAnswer">The password answer for the specified user.</param>
        <summary>Resets a user's password to a new, automatically generated password.</summary>
        <returns>The new password for the specified user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal <xref:System.Web.Security.Membership> (classe) per reimpostare la password per un utente nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config) a un nuovo valore generato casualmente. La nuova password viene restituita.  
  
> [!NOTE]
>  La password caso creata il <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> metodo non è garantito da passare all'espressione regolare il <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> proprietà. Tuttavia, la password casuale soddisferà i criteri stabiliti dal <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> e <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> proprietà.  
  
 Il <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> metodo è più comunemente utilizzato quando il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> è impostata su `Hashed`. Se un utente dimentica di impostare una password che viene eseguito l'hashing, la password non può essere recuperata. Tuttavia, il provider può reimpostare la password per una nuova password generata automaticamente se l'utente fornisce la risposta per la password corretta.  
  
 Se viene fornita una risposta di password errata per il <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> (metodo), il contatore interno che tiene traccia dei tentativi di password non valida viene incrementato di uno. Ciò può comportare l'utente viene bloccato e non è possibile accedere finché non viene eliminato lo stato di blocco da una chiamata al <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> metodo. Se viene fornita la password corretta la risposta e l'utente non sia attualmente bloccato, quindi il contatore interno che tiene traccia dei tentativi di risposta segreta non validi viene reimpostato su zero. Per altre informazioni, vedere la <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà.  
  
 È possibile chiamare il <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> metodo direttamente ottenendo innanzitutto un riferimento al <xref:System.Web.Security.SqlMembershipProvider> istanza dal <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. La password generata sarà almeno 14 caratteri o la lunghezza specificata nel <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> proprietà e conterrà il numero di caratteri non alfanumerici specificato nella <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> proprietà. Non è garantito che la password per passare l'espressione regolare contenuta nel <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> proprietà, se ne è stato specificato.  
  
 Spazi iniziali e finali vengono rimossi da tutti i valori di parametro.  
  
   
  
## Examples  
 Esempio di codice seguente Reimposta la password dell'utente e restituisce la nuova password generata automaticamente.  
  
> [!NOTE]
>  Questo esempio viene utilizzata la <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà del <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> is invalid.  \- or -  The user account is currently locked.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" /> is set to <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> is not found in the membership database.  \- or -  The change password action was canceled by a subscriber to the <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> event and the <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> property was <see langword="null" />.  \- or -  An error occurred while retrieving the password from the database.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="passwordAnswer" /> is an empty string, or is longer than 128 characters, and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="passwordAnswer" /> is longer than 128 characters after encoding.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="passwordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
        <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public override bool UnlockUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool UnlockUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnlockUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool UnlockUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.UnlockUser : string -&gt; bool" Usage="sqlMembershipProvider.UnlockUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the membership user to clear the locked-out status for.</param>
        <summary>Clears the user's locked-out status so that the membership user can be validated.</summary>
        <returns>
          <see langword="true" /> if the membership user was successfully unlocked; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gli utenti sono in genere bloccati e non può essere convalidati dal <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> metodo quando il <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> superato all'interno del <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>.  
  
 Spazi iniziali e finali vengono rimossi dal `username` valore del parametro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string, is longer than 256 characters, or contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public override void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="override this.UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="sqlMembershipProvider.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">A <see cref="T:System.Web.Security.MembershipUser" /> object that represents the user to update and the updated information for the user.</param>
        <summary>Updates information about a user in the SQL Server membership database.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal <xref:System.Web.Security.Membership> classe per aggiornare le informazioni utente per un utente nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config). Il <xref:System.Web.Security.MembershipUser.Email%2A>, <xref:System.Web.Security.MembershipUser.Comment%2A>, <xref:System.Web.Security.MembershipUser.IsApproved%2A>, <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>, e <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> i valori delle proprietà sono stati aggiornati per l'utente di appartenenza specificato.  
  
 La lunghezza massima per il <xref:System.Web.Security.MembershipUser.UserName%2A> proprietà è di 256 caratteri. La lunghezza massima per il <xref:System.Web.Security.MembershipUser.Email%2A> proprietà è di 256 caratteri.  
  
 La password per un utente di appartenenza può essere aggiornata usando la <xref:System.Web.Security.SqlMembershipProvider.UpdateUser%2A> metodo. Per aggiornare la password per un utente di appartenenza, usare il <xref:System.Web.Security.MembershipUser.ChangePassword%2A> metodo la <xref:System.Web.Security.MembershipUser> classe.  
  
   
  
## Examples  
 Esempio di codice seguente aggiorna l'indirizzo di posta elettronica per un utente.  
  
> [!NOTE]
>  Questo esempio viene utilizzata la <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà del <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> is <see langword="null" />.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> is <see langword="null" />.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to <see langword="true" />.</exception>
        <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is longer than 256 characters.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is an empty string and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> was not found in the database.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> was equal to an existing email address in the database and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to true.  \- or -  The user update failed.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public override bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="override this.ValidateUser : string * string -&gt; bool" Usage="sqlMembershipProvider.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to validate.</param>
        <param name="password">The password for the specified user.</param>
        <summary>Verifies that the specified user name and password exist in the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the specified username and password are valid; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal <xref:System.Web.Security.Membership> (classe) per convalidare le informazioni utente per un utente nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 Quando un utente è stato convalidato, la data dell'ultima attività e i valori di Accedi Data ultimo vengono aggiornati per la data e ora correnti nel database.  
  
 Se viene fornita una password non corretta di <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> (metodo), il contatore interno che tiene traccia dei tentativi di password non valida viene incrementato di uno. Ciò può comportare l'utente viene bloccato e non è possibile accedere finché non viene eliminato lo stato di blocco da una chiamata al <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> metodo. Se la password corretta viene fornita e l'utente non sia attualmente bloccato, quindi i contatori interni che traccia la password non valida e della risposta segreta tenta vengono reimpostati su zero. Per altre informazioni, vedere la <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà.  
  
 Spazi iniziali e finali vengono rimossi da tutti i valori di parametro.  
  
   
  
## Examples  
 Esempio di codice seguente mostra la pagina di accesso per un'applicazione ASP.NET configurata per l'utilizzo dell'autenticazione form e <xref:System.Web.Security.SqlMembershipProvider>. Se le credenziali utente specificate non sono validi, viene visualizzato un messaggio all'utente. In caso contrario, l'utente viene reindirizzato all'URL richiesto originariamente utilizzando il <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metodo.  
  
> [!NOTE]
>  Questo esempio viene utilizzata la <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà del <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>