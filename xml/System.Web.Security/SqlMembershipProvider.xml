<Type Name="SqlMembershipProvider" FullName="System.Web.Security.SqlMembershipProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6b7b1cb4960fef8b1463c70904078cb547429fb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30552055" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlMembershipProvider : System.Web.Security.MembershipProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlMembershipProvider extends System.Web.Security.MembershipProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlMembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlMembershipProvider&#xA;Inherits MembershipProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMembershipProvider : System::Web::Security::MembershipProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.MembershipProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gestisce l'archiviazione delle informazioni di appartenenza per un'applicazione ASP.NET in un database di SQL Server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe viene utilizzata per la <xref:System.Web.Security.Membership> e <xref:System.Web.Security.MembershipUser> classi per fornire i servizi di appartenenza per un'applicazione ASP.NET utilizza un database di SQL Server. Non è possibile utilizzare un <xref:System.Web.Security.SqlMembershipProvider> senza SQL Server. Quando il computer dispone di SQL Server Express installata con il nome dell'istanza predefinita e istanze utente abilitate, il <xref:System.Web.Security.SqlMembershipProvider> oggetto verrà creato un database denominato `aspnetdb` dell'applicazione `App_Data` directory la prima volta l'applicazione viene eseguito.  
  
 Per creare manualmente il database, eseguire il `Aspnet_regsql.exe` eseguibile, vedere il `%systemroot%\Microsoft.NET\Framework\ versionNumber` cartella e specificare il `-A m` opzione (ad esempio `aspnet_regsql.exe -A m`). Il database creato è denominato Aspnetdb. In alternativa, eseguire `Aspnet_regsql.exe` per attivare la modalità di configurazione GUI e si sceglie di configurare tutte le funzionalità di ASP.NET.  
  
 Se il provider di appartenenze è configurato con una stringa di connessione che utilizza la sicurezza integrata, l'account di processo dell'applicazione ASP.NET deve disporre di diritti per la connessione al database di SQL Server.  
  
 Il file Machine. config definisce un valore predefinito <xref:System.Web.Security.SqlMembershipProvider> istanza denominata `AspNetSqlMembershipProvider` che si connette all'istanza predefinita di SQL Server Express nel computer locale. Se è stato installato SQL Server Express con il nome dell'istanza predefinita oppure è possibile definire un'istanza personalizzata nel file Web. config dell'applicazione ASP.NET, è possibile utilizzare questa istanza del provider.  
  
 Se si imposta la `passwordCompatMode` attributo <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework40>, l'applicazione può utilizzare per l'hashing e opzioni di appartenenza di crittografia che sono stati aggiunti in ASP.NET 4. Tuttavia, se il `passwordCompatMode` attributo è impostato su <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>, solo l'appartenenza di hash e crittografia opzioni da ASP.NET 2.0, ASP.NET 3.5, e può essere utilizzato in ASP.NET 3.5 SP1. Il valore predefinito è <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>. Per ulteriori informazioni, vedere <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato il file Web. config per un'applicazione ASP.NET configurata per utilizzare un <xref:System.Web.Security.SqlMembershipProvider>.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
    </authorization>  
    <membership defaultProvider="SqlProvider"  
      userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          maxInvalidPasswordAttempts="5"  
          passwordAttemptWindow="10" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Security.SqlMembershipProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlMembershipProvider.%23ctor%2A> costruttore viene chiamato da ASP.NET per creare un'istanza di <xref:System.Web.Security.SqlMembershipProvider> classe come specificato nella configurazione per l'applicazione. Questo costruttore non deve essere utilizzato dal codice.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'applicazione per cui archiviare e recuperare informazioni di appartenenza.</summary>
        <value>Nome dell'applicazione per cui archiviare e recuperare le informazioni di appartenenza. Il valore predefinito è il valore della proprietà <see cref="P:System.Web.HttpRequest.ApplicationPath" /> per la proprietà <see cref="P:System.Web.HttpContext.Request" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> viene utilizzato il <xref:System.Web.Security.SqlMembershipProvider> per raggruppare le informazioni utente. Specificando le informazioni utente con un nome dell'applicazione, è possibile archiviare le informazioni per più applicazioni in un singolo database senza che si verifichino conflitti tra nomi utente duplicati. Inoltre, più applicazioni ASP.NET possono utilizzare lo stesso database utente specificando lo stesso valore nel <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> proprietà. Il <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> proprietà può essere impostata a livello di programmazione, o può essere impostata in modo dichiarativo nel file di configurazione per l'applicazione Web con il `applicationName` attributo.  
  
 Se non è stato specificato un valore per il `applicationName` attributo nel file di configurazione per l'applicazione Web, quindi il <xref:System.Web.HttpRequest.ApplicationPath%2A> viene utilizzato il valore della proprietà per la prima richiesta all'applicazione.  
  
> [!CAUTION]
>  Poiché un'istanza del provider di appartenenze predefinito singolo viene utilizzata per tutte le richieste gestite da un <xref:System.Web.HttpApplication> oggetto, è possibile disporre di più richieste contemporaneamente e si tenta di impostare il <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> valore della proprietà. Il <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> proprietà non è thread-safe per più operazioni di scrittura e la modifica di <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> valore della proprietà può causare un comportamento imprevisto per più utenti di un'applicazione. È consigliabile evitare di scrivere codice per consentire agli utenti di impostare il <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> proprietà solo se necessario. Un esempio di un'applicazione in cui l'impostazione di <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> proprietà potrebbe essere necessario un'applicazione amministrativa che gestisce i dati di appartenenza per più applicazioni. Questo tipo di applicazione deve essere un utente singolo e non è un'applicazione Web.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica l'applicazione <xref:System.Web.Security.SqlMembershipProvider> istanza e imposta il <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> a `MyApplication`.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Si è tentato di impostare la proprietà <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> su una stringa vuota o su <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">È stato effettuato un tentativo di impostare la proprietà <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> su una stringa la cui lunghezza supera i 256 caratteri.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public override bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Utente per il quale aggiornare la password.</param>
        <param name="oldPassword">Password corrente dell'utente specificato.</param>
        <param name="newPassword">Nuova password per l'utente specificato.</param>
        <summary>Modifica la password di un utente.</summary>
        <returns>
          <see langword="true" /> se la password è stata aggiornata correttamente. <see langword="false" /> se la vecchia password non è valida, se l'utente è bloccato o se l'utente non esiste nel database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership> classe per aggiornare la password per un utente nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 La lunghezza massima della password è 128 caratteri.  
  
 Se viene fornita una password non corretta di <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> (metodo), il contatore interno che tiene traccia dei tentativi di password non valida viene incrementato di uno. Ciò può causare l'utente viene bloccato e non è possibile accedere finché non viene eliminato lo stato di blocco da una chiamata al <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> metodo. Se viene fornita la password corretta e l'utente non sia attualmente bloccato, quindi i contatori interni che traccia la password non valida-risposta per la password vengono reimpostati su zero. Per ulteriori informazioni, vedere il <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà.  
  
 È possibile chiamare il <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> metodo direttamente ottenendo innanzitutto un riferimento al <xref:System.Web.Security.SqlMembershipProvider> istanza tramite il <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Il <xref:System.Web.Security.Membership.Provider%2A> proprietà espone il `defaultProvider` specificato nel file Web. config per l'applicazione. Provider configurati che non sono il provider predefinito a cui fa riferimento tramite il <xref:System.Web.Security.Membership.Providers%2A> proprietà.  
  
 È inoltre possibile modificare le password utente utilizzando il <xref:System.Web.Security.MembershipUser.ChangePassword%2A> metodo.  
  
 Spazi iniziali e finali vengono rimossi da tutti i valori di parametro.  
  
   
  
## Examples  
 Esempio di codice seguente modifica la password per l'utente specificato.  
  
> [!NOTE]
>  Questo esempio viene utilizzato il <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come un tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà la <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordcs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> è una stringa vuota (""), contiene una virgola o è di lunghezza superiore a 256 caratteri.  
  
 \- oppure -  
  
 <paramref name="oldPassword" /> è una stringa vuota o è di lunghezza superiore a 128 caratteri.  
  
 \- oppure -  
  
 <paramref name="newPassword" /> è una stringa vuota o è di lunghezza superiore a 128 caratteri.  
  
 \- oppure -  
  
 La lunghezza della versione codificata di <paramref name="newPassword" /> è maggiore di 128 caratteri.  
  
 \- oppure -  
  
 L'operazione di cambio password è stata annullata da un sottoscrittore all'evento <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> e la proprietà <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> era <see langword="null" />.  
  
 \- oppure -  
  
 La lunghezza del parametro <paramref name="newPassword" /> è inferiore alla lunghezza minima specificata nella proprietà <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />.  
  
 \- oppure -  
  
 Il numero di caratteri non alfabetici contenuti nel parametro <paramref name="newPassword" /> è inferiore al numero minimo di caratteri non alfabetici specificato nella proprietà <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />.  
  
 \- oppure -  
  
 Il parametro <paramref name="newPassword" /> non supera i criteri dell'espressione regolare definita nella proprietà <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> è <see langword="null" />.  
  
 \- oppure -  
  
 <paramref name="oldPassword" /> è <see langword="null" />.  
  
 \- oppure -  
  
 <paramref name="newPassword" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          Impossibile trovare <paramref name="username" /> nel database.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Si è verificato un errore durante l'impostazione della nuova password nel database.</exception>
        <exception cref="T:System.Exception">Eccezione non gestita.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Utente per cui modificare la domanda e la risposta per la password.</param>
        <param name="password">Password dell'utente specificato.</param>
        <param name="newPasswordQuestion">Nuova domanda per la password per l'utente specificato.</param>
        <param name="newPasswordAnswer">Nuova risposta per la password per l'utente specificato.</param>
        <summary>Aggiorna la domanda e la risposta relative alla password di un utente nel database di appartenenze SQL Server.</summary>
        <returns>
          <see langword="true" /> se l'aggiornamento è stato eseguito correttamente. In caso contrario, <see langword="false" />. Il valore <see langword="false" /> viene restituito anche nel caso in cui il parametro <paramref name="password" /> non è corretto oppure se l'utente è bloccato o non esiste nel database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dalla <xref:System.Web.Security.MembershipUser> classe per aggiornare la domanda segreta e la risposta per un utente nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config). La risposta segreta viene crittografata utilizzando il formato specificato nella <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> proprietà.  
  
 La richiesta di una password segreta offre un ulteriore livello di sicurezza durante il recupero o la reimpostazione delle password di un utente. Quando si crea un nome utente, un utente può fornire una domanda e risposta che può essere utilizzato successivamente per recuperare o reimpostare una password dimenticata. Il <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> metodo aggiorna la domanda segreta e la risposta per un utente di appartenenza.  
  
 Se viene fornita una password non corretta di <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> (metodo), i contatori interni che i tentativi di immissione della password non valida di traccia viene incrementato di uno. Ciò può causare l'utente viene bloccato e non è possibile accedere finché non viene eliminato lo stato di blocco chiamando il <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> metodo. Se viene fornita la password corretta e l'utente non sia attualmente bloccato, quindi i contatori interni che traccia la password non valida-risposta per la password vengono reimpostati su zero. Per ulteriori informazioni, vedere il <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà.  
  
 La lunghezza massima per la domanda segreta è 256 caratteri. La lunghezza massima per la risposta segreta è 128 caratteri.  
  
 Per altre informazioni, vedere <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>, <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> e <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.  
  
 Spazi iniziali e finali vengono rimossi da tutti i valori di parametro.  
  
   
  
## Examples  
 Nell'esempio seguente aggiorna la domanda segreta e la risposta per un utente.  
  
> [!NOTE]
>  Questo esempio viene utilizzato il <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come un tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà la <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordQuestioncs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordQuestionvb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> è una stringa vuota (""), contiene una virgola o è di lunghezza superiore a 256 caratteri.  
  
 \- oppure -  
  
 <paramref name="password" /> è una stringa vuota o è più lunga di 128 caratteri.  
  
 \- oppure -  
  
 <paramref name="newPasswordQuestion" /> è una stringa vuota o è più lunga di 256 caratteri.  
  
 \- oppure -  
  
 <paramref name="newPasswordAnswer" /> è una stringa vuota o è più lunga di 128 caratteri.  
  
 \- oppure -  
  
 La lunghezza della versione codificata di <paramref name="newPasswordAnswer" /> è maggiore di 128 caratteri.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> è <see langword="null" />.  
  
 \- oppure -  
  
 <paramref name="password" /> è <see langword="null" />.  
  
 \- oppure -  
  
 <paramref name="newPasswordQuestion" /> è <see langword="null" /> e <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> è <see langword="true" />.  
  
 \- oppure -  
  
 <paramref name="newPasswordAnswer" /> è <see langword="null" /> e <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> è <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Si è verificato un errore durante la modifica della domanda e della risposta relative alla password nel database.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">Nome utente per il nuovo utente.</param>
        <param name="password">Password per il nuovo utente.</param>
        <param name="email">Indirizzo di posta elettronica del nuovo utente.</param>
        <param name="passwordQuestion">Domanda segreta per il nuovo utente.</param>
        <param name="passwordAnswer">Risposta per la password del nuovo utente.</param>
        <param name="isApproved">Indica se il nuovo utente è o meno approvato per la convalida.</param>
        <param name="providerUserKey">Oggetto <see cref="T:System.Guid" /> che identifica in modo univoco l'utente di appartenenza nel database SQL Server.</param>
        <param name="status">Uno dei valori dell'oggetto <see cref="T:System.Web.Security.MembershipCreateStatus" />, che indica se l'utente è stato creato correttamente.</param>
        <summary>Aggiunge un nuovo utente al database di appartenenze SQL Server.</summary>
        <returns>Oggetto <see cref="T:System.Web.Security.MembershipUser" /> per l'utente appena creato. Se non è stato creato alcun utente, il metodo restituisce il valore <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership> classe per creare un nuovo utente nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET.  
  
 Nuovi utenti vengono identificati con l'applicazione configurata <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Se il <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> è impostata su `true`, e `null` o una stringa vuota ("") viene specificato per il `email` parametro, la creazione dell'utente non riuscirà. La creazione dell'utente avrà inoltre esito negativo se il <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> è impostata su `true` e il valore specificato per il `email` parametro è un duplicato dell'indirizzo di posta elettronica per un utente esistente nel database per l'applicazione configurata <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 La lunghezza massima per il nome utente è 256 caratteri. La lunghezza massima per l'indirizzo di posta elettronica è 256 caratteri. La lunghezza massima per la password in testo non crittografato o dopo che è stato eseguito l'hashing o crittografato è 128 caratteri.  
  
 Altre condizioni che provocano l'errore durante la creazione utente:  
  
-   Il `password` parametro `null`, o una stringa vuota dopo la rimozione.  
  
-   La lunghezza del `password` parametro è minore del valore specificato nella <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> proprietà.  
  
-   Il numero di caratteri non alfabetici il `password` parametro è minore del valore specificato nella <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> proprietà.  
  
-   Il `password` parametro non supera all'espressione regolare di <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> proprietà.  
  
-   Codice personalizzato di convalida della password ha annullato la creazione di utente durante la <xref:System.Web.Security.MembershipProvider.ValidatingPassword> evento.  
  
-   Il <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> proprietà `true` e `passwordAnswer` parametro `null` o una stringa vuota dopo la rimozione.  
  
-   Il parametro `passwordAnswer` è una stringa vuota.  
  
-   Il `passwordAnswer` parametro è più lungo di 128 caratteri.  
  
-   Il <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> proprietà `true` e la domanda segreta è `null` o una stringa vuota dopo la rimozione.  
  
-   Il parametro `passwordQuestion` è una stringa vuota.  
  
-   Il `passwordQuestion` parametro è supera a 256 caratteri.  
  
-   Il `providerUserKey` parametro impostato su un oggetto di un tipo diverso da <xref:System.Guid?displayProperty=nameWithType>.  
  
-   Il `providerUserKey` parametro è un duplicato di una chiave utente esistente.  
  
-   Il `username` parametro è un duplicato di un nome utente esistente.  
  
 Spazi iniziali e finali vengono rimossi da tutti i valori di parametro di stringa.  
  
   
  
## Examples  
 Esempio di codice seguente crea un nuovo utente per un'applicazione ASP.NET configurato per utilizzare l'autenticazione basata su form e <xref:System.Web.Security.SqlMembershipProvider>. Se l'utente non è stato creato correttamente, viene visualizzato un messaggio all'utente. In caso contrario, l'utente viene reindirizzato alla pagina di accesso per l'applicazione.  
  
> [!NOTE]
>  Questo esempio viene chiamato il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` in Web. config file utilizzando il <xref:System.Web.Security.Membership> classe. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come un tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà la <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public override bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Nome dell'utente da eliminare.</param>
        <param name="deleteAllRelatedData">
          <see langword="true" /> per eliminare i dati relativi all'utente dal database. <see langword="false" /> per lasciare i dati relativi all'utente nel database.</param>
        <summary>Rimuove le informazioni di appartenenza di un utente dal database di appartenenze SQL Server.</summary>
        <returns>
          <see langword="true" /> se l'utente è stato eliminato; in caso contrario, <see langword="false" />. Il valore <see langword="false" /> è restituito anche nel caso in cui l'utente non sia presente nel database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership> classe per rimuovere un utente dal database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET.  
  
 Gli utenti eliminati vengono rimossi solo dall'applicazione configurata <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Se `deleteAllRelatedData` è impostato su `true`, tutti i dati utente archiviati nel database per il <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, o <xref:System.Web.UI.WebControls.WebParts.WebPart> viene eliminata anche la funzionalità di personalizzazione per l'applicazione configurata <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Se l'utente di appartenenza non esiste nel database, e `deleteAllRelatedData` è `true`, quindi i dati correlati e le informazioni utente archiviate per il <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, o <xref:System.Web.UI.WebControls.WebParts.WebPart> funzionalità di personalizzazione verranno comunque eliminate per il applicazione specificata nel <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> proprietà. Di conseguenza, il <xref:System.Web.Security.SqlMembershipProvider.DeleteUser%2A> metodo può essere utilizzato per eliminare rapidamente le informazioni relative a un utente, anche quando il <xref:System.Web.Security.SqlMembershipProvider> oggetto non viene utilizzato per archiviare le informazioni utente autenticato.  
  
 Gli spazi iniziali e finali sono rimossi dal valore del parametro `username`.  
  
   
  
## Examples  
 Esempio di codice seguente elimina l'utente attualmente connesso.  
  
> [!NOTE]
>  Questo esempio viene utilizzato <xref:System.Web.Security.SqlMembershipProvider> per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come un tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà la <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> è una stringa vuota (""), contiene una virgola o è di lunghezza superiore a 256 caratteri.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordReset { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il provider di appartenenze di SQL Server è configurato in modo da consentire agli utenti di reimpostare le loro password.</summary>
        <value>
          <see langword="true" /> se il provider di appartenenze supporta la reimpostazione della password. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La reimpostazione della password consente al provider di appartenenza sostituire il corrente password per un nome utente con una nuova password generata casualmente. Ciò è particolarmente utile quando il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> è impostata su <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, come gli utenti non possono recuperare i valori hash delle password.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica l'applicazione <xref:System.Web.Security.SqlMembershipProvider> di reimpostazione della password di istanza e attiva.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il provider di appartenenze di SQL Server è configurato in modo da consentire agli utenti di recuperare le loro password.</summary>
        <value>
          <see langword="true" /> se il provider di appartenenze supporta il recupero della password; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> è impostata su <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, un utente non sarà in grado di recuperare la propria password esistenti dal database. Il <xref:System.Web.Security.MembershipPasswordFormat.Hashed> formato di password consente la codifica unidirezionale delle password. Le password sono sottoposti ad hashing con un valore salt generato casualmente e rispetto ai valori archiviati nel database per l'autenticazione. Valori hash non possono essere decodificati per recuperare il valore della password originale.  
  
 Se il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> è impostata su <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, e <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> è impostato su `true`, <xref:System.Configuration.Provider.ProviderException> viene generata quando viene inizializzato il provider.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica l'applicazione <xref:System.Web.Security.SqlMembershipProvider> istanza e consente il recupero della password.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Indirizzo di posta elettronica da cercare.</param>
        <param name="pageIndex">Indice della pagina di risultati da restituire. <c>pageIndex</c> è in base zero.</param>
        <param name="pageSize">Dimensioni della pagina di risultati da restituire.</param>
        <param name="totalRecords">Numero totale di utenti individuati.</param>
        <summary>Restituisce una raccolta degli utenti di appartenenza per cui il campo relativo all'indirizzo di posta elettronica contiene l'indirizzo di posta elettronica specificato.</summary>
        <returns>Oggetto <see cref="T:System.Web.Security.MembershipUserCollection" /> contenente una pagina di oggetti <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> con inizio alla pagina specificata da <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> Restituisce un elenco degli utenti di appartenenza in cui l'indirizzo di posta elettronica contiene una corrispondenza con il parametro fornito `emailToMatch` per l'applicazione configurata <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Il <xref:System.Web.Security.SqlMembershipProvider> esegue la ricerca di un nome utente corrispondente il `emailToMatch` valore del parametro, utilizzando la clausola LIKE. Caratteri jolly di SQL Server possono essere inclusi nel valore del parametro. Ad esempio, se il `emailToMatch` parametro è impostato su "address@example.com", quindi le informazioni per gli utenti con l'indirizzo di posta elettronica "address@example.com" viene restituito, se presente. Se il `emailToMatch` parametro è impostato su "%@example.com", quindi le informazioni per gli utenti con l'indirizzo di posta elettronica "address@example.com","address2@example.com","admin@example.com" e così via viene restituito.  
  
 I risultati restituiti da <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> sono limitati dal `pageIndex` e `pageSize` parametri. Il `pageSize` parametro identifica il numero massimo di <xref:System.Web.Security.MembershipUser> oggetti per restituire il <xref:System.Web.Security.MembershipUserCollection>. Il `pageIndex` parametro identifica la pagina di risultati da restituire, dove 0 indica la prima pagina. Il `totalRecords` parametro è un `out` parametro impostato sul numero totale degli utenti di appartenenza per l'applicazione configurata `applicationName`. Ad esempio, se sono presenti 13 utenti per l'applicazione configurata `applicationName`e `pageIndex` 1 e un `pageSize` pari a 5, il <xref:System.Web.Security.MembershipUserCollection> restituito conterrebbe dal sesto al decimo utente restituito. Il `totalRecords` parametro viene impostato su 13.  
  
 Gli spazi iniziali e finali sono rimossi dal valore del parametro `emailToMatch`.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> metodo per recuperare le informazioni utente di appartenenza e di visualizzare i risultati in pagine di dati.  
  
> [!NOTE]
>  Questo esempio viene utilizzato il <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come un tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà la <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          La lunghezza di <paramref name="emailToMatch" /> supera i 256 caratteri.  
  
 \- oppure -  
  
 <paramref name="pageIndex" /> è minore di zero.  
  
 \- oppure -  
  
 <paramref name="pageSize" /> è minore di 1.  
  
 \- oppure -  
  
 <paramref name="pageIndex" /> moltiplicato per <paramref name="pageSize" /> più <paramref name="pageSize" /> meno uno supera il valore di <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">Nome utente da cercare.</param>
        <param name="pageIndex">Indice della pagina di risultati da restituire. <c>pageIndex</c> è in base zero.</param>
        <param name="pageSize">Dimensioni della pagina di risultati da restituire.</param>
        <param name="totalRecords">Quando termina, il metodo contiene il numero totale degli utenti individuati.</param>
        <summary>Ottiene una raccolta degli utenti di appartenenza in cui il nome utente contiene il nome specificato di cui verificare la corrispondenza.</summary>
        <returns>Oggetto <see cref="T:System.Web.Security.MembershipUserCollection" /> contenente una pagina di oggetti <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> con inizio alla pagina specificata da <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> Restituisce un elenco degli utenti di appartenenza per il quale il nome utente contiene una corrispondenza con il parametro fornito `usernameToMatch` per l'applicazione configurata <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Il <xref:System.Web.Security.SqlMembershipProvider> esegue la ricerca di un nome utente corrispondente il `usernameToMatch` valore del parametro, utilizzando la clausola LIKE. Caratteri jolly di SQL Server possono essere inclusi con il valore del parametro. Ad esempio, se il `usernameToMatch` parametro è impostato su "user1", quindi vengono restituite informazioni utente per l'utente con il nome utente "User1", se presente. Se il `usernameToMatch` parametro è impostato su "user %", quindi le informazioni utente per gli utenti con il nome utente di "user1", "user2", "user_admin" e così via vengono restituiti.  
  
 I risultati restituiti da <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> sono limitati dal `pageIndex` e `pageSize` parametri. Il `pageSize` parametro identifica il numero massimo di <xref:System.Web.Security.MembershipUser> oggetti per restituire il <xref:System.Web.Security.MembershipUserCollection>. Il `pageIndex` parametro identifica la pagina di risultati da restituire, dove 0 indica la prima pagina. Il `totalRecords` parametro è un `out` parametro impostato sul numero totale degli utenti di appartenenza per l'applicazione configurata `applicationName`. Ad esempio, se sono presenti 13 utenti per l'applicazione configurata `applicationName`e `pageIndex` 1 e un `pageSize` pari a 5, il <xref:System.Web.Security.MembershipUserCollection> restituito conterrebbe dal sesto al decimo utente restituito. Il `totalRecords` parametro viene impostato su 13.  
  
 Gli spazi iniziali e finali sono rimossi dal valore del parametro `usernameToMatch`.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> metodo per recuperare le informazioni utente di appartenenza e di visualizzare i risultati in pagine di dati.  
  
> [!NOTE]
>  In questo esempio Usa Security. SqlMembershipProvider per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come un tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà la <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> è una stringa vuota ("") o è di lunghezza superiore a 256 caratteri.  
  
 \- oppure -  
  
 <paramref name="pageIndex" /> è minore di zero.  
  
 \- oppure -  
  
 <paramref name="pageSize" /> è minore di 1.  
  
 \- oppure -  
  
 <paramref name="pageIndex" /> moltiplicato per <paramref name="pageSize" /> più <paramref name="pageSize" /> meno uno supera il valore di <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public virtual string GeneratePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GeneratePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GeneratePassword" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GeneratePassword () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GeneratePassword();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Genera una password casuale lunga almeno 14 caratteri.</summary>
        <returns>Password casuale lunga almeno 14 caratteri.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Membership> classe fornisce un <xref:System.Web.Security.Membership.GeneratePassword%2A> metodo che genera una password di un oggetto specificato di dimensioni con almeno il numero specificato di caratteri non alfabetici. Il <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> metodo il <xref:System.Web.Security.SqlMembershipProvider> chiamate il <xref:System.Web.Security.Membership.GeneratePassword%2A> metodo la <xref:System.Web.Security.Membership> classe per recuperare una password casuale lunga almeno 14 caratteri. Se il <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> proprietà è maggiore di 14, la password restituita sarà la lunghezza specificata nel <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> proprietà.  
  
 In particolare, è possibile chiamare il <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> metodo facendo riferimento al <xref:System.Web.Security.SqlMembershipProvider> classe direttamente dal <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe.  
  
 La password generata contiene solo caratteri alfanumerici e i seguenti segni di punteggiatura: `!@#$%^&*()_-+=[{]};:<>|./?`. Nessun carattere di controllo nascosto o non stampabili sono inclusi nella password generata.  
  
> [!NOTE]
>  La password casuale creata dal <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> (metodo) non è garantito da passare all'espressione regolare di <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> proprietà. Tuttavia, la password casuale soddisferà i criteri stabiliti dal <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> e <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente genera una password casuale di 10 caratteri.  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GeneratePasswordcs.aspx#9)]
 [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GeneratePasswordvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">Indice della pagina di risultati da restituire. <c>pageIndex</c> è in base zero.</param>
        <param name="pageSize">Dimensioni della pagina di risultati da restituire.</param>
        <param name="totalRecords">Numero totale di utenti.</param>
        <summary>Ottiene un insieme di tutti gli utenti nel database di appartenenze SQL Server.</summary>
        <returns>Insieme <see cref="T:System.Web.Security.MembershipUserCollection" /> di oggetti <see cref="T:System.Web.Security.MembershipUser" /> che rappresentano tutti gli utenti presenti nel database dell'applicazione configurata <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership> classe per recuperare le informazioni utente dal database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 I risultati restituiti da <xref:System.Web.Security.SqlMembershipProvider.GetAllUsers%2A> sono limitati dal `pageIndex` e `pageSize` parametri. Il `pageSize` parametro identifica il numero massimo di <xref:System.Web.Security.MembershipUser> oggetti per restituire il <xref:System.Web.Security.MembershipUserCollection>. Il `pageIndex` parametro identifica la pagina di risultati da restituire, dove 0 indica la prima pagina. Il `totalRecords` parametro è un `out` parametro impostato sul numero totale degli utenti di appartenenza per l'applicazione configurata `applicationName`. Ad esempio, se sono presenti 13 utenti per l'applicazione configurata `applicationName`e `pageIndex` 1 e un `pageSize` pari a 5, il <xref:System.Web.Security.MembershipUserCollection> restituito conterrebbe dal sesto al decimo utente restituito. Il `totalRecords` parametro viene impostato su 13.  
  
   
  
## Examples  
 Esempio di codice seguente restituisce un elenco di utenti nelle pagine di dati con un conteggio del numero di utenti attualmente online.  
  
> [!NOTE]
>  Questo esempio viene utilizzato il <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come un tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà la <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> è minore di zero.  
  
 \- oppure -  
  
 <paramref name="pageSize" /> è minore di 1.  
  
 \- oppure -  
  
 <paramref name="pageIndex" /> moltiplicato per <paramref name="pageSize" /> più <paramref name="pageSize" /> meno uno supera il valore di <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public override int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfUsersOnline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il numero corrente di utenti connessi all'applicazione.</summary>
        <returns>Numero di utenti attualmente connessi all'applicazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership> classe per recuperare il numero di utenti considerati online dal database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> Restituisce il numero di utenti dell'applicazione corrente la cui ultima data e ora attività è maggiore di data e ora correnti meno il valore della <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> proprietà in minuti.  
  
 Solo gli utenti associati configurati <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> sono inclusi nel conteggio.  
  
   
  
## Examples  
 Esempio di codice seguente restituisce un elenco di utenti con un numero di utenti attualmente online.  
  
> [!NOTE]
>  Questo esempio viene utilizzato il <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come un tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà la <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public override string GetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Utente per il quale recuperare la password.</param>
        <param name="passwordAnswer">Risposta segreta per l'utente.</param>
        <summary>Restituisce la password dell'utente specificato nel database di appartenenze SQL Server.</summary>
        <returns>Password per il nome utente specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dalla <xref:System.Web.Security.MembershipUser> classe per recuperare la password per un utente dal database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 Se viene fornita una risposta di password non corretta per il <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> (metodo), il contatore interno che tiene traccia dei tentativi di immissione della risposta non valido viene incrementato di uno. Ciò può causare l'utente viene bloccato e non è possibile accedere finché non viene eliminato lo stato di blocco da una chiamata al <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> metodo. Se viene fornita la password corretta di risposta e l'utente non sia attualmente bloccato, quindi il contatore interno che tiene traccia dei tentativi di risposta per la password non validi viene reimpostato su zero. Per ulteriori informazioni, vedere il <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà.  
  
 È possibile chiamare il <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> metodo direttamente ottenendo innanzitutto un riferimento al <xref:System.Web.Security.SqlMembershipProvider> istanza tramite il <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe.  
  
 Se il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> è impostata su <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> (metodo) non è possibile recuperare la password. Per le password vengono crittografate in modo unidirezionale e non possono essere decrittografate. Se il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> è impostata su <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, e <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> è impostato su `true`, <xref:System.Configuration.Provider.ProviderException> viene generata quando viene inizializzato il provider.  
  
 Spazi iniziali e finali vengono rimossi da tutti i valori di parametro.  
  
   
  
## Examples  
 Esempio di codice seguente consente di recuperare la password per un nome utente specificato e lo invia all'utente un messaggio di posta elettronica.  
  
> [!NOTE]
>  Non è consigliabile restituire una password in testo non crittografato tramite posta elettronica per i siti che richiedono un elevato livello di sicurezza. Per i siti con sicurezza elevata, è consigliabile che venga restituito password mediante crittografia, ad esempio SSL.  
  
> [!NOTE]
>  Questo esempio viene chiamato il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config utilizzando la <xref:System.Web.Security.Membership> classe. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come un tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà la <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> non è valido.  
  
 \- oppure -  
  
 L'utente di appartenenza identificato dal parametro <paramref name="username" /> è bloccato.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" /> è impostato su <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> non è presente nel database di appartenenza.  
  
 \- oppure -  
  
 Si è verificato un errore durante il recupero della password dal database.</exception>
        <exception cref="T:System.ArgumentException">Uno dei valori dei parametri supera la lunghezza massima consentita.  
  
 \- oppure -  
  
 <paramref name="username" /> è una stringa vuota (""), contiene una virgola o è di lunghezza superiore a 256 caratteri.  
  
 \- oppure -  
  
 <paramref name="passwordAnswer" /> è una stringa vuota e la proprietà <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> è <see langword="true" />.  
  
 \- oppure -  
  
 <paramref name="passwordAnswer" /> è maggiore di 128 caratteri.  
  
 \- oppure -  
  
 La lunghezza della versione codificata di <paramref name="passwordAnswer" /> è maggiore di 128 caratteri.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> è <see langword="null" />.  
  
 \- oppure -  
  
 <paramref name="passwordAnswer" /> è <see langword="null" /> e <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> è <see langword="true" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene le informazioni di un utente di appartenenza dall'origine dati.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">Identificatore univoco per l'utente.</param>
        <param name="userIsOnline">
          <see langword="true" /> per aggiornare l'indicatore di ultima data e ora di attività dell'utente specificato; in caso contrario, <see langword="false" />.</param>
        <summary>Ottiene le informazioni dall'origine dati dell'utente di appartenenza associato all'identificatore univoco specificato e aggiorna l'indicatore di ultima data e ora di attività dell'utente, se è stato indicato.</summary>
        <returns>Oggetto <see cref="T:System.Web.Security.MembershipUser" /> che rappresenta l'utente associato all'identificatore univoco specificato. Se nel database non viene individuato alcun nome utente che corrisponda al valore del parametro <paramref name="providerUserKey" /> specificato, viene restituito il valore <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> Recupera le informazioni utente dall'origine dati e crea un <xref:System.Web.Security.MembershipUser> oggetto popolato con i dati restituiti. L'utente viene identificato con l'identificatore univoco specificato con il `providerUserKey` parametro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerUserKey" /> non è di tipo <see cref="T:System.Guid" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Nome dell'utente per cui ottenere informazioni.</param>
        <param name="userIsOnline">
          <see langword="true" /> per aggiornare l'indicatore di ultima data e ora di attività dell'utente; <see langword="false" /> per restituire le informazioni dell'utente senza aggiornare tale indicatore.</param>
        <summary>Restituisce da un database di appartenenze SQL Server le informazioni di un utente e offre la possibilità di aggiornare l'indicatore di ultima data e ora di attività dell'utente.</summary>
        <returns>Oggetto <see cref="T:System.Web.Security.MembershipUser" /> che rappresenta l'utente specificato. Se nel database non viene individuato alcun nome utente che corrisponda al valore del parametro <paramref name="username" /> specificato, viene restituito il valore <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership> classe per recuperare le informazioni utente dal database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 Se `userIsOnline` è `true`, indicatore di data/ora ultima attività per l'utente viene aggiornato per la data e ora correnti. Ciò si riflette nel <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> e <xref:System.Web.Security.MembershipUser.IsOnline%2A> proprietà e il valore restituito da <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>.  
  
 Gli spazi iniziali e finali sono rimossi dal valore del parametro `username`.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.Security.SqlMembershipProvider.GetUser%2A> per determinare se un utente presente prima di recuperare la password per l'utente.  
  
> [!NOTE]
>  Questo esempio viene utilizzato il <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come un tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà la <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> è di lunghezza superiore a 256 caratteri.  
  
 \- oppure -  
  
 <paramref name="username" /> contiene una virgola.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public override string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">Indirizzo di posta elettronica da cercare.</param>
        <summary>Ottiene il nome utente associato all'indirizzo di posta elettronica specificato.</summary>
        <returns>Nome utente associato all'indirizzo di posta elettronica specificato. Se non viene individuato alcun nome utente, il metodo restituisce il valore <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership> classe con un indirizzo di posta elettronica, viene utilizzato per recuperare un nome utente associato dal database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 Se più di un utente nel database delle appartenenze ha lo stesso indirizzo di posta elettronica, viene restituito il primo nome utente rilevato. È possibile impostare il `requiresUniqueEmail` attributo `true` nel file di configurazione dell'applicazione per assicurarsi che ogni messaggio di posta elettronica indirizzo nel database è univoco.  
  
 Gli spazi iniziali e finali sono rimossi dal valore del parametro `email`.  
  
   
  
## Examples  
 Esempio di codice seguente recupera il nome utente per un indirizzo di posta elettronica specificato.  
  
> [!NOTE]
>  Questo esempio viene utilizzato il <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come un tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà la <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> è di lunghezza superiore a 256 caratteri.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Nel database è presente più di un utente con lo stesso indirizzo di posta elettronica e <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> è <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Nome dell'istanza dell'oggetto <see cref="T:System.Web.Security.SqlMembershipProvider" /> da inizializzare.</param>
        <param name="config">Oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> che contiene i nomi e i valori delle opzioni di configurazione per il provider di appartenenze.</param>
        <summary>Inizializza il provider di appartenenze di SQL Server con i valori delle proprietà specificati nel file di configurazione dell'applicazione ASP.NET. Questo metodo non deve essere usato direttamente dal codice.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo inizializza la <xref:System.Web.Security.SqlMembershipProvider> con la proprietà i valori specificati nel file di configurazione dell'applicazione ASP.NET (Web. config) e non deve essere utilizzato direttamente dal codice.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">L'attributo <see langword="enablePasswordRetrieval" />, <see langword="enablePasswordReset" />, <see langword="requiresQuestionAndAnswer" /> o <see langword="requiresUniqueEmail" /> è impostato su un valore il cui tipo è diverso da <see langword="Boolean" />.  
  
 \- oppure -  
  
 L'attributo <see langword="maxInvalidPasswordAttempts" /> o <see langword="passwordAttemptWindow" /> è impostato su un valore diverso da un integer positivo.  
  
 \- oppure -  
  
 L'attributo <see langword="minRequiredPasswordLength" /> è impostato su un valore diverso da un integer positivo o maggiore di 128.  
  
 \- oppure -  
  
 L'attributo <see langword="minRequiredNonalphanumericCharacters" /> è impostato su un valore diverso da zero o da un integer positivo oppure il valore è maggiore di 128.  
  
 \- oppure -  
  
 Il valore dell'attributo <see langword="passwordStrengthRegularExpression" /> non è un'espressione regolare valida.  
  
 \- oppure -  
  
 L'attributo <see langword="applicationName" /> è impostato su un valore con lunghezza superiore a 256 caratteri.  
  
 \- oppure -  
  
 L'attributo <see langword="passwordFormat" /> specificato nel file di configurazione dell'applicazione è un'enumerazione in formato <see cref="T:System.Web.Security.MembershipPasswordFormat" /> non valido.  
  
 \- oppure -  
  
 L'attributo <see langword="passwordFormat" /> è impostato su <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" /> e l'attributo <see langword="enablePasswordRetrieval" /> è impostato su <see langword="true" /> nella configurazione dell'applicazione.  
  
 \- oppure -  
  
 L'attributo <see langword="passwordFormat" /> è impostato su <see langword="Encrypted" /> e l'elemento di configurazione specifica <see langword="AutoGenerate" />per l'attributo <see langword="decryptionKey" />.  
  
 \- oppure -  
  
 L'attributo <see langword="connectionStringName" /> è vuoto o non è presente nel file di configurazione dell'applicazione.  
  
 \- oppure -  
  
 Il valore della stringa di connessione dell'attributo <see langword="connectionStringName" /> è vuoto oppure il valore specificato di <see langword="connectionStringName" /> non è presente nel file di configurazione dell'applicazione.  
  
 \- oppure -  
  
 L'attributo <see langword="commandTimeout" /> è impostato su un valore diverso da zero o da un integer positivo.  
  
 \- oppure -  
  
 Il file di configurazione dell'applicazione per questa istanza dell'oggetto <see cref="T:System.Web.Security.SqlMembershipProvider" /> contiene un attributo non riconosciuto.</exception>
        <exception cref="T:System.Web.HttpException">Il livello di attendibilità è inferiore a <see langword="Low" />.</exception>
        <exception cref="T:System.InvalidOperationException">Il provider è già stato inizializzato prima della chiamata corrente al metodo <see cref="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public override int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero consentito di tentativi non validi di immissione della password o di risposta alla domanda segreta della password prima che l'utente di appartenenza venga bloccato.</summary>
        <value>Numero consentito di tentativi non validi di immissione della password o di risposta alla domanda segreta della password prima che l'utente di appartenenza venga bloccato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> funziona in combinazione con il <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> salvaguardarsi da un'origine indesiderata riesca a indovinare la password o una risposta per la password di un utente di appartenenza attraverso ripetuti tentativi. Se il numero di password non valide o di risposte forniti per un utente di appartenenza è maggiore o uguale al valore del <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> proprietà entro il numero di minuti specificato dal valore della <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> proprietà, quindi l'utente di appartenenza viene bloccato impostando il <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> proprietà `true` finché non viene sbloccato con la <xref:System.Web.Security.MembershipUser.UnlockUser%2A> metodo. Se viene fornita una password valida prima di <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> valore viene raggiunto, i contatori che rilevano il numero di tentativi di password e della risposta segreta non validi vengono reimpostati su zero. Se viene fornita una risposta segreta valida prima che il <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> valore viene raggiunto, solo il contatore che tiene traccia del numero di tentativi di risposta per la password non validi viene reimpostato su zero.  
  
 Il <xref:System.Web.Security.SqlMembershipProvider> mantiene separatamente i conteggi di tentativi di password non valida e non validi di immissione della risposta. Password non valida tenta comporterà solo il contatore dei tentativi di password viene incrementato. Risposta segreta valida tenta comporterà solo il risposta segreta l'incremento del contatore.  
  
 Il <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> valore della proprietà è impostato nella configurazione dell'applicazione mediante il `maxInvalidPasswordAttempts` attributo della sezione di configurazione.  
  
 Se il <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> è impostata su `false`, non vengono registrati i tentativi di immissione della risposta non valido.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica che l'applicazione utilizza un'istanza del <xref:System.Web.Security.SqlMembershipProvider> e imposta il `maxInvalidPasswordAttempts` attributo a cinque tentativi non validi e `passwordAttemptWindow` a 30 minuti.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public override int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero minimo di caratteri speciali che devono essere presenti in una password valida.</summary>
        <value>Numero minimo di caratteri speciali che devono essere presenti in una password valida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> proprietà restituisce il numero minimo di caratteri non alfabetici e speciali che devono essere immessi per creare una password valida per il <xref:System.Web.Security.SqlMembershipProvider> oggetto.  
  
 Il <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> valore della proprietà è impostato nella configurazione dell'applicazione mediante il `minRequiredNonalphanumericCharacters` attributo del [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione.  
  
 Un carattere non alfanumerico è un carattere per il quale il <xref:System.Char.IsLetterOrDigit%2A> restituisce `false`.  
  
   
  
## Examples  
 Nell'esempio seguente il [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione nel `system.web` sezione del file Web. config dell'applicazione. Specifica che l'applicazione utilizza un'istanza di <xref:System.Web.Security.SqlMembershipProvider> classe per fornire servizi di appartenenza e imposta il `minRequiredNonalphanumericCharacters` dell'attributo a un carattere.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonalphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public override int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredPasswordLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la lunghezza minima richiesta per una password.</summary>
        <value>Lunghezza minima richiesta per una password.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> proprietà ottiene il numero minimo di caratteri che devono essere immessi per creare una password valida per il <xref:System.Web.Security.SqlMembershipProvider> oggetto.  
  
 Il <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> valore della proprietà è impostato nella configurazione dell'applicazione mediante il `minRequiredPasswordLength` attributo del [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione.  
  
   
  
## Examples  
 Nell'esempio seguente il [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione nel `system.web` sezione del file Web. config dell'applicazione. Specifica che l'applicazione utilizza un'istanza di <xref:System.Web.Security.SqlMembershipProvider> classe per fornire servizi di appartenenza e imposta il `minRequiredPasswordLength` attributo sette caratteri.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
    <providers>  
      <add  
        name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        minRequiredPasswordLength="7"  
        />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public override int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PasswordAttemptWindow { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'intervallo di tempo in cui vengono registrati i tentativi consecutivi non riusciti di fornire una password valida o le risposte per la password.</summary>
        <value>Intervallo di tempo in minuti in cui vengono registrati i tentativi consecutivi non riusciti di fornire una password valida o le risposte per la password. Il valore predefinito è 10 minuti. Se l'intervallo tra il tentativo corrente e l'ultimo tentativo non riusciti è maggiore dell'impostazione della proprietà <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />, ogni tentativo non riuscito verrà considerato come il primo tentativo non riuscito.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà viene utilizzata in combinazione con la <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> proprietà per impedire che un'origine indesiderata riesca a indovinare la password o la risposta per la password di un utente di appartenenza attraverso ripetuti tentativi. Quando gli utenti tentano di accedere, modificare la password o reimpostazione della password, solo un determinato numero di tentativi consecutivi consentito all'interno di un intervallo di tempo specificato. La lunghezza dell'intervallo di tempo viene specificata per il <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà, che identifica il numero di minuti consentiti tra tentativi non validi. Se il numero di tentativi consecutivi non riusciti di reimpostazione della password è uguale al valore archiviato nel <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> , proprietà e il tempo trascorso dall'ultimo tentativo non valido è inferiore al numero di minuti specificato per il <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà, quindi l'utente di appartenenza viene bloccato impostando il <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> proprietà `true`. L'utente può essere sbloccato mediante una chiamata di <xref:System.Web.Security.MembershipUser.UnlockUser%2A> metodo. Se l'intervallo tra il tentativo corrente e l'ultimo tentativo non riuscito è maggiore di <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà di impostazione, il tentativo non valido corrente viene conteggiata come prima. Se prima che venga raggiunto il numero massimo di tentativi non validi consentiti, viene fornita una risposta password valida, il numero di tentativi non validi di immissione della risposta è impostato su zero. Se viene fornita una password valida prima non valido consentiti il numero massimo di tentativi viene raggiunto il numero di tentativi di password non valida e il numero di tentativi di risposta per la password non validi vengono impostati su zero.  
  
 Il <xref:System.Web.Security.SqlMembershipProvider> conta i tentativi di password non valida e non validi di immissione della risposta separatamente. Password non valida tenta comporterà solo il contatore dei tentativi di password viene incrementato. Risposta segreta valida tenta comporterà solo il risposta segreta l'incremento del contatore.  
  
 Il <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> valore della proprietà è impostato nella configurazione dell'applicazione mediante il `passwordAttemptWindow` attributo della sezione di configurazione.  
  
 Se il <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> è impostata su `false`, non vengono registrati i tentativi di immissione della risposta non valido.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica che l'applicazione utilizza un'istanza del <xref:System.Web.Security.SqlMembershipProvider> e imposta il `maxInvalidPasswordAttempts` attributo a cinque tentativi non validi e `passwordAttemptWindow` a 30 minuti.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica il formato di archiviazione delle password nel database di appartenenze di SQL Server.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.Security.MembershipPasswordFormat" />, che indica il formato di archiviazione delle password nel database di SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare `Hashed` solo `Clear` e `Encrypted` non sono protette. `Hashed` le password vengono eseguito l'hashing mediante un algoritmo di hash unidirezionale e un valore salt generato casualmente quando archiviati nel database. Quando una password viene convalidata, viene eseguito l'hashing con il valore salt nel database per la verifica. Impossibile recuperare le password con hash. `Encrypted` le password non sono considerate sicuri, come una violazione di sicurezza che consente di visualizzare il contenuto del database possono anche esporre la chiave di crittografia. Ciò significa che le password crittografate Impossibile decrittografare ed esposti.  
  
 Il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> sia stato specificato nella sezione del file Web. config per l'applicazione ASP.NET.  
  
 `Encrypted` e `Hashed` le password vengono crittografate o eseguito l'hashing per impostazione predefinita in base alle informazioni fornite nell'elemento di configurazione. Si noti che se si specifica un valore di `3DES` per il `validation` attributo, o se viene specificato alcun valore, le password con hash verranno generato un hash mediante il <xref:System.Security.Cryptography.SHA1> algoritmo.  
  
 Un algoritmo hash personalizzato può essere definito utilizzando il `hashAlgorithmType` attributo del [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione. Se si sceglie di crittografia, la crittografia di password predefinito utilizza AES. È possibile modificare l'algoritmo di crittografia impostando il `decryption` attributo dell'elemento di configurazione. Se si esegue la crittografia delle password, è necessario fornire un valore esplicito per il `decryptionKey` attributo nell'elemento. Il valore predefinito di `AutoGenerate` per il `decryptionKey` attributo non è supportato quando si utilizzano password crittografate con appartenenza ASP.NET.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica l'applicazione <xref:System.Web.Security.SqlMembershipProvider> istanza e imposta il formato della password `Hashed`.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public override string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'espressione regolare usata per valutare una password.</summary>
        <value>Espressione regolare usata per valutare una password.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> proprietà ottiene l'espressione regolare utilizzata per valutare la complessità delle password per il <xref:System.Web.Security.SqlMembershipProvider> oggetto.  
  
 Il <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> proprietà è impostata nella configurazione dell'applicazione mediante il `passwordStrengthRegularExpression` attributo del [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione.  
  
   
  
## Examples  
 Nell'esempio seguente il [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione nel `system.web` sezione del file Web. config dell'applicazione. Specifica che l'applicazione utilizza un'istanza del <xref:System.Web.Security.SqlMembershipProvider> classe per fornire servizi di appartenenza e imposta il `passwordStrengthRegularExpression` dell'attributo a un'espressione regolare che verifica che la password soddisfi i criteri seguenti:  
  
-   È composta da almeno sette caratteri.  
  
-   Contiene almeno una cifra.  
  
-   Contiene almeno un carattere speciale (non alfanumerico).  
  
 Se la password non soddisfa questi criteri, la password non viene accettata dal provider di appartenenze.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression="@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il provider di appartenenze di SQL Server è configurato in modo da richiedere agli utenti di rispondere a una domanda per la password prima di consentire la reimpostazione e il recupero della password.</summary>
        <value>
          <see langword="true" /> se occorre fornire una risposta per la password prima di poter reimpostare o recuperare la password; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La richiesta di una password segreta offre un ulteriore livello di sicurezza durante il recupero o la reimpostazione delle password di un utente. Quando si crea un nome utente, un utente può fornire una domanda e risposta che può essere utilizzato successivamente per recuperare o reimpostare una password dimenticata. Se il <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A> proprietà e <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> proprietà sono entrambi `false`, il valore della <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> proprietà non è rilevante.  
  
 Per altre informazioni, vedere <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> e <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica l'applicazione <xref:System.Web.Security.SqlMembershipProvider> istanza e lo configura per richiedere una risposta segreta per la reimpostazione della password o il recupero.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public override bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueEmail { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il provider di appartenenze di SQL Server è configurato in modo da richiedere che per ogni nome utente esista un unico indirizzo di posta elettronica.</summary>
        <value>
          <see langword="true" /> Se il provider di appartenenze richiede un indirizzo di posta elettronica univoco. in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato l'elemento nel `system.web` sezione del file Web. config per un'applicazione ASP.NET. Specifica il <xref:System.Web.Security.SqlMembershipProvider> istanza e lo configura per richiedere un indirizzo di posta elettronica univoco per ogni nome utente.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      requiresUniqueEmail="true"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public override string ResetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Utente per il quale reimpostare la password.</param>
        <param name="passwordAnswer">Risposta per la password per l'utente specificato.</param>
        <summary>Reimposta la password di un utente su una nuova password generata automaticamente.</summary>
        <returns>Nuova password per l'utente specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership> classe per reimpostare la password per un utente nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config) a un nuovo valore generato casualmente. La nuova password viene restituita.  
  
> [!NOTE]
>  La password casuale creata dal <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> (metodo) non è garantito da passare all'espressione regolare di <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> proprietà. Tuttavia, la password casuale soddisferà i criteri stabiliti dal <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> e <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> proprietà.  
  
 Il <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> metodo è più comunemente utilizzato quando il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> è impostata su `Hashed`. Se un utente dimentica una password che viene eseguito l'hashing, la password non può essere recuperata. Tuttavia, il provider può reimpostare la password per una nuova password generata automaticamente se l'utente fornisce la risposta per la password corretta.  
  
 Se viene fornita una risposta di password non corretta per il <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> (metodo), il contatore interno che tiene traccia dei tentativi di password non valida viene incrementato di uno. Ciò può causare l'utente viene bloccato e non è possibile accedere finché non viene eliminato lo stato di blocco da una chiamata al <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> metodo. Se viene fornita la password corretta di risposta e l'utente non sia attualmente bloccato, quindi il contatore interno che tiene traccia dei tentativi di risposta per la password non validi viene reimpostato su zero. Per ulteriori informazioni, vedere il <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà.  
  
 È possibile chiamare il <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> metodo direttamente ottenendo innanzitutto un riferimento al <xref:System.Web.Security.SqlMembershipProvider> istanza il <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. La password generata sarà almeno 14 caratteri, o la lunghezza specificata nel <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> , proprietà e conterrà il numero di caratteri non alfanumerici specificato nella <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> proprietà. La password non potrebbe superare l'espressione regolare contenuta nel <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> proprietà, se ne è stato specificato.  
  
 Spazi iniziali e finali vengono rimossi da tutti i valori di parametro.  
  
   
  
## Examples  
 Esempio di codice seguente reimposta una password e restituisce la nuova password generata automaticamente.  
  
> [!NOTE]
>  Questo esempio viene utilizzato il <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come un tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà la <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> non è valido.  
  
 \- oppure -  
  
 L'account utente è attualmente bloccato.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" /> è impostato su <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> non è presente nel database di appartenenza.  
  
 \- oppure -  
  
 L'operazione di modifica della password è stata annullata da un sottoscrittore all'evento <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> e la proprietà <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> era <see langword="null" />.  
  
 \- oppure -  
  
 Si è verificato un errore durante il recupero della password dal database.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> è una stringa vuota (""), contiene una virgola o è di lunghezza superiore a 256 caratteri.  
  
 \- oppure -  
  
 <paramref name="passwordAnswer" /> è una stringa vuota o ha una lunghezza superiore a 128 caratteri e <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> è <see langword="true" />.  
  
 \- oppure -  
  
 <paramref name="passwordAnswer" /> ha una lunghezza superiore a 128 caratteri dopo la codifica.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> è <see langword="null" />.  
  
 \- oppure -  
  
 <paramref name="passwordAnswer" /> è <see langword="null" /> e <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> è <see langword="true" />.</exception>
        <exception cref="T:System.Exception">Eccezione non gestita.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public override bool UnlockUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool UnlockUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnlockUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool UnlockUser(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nome dell'utente di appartenenza per cui annullare lo stato di blocco.</param>
        <summary>Annulla lo stato di blocco dell'utente in modo da consentire la convalida dell'utente di appartenenza.</summary>
        <returns>
          <see langword="true" /> se l'utente di appartenenza è stato correttamente sbloccato; in caso contrario, <see langword="false" />. Il valore <see langword="false" /> è restituito anche nel caso in cui l'utente non sia presente nel database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gli utenti sono in genere bloccati e non può essere convalidati dal <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> (metodo) quando il <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> viene superato all'interno di <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>.  
  
 Gli spazi iniziali e finali sono rimossi dal valore del parametro `username`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> è una stringa vuota, è di lunghezza superiore a 256 caratteri o contiene una virgola.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public override void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">Oggetto <see cref="T:System.Web.Security.MembershipUser" /> che rappresenta l'utente da aggiornare e le informazioni aggiornate relative a tale utente.</param>
        <summary>Aggiorna le informazioni riguardanti un utente nel database di appartenenze SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership> classe per aggiornare le informazioni utente per un utente nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config). Il <xref:System.Web.Security.MembershipUser.Email%2A>, <xref:System.Web.Security.MembershipUser.Comment%2A>, <xref:System.Web.Security.MembershipUser.IsApproved%2A>, <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>, e <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> vengono aggiornati i valori delle proprietà per l'utente di appartenenza specificato.  
  
 La lunghezza massima per il <xref:System.Web.Security.MembershipUser.UserName%2A> proprietà è di 256 caratteri. La lunghezza massima per il <xref:System.Web.Security.MembershipUser.Email%2A> proprietà è di 256 caratteri.  
  
 La password per un utente di appartenenza può essere aggiornata usando la <xref:System.Web.Security.SqlMembershipProvider.UpdateUser%2A> metodo. Per aggiornare la password per un utente di appartenenza, utilizzare il <xref:System.Web.Security.MembershipUser.ChangePassword%2A> metodo la <xref:System.Web.Security.MembershipUser> classe.  
  
   
  
## Examples  
 Nell'esempio seguente aggiorna l'indirizzo di posta elettronica per un utente.  
  
> [!NOTE]
>  Questo esempio viene utilizzato il <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come un tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà la <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> è <see langword="null" />.  
  
 \- oppure -  
  
 La proprietà <see cref="P:System.Web.Security.MembershipUser.UserName" /> di <paramref name="user" /> è <see langword="null" />.  
  
 \- oppure -  
  
 La proprietà <see cref="P:System.Web.Security.MembershipUser.Email" /> del parametro <paramref name="user" /> è <see langword="null" /> e la proprietà <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> è impostata su <see langword="true" />.</exception>
        <exception cref="T:System.ArgumentException">La proprietà <see cref="P:System.Web.Security.MembershipUser.UserName" /> del parametro <paramref name="user" /> è una stringa vuota (""), contiene una virgola o è di lunghezza superiore a 256 caratteri.  
  
 \- oppure -  
  
 La proprietà <see cref="P:System.Web.Security.MembershipUser.Email" /> del parametro <paramref name="user" /> presenta una lunghezza maggiore di 256 caratteri.  
  
 \- oppure -  
  
 La proprietà <see cref="P:System.Web.Security.MembershipUser.Email" /> del parametro <paramref name="user" /> è una stringa vuota e la proprietà <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> è impostata su <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La proprietà <see cref="P:System.Web.Security.MembershipUser.UserName" /> del parametro <paramref name="user" /> non è stata individuata nel database.  
  
 \- oppure -  
  
 La proprietà <see cref="P:System.Web.Security.MembershipUser.Email" /> del parametro <paramref name="user" /> è uguale a un indirizzo di posta elettronica già presente nel database e la proprietà <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> è impostata su true.  
  
 \- oppure -  
  
 L'aggiornamento dell'utente non è riuscito.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public override bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nome dell'utente da convalidare.</param>
        <param name="password">Password dell'utente specificato.</param>
        <summary>Verifica che nome utente e password specificati esistano nel database di appartenenze SQL Server.</summary>
        <returns>
          <see langword="true" /> se nome utente e password specificati sono validi; in caso contrario, <see langword="false" />. Il valore <see langword="false" /> è restituito anche nel caso in cui l'utente non sia presente nel database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership> classe per convalidare le informazioni per un utente nel database di SQL Server specificato nel file di configurazione dell'applicazione ASP.NET (Web. config).  
  
 Quando un utente è stato convalidato, la data dell'ultima attività valori e ultimo accesso data vengono aggiornati per la data e ora correnti nel database.  
  
 Se viene fornita una password non corretta di <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> (metodo), il contatore interno che tiene traccia dei tentativi di password non valida viene incrementato di uno. Ciò può causare l'utente viene bloccato e non è possibile accedere finché non viene eliminato lo stato di blocco da una chiamata al <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> metodo. Se viene fornita la password corretta e l'utente non sia attualmente bloccato, quindi i contatori interni che traccia la password non valida-risposta per la password vengono reimpostati su zero. Per ulteriori informazioni, vedere il <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> proprietà.  
  
 Spazi iniziali e finali vengono rimossi da tutti i valori di parametro.  
  
   
  
## Examples  
 Esempio di codice seguente mostra la pagina di accesso per un'applicazione ASP.NET configurata per utilizzare l'autenticazione basata su form e <xref:System.Web.Security.SqlMembershipProvider>. Se le credenziali utente specificate non sono validi, viene visualizzato un messaggio all'utente. In caso contrario, l'utente viene reindirizzato all'URL richiesto originariamente utilizzando il <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metodo.  
  
> [!NOTE]
>  Questo esempio viene utilizzato il <xref:System.Web.Security.Membership> classe per chiamare il <xref:System.Web.Security.SqlMembershipProvider> specificato come il `defaultProvider` nel file Web. config. Se è necessario accedere al provider predefinito come tipo <xref:System.Web.Security.SqlMembershipProvider>, è possibile eseguire il cast di <xref:System.Web.Security.Membership.Provider%2A> proprietà del <xref:System.Web.Security.Membership> classe. Per accedere ad altri provider configurati come un tipo di provider specifici, è possibile accedervi in base al nome configurato con il <xref:System.Web.Security.Membership.Providers%2A> proprietà la <xref:System.Web.Security.Membership> classe ed eseguirne il cast al tipo di provider specifico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>