<Type Name="RegistrationHelperTx" FullName="System.EnterpriseServices.RegistrationHelperTx">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="63975d2a14fa9764055cd753c620fcffb2c5c327" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48751380" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RegistrationHelperTx : System.EnterpriseServices.ServicedComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RegistrationHelperTx extends System.EnterpriseServices.ServicedComponent" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.RegistrationHelperTx" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistrationHelperTx&#xA;Inherits ServicedComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistrationHelperTx sealed : System::EnterpriseServices::ServicedComponent" />
  <TypeSignature Language="F#" Value="type RegistrationHelperTx = class&#xA;    inherit ServicedComponent" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EnterpriseServices.ServicedComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.EnterpriseServices.Transaction(System.EnterpriseServices.TransactionOption.RequiresNew)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The RegistrationHelperTx class has been deprecated.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("c89ac250-e18a-4fc7-abd5-b8897b6a78a5")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.Guid("9e31421c-2f15-4f35-ad20-66fb9d4cd428")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0b8a9-101">Utilizzata dall'infrastruttura .NET Framework per installare e configurare assembly nel catalogo COM+ mantenendo una nuova transazione stabilita.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0b8a9-101">Used by the .NET Framework infrastructure to install and configure assemblies in the COM+ catalog while maintaining a newly established transaction.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b8a9-102">Oggetto <xref:System.EnterpriseServices.TransactionAttribute> viene applicato l'attributo di classe per il <xref:System.EnterpriseServices.RegistrationHelperTx> (classe), con un parametro del <xref:System.EnterpriseServices.TransactionOption.RequiresNew> campo.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-102">A <xref:System.EnterpriseServices.TransactionAttribute> class attribute is applied to the <xref:System.EnterpriseServices.RegistrationHelperTx> class, with a parameter of the <xref:System.EnterpriseServices.TransactionOption.RequiresNew> field.</span></span>  
  
 <span data-ttu-id="0b8a9-103">Questo tipo non dovr√† essere usato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-103">This type does not need to be used directly from your code.</span></span> <span data-ttu-id="0b8a9-104">Usare invece il <xref:System.EnterpriseServices.RegistrationHelper> classe.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-104">Instead, use the <xref:System.EnterpriseServices.RegistrationHelper> class.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.EnterpriseServices.RegistrationHelper" />
    <altmember cref="T:System.EnterpriseServices.ServicedComponent" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistrationHelperTx ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelperTx.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistrationHelperTx();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b8a9-105">Inizializza una nuova istanza della classe <see cref="T:System.EnterpriseServices.RegistrationHelperTx" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-105">Initializes a new instance of the <see cref="T:System.EnterpriseServices.RegistrationHelperTx" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="protected internal override void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelperTx.Activate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Activate();" />
      <MemberSignature Language="F#" Value="override this.Activate : unit -&gt; unit" Usage="registrationHelperTx.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="protected internal override void Deactivate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Deactivate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelperTx.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Deactivate ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Deactivate();" />
      <MemberSignature Language="F#" Value="override this.Deactivate : unit -&gt; unit" Usage="registrationHelperTx.Deactivate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InstallAssembly">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <forInternalUseOnly />
        <summary>
          <span data-ttu-id="0b8a9-106">Installa l'assembly denominato nel catalogo COM+ mediante la semantica transazionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-106">Installs the named assembly in the COM+ catalog using transactional semantics</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InstallAssembly">
      <MemberSignature Language="C#" Value="public void InstallAssembly (string assembly, ref string application, ref string tlb, System.EnterpriseServices.InstallationFlags installFlags, object sync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InstallAssembly(string assembly, string&amp; application, string&amp; tlb, valuetype System.EnterpriseServices.InstallationFlags installFlags, object sync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstallAssembly (assembly As String, ByRef application As String, ByRef tlb As String, installFlags As InstallationFlags, sync As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstallAssembly(System::String ^ assembly, System::String ^ % application, System::String ^ % tlb, System::EnterpriseServices::InstallationFlags installFlags, System::Object ^ sync);" />
      <MemberSignature Language="F#" Value="member this.InstallAssembly : string *  *  * System.EnterpriseServices.InstallationFlags * obj -&gt; unit" Usage="registrationHelperTx.InstallAssembly (assembly, application, tlb, installFlags, sync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="application" Type="System.String" RefType="ref" />
        <Parameter Name="tlb" Type="System.String" RefType="ref" />
        <Parameter Name="installFlags" Type="System.EnterpriseServices.InstallationFlags" />
        <Parameter Name="sync" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="0b8a9-107">Nome file dell'assembly da installare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-107">The file name of the assembly to install.</span>
          </span>
        </param>
        <param name="application">
          <span data-ttu-id="0b8a9-108">Nome dell'applicazione COM+ in cui eseguire l'installazione o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-108">Either the name of the COM+ application to install into or <see langword="null" />.</span>
          </span>
        </param>
        <param name="tlb">
          <span data-ttu-id="0b8a9-109">Nome del file di output dell'utilit√† di esportazione della libreria dei tipi (Tlbexp.exe) o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-109">Either the name of the output Type Library Exporter (Tlbexp.exe) file or <see langword="null" />.</span>
          </span>
        </param>
        <param name="installFlags">
          <span data-ttu-id="0b8a9-110">Combinazione bit per bit dei valori dei flag di installazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-110">A bitwise combination of the installation flags values.</span>
          </span>
        </param>
        <param name="sync">
          <span data-ttu-id="0b8a9-111">Oggetto di sincronizzazione generato mediante l'infrastruttura, in grado di attendere il completamento della configurazione dell'assembly specificato nel catalogo COM+.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-111">A synchronization object generated by the infrastructure that can wait until the specified assembly has been configured in the COM+ catalog.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b8a9-112">Installa l'assembly denominato nel catalogo COM+ mediante la semantica transazionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-112">Installs the named assembly in the COM+ catalog using transactional semantics.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b8a9-113">Il <xref:System.EnterpriseServices.RegistrationHelperTx.InstallAssembly%2A> metodo non deve essere chiamato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-113">The <xref:System.EnterpriseServices.RegistrationHelperTx.InstallAssembly%2A> method does not need to be called directly from your code.</span></span> <span data-ttu-id="0b8a9-114">Chiamare invece il <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> metodo con gli stessi parametri, ad eccezione di sincronizzazione di oggetti.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-114">Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> method with the same parameters except object sync.</span></span>  
  
 <span data-ttu-id="0b8a9-115">Questo metodo richiede al chiamante di disporre di privilegi amministrativi nel computer locale.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-115">This method requires the caller to have administrative privileges on the local computer.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InstallAssembly">
      <MemberSignature Language="C#" Value="public void InstallAssembly (string assembly, ref string application, string partition, ref string tlb, System.EnterpriseServices.InstallationFlags installFlags, object sync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InstallAssembly(string assembly, string&amp; application, string partition, string&amp; tlb, valuetype System.EnterpriseServices.InstallationFlags installFlags, object sync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstallAssembly (assembly As String, ByRef application As String, partition As String, ByRef tlb As String, installFlags As InstallationFlags, sync As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstallAssembly(System::String ^ assembly, System::String ^ % application, System::String ^ partition, System::String ^ % tlb, System::EnterpriseServices::InstallationFlags installFlags, System::Object ^ sync);" />
      <MemberSignature Language="F#" Value="member this.InstallAssembly : string *  * string *  * System.EnterpriseServices.InstallationFlags * obj -&gt; unit" Usage="registrationHelperTx.InstallAssembly (assembly, application, partition, tlb, installFlags, sync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="application" Type="System.String" RefType="ref" />
        <Parameter Name="partition" Type="System.String" />
        <Parameter Name="tlb" Type="System.String" RefType="ref" />
        <Parameter Name="installFlags" Type="System.EnterpriseServices.InstallationFlags" />
        <Parameter Name="sync" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="0b8a9-116">Nome file dell'assembly da installare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-116">The file name of the assembly to install.</span>
          </span>
        </param>
        <param name="application">
          <span data-ttu-id="0b8a9-117">Nome dell'applicazione COM+ in cui eseguire l'installazione o stringa contenente <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-117">Either the name of the COM+ application to install into or a string that contains <see langword="null" />.</span>
          </span>
        </param>
        <param name="partition">
          <span data-ttu-id="0b8a9-118">Nome della partizione o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-118">Either the name of the partition or <see langword="null" />.</span>
          </span>
        </param>
        <param name="tlb">
          <span data-ttu-id="0b8a9-119">Nome del file di output dell'utilit√† di esportazione della libreria dei tipi (Tlbexp.exe) o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-119">Either the name of the output Type Library Exporter (Tlbexp.exe) file or <see langword="null" />.</span>
          </span>
        </param>
        <param name="installFlags">
          <span data-ttu-id="0b8a9-120">Combinazione bit per bit dei valori dei flag di installazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-120">A bitwise combination of the installation flags values.</span>
          </span>
        </param>
        <param name="sync">
          <span data-ttu-id="0b8a9-121">Oggetto di sincronizzazione generato mediante l'infrastruttura, in grado di attendere il completamento della configurazione dell'assembly specificato nel catalogo COM+.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-121">A synchronization object generated by the infrastructure that can wait until the specified assembly has been configured in the COM+ catalog.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b8a9-122">Installa l'assembly denominato nel catalogo COM+ mediante la semantica transazionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-122">Installs the named assembly in the COM+ catalog using transactional semantics.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b8a9-123">Il <xref:System.EnterpriseServices.RegistrationHelperTx.InstallAssembly%2A> metodo non deve essere chiamato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-123">The <xref:System.EnterpriseServices.RegistrationHelperTx.InstallAssembly%2A> method does not need to be called directly from your code.</span></span> <span data-ttu-id="0b8a9-124">Chiamare invece il <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> metodo con gli stessi parametri, ad eccezione di sincronizzazione di oggetti.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-124">Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> method with the same parameters except object sync.</span></span>  
  
 <span data-ttu-id="0b8a9-125">Questo metodo richiede al chiamante di disporre di privilegi amministrativi nel computer locale.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-125">This method requires the caller to have administrative privileges on the local computer.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InstallAssemblyFromConfig">
      <MemberSignature Language="C#" Value="public void InstallAssemblyFromConfig (ref System.EnterpriseServices.RegistrationConfig regConfig, object sync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InstallAssemblyFromConfig(class System.EnterpriseServices.RegistrationConfig&amp; regConfig, object sync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelperTx.InstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstallAssemblyFromConfig (ByRef regConfig As RegistrationConfig, sync As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstallAssemblyFromConfig(System::EnterpriseServices::RegistrationConfig ^ % regConfig, System::Object ^ sync);" />
      <MemberSignature Language="F#" Value="member this.InstallAssemblyFromConfig :  * obj -&gt; unit" Usage="registrationHelperTx.InstallAssemblyFromConfig (regConfig, sync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regConfig" Type="System.EnterpriseServices.RegistrationConfig" RefType="ref" />
        <Parameter Name="sync" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="regConfig">
          <span data-ttu-id="0b8a9-126">Informazioni di configurazione per l'installazione di un assembly nel catalogo COM+.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-126">Configuration information for installing an assembly into the COM+ catalog.</span>
          </span>
        </param>
        <param name="sync">
          <span data-ttu-id="0b8a9-127">Oggetto di sincronizzazione generato mediante l'infrastruttura, che rimane in attesa fino al completamento della configurazione dell'assembly specificato nel catalogo COM+.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-127">A synchronization object generated by the infrastructure that waits until the specified assembly has been configured in the COM+ catalog.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b8a9-128">Installa un assembly specificato nel catalogo COM+ mediante la semantica transazionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-128">Installs a specified assembly in the COM+ catalog using transactional semantics.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b8a9-129">In determinate circostanze, il <xref:System.EnterpriseServices.RegistrationHelperTx.InstallAssemblyFromConfig%2A> metodo viene chiamato dall'interno dell'infrastruttura .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-129">Under certain circumstances, the <xref:System.EnterpriseServices.RegistrationHelperTx.InstallAssemblyFromConfig%2A> method is called from within the .NET Framework infrastructure.</span></span> <span data-ttu-id="0b8a9-130">Non dovr√† essere chiamato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-130">It does not need to be called directly from your code.</span></span> <span data-ttu-id="0b8a9-131">Chiamare invece il <xref:System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="0b8a9-131">Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig%2A> method.</span></span>  
  
 <span data-ttu-id="0b8a9-132">Questo metodo richiede al chiamante di disporre di privilegi amministrativi nel computer locale.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-132">This method requires the caller to have administrative privileges on the local computer.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsInTransaction">
      <MemberSignature Language="C#" Value="public bool IsInTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelperTx.IsInTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInTransaction () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInTransaction();" />
      <MemberSignature Language="F#" Value="member this.IsInTransaction : unit -&gt; bool" Usage="registrationHelperTx.IsInTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b8a9-133">Ottiene un valore che indica se il contesto corrente per l'istanza della classe <see cref="T:System.EnterpriseServices.RegistrationHelperTx" /> √® transazionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-133">Gets a value indicating whether the current context for the <see cref="T:System.EnterpriseServices.RegistrationHelperTx" /> class instance is transactional.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b8a9-134">
            <see langword="true" /> se il contesto corrente per l'istanza della classe <see cref="T:System.EnterpriseServices.RegistrationHelperTx" /> √® transazionale; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-134">
              <see langword="true" /> if the current context for the <see cref="T:System.EnterpriseServices.RegistrationHelperTx" /> class instance is transactional; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b8a9-135">In determinate circostanze, il <xref:System.EnterpriseServices.RegistrationHelperTx.IsInTransaction%2A> metodo viene chiamato dall'interno dell'infrastruttura .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-135">Under certain circumstances, the <xref:System.EnterpriseServices.RegistrationHelperTx.IsInTransaction%2A> method is called from within the .NET Framework infrastructure.</span></span> <span data-ttu-id="0b8a9-136">Non dovr√† essere chiamato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-136">It does not need to be called directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="UninstallAssembly">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <forInternalUseOnly />
        <summary>
          <span data-ttu-id="0b8a9-137">Disinstalla un assembly da un'applicazione COM+ mediante la semantica transazionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-137">Uninstalls an assembly from a COM+ application using transactional semantics.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UninstallAssembly">
      <MemberSignature Language="C#" Value="public void UninstallAssembly (string assembly, string application, object sync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UninstallAssembly(string assembly, string application, object sync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UninstallAssembly (assembly As String, application As String, sync As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UninstallAssembly(System::String ^ assembly, System::String ^ application, System::Object ^ sync);" />
      <MemberSignature Language="F#" Value="member this.UninstallAssembly : string * string * obj -&gt; unit" Usage="registrationHelperTx.UninstallAssembly (assembly, application, sync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="application" Type="System.String" />
        <Parameter Name="sync" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="0b8a9-138">Nome file dell'assembly da disinstallare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-138">The file name of the assembly to uninstall.</span>
          </span>
        </param>
        <param name="application">
          <span data-ttu-id="0b8a9-139">Nome dell'applicazione COM+ che contiene i componenti dell'assembly o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-139">Either the name of the COM+ application that contains the components in the assembly or <see langword="null" />.</span>
          </span>
        </param>
        <param name="sync">
          <span data-ttu-id="0b8a9-140">Oggetto di sincronizzazione generato mediante l'infrastruttura, in grado di attendere il completamento della disinstallazione dell'assembly specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-140">A synchronization object generated by the infrastructure that can wait until the specified assembly has been uninstalled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b8a9-141">Disinstalla un assembly da un'applicazione COM+ mediante la semantica transazionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-141">Uninstalls an assembly from a COM+ application using transactional semantics.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b8a9-142">Il <xref:System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly%2A> metodo non deve essere chiamato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-142">The <xref:System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly%2A> method does not need to be called directly from your code.</span></span> <span data-ttu-id="0b8a9-143">Chiamare invece il <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A> metodo con gli stessi parametri, ad eccezione di sincronizzazione di oggetti.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-143">Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A> method with the same parameters except object sync.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="UninstallAssembly">
      <MemberSignature Language="C#" Value="public void UninstallAssembly (string assembly, string application, string partition, object sync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UninstallAssembly(string assembly, string application, string partition, object sync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UninstallAssembly (assembly As String, application As String, partition As String, sync As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UninstallAssembly(System::String ^ assembly, System::String ^ application, System::String ^ partition, System::Object ^ sync);" />
      <MemberSignature Language="F#" Value="member this.UninstallAssembly : string * string * string * obj -&gt; unit" Usage="registrationHelperTx.UninstallAssembly (assembly, application, partition, sync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="application" Type="System.String" />
        <Parameter Name="partition" Type="System.String" />
        <Parameter Name="sync" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="0b8a9-144">Nome file dell'assembly da disinstallare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-144">The file name of the assembly to uninstall.</span>
          </span>
        </param>
        <param name="application">
          <span data-ttu-id="0b8a9-145">Nome dell'applicazione COM+ che contiene i componenti dell'assembly o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-145">Either the name of the COM+ application that contains the components in the assembly or <see langword="null" />.</span>
          </span>
        </param>
        <param name="partition">
          <span data-ttu-id="0b8a9-146">Nome della partizione o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-146">Either the name of the partition or <see langword="null" />.</span>
          </span>
        </param>
        <param name="sync">
          <span data-ttu-id="0b8a9-147">Oggetto di sincronizzazione generato mediante l'infrastruttura, in grado di attendere il completamento della disinstallazione dell'assembly specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-147">A synchronization object generated by the infrastructure that can wait until the specified assembly has been uninstalled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b8a9-148">Disinstalla un assembly da un'applicazione COM+ mediante la semantica transazionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-148">Uninstalls an assembly from a COM+ application using transactional semantics.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b8a9-149">Il <xref:System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly%2A> metodo non deve essere chiamato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-149">The <xref:System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly%2A> method does not need to be called directly from your code.</span></span> <span data-ttu-id="0b8a9-150">Chiamare invece il <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A> metodo con gli stessi parametri, ad eccezione di sincronizzazione di oggetti.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-150">Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A> method with the same parameters except object sync.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="UninstallAssemblyFromConfig">
      <MemberSignature Language="C#" Value="public void UninstallAssemblyFromConfig (ref System.EnterpriseServices.RegistrationConfig regConfig, object sync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UninstallAssemblyFromConfig(class System.EnterpriseServices.RegistrationConfig&amp; regConfig, object sync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelperTx.UninstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UninstallAssemblyFromConfig (ByRef regConfig As RegistrationConfig, sync As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UninstallAssemblyFromConfig(System::EnterpriseServices::RegistrationConfig ^ % regConfig, System::Object ^ sync);" />
      <MemberSignature Language="F#" Value="member this.UninstallAssemblyFromConfig :  * obj -&gt; unit" Usage="registrationHelperTx.UninstallAssemblyFromConfig (regConfig, sync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regConfig" Type="System.EnterpriseServices.RegistrationConfig" RefType="ref" />
        <Parameter Name="sync" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="regConfig">
          <span data-ttu-id="0b8a9-151">Informazioni sulla configurazione in cui viene specificato un assembly da disinstallare da un'applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-151">Configuration information that specifies an assembly to uninstall from an application.</span>
          </span>
        </param>
        <param name="sync">
          <span data-ttu-id="0b8a9-152">Oggetto di sincronizzazione generato mediante l'infrastruttura, che rimane in attesa fino al completamento della disinstallazione dell'assembly specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-152">A synchronization object generated by the infrastructure that waits until the specified assembly has been uninstalled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b8a9-153">Disinstalla un assembly specificato da un'applicazione COM+ mediante la semantica transazionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b8a9-153">Uninstalls a specified assembly from a COM+ application using transactional semantics.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b8a9-154">In determinate circostanze, il <xref:System.EnterpriseServices.RegistrationHelperTx.UninstallAssemblyFromConfig%2A> metodo viene chiamato dall'interno dell'infrastruttura .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-154">Under certain circumstances, the <xref:System.EnterpriseServices.RegistrationHelperTx.UninstallAssemblyFromConfig%2A> method is called from within the .NET Framework infrastructure.</span></span> <span data-ttu-id="0b8a9-155">Non dovr√† essere chiamato direttamente dal codice.</span><span class="sxs-lookup"><span data-stu-id="0b8a9-155">It does not need to be called directly from your code.</span></span> <span data-ttu-id="0b8a9-156">Chiamare invece il <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="0b8a9-156">Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>