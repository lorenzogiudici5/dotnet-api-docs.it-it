<Type Name="SecurityRoleAttribute" FullName="System.EnterpriseServices.SecurityRoleAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8e2c2084baaee13e1dcf372b3435bd505707300d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30408535" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecurityRoleAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecurityRoleAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.SecurityRoleAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityRoleAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityRoleAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Consente di configurare un ruolo per un'applicazione o un componente. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.EnterpriseServices.SecurityRoleAttribute> per aggiungere ruoli a un'applicazione e associarli a componenti. Quando <xref:System.EnterpriseServices.SecurityRoleAttribute> viene applicato a un assembly nel suo complesso, assicura che il ruolo esiste nella configurazione dell'applicazione (catalogo COM+). È possibile aggiungere i membri del ruolo utilizzando Esplora risorse di COM+.  
  
 Quando applicato a un componente, il <xref:System.EnterpriseServices.SecurityRoleAttribute> assicura che il ruolo esiste nella configurazione dell'applicazione e associa il componente di destinazione con il ruolo.  
  
 Per impostazione predefinita, i ruoli creati non dispongono di membri. Se il <xref:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess%2A> è impostata su `true`, Everyone gruppo di utenti viene automaticamente aggiunto al ruolo. Si tratta di una soluzione ottimale per tutti i ruoli con accesso che sono di un controllo minimo del sistema.  
  
 Ruoli di sicurezza possono essere specificati a livello di componente, per ogni interfaccia e per ogni metodo. Come con altri attributi del metodo, configurazione della protezione non è attualmente condivisa tra la definizione di interfaccia e l'implementazione del metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo attributo per associare un ruolo a un assembly che contiene <xref:System.EnterpriseServices.ServicedComponent> classi.  
  
 [!code-cpp[EnterpriseServices_Security#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Security/CPP/employeeinformation.cpp#3)]
 [!code-csharp[EnterpriseServices_Security#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Security/CS/employeeinformation.cs#3)]
 [!code-vb[EnterpriseServices_Security#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Security/VB/employeeinformation.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.EnterpriseServices.SecurityRoleAttribute" /> e imposta la proprietà <see cref="P:System.EnterpriseServices.SecurityRoleAttribute.Role" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityRoleAttribute (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (role As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityRoleAttribute(System::String ^ role);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">Ruolo di sicurezza per l'applicazione, il componente, l'interfaccia o il metodo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.EnterpriseServices.SecurityRoleAttribute" /> e imposta la proprietà <see cref="P:System.EnterpriseServices.SecurityRoleAttribute.Role" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo attributo per associare un ruolo a un assembly che contiene <xref:System.EnterpriseServices.ServicedComponent> classi.  
  
 [!code-cpp[EnterpriseServices_Security#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Security/CPP/employeeinformation.cpp#3)]
 [!code-csharp[EnterpriseServices_Security#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Security/CS/employeeinformation.cs#3)]
 [!code-vb[EnterpriseServices_Security#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Security/VB/employeeinformation.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityRoleAttribute (string role, bool everyone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string role, bool everyone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (role As String, everyone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityRoleAttribute(System::String ^ role, bool everyone);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="everyone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="role">Ruolo di sicurezza per l'applicazione, il componente, l'interfaccia o il metodo.</param>
        <param name="everyone">
          <see langword="true" /> per richiedere che al ruolo appena creato sia aggiunto il gruppo di utenti Everyone (tutti gli utenti) come utente. In caso contrario, <see langword="false" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.EnterpriseServices.SecurityRoleAttribute" /> e imposta le proprietà <see cref="P:System.EnterpriseServices.SecurityRoleAttribute.Role" /> e <see cref="P:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.SecurityRoleAttribute.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la descrizione del ruolo.</summary>
        <value>Descrizione del ruolo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public string Role { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Role" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.SecurityRoleAttribute.Role" />
      <MemberSignature Language="VB.NET" Value="Public Property Role As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Role { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il ruolo di sicurezza.</summary>
        <value>Ruolo di sicurezza applicato a un'applicazione, un componente, un'interfaccia o un metodo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEveryoneAccess">
      <MemberSignature Language="C#" Value="public bool SetEveryoneAccess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SetEveryoneAccess" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess" />
      <MemberSignature Language="VB.NET" Value="Public Property SetEveryoneAccess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SetEveryoneAccess { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Imposta un valore che indica se aggiungere il gruppo di utenti Everyone (tutti gli utenti) come utente.</summary>
        <value>
          <see langword="true" /> per richiedere che a un ruolo appena creato sia aggiunto il gruppo di utenti Everyone (tutti gli utenti) come utente, senza modificare i ruoli esistenti nell'applicazione. In caso contrario, <see langword="false" /> per non aggiungere il gruppo di utenti Everyone (tutti gli utenti) come utente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare questa proprietà su `false` per non aggiungere Everyone utente gruppo come utente appena creati ruoli. Impostare la proprietà su `true` per richiedere che un ruolo appena creato sia tutti gli utenti aggiunti come utente. I ruoli che esistono già nell'applicazione non vengono modificati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>