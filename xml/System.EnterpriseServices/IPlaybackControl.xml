<Type Name="IPlaybackControl" FullName="System.EnterpriseServices.IPlaybackControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54fcf7590327e9d2356fc883bfae633d190f6a78" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30408885" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPlaybackControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPlaybackControl" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IPlaybackControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPlaybackControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPlaybackControl" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Funzioni in Componenti in coda nella gestione anomala di errori di riproduzione lato server e di errori lato client del meccanismo di recapito Accodamento messaggi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe di eccezione definita per il componente nel catalogo COM+ implementa sia <xref:System.EnterpriseServices.IPlaybackControl> e l'interfaccia per la classe originale. Le implementazioni del metodo dell'interfaccia della classe originale vengono utilizzate per eseguire la gestione delle eccezioni per i metodi non riusciti nella classe stessa. Verranno chiamate dopo <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> o <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> per elaborare le eccezioni per il metodo chiamato in origine.  
  
 Il lettore di componenti in coda chiama i metodi di <xref:System.EnterpriseServices.IPlaybackControl> per informare l'oggetto di gestore di eccezioni che un messaggio sta per essere inseriti nella coda collocando o recapitabili finale. Il lettore di componenti in coda chiama quindi lo stesso metodo nell'oggetto del gestore di eccezioni che non è riuscita nella chiamata al metodo originale. L'oggetto di gestore di eccezioni può implementare un'alternativa, ad esempio, raccogliere le informazioni di diagnosi di problemi o generando un oggetto o un messaggio che informa il client del problema. Se l'applicazione non implementa <xref:System.EnterpriseServices.IPlaybackControl>, il messaggio non elaborabile viene inserito nella coda finale collocando o recapitabili quando il lettore di componenti in coda esaurirà tutti i tentativi.  
  
 Un messaggio non elaborabile è un messaggio non è possibile elaborare per qualche motivo, forse a causa di un problema con il server o un sistema di Accodamento. Viene eseguito il rollback della transazione e il messaggio non elaborabile viene inserito all'inizio della coda. Quando si è rimosso di nuovo il messaggio, la stessa condizione. Questo messaggio può continuare ciclo all'infinito finché non viene effettuata un'operazione per risolvere il problema. Il servizio componenti in coda gestisce il messaggio non elaborabile mediante una serie di tentativi. Dopo diversi tentativi non riusciti, il messaggio viene spostato da una coda in sospeso finale. I messaggi non elaborabili rimangono nella coda in sospeso finché non vengono spostati manualmente utilizzando lo strumento di spostamento dei messaggi di componenti in coda.  
  
 La situazione di messaggi non elaborabili può essere risolto anche a livello di programmazione, utilizzando il <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> metodo, che informa l'autore dei componenti lato server che tutti i tentativi di riprodurre l'attivazione rinviata non sono riusciti.  
  
 Se si individua un messaggio non elaborabile, potrebbe essere in grado di risolvere rapidamente la causa del problema. Ad esempio, se il server era offline per qualche motivo, è possibile riportare online il server. Se è possibile risolvere rapidamente il problema, è possibile generare automaticamente un'altra transazione che notifica il richiedente che non è stata eseguita la transazione. Il richiedente può quindi rendere una transazione di compensazione che inverte l'effetto di una transazione che è già stato eseguito il commit.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FinalClientRetry">
      <MemberSignature Language="C#" Value="public void FinalClientRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalClientRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalClientRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalClientRetry();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Informa il componente per la gestione delle eccezioni lato client che tutti i tentativi di Accodamento messaggi di recapitare il messaggio al server sono stati rifiutati e che il messaggio è finito nella coda messaggi non recapitabili relativi alle transazioni lato client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando i messaggi arrivano nella coda recapitabili Xact, COM+ tenta di richiamare un gestore di eccezioni lato client correlato alla classe server per recapitare la notifica. Tale scopo, chiamare prima il metodo <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>, quindi chiamare la versione di gestione delle eccezioni del metodo non riuscito nell'oggetto del gestore di eccezioni. Questo metodo può quindi richiedere un'azione di eccezione, ad esempio la registrazione dell'errore, l'invio di un messaggio di posta elettronica all'amministratore o agire sul lato client compensazione (invertendo l'effetto di una transazione precedente). Se il metodo di eccezione non viene completato, il messaggio viene lasciato la coda non recapitabili Xact.  
  
 La coda non recapitabili Xact può essere visualizzato in Esplora risorse di Microsoft Message Queue (MSMQ).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalServerRetry">
      <MemberSignature Language="C#" Value="public void FinalServerRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalServerRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalServerRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalServerRetry();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Informa l'implementazione della classe di eccezioni lato server che tutti i tentativi di riprodurre l'attivazione rinviata sul server non sono riusciti e che il messaggio verrà spostato nella coda in sospeso finale.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando i messaggi arrivano nella coda recapitabili Xact, COM+ tenta di richiamare un gestore di eccezioni lato server correlato alla classe server per recapitare la notifica. Tale scopo, chiamare prima il metodo <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>, quindi chiamare la versione del metodo non riuscito nell'oggetto di gestore di eccezioni di gestione delle eccezioni. Questo metodo può quindi richiedere un'azione di eccezione, ad esempio la registrazione dell'errore, l'invio di un messaggio di posta elettronica all'amministratore o agire sul lato client compensazione (invertendo l'effetto di una transazione precedente). L'oggetto server deve assicurarsi di completare la transazione. In caso contrario, è necessario intervenire manualmente per rielaborare il messaggio. Se il metodo di eccezione non viene completato, il messaggio viene spostato dalla coda di attesa finale.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>