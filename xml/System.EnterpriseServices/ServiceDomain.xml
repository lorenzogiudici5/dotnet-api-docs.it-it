<Type Name="ServiceDomain" FullName="System.EnterpriseServices.ServiceDomain">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a5b9fb677db63a2b92f36b41c91ebb70cd4c0c3f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30408165" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ServiceDomain" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceDomain extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ServiceDomain" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceDomain" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceDomain sealed" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Consente di eseguire nel proprio contesto un segmento di codice, identificato da <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> e <see cref="M:System.EnterpriseServices.ServiceDomain.Leave" />, che si comporta come se si trattasse di un metodo chiamato su un oggetto creato all'interno del contesto. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> e <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> metodi vengono utilizzati insieme per racchiudere il codice che può quindi utilizzare i servizi COM+. Il codice racchiuso tra le chiamate a <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> e <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> viene eseguito nel proprio contesto e si comporta come se fosse un metodo che viene chiamato su un oggetto creato all'interno del contesto. Il <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> e <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> coppie possono essere annidate. È responsabilità dell'utente per assicurarsi che le coppie di chiamate sono bilanciate in modo che ogni chiamata a <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> corrisponde a una precedente chiamata a <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public static void Enter (System.EnterpriseServices.ServiceConfig cfg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Enter(class System.EnterpriseServices.ServiceConfig cfg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Enter (cfg As ServiceConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Enter(System::EnterpriseServices::ServiceConfig ^ cfg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cfg" Type="System.EnterpriseServices.ServiceConfig" />
      </Parameters>
      <Docs>
        <param name="cfg">Oggetto <see cref="T:System.EnterpriseServices.ServiceConfig" /> che contiene le informazioni di configurazione per i servizi da utilizzare all'interno del codice racchiuso.</param>
        <summary>Crea il contesto specificato dall'oggetto <see cref="T:System.EnterpriseServices.ServiceConfig" /> e lo inserisce nello stack di contesto facendolo diventare il contesto corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> Crea un contesto configurato come specificato da di <xref:System.EnterpriseServices.ServiceConfig> oggetto passato come il `cfg` parametro. Criteri su lati client e server vengono quindi generati come se fosse una chiamata al metodo. Il nuovo contesto viene quindi inserito in uno stack di contesto e diventa il contesto corrente. Grazie all'efficiente progettazione e perché nessun thread si ricorre al marshalling, utilizzando <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> e <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> comporta in modo significativo riduzione del sovraccarico rispetto a una chiamata al metodo equivalente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          La classe <see cref="T:System.EnterpriseServices.ServiceConfig" /> non è supportata nella piattaforma corrente.</exception>
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public static System.EnterpriseServices.TransactionStatus Leave ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.EnterpriseServices.TransactionStatus Leave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Leave () As TransactionStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::EnterpriseServices::TransactionStatus Leave();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Genera i criteri lato server, quindi quelli lato client, nel caso in cui venisse restituita una chiamata al metodo. Il contesto corrente viene quindi estratto dallo stack di contesto e il contesto in esecuzione durante la chiamata a <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> diventa il contesto corrente.</summary>
        <returns>Uno dei valori di <see cref="T:System.EnterpriseServices.TransactionStatus" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          La classe <see cref="T:System.EnterpriseServices.ServiceConfig" /> non è supportata nella piattaforma corrente.</exception>
      </Docs>
    </Member>
  </Members>
</Type>