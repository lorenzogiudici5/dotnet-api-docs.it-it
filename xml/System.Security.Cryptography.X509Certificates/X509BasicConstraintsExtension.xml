<Type Name="X509BasicConstraintsExtension" FullName="System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c38504772725684a6a50aff83538d812c063f888" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52595366" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class X509BasicConstraintsExtension : System.Security.Cryptography.X509Certificates.X509Extension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509BasicConstraintsExtension extends System.Security.Cryptography.X509Certificates.X509Extension" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class X509BasicConstraintsExtension&#xA;Inherits X509Extension" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509BasicConstraintsExtension sealed : System::Security::Cryptography::X509Certificates::X509Extension" />
  <TypeSignature Language="F#" Value="type X509BasicConstraintsExtension = class&#xA;    inherit X509Extension" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.X509Certificates.X509Extension</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definisce i vincoli impostati per un certificato. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe fornisce proprietà che definiscono i vincoli di base impostate per un certificato.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come aprire l'archivio certificati personali dell'utente e visualizzare informazioni su ogni certificato nell'archivio.  Questo esempio viene usato il <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> classe per visualizzare le informazioni.  
  
 [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CS/sample.cs#1)]
 [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509BasicConstraintsExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509BasicConstraintsExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come aprire l'archivio certificati personali dell'utente e visualizzare informazioni su ogni certificato nell'archivio.  Questo esempio viene usato il <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> classe per visualizzare le informazioni.  
  
 [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CS/sample.cs#1)]
 [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509BasicConstraintsExtension (System.Security.Cryptography.AsnEncodedData encodedBasicConstraints, bool critical);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.AsnEncodedData encodedBasicConstraints, bool critical) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encodedBasicConstraints As AsnEncodedData, critical As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509BasicConstraintsExtension(System::Security::Cryptography::AsnEncodedData ^ encodedBasicConstraints, bool critical);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension : System.Security.Cryptography.AsnEncodedData * bool -&gt; System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" Usage="new System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension (encodedBasicConstraints, critical)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encodedBasicConstraints" Type="System.Security.Cryptography.AsnEncodedData" />
        <Parameter Name="critical" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encodedBasicConstraints">Dati codificati da utilizzare per creare l'estensione.</param>
        <param name="critical">
          <see langword="true" /> se l'estensione è critica; in caso contrario, <see langword="false" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" /> utilizzando un oggetto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> e un valore che indica se l'estensione è critica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore, se le informazioni per creare un'estensione sono già in un <xref:System.Security.Cryptography.AsnEncodedData> oggetto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509BasicConstraintsExtension (bool certificateAuthority, bool hasPathLengthConstraint, int pathLengthConstraint, bool critical);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool certificateAuthority, bool hasPathLengthConstraint, int32 pathLengthConstraint, bool critical) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificateAuthority As Boolean, hasPathLengthConstraint As Boolean, pathLengthConstraint As Integer, critical As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509BasicConstraintsExtension(bool certificateAuthority, bool hasPathLengthConstraint, int pathLengthConstraint, bool critical);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension : bool * bool * int * bool -&gt; System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" Usage="new System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension (certificateAuthority, hasPathLengthConstraint, pathLengthConstraint, critical)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificateAuthority" Type="System.Boolean" />
        <Parameter Name="hasPathLengthConstraint" Type="System.Boolean" />
        <Parameter Name="pathLengthConstraint" Type="System.Int32" />
        <Parameter Name="critical" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="certificateAuthority">
          <see langword="true" /> se il certificato appartiene a un'autorità di certificazione; in caso contrario, <see langword="false" />.</param>
        <param name="hasPathLengthConstraint">
          <see langword="true" /> se per il certificato esiste un numero limite di livelli di percorso consentiti; in caso contrario, <see langword="false" />.</param>
        <param name="pathLengthConstraint">Numero di livelli consentiti nel percorso di un certificato.</param>
        <param name="critical">
          <see langword="true" /> se l'estensione è critica; in caso contrario, <see langword="false" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" />. I parametri specificano un valore che indica se un certificato appartiene a un'autorità di certificazione, un valore che indica se per il certificato esiste un numero limite di livelli di percorso consentiti, il numero di livelli consentiti per il percorso del certificato e un valore che indica se l'estensione è critica.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateAuthority">
      <MemberSignature Language="C#" Value="public bool CertificateAuthority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CertificateAuthority" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CertificateAuthority As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CertificateAuthority { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CertificateAuthority : bool" Usage="System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se un certificato appartiene a un'autorità di certificazione.</summary>
        <value>
          <see langword="true" /> se il certificato appartiene a un'autorità di certificazione; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa proprietà per determinare se il certificato è un certificato di autorità (CA).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come aprire l'archivio certificati personali dell'utente e visualizzare informazioni su ogni certificato nell'archivio.  Questo esempio viene usato il <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> classe per visualizzare le informazioni.  
  
 [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CS/sample.cs#1)]
 [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public override void CopyFrom (System.Security.Cryptography.AsnEncodedData asnEncodedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFrom(class System.Security.Cryptography.AsnEncodedData asnEncodedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFrom(System::Security::Cryptography::AsnEncodedData ^ asnEncodedData);" />
      <MemberSignature Language="F#" Value="override this.CopyFrom : System.Security.Cryptography.AsnEncodedData -&gt; unit" Usage="x509BasicConstraintsExtension.CopyFrom asnEncodedData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asnEncodedData" Type="System.Security.Cryptography.AsnEncodedData" />
      </Parameters>
      <Docs>
        <param name="asnEncodedData">Dati codificati da utilizzare per creare l'estensione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" /> utilizzando un oggetto <see cref="T:System.Security.Cryptography.AsnEncodedData" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore, se le informazioni per creare un'estensione sono già in un <xref:System.Security.Cryptography.AsnEncodedData> oggetto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPathLengthConstraint">
      <MemberSignature Language="C#" Value="public bool HasPathLengthConstraint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPathLengthConstraint" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPathLengthConstraint As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPathLengthConstraint { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPathLengthConstraint : bool" Usage="System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se per un certificato esiste un numero limite di livelli di percorso consentiti.</summary>
        <value>
          <see langword="true" /> se per il certificato esiste un numero limite di livelli di percorso consentiti; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'autorità di certificazione può limitare il numero di livelli in un percorso di certificato. Questa proprietà indica se il certificato dispone di questa restrizione. Se questo valore è `true`, è possibile usare il <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint%2A> proprietà per determinare il numero di livelli consentiti.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come aprire l'archivio certificati personali dell'utente e visualizzare informazioni su ogni certificato nell'archivio.  Questo esempio viene usato il <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> classe per visualizzare le informazioni.  
  
 [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CS/sample.cs#1)]
 [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Non è possibile decodificare l'estensione.</exception>
      </Docs>
    </Member>
    <Member MemberName="PathLengthConstraint">
      <MemberSignature Language="C#" Value="public int PathLengthConstraint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PathLengthConstraint" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathLengthConstraint As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PathLengthConstraint { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PathLengthConstraint : int" Usage="System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di livelli consentiti nel percorso di un certificato.</summary>
        <value>Numero intero che indica il numero di livelli consentiti nel percorso di un certificato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se un certificato ha un vincolo al numero di livelli di percorso consentiti, questa proprietà indica il numero di livelli consentito.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come aprire l'archivio certificati personali dell'utente e visualizzare informazioni su ogni certificato nell'archivio.  Questo esempio viene usato il <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> classe per visualizzare le informazioni.  
  
 [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CS/sample.cs#1)]
 [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Non è possibile decodificare l'estensione.</exception>
      </Docs>
    </Member>
  </Members>
</Type>