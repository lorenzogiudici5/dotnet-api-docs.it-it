<Type Name="OracleCommand" FullName="System.Data.OracleClient.OracleCommand">
  <TypeSignature Language="C#" Value="public sealed class OracleCommand : System.Data.Common.DbCommand, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommand extends System.Data.Common.DbCommand implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommand sealed : System::Data::Common::DbCommand, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("OracleCommand has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2ed64-101">Rappresenta un'istruzione SQL o una stored procedure da eseguire su un database.</span><span class="sxs-lookup"><span data-stu-id="2ed64-101">Represents an SQL statement or stored procedure to execute against a database.</span></span> <span data-ttu-id="2ed64-102">Questa classe non può essere ereditata.</span><span class="sxs-lookup"><span data-stu-id="2ed64-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-103">Questo tipo è deprecato e verrà rimossa in una futura versione di .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="2ed64-103">This type is deprecated and will be removed in a future version of the .NET Framework.</span></span> <span data-ttu-id="2ed64-104">Per ulteriori informazioni, vedere [Oracle e ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span><span class="sxs-lookup"><span data-stu-id="2ed64-104">For more information, see [Oracle and ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span></span>  
  
 <span data-ttu-id="2ed64-105">La <xref:System.Data.OracleClient.OracleCommand> classe fornisce i metodi seguenti per l'esecuzione di comandi su un'origine dati:</span><span class="sxs-lookup"><span data-stu-id="2ed64-105">The <xref:System.Data.OracleClient.OracleCommand> class provides the following methods for executing commands against a data source:</span></span>  
  
|<span data-ttu-id="2ed64-106">Elemento</span><span class="sxs-lookup"><span data-stu-id="2ed64-106">Item</span></span>|<span data-ttu-id="2ed64-107">Descrizione</span><span class="sxs-lookup"><span data-stu-id="2ed64-107">Description</span></span>|  
|----------|-----------------|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>|<span data-ttu-id="2ed64-108">Esegue i comandi che restituiscono righe.</span><span class="sxs-lookup"><span data-stu-id="2ed64-108">Executes commands that return rows.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>|<span data-ttu-id="2ed64-109">Esegue un'istruzione SQL nella proprietà <xref:System.Data.OracleClient.OracleCommand.Connection%2A> e restituisce il numero di righe modificate.</span><span class="sxs-lookup"><span data-stu-id="2ed64-109">Executes an SQL statement against the <xref:System.Data.OracleClient.OracleCommand.Connection%2A> and returns the number of rows affected.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>|<span data-ttu-id="2ed64-110">Esegue i comandi, ad esempio le istruzioni SQL INSERT, DELETE, UPDATE e SET.</span><span class="sxs-lookup"><span data-stu-id="2ed64-110">Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>|<span data-ttu-id="2ed64-111">Recupera un valore singolo, ad esempio, un valore aggregato, da un database come tipo di dati .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="2ed64-111">Retrieves a single value (for example, an aggregate value) from a database as a .NET Framework data type.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>|<span data-ttu-id="2ed64-112">Recupera un valore singolo, ad esempio, un valore aggregato, da un database come un tipo di dati specifica di Oracle.</span><span class="sxs-lookup"><span data-stu-id="2ed64-112">Retrieves a single value (for example, an aggregate value) from a database as an Oracle-specific data type.</span></span>|  
  
 <span data-ttu-id="2ed64-113">È possibile reimpostare il <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> proprietà e il riutilizzo di <xref:System.Data.OracleClient.OracleCommand> oggetto.</span><span class="sxs-lookup"><span data-stu-id="2ed64-113">You can reset the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property and reuse the <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="2ed64-114">Se l'esecuzione del comando genera un errore irreversibile <xref:System.Data.OracleClient.OracleException>, <xref:System.Data.OracleClient.OracleConnection> venga chiusa.</span><span class="sxs-lookup"><span data-stu-id="2ed64-114">If execution of the command results in a fatal <xref:System.Data.OracleClient.OracleException>, the <xref:System.Data.OracleClient.OracleConnection> may close.</span></span> <span data-ttu-id="2ed64-115">L'utente può tuttavia riaprire la connessione e continuare.</span><span class="sxs-lookup"><span data-stu-id="2ed64-115">However, the user can reopen the connection and continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ed64-116">A differenza di **comando** oggetto in altri provider di dati .NET Framework (SQL Server, OLE DB e ODBC), il <xref:System.Data.OracleClient.OracleCommand> oggetto non supporta un <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ed64-116">Unlike the **Command** object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), the <xref:System.Data.OracleClient.OracleCommand> object does not support a <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> property.</span></span> <span data-ttu-id="2ed64-117">L'impostazione di un timeout del comando non ha alcun effetto e il valore restituito è sempre zero.</span><span class="sxs-lookup"><span data-stu-id="2ed64-117">Setting a command timeout has no effect and the value returned is always zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ed64-118">L'esempio seguente usa il <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> metodo <xref:System.Data.OracleClient.OracleCommand>, insieme a <xref:System.Data.OracleClient.OracleDataReader> e <xref:System.Data.OracleClient.OracleConnection>, selezionare le righe da una tabella.</span><span class="sxs-lookup"><span data-stu-id="2ed64-118">The following example uses the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method of <xref:System.Data.OracleClient.OracleCommand>, along with <xref:System.Data.OracleClient.OracleDataReader> and <xref:System.Data.OracleClient.OracleConnection>, to select rows from a table.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2ed64-119">Inizializza una nuova istanza dell'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-119">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ed64-120">Inizializza una nuova istanza dell'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-120">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-121">Il costruttore base Inizializza tutti i campi in base ai valori predefiniti.</span><span class="sxs-lookup"><span data-stu-id="2ed64-121">The base constructor initializes all fields to their default values.</span></span> <span data-ttu-id="2ed64-122">La tabella seguente illustra i valori di proprietà iniziali per un'istanza di <xref:System.Data.OracleClient.OracleCommand>.</span><span class="sxs-lookup"><span data-stu-id="2ed64-122">The following table shows initial property values for an instance of <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
|<span data-ttu-id="2ed64-123">Proprietà</span><span class="sxs-lookup"><span data-stu-id="2ed64-123">Properties</span></span>|<span data-ttu-id="2ed64-124">Valore iniziale</span><span class="sxs-lookup"><span data-stu-id="2ed64-124">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|<span data-ttu-id="2ed64-125">una stringa vuota ("")</span><span class="sxs-lookup"><span data-stu-id="2ed64-125">empty string ("")</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|<span data-ttu-id="2ed64-126">Null</span><span class="sxs-lookup"><span data-stu-id="2ed64-126">null</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2ed64-127">Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand> e vengono impostate alcune delle relative proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ed64-127">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="2ed64-128">Testo della query.</span><span class="sxs-lookup"><span data-stu-id="2ed64-128">The text of the query.</span></span></param>
        <summary><span data-ttu-id="2ed64-129">Inizializza una nuova istanza della classe <see cref="T:System.Data.OracleClient.OracleCommand" /> con il testo della query.</span><span class="sxs-lookup"><span data-stu-id="2ed64-129">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="2ed64-130">Testo della query.</span><span class="sxs-lookup"><span data-stu-id="2ed64-130">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="2ed64-131">Oggetto <see cref="T:System.Data.OracleClient.OracleConnection" /> che rappresenta la connessione a un database.</span><span class="sxs-lookup"><span data-stu-id="2ed64-131">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span></span></param>
        <summary><span data-ttu-id="2ed64-132">Inizializza una nuova istanza della classe <see cref="T:System.Data.OracleClient.OracleCommand" /> con il testo della query e un oggetto <see cref="T:System.Data.OracleClient.OracleConnection" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-132">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query and an <see cref="T:System.Data.OracleClient.OracleConnection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ed64-133">Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand>.</span><span class="sxs-lookup"><span data-stu-id="2ed64-133">The following example creates an <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection, System.Data.OracleClient.OracleTransaction tx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection, class System.Data.OracleClient.OracleTransaction tx) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection, tx As OracleTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection, System::Data::OracleClient::OracleTransaction ^ tx);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
        <Parameter Name="tx" Type="System.Data.OracleClient.OracleTransaction" />
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="2ed64-134">Testo della query.</span><span class="sxs-lookup"><span data-stu-id="2ed64-134">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="2ed64-135">Oggetto <see cref="T:System.Data.OracleClient.OracleConnection" /> che rappresenta la connessione a un database.</span><span class="sxs-lookup"><span data-stu-id="2ed64-135">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span></span></param>
        <param name="tx"><span data-ttu-id="2ed64-136">Oggetto <see cref="T:System.Data.OracleClient.OracleTransaction" /> in cui viene eseguito l'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-136">The <see cref="T:System.Data.OracleClient.OracleTransaction" /> in which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span></span></param>
        <summary><span data-ttu-id="2ed64-137">Consente di inizializzare una nuova istanza della classe <see cref="T:System.Data.OracleClient.OracleCommand" /> con il testo della query, un oggetto <see cref="T:System.Data.OracleClient.OracleConnection" /> e un oggetto <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-137">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query, an <see cref="T:System.Data.OracleClient.OracleConnection" /> object, and an <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-138">La tabella seguente illustra i valori di proprietà iniziali per un'istanza di questa implementazione del <xref:System.Data.OracleClient.OracleCommand>.</span><span class="sxs-lookup"><span data-stu-id="2ed64-138">The following table shows initial property values for an instance of this implementation of the <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
|<span data-ttu-id="2ed64-139">Proprietà</span><span class="sxs-lookup"><span data-stu-id="2ed64-139">Properties</span></span>|<span data-ttu-id="2ed64-140">Valore iniziale</span><span class="sxs-lookup"><span data-stu-id="2ed64-140">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|<span data-ttu-id="2ed64-141">Un nuovo <xref:System.Data.OracleClient.OracleConnection> che rappresenta il valore per il `connection` parametro.</span><span class="sxs-lookup"><span data-stu-id="2ed64-141">A new <xref:System.Data.OracleClient.OracleConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="2ed64-142">È possibile modificare il valore per uno di questi parametri impostando la proprietà correlata.</span><span class="sxs-lookup"><span data-stu-id="2ed64-142">You can change the value for any of these parameters by setting the related property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ed64-143">Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand> e vengono impostate alcune delle relative proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ed64-143">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ed64-144">Tenta di annullare l'esecuzione di un oggetto <see cref="T:System.Data.OracleClient.OracleCommand" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-144">Attempts to cancel the execution of an <see cref="T:System.Data.OracleClient.OracleCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-145">Se non c'è niente per annullare, non accade nulla.</span><span class="sxs-lookup"><span data-stu-id="2ed64-145">If there is nothing to cancel, nothing happens.</span></span> <span data-ttu-id="2ed64-146">Se, tuttavia, è in corso l'esecuzione di un comando e il tentativo di annullarlo non riesce, non viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="2ed64-146">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ed64-147">Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand>, viene eseguito, quindi annullare l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="2ed64-147">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, executes it, then cancels the execution.</span></span> <span data-ttu-id="2ed64-148">A tale scopo, il metodo viene passato a una stringa che rappresenta un'istruzione SQL SELECT e una stringa da utilizzare per connettersi al database.</span><span class="sxs-lookup"><span data-stu-id="2ed64-148">To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ed64-149">Crea una copia dell'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-149">Creates a copy of this <see cref="T:System.Data.OracleClient.OracleCommand" /> object.</span></span></summary>
        <returns><span data-ttu-id="2ed64-150">Nuovo oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> in cui tutti i valori delle proprietà sono gli stessi dell’originale.</span><span class="sxs-lookup"><span data-stu-id="2ed64-150">A new <see cref="T:System.Data.OracleClient.OracleCommand" /> object in which all property values are the same as the original.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ed64-151">Ottiene o imposta l'istruzione SQL o la stored procedure da eseguire in relazione al database.</span><span class="sxs-lookup"><span data-stu-id="2ed64-151">Gets or sets the SQL statement or stored procedure to execute against the database.</span></span></summary>
        <value><span data-ttu-id="2ed64-152">Istruzione SQL o stored procedure da eseguire.</span><span class="sxs-lookup"><span data-stu-id="2ed64-152">The SQL statement or stored procedure to execute.</span></span> <span data-ttu-id="2ed64-153">Il valore predefinito è una stringa vuota ("").</span><span class="sxs-lookup"><span data-stu-id="2ed64-153">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-154">Quando il <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> è impostata su `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> proprietà deve essere impostata sul nome della stored procedure.</span><span class="sxs-lookup"><span data-stu-id="2ed64-154">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="2ed64-155">L'utente potrebbe essere necessario utilizzare la sintassi dei caratteri di escape, se il nome della stored procedure contiene caratteri speciali.</span><span class="sxs-lookup"><span data-stu-id="2ed64-155">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="2ed64-156">Il comando esegue questa stored procedure quando si chiama uno dei metodi Execute.</span><span class="sxs-lookup"><span data-stu-id="2ed64-156">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="2ed64-157">Il Provider di dati .NET Framework per Oracle non supporta il punto interrogativo (?) come segnaposto per il passaggio di parametri a un'istruzione SQL chiamata da un <xref:System.Data.OracleClient.OracleCommand> di `CommandType.Text`.</span><span class="sxs-lookup"><span data-stu-id="2ed64-157">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="2ed64-158">In questo caso, è necessario utilizzare parametri denominati.</span><span class="sxs-lookup"><span data-stu-id="2ed64-158">In this case, named parameters must be used.</span></span> <span data-ttu-id="2ed64-159">Ad esempio:</span><span class="sxs-lookup"><span data-stu-id="2ed64-159">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="2ed64-160">Quando utilizzano parametri denominati in un'istruzione SQL chiamato da un <xref:System.Data.OracleClient.OracleCommand> di `CommandType.Text`, è necessario anteporre il nome del parametro con due punti (:).</span><span class="sxs-lookup"><span data-stu-id="2ed64-160">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="2ed64-161">Tuttavia, in una stored procedure o quando si fa riferimento a un parametro denominato in un' posizione nel codice (ad esempio, quando si aggiunge <xref:System.Data.OracleClient.OracleParameter> oggetti per il <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> proprietà), non precedono il parametro denominato con due punti (:).</span><span class="sxs-lookup"><span data-stu-id="2ed64-161">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="2ed64-162">Il Provider di dati .NET Framework per Oracle fornisce automaticamente i due punti.</span><span class="sxs-lookup"><span data-stu-id="2ed64-162">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ed64-163">Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand> e vengono impostate alcune delle relative proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ed64-163">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ed64-164">Ottiene o imposta il tempo di attesa prima di terminare il tentativo di esecuzione di un comando e di generare un errore.</span><span class="sxs-lookup"><span data-stu-id="2ed64-164">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span></span></summary>
        <value><span data-ttu-id="2ed64-165">Tempo di attesa in secondi per l'esecuzione del comando.</span><span class="sxs-lookup"><span data-stu-id="2ed64-165">The time (in seconds) to wait for the command to execute.</span></span> <span data-ttu-id="2ed64-166">Il valore predefinito è 30 secondi.</span><span class="sxs-lookup"><span data-stu-id="2ed64-166">The default value is 30 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-167">Un <xref:System.ArgumentException> viene generato se l'oggetto assegnato <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> valore della proprietà è minore di 0.</span><span class="sxs-lookup"><span data-stu-id="2ed64-167">An <xref:System.ArgumentException> is generated if the assigned <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> property value is less than 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ed64-168">Ottiene o imposta un valore che indica come viene interpretata la proprietà <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-168">Gets or sets a value indicating how the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> property is interpreted.</span></span></summary>
        <value><span data-ttu-id="2ed64-169">Uno dei valori di <see cref="T:System.Data.CommandType" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-169">One of the <see cref="T:System.Data.CommandType" /> values.</span></span> <span data-ttu-id="2ed64-170">Il valore predefinito è <see langword="Text" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-170">The default is <see langword="Text" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-171">Quando il <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> è impostata su `StoredProcedure`, è necessario impostare il <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> proprietà per la sintassi di chiamata Oracle completa.</span><span class="sxs-lookup"><span data-stu-id="2ed64-171">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, you should set the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property to the full Oracle call syntax.</span></span> <span data-ttu-id="2ed64-172">Questa stored procedure viene quindi eseguito il comando quando si chiama uno dei metodi Execute (ad esempio, <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> o <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).</span><span class="sxs-lookup"><span data-stu-id="2ed64-172">The command then executes this stored procedure when you call one of the Execute methods (for example, <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> or <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).</span></span>  
  
 <span data-ttu-id="2ed64-173">Il <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> e <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> non è possibile impostare le proprietà se la connessione corrente viene eseguita un'operazione di esecuzione o recupero.</span><span class="sxs-lookup"><span data-stu-id="2ed64-173">The <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="2ed64-174">Il Provider di dati .NET Framework per Oracle non supporta il punto interrogativo (?) come segnaposto per il passaggio di parametri a un'istruzione SQL chiamata da un <xref:System.Data.OracleClient.OracleCommand> di `CommandType.Text`.</span><span class="sxs-lookup"><span data-stu-id="2ed64-174">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="2ed64-175">In questo caso, è necessario utilizzare parametri denominati.</span><span class="sxs-lookup"><span data-stu-id="2ed64-175">In this case, named parameters must be used.</span></span> <span data-ttu-id="2ed64-176">Ad esempio:</span><span class="sxs-lookup"><span data-stu-id="2ed64-176">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="2ed64-177">Quando utilizzano parametri denominati in un'istruzione SQL chiamato da un <xref:System.Data.OracleClient.OracleCommand> di `CommandType.Text`, è necessario anteporre il nome del parametro con due punti (:).</span><span class="sxs-lookup"><span data-stu-id="2ed64-177">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="2ed64-178">Tuttavia, in una stored procedure o quando si fa riferimento a un parametro denominato in un' posizione nel codice (ad esempio, quando si aggiunge <xref:System.Data.OracleClient.OracleParameter> oggetti per il <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> proprietà), non precedono il parametro denominato con due punti (:).</span><span class="sxs-lookup"><span data-stu-id="2ed64-178">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="2ed64-179">Il Provider di dati .NET Framework per Oracle fornisce automaticamente i due punti.</span><span class="sxs-lookup"><span data-stu-id="2ed64-179">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ed64-180">Nell'esempio seguente crea un'istanza di una classe derivata <xref:System.Data.OracleClient.OracleCommand> e vengono impostate alcune delle relative proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ed64-180">The following example creates an instance of a derived class <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2ed64-181">Il valore non era un valore <see cref="T:System.Data.CommandType" /> valido.</span><span class="sxs-lookup"><span data-stu-id="2ed64-181">The value was not a valid <see cref="T:System.Data.CommandType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); void set(System::Data::OracleClient::OracleConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ed64-182">Ottiene o imposta l'oggetto <see cref="T:System.Data.OracleClient.OracleConnection" /> usato da questa istanza dell'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-182">Gets or sets the <see cref="T:System.Data.OracleClient.OracleConnection" /> used by this instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span></span></summary>
        <value><span data-ttu-id="2ed64-183">Connessione a un'origine dati.</span><span class="sxs-lookup"><span data-stu-id="2ed64-183">The connection to a data source.</span></span> <span data-ttu-id="2ed64-184">Il valore predefinito è Null.</span><span class="sxs-lookup"><span data-stu-id="2ed64-184">The default is a null value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-185">Non è possibile impostare il <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, e <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> proprietà se la connessione corrente viene eseguita un'operazione di esecuzione o recupero.</span><span class="sxs-lookup"><span data-stu-id="2ed64-185">You cannot set the <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="2ed64-186">Se si imposta la proprietà <xref:System.Data.OracleClient.OracleCommand.Connection%2A> quando è in corso una transazione e la proprietà <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> non è Null, verrà generato un oggetto <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2ed64-186">If you set <xref:System.Data.OracleClient.OracleCommand.Connection%2A> while a transaction is in progress and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated.</span></span> <span data-ttu-id="2ed64-187">Se si imposta <xref:System.Data.OracleClient.OracleCommand.Connection%2A> dopo il commit o il rollback della transazione e <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> proprietà non è null, il <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> viene quindi impostata su un valore null.</span><span class="sxs-lookup"><span data-stu-id="2ed64-187">If you set <xref:System.Data.OracleClient.OracleCommand.Connection%2A> after the transaction has been committed or rolled back, and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is then set to a null value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ed64-188">Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand> e vengono impostate alcune delle relative proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ed64-188">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Connection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Connection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ed64-189">La proprietà <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> è stata modificata nel corso di una transazione.</span><span class="sxs-lookup"><span data-stu-id="2ed64-189">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> property was changed while a transaction was in progress.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OracleParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ed64-190">Crea una nuova istanza di un oggetto <see cref="T:System.Data.OracleClient.OracleParameter" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-190">Creates a new instance of an <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span></span></summary>
        <returns><span data-ttu-id="2ed64-191">Oggetto <see cref="T:System.Data.OracleClient.OracleParameter" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-191">An <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-192">Il <xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A> metodo è una versione fortemente tipizzata di <xref:System.Data.IDbCommand.CreateParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="2ed64-192">The <xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ed64-193">Ottiene o imposta un valore che indica se l'oggetto comando deve essere visibile in un controllo di interfaccia personalizzato.</span><span class="sxs-lookup"><span data-stu-id="2ed64-193">Gets or sets a value indicating whether the command object should be visible in a customized interface control.</span></span></summary>
        <value>
          <span data-ttu-id="2ed64-194"><see langword="true" /> se l'oggetto comando deve essere visibile in un controllo; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-194"><see langword="true" />, if the command object should be visible in a control; otherwise <see langword="false" />.</span></span> <span data-ttu-id="2ed64-195">Il valore predefinito è <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-195">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ed64-196">Esegue un'istruzione SQL nella proprietà <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> e restituisce il numero di righe modificate.</span><span class="sxs-lookup"><span data-stu-id="2ed64-196">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span></span></summary>
        <returns><span data-ttu-id="2ed64-197">Nel caso delle istruzioni UPDATE, INSERT e DELETE, il valore restituito è il numero di righe interessate dal comando.</span><span class="sxs-lookup"><span data-stu-id="2ed64-197">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="2ed64-198">Per le istruzioni CREATE TABLE e DROP TABLE, il valore restituito sarà 0.</span><span class="sxs-lookup"><span data-stu-id="2ed64-198">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span></span> <span data-ttu-id="2ed64-199">Per tutti gli altri tipi di istruzioni, il valore restituito è -1.</span><span class="sxs-lookup"><span data-stu-id="2ed64-199">For all other types of statements, the return value is -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-200">È possibile utilizzare <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> per eseguire operazioni di catalogo (ad esempio, eseguire query sulla struttura di un database o la creazione di oggetti di database quali tabelle) o per modificare i dati in un database, senza utilizzare un <xref:System.Data.DataSet>, per l'esecuzione di UPDATE, INSERT o eliminare istruzioni.</span><span class="sxs-lookup"><span data-stu-id="2ed64-200">You can use <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="2ed64-201">Sebbene <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> non restituiscono alcuna riga, i parametri di output e non restituisce valori mappati a parametri vengono popolati con dati.</span><span class="sxs-lookup"><span data-stu-id="2ed64-201">Although <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="2ed64-202">Nel caso delle istruzioni UPDATE, INSERT e DELETE, il valore restituito è il numero di righe interessate dal comando.</span><span class="sxs-lookup"><span data-stu-id="2ed64-202">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="2ed64-203">Per le istruzioni CREATE TABLE e DROP TABLE, il valore restituito sarà 0.</span><span class="sxs-lookup"><span data-stu-id="2ed64-203">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span></span> <span data-ttu-id="2ed64-204">Per tutti gli altri tipi di istruzioni, il valore restituito è -1.</span><span class="sxs-lookup"><span data-stu-id="2ed64-204">For all other types of statements, the return value is -1.</span></span> <span data-ttu-id="2ed64-205">Se si verifica un'operazione di rollback, anche il valore restituito è -1.</span><span class="sxs-lookup"><span data-stu-id="2ed64-205">If a rollback occurs, the return value is also -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ed64-206">Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand> e quindi viene eseguito mediante <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>.</span><span class="sxs-lookup"><span data-stu-id="2ed64-206">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it by using <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>.</span></span> <span data-ttu-id="2ed64-207">Nell'esempio viene passata una stringa che rappresenta un'istruzione SQL (ad esempio UPDATE, INSERT o DELETE) e una stringa da utilizzare per connettersi al database.</span><span class="sxs-lookup"><span data-stu-id="2ed64-207">The example is passed a string that is an SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ed64-208">La connessione non esiste.</span><span class="sxs-lookup"><span data-stu-id="2ed64-208">The connection does not exist.</span></span>  
  
 <span data-ttu-id="2ed64-209">oppure</span><span class="sxs-lookup"><span data-stu-id="2ed64-209">-or-</span></span>  
  
 <span data-ttu-id="2ed64-210">La connessione non è aperta.</span><span class="sxs-lookup"><span data-stu-id="2ed64-210">The connection is not open.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteOracleNonQuery (out System.Data.OracleClient.OracleString rowid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteOracleNonQuery([out] valuetype System.Data.OracleClient.OracleString&amp; rowid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleNonQuery (ByRef rowid As OracleString) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteOracleNonQuery([Runtime::InteropServices::Out] System::Data::OracleClient::OracleString % rowid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowid" Type="System.Data.OracleClient.OracleString&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rowid"><span data-ttu-id="2ed64-211">Rappresentazione di stringa base64 dell'ID di riga effettivo nel server.</span><span class="sxs-lookup"><span data-stu-id="2ed64-211">A base64 string representation of the actual row ID in the server.</span></span></param>
        <summary><span data-ttu-id="2ed64-212">Esegue un'istruzione SQL nella proprietà <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> e restituisce il numero di righe modificate.</span><span class="sxs-lookup"><span data-stu-id="2ed64-212">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span></span></summary>
        <returns><span data-ttu-id="2ed64-213">Nel caso delle istruzioni UPDATE, INSERT e DELETE, il valore restituito è il numero di righe interessate dal comando.</span><span class="sxs-lookup"><span data-stu-id="2ed64-213">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="2ed64-214">Per le istruzioni CREATE TABLE e DROP TABLE, il valore restituito sarà 0.</span><span class="sxs-lookup"><span data-stu-id="2ed64-214">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span></span> <span data-ttu-id="2ed64-215">Per tutti gli altri tipi di istruzioni, il valore restituito è -1.</span><span class="sxs-lookup"><span data-stu-id="2ed64-215">For all other types of statements, the return value is -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-216">È possibile utilizzare <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> per eseguire operazioni di catalogo (ad esempio, eseguire query sulla struttura di un database o la creazione di oggetti di database quali tabelle) o per modificare i dati in un database, senza utilizzare un <xref:System.Data.DataSet>, per l'esecuzione di UPDATE, INSERT o eliminare istruzioni.</span><span class="sxs-lookup"><span data-stu-id="2ed64-216">You can use <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="2ed64-217"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> è diverso da <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> in quanto restituisce `rowid` come parametro di output se si esegue un'istruzione INSERT, DELETE o UPDATE che interessa esattamente una riga.</span><span class="sxs-lookup"><span data-stu-id="2ed64-217"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> differs from <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> in that it returns `rowid` as an output parameter if you are executing an INSERT, DELETE, or UPDATE statement that affects exactly one row.</span></span> <span data-ttu-id="2ed64-218">Ciò consente di identificare in modo univoco una riga nel database Oracle, che consente di migliorare le prestazioni nelle query successive, correlate.</span><span class="sxs-lookup"><span data-stu-id="2ed64-218">This allows you to uniquely identify a row in the Oracle database, which can allow you to increase performance in subsequent, related queries.</span></span>  
  
 <span data-ttu-id="2ed64-219">Sebbene <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> non restituiscono alcuna riga, i parametri di output e non restituisce valori mappati a parametri vengono popolati con dati.</span><span class="sxs-lookup"><span data-stu-id="2ed64-219">Although <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ed64-220">La connessione non esiste.</span><span class="sxs-lookup"><span data-stu-id="2ed64-220">The connection does not exist.</span></span>  
  
 <span data-ttu-id="2ed64-221">oppure</span><span class="sxs-lookup"><span data-stu-id="2ed64-221">-or-</span></span>  
  
 <span data-ttu-id="2ed64-222">La connessione non è aperta.</span><span class="sxs-lookup"><span data-stu-id="2ed64-222">The connection is not open.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleScalar">
      <MemberSignature Language="C#" Value="public object ExecuteOracleScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ExecuteOracleScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteOracleScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ed64-223">Esegue la query e restituisce la prima colonna della prima riga nel gruppo di risultati restituito dalla query come tipo di dati specifico di Oracle.</span><span class="sxs-lookup"><span data-stu-id="2ed64-223">Executes the query, and returns the first column of the first row in the result set returned by the query as an Oracle-specific data type.</span></span> <span data-ttu-id="2ed64-224">Le colonne o le righe aggiuntive vengono ignorate.</span><span class="sxs-lookup"><span data-stu-id="2ed64-224">Extra columns or rows are ignored.</span></span></summary>
        <returns><span data-ttu-id="2ed64-225">Prima colonna della prima riga del gruppo di risultati come tipo di dati specifico di Oracle o riferimento null se il risultato è <see langword="REF CURSOR" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-225">The first column of the first row in the result set as an Oracle-specific data type, or a null reference if the result is a <see langword="REF CURSOR" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-226">Utilizzare il <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> metodo per recuperare un singolo valore (ad esempio, un valore aggregato) da un database.</span><span class="sxs-lookup"><span data-stu-id="2ed64-226">Use the <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="2ed64-227">Ciò richiede meno codice rispetto all'utilizzo di <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> (metodo) e quindi di eseguire le operazioni necessarie per generare il valore singolo dai dati restituiti da un <xref:System.Data.OracleClient.OracleDataReader>.</span><span class="sxs-lookup"><span data-stu-id="2ed64-227">This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="2ed64-228">Una tipica <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> query possono essere formattati come nell'esempio c# seguente:</span><span class="sxs-lookup"><span data-stu-id="2ed64-228">A typical <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
command.CommandText = "SELECT COUNT(*) AS NumberOfRegions FROM Region";  
count = command.ExecuteOracleScalar();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2ed64-229">Invia <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> a <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> e compila un oggetto <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-229">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ed64-230">Invia <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> a <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> e compila un oggetto <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-230">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="2ed64-231">Oggetto <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-231">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-232">Quando il <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> è impostata su `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> proprietà deve essere impostata sul nome della stored procedure.</span><span class="sxs-lookup"><span data-stu-id="2ed64-232">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="2ed64-233">Questa stored procedure viene quindi eseguito il comando quando si chiama <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span><span class="sxs-lookup"><span data-stu-id="2ed64-233">The command then executes this stored procedure when you call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="2ed64-234">Più <xref:System.Data.OracleClient.OracleDataReader> possono essere aperti in qualsiasi momento.</span><span class="sxs-lookup"><span data-stu-id="2ed64-234">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ed64-235">Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand>che viene eseguito passando una stringa che rappresenta un'istruzione SQL SELECT e una stringa da utilizzare per la connessione all'origine dati.</span><span class="sxs-lookup"><span data-stu-id="2ed64-235">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="2ed64-236">Uno dei valori di <see cref="T:System.Data.CommandBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-236">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="2ed64-237">Invia la proprietà <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> alla proprietà <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> e compila una classe <see cref="T:System.Data.OracleClient.OracleDataReader" /> mediante uno dei valori di <see cref="T:System.Data.CommandBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-237">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />, and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="2ed64-238">Oggetto <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-238">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-239">Se si prevede che l'istruzione SQL per restituire una sola riga, si specifica `SingleRow` come il <xref:System.Data.CommandBehavior> valore può migliorare le prestazioni dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="2ed64-239">If you expect your SQL statement to return only a single row, specifying `SingleRow` as the <xref:System.Data.CommandBehavior> value may improve application performance.</span></span>  
  
 <span data-ttu-id="2ed64-240">Quando il <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> è impostata su `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> proprietà deve essere impostata sul nome della stored procedure.</span><span class="sxs-lookup"><span data-stu-id="2ed64-240">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="2ed64-241">Questa stored procedure viene quindi eseguito il comando quando si chiama <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span><span class="sxs-lookup"><span data-stu-id="2ed64-241">The command then executes this stored procedure when you call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="2ed64-242">Il <xref:System.Data.OracleClient.OracleDataReader> supporta una modalità speciale che consente valori binari di grandi dimensioni da leggere in modo efficiente.</span><span class="sxs-lookup"><span data-stu-id="2ed64-242">The <xref:System.Data.OracleClient.OracleDataReader> supports a special mode that enables large binary values to be read efficiently.</span></span> <span data-ttu-id="2ed64-243">Per ulteriori informazioni, vedere il `SequentialAccess` impostazione per <xref:System.Data.CommandBehavior>.</span><span class="sxs-lookup"><span data-stu-id="2ed64-243">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="2ed64-244">Più <xref:System.Data.OracleClient.OracleDataReader> possono essere aperti in qualsiasi momento.</span><span class="sxs-lookup"><span data-stu-id="2ed64-244">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ed64-245">Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand>che viene eseguito passando una stringa che rappresenta un'istruzione SQL SELECT e una stringa da utilizzare per connettersi al database.</span><span class="sxs-lookup"><span data-stu-id="2ed64-245">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the database.</span></span> <span data-ttu-id="2ed64-246"><xref:System.Data.CommandBehavior> viene quindi impostato su <xref:System.Data.CommandBehavior.CloseConnection>.</span><span class="sxs-lookup"><span data-stu-id="2ed64-246"><xref:System.Data.CommandBehavior> is then set to <xref:System.Data.CommandBehavior.CloseConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ed64-247">Esegue la query e restituisce la prima colonna della prima riga nel gruppo di risultati restituito dalla query come tipo di dati .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="2ed64-247">Executes the query, and returns the first column of the first row in the result set returned by the query as a .NET Framework data type.</span></span> <span data-ttu-id="2ed64-248">Le colonne o le righe aggiuntive vengono ignorate.</span><span class="sxs-lookup"><span data-stu-id="2ed64-248">Extra columns or rows are ignored.</span></span></summary>
        <returns><span data-ttu-id="2ed64-249">Prima colonna della prima riga del gruppo di risultati come tipo di dati .NET Framework o riferimento null se il gruppo di risultati è vuoto o il risultato è <see langword="REF CURSOR" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-249">The first column of the first row in the result set as a .NET Framework data type, or a null reference if the result set is empty or the result is a <see langword="REF CURSOR" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-250">Utilizzare il <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> metodo per recuperare un singolo valore (ad esempio, un valore aggregato) da un database.</span><span class="sxs-lookup"><span data-stu-id="2ed64-250">Use the <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="2ed64-251">Ciò richiede meno codice rispetto all'utilizzo di <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> (metodo) e quindi di eseguire le operazioni necessarie per generare il valore singolo dai dati restituiti da un <xref:System.Data.OracleClient.OracleDataReader>.</span><span class="sxs-lookup"><span data-stu-id="2ed64-251">This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="2ed64-252">Una tipica <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> query possono essere formattati come nell'esempio c# seguente:</span><span class="sxs-lookup"><span data-stu-id="2ed64-252">A typical <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "SELECT COUNT(*) FROM Region";  
Int32 count = (int32) ExecuteScalar();  
```  
  
   
  
## Examples  
 <span data-ttu-id="2ed64-253">Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand> e viene quindi eseguito mediante <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>.</span><span class="sxs-lookup"><span data-stu-id="2ed64-253">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it using <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="2ed64-254">Nell'esempio viene passato a una stringa che rappresenta un'istruzione SQL che restituisce un risultato dell'aggregazione e una stringa da utilizzare per connettersi al database.</span><span class="sxs-lookup"><span data-stu-id="2ed64-254">The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OracleParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleParameterCollection ^ Parameters { System::Data::OracleClient::OracleParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ed64-255">Ottiene l'oggetto <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-255">Gets the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</span></span></summary>
        <value><span data-ttu-id="2ed64-256">Parametri dell'istruzione SQL o della stored procedure.</span><span class="sxs-lookup"><span data-stu-id="2ed64-256">The parameters of the SQL statement or stored procedure.</span></span> <span data-ttu-id="2ed64-257">Il valore predefinito è una raccolta vuota.</span><span class="sxs-lookup"><span data-stu-id="2ed64-257">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-258">Quando il <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> è impostata su `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> proprietà deve essere impostata sul nome della stored procedure.</span><span class="sxs-lookup"><span data-stu-id="2ed64-258">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="2ed64-259">L'utente potrebbe essere necessario utilizzare la sintassi dei caratteri di escape, se il nome della stored procedure contiene caratteri speciali.</span><span class="sxs-lookup"><span data-stu-id="2ed64-259">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="2ed64-260">Il comando esegue questa stored procedure quando si chiama uno dei metodi Execute.</span><span class="sxs-lookup"><span data-stu-id="2ed64-260">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="2ed64-261">Il Provider di dati .NET Framework per Oracle non supporta il punto interrogativo (?) come segnaposto per il passaggio di parametri a un'istruzione SQL chiamata da un <xref:System.Data.OracleClient.OracleCommand> di `CommandType.Text`.</span><span class="sxs-lookup"><span data-stu-id="2ed64-261">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="2ed64-262">In questo caso, è necessario utilizzare parametri denominati.</span><span class="sxs-lookup"><span data-stu-id="2ed64-262">In this case, named parameters must be used.</span></span> <span data-ttu-id="2ed64-263">Ad esempio:</span><span class="sxs-lookup"><span data-stu-id="2ed64-263">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="2ed64-264">Quando utilizzano parametri denominati in un'istruzione SQL chiamato da un <xref:System.Data.OracleClient.OracleCommand> di `CommandType.Text`, è necessario anteporre il nome del parametro con due punti (:).</span><span class="sxs-lookup"><span data-stu-id="2ed64-264">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="2ed64-265">Tuttavia, in una stored procedure o quando si fa riferimento a un parametro denominato in un' posizione nel codice (ad esempio, quando si aggiunge <xref:System.Data.OracleClient.OracleParameter> oggetti per il <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> proprietà), non precedono il parametro denominato con due punti (:).</span><span class="sxs-lookup"><span data-stu-id="2ed64-265">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="2ed64-266">Il Provider di dati .NET Framework per Oracle fornisce automaticamente i due punti.</span><span class="sxs-lookup"><span data-stu-id="2ed64-266">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ed64-267">Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand> e visualizzati i relativi parametri.</span><span class="sxs-lookup"><span data-stu-id="2ed64-267">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and displays its parameters.</span></span> <span data-ttu-id="2ed64-268">A tale scopo, viene passato un <xref:System.Data.OracleClient.OracleConnection>, una stringa di query che è un'istruzione SQL SELECT e una matrice di <xref:System.Data.OracleClient.OracleParameter> oggetti.</span><span class="sxs-lookup"><span data-stu-id="2ed64-268">To accomplish this, the method is passed an <xref:System.Data.OracleClient.OracleConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OracleClient.OracleParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ed64-269">Crea una versione preparata o compilata del comando sull'origine dati.</span><span class="sxs-lookup"><span data-stu-id="2ed64-269">Creates a prepared (or compiled) version of the command at the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-270">Prima di chiamare <xref:System.Data.OracleClient.OracleCommand.Prepare%2A>, specificare il tipo di dati di ogni parametro nell'istruzione da preparare.</span><span class="sxs-lookup"><span data-stu-id="2ed64-270">Before you call <xref:System.Data.OracleClient.OracleCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ed64-271">La proprietà <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> non è impostata.</span><span class="sxs-lookup"><span data-stu-id="2ed64-271">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not set.</span></span>  
  
 <span data-ttu-id="2ed64-272">oppure</span><span class="sxs-lookup"><span data-stu-id="2ed64-272">-or-</span></span>  
  
 <span data-ttu-id="2ed64-273"><see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> non è <see cref="M:System.Data.OracleClient.OracleConnection.Open" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-273">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not <see cref="M:System.Data.OracleClient.OracleConnection.Open" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ed64-274">Reimposta la proprietà <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> sul valore predefinito.</span><span class="sxs-lookup"><span data-stu-id="2ed64-274">Resets the <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> property to the default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-275">Il valore predefinito di <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> è 30 secondi.</span><span class="sxs-lookup"><span data-stu-id="2ed64-275">The default value of the <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> is 30 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleTransaction ^ Transaction { System::Data::OracleClient::OracleTransaction ^ get(); void set(System::Data::OracleClient::OracleTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ed64-276">Ottiene o imposta l'oggetto <see cref="T:System.Data.OracleClient.OracleTransaction" /> in cui viene eseguito <see cref="T:System.Data.OracleClient.OracleCommand" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-276">Gets or sets the <see cref="T:System.Data.OracleClient.OracleTransaction" /> within which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span></span></summary>
        <value><span data-ttu-id="2ed64-277">Oggetto <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-277">An <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span></span> <span data-ttu-id="2ed64-278">Il valore predefinito è Null.</span><span class="sxs-lookup"><span data-stu-id="2ed64-278">The default is a null value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-279">Non è possibile impostare il <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> proprietà se è già impostato su un valore specifico e il comando è in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="2ed64-279">You cannot set the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing.</span></span> <span data-ttu-id="2ed64-280">Se si imposta la proprietà della transazione un <xref:System.Data.OracleClient.OracleTransaction> oggetto che non è connesso allo stesso <xref:System.Data.OracleClient.OracleConnection> come il <xref:System.Data.OracleClient.OracleCommand> dell'oggetto, verrà generata un'eccezione al successivo tentativo di eseguire un'istruzione.</span><span class="sxs-lookup"><span data-stu-id="2ed64-280">If you set the transaction property to an <xref:System.Data.OracleClient.OracleTransaction> object that is not connected to the same <xref:System.Data.OracleClient.OracleConnection> as the <xref:System.Data.OracleClient.OracleCommand> object, an exception will be thrown the next time you attempt to execute a statement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ed64-281">Ottiene o imposta un valore che specifica in quale modo il metodo <see langword="Update" /> applicherà i risultati del comando a <see cref="T:System.Data.DataRow" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-281">Gets or sets a value that specifies how the <see langword="Update" /> method should apply command results to the <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <value><span data-ttu-id="2ed64-282">Uno dei valori di <see cref="T:System.Data.UpdateRowSource" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-282">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed64-283">Il valore predefinito <xref:System.Data.UpdateRowSource> valore `Both` a meno che non viene generato automaticamente il comando (come nel caso del <xref:System.Data.OracleClient.OracleCommandBuilder>), nel qual caso il valore predefinito è `None`.</span><span class="sxs-lookup"><span data-stu-id="2ed64-283">The default <xref:System.Data.UpdateRowSource> value is `Both` unless the command is automatically generated (as in the case of the <xref:System.Data.OracleClient.OracleCommandBuilder>), in which case the default is `None`.</span></span>  
  
 <span data-ttu-id="2ed64-284">Per ulteriori informazioni sull'utilizzo di <xref:System.Data.UpdateRowSource> proprietà, vedere [parametri DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).</span><span class="sxs-lookup"><span data-stu-id="2ed64-284">For more information about using the <xref:System.Data.UpdateRowSource> property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2ed64-285">Il valore immesso non è uno dei valori di <see cref="T:System.Data.UpdateRowSource" />.</span><span class="sxs-lookup"><span data-stu-id="2ed64-285">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>