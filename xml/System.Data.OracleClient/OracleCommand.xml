<Type Name="OracleCommand" FullName="System.Data.OracleClient.OracleCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d3206433275a12c1b96ab6e176e46ba31c1fcef8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390445" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleCommand : System.Data.Common.DbCommand, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommand extends System.Data.Common.DbCommand implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommand sealed : System::Data::Common::DbCommand, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("OracleCommand has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un'istruzione SQL o una stored procedure da eseguire su un database. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo tipo è deprecato e verrà rimossa in una futura versione di .NET Framework. Per ulteriori informazioni, vedere [Oracle e ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).  
  
 La <xref:System.Data.OracleClient.OracleCommand> classe fornisce i metodi seguenti per l'esecuzione di comandi su un'origine dati:  
  
|Elemento|Descrizione|  
|----------|-----------------|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>|Esegue i comandi che restituiscono righe.|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>|Esegue un'istruzione SQL nella proprietà <xref:System.Data.OracleClient.OracleCommand.Connection%2A> e restituisce il numero di righe modificate.|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>|Esegue i comandi, ad esempio le istruzioni SQL INSERT, DELETE, UPDATE e SET.|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>|Recupera un valore singolo, ad esempio, un valore aggregato, da un database come tipo di dati .NET Framework.|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>|Recupera un valore singolo, ad esempio, un valore aggregato, da un database come un tipo di dati specifica di Oracle.|  
  
 È possibile reimpostare il <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> proprietà e il riutilizzo di <xref:System.Data.OracleClient.OracleCommand> oggetto.  
  
 Se l'esecuzione del comando genera un errore irreversibile <xref:System.Data.OracleClient.OracleException>, <xref:System.Data.OracleClient.OracleConnection> venga chiusa. L'utente può tuttavia riaprire la connessione e continuare.  
  
> [!NOTE]
>  A differenza di **comando** oggetto in altri provider di dati .NET Framework (SQL Server, OLE DB e ODBC), il <xref:System.Data.OracleClient.OracleCommand> oggetto non supporta un <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> proprietà. L'impostazione di un timeout del comando non ha alcun effetto e il valore restituito è sempre zero.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> metodo <xref:System.Data.OracleClient.OracleCommand>, insieme a <xref:System.Data.OracleClient.OracleDataReader> e <xref:System.Data.OracleClient.OracleConnection>, selezionare le righe da una tabella.  
  
 [!code-csharp[Classic WebData OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza dell'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza dell'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il costruttore base Inizializza tutti i campi in base ai valori predefiniti. La tabella seguente illustra i valori di proprietà iniziali per un'istanza di <xref:System.Data.OracleClient.OracleCommand>.  
  
|Proprietà|Valore iniziale|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|una stringa vuota ("")|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|Null|  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand> e vengono impostate alcune delle relative proprietà.  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandText">Testo della query.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.OracleClient.OracleCommand" /> con il testo della query.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="commandText">Testo della query.</param>
        <param name="connection">Oggetto <see cref="T:System.Data.OracleClient.OracleConnection" /> che rappresenta la connessione a un database.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.OracleClient.OracleCommand" /> con il testo della query e un oggetto <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand>.  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection, System.Data.OracleClient.OracleTransaction tx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection, class System.Data.OracleClient.OracleTransaction tx) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection, tx As OracleTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection, System::Data::OracleClient::OracleTransaction ^ tx);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
        <Parameter Name="tx" Type="System.Data.OracleClient.OracleTransaction" />
      </Parameters>
      <Docs>
        <param name="commandText">Testo della query.</param>
        <param name="connection">Oggetto <see cref="T:System.Data.OracleClient.OracleConnection" /> che rappresenta la connessione a un database.</param>
        <param name="tx">Oggetto <see cref="T:System.Data.OracleClient.OracleTransaction" /> in cui viene eseguito l'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" />.</param>
        <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.Data.OracleClient.OracleCommand" /> con il testo della query, un oggetto <see cref="T:System.Data.OracleClient.OracleConnection" /> e un oggetto <see cref="T:System.Data.OracleClient.OracleTransaction" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella seguente illustra i valori di proprietà iniziali per un'istanza di questa implementazione del <xref:System.Data.OracleClient.OracleCommand>.  
  
|Proprietà|Valore iniziale|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|Un nuovo <xref:System.Data.OracleClient.OracleConnection> che rappresenta il valore per il `connection` parametro.|  
  
 È possibile modificare il valore per uno di questi parametri impostando la proprietà correlata.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand> e vengono impostate alcune delle relative proprietà.  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tenta di annullare l'esecuzione di un oggetto <see cref="T:System.Data.OracleClient.OracleCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non c'è niente per annullare, non accade nulla. Se, tuttavia, è in corso l'esecuzione di un comando e il tentativo di annullarlo non riesce, non viene generata alcuna eccezione.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand>, viene eseguito, quindi annullare l'esecuzione. A tale scopo, il metodo viene passato a una stringa che rappresenta un'istruzione SQL SELECT e una stringa da utilizzare per connettersi al database.  
  
 [!code-csharp[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia dell'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" />.</summary>
        <returns>Nuovo oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> in cui tutti i valori delle proprietà sono gli stessi dell’originale.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'istruzione SQL o la stored procedure da eseguire in relazione al database.</summary>
        <value>Istruzione SQL o stored procedure da eseguire. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> è impostata su `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> proprietà deve essere impostata sul nome della stored procedure. L'utente potrebbe essere necessario utilizzare la sintassi dei caratteri di escape, se il nome della stored procedure contiene caratteri speciali. Il comando esegue questa stored procedure quando si chiama uno dei metodi Execute.  
  
 Il Provider di dati .NET Framework per Oracle non supporta il punto interrogativo (?) come segnaposto per il passaggio di parametri a un'istruzione SQL chiamata da un <xref:System.Data.OracleClient.OracleCommand> di `CommandType.Text`. In questo caso, è necessario utilizzare parametri denominati. Ad esempio:  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 Quando utilizzano parametri denominati in un'istruzione SQL chiamato da un <xref:System.Data.OracleClient.OracleCommand> di `CommandType.Text`, è necessario anteporre il nome del parametro con due punti (:). Tuttavia, in una stored procedure o quando si fa riferimento a un parametro denominato in un' posizione nel codice (ad esempio, quando si aggiunge <xref:System.Data.OracleClient.OracleParameter> oggetti per il <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> proprietà), non precedono il parametro denominato con due punti (:). Il Provider di dati .NET Framework per Oracle fornisce automaticamente i due punti.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand> e vengono impostate alcune delle relative proprietà.  
  
 [!code-csharp[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tempo di attesa prima di terminare il tentativo di esecuzione di un comando e di generare un errore.</summary>
        <value>Tempo di attesa in secondi per l'esecuzione del comando. Il valore predefinito è 30 secondi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.ArgumentException> viene generato se l'oggetto assegnato <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> valore della proprietà è minore di 0.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica come viene interpretata la proprietà <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" />.</summary>
        <value>Uno dei valori di <see cref="T:System.Data.CommandType" />. Il valore predefinito è <see langword="Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> è impostata su `StoredProcedure`, è necessario impostare il <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> proprietà per la sintassi di chiamata Oracle completa. Questa stored procedure viene quindi eseguito il comando quando si chiama uno dei metodi Execute (ad esempio, <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> o <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).  
  
 Il <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> e <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> non è possibile impostare le proprietà se la connessione corrente viene eseguita un'operazione di esecuzione o recupero.  
  
 Il Provider di dati .NET Framework per Oracle non supporta il punto interrogativo (?) come segnaposto per il passaggio di parametri a un'istruzione SQL chiamata da un <xref:System.Data.OracleClient.OracleCommand> di `CommandType.Text`. In questo caso, è necessario utilizzare parametri denominati. Ad esempio:  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 Quando utilizzano parametri denominati in un'istruzione SQL chiamato da un <xref:System.Data.OracleClient.OracleCommand> di `CommandType.Text`, è necessario anteporre il nome del parametro con due punti (:). Tuttavia, in una stored procedure o quando si fa riferimento a un parametro denominato in un' posizione nel codice (ad esempio, quando si aggiunge <xref:System.Data.OracleClient.OracleParameter> oggetti per il <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> proprietà), non precedono il parametro denominato con due punti (:). Il Provider di dati .NET Framework per Oracle fornisce automaticamente i due punti.  
  
   
  
## Examples  
 Nell'esempio seguente crea un'istanza di una classe derivata <xref:System.Data.OracleClient.OracleCommand> e vengono impostate alcune delle relative proprietà.  
  
 [!code-csharp[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore non era un valore <see cref="T:System.Data.CommandType" /> valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); void set(System::Data::OracleClient::OracleConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Data.OracleClient.OracleConnection" /> usato da questa istanza dell'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" />.</summary>
        <value>Connessione a un'origine dati. Il valore predefinito è Null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è possibile impostare il <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, e <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> proprietà se la connessione corrente viene eseguita un'operazione di esecuzione o recupero.  
  
 Se si imposta la proprietà <xref:System.Data.OracleClient.OracleCommand.Connection%2A> quando è in corso una transazione e la proprietà <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> non è Null, verrà generato un oggetto <xref:System.InvalidOperationException>. Se si imposta <xref:System.Data.OracleClient.OracleCommand.Connection%2A> dopo il commit o il rollback della transazione e <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> proprietà non è null, il <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> viene quindi impostata su un valore null.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand> e vengono impostate alcune delle relative proprietà.  
  
 [!code-csharp[Classic WebData OracleCommand.Connection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Connection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> è stata modificata nel corso di una transazione.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OracleParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una nuova istanza di un oggetto <see cref="T:System.Data.OracleClient.OracleParameter" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.OracleClient.OracleParameter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A> metodo è una versione fortemente tipizzata di <xref:System.Data.IDbCommand.CreateParameter%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'oggetto comando deve essere visibile in un controllo di interfaccia personalizzato.</summary>
        <value>
          <see langword="true" /> se l'oggetto comando deve essere visibile in un controllo; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue un'istruzione SQL nella proprietà <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> e restituisce il numero di righe modificate.</summary>
        <returns>Nel caso delle istruzioni UPDATE, INSERT e DELETE, il valore restituito è il numero di righe interessate dal comando. Per le istruzioni CREATE TABLE e DROP TABLE, il valore restituito sarà 0. Per tutti gli altri tipi di istruzioni, il valore restituito è -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> per eseguire operazioni di catalogo (ad esempio, eseguire query sulla struttura di un database o la creazione di oggetti di database quali tabelle) o per modificare i dati in un database, senza utilizzare un <xref:System.Data.DataSet>, per l'esecuzione di UPDATE, INSERT o eliminare istruzioni.  
  
 Sebbene <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> non restituiscono alcuna riga, i parametri di output e non restituisce valori mappati a parametri vengono popolati con dati.  
  
 Nel caso delle istruzioni UPDATE, INSERT e DELETE, il valore restituito è il numero di righe interessate dal comando. Per le istruzioni CREATE TABLE e DROP TABLE, il valore restituito sarà 0. Per tutti gli altri tipi di istruzioni, il valore restituito è -1. Se si verifica un'operazione di rollback, anche il valore restituito è -1.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand> e quindi viene eseguito mediante <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>. Nell'esempio viene passata una stringa che rappresenta un'istruzione SQL (ad esempio UPDATE, INSERT o DELETE) e una stringa da utilizzare per connettersi al database.  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La connessione non esiste.  
  
 oppure  
  
 La connessione non è aperta.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteOracleNonQuery (out System.Data.OracleClient.OracleString rowid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteOracleNonQuery([out] valuetype System.Data.OracleClient.OracleString&amp; rowid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleNonQuery (ByRef rowid As OracleString) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteOracleNonQuery([Runtime::InteropServices::Out] System::Data::OracleClient::OracleString % rowid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowid" Type="System.Data.OracleClient.OracleString&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rowid">Rappresentazione di stringa base64 dell'ID di riga effettivo nel server.</param>
        <summary>Esegue un'istruzione SQL nella proprietà <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> e restituisce il numero di righe modificate.</summary>
        <returns>Nel caso delle istruzioni UPDATE, INSERT e DELETE, il valore restituito è il numero di righe interessate dal comando. Per le istruzioni CREATE TABLE e DROP TABLE, il valore restituito sarà 0. Per tutti gli altri tipi di istruzioni, il valore restituito è -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> per eseguire operazioni di catalogo (ad esempio, eseguire query sulla struttura di un database o la creazione di oggetti di database quali tabelle) o per modificare i dati in un database, senza utilizzare un <xref:System.Data.DataSet>, per l'esecuzione di UPDATE, INSERT o eliminare istruzioni.  
  
 <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> è diverso da <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> in quanto restituisce `rowid` come parametro di output se si esegue un'istruzione INSERT, DELETE o UPDATE che interessa esattamente una riga. Ciò consente di identificare in modo univoco una riga nel database Oracle, che consente di migliorare le prestazioni nelle query successive, correlate.  
  
 Sebbene <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> non restituiscono alcuna riga, i parametri di output e non restituisce valori mappati a parametri vengono popolati con dati.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La connessione non esiste.  
  
 oppure  
  
 La connessione non è aperta.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleScalar">
      <MemberSignature Language="C#" Value="public object ExecuteOracleScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ExecuteOracleScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteOracleScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue la query e restituisce la prima colonna della prima riga nel gruppo di risultati restituito dalla query come tipo di dati specifico di Oracle. Le colonne o le righe aggiuntive vengono ignorate.</summary>
        <returns>Prima colonna della prima riga del gruppo di risultati come tipo di dati specifico di Oracle o riferimento null se il risultato è <see langword="REF CURSOR" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> metodo per recuperare un singolo valore (ad esempio, un valore aggregato) da un database. Ciò richiede meno codice rispetto all'utilizzo di <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> (metodo) e quindi di eseguire le operazioni necessarie per generare il valore singolo dai dati restituiti da un <xref:System.Data.OracleClient.OracleDataReader>.  
  
 Una tipica <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> query possono essere formattati come nell'esempio c# seguente:  
  
```  
command.CommandText = "SELECT COUNT(*) AS NumberOfRegions FROM Region";  
count = command.ExecuteOracleScalar();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Invia <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> a <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> e compila un oggetto <see cref="T:System.Data.OracleClient.OracleDataReader" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invia <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> a <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> e compila un oggetto <see cref="T:System.Data.OracleClient.OracleDataReader" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.OracleClient.OracleDataReader" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> è impostata su `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> proprietà deve essere impostata sul nome della stored procedure. Questa stored procedure viene quindi eseguito il comando quando si chiama <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.  
  
 Più <xref:System.Data.OracleClient.OracleDataReader> possono essere aperti in qualsiasi momento.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand>che viene eseguito passando una stringa che rappresenta un'istruzione SQL SELECT e una stringa da utilizzare per la connessione all'origine dati.  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">Uno dei valori di <see cref="T:System.Data.CommandBehavior" />.</param>
        <summary>Invia la proprietà <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> alla proprietà <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> e compila una classe <see cref="T:System.Data.OracleClient.OracleDataReader" /> mediante uno dei valori di <see cref="T:System.Data.CommandBehavior" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.OracleClient.OracleDataReader" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si prevede che l'istruzione SQL per restituire una sola riga, si specifica `SingleRow` come il <xref:System.Data.CommandBehavior> valore può migliorare le prestazioni dell'applicazione.  
  
 Quando il <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> è impostata su `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> proprietà deve essere impostata sul nome della stored procedure. Questa stored procedure viene quindi eseguito il comando quando si chiama <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.  
  
 Il <xref:System.Data.OracleClient.OracleDataReader> supporta una modalità speciale che consente valori binari di grandi dimensioni da leggere in modo efficiente. Per ulteriori informazioni, vedere il `SequentialAccess` impostazione per <xref:System.Data.CommandBehavior>.  
  
 Più <xref:System.Data.OracleClient.OracleDataReader> possono essere aperti in qualsiasi momento.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand>che viene eseguito passando una stringa che rappresenta un'istruzione SQL SELECT e una stringa da utilizzare per connettersi al database. <xref:System.Data.CommandBehavior> viene quindi impostato su <xref:System.Data.CommandBehavior.CloseConnection>.  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue la query e restituisce la prima colonna della prima riga nel gruppo di risultati restituito dalla query come tipo di dati .NET Framework. Le colonne o le righe aggiuntive vengono ignorate.</summary>
        <returns>Prima colonna della prima riga del gruppo di risultati come tipo di dati .NET Framework o riferimento null se il gruppo di risultati è vuoto o il risultato è <see langword="REF CURSOR" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> metodo per recuperare un singolo valore (ad esempio, un valore aggregato) da un database. Ciò richiede meno codice rispetto all'utilizzo di <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> (metodo) e quindi di eseguire le operazioni necessarie per generare il valore singolo dai dati restituiti da un <xref:System.Data.OracleClient.OracleDataReader>.  
  
 Una tipica <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> query possono essere formattati come nell'esempio c# seguente:  
  
```  
CommandText = "SELECT COUNT(*) FROM Region";  
Int32 count = (int32) ExecuteScalar();  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand> e viene quindi eseguito mediante <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>. Nell'esempio viene passato a una stringa che rappresenta un'istruzione SQL che restituisce un risultato dell'aggregazione e una stringa da utilizzare per connettersi al database.  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OracleParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleParameterCollection ^ Parameters { System::Data::OracleClient::OracleParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</summary>
        <value>Parametri dell'istruzione SQL o della stored procedure. Il valore predefinito è una raccolta vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> è impostata su `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> proprietà deve essere impostata sul nome della stored procedure. L'utente potrebbe essere necessario utilizzare la sintassi dei caratteri di escape, se il nome della stored procedure contiene caratteri speciali. Il comando esegue questa stored procedure quando si chiama uno dei metodi Execute.  
  
 Il Provider di dati .NET Framework per Oracle non supporta il punto interrogativo (?) come segnaposto per il passaggio di parametri a un'istruzione SQL chiamata da un <xref:System.Data.OracleClient.OracleCommand> di `CommandType.Text`. In questo caso, è necessario utilizzare parametri denominati. Ad esempio:  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 Quando utilizzano parametri denominati in un'istruzione SQL chiamato da un <xref:System.Data.OracleClient.OracleCommand> di `CommandType.Text`, è necessario anteporre il nome del parametro con due punti (:). Tuttavia, in una stored procedure o quando si fa riferimento a un parametro denominato in un' posizione nel codice (ad esempio, quando si aggiunge <xref:System.Data.OracleClient.OracleParameter> oggetti per il <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> proprietà), non precedono il parametro denominato con due punti (:). Il Provider di dati .NET Framework per Oracle fornisce automaticamente i due punti.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand> e visualizzati i relativi parametri. A tale scopo, viene passato un <xref:System.Data.OracleClient.OracleConnection>, una stringa di query che è un'istruzione SQL SELECT e una matrice di <xref:System.Data.OracleClient.OracleParameter> oggetti.  
  
 [!code-csharp[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una versione preparata o compilata del comando sull'origine dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prima di chiamare <xref:System.Data.OracleClient.OracleCommand.Prepare%2A>, specificare il tipo di dati di ogni parametro nell'istruzione da preparare.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> non è impostata.  
  
 oppure  
  
 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> non è <see cref="M:System.Data.OracleClient.OracleConnection.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reimposta la proprietà <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> sul valore predefinito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore predefinito di <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> è 30 secondi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleTransaction ^ Transaction { System::Data::OracleClient::OracleTransaction ^ get(); void set(System::Data::OracleClient::OracleTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Data.OracleClient.OracleTransaction" /> in cui viene eseguito <see cref="T:System.Data.OracleClient.OracleCommand" />.</summary>
        <value>Oggetto <see cref="T:System.Data.OracleClient.OracleTransaction" />. Il valore predefinito è Null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è possibile impostare il <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> proprietà se è già impostato su un valore specifico e il comando è in fase di esecuzione. Se si imposta la proprietà della transazione un <xref:System.Data.OracleClient.OracleTransaction> oggetto che non è connesso allo stesso <xref:System.Data.OracleClient.OracleConnection> come il <xref:System.Data.OracleClient.OracleCommand> dell'oggetto, verrà generata un'eccezione al successivo tentativo di eseguire un'istruzione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica in quale modo il metodo <see langword="Update" /> applicherà i risultati del comando a <see cref="T:System.Data.DataRow" />.</summary>
        <value>Uno dei valori di <see cref="T:System.Data.UpdateRowSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore predefinito <xref:System.Data.UpdateRowSource> valore `Both` a meno che non viene generato automaticamente il comando (come nel caso del <xref:System.Data.OracleClient.OracleCommandBuilder>), nel qual caso il valore predefinito è `None`.  
  
 Per ulteriori informazioni sull'utilizzo di <xref:System.Data.UpdateRowSource> proprietà, vedere [parametri DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore immesso non è uno dei valori di <see cref="T:System.Data.UpdateRowSource" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>