<Type Name="OracleConnection" FullName="System.Data.OracleClient.OracleConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d7fa285b2eb8e74d96ac0fc161882363b9909835" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34452216" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleConnection : System.Data.Common.DbConnection, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleConnection extends System.Data.Common.DbConnection implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleConnection sealed : System::Data::Common::DbConnection, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("OracleConnection has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta una connessione aperta a un database. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo tipo è deprecato e verrà rimossa in una futura versione di .NET Framework. Per ulteriori informazioni, vedere [Oracle e ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).  
  
 Un <xref:System.Data.OracleClient.OracleConnection> oggetto rappresenta una connessione univoca a un database Oracle. Nel caso di un sistema di database client/server, è equivalente a una connessione di rete al server.  
  
 Un'applicazione che crea un'istanza di <xref:System.Data.OracleClient.OracleConnection> oggetto consente di impostare richieste di sicurezza dichiarativo o imperativo che richiedono tutti i chiamanti diretti e indiretti dispongano di autorizzazioni adeguate per il codice. <xref:System.Data.OracleClient.OracleConnection> Crea le richieste di sicurezza utilizzando il <xref:System.Data.OracleClient.OraclePermission> oggetto. Gli utenti possono verificare che il codice disponga di autorizzazioni adeguate utilizzando il <xref:System.Data.OracleClient.OraclePermissionAttribute> oggetto. Utenti e amministratori possono inoltre utilizzare lo strumento Criteri di sicurezza dall'accesso di codice (Caspol.exe) per modificare i criteri di sicurezza a livello aziendale, utente e computer. Per ulteriori informazioni, vedere [Sicurezza](http://msdn.microsoft.com/library/9a9621d7-8883-4a4f-a874-65e8e09e20a6).  
  
> [!NOTE]
>  A differenza di **connessione** oggetto in altri provider di dati .NET Framework (SQL Server, OLE DB e ODBC), <xref:System.Data.OracleClient.OracleConnection> non supporta un <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> proprietà. L'impostazione di un timeout di connessione come una proprietà o nella stringa di connessione non ha alcun effetto e il valore restituito è sempre zero. <xref:System.Data.OracleClient.OracleConnection> non supporta inoltre un <xref:System.Data.OracleClient.OracleConnection.Database%2A> proprietà o un <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> metodo.  
  
 Se il <xref:System.Data.OracleClient.OracleConnection> oggetto esce dall'ambito, rimane aperto. Pertanto, è necessario chiuderla sempre <xref:System.Data.OracleClient.OracleConnection> oggetti chiamando <xref:System.Data.OracleClient.OracleConnection.Close%2A> o **Dispose**, oppure utilizzando il <xref:System.Data.OracleClient.OracleConnection> oggetto all'interno di un `Using` istruzione. In caso contrario, l'operazione di garbage collection liberazione potrebbe non immediatamente. Questo ritardo può causare errori se viene raggiunto il numero massimo di connessioni, mentre un numero di connessioni è in attesa di essere eliminato dal garbage collector. Al contrario, la chiusura delle connessioni chiamando <xref:System.Data.OracleClient.OracleConnection.Close%2A> utilizza le risorse native in modo più efficiente, aumento della scalabilità e migliorando le prestazioni complessive dell'applicazione. Per garantire che le connessioni sono sempre chiusi, aprire la connessione all'interno di un `Using` blocco.  
  
> [!NOTE]
>  Per distribuire applicazioni ad alte prestazioni, è spesso necessario usare il pool di connessioni. Tuttavia, quando si utilizza il Provider di dati .NET Framework per Oracle, non è necessario abilitare il pool di connessioni perché il provider gestito automaticamente.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleCommand> e <xref:System.Data.OracleClient.OracleConnection>. Il <xref:System.Data.OracleClient.OracleConnection> viene aperto e impostato come il <xref:System.Data.OracleClient.OracleCommand.Connection%2A?displayProperty=nameWithType> proprietà. Nell'esempio viene quindi chiamato <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>e chiude la connessione. A tale scopo, il <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> viene passata una stringa di connessione e una stringa di query che rappresenta un'istruzione SQL INSERT.  
  
 [!code-csharp[Classic WebData OracleConnection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.OracleClient.OracleDataAdapter" />
    <altmember cref="T:System.Data.OracleClient.OracleCommand" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza dell'oggetto <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza dell'oggetto <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente crea e apre un <xref:System.Data.OracleClient.OracleConnection>.  
  
 [!code-csharp[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleConnection(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connessione utilizzata per aprire il database.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.OracleClient.OracleConnection" /> con la stringa di connessione specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente crea e apre un <xref:System.Data.OracleClient.OracleConnection>.  
  
 [!code-csharp[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Avvia una transazione nel database.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleTransaction ^ BeginTransaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avvia una transazione nel database.</summary>
        <returns>Oggetto che rappresenta la nuova transazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per eseguire il commit o il rollback della transazione, è necessario utilizzare in modo esplicito il <xref:System.Data.OracleClient.OracleTransaction.Commit%2A> o <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> metodi.  
  
 Per garantire che il Provider di dati .NET Framework per il modello di gestione delle transazioni Oracle venga eseguito correttamente, evitare di utilizzare altri modelli di gestione delle transazioni, ad esempio quello fornito dal database.  
  
> [!NOTE]
>  Se non si specifica un livello di isolamento, viene utilizzato il livello di isolamento predefinito. Per specificare un livello di isolamento con il <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> metodo, utilizzare il <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> rapporto di overload.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleConnection> e <xref:System.Data.OracleClient.OracleTransaction>. Viene inoltre illustrato come utilizzare il <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, e <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> metodi.  
  
 [!code-csharp[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le transazioni parallele non sono supportate.</exception>
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Commit" />
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction BeginTransaction (System.Data.IsolationLevel il);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleTransaction BeginTransaction(valuetype System.Data.IsolationLevel il) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (il As IsolationLevel) As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleTransaction ^ BeginTransaction(System::Data::IsolationLevel il);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="il" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="il">Livello di isolamento della transazione per questa connessione.</param>
        <summary>Avvia una transazione nel database con il valore di <see cref="T:System.Data.IsolationLevel" /> specificato.</summary>
        <returns>Oggetto che rappresenta la nuova transazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per eseguire il commit o il rollback della transazione, è necessario utilizzare in modo esplicito il <xref:System.Data.OracleClient.OracleTransaction.Commit%2A> o <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> metodi.  
  
 Per garantire che il Provider di dati .NET Framework per il modello di gestione delle transazioni Oracle venga eseguito correttamente, evitare di utilizzare altri modelli di gestione delle transazioni, ad esempio quello fornito dal database.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleConnection> e <xref:System.Data.OracleClient.OracleTransaction>. Viene inoltre illustrato come utilizzare il <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, e <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> metodi.  
  
 [!code-csharp[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le transazioni parallele non sono supportate.</exception>
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Commit" />
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Nome del database da usare al posto di quello corrente.</param>
        <summary>Modifica il database corrente per un oggetto <see cref="T:System.Data.OracleClient.OracleConnection" /> aperto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `value` parametro deve contenere un nome di database valido e non può contenere un valore null, una stringa vuota (""), o una stringa contenente solo caratteri vuoti.  
  
> [!NOTE]
>  A differenza di **connessione** oggetto in altri provider di dati .NET Framework (SQL Server, OLE DB e ODBC), <xref:System.Data.OracleClient.OracleConnection> non supporta un <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> proprietà. L'impostazione di un timeout di connessione come una proprietà o nella stringa di connessione non ha alcun effetto e il valore restituito è sempre zero. <xref:System.Data.OracleClient.OracleConnection> non supporta inoltre un <xref:System.Data.OracleClient.OracleConnection.Database%2A> proprietà o un <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il nome del database non è valido.</exception>
        <exception cref="T:System.InvalidOperationException">La connessione non è aperta.</exception>
        <exception cref="T:System.Data.OracleClient.OracleException">Non è possibile modificare il database.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearAllPools">
      <MemberSignature Language="C#" Value="public static void ClearAllPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ClearAllPools" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllPools ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllPools();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Svuota il pool di connessioni.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection.ClearAllPools%2A> Reimposta o Svuota il pool di connessioni. Se le connessioni sono in uso al momento della chiamata, queste vengono contrassegnate in modo appropriato e vengono eliminate quando <xref:System.Data.OracleClient.OracleConnection.Close%2A> viene chiamato su di essi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPool">
      <MemberSignature Language="C#" Value="public static void ClearPool (System.Data.OracleClient.OracleConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearPool(class System.Data.OracleClient.OracleConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearPool (connection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearPool(System::Data::OracleClient::OracleConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="connection">Oggetto <see cref="T:System.Data.OracleClient.OracleConnection" /> da cancellare dal pool.</param>
        <summary>Svuota il pool di connessioni associato alla connessione specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection.ClearPool%2A> metodo cancella il pool di connessioni associato `connection`. Se le connessioni aggiuntive associate `connection` sono in uso al momento della chiamata vengono contrassegnate in modo appropriato e vengono eliminate quando <xref:System.Data.OracleClient.OracleConnection.Close%2A> viene chiamato su di essi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chiude la connessione al database.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OracleClient.OracleConnection.Close%2A> metodo esegue il rollback di tutte le transazioni in sospeso. È quindi rilascia la connessione al pool di connessioni o chiude la connessione se il pool di connessioni è disabilitato.  
  
 Un'applicazione può chiamare <xref:System.Data.OracleClient.OracleConnection.Close%2A> più volte senza generare un'eccezione.  
  
> [!NOTE]
>  Quando si utilizza il Provider di dati .NET Framework per Oracle, non è necessario abilitare il pool di connessioni perché il provider gestito automaticamente.  
  
> [!CAUTION]
>  Non chiamare <xref:System.Data.OracleClient.OracleConnection.Close%2A> su un <xref:System.Data.OracleClient.OracleConnection>, <xref:System.Data.OracleClient.OracleDataReader>, o qualsiasi altro oggetto gestito nel `Finalize` metodo della classe. In un finalizzatore, è necessario rilasciare solo le risorse non gestite che la classe controlla direttamente. Se nella classe non sono presenti risorse non gestite, non includere un metodo `Finalize` nella relativa definizione della classe. Per ulteriori informazioni, vedere [Garbage Collection](~/docs/standard/garbage-collection/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la stringa utilizzata per aprire un database Oracle.</summary>
        <value>Stringa di connessione Oracle che contiene impostazioni, quali il nome del server, necessarie a stabilire la connessione iniziale. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> può essere impostata solo quando la connessione viene chiusa.  
  
 È possibile utilizzare il <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> proprietà per connettersi a un database. Nell'esempio seguente viene illustrata una stringa di connessione tipica.  
  
```  
"Data Source=Oracle8i;Integrated Security=yes"  
```  
  
 Molte delle impostazioni specificate nella stringa di contengono le proprietà di sola lettura corrispondenti (ad esempio, `Data Source=MyServer`, che corrisponde alla <xref:System.Data.OracleClient.OracleConnection.DataSource%2A> proprietà). Quando si imposta la stringa di connessione, tutte queste proprietà vengono aggiornate, a meno che non viene rilevato un errore, nel qual caso nessuna delle proprietà vengono aggiornata. <xref:System.Data.OracleClient.OracleConnection> proprietà restituiscono solo le impostazioni predefinite o quelle specificate nel <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.  
  
 Reimpostare il <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> su una connessione chiusa Reimposta tutte le connessione stringa valori e le proprietà correlate, inclusa la password.  
  
 La stringa di connessione viene analizzata immediatamente dopo l'impostazione. Se l'analisi vengono rilevati errori nella sintassi, un'eccezione in fase di esecuzione, ad esempio <xref:System.ArgumentException>, viene generato. Altri errori sono disponibili solo quando viene effettuato un tentativo di aprire la connessione.  
  
 Il formato di base di una stringa di connessione è una serie di coppie parola chiave/valore separati da punti e virgola. Il segno di uguale (=) connette ogni parola chiave al relativo valore. Per includere i valori che contengono un punto e virgola, una virgoletta singola o una virgoletta doppia, il valore deve essere racchiuso tra virgolette doppie. Se il valore contiene sia un punto e virgola e un carattere di virgolette doppie, il valore può essere racchiuso tra virgolette singole. La virgoletta singola è utile anche se il valore inizia con un carattere di virgolette doppie. Viceversa, le virgolette doppie possono essere utilizzate se il valore inizia con una virgoletta singola. Se il valore contiene caratteri di virgoletta singola e virgolette doppie, è necessario raddoppiare il carattere virgoletta usato per delimitare il valore ogni volta che si verifica all'interno del valore.  
  
 Per includere nel valore stringa spazi iniziali o finali, il valore deve essere racchiuso tra virgolette singole o doppie. Eventuali spazi iniziali o finali integer, Boolean o valori enumerati vengono ignorati, anche se racchiusi tra virgolette. Tuttavia, vengono mantenuti gli spazi all'interno di un valore o la parola chiave della stringa letterale. Virgolette singole o doppie possono essere utilizzate in una stringa di connessione senza delimitatori, a meno che un carattere di virgoletta è il primo o ultimo carattere nel valore, ad esempio, `Data Source= my'Server` o `Data Source= my"Server`.  
  
 Per includere un segno di uguale (=) in una parola chiave o un valore, deve essere preceduto da un altro segno di uguale. Ad esempio, nella stringa di connessione ipotetico  
  
```  
"key==word=value"  
```  
  
 la parola chiave è "chiave = word" e il valore è "value".  
  
 Se una parola chiave specifica una coppia parola chiave/valore è presente più volte in una stringa di connessione, viene utilizzato l'ultima occorrenza del set di valore.  
  
 Parole chiave fanno distinzione tra maiuscole e minuscole.  
  
 La tabella seguente elenca i nomi validi per i valori all'interno di <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.  
  
|nome|Default|Descrizione|  
|----------|-------------|-----------------|  
|origine dati<br /><br /> oppure<br /><br /> Server||Il nome o indirizzo di rete dell'istanza di Oracle a cui connettersi.|  
|Sicurezza integrata|'false'|Indica se la connessione è a essere protetta.<br /><br /> Valori riconosciuti sono `true` (consigliato), `false`, `yes`, e `no`.|  
|Password||La password per l'accesso all'account di Oracle. Per mantenere un elevato livello di sicurezza, è consigliabile utilizzare invece la parola chiave di sicurezza integrata.|  
|Persist Security Info|'false'|Se impostato su `false` o `no` (consigliato), informazioni riservate, ad esempio la password non viene restituite come parte della connessione se la connessione è aperta o è già stata open <xref:System.Data.OracleClient.OracleConnection.State%2A>. Reimpostare la stringa di connessione Reimposta tutti i valori di stringa di connessione, inclusa la password.<br /><br /> I valori riconosciuti sono `true`, `false`, `yes` e `no`.|  
|Unicode|'false'|Specifica se il Provider di dati .NET Framework per Oracle utilizza le chiamate all'API modalità UTF16. Questa parola chiave viene ignorata, tranne quando si utilizza il software client Oracle9i.|  
|ID utente||L'account di accesso Oracle. Per mantenere un elevato livello di sicurezza, è consigliabile utilizzare invece la parola chiave di sicurezza integrata.|  
  
 La tabella seguente elenca i nomi validi per i valori all'interno del pool di connessioni di <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.  
  
|nome|Default|Descrizione|  
|----------|-------------|-----------------|  
|Durata della connessione|0|Quando una connessione viene restituita al pool, l'ora di creazione viene confrontata con l'ora corrente e la connessione viene eliminata se l'intervallo è superiore al valore in secondi della durata della connessione specificato da `Connection Lifetime`. Questa è utile nelle configurazioni cluster per applicare il bilanciamento del carico tra un server in esecuzione e un server appena portato online.<br /><br /> Un valore pari a zero comporta per il timeout di connessione massimo le connessioni in pool.|  
|Inserisci|'true'|Quando `true` o `yes`, la funzione di pool inserisce automaticamente la connessione nel contesto di transazione corrente del thread di creazione.<br /><br /> I valori riconosciuti sono `true`, `false`, `yes` e `no`.|  
|Dimensione max pool|100|Numero massimo di connessioni consentite nel pool. L'impostazione di `Max Pool Size` valore il <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> può influire sulle prestazioni. Se si prevede di creare e attivamente utilizza più di 100 connessioni, è necessario aumentare `Max Pool Size` su un valore vicino all'utilizzo stazionario delle connessioni per l'applicazione.|  
|Dimensione min pool|0|Il numero minimo di connessioni consentite nel pool.|  
|Pooling|'true'|Quando `true` o `yes`, <xref:System.Data.OracleClient.OracleConnection> oggetto viene creato dal pool appropriato o, se necessario, viene creato e aggiunto al pool appropriato.<br /><br /> I valori riconosciuti sono `true`, `false`, `yes` e `no`.|  
  
 Quando si imposta una parola chiave o valori che richiedono un valore booleano di pool di connessioni, è possibile utilizzare 'Sì' anziché 'true' e 'no' anziché 'false'. I valori integer sono rappresentati come stringhe.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleConnection> e vengono impostate alcune delle relative proprietà nella stringa di connessione.  
  
 [!code-csharp[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tempo di attesa per stabilire una connessione, prima di terminare il tentativo e generare un errore.</summary>
        <value>Tempo di attesa in secondi per l'apertura di una connessione. Il valore predefinito è 15 secondi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile impostare la quantità di tempo di attesa di una connessione al timeout utilizzando il `Connect Timeout` o `Connection Timeout` parole chiave nella stringa di connessione. Il valore 0 indica nessun limite e devono essere evitato un <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> perché un tentativo di connessione attende indefinitamente.  
  
> [!NOTE]
>  A differenza di `Connection` oggetto in altri provider di dati .NET Framework (SQL Server, OLE DB e ODBC), <xref:System.Data.OracleClient.OracleConnection> non supporta un <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> proprietà. Impostazione di un timeout di connessione con una proprietà o nella stringa di connessione non ha alcun effetto e il valore restituito è sempre zero. <xref:System.Data.OracleClient.OracleConnection> non supporta inoltre un <xref:System.Data.OracleClient.OracleConnection.Database%2A> proprietà o un <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore specificato è minore di 0. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ CreateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea e restituisce un oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> associato alla classe <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.OracleClient.OracleCommand" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome del database corrente o del database da usare dopo l'apertura della connessione.</summary>
        <value>Nome del database corrente o del database da usare dopo l'apertura di una connessione. Il valore predefinito è una stringa vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OracleClient.OracleConnection.Database%2A> proprietà Aggiorna in modo dinamico. Se si modifica il database corrente utilizzando un'istruzione SQL o <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> (metodo), viene inviato un messaggio informativo e la proprietà viene aggiornata automaticamente.  
  
> [!NOTE]
>  A differenza di `Connection` oggetto in altri provider di dati .NET Framework (SQL Server, OLE DB e ODBC), <xref:System.Data.OracleClient.OracleConnection> non supporta un <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> proprietà. Impostazione di un timeout di connessione con una proprietà o nella stringa di connessione non ha alcun effetto e il valore restituito è sempre zero. <xref:System.Data.OracleClient.OracleConnection> non supporta inoltre un <xref:System.Data.OracleClient.OracleConnection.Database%2A> proprietà o un <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome del server Oracle a cui effettuare la connessione.</summary>
        <value>Nome del server Oracle a cui effettuare la connessione. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleConnection> e vengono visualizzate alcune delle relative proprietà di sola lettura.  
  
 [!code-csharp[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction distributedTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction distributedTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (distributedTransaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ distributedTransaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distributedTransaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="distributedTransaction">Riferimento a un oggetto <see cref="T:System.EnterpriseServices.ITransaction" /> esistente in cui eseguire l'integrazione.</param>
        <summary>Permette l'integrazione nella transazione specificata come transazione distribuita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Novità in ADO.NET 2.0 è il supporto per l'utilizzo di <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> metodo di integrazione in una transazione distribuita. Poiché inserisce una connessione in un <xref:System.Transactions.Transaction> istanza, **EnlistTransaction** consente di sfruttare le funzionalità disponibili nel <xref:System.Transactions> dello spazio dei nomi per la gestione transazioni distribuite, rendendola preferibile ** EnlistDistributedTransaction** a questo scopo. Per ulteriori informazioni, vedere [transazioni distribuite](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 È possibile continuare a eseguire l'inserimento di una transazione distribuita esistente usando il  
  
 <xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> Se l'inserimento automatico è disabilitato. L'inserimento in una transazione distribuita esistente assicura che, se è stato eseguito il commit o il rollback della transazione, le modifiche apportate dal codice all'origine dati sono inoltre eseguito il commit o il rollback.  
  
 <xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> Restituisce un'eccezione se il <xref:System.Data.OracleClient.OracleConnection> è già avviato una transazione tramite <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>. Tuttavia, se la transazione è una transazione locale avviata nell'origine dati (ad esempio eseguendo in modo esplicito l'istruzione BEGIN TRANSACTION tramite un <xref:System.Data.OracleClient.OracleCommand> oggetto), <xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> esegue il rollback della transazione locale e si integra in esistente transazione distribuita come richiesto. Non verrà notificato che è stato eseguito il rollback della transazione locale e responsabile della gestione delle transazioni locali non avviate tramite <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Riferimento a un oggetto <see cref="T:System.Transactions.Transaction" /> esistente in cui eseguire l'integrazione.</param>
        <summary>Permette l'integrazione nella transazione specificata come transazione distribuita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Novità in ADO.NET 2.0 è il supporto per l'utilizzo di  
  
 <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> metodo di integrazione in una transazione distribuita. Poiché inserisce una connessione in un <xref:System.Transactions.Transaction> istanza, **EnlistTransaction** consente di sfruttare le funzionalità disponibili nel <xref:System.Transactions> dello spazio dei nomi per la gestione transazioni distribuite, rendendola preferibile ** EnlistDistributedTransaction**, che utilizza un **System.EnterpriseServices.ITransaction** oggetto. Include inoltre una semantica leggermente diversa: quando una connessione in modo esplicito è integrata in una transazione, non può essere rimosso o integrata in un'altra transazione fino al completamento della prima transazione. Per ulteriori informazioni sulle transazioni distribuite, vedere [transazioni distribuite](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce informazioni sullo schema per l'origine dati di questo oggetto <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce informazioni sullo schema per l'origine dati di questo oggetto <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataTable" /> che contiene informazioni sullo schema.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName">Specifica il nome dello schema da restituire.</param>
        <summary>Restituisce le informazioni di schema per l'origine dati dell'oggetto <see cref="T:System.Data.OracleClient.OracleConnection" /> utilizzando la stringa specificata per il nome dello schema.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataTable" /> che contiene informazioni sullo schema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Query che utilizzano <xref:System.Data.OracleClient.OracleConnection.GetSchema%2A> tra maiuscole e minuscole. A causa di un trattamento Oracle dei casi quando si crea uno schema, questo può causare risultati imprevisti.  
  
 Se lo schema è stato creato senza virgolette`,` Oracle archivia il nome dell'oggetto in lettere maiuscole. Se lo schema è stato creato con le virgolette, Oracle archivia il nome dell'oggetto delle maiuscole e minuscole specificato.  
  
 Ad esempio, si supponga di crea una tabella denominata MyTable utilizzando una delle due istruzioni seguenti:  
  
 `CREATE TABLE MyTable ...`  
  
 `CREATE TABLE "MyTable" ...`  
  
 Per recuperare informazioni su questa tabella tramite il **GetSchema** metodo nel primo caso, è necessario passare "MYTABLE" come argomento. Nel secondo caso, è necessario passare "MyTable" come argomento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'oggetto <paramref name="collectionName" /> è specificato come null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName">Specifica il nome dello schema da restituire.</param>
        <param name="restrictionValues">Insieme di valori di restrizione per lo schema richiesto.</param>
        <summary>Restituisce le informazioni di schema per l'origine dati dell'oggetto <see cref="T:System.Data.OracleClient.OracleConnection" /> utilizzando la stringa specificata per il nome dello schema e la matrice di stringhe specificata per i valori di restrizione.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataTable" /> che contiene informazioni sullo schema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `restrictionValues` parametro può fornire profondità n di valori specificati dall'insieme di restrizioni per una raccolta specifica. Per impostare i valori per una determinata restrizione e non impostare i valori di altre restrizioni, è necessario impostare le restrizioni precedenti su null e quindi inserire il valore appropriato per la restrizione che si desidera specificare un valore per.  
  
 Un esempio di questa è la raccolta "Tabelle". Se la raccolta "Tables" contiene 3 restrizioni: database, proprietario e nome di tabella. si desidera vengano restituite solo le tabelle associate al proprietario "Carlo", quindi è necessario passare i valori seguenti (almeno): null, "Carlo". Se un valore di restrizione non viene passato, i valori predefiniti vengono utilizzati per la restrizione. Questo è lo stesso mapping passare null, che è diverso dal passaggio di una stringa vuota per il valore del parametro. In questo caso, la stringa vuota ("") viene considerato come valore per il parametro specificato.  
  
 Query che utilizzano <xref:System.Data.OracleClient.OracleConnection.GetSchema%2A> tra maiuscole e minuscole. A causa di un trattamento Oracle dei casi quando si crea uno schema, questo può causare risultati imprevisti.  
  
 Se lo schema è stato creato senza virgolette`,` Oracle archivia il nome dell'oggetto in lettere maiuscole. Se lo schema è stato creato con le virgolette, Oracle archivia il nome dell'oggetto delle maiuscole e minuscole specificato.  
  
 Ad esempio, si supponga di crea una tabella denominata MyTable utilizzando una delle due istruzioni seguenti:  
  
 `CREATE TABLE MyTable ...`  
  
 `CREATE TABLE "MyTable" ...`  
  
 Per recuperare informazioni su questa tabella tramite il **GetSchema** metodo nel primo caso, è necessario passare "MYTABLE" come argomento. Nel secondo caso, è necessario passare "MyTable" come argomento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'oggetto <paramref name="collectionName" /> è specificato come null.</exception>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.OracleClient.OracleInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OracleClient.OracleInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.OracleClient.OracleConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As OracleInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OracleClient::OracleInfoMessageEventHandler ^ InfoMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Viene generato quando si invia un avviso o un messaggio informativo mediante Oracle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poiché il Provider di dati .NET Framework per Oracle utilizza l'interfaccia Oracle Call Interface (OCI), ogni volta che il provider di dati riceve un messaggio di operazione riuscita con Info, un <xref:System.Data.OracleClient.OracleConnection.InfoMessage> viene generato l'evento. Un esempio possibile creare una stored procedure che contiene un errore di sintassi. La chiamata al <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> metodo potrebbe avere esito positivo. Tuttavia un <xref:System.Data.OracleClient.OracleConnection.InfoMessage> verrebbe generato l'evento per segnalare l'errore di sintassi.  
  
 I client che desidera elaborare avvisi o messaggi informativi inviati dal server è necessario creare un <xref:System.Data.OracleClient.OracleInfoMessageEventHandler> delegato per l'ascolto su questo evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Apre una connessione a un database con le impostazioni delle proprietà specificate dalla proprietà <see cref="P:System.Data.OracleClient.OracleConnection.ConnectionString" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OracleClient.OracleConnection> Disegna una connessione aperta dal pool di connessioni, se disponibile. In caso contrario, stabilisce una nuova connessione al database.  
  
> [!NOTE]
>  Se il <xref:System.Data.OracleClient.OracleConnection> esce dall'ambito, la connessione rappresenta non viene chiusa automaticamente. Pertanto, è necessario chiudere esplicitamente la connessione, chiamando <xref:System.Data.OracleClient.OracleConnection.Close%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La connessione non è aperta.</exception>
        <exception cref="T:System.Data.OracleClient.OracleException">Non è possibile modificare il database.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una stringa che contiene la versione del server a cui è connesso il client.</summary>
        <value>Versione del server connesso.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OracleClient.OracleConnection.ServerVersion%2A> proprietà è nel formato di versione di Oracle. Ad esempio, il formato per una versione Oracle8 è una stringa nel formato "8.1.7.0.0 Oracle8 Release 8.1.7.0.0 - Production."  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleConnection> e vengono visualizzate alcune delle relative proprietà di sola lettura.  
  
 [!code-csharp[Classic WebData OracleConnection.ServerVersion#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.ServerVersion/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.ServerVersion#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.ServerVersion/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La connessione è chiusa.</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene lo stato corrente della connessione.</summary>
        <value>Combinazione bit per bit dei valori di <see cref="T:System.Data.ConnectionState" />. Il valore predefinito è <see langword="Closed" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le modifiche di stato consentiti sono:  
  
-   Da `Closed` a `Open`, usando il `Open` metodo il <xref:System.Data.OracleClient.OracleConnection> oggetto.  
  
-   Da `Open` a `Closed`, usando il <xref:System.Data.OracleClient.OracleConnection.Close%2A> metodo il <xref:System.Data.OracleClient.OracleConnection> oggetto.  
  
   
  
## Examples  
 L'esempio seguente crea un'istanza di una classe derivata, <xref:System.Data.OracleClient.OracleConnection>, imposta il relativo <xref:System.Data.IDbConnection.ConnectionString%2A>e consente di visualizzare il relativo <xref:System.Data.OracleClient.OracleConnection.State%2A>.  
  
 [!code-csharp[Classic WebData OracleConnection.State#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.State/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.State#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.State/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un nuovo oggetto che è una copia dell'istanza corrente.</summary>
        <returns>Nuovo oggetto, copia di questa istanza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Data.OracleClient.OracleConnection> a un'interfaccia <xref:System.ICloneable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>