<Type Name="OracleDataReader" FullName="System.Data.OracleClient.OracleDataReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="840fb91578b7a290d0c9dbbd02d5108e376fdbe7" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34452265" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleDataReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleDataReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleDataReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleDataReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleDataReader sealed : System::Data::Common::DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce un modo per leggere un flusso di righe di dati forward-only da un'origine dati. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per creare un <xref:System.Data.OracleClient.OracleDataReader>, è necessario chiamare il <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> metodo il <xref:System.Data.OracleClient.OracleCommand> , anziché utilizzare direttamente un costruttore dell'oggetto.  
  
 Modifiche apportate a un set di risultati da un altro processo o thread durante la lettura dei dati potrebbero essere visibili all'utente di <xref:System.Data.OracleClient.OracleDataReader>.  
  
 <xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> e <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> sono le uniche proprietà che è possibile chiamare dopo il <xref:System.Data.OracleClient.OracleDataReader> è chiuso. In alcuni casi, è necessario chiamare <xref:System.Data.OracleClient.OracleDataReader.Close%2A> prima di poter chiamare <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>.  
  
 Più <xref:System.Data.OracleClient.OracleDataReader> possono essere aperti in qualsiasi momento.  
  
 I due esempi di Visual Basic seguenti viene illustrato come utilizzare un <xref:System.Data.OracleClient.OracleDataReader> per recuperare un oggetto Oracle `REF CURSOR`. Questi esempi vengono utilizzate tabelle definite nello schema Oracle Scott/Tiger e richiedono il seguente package PL/SQL e il corpo del package. È necessario creare per il server per utilizzare gli esempi.  
  
 Creare il seguente package Oracle sul server Oracle.  
  
```  
CREATE OR REPLACE PACKAGE CURSPKG AS   
   TYPE T_CURSOR IS REF CURSOR;   
   PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
      IO_CURSOR IN OUT T_CURSOR);   
   PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
      DEPTCURSOR OUT T_CURSOR);  
END CURSPKG;  
/  
```  
  
 Creare il seguente corpo del package Oracle sul server Oracle.  
  
```  
  
CREATE OR REPLACE PACKAGE BODY CURSPKG AS   
    PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
                               IO_CURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR T_CURSOR;   
    BEGIN   
        IF N_EMPNO <> 0 THEN   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO   
                        AND EMP.EMPNO = N_EMPNO;   
        ELSE   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO;   
        END IF;   
        IO_CURSOR := V_CURSOR;   
    END OPEN_ONE_CURSOR;   
    PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
                                DEPTCURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR1 T_CURSOR;   
        V_CURSOR2 T_CURSOR;   
    BEGIN   
        OPEN V_CURSOR1 FOR SELECT * FROM EMP;   
        OPEN V_CURSOR2 FOR SELECT * FROM DEPT;   
        EMPCURSOR  := V_CURSOR1;   
        DEPTCURSOR := V_CURSOR2;   
    END OPEN_TWO_CURSORS;   
END CURSPKG;  
/  
```  
  
 Questo esempio di Visual Basic viene eseguita una stored procedure PL/SQL archiviati che restituisce un `REF CURSOR` parametro e legge il valore come un <xref:System.Data.OracleClient.OracleDataReader>.  
  
```vb  
Private Sub ReadOracleData(ByVal connectionString As String)  
   Dim connection As New OracleConnection(connectionString)  
   Dim command As New OracleCommand()  
   Dim reader As OracleDataReader  
  
   connection.Open()  
   command.Connection = connection  
   command.CommandText = "CURSPKG.OPEN_ONE_CURSOR"  
   command.CommandType = CommandType.StoredProcedure  
   command.Parameters.Add(New OracleParameter("N_EMPNO", OracleType.Number)).Value = 7369  
   command.Parameters.Add(New OracleParameter("IO_CURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output  
  
   reader = command.ExecuteReader()  
   While (reader.Read())  
      ' Do something with the values.  
   End While  
   reader.Close()  
   connection.Close()  
End Sub  
```  
  
 Questo esempio di Visual Basic viene eseguita una stored procedure PL/SQL archiviati che restituisce due `REF CURSOR` , parametri e legge i valori utilizzando un <xref:System.Data.OracleClient.OracleDataReader>.  
  
```vb  
Private Sub ReadOracleData(ByVal connectionString As String)  
   Dim dataSet As New DataSet()  
   Dim connection As New OracleConnection(connectionString)  
   Dim command As New OracleCommand()  
   Dim reader As OracleDataReader  
  
   connection.Open()  
   command.Connection = connection  
   command.CommandText = "CURSPKG.OPEN_TWO_CURSORS"  
   command.CommandType = CommandType.StoredProcedure  
   command.Parameters.Add(New OracleParameter("EMPCURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output  
   command.Parameters.Add(New OracleParameter("DEPTCURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output  
  
   reader = command.ExecuteReader(CommandBehavior.CloseConnection)  
   While (reader.Read())  
      ' Do something with the values.  
   End While  
   reader.NextResult()  
   While (reader.Read())  
        ' Do something with the values.  
   End While  
   reader.Close()  
   connection.Close()  
 End Sub  
```  
  
 Nell'esempio c# viene creata una tabella Oracle e lo carica con i dati. È necessario eseguire questo esempio viene prima di eseguire l'esempio successivo, in cui viene illustrato l'utilizzo un <xref:System.Data.OracleClient.OracleDataReader> per accedere ai dati tramite le strutture OracleType.  
  
```csharp  
public void Setup(string connectionString)  
{  
   OracleConnection connection = new OracleConnection(connectionString);  
   try  
   {  
      connection.Open();  
      OracleCommand command = connection.CreateCommand();  
      command.CommandText ="CREATE TABLE OracleTypesTable (MyVarchar2 varchar2(3000),MyNumber number(28,4) PRIMARY KEY,MyDate date, MyRaw raw(255))";  
      command.ExecuteNonQuery();  
      command.CommandText ="INSERT INTO OracleTypesTable VALUES ('test', 2, to_date('2000-01-11 12:54:01','yyyy-mm-dd hh24:mi:ss'), '0001020304')";  
      command.ExecuteNonQuery();  
      command.CommandText="SELECT * FROM OracleTypesTable";  
   }  
   catch(Exception)  
   {  
   }  
   finally  
   {  
      connection.Close();  
   }  
}  
```  
  
 Nell'esempio c# viene utilizzata una <xref:System.Data.OracleClient.OracleDataReader> per accedere ai dati e vengono utilizzati diversi <xref:System.Data.OracleClient.OracleType> strutture per visualizzare i dati.  
  
```csharp  
public void ReadOracleTypesExample(string connectionString)  
{  
   OracleConnection connection = new OracleConnection(connectionString);  
   connection.Open();  
   OracleCommand command = connection.CreateCommand();  
   try  
   {  
      command.CommandText = "SELECT * FROM OracleTypesTable";  
      OracleDataReader reader = command.ExecuteReader();  
      reader.Read();  
      //Using the Oracle specific getters for each type is faster than  
      //using GetOracleValue.  
      //First column, MyVarchar2, is a VARCHAR2 data type in Oracle Server  
      //and maps to OracleString.  
      OracleString oraclestring1 = reader.GetOracleString(0);  
      Console.WriteLine("OracleString " + oraclestring1.ToString());  
  
      //Second column, MyNumber, is a NUMBER data type in Oracle Server  
      //and maps to OracleNumber.  
      OracleNumber oraclenumber1 = reader.GetOracleNumber(1);  
      Console.WriteLine("OracleNumber " + oraclenumber1.ToString());  
  
      //Third column, MyDate, is a DATA data type in Oracle Server  
      //and maps to OracleDateTime.  
      OracleDateTime oracledatetime1 = reader.GetOracleDateTime(2);  
      Console.WriteLine("OracleDateTime " + oracledatetime1.ToString());  
  
      //Fourth column, MyRaw, is a RAW data type in Oracle Server and  
      //maps to OracleBinary.  
      OracleBinary oraclebinary1 = reader.GetOracleBinary(3);  
  
      //Calling value on a null OracleBinary throws  
      //OracleNullValueException; therefore, check for a null value.  
      if (oraclebinary1.IsNull==false)  
      {  
         foreach(byte b in oraclebinary1.Value)  
         {  
            Console.WriteLine("byte " + b.ToString());  
         }  
      }  
      reader.Close();  
   }  
   catch(Exception e)  
   {  
      Console.WriteLine(e.ToString());  
   }  
   finally  
   {  
      connection.Close();  
   }  
}  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleConnection>, un <xref:System.Data.OracleClient.OracleCommand>e un <xref:System.Data.OracleClient.OracleDataReader>. Nell'esempio legge i dati, scrivono nella console. Infine, l'esempio chiude il <xref:System.Data.OracleClient.OracleDataReader>, quindi il <xref:System.Data.OracleClient.OracleConnection>.  
  
 [!code-csharp[Classic WebData OracleDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleDataReader/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleDataReader/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chiude l'oggetto <see cref="T:System.Data.OracleClient.OracleDataReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Più <xref:System.Data.OracleClient.OracleDataReader> possono essere aperti in qualsiasi momento.  
  
> [!CAUTION]
>  Non chiamare `Close` o `Dispose` in una connessione, un `DataReader`, o qualsiasi altro oggetto gestito di `Finalize` metodo della classe. In un finalizzatore, è necessario rilasciare solo le risorse non gestite che la classe controlla direttamente. Se nella classe non sono presenti risorse non gestite, non includere un metodo `Finalize` nella relativa definizione della classe. Per ulteriori informazioni, vedere [Garbage Collection](~/docs/standard/garbage-collection/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica il livello di annidamento della riga corrente.</summary>
        <value>Livello di annidamento della riga corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella più esterna è di livello zero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di colonne nella riga corrente.</summary>
        <value>Quando non è posizionato in un recordset valido, 0; in caso contrario, il numero delle colonne presenti nel record corrente. Il valore predefinito è -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Include campi nascosti. Utilizzare <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> per escludere campi nascosti.  
  
 Dopo l'esecuzione di una query che non restituisce righe, <xref:System.Data.OracleClient.OracleDataReader.FieldCount%2A> restituisce 0.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Non è presente nessuna connessione a un'origine dati.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come valore Boolean.</summary>
        <returns>Boolean corrispondente al valore della colonna.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (i As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come byte.</summary>
        <returns>Valore della colonna specificata sotto forma di byte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int i, long fieldOffset, byte[] buffer2, int bufferoffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 i, int64 fieldOffset, unsigned int8[] buffer2, int32 bufferoffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (i As Integer, fieldOffset As Long, buffer2 As Byte(), bufferoffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int i, long fieldOffset, cli::array &lt;System::Byte&gt; ^ buffer2, int bufferoffset, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="fieldOffset" Type="System.Int64" />
        <Parameter Name="buffer2" Type="System.Byte[]" />
        <Parameter Name="bufferoffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <param name="fieldOffset">Indice all'interno del campo dal quale iniziare l'operazione di lettura.</param>
        <param name="buffer2">Buffer in cui leggere il flusso di byte.</param>
        <param name="bufferoffset">Indice dal quale <c>buffer</c> inizia l'operazione di scrittura.</param>
        <param name="length">Numero di byte da leggere.</param>
        <summary>Legge un flusso di byte dall'offset di colonna specificato nel buffer come matrice, a partire dall'offset del buffer specificato.</summary>
        <returns>Numero effettivo di byte letti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleDataReader.GetBytes%2A> Restituisce il numero di byte disponibili nel campo. Nella maggior parte dei casi si tratta della lunghezza esatta del campo. Tuttavia, il numero restituito può essere inferiore alla lunghezza del campo se `GetBytes` è già stato utilizzato per ottenere i byte del campo. Questo può essere il caso, ad esempio, se il <xref:System.Data.OracleClient.OracleDataReader> viene letta una struttura di dati di grandi dimensioni in un buffer. Per ulteriori informazioni, vedere il `SequentialAccess` l'impostazione di <xref:System.Data.CommandBehavior>.  
  
 Se si passa un buffer che è un valore null, <xref:System.Data.OracleClient.OracleDataReader.GetBytes%2A> restituisce la lunghezza del campo espressa in byte.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (i As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di carattere.</summary>
        <returns>Valore della colonna specificata sotto forma di carattere.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int i, long fieldOffset, char[] buffer2, int bufferoffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 i, int64 fieldOffset, char[] buffer2, int32 bufferoffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (i As Integer, fieldOffset As Long, buffer2 As Char(), bufferoffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int i, long fieldOffset, cli::array &lt;char&gt; ^ buffer2, int bufferoffset, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="fieldOffset" Type="System.Int64" />
        <Parameter Name="buffer2" Type="System.Char[]" />
        <Parameter Name="bufferoffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <param name="fieldOffset">Indice all'interno della riga dalla quale iniziare l'operazione di lettura.</param>
        <param name="buffer2">Buffer in cui copiare i dati.</param>
        <param name="bufferoffset">Indice dal quale <c>buffer</c> inizia l'operazione di scrittura.</param>
        <param name="length">Numero di caratteri da leggere.</param>
        <summary>Legge un flusso di caratteri dall'offset di colonna specificato nel buffer come matrice, a partire dall'offset del buffer specificato.</summary>
        <returns>Numero effettivo di caratteri letti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleDataReader.GetChars%2A> Restituisce il numero di caratteri disponibili nel campo. Nella maggior parte dei casi si tratta della lunghezza esatta del campo. Tuttavia, il numero restituito può essere inferiore alla lunghezza del campo se `GetChars` è già stato utilizzato per ottenere i caratteri del campo. Questo può essere il caso, ad esempio, se il <xref:System.Data.OracleClient.OracleDataReader> viene letta una struttura di dati di grandi dimensioni in un buffer. Per ulteriori informazioni, vedere il `SequentialAccess` l'impostazione di <xref:System.Data.CommandBehavior>.  
  
 Se si passa un buffer che è un valore null. <xref:System.Data.OracleClient.OracleDataReader.GetChars%2A> Restituisce la lunghezza del campo in caratteri.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il nome del tipo di dati di origine.</summary>
        <returns>Nome del tipo di dati di origine.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come oggetto <see langword="DateTime" />.</summary>
        <returns>Valore della colonna specificata come oggetto <see langword="DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (i As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come oggetto <see langword="Decimal" />.</summary>
        <returns>Valore della colonna specificata come oggetto <see langword="Decimal" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (i As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come numero a virgola mobile con precisione doppia.</summary>
        <returns>Valore della colonna specificata sotto forma di numero in virgola mobile e precisione doppia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere le righe nel lettore di dati.</summary>
        <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere le righe nel lettore di dati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene sia possibile utilizzare questo metodo per recuperare un enumeratore esplicito, in linguaggi che supportano un ciclo foreach costrutto, è più semplice da utilizzare il costrutto di ciclo direttamente per scorrere le righe nel lettore di dati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene l'oggetto <see cref="T:System.Type" /> che rappresenta il tipo di dati dell'oggetto.</summary>
        <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di dati dell'oggetto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (i As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di numero in virgola mobile e precisione singola.</summary>
        <returns>Valore della colonna specificata sotto forma di numero in virgola mobile e precisione singola.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (i As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come identificatore univoco globale (GUID).</summary>
        <returns>Valore della colonna specificata sotto forma di GUID.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (i As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di intero con segno a 16 bit.</summary>
        <returns>Valore della colonna specificata sotto forma di intero con segno a 16 bit.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (i As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come intero con segno a 32 bit.</summary>
        <returns>Valore della colonna specificata come intero con segno a 32 bit.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (i As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come integer con segno a 64 bit.</summary>
        <returns>Valore della colonna specificata come intero con segno a 64 bit.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il nome della colonna specificata.</summary>
        <returns>Stringa che rappresenta il nome della colonna specificata.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetOracleBFile">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleBFile GetOracleBFile (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleBFile GetOracleBFile(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleBFile(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleBFile (i As Integer) As OracleBFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleBFile ^ GetOracleBFile(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di oggetto <see cref="T:System.Data.OracleClient.OracleBFile" />.</summary>
        <returns>Valore della colonna specificata come oggetto <see cref="T:System.Data.OracleClient.OracleBFile" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleBinary">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleBinary GetOracleBinary (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleBinary GetOracleBinary(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleBinary(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleBinary (i As Integer) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleBinary GetOracleBinary(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di oggetto <see cref="T:System.Data.OracleClient.OracleBinary" />.</summary>
        <returns>Valore della colonna specificata come oggetto <see cref="T:System.Data.OracleClient.OracleBinary" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleDateTime">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDateTime GetOracleDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleDateTime GetOracleDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleDateTime (i As Integer) As OracleDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDateTime GetOracleDateTime(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di oggetto <see cref="T:System.Data.OracleClient.OracleDateTime" />.</summary>
        <returns>Valore della colonna specificata come oggetto <see cref="T:System.Data.OracleClient.OracleDateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleLob">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleLob GetOracleLob (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleLob GetOracleLob(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleLob(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleLob (i As Integer) As OracleLob" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleLob ^ GetOracleLob(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleLob</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di oggetto <see cref="T:System.Data.OracleClient.OracleLob" />.</summary>
        <returns>Valore della colonna specificata come oggetto <see cref="T:System.Data.OracleClient.OracleLob" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleMonthSpan">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleMonthSpan GetOracleMonthSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleMonthSpan GetOracleMonthSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleMonthSpan (i As Integer) As OracleMonthSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleMonthSpan GetOracleMonthSpan(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleMonthSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di oggetto <see cref="T:System.Data.OracleClient.OracleMonthSpan" />.</summary>
        <returns>Valore della colonna specificata come oggetto <see cref="T:System.Data.OracleClient.OracleMonthSpan" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleNumber">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleNumber GetOracleNumber (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleNumber GetOracleNumber(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleNumber(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleNumber (i As Integer) As OracleNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleNumber GetOracleNumber(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di oggetto <see cref="T:System.Data.OracleClient.OracleNumber" />.</summary>
        <returns>Valore della colonna specificata come oggetto <see cref="T:System.Data.OracleClient.OracleNumber" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleString">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleString GetOracleString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleString GetOracleString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleString (i As Integer) As OracleString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleString GetOracleString(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di oggetto <see cref="T:System.Data.OracleClient.OracleString" />.</summary>
        <returns>Valore della colonna specificata come oggetto <see cref="T:System.Data.OracleClient.OracleString" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleTimeSpan">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTimeSpan GetOracleTimeSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleTimeSpan GetOracleTimeSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleTimeSpan (i As Integer) As OracleTimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleTimeSpan GetOracleTimeSpan(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di oggetto <see cref="T:System.Data.OracleClient.OracleTimeSpan" />.</summary>
        <returns>Valore della colonna specificata come oggetto <see cref="T:System.Data.OracleClient.OracleTimeSpan" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleValue">
      <MemberSignature Language="C#" Value="public object GetOracleValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOracleValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOracleValue(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna in corrispondenza dell'ordinale specificato nel formato Oracle.</summary>
        <returns>Valore Oracle da restituire.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo restituisce <xref:System.DBNull> per colonne di database con valori null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOracleValues">
      <MemberSignature Language="C#" Value="public int GetOracleValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOracleValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOracleValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">Matrice di <see cref="T:System.Object" /> in cui copiare le colonne attributo.</param>
        <summary>Ottiene tutte le colonne di attributo nella riga corrente in formato Oracle.</summary>
        <returns>Numero di istanze di <see cref="T:System.Object" /> nella matrice.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per la maggior parte delle applicazioni, il <xref:System.Data.OracleClient.OracleDataReader.GetOracleValues%2A> metodo fornisce un mezzo efficiente per recuperare tutte le colonne, anziché recuperare ciascuna colonna singolarmente.  
  
 È possibile passare un <xref:System.Object> matrice che contiene un valore minore rispetto al numero di colonne contenute nella riga risultante. Solo la quantità di dati di <xref:System.Object> contenuti nella matrice vengono copiati nella matrice. È inoltre possibile passare un <xref:System.Object> matrice la cui lunghezza è maggiore del numero di colonne contenute nella riga risultante.  
  
 Il metodo restituisce <xref:System.DBNull> per colonne di database con valori null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome della colonna.</param>
        <summary>Ottiene la posizione ordinale della colonna, dato il nome della colonna.</summary>
        <returns>Ordinale di colonna in base zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> Innanzitutto, esegue una ricerca con distinzione maiuscole/minuscole. In caso contrario, viene eseguita una ricerca con distinzione tra maiuscole e secondo. Il metodo genera un `IndexOutOfRange` eccezione se non viene trovato l'ordinale della colonna in base zero.  
  
 <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> è senza distinzione di larghezza dei caratteri kana.  
  
 Poiché le ricerche basate su valori ordinali sono più efficienti ricerche denominate, non è opportuno chiamare <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> all'interno di un ciclo. Chiamare invece <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> una sola volta e quindi assegnare i risultati a una variabile integer da utilizzare all'interno del ciclo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo del metodo <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A>.  
  
```vb  
Public Sub ReadOracleData(ByVal connectionString As String)  
  
    Dim queryString As String = "SELECT OrderID, CustomerID FROM Orders"  
    Dim connection As New OracleConnection(connectionString)  
    Dim command As New OracleCommand(queryString, connectionString)  
  
    connection.Open()  
  
    Dim reader As OracleDataReader = command.ExecuteReader()  
  
    Dim custIdCol As Integer = reader.GetOrdinal("CustomerID")  
  
    Do While reader.Read()  
        Console.WriteLine("CustomerID = {0}", reader.GetString(custIdCol))  
    Loop  
  
    reader.Close()  
    connection.Close()  
End Sub  
```  
  
```csharp  
public void ReadOracleData(string connectionString)  
{  
    string queryString = "SELECT OrderID, CustomerID FROM Orders";  
    OracleConnection connection = new OracleConnection(connectionString);  
    OracleCommand command = new OracleCommand(queryString,connection);  
  
    connection.Open();  
    OracleDataReader reader = command.ExecuteReader();  
  
    int custIdCol = reader.GetOrdinal("CustomerID");  
  
    while (reader.Read())  
        Console.WriteLine("CustomerID = {0}", reader.GetString(custIdCol));  
  
    reader.Close();  
    connection.Close();  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Oggetto <see cref="T:System.Int32" />.</param>
        <summary>Ottiene un oggetto <see langword="Object" /> che consiste in una rappresentazione del tipo di campo specifico del provider sottostante.</summary>
        <returns>Ottiene un oggetto <see cref="T:System.Object" /> che consiste in una rappresentazione del tipo di campo specifico del provider sottostante.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Oggetto <see cref="T:System.Int32" />.</param>
        <summary>Ottiene un oggetto <see langword="Object" /> che consiste in una rappresentazione del tipo di campo specifico del provider sottostante.</summary>
        <returns>Ottiene un oggetto <see cref="T:System.Object" /> che consiste in una rappresentazione del tipo di campo specifico del provider sottostante.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">Matrice di istanze della classe <see cref="T:System.Object" />.</param>
        <summary>Ottiene una matrice di oggetti che sono una rappresentazione dei valori specifici del provider sottostante.</summary>
        <returns>Numero di istanze di <see cref="T:System.Object" /> nella matrice.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per la maggior parte delle applicazioni, il <xref:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues%2A> metodo fornisce un mezzo efficiente per recuperare tutte le colonne, anziché recuperare ciascuna colonna singolarmente.  
  
 È possibile passare un <xref:System.Object> matrice che contiene un valore minore rispetto al numero di colonne contenute nella riga risultante. Solo la quantità di dati di <xref:System.Object> contenuti nella matrice vengono copiati nella matrice. È inoltre possibile passare un <xref:System.Object> matrice la cui lunghezza è maggiore del numero di colonne contenute nella riga risultante.  
  
 Il metodo restituisce <xref:System.DBNull> per colonne di database con valori null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Data.DataTable" /> che descrive i metadati della colonna di OracleDataReader.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataTable" /> che descrive i metadati della colonna.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A> metodo restituisce i metadati relativi a ogni colonna nell'ordine seguente:  
  
|Colonna DataReader|Descrizione|  
|-----------------------|-----------------|  
|Nome colonna|Il nome di colonna. Questo potrebbe non essere univoco. Se non è possibile determinare il nome della colonna, viene restituito un valore null. Questo nome riflette sempre la denominazione più recente della colonna nel testo del comando o una vista corrente.|  
|ColumnOrdinal|Ordinale in base zero della colonna. Questa colonna non può contenere un valore null.|  
|ColumnSize|Lunghezza massima possibile di un valore nella colonna. Per le colonne che utilizzano un tipo di dati a lunghezza fissa, questa è la dimensione del tipo di dati.|  
|NumericPrecision|Se <xref:System.Data.OracleClient.OracleParameter.DbType%2A> è un tipo di dati numerici, è la precisione massima della colonna. La precisione dipende dalla definizione della colonna. `Float` e `Double` sono di tipi di dati Oracle e precisione binaria.|  
|NumericScale|Se <xref:System.Data.OracleClient.OracleParameter.DbType%2A> è un tipo di dati numerici, il numero di cifre a destra del separatore decimale. `Float` e `Double` tipi di dati in Oracle la scala sono binaria.|  
|Tipo di dati|Esegue il mapping al tipo common language runtime di <xref:System.Data.OracleClient.OracleParameter.DbType%2A>.|  
|IsLong|`true` Se la colonna contiene un oggetto Long binario (BLOB) che contiene dati molto lunghi.|  
|AllowDBNull|`true` Se il consumer può impostare la colonna su un valore null. in caso contrario, `false`. Una colonna può contenere valori null, anche se non può essere impostata su un valore null.|  
|IsUnique|`true`: Nella tabella di tabella di base restituito in due righe non <xref:System.Data.Common.SchemaTableColumn.BaseTableName> -possono avere lo stesso valore in questa colonna. **IsUnique** è sicuramente `true` se la colonna costituisce una chiave da sola o se è presente un vincolo di tipo UNIQUE applicato solo a questa colonna. `false`: La colonna può contenere valori duplicati nella tabella di base. Il valore predefinito per questa colonna è false.|  
|IsKey|`true`: La colonna fa parte di un set di colonne nel set di righe che, complessivamente, identificare in modo univoco la riga. Il set di colonne con **IsKey** impostato su true deve identificare in modo univoco una riga nel set di righe. Non è necessario che il set di colonne è un set minimo di colonne. Questo set di colonne può essere generato da una chiave primaria della tabella di base, un vincolo unique o un indice univoco. `false`: La colonna non è necessario per identificare in modo univoco la riga.|  
|BaseTableName|Il nome della tabella o della vista nell'archivio dati contenente la colonna. Un valore null se non è possibile determinare il nome della tabella di base. Il valore predefinito di questa colonna è un valore null.|  
|BaseColumnName|Nome della colonna nell'archivio dati. Questo potrebbe essere diverso dal nome di colonna restituito nella **ColumnName** se è stato utilizzato un alias di colonna. Un valore null se non è possibile determinare il nome della colonna di base o se la colonna del set di righe è derivata da, ma non identica a, una colonna nei dati di archivio. Il valore predefinito per questa colonna è un valore null.|  
|BaseSchemaName|Il nome dello schema nell'archivio dati contenente la colonna. Un valore null se non è possibile determinare il nome dello schema di base. Il valore predefinito per questa colonna è un valore null.|  
  
 Viene restituita una riga per ogni colonna nel set di risultati.  
  
> [!NOTE]
>  Per garantire che le colonne di metadati restituiscono le informazioni corrette, è necessario chiamare <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> con il `behavior` parametro impostato su `KeyInfo`. In caso contrario, alcune colonne nella tabella dello schema può restituire dati predefiniti, null o non corretto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di stringa.</summary>
        <returns>Valore della colonna specificata sotto forma di stringa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTimeSpan">
      <MemberSignature Language="C#" Value="public TimeSpan GetTimeSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetTimeSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetTimeSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTimeSpan (i As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetTimeSpan(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di classe <see langword="System.TimeSpan" />.</summary>
        <returns>Valore della colonna specificata come oggetto <see cref="T:System.TimeSpan" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> per controllare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna in corrispondenza dell'ordinale specificato nel formato nativo.</summary>
        <returns>Valore da restituire.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo restituisce <xref:System.DBNull> per colonne di database con valori null. Il valore restituito da questo metodo potrebbe essere il risultato della conversione dal tipo di dati Number di Oracle per il tipo .NET decimale. Se il valore è troppo grande per essere archiviato nel tipo Decimal di .NET, questo metodo genera un <xref:System.Data.OracleClient.OracleException> che rappresenta un'eccezione di overflow.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OracleClient.OracleException">Il valore è troppo grande per essere archiviato nel tipo Decimal di .NET.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">Matrice di <see cref="T:System.Object" /> in cui copiare le colonne attributo.</param>
        <summary>Popola una matrice di oggetti con i valori della colonna della riga corrente.</summary>
        <returns>Numero di istanze di <see cref="T:System.Object" /> nella matrice.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per la maggior parte delle applicazioni, il <xref:System.Data.OracleClient.OracleDataReader.GetValues%2A> metodo fornisce un mezzo efficiente per recuperare tutte le colonne, anziché recuperare ciascuna colonna singolarmente.  
  
 È possibile passare un <xref:System.Object> matrice che contiene un valore minore rispetto al numero di colonne contenute nella riga risultante. Solo la quantità di dati di <xref:System.Object> contenuti nella matrice vengono copiati nella matrice. È inoltre possibile passare un <xref:System.Object> matrice la cui lunghezza è maggiore del numero di colonne contenute nella riga risultante.  
  
 Il metodo restituisce <xref:System.DBNull> per colonne di database con valori null. Il valore restituito nel <xref:System.Object> matrice potrebbe essere il risultato della conversione dal tipo di dati Number di Oracle per il tipo .NET decimale. Se il valore è troppo grande per essere archiviato nel tipo Decimal di .NET, questo metodo genera un <xref:System.Data.OracleClient.OracleException> che rappresenta un'eccezione di overflow.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OracleClient.OracleException">Il valore è troppo grande per essere archiviato nel tipo Decimal di .NET.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Data.OracleClient.OracleDataReader" /> contiene una o più righe.</summary>
        <value>
          <see langword="true" /> se la classe <see cref="T:System.Data.OracleClient.OracleDataReader" /> contiene una o più righe. In caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica se la classe <see cref="T:System.Data.OracleClient.OracleDataReader" /> è chiusa.</summary>
        <value>
          <see langword="true" /> se la classe <see cref="T:System.Data.OracleClient.OracleDataReader" /> è chiusa. In caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> e <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> sono le uniche proprietà che è possibile chiamare dopo il <xref:System.Data.OracleClient.OracleDataReader> è chiuso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna in base zero.</param>
        <summary>Ottiene un valore che indica se la colonna contiene valori non esistenti o mancanti.</summary>
        <returns>
          <see langword="true" /> se il valore della colonna specificata equivale a <see cref="T:System.DBNull" />, in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per evitare che venga generato un errore, chiamare questo metodo per verificare i valori di colonna null prima di chiamare l'oggetto tipizzato metodi Get (ad esempio, <xref:System.Data.OracleClient.OracleDataReader.GetByte%2A>, <xref:System.Data.OracleClient.OracleDataReader.GetChar%2A>e così via).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene il valore di una colonna nel formato nativo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int i); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Ordinale di colonna.</param>
        <summary>Ottiene il valore della colonna specificata nel formato nativo, data la posizione ordinale della colonna.</summary>
        <value>Valore della colonna specificata nel formato nativo.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">L'indice passato non era compreso nell'intervallo da 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome della colonna.</param>
        <summary>Ottiene il valore della colonna specificata nel formato nativo, dato il nome della colonna.</summary>
        <value>Valore della colonna specificata nel formato nativo.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Non è stata trovata alcuna colonna con il nome specificato.</exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sposta l'interfaccia <see cref="T:System.Data.OracleClient.OracleDataReader" /> al risultato successivo.</summary>
        <returns>
          <see langword="true" /> se sono presenti più gruppi di risultati; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario utilizzare un `REF CURSOR` quando si chiama questo metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sposta l'oggetto <see cref="T:System.Data.OracleClient.OracleDataReader" /> al record successivo.</summary>
        <returns>
          <see langword="true" /> se sono presenti altre righe; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La posizione predefinita del <xref:System.Data.OracleClient.OracleDataReader> è prima del primo record. Pertanto, è necessario chiamare <xref:System.Data.OracleClient.OracleDataReader.Read%2A> per iniziare ad accedere ai dati.  
  
 Più <xref:System.Data.OracleClient.OracleDataReader> possono essere aperti in qualsiasi momento.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OracleClient.OracleConnection>, un <xref:System.Data.OracleClient.OracleCommand>e un <xref:System.Data.OracleClient.OracleDataReader>. Nell'esempio legge i dati, scrivono nella console. Infine, l'esempio chiude il <xref:System.Data.OracleClient.OracleDataReader>, quindi il <xref:System.Data.OracleClient.OracleConnection>.  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di righe modificate, inserite o eliminate dall'esecuzione dell'istruzione SQL.</summary>
        <value>Numero di righe modificate, inserite o eliminate. -1 per istruzioni SELECT; 0 se non viene influenzata alcuna riga o se l'istruzione non riesce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> non è impostata fino a quando non vengono lette tutte le righe e si chiude il <xref:System.Data.OracleClient.OracleDataReader>.  
  
 <xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> e <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> sono le uniche proprietà che è possibile chiamare dopo il <xref:System.Data.OracleClient.OracleDataReader> è chiuso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>