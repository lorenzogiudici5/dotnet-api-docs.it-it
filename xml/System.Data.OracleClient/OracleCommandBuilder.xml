<Type Name="OracleCommandBuilder" FullName="System.Data.OracleClient.OracleCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e58edd034b786cad53ea671d0425b05edcbb32f6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390465" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("OracleCommandBuilder has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Genera automaticamente comandi di tabella singola per risolvere le modifiche apportate a un oggetto <see cref="T:System.Data.DataSet" /> con il database associato. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo tipo è deprecato e verrà rimossa in una futura versione di .NET Framework. Per ulteriori informazioni, vedere [Oracle e ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).  
  
 Il <xref:System.Data.OracleClient.OracleDataAdapter> non genera automaticamente le istruzioni SQL necessarie per risolvere le modifiche apportate a un <xref:System.Data.DataSet> associati al database. Tuttavia, è possibile creare un <xref:System.Data.OracleClient.OracleCommandBuilder> oggetto che genera istruzioni SQL per aggiornamenti di tabelle singole impostando il <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> proprietà del <xref:System.Data.OracleClient.OracleDataAdapter>. Quindi, <xref:System.Data.OracleClient.OracleCommandBuilder> genera le istruzioni SQL aggiuntive che non è impostata.  
  
 La relazione tra un <xref:System.Data.OracleClient.OracleDataAdapter> e il corrispondente <xref:System.Data.OracleClient.OracleCommandBuilder> è sempre uno a uno. Per creare questa corrispondenza, impostare il <xref:System.Data.OracleClient.OracleDataAdapter> proprietà del <xref:System.Data.OracleClient.OracleCommandBuilder> oggetto. In questo modo il <xref:System.Data.OracleClient.OracleCommandBuilder> per registrare se stesso come un listener che produce l'output di <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> eventi che interessano il <xref:System.Data.DataSet>.  
  
 Per generare istruzioni INSERT, UPDATE o DELETE, il <xref:System.Data.OracleClient.OracleCommandBuilder> utilizza il <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> proprietà per recuperare un set di metadati richiesto.  
  
 Il <xref:System.Data.OracleClient.OracleCommandBuilder> utilizza inoltre il <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, e <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> proprietà a cui fa riferimento il <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>.  
  
 Se si chiama <xref:System.Data.Common.DbDataAdapter.Dispose%2A>, <xref:System.Data.OracleClient.OracleCommandBuilder> viene annullata l'associazione di <xref:System.Data.OracleClient.OracleDataAdapter>, e i comandi generati non vengono più utilizzati.  
  
   
  
## Examples  
 L'esempio seguente usa <xref:System.Data.OracleClient.OracleCommand>, insieme a <xref:System.Data.OracleClient.OracleDataAdapter> e <xref:System.Data.OracleClient.OracleConnection>, selezionare le righe da un database. Nell'esempio viene passato un oggetto inizializzato <xref:System.Data.DataSet>, una stringa di connessione, una stringa di query che rappresenta un'istruzione SQL SELECT e una stringa che rappresenta il nome della tabella di database. L'esempio crea quindi un <xref:System.Data.OracleClient.OracleCommandBuilder>.  
  
```vb  
Private Function SelectOracleRows(connection As String, queryString As String, tableName As String) As DataSet  
  
   Dim connection As New OracleConnection(connection)  
   Dim dataAdapter As New OracleDataAdapter()  
   Dim dataSet As DataSet = New DataSet  
  
   dataAdapter.SelectCommand = New OracleCommand(queryString, connection)  
  
   Dim cmdBuilder As OracleCommandBuilder = New OracleCommandBuilder(dataAdapter)  
  
   connection.Open()  
   dataAdapter.Fill(dataSet, tableName)  
      ' Code to modify data in DataSet here   
      ' Without the OracleCommandBuilder this line would fail.  
   dataAdapter.Update(dataSet, tableName)  
   connection.Close()  
End Function  
```  
  
```csharp  
public static DataSet SelectOracleSrvRows(string myConnection, string mySelectQuery, string myTableName)  
{  
   OracleConnection myConn = new OracleConnection(myConnection);  
   OracleDataAdapter myDataAdapter = new OracleDataAdapter();  
   myDataAdapter.SelectCommand = new OracleCommand(mySelectQuery, myConn);  
   OracleCommandBuilder cb = new OracleCommandBuilder(myDataAdapter);  
  
   myConn.Open();  
   DataSet ds = new DataSet();  
   myDataAdapter.Fill(ds, myTableName);  
  
   //Code to modify data in DataSet goes here...  
  
   //Without the OracleCommandBuilder this line would fail.  
   myDataAdapter.Update(ds, myTableName);  
   myConn.Close();  
   return ds;  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza dell'oggetto <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza dell'oggetto <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OracleClient.OracleCommandBuilder> registra se stesso come un listener per <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> gli eventi generati dal <xref:System.Data.OracleClient.OracleDataAdapter> specificato in questa proprietà.  
  
 Quando si crea una nuova istanza della <xref:System.Data.OracleClient.OracleCommandBuilder>, qualsiasi esistente <xref:System.Data.OracleClient.OracleCommandBuilder> associato a questo <xref:System.Data.OracleClient.OracleDataAdapter> viene rilasciato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommandBuilder (System.Data.OracleClient.OracleDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OracleClient.OracleDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OracleDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommandBuilder(System::Data::OracleClient::OracleDataAdapter ^ adapter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.OracleClient.OracleDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">Oggetto <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> da associare alla classe <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> con l'oggetto <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> associato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OracleClient.OracleCommandBuilder> registra se stesso come un listener per <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> gli eventi generati dal <xref:System.Data.OracleClient.OracleDataAdapter> specificato in questa proprietà.  
  
 Quando si crea una nuova istanza della <xref:System.Data.OracleClient.OracleCommandBuilder>, qualsiasi esistente <xref:System.Data.OracleClient.OracleCommandBuilder> associato a questo <xref:System.Data.OracleClient.OracleDataAdapter> viene rilasciato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogLocation">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CatalogLocation CatalogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Common.CatalogLocation CatalogLocation" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.CatalogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogLocation As CatalogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Common::CatalogLocation CatalogLocation { System::Data::Common::CatalogLocation get(); void set(System::Data::Common::CatalogLocation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CatalogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Data.Common.CatalogLocation" /> per un'istanza della classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
        <value>Un oggetto <see cref="T:System.Data.Common.CatalogLocation" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogSeparator">
      <MemberSignature Language="C#" Value="public override string CatalogSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una stringa utilizzata come separatore di catalogo per un'istanza della classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
        <value>Stringa che indica il separatore di catalogo da utilizzare con un'istanza della classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OracleDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleDataAdapter ^ DataAdapter { System::Data::OracleClient::OracleDataAdapter ^ get(); void set(System::Data::OracleClient::OracleDataAdapter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un oggetto <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> per il quale questo oggetto <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> genererà istruzioni SQL.</summary>
        <value>Oggetto <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> associato a questo oggetto <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OracleClient.OracleCommandBuilder> registra se stesso come un listener per <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> gli eventi generati dal <xref:System.Data.OracleClient.OracleDataAdapter> specificato in questa proprietà.  
  
 Quando si crea una nuova istanza della <xref:System.Data.OracleClient.OracleCommandBuilder>, qualsiasi esistente <xref:System.Data.OracleClient.OracleCommandBuilder> associato a questo <xref:System.Data.OracleClient.OracleDataAdapter> viene rilasciato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.OracleClient.OracleCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.OracleClient.OracleCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OracleCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::OracleClient::OracleCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.OracleClient.OracleCommand" />
      </Parameters>
      <Docs>
        <param name="command">Classe <see cref="T:System.Data.OracleClient.OracleCommand" /> che fa riferimento alla stored procedure da cui è necessario derivare le informazioni sui parametri. I parametri derivati vengono aggiunti all'insieme <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> della classe <see cref="T:System.Data.OracleClient.OracleCommand" />.</param>
        <summary>Recupera le informazioni sui parametri dalla stored procedure specificata nella classe <see cref="T:System.Data.OracleClient.OracleCommand" /> e compila l'insieme <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> dell'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> sovrascrive qualsiasi informazione esistente sui parametri per il <xref:System.Data.OracleClient.OracleCommand>.  
  
 <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> richiede un'ulteriore chiamata al database per ottenere le informazioni. Se le informazioni sui parametri è noto in anticipo, risulta più efficiente per popolare la raccolta di parametri impostando le informazioni in modo esplicito.  
  
 È possibile utilizzare solo <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> con le stored procedure. Non è possibile utilizzare <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> per popolare il <xref:System.Data.OracleClient.OracleParameterCollection> con le istruzioni Transact-SQL arbitrarie, ad esempio un'istruzione SELECT con parametri.  
  
 Per ulteriori informazioni, vedere [configurazione dei parametri e tipi di dati di parametro](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il testo del comando non è un nome di stored procedure valido oppure il <see cref="T:System.Data.CommandType" /> specificato non era <see cref="F:System.Data.CommandType.StoredProcedure" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> generato automaticamente, richiesto per eseguire le operazioni di eliminazione nel database.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <xref:System.Data.OracleClient.OracleCommand> oggetto da eseguire.  
  
 È inoltre possibile utilizzare <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> come base di un comando modificato. Ad esempio, è possibile chiamare <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> e modificare il <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valore e quindi impostato in modo esplicito che il <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Le istruzioni SQL vengono generate quando l'applicazione chiama uno <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.  
  
 Per ulteriori informazioni, vedere [la generazione di comandi tramite commandbuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetDeleteCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> generato automaticamente, richiesto per eseguire le operazioni di eliminazione nel database.</summary>
        <returns>L'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> generato automaticamente richiesto per eseguire le operazioni di eliminazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <xref:System.Data.OracleClient.OracleCommand> oggetto da eseguire.  
  
 È inoltre possibile utilizzare <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> come base di un comando modificato. Ad esempio, è possibile chiamare <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> e modificare il <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valore e quindi impostato in modo esplicito che il <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Le istruzioni SQL vengono generate quando l'applicazione chiama uno <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.  
  
 Per ulteriori informazioni, vedere [la generazione di comandi tramite commandbuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Se true, generare nomi di parametro che corrispondono a nomi di colonna, se possibile. Se false, genera @p1, @p2 e così via.</param>
        <summary>Ottiene l'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> generato automaticamente, richiesto per eseguire le operazioni di eliminazione nel database.</summary>
        <returns>L'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> generato automaticamente richiesto per eseguire le operazioni di eliminazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <xref:System.Data.OracleClient.OracleCommand> oggetto da eseguire.  
  
 È inoltre possibile utilizzare <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> come base di un comando modificato. Ad esempio, è possibile chiamare <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> e modificare il <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valore e quindi impostato in modo esplicito che il <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Le istruzioni SQL vengono generate quando l'applicazione chiama uno <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.  
  
 Durante la generazione di nomi di parametro, il comportamento predefinito consiste nell'usare @p1, @p2, e così via per i diversi parametri. Il passaggio di `true` per il `useColumnsForParameterNames` parametro consente di forzare il <xref:System.Data.Common.DbCommandBuilder> generi i parametri in base ai nomi di colonna alternativa. . Questo ha esito positivo solo se vengono soddisfatte le condizioni seguenti:  
  
-   Il <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> è stato specificato e la sua lunghezza è uguale o maggiore rispetto al nome di parametro generato.  
  
-   Il nome di parametro generato soddisfa i criteri specificati nel <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> espressione regolare.  
  
-   Oggetto <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> specificato.  
  
 Per ulteriori informazioni, vedere [la generazione di comandi tramite commandbuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> generato automaticamente, richiesto per eseguire le operazioni di inserimento nel database.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <xref:System.Data.OracleClient.OracleCommand> oggetto da eseguire.  
  
 È inoltre possibile utilizzare <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> come base di un comando modificato. Ad esempio, è possibile chiamare <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> e modificare il <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valore e quindi impostato in modo esplicito che il <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Le istruzioni SQL vengono generate quando l'applicazione chiama uno <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.  
  
 Per ulteriori informazioni, vedere [la generazione di comandi tramite commandbuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetInsertCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> generato automaticamente, richiesto per eseguire le operazioni di inserimento nel database.</summary>
        <returns>Oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> generato automaticamente, richiesto per eseguire le operazioni di inserimento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <xref:System.Data.OracleClient.OracleCommand> oggetto da eseguire.  
  
 È inoltre possibile utilizzare <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> come base di un comando modificato. Ad esempio, è possibile chiamare <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> e modificare il <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valore e quindi impostato in modo esplicito che il <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Le istruzioni SQL vengono generate quando l'applicazione chiama uno <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.  
  
 Per ulteriori informazioni, vedere [la generazione di comandi tramite commandbuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Se true, generare nomi di parametro che corrispondono a nomi di colonna, se possibile. Se false, genera @p1, @p2 e così via.</param>
        <summary>Ottiene l'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> generato automaticamente, richiesto per eseguire le operazioni di inserimento nel database.</summary>
        <returns>Oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> generato automaticamente, richiesto per eseguire le operazioni di inserimento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <xref:System.Data.OracleClient.OracleCommand> oggetto da eseguire.  
  
 È inoltre possibile utilizzare <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> come base di un comando modificato. Ad esempio, è possibile chiamare <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> e modificare il <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valore e quindi impostato in modo esplicito che il <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Le istruzioni SQL vengono generate quando l'applicazione chiama uno <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.  
  
 Durante la generazione di nomi di parametro, il comportamento predefinito consiste nell'usare @p1, @p2, e così via per i diversi parametri. Il passaggio di `true` per il `useColumnsForParameterNames` parametro consente di forzare il <xref:System.Data.Common.DbCommandBuilder> generi i parametri in base ai nomi di colonna alternativa. . Questo ha esito positivo solo se vengono soddisfatte le condizioni seguenti:  
  
-   Il <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> è stato specificato e la sua lunghezza è uguale o maggiore rispetto al nome di parametro generato.  
  
-   Il nome di parametro generato soddisfa i criteri specificati nel <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> espressione regolare.  
  
-   Oggetto <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> specificato.  
  
 Per ulteriori informazioni, vedere [la generazione di comandi tramite commandbuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> generato automaticamente, richiesto per eseguire le operazioni di aggiornamento nel database.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <xref:System.Data.OracleClient.OracleCommand> oggetto da eseguire.  
  
 È inoltre possibile utilizzare <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> come base di un comando modificato. Ad esempio, è possibile chiamare <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> e modificare il <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valore e quindi impostato in modo esplicito che il <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Le istruzioni SQL vengono generate quando l'applicazione chiama uno <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.  
  
 Per ulteriori informazioni, vedere [la generazione di comandi tramite commandbuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetUpdateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> generato automaticamente, richiesto per eseguire le operazioni di aggiornamento nel database.</summary>
        <returns>L'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> generato automaticamente richiesto per eseguire le operazioni di aggiornamento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <xref:System.Data.OracleClient.OracleCommand> oggetto da eseguire.  
  
 È inoltre possibile utilizzare <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> come base di un comando modificato. Ad esempio, è possibile chiamare <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> e modificare il <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valore e quindi impostato in modo esplicito che il <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Le istruzioni SQL vengono generate quando l'applicazione chiama uno <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.  
  
 Per ulteriori informazioni, vedere [la generazione di comandi tramite commandbuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Se true, generare nomi di parametro che corrispondono a nomi di colonna, se possibile. Se false, genera @p1, @p2 e così via.</param>
        <summary>Ottiene l'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> generato automaticamente, richiesto per eseguire le operazioni di aggiornamento nel database.</summary>
        <returns>L'oggetto <see cref="T:System.Data.OracleClient.OracleCommand" /> generato automaticamente richiesto per eseguire le operazioni di aggiornamento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <xref:System.Data.OracleClient.OracleCommand> oggetto da eseguire.  
  
 È inoltre possibile utilizzare <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> come base di un comando modificato. Ad esempio, è possibile chiamare <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> e modificare il <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valore e quindi impostato in modo esplicito che il <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Le istruzioni SQL vengono generate quando l'applicazione chiama uno <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.  
  
 Durante la generazione di nomi di parametro, il comportamento predefinito consiste nell'usare @p1, @p2, e così via per i diversi parametri. Il passaggio di `true` per il `useColumnsForParameterNames` parametro consente di forzare il <xref:System.Data.Common.DbCommandBuilder> generi i parametri in base ai nomi di colonna alternativa. . Questo ha esito positivo solo se vengono soddisfatte le condizioni seguenti:  
  
-   Il <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> è stato specificato e la sua lunghezza è uguale o maggiore rispetto al nome di parametro generato.  
  
-   Il nome di parametro generato soddisfa i criteri specificati nel <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> espressione regolare.  
  
-   Oggetto <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> specificato.  
  
 Per ulteriori informazioni, vedere [la generazione di comandi tramite commandbuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">Identificatore originale non racchiuso tra virgolette.</param>
        <summary>Specificato un identificatore senza virgolette nel caso di catalogo corretto, viene restituito il formato corretto tra virgolette di quell'identificatore, incluso l'escape corretto di tutte le virgolette incorporate nell'identificatore.</summary>
        <returns>Versione dell'identificatore racchiuso tra virgolette. Le virgolette incorporate all'interno dell'identificatore sono sottoposte a escape in modo corretto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaSeparator">
      <MemberSignature Language="C#" Value="public override string SchemaSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SchemaSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SchemaSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il carattere da utilizzare come separatore tra l'identificatore di schema e altri identificatori.</summary>
        <value>Carattere da utilizzare come separatore di schema.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, i server di database indicano lo schema di un identificatore separando il nome dello schema dall'identificatore con un carattere. Ad esempio, SQL Server utilizza i due punti, la creazione di identificatori completi, ad esempio Person: CustomerName, dove "Person" è il nome dello schema e "CustomerName" è l'identificatore. Impostazione di questa proprietà consente agli sviluppatori di modificare questo comportamento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">Identificatore dal quale rimuovere le virgolette incorporate.</param>
        <summary>Specificato un identificatore con virgolette, viene restituito il formato corretto senza virgolette di quell'identificatore, incluso il corretto utilizzo di caratteri non di escape per le virgolette incorporate nell'identificatore.</summary>
        <returns>Identificatore senza virgolette, con virgolette incorporate sostituite da caratteri non di escape in modo corretto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>