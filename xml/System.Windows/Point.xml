<Type Name="Point" FullName="System.Windows.Point">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="192eff04159aa735f04450689a364a548789d804" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39941931" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Point : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Point extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Point" />
  <TypeSignature Language="VB.NET" Value="Public Structure Point&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Point : IFormattable" />
  <TypeSignature Language="F#" Value="type Point = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PointConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.PointValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="841e8-101">Rappresenta una coppia di coordinate x e y nello spazio bidimensionale.</span>
      <span class="sxs-lookup">
        <span data-stu-id="841e8-101">Represents an x- and y-coordinate pair in two-dimensional space.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="841e8-102">In XAML, il delimitatore tra il <xref:System.Windows.Point.X%2A> e <xref:System.Windows.Point.Y%2A> i valori di un <xref:System.Windows.Point> può essere una virgola o uno spazio.</span><span class="sxs-lookup"><span data-stu-id="841e8-102">In XAML, the delimiter between the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of a <xref:System.Windows.Point> can be either a comma or a space.</span></span>  
  
 <span data-ttu-id="841e8-103">Alcune impostazioni cultura potrebbe usare la virgola come delimitatore decimale anziché il carattere punto.</span><span class="sxs-lookup"><span data-stu-id="841e8-103">Some cultures might use the comma character as the decimal delimiter instead of the period character.</span></span> <span data-ttu-id="841e8-104">XAML di elaborazione per impostazioni cultura invarianti en-US nella maggior parte delle implementazioni del processore XAML per impostazione predefinita e prevede che il periodo di delimitatore decimale.</span><span class="sxs-lookup"><span data-stu-id="841e8-104">XAML processing for invariant culture defaults to en-US in most XAML processor implementations, and expects the period to be the decimal delimiter.</span></span> <span data-ttu-id="841e8-105">Evitare di usare la virgola come delimitatore decimale Se si specifica un <xref:System.Windows.Point> in XAML, per evitare conflitti con la conversione di tipo stringa di un <xref:System.Windows.Point> nel valore dell'attributo le <xref:System.Windows.Point.X%2A> e <xref:System.Windows.Point.Y%2A> componenti.</span><span class="sxs-lookup"><span data-stu-id="841e8-105">You should avoid using the comma character as the decimal delimiter if specifying a <xref:System.Windows.Point> in XAML, because that will clash with the string type conversion of a <xref:System.Windows.Point> attribute value into the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> components.</span></span>  
  
<a name="xamlAttributeUsage_Duration"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="841e8-106">Uso della sintassi XAML per gli attributi</span><span class="sxs-lookup"><span data-stu-id="841e8-106">XAML Attribute Usage</span></span>  
  
```  
<object property="x,y"/>  
-or-  
<object property="x y"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="841e8-107">Valori XAML</span><span class="sxs-lookup"><span data-stu-id="841e8-107">XAML Values</span></span>  
 <span data-ttu-id="841e8-108">*x*</span><span class="sxs-lookup"><span data-stu-id="841e8-108">*x*</span></span>  
 <span data-ttu-id="841e8-109">Coordinata x della struttura <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="841e8-109">The x-coordinate of this <xref:System.Windows.Point>.</span></span>  
  
 <span data-ttu-id="841e8-110">*y*</span><span class="sxs-lookup"><span data-stu-id="841e8-110">*y*</span></span>  
 <span data-ttu-id="841e8-111">Coordinata y della struttura <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="841e8-111">The y-coordinate of this <xref:System.Windows.Point>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="841e8-112">Nell'esempio seguente viene illustrato come controllare se due <xref:System.Windows.Point> strutture non sono uguali.</span><span class="sxs-lookup"><span data-stu-id="841e8-112">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="841e8-113">Viene inoltre illustrato come assegnare i valori per un <xref:System.Windows.Point> struttura quando viene dichiarata la struttura e dopo che la struttura è stata dichiarata.</span><span class="sxs-lookup"><span data-stu-id="841e8-113">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point(double x, double y);" />
      <MemberSignature Language="F#" Value="new System.Windows.Point : double * double -&gt; System.Windows.Point" Usage="new System.Windows.Point (x, y)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="841e8-114">Coordinata x della nuova struttura <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-114">The x-coordinate of the new <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="841e8-115">Coordinata y della nuova struttura <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-115">The y-coordinate of the new <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-116">Crea una nuova struttura <see cref="T:System.Windows.Point" /> contenente le coordinate specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-116">Creates a new <see cref="T:System.Windows.Point" /> structure that contains the specified coordinates.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Add (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Add(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Add(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member Add : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="System.Windows.Point.Add (point, vector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="841e8-117">Struttura <see cref="T:System.Windows.Point" /> da sommare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-117">The <see cref="T:System.Windows.Point" /> structure to add.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="841e8-118">Struttura <see cref="T:System.Windows.Vector" /> da sommare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-118">The <see cref="T:System.Windows.Vector" /> structure to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-119">Somma una struttura <see cref="T:System.Windows.Vector" /> e una struttura <see cref="T:System.Windows.Point" /> e restituisce il risultato come struttura <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-119">Adds a <see cref="T:System.Windows.Vector" /> to a <see cref="T:System.Windows.Point" /> and returns the result as a <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-120">Restituisce la somma di <paramref name="point" /> e <paramref name="vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-120">Returns the sum of <paramref name="point" /> and <paramref name="vector" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="841e8-121">Aggiunta di un <xref:System.Windows.Point> struttura di un <xref:System.Windows.Point> struttura non è consentita.</span><span class="sxs-lookup"><span data-stu-id="841e8-121">Adding a <xref:System.Windows.Point> structure to a <xref:System.Windows.Point> structure is prohibited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="841e8-122">Questo esempio viene aggiunto un <xref:System.Windows.Point> a un <xref:System.Windows.Vector> e restituisce il risultato come un <xref:System.Windows.Vector> struttura.</span><span class="sxs-lookup"><span data-stu-id="841e8-122">This example adds a <xref:System.Windows.Point> to a <xref:System.Windows.Vector> and returns the result as a <xref:System.Windows.Vector> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#AddPointAndVectorExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#addpointandvectorexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="841e8-123">Confronta due strutture <see cref="T:System.Windows.Point" /> per determinare se sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-123">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="point.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="841e8-124">Oggetto <see cref="T:System.Object" /> da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-124">The <see cref="T:System.Object" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-125">Determina se l'oggetto <see cref="T:System.Object" /> specificato è una struttura <see cref="T:System.Windows.Point" /> e se include le stesse coordinate dell'oggetto <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-125">Determines whether the specified <see cref="T:System.Object" /> is a <see cref="T:System.Windows.Point" /> and whether it contains the same coordinates as this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-126">
            <see langword="true" /> se <paramref name="o" /> è una struttura <see cref="T:System.Windows.Point" /> e contiene gli stessi valori <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> della struttura <see cref="T:System.Windows.Point" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-126">
              <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Point" /> and contains the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values as this <see cref="T:System.Windows.Point" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="841e8-127"><xref:System.Windows.Point> le coordinate sono espresse utilizzando <xref:System.Double> valori.</span><span class="sxs-lookup"><span data-stu-id="841e8-127"><xref:System.Windows.Point> coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="841e8-128">Poiché il valore di una <xref:System.Double> possibile perdita di precisione quando si opera, un confronto tra due <xref:System.Windows.Point> potrebbero avere esito negativo i valori che sono uguali.</span><span class="sxs-lookup"><span data-stu-id="841e8-128">Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="841e8-129">Nell'esempio seguente viene illustrato come controllare se due <xref:System.Windows.Point> strutture sono uguali utilizzando non statiche <xref:System.Windows.Point.Equals%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="841e8-129">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the non-static <xref:System.Windows.Point.Equals%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#NonStaticEqualsExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#nonstaticequalsexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Point value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Point value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Point value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Point -&gt; bool" Usage="point.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="841e8-130">Punto da confrontare con questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-130">The point to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-131">Confronta due strutture <see cref="T:System.Windows.Point" /> per determinare se sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-131">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-132">
            <see langword="true" /> se entrambe le strutture <see cref="T:System.Windows.Point" /> contengono gli stessi valori <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-132">
              <see langword="true" /> if both <see cref="T:System.Windows.Point" /> structures contain the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="841e8-133"><xref:System.Windows.Point> le coordinate sono espresse utilizzando <xref:System.Double> valori.</span><span class="sxs-lookup"><span data-stu-id="841e8-133"><xref:System.Windows.Point> coordinates are expressed using <xref:System.Double> values.</span></span> <span data-ttu-id="841e8-134">Poiché il valore di una <xref:System.Double> possibile perdita di precisione quando si opera su, un confronto tra due <xref:System.Windows.Point> potrebbero avere esito negativo i valori che sono uguali.</span><span class="sxs-lookup"><span data-stu-id="841e8-134">Because the value of a <xref:System.Double> can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="System.Windows.Point.Equals (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="841e8-135">Primo punto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-135">The first point to compare.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="841e8-136">Secondo punto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-136">The second point to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-137">Confronta due strutture <see cref="T:System.Windows.Point" /> per determinare se sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-137">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-138">
            <see langword="true" /> se gli oggetti <paramref name="point1" /> e <paramref name="point2" /> contengono gli stessi valori <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-138">
              <see langword="true" /> if <paramref name="point1" /> and <paramref name="point2" /> contain the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="841e8-139">Vengono descritte le coordinate del punto usando <xref:System.Double> valori.</span><span class="sxs-lookup"><span data-stu-id="841e8-139">Point coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="841e8-140">Poiché il valore di una <xref:System.Double> possibile perdita di precisione quando si opera, un confronto tra due <xref:System.Windows.Point> potrebbero avere esito negativo i valori che sono uguali.</span><span class="sxs-lookup"><span data-stu-id="841e8-140">Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="841e8-141">Nell'esempio seguente viene illustrato come controllare se due <xref:System.Windows.Point> strutture sono uguali utilizzando il metodo statico <xref:System.Windows.Point.Equals%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="841e8-141">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the static <xref:System.Windows.Point.Equals%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#StaticEqualsExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#staticequalsexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="point.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="841e8-142">Restituisce il codice hash per questo oggetto <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-142">Returns the hash code for this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-143">Codice hash per la struttura <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-143">The hash code for this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="841e8-144">Nell'esempio seguente viene illustrato come ottenere il codice hash di un <xref:System.Windows.Point> struttura.</span><span class="sxs-lookup"><span data-stu-id="841e8-144">The following example shows how to get the hash code of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#gethashcodeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Multiply (System.Windows.Point point, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Multiply(valuetype System.Windows.Point point, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Multiply(System::Windows::Point point, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Windows.Point * System.Windows.Media.Matrix -&gt; System.Windows.Point" Usage="System.Windows.Point.Multiply (point, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="841e8-145">Il punto da trasformare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-145">The point to transform.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="841e8-146">Matrice di trasformazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-146">The transformation matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-147">Trasforma la struttura <see cref="T:System.Windows.Point" /> specificata in base alla struttura <see cref="T:System.Windows.Media.Matrix" /> definita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-147">Transforms the specified <see cref="T:System.Windows.Point" /> structure by the specified <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-148">Punto trasformato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-148">The transformed point.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="841e8-149">Nell'esempio seguente mostra come moltiplicare un <xref:System.Windows.Point> struttura da una <xref:System.Windows.Media.Matrix> struttura usando la <xref:System.Windows.Point.Multiply%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="841e8-149">The following example shows how to multiply a <xref:System.Windows.Point> structure by a <xref:System.Windows.Media.Matrix> structure using the <xref:System.Windows.Point.Multiply%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#MultiplyPointByMatrixExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#multiplypointbymatrixexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Offset(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Offset : double * double -&gt; unit" Usage="point.Offset (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX">
          <span data-ttu-id="841e8-150">Valori per l'offset del punto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-150">The amount to offset the point's</span>
          </span>
          <span data-ttu-id="841e8-151">Coordinata <see cref="P:System.Windows.Point.X" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-151">
              <see cref="P:System.Windows.Point.X" /> coordinate.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="841e8-152">Valore di offset della</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-152">The amount to offset the</span>
          </span>
          <span data-ttu-id="841e8-153">coordinata <see cref="P:System.Windows.Point.Y" /> del punto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-153">point's <see cref="P:System.Windows.Point.Y" /> coordinate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-154">Sottopone a offset le coordinate <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> di un punto in base ai valori specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-154">Offsets a point's <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates by the specified amounts.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="841e8-155">Questa operazione equivale all'aggiunta di un <xref:System.Windows.Point> a un <xref:System.Windows.Vector>.</span><span class="sxs-lookup"><span data-stu-id="841e8-155">This operation is equivalent to adding a <xref:System.Windows.Point> to a <xref:System.Windows.Vector>.</span></span>  
  
 <span data-ttu-id="841e8-156">Si noti che la chiamata di <xref:System.Windows.Point.Offset%2A> metodo avrà effetto solo se è possibile modificare il <xref:System.Windows.Point.X%2A> e <xref:System.Windows.Point.Y%2A> proprietà direttamente.</span><span class="sxs-lookup"><span data-stu-id="841e8-156">Note that calling the <xref:System.Windows.Point.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> properties directly.</span></span> <span data-ttu-id="841e8-157">In quanto <xref:System.Windows.Point> è un tipo di valore, se si fa riferimento un <xref:System.Windows.Point> oggetto utilizzando una proprietà o un indicizzatore, si ottiene una copia dell'oggetto, non un riferimento all'oggetto.</span><span class="sxs-lookup"><span data-stu-id="841e8-157">Because <xref:System.Windows.Point> is a value type, if you reference a <xref:System.Windows.Point> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="841e8-158">Se si prova a cambiare <xref:System.Windows.Point.X%2A> o <xref:System.Windows.Point.Y%2A> su un riferimento a proprietà o indicizzatore, si verifica un errore del compilatore.</span><span class="sxs-lookup"><span data-stu-id="841e8-158">If you attempt to change <xref:System.Windows.Point.X%2A> or <xref:System.Windows.Point.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="841e8-159">Analogamente, la chiamata <xref:System.Windows.Point.Offset%2A> nella proprietà o indicizzatore non modificherà l'oggetto sottostante.</span><span class="sxs-lookup"><span data-stu-id="841e8-159">Similarly, calling <xref:System.Windows.Point.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="841e8-160">Se si desidera modificare il valore di una <xref:System.Windows.Point> che viene fatto riferimento come una proprietà o un indicizzatore, creare un nuovo <xref:System.Windows.Point>, modificare i relativi campi e quindi assegnare il <xref:System.Windows.Point> alla proprietà o indicizzatore.</span><span class="sxs-lookup"><span data-stu-id="841e8-160">If you want to change the value of a <xref:System.Windows.Point> that is referenced as a property or indexer, create a new <xref:System.Windows.Point>, modify its fields, and then assign the <xref:System.Windows.Point> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="841e8-161">Nell'esempio seguente viene illustrato come eseguire l'offset il <xref:System.Windows.Point.X%2A> e <xref:System.Windows.Point.Y%2A> i valori di un <xref:System.Windows.Point> struttura.</span><span class="sxs-lookup"><span data-stu-id="841e8-161">The following example shows how to offset the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#OffsetExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#offsetexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator + (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Addition(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator +(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="point + vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="841e8-162">Punto da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-162">The point to translate.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="841e8-163">Valore in base al quale traslare <c>point</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-163">The amount by which to translate <c>point</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-164">Trasla la struttura <see cref="T:System.Windows.Point" /> in base alla struttura specificata <see cref="T:System.Windows.Vector" /> e restituisce il risultato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-164">Translates the specified <see cref="T:System.Windows.Point" /> by the specified <see cref="T:System.Windows.Vector" /> and returns the result.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-165">Risultato della traslazione del punto specificato in base al vettore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-165">The result of translating the specified point by the specified vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="841e8-166">Nell'esempio seguente viene illustrato come aggiungere un <xref:System.Windows.Point> a un <xref:System.Windows.Vector> usando l'overload (+) operatore.</span><span class="sxs-lookup"><span data-stu-id="841e8-166">The following example shows how to add a <xref:System.Windows.Point> to a <xref:System.Windows.Vector> using the overloaded (+) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedAdditionOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedadditionoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedAdditionOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedadditionoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="point1 = point2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="841e8-167">Prima struttura <see cref="T:System.Windows.Point" /> da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-167">The first <see cref="T:System.Windows.Point" /> structure to compare.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="841e8-168">Seconda struttura <see cref="T:System.Windows.Point" /> da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-168">The second <see cref="T:System.Windows.Point" /> structure to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-169">Confronta due strutture <see cref="T:System.Windows.Point" /> per determinare se sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-169">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-170">
            <see langword="true" /> se le coordinate <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> di <paramref name="point1" /> e <paramref name="point2" /> sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-170">
              <see langword="true" /> if both the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates of <paramref name="point1" /> and <paramref name="point2" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="841e8-171">Vengono descritte le coordinate del punto usando <xref:System.Double> valori.</span><span class="sxs-lookup"><span data-stu-id="841e8-171">A point's coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="841e8-172">Poiché il valore di <xref:System.Double> possibile perdita di precisione durante operazioni aritmetiche vengono eseguite su di essi, un confronto tra due <xref:System.Windows.Point> potrebbero avere esito negativo i valori che sono uguali.</span><span class="sxs-lookup"><span data-stu-id="841e8-172">Because the value of <xref:System.Double> can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="841e8-173">Nell'esempio seguente viene illustrato come controllare se due <xref:System.Windows.Point> strutture sono uguali utilizzando l'operatore di overload (= =).</span><span class="sxs-lookup"><span data-stu-id="841e8-173">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the overloaded (==) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedequalityoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Point.Equals" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="841e8-174">Converte un oggetto <see cref="T:System.Windows.Point" /> in un oggetto <see cref="T:System.Windows.Size" /> o in un oggetto <see cref="T:System.Windows.Vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-174">Converts a <see cref="T:System.Windows.Point" /> into a <see cref="T:System.Windows.Size" /> or a <see cref="T:System.Windows.Vector" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Size (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Size op_Explicit(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Size(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Windows.Point -&gt; System.Windows.Size" Usage="System.Windows.Point.op_Explicit point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="841e8-175">Punto da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-175">The point to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-176">Crea una struttura <see cref="T:System.Windows.Size" /> con un valore <see cref="P:System.Windows.Size.Width" /> uguale al valore <see cref="P:System.Windows.Point.X" /> di questo punto e con un valore <see cref="P:System.Windows.Size.Height" /> uguale al valore <see cref="P:System.Windows.Point.Y" /> di questo punto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-176">Creates a <see cref="T:System.Windows.Size" /> structure with a <see cref="P:System.Windows.Size.Width" /> equal to this point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Size.Height" /> equal to this point's <see cref="P:System.Windows.Point.Y" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-177">Struttura <see cref="T:System.Windows.Size" /> con un valore <see cref="P:System.Windows.Size.Width" /> uguale al valore <see cref="P:System.Windows.Point.X" /> di questo punto e con un valore <see cref="P:System.Windows.Size.Height" /> uguale al valore <see cref="P:System.Windows.Point.Y" /> di questo punto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-177">A <see cref="T:System.Windows.Size" /> structure with a <see cref="P:System.Windows.Size.Width" /> equal to this point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Size.Height" /> equal to this point's <see cref="P:System.Windows.Point.Y" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="841e8-178">Poiché un <xref:System.Windows.Size> struttura non può essere negativo, i valori assoluti del punto <xref:System.Windows.Point.X%2A> e <xref:System.Windows.Point.Y%2A> proprietà vengono utilizzate.</span><span class="sxs-lookup"><span data-stu-id="841e8-178">Because a <xref:System.Windows.Size> structure cannot be negative, the absolute values of the point's <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> properties are used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="841e8-179">Nell'esempio seguente viene illustrato come convertire in modo esplicito un <xref:System.Windows.Point> in un <xref:System.Windows.Size>.</span><span class="sxs-lookup"><span data-stu-id="841e8-179">The following example shows how to explicitly convert a <xref:System.Windows.Point> into a <xref:System.Windows.Size>.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedExplicitOperatorSizeExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedexplicitoperatorsizeexample)]
 [!code-vb[PointExamples_snip#OverloadedExplicitOperatorSizeExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedexplicitoperatorsizeexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Vector (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Explicit(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Vector(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Windows.Point -&gt; System.Windows.Vector" Usage="System.Windows.Point.op_Explicit point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="841e8-180">Punto da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-180">The point to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-181">Crea una struttura <see cref="T:System.Windows.Vector" /> con un valore <see cref="P:System.Windows.Vector.X" /> uguale al valore <see cref="P:System.Windows.Point.X" /> del punto e con un valore <see cref="P:System.Windows.Vector.Y" /> uguale al valore <see cref="P:System.Windows.Point.Y" /> del punto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-181">Creates a <see cref="T:System.Windows.Vector" /> structure with an <see cref="P:System.Windows.Vector.X" /> value equal to the point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Vector.Y" /> value equal to the point's <see cref="P:System.Windows.Point.Y" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-182">Vettore con un valore <see cref="P:System.Windows.Vector.X" /> uguale al valore <see cref="P:System.Windows.Point.X" /> del punto e con un valore <see cref="P:System.Windows.Vector.Y" /> uguale al valore <see cref="P:System.Windows.Point.Y" /> del punto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-182">A vector with an <see cref="P:System.Windows.Vector.X" /> value equal to the point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Vector.Y" /> value equal to the point's <see cref="P:System.Windows.Point.Y" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="841e8-183">Nell'esempio seguente viene illustrato come convertire in modo esplicito un <xref:System.Windows.Point> in un <xref:System.Windows.Vector>.</span><span class="sxs-lookup"><span data-stu-id="841e8-183">The following example shows how to explicitly convert a <xref:System.Windows.Point> into a <xref:System.Windows.Vector>.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedExplicitOperatorVectorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedexplicitoperatorvectorexample)]
 [!code-vb[PointExamples_snip#OverloadedExplicitOperatorVectorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedexplicitoperatorvectorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="System.Windows.Point.op_Inequality (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="841e8-184">Primo punto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-184">The first point to compare.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="841e8-185">Secondo punto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-185">The second point to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-186">Confronta le due strutture <see cref="T:System.Windows.Point" /> per stabilirne la disuguaglianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-186">Compares two <see cref="T:System.Windows.Point" /> structures for inequality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-187">
            <see langword="true" /> se gli oggetti <paramref name="point1" /> e <paramref name="point2" /> presentano coordinate <see cref="P:System.Windows.Point.X" /> o <see cref="P:System.Windows.Point.Y" /> diverse. <see langword="false" /> se gli oggetti <paramref name="point1" /> e <paramref name="point2" /> presentano le stesse coordinate <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-187">
              <see langword="true" /> if <paramref name="point1" /> and <paramref name="point2" /> have different <see cref="P:System.Windows.Point.X" /> or <see cref="P:System.Windows.Point.Y" /> coordinates; <see langword="false" /> if <paramref name="point1" /> and <paramref name="point2" /> have the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="841e8-188">Un punto <xref:System.Windows.Point.X%2A> e <xref:System.Windows.Point.Y%2A> coordinate sono espresse utilizzando <xref:System.Double> valori.</span><span class="sxs-lookup"><span data-stu-id="841e8-188">A point's <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="841e8-189">In quanto <xref:System.Double> valori di possano perdita di precisione quando si opera su, un confronto tra due <xref:System.Windows.Point> potrebbero avere esito negativo i valori che sono uguali.</span><span class="sxs-lookup"><span data-stu-id="841e8-189">Because <xref:System.Double> values can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="841e8-190">Nell'esempio seguente viene illustrato come controllare se due <xref:System.Windows.Point> strutture non sono uguali, utilizzando l'overload (! =) operatore.</span><span class="sxs-lookup"><span data-stu-id="841e8-190">The following example shows how to check whether two <xref:System.Windows.Point> structures are not equal, using the overloaded (!=) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedinequalityoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedinequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator * (System.Windows.Point point, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Multiply(valuetype System.Windows.Point point, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator *(System::Windows::Point point, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Windows.Point * System.Windows.Media.Matrix -&gt; System.Windows.Point" Usage="point * matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="841e8-191">Il punto da trasformare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-191">The point to transform.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="841e8-192">Matrice di trasformazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-192">The transformation matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-193">Trasforma l'oggetto <see cref="T:System.Windows.Point" /> specificato in base all'oggetto <see cref="T:System.Windows.Media.Matrix" /> indicato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-193">Transforms the specified <see cref="T:System.Windows.Point" /> by the specified <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-194">Risultato della trasformazione del punto specificato utilizzando la matrice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-194">The result of transforming the specified point using the specified matrix.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="841e8-195">Nell'esempio seguente mostra come moltiplicare un <xref:System.Windows.Point> da un <xref:System.Windows.Media.Matrix> usando l'operatore di overload (\*).</span><span class="sxs-lookup"><span data-stu-id="841e8-195">The following example shows how to multiply a <xref:System.Windows.Point> by a <xref:System.Windows.Media.Matrix> using the overloaded (\*) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedmultiplypointbymatrixoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedmultiplypointbymatrixoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="841e8-196">Sottrae l'oggetto <see cref="T:System.Windows.Vector" /> o l'oggetto <see cref="T:System.Windows.Point" /> specificato dall'oggetto <see cref="T:System.Windows.Point" /> indicato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-196">Subtracts the specified <see cref="T:System.Windows.Vector" /> or <see cref="T:System.Windows.Point" /> from the specified <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector operator - (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Subtraction(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (point1 As Point, point2 As Point) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector operator -(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Vector" Usage="point1 - point2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="841e8-197">Punto dal quale viene sottratto l'oggetto <c>point2</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-197">The point from which <c>point2</c> is subtracted.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="841e8-198">Punto da cui sottrarre l'oggetto <c>point1</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-198">The point to subtract from <c>point1</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-199">Sottrae l'oggetto <see cref="T:System.Windows.Point" /> specificato da un altro oggetto <see cref="T:System.Windows.Point" /> specificato e restituisce la differenza come oggetto <see cref="T:System.Windows.Vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-199">Subtracts the specified <see cref="T:System.Windows.Point" /> from another specified <see cref="T:System.Windows.Point" /> and returns the difference as a <see cref="T:System.Windows.Vector" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-200">Differenza tra <paramref name="point1" /> e <paramref name="point2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-200">The difference between <paramref name="point1" /> and <paramref name="point2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="841e8-201">Nell'esempio seguente mostra come sottrarre un <xref:System.Windows.Point> da un altro <xref:System.Windows.Point> e restituire un <xref:System.Windows.Vector> utilizzando l'operatore di overload (-).</span><span class="sxs-lookup"><span data-stu-id="841e8-201">The following example shows how to subtract a <xref:System.Windows.Point> from another <xref:System.Windows.Point> and return a <xref:System.Windows.Vector> using the overloaded (-) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedsubtractionoperatorexample2)]
 [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedsubtractionoperatorexample2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator - (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Subtraction(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator -(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="point - vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="841e8-202">Punto dal quale viene sottratto l'oggetto <c>vector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-202">The point from which <c>vector</c> is subtracted.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="841e8-203">Vettore da cui sottrarre <c>point1</c></span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-203">The vector to subtract from <c>point1</c></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-204">Sottrae l'oggetto <see cref="T:System.Windows.Vector" /> specificato dall'oggetto <see cref="T:System.Windows.Point" /> indicato e restituisce l'oggetto <see cref="T:System.Windows.Point" /> che ne risulta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-204">Subtracts the specified <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" /> and returns the resulting <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-205">Differenza tra <paramref name="point" /> e <paramref name="vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-205">The difference between <paramref name="point" /> and <paramref name="vector" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="841e8-206">Nell'esempio seguente mostra come sottrarre un <xref:System.Windows.Vector> da un <xref:System.Windows.Point> utilizzando l'operatore di overload (-).</span><span class="sxs-lookup"><span data-stu-id="841e8-206">The following example shows how to subtract a <xref:System.Windows.Vector> from a <xref:System.Windows.Point> using the overloaded (-) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedsubtractionoperatorexample1)]
 [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedsubtractionoperatorexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Point" Usage="System.Windows.Point.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="841e8-207">Rappresentazione in forma di stringa di un punto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-207">A string representation of a point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-208">Costruisce un oggetto <see cref="T:System.Windows.Point" /> dall'oggetto <see cref="T:System.String" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-208">Constructs a <see cref="T:System.Windows.Point" /> from the specified <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-209">Struttura <see cref="T:System.Windows.Point" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-209">The equivalent <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="841e8-210">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Point.Parse%2A> metodo per convertire un <xref:System.String> rappresentazione di un punto in un <xref:System.Windows.Point> struttura.</span><span class="sxs-lookup"><span data-stu-id="841e8-210">The following example shows how to use the <xref:System.Windows.Point.Parse%2A> method to convert a <xref:System.String> representation of a point into a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#parseexample)]
 [!code-vb[PointExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#parseexample)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="841e8-211">Il parametro <paramref name="source" /> non è composto da due valori double separati da virgola o da spazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-211">
              <paramref name="source" /> is not composed of two comma- or space-delimited double values.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="841e8-212">Il parametro <paramref name="source" /> non contiene due numeri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-212">
              <paramref name="source" /> does not contain two numbers.</span>
          </span>
          <span data-ttu-id="841e8-213">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-213">-or-</span>
          </span>
          <span data-ttu-id="841e8-214">Il parametro <paramref name="source" /> contiene troppi delimitatori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-214">
              <paramref name="source" /> contains too many delimiters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="841e8-215">Sottrae l'oggetto <see cref="T:System.Windows.Point" /> o l'oggetto <see cref="T:System.Windows.Vector" /> specificato dall'oggetto <see cref="T:System.Windows.Point" /> indicato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-215">Subtracts the specified <see cref="T:System.Windows.Point" /> or <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector Subtract (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Vector Subtract(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (point1 As Point, point2 As Point) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector Subtract(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Vector" Usage="System.Windows.Point.Subtract (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="841e8-216">Punto dal quale viene sottratto l'oggetto <c>point2</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-216">The point from which <c>point2</c> is subtracted.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="841e8-217">Punto da cui sottrarre l'oggetto <c>point1</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-217">The point to subtract from <c>point1</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-218">Sottrae l'oggetto <see cref="T:System.Windows.Point" /> specificato da un altro oggetto <see cref="T:System.Windows.Point" /> specificato e restituisce la differenza come oggetto <see cref="T:System.Windows.Vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-218">Subtracts the specified <see cref="T:System.Windows.Point" /> from another specified <see cref="T:System.Windows.Point" /> and returns the difference as a <see cref="T:System.Windows.Vector" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-219">Differenza tra <paramref name="point1" /> e <paramref name="point2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-219">The difference between <paramref name="point1" /> and <paramref name="point2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="841e8-220">Nell'esempio seguente mostra come sottrarre un <xref:System.Windows.Point> da un altro <xref:System.Windows.Point> usando il metodo statico <xref:System.Windows.Point.Subtract%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="841e8-220">The following example shows how to subtract a <xref:System.Windows.Point> from another <xref:System.Windows.Point> using the static <xref:System.Windows.Point.Subtract%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#SubtractExample2](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#subtractexample2)]
 [!code-vb[PointExamples_snip#SubtractExample2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#subtractexample2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Subtract (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Subtract(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Subtract(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="System.Windows.Point.Subtract (point, vector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="841e8-221">Punto dal quale viene sottratto l'oggetto <c>vector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-221">The point from which <c>vector</c> is subtracted.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="841e8-222">
            <c>vector</c> da cui sottrarre <c>point</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-222">The <c>vector</c> to subtract from <c>point</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-223">Sottrae l'oggetto <see cref="T:System.Windows.Vector" /> specificato dall'oggetto <see cref="T:System.Windows.Point" /> indicato e restituisce l'oggetto <see cref="T:System.Windows.Point" /> che ne risulta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-223">Subtracts the specified <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" /> and returns the resulting <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-224">Differenza tra <paramref name="point" /> e <paramref name="vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-224">The difference between <paramref name="point" /> and <paramref name="vector" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="841e8-225">Nell'esempio seguente mostra come sottrarre un <xref:System.Windows.Vector> da un <xref:System.Windows.Point> usando il metodo statico <xref:System.Windows.Point.Subtract%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="841e8-225">The following example shows how to subtract a <xref:System.Windows.Vector> from a <xref:System.Windows.Point> using the static <xref:System.Windows.Point.Subtract%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#SubtractExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#subtractexample1)]
 [!code-vb[PointExamples_snip#SubtractExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#subtractexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Point.Subtract" />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="841e8-226">Stringa che specifica il formato da utilizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-226">The string specifying the format to use.</span>
          </span>
          <span data-ttu-id="841e8-227">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-227">-or-</span>
          </span>
          <span data-ttu-id="841e8-228">
            <see langword="null" /> per utilizzare il formato predefinito per il tipo di implementazione dell'interfaccia <see cref="T:System.IFormattable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-228">
              <see langword="null" /> to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="841e8-229">Interfaccia <see langword="IFormatProvider" /> da utilizzare per formattare il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-229">The <see langword="IFormatProvider" /> to use to format the value.</span>
          </span>
          <span data-ttu-id="841e8-230">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-230">-or-</span>
          </span>
          <span data-ttu-id="841e8-231">
            <see langword="null" /> per ottenere le informazioni sul formato numerico dalle impostazioni locali correnti del sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-231">
              <see langword="null" /> to obtain the numeric format information from the current locale setting of the operating system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-232">Questo membro supporta l'infrastruttura di [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] e non deve essere usato direttamente dal codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-232">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="841e8-233">Per una descrizione di questo membro, vedere <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-233">For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-234">Stringa contenente il valore dell'istanza corrente nel formato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-234">A string containing the value of the current instance in the specified format.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="841e8-235">Crea una rappresentazione <see cref="T:System.String" /> di questa struttura <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-235">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="point.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="841e8-236">Crea una rappresentazione <see cref="T:System.String" /> di <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-236">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-237">Oggetto <see cref="T:System.String" /> contenente i valori <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> di questa struttura <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-237">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="841e8-238">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Point.ToString%2A> metodo per ottenere un <xref:System.String> rappresentazione di un <xref:System.Windows.Point> struttura.</span><span class="sxs-lookup"><span data-stu-id="841e8-238">The following example shows how to use the <xref:System.Windows.Point.ToString%2A> method to get a <xref:System.String> representation of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#ToStringExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#tostringexample)]
 [!code-vb[PointExamples_snip#ToStringExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#tostringexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="point.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="841e8-239">Informazioni di formattazione specifiche delle impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-239">Culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="841e8-240">Crea una rappresentazione <see cref="T:System.String" /> di <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-240">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="841e8-241">Oggetto <see cref="T:System.String" /> contenente i valori <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> di questa struttura <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-241">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Point.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Point.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="841e8-242">Ottiene o imposta il valore della coordinata <see cref="P:System.Windows.Point.X" /> di questa struttura <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-242">Gets or sets the <see cref="P:System.Windows.Point.X" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="841e8-243">Valore della coordinata <see cref="P:System.Windows.Point.X" /> di questa struttura <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-243">The <see cref="P:System.Windows.Point.X" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
          <span data-ttu-id="841e8-244">Il valore predefinito è <c>0</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-244">The default value is <c>0</c>.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="841e8-245">Nell'esempio seguente viene illustrato come controllare se due <xref:System.Windows.Point> strutture non sono uguali.</span><span class="sxs-lookup"><span data-stu-id="841e8-245">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="841e8-246">Viene inoltre illustrato come assegnare i valori per un <xref:System.Windows.Point> struttura quando viene dichiarata la struttura e dopo che la struttura è stata dichiarata.</span><span class="sxs-lookup"><span data-stu-id="841e8-246">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Point.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Point.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Point.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="841e8-247">Ottiene o imposta il valore della coordinata <see cref="P:System.Windows.Point.Y" /> di questa struttura <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-247">Gets or sets the <see cref="P:System.Windows.Point.Y" />-coordinate value of this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="841e8-248">Valore della coordinata <see cref="P:System.Windows.Point.Y" /> di questa struttura <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-248">The <see cref="P:System.Windows.Point.Y" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
          <span data-ttu-id="841e8-249">Il valore predefinito è <c>0</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="841e8-249">The default value is <c>0</c>.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="841e8-250">Nell'esempio seguente viene illustrato come controllare se due <xref:System.Windows.Point> strutture non sono uguali.</span><span class="sxs-lookup"><span data-stu-id="841e8-250">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="841e8-251">Viene inoltre illustrato come assegnare i valori per un <xref:System.Windows.Point> struttura quando viene dichiarata la struttura e dopo che la struttura è stata dichiarata.</span><span class="sxs-lookup"><span data-stu-id="841e8-251">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Point.X" />
      </Docs>
    </Member>
  </Members>
</Type>