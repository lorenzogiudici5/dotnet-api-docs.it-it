<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ValueSource.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c64500fcc9768d42490c1ff18e54293bdc46149c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c64500fcc9768d42490c1ff18e54293bdc46149c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.ValueSource">
          <source>Reports the information returned from <ph id="ph1">&lt;see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" /&gt;</ph>.</source>
          <target state="translated">Restituisce le informazioni ottenute da <ph id="ph1">&lt;see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>Most of the information that <ph id="ph1">&lt;xref:System.Windows.ValueSource&gt;</ph> transmits is contained in the <ph id="ph2">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> property.</source>
          <target state="translated">La maggior parte delle informazioni che <ph id="ph1">&lt;xref:System.Windows.ValueSource&gt;</ph> trasmette è contenuto nel <ph id="ph2">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>This property contains an enumeration value that specifies exactly one aspect of the overall <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> property system that is responsible for the effective value of a dependency property.</source>
          <target state="translated">Questa proprietà contiene un valore di enumerazione che consente di specificare esattamente un aspetto dell'intero <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> sistema di proprietà che è responsabile per il valore effettivo della proprietà di dipendenza.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>Besides the base value, the other information that might be interesting about a dependency property value is whether the value is being animated, and whether the value involves an expression (such as a binding, or a dynamic resource reference).</source>
          <target state="translated">Oltre il valore di base, le informazioni potrebbero essere interessanti sul valore di una proprietà di dipendenza sono se il valore è animato e se comporta un'espressione (ad esempio, un'associazione o un riferimento alla risorsa dinamica).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>This information is reported by <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> respectively.</source>
          <target state="translated">Questa informazione viene segnalata da <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> rispettivamente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>Also, if coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.</source>
          <target state="translated">Inoltre, se la coercizione opera su un valore della proprietà, la proprietà mantiene il valore desiderato e il valore della proprietà tenterà di raggiungere il valore desiderato se i vincoli di coercizione specifica vengono modificati o rimossi.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>A coerced property that is not at its desired value will report that <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Segnala che una proprietà di coercizione che non è il valore desiderato <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> è <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>Gets a value of the <ph id="ph1">&lt;see cref="T:System.Windows.BaseValueSource" /&gt;</ph> enumeration, which reports the source that provided the dependency property system with a value.</source>
          <target state="translated">Ottiene un valore dell'enumerazione <ph id="ph1">&lt;see cref="T:System.Windows.BaseValueSource" /&gt;</ph>, che restituisce l'origine che ha fornito un valore al sistema di proprietà di dipendenza.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>A value of the enumeration.</source>
          <target state="translated">Valore dell'enumerazione.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>The base value is not the effective value if either coercion or animation is acting on the property.</source>
          <target state="translated">Il valore di base non è il valore effettivo se coercizione o animazione viene utilizzata nella proprietà.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>Check <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> if you want to determine whether the base value is the effective value.</source>
          <target state="translated">Controllare <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> se si desidera determinare se il valore di base è il valore effettivo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>You might also want to check <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> to see if the base value was evaluated out of an expression.</source>
          <target state="translated">È inoltre possibile controllare <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> per determinare se il valore di base è stato restituito da un'espressione.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.Equals(System.Object)">
          <source>The object to compare with this <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>.</source>
          <target state="translated">Oggetto da confrontare con questo oggetto <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.Equals(System.Object)">
          <source>Returns a value indicating whether this <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> is equal to a specified object.</source>
          <target state="translated">Restituisce un valore che indica se <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> equivale a un oggetto specificato.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the provided object is equivalent to the current <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'oggetto specificato equivale all'oggetto <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> corrente; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ValueSource.Equals(System.Object)">
          <source>This implementation supports value equality, based on each of the property values of each <ph id="ph1">&lt;xref:System.Windows.ValueSource&gt;</ph> structure.</source>
          <target state="translated">Questa implementazione supporta l'uguaglianza di valori, in base a ciascuno dei valori di proprietà di ogni <ph id="ph1">&lt;xref:System.Windows.ValueSource&gt;</ph> struttura.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.GetHashCode">
          <source>Returns the hash code for this <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>.</source>
          <target state="translated">Restituisce il codice hash per questo oggetto <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.GetHashCode">
          <source>A 32-bit unsigned integer hash code.</source>
          <target state="translated">Codice hash di un intero senza segno a 32 bit.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ValueSource.GetHashCode">
          <source>This hash code is based on the <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> value.</source>
          <target state="translated">Questo codice hash è basato sul <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> valore.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsAnimated">
          <source>Gets a value that declares whether the property is being animated.</source>
          <target state="translated">Ottiene un valore che dichiara se la proprietà è animata.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsAnimated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is animated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la proprietà è animata; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsAnimated">
          <source>For any property that is currently being animated, the source reported by <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> is not immediately relevant, because the animation operates at higher dependency property precedence than the base value.</source>
          <target state="translated">Per qualsiasi proprietà che è attualmente animate, l'origine segnalati da <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> non è immediatamente pertinente, perché l'animazione opera precedenza proprietà di dipendenza superiore rispetto al valore di base.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsAnimated">
          <source>For more information about precedence and animations, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla precedenza e le animazioni, vedere <bpt id="p1">[</bpt>precedenza dei valori di proprietà di dipendenza<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>Gets a value that declares whether this value resulted from a <ph id="ph1">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph> implementation applied to a dependency property.</source>
          <target state="translated">Ottiene un valore che dichiara se il valore è il risultato di un'implementazione di <ph id="ph1">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph> applicata a una proprietà di dipendenza.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value resulted from a <ph id="ph2">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph> implementation applied to a dependency property; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il valore è il risultato di un'implementazione di <ph id="ph2">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph> applicata a una proprietà di dipendenza; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>If coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.</source>
          <target state="translated">Se la coercizione opera su un valore della proprietà, la proprietà mantiene il valore desiderato e il valore della proprietà tenterà di raggiungere il valore desiderato se i vincoli di coercizione specifica vengono modificati o rimossi.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>A coerced property that is not at its desired value will report that <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Segnala che una proprietà di coercizione che non è il valore desiderato <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> è <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>Coercion acts at higher precedence than the base value, and is not strictly speaking a participant in how the base value is set.</source>
          <target state="translated">Coercizione opera alla precedenza più alta rispetto al valore di base e non è un partecipante nella configurazione il valore di base in senso stretto.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>Therefore the state of being coerced is reported by this property, rather than by a value of the <ph id="ph1">&lt;xref:System.Windows.BaseValueSource&gt;</ph> enumeration.</source>
          <target state="translated">Di conseguenza lo stato di assegnazione forzata viene segnalato da questa proprietà, anziché da un valore di <ph id="ph1">&lt;xref:System.Windows.BaseValueSource&gt;</ph> enumerazione.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>For more information about coercion, base values, and precedence, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla coercizione, valori di base e la precedenza, vedere <bpt id="p1">[</bpt>precedenza dei valori di proprietà di dipendenza<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsCurrent">
          <source>Gets whether the value was set by the <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Rileva se il valore è stato impostato dal metodo <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCurrent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value was set by the <ph id="ph2">&lt;see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il valore è stato impostato dal metodo <ph id="ph2">&lt;see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /&gt;</ph>; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsExpression">
          <source>Gets a value that declares whether this value resulted from an evaluated expression.</source>
          <target state="translated">Ottiene un valore che dichiara se questo valore è il risultato di un'espressione valutata.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsExpression">
          <source>This might be a <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> supporting a binding, or an internal expression such as those that support the <bpt id="p1">[</bpt>DynamicResource Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)</ept>.</source>
          <target state="translated">Potrebbe trattarsi di un oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> che supporta un'associazione o di un'espressione interna, ad esempio quelle che supportano l'<bpt id="p1">[</bpt>estensione di markup DynamicResource<ept id="p1">](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value came from an evaluated expression; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il valore è il risultato di un'espressione valutata; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>An evaluated expression will also report the specific base value setting condition where the expression was applied, as a value in <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>.</source>
          <target state="translated">Un'espressione valutata indicherà inoltre il valore di base specifico impostazione condizione in cui è stata applicata l'espressione, come un valore in <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>The <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> is still very relevant for any property where <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> è ancora molto rilevanti per qualsiasi proprietà in cui <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> è <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>Knowing whether a value came through an expression can be particularly useful if the value was set indirectly, such as through a template or an inherited property value.</source>
          <target state="translated">Sapere se è stato ricevuto un valore tramite un'espressione può essere particolarmente utile se il valore è stato impostato indirettamente, ad esempio tramite un modello o un valore della proprietà ereditate.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>If an expression fails to evaluate (the binding failed; no resource of that name was found), then the value will come from some other participant in the property system, most likely the default value.</source>
          <target state="translated">Se non viene valutata un'espressione (l'associazione non è riuscita; è stata trovata alcuna risorsa del nome), quindi il valore verrà derivare da un altro partecipante nel sistema di proprietà, probabilmente il valore predefinito.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>That source is then reported in <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>.</source>
          <target state="translated">L'origine viene quindi restituita in <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>Failed expression evaluations will return <ph id="ph1">`false`</ph> for <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph>.</source>
          <target state="translated">Espressione non riuscito restituiranno <ph id="ph1">`false`</ph> per <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> to compare.</source>
          <target state="translated">Primo oggetto <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> da confrontare.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> to compare.</source>
          <target state="translated">Secondo oggetto <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> da confrontare.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>Determines whether two <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> instances have the same value.</source>
          <target state="translated">Determina se due istanze di <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> hanno lo stesso valore.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> instances are equivalent; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se le due istanze di <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> sono equivalenti; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>This implementation calls <ph id="ph1">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>, and supports value equality based on all properties of <ph id="ph2">&lt;xref:System.Windows.ValueSource&gt;</ph>.</source>
          <target state="translated">Questa implementazione chiama <ph id="ph1">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>, e il valore di supporta l'uguaglianza in base a tutte le proprietà di <ph id="ph2">&lt;xref:System.Windows.ValueSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> to compare.</source>
          <target state="translated">Primo oggetto <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> da confrontare.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> to compare.</source>
          <target state="translated">Secondo oggetto <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> da confrontare.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>Determines whether two <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> instances do not have the same value.</source>
          <target state="translated">Determina se due istanze di <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> non hanno lo stesso valore.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> instances are not equivalent; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se le due istanze di <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> non sono equivalenti; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>This implementation calls <ph id="ph1">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>, returning its negation, and supports value equality based on all properties of <ph id="ph2">&lt;xref:System.Windows.ValueSource&gt;</ph>.</source>
          <target state="translated">Questa implementazione chiama <ph id="ph1">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>, restituendo la negazione e supporta l'uguaglianza di valori in tutte le proprietà di base <ph id="ph2">&lt;xref:System.Windows.ValueSource&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>