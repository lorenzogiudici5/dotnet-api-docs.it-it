<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NameScope.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58e592cda49827dc25a97d85376a3be8483889b1d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e592cda49827dc25a97d85376a3be8483889b1d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.NameScope">
          <source>Implements base WPF support for the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> methods that store or retrieve name-object mappings into a particular XAML namescope.</source>
          <target state="translated">Implementa il supporto WPF di base per i metodi <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> che archiviano o recuperano i mapping del nome dell'oggetto in un NameScope XAML specifico.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.NameScope">
          <source>Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level..</source>
          <target state="translated">Aggiunge il supporto della proprietà associata per rendere più semplice ottenere o impostare in modo dinamico i nomi degli ambiti dei nomi XAML a livello di elemento.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>This class implements built-in XAML namescope support for WPF treatment of XAML.</source>
          <target state="translated">Questa classe implementa il supporto di ambito dei nomi XAML predefinito per il trattamento di WPF di XAML.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> assists in creation of initial XAML namescopes based on parsing XAML, such as when instantiating styles and templates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> è utile nella creazione di ambiti dei nomi XAML iniziale in base all'analisi XAML, ad esempio in creazione di un'istanza di stili e modelli.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>It also supports creation of XAML namescopes by processes that occur outside of normal XAML loading of elements by the WPF XAML processor implementation.</source>
          <target state="translated">Supporta inoltre la creazione di ambiti dei nomi XAML dai processi che si verificano di fuori di caricamento XAML normale di elementi dall'implementazione del processore XAML di WPF.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> is generally more devoted to supplying infrastructure than for common user code scenarios that involve working with a XAML namescope.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> è in genere più dedicato per fornire l'infrastruttura di per scenari di codice utente comuni che comportano l'uso di un namescope XAML.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>For most scenarios, the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;</ph> methods exposed on <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> are more appropriate methods to call to search for elements by XAML-defined name.</source>
          <target state="translated">Per la maggior parte degli scenari di <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;</ph> metodi esposti su <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> sono più appropriato da chiamare per cercare elementi in base al nome definite da XAML.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> properties exposed by <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> are more appropriate properties to use to set the initial name as markup attributes.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> proprietà esposte da <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> sono le più appropriate da utilizzare per impostare il nome iniziale come attributi di markup.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>The various methods of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> are used by base elements and other classes that maintain XAML namescopes in order to support <ph id="ph2">&lt;xref:System.Windows.Markup.INameScope.RegisterName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Markup.INameScope.FindName%2A&gt;</ph>.</source>
          <target state="translated">I vari metodi di <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> vengono utilizzati dagli elementi di base e altre classi di gestione di ambiti dei nomi XAML per supportare <ph id="ph2">&lt;xref:System.Windows.Markup.INameScope.RegisterName%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Markup.INameScope.FindName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>You generally use the API in the <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> class only if you are replacing or augmenting the base element behavior for how they process XAML namescopes for root elements of a XAML page, and as part of templates (which use a separate XAML namescope from the rest of the page).</source>
          <target state="translated">Generalmente si utilizza l'API nel <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> classe solo se si sostituisce o si aumenta il comportamento dell'elemento di base per come elaborano NameScope XAML per elementi radice di una pagina XAML e come parte dei modelli (che utilizzano un namescope XAML separato dal resto del pagina).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.NameScope&gt;</ph> provides collection interface implementations such that you can access the collections of names that are held by a XAML namescope, including adding to it through calls to an <ph id="ph3">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph> method.</source>
          <target state="translated">In <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.NameScope&gt;</ph> fornisce le implementazioni di interfaccia insieme in modo che sia possibile accedere gli insiemi di nomi che vengono mantenuti attivi da un namescope XAML, inclusa l'aggiunta a esso tramite chiamate a un <ph id="ph3">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>For more information on XAML namescope concepts, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sui concetti di namescope XAML, vedere <bpt id="p1">[</bpt>NameScope XAML WPF<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</source>
          <target state="translated">I nomi in un namescope XAML devono utilizzare una particolare grammatica che limita le stringhe è possibile utilizzare per gli input di <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>See <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>grammatica XamlName<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Windows.NameScope">
          <source>Adds an item to the collection.</source>
          <target state="translated">Aggiunge un elemento alla raccolta.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (key is <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, value is <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>) that represents the name mapping to add to the XAML namescope.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (la chiave è <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, il valore è <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>) che rappresenta il mapping del nome da aggiungere al NameScope XAML.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Adds an item to the collection.</source>
          <target state="translated">Aggiunge un elemento alla raccolta.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Either or both components of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> are <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o entrambi i componenti di <ph id="ph1">&lt;paramref name="item" /&gt;</ph> sono <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>The string key, which is the name of the XAML namescope mapping to add.</source>
          <target state="translated">Stringa chiave che rappresenta il nome del mapping NameScope XAML da aggiungere.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>The object value, which is the object reference of the XAML namescope mapping to add.</source>
          <target state="translated">Valore dell'oggetto, che è il riferimento dell'oggetto del mapping NameScope XAML da aggiungere.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>Adds an item to the collection.</source>
          <target state="translated">Aggiunge un elemento alla raccolta.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>This method basically wraps <ph id="ph1">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph> so that it is not necessary to involve the <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> type in your usage.</source>
          <target state="translated">Questo metodo esegue il wrapping fondamentalmente <ph id="ph1">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph> in modo che non è necessario coinvolgere il <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> tipo in uso.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</source>
          <target state="translated">I nomi in un namescope XAML devono utilizzare una particolare grammatica che limita le stringhe è possibile utilizzare per gli input di <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>See <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>grammatica XamlName<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> o <ph id="ph2">&lt;paramref name="value" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Clear">
          <source>Removes all items from the collection.</source>
          <target state="translated">Rimuove tutti gli elementi dalla raccolta.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>The item to find in the collection, specified as a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (key is <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, value is <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>).</source>
          <target state="translated">Elemento da trovare nella raccolta, specificato come un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (la chiave è <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, il valore è <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Determines whether the collection contains a specified item.</source>
          <target state="translated">Determina se l'insieme contiene un elemento specificato.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> identifies an existing mapping in this <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> .</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'oggetto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> specificato identifica un mapping esistente all'interno di <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> does not exist in the current <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> se l'oggetto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> specificato non esiste nell'oggetto <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Generally you are only interested in whether a name is already defined in the XAML namescope, and what object reference value it is mapped to is immaterial.</source>
          <target state="translated">In genere si è solo interessati se un nome è già definito nell'ambito dei nomi XAML e il valore dell'oggetto di riferimento è mappata a è irrilevante.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>For this scenario, you can call <ph id="ph1">&lt;xref:System.Windows.NameScope.ContainsKey%2A&gt;</ph> instead.</source>
          <target state="translated">Per questo scenario, è possibile chiamare <ph id="ph1">&lt;xref:System.Windows.NameScope.ContainsKey%2A&gt;</ph> invece.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source>The string key to find.</source>
          <target state="translated">Stringa chiave da trovare.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source>Returns whether a provided name already exists in this <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated">Comunica se un nome fornito sia già esistente all'interno della struttura <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="key" /&gt;</ph> identifies a name for an existing mapping in this <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'oggetto <ph id="ph2">&lt;paramref name="key" /&gt;</ph> specificato identifica un nome per un mapping esistente all'interno di <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="key" /&gt;</ph> does not exist in the current <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> se l'oggetto <ph id="ph2">&lt;paramref name="key" /&gt;</ph> specificato non esiste nell'oggetto <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source>Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</source>
          <target state="translated">I nomi in un namescope XAML devono utilizzare una particolare grammatica che limita le stringhe è possibile utilizzare per gli input di <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source>See <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>grammatica XamlName<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.</source>
          <target state="translated">Matrice unidimensionale che rappresenta la destinazione degli elementi copiati dall'insieme; la matrice deve avere un indice in base zero.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Indice in base zero in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> in corrispondenza del quale ha inizio la copia.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
          <source>Copies the elements of the collection to an array, starting at a particular array index.</source>
          <target state="translated">Copia gli elementi della raccolta in una matrice, a partire da un indice della matrice specifico.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Count">
          <source>Returns the number of items in the collection of mapped names in this <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated">Restituisce il numero di oggetti nell'insieme di nomi mappati  in <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.Count">
          <source>The number of items in the collection.</source>
          <target state="translated">Numero di elementi nella raccolta.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Name portion of an existing mapping to retrieve the object portion for.</source>
          <target state="translated">Parte del nome di un mapping esistente per cui recuperare la parte dell'oggetto.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Returns the corresponding object in the XAML namescope maintained by this <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>, based on a provided name string.</source>
          <target state="translated">Restituisce l'oggetto corrispondente nel NameScope XAML mantenuto dall' oggetto <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>, sulla base di un nome di stringa fornito.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>The requested object that is mapped with <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">Oggetto richiesto mappato con <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Can return <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="name" /&gt;</ph> was provided as <ph id="ph3">&lt;see langword="null" /&gt;</ph> or empty string, or if no matching object was found.</source>
          <target state="translated">Può restituire <ph id="ph1">&lt;see langword="null" /&gt;</ph> se <ph id="ph2">&lt;paramref name="name" /&gt;</ph> è stato fornito come stringa <ph id="ph3">&lt;see langword="null" /&gt;</ph> o vuota oppure se non viene trovato alcun oggetto corrispondente.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Several base elements (<ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>) also expose a <ph id="ph3">`FindName`</ph> method with identical functionality.</source>
          <target state="translated">Diversi elementi di base (<ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>) espongono anche un <ph id="ph3">`FindName`</ph> (metodo) con funzionalità identiche.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>The base element versions perform a XAML namescope search within the conventional logical tree, working towards the root element.</source>
          <target state="translated">Le versioni di elemento di base eseguono una ricerca di namescope XAML all'interno dell'albero logico convenzionale, procedendo verso l'elemento radice.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Once the XAML namescope is determined, that XAML namescope is queried for the requested name.</source>
          <target state="translated">Dopo aver determinato l'ambito dei nomi XAML, viene eseguita una query su di esso per il nome richiesto.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source>The object to get the XAML namescope from.</source>
          <target state="translated">Oggetto da cui ottenere l'ambito dei nomi XAML.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source>Provides the attached property get accessor for the <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> attached property.</source>
          <target state="translated">Fornisce alla proprietà associata la funzione di accesso per la proprietà <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> associata.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source>A XAML namescope, as an <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> instance.</source>
          <target state="translated">NameScope XAML, come istanza <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source>The purpose of this method is both to implement the <ph id="ph1">`get`</ph> accessor for using <ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</source>
          <target state="translated">Lo scopo di questo metodo è sia per implementare il <ph id="ph1">`get`</ph> funzione di accesso per l'utilizzo di <ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph> come una proprietà associata nell'utilizzo di XAML e per fornire la funzione di accesso per l'esecuzione dell'operazione equivalente nel codice.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.IsReadOnly">
          <source>Gets a value indicating whether the collection is read-only.</source>
          <target state="translated">Ottiene un valore che indica se la raccolta è di sola lettura.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.IsReadOnly">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Restituisce sempre <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source>The string name for the XAML name mapping to get or set.</source>
          <target state="translated">Il nome della stringa per il mapping XAML da ottenere o impostare.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source>Gets or sets the item with the specified key.</source>
          <target state="translated">Ottiene o imposta l'elemento con la chiave specificata.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.Item(System.String)">
          <source>The value of the object mapped by the XAML name provided as <ph id="ph1">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated">Il valore dell'oggetto mappato dal XAML fornito come <ph id="ph1">&lt;paramref name="key" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is provided as <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> viene fornito come <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is provided as <ph id="ph2">&lt;see langword="null" /&gt;</ph> for a set operation.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> viene fornito come <ph id="ph2">&lt;see langword="null" /&gt;</ph> per un'operazione di impostazione.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Keys">
          <source>Gets a collection of the keys in the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> dictionary.</source>
          <target state="translated">Ottiene un insieme di tutte le chiavi nel dizionario <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.Keys">
          <source>A collection of the keys in the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> dictionary.</source>
          <target state="translated">Insieme di tutte le chiavi nel dizionario <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="F:System.Windows.NameScope.NameScopeProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> attached property.</source>
          <target state="translated">Identifica la proprietà associata <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source>The name to use for mapping the given object.</source>
          <target state="translated">Nome da usare per il mapping dell'oggetto specificato.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source>The object to be mapped to the provided name.</source>
          <target state="translated">Oggetto di cui eseguire il mapping con il nome fornito.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source>Registers a new name-object pair into the current XAML namescope.</source>
          <target state="translated">Registra una nuova coppia nome-oggetto nell'ambito dei nomi XAML corrente.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> or <ph id="ph2">&lt;paramref name="scopedElement" /&gt;</ph> was provided as <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> o <ph id="ph2">&lt;paramref name="scopedElement" /&gt;</ph> è stato fornito come <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> was provided as empty string</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> è stato fornito come stringa vuota</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> oppure -</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> provided was rejected by the parser, because it contained characters that are invalid for a XAML name</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="name" /&gt;</ph> fornito è stato rifiutato dal parser perché contiene caratteri non validi per un nome XAML</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> oppure -</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> provided would result in a duplicate name registration.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> forniti comporterebbero una registrazione del nome duplicata.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.Windows.NameScope">
          <source>Removes the specific object from the collection.</source>
          <target state="translated">Rimuove l'oggetto specifico dall'insieme.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>The object to remove from the collection, specified as a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (key is <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, value is <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>).</source>
          <target state="translated">Oggetto da rimuovere dalla raccolta, specificato come <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (la chiave è <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, il valore è <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Removes the specific object from the collection.</source>
          <target state="translated">Rimuove l'oggetto specifico dall'insieme.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item was successfully removed from the collection, otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'elemento è stato rimosso correttamente dall'insieme, in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if the item was not found in the collection.</source>
          <target state="translated">Restituisce anche <ph id="ph1">&lt;see langword="false" /&gt;</ph> se l'oggetto  non è stato trovato nell'insieme.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> is a dictionary there is no concept of first occurrence; any given <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> is guaranteed unique.</source>
          <target state="translated">Poiché <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> è un dizionario non esiste alcun concetto della prima occorrenza; un dato <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> è sicuramente univoco.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source>The string key, which is the name of the XAML namescope mapping to remove.</source>
          <target state="translated">Stringa chiave che rappresenta il nome del mapping NameScope XAML da rimuovere.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source>Removes a mapping for a specified name from the collection.</source>
          <target state="translated">Rimuove un mapping dall'insieme per un nome specificato.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item was successfully removed from the collection, otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'elemento è stato rimosso correttamente dall'insieme, in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source>Also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if the item was not found in the collection.</source>
          <target state="translated">Restituisce anche <ph id="ph1">&lt;see langword="false" /&gt;</ph> se l'oggetto  non è stato trovato nell'insieme.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source>This method basically wraps <ph id="ph1">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>, returning <ph id="ph2">`false`</ph> in cases that otherwise would have raised exceptions in <ph id="ph3">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo esegue il wrapping fondamentalmente <ph id="ph1">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>restituendo <ph id="ph2">`false`</ph> nei casi in cui in caso contrario verranno generato eccezioni in <ph id="ph3">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source>Object to change XAML namescope for.</source>
          <target state="translated">Oggetto per cui modificare l'ambito dei nomi XAML.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source>The new XAML namescope, using an interface cast.</source>
          <target state="translated">Nuovo ambito dei nomi XAML, usando un cast di interfaccia.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source>Provides the attached property set accessor for the <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> attached property.</source>
          <target state="translated">Fornisce alla proprietà associata il set delle funzioni di accesso per la proprietà <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> associata.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source>The purpose of this method is both to act as the <ph id="ph1">`set`</ph> accessor for using <ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</source>
          <target state="translated">Lo scopo di questo metodo è come il <ph id="ph1">`set`</ph> funzione di accesso per l'utilizzo di <ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph> come una proprietà associata nell'utilizzo di XAML e per fornire la funzione di accesso per l'esecuzione dell'operazione equivalente nel codice.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that iterates through a collection.</source>
          <target state="translated">Enumeratore che scorre una raccolta.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>The key of the value to get.</source>
          <target state="translated">Chiave del valore da ottenere.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object.</source>
          <target state="translated">Quando termina, questo metodo contiene il valore associato alla chiave specificata nel caso in cui la chiave venga trovata; in caso contrario, oggetto null.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Questo parametro viene passato non inizializzato.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>Gets the value associated with the specified key.</source>
          <target state="translated">Ottiene il valore associato alla chiave specificata.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> contains a mapping for the name provided as <ph id="ph2">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated">true se l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> contiene un mapping per il nome fornito come <ph id="ph2">&lt;paramref name="key" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>Otherwise, false.</source>
          <target state="translated">In caso contrario, false.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source>The name of the mapping to remove.</source>
          <target state="translated">Nome del mapping da rimuovere.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source>Removes a name-object mapping from the XAML namescope.</source>
          <target state="translated">Rimuove un mapping nome-oggetto dall'ambito dei nomi XAML.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source>Before calling this method, you can use <ph id="ph1">&lt;xref:System.Windows.NameScope.FindName%2A&gt;</ph> to determine whether a specific name-object mapping exists.</source>
          <target state="translated">Prima di chiamare questo metodo, è possibile utilizzare <ph id="ph1">&lt;xref:System.Windows.NameScope.FindName%2A&gt;</ph> per determinare se esiste un mapping nome-oggetto specifico.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> was provided as empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> è stato fornito come stringa vuota</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> oppure -</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> provided had not been registered.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="name" /&gt;</ph> fornito non era stato registrato.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Values">
          <source>Gets a collection of the values in the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> dictionary.</source>
          <target state="translated">Ottiene un insieme di tutti i valori nel dizionario <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.Values">
          <source>A collection of the values in the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> dictionary.</source>
          <target state="translated">Insieme di tutti i valori nel dizionario <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>