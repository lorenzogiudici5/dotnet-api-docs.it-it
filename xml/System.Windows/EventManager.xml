<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventManager.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c77ae0f0dbeb2878102af1c07c306ec83ccf92c4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c77ae0f0dbeb2878102af1c07c306ec83ccf92c4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.EventManager">
          <source>Provides event-related utility methods that register routed events for class owners and add class handlers.</source>
          <target state="translated">Fornisce metodi di utilità correlati agli eventi che registrano gli eventi indirizzati per i proprietari delle classi e aggiungono gestori di classi.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.EventManager">
          <source>This class is most commonly used to register a new routed event, with <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</source>
          <target state="translated">Questa classe viene in genere utilizzata per registrare un nuovo evento indirizzato con <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.EventManager">
          <source>The second most common <ph id="ph1">[!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)]</ph> usage is <ph id="ph2">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</source>
          <target state="translated">Il secondo più frequente <ph id="ph1">[!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)]</ph> utilizzo è <ph id="ph2">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.EventManager">
          <source>You use this method to enable class handling of a routed event on the class, or an attached event.</source>
          <target state="translated">Utilizzare questo metodo per abilitare la gestione di classi di un evento indirizzato alla classe o un evento associato.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.EventManager">
          <source>For details, see <bpt id="p1">[</bpt>Marking Routed Events as Handled, and Class Handling<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</source>
          <target state="translated">Per informazioni dettagliate, vedere <bpt id="p1">[</bpt>contrassegnare gli eventi indirizzati come Handled e la gestione della classe<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.EventManager">
          <source>The following example show how to use this class to register a new routed event as a class member, along with the routed event "wrapper" technique of overriding the add and remove implementations for a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> event.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare questa classe per registrare un nuovo evento indirizzato come un membro di classe, la tecnica "wrapper" dell'evento indirizzato di override di aggiungere e rimuovere le implementazioni per un <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> evento.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.GetRoutedEvents">
          <source>Returns identifiers for routed events that have been registered to the event system.</source>
          <target state="translated">Restituisce gli identificatori per eventi indirizzati registrati sul sistema dell'evento.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.GetRoutedEvents">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Windows.RoutedEvent" /&gt;</ph> that contains the registered objects.</source>
          <target state="translated">Matrice di tipo <ph id="ph1">&lt;see cref="T:System.Windows.RoutedEvent" /&gt;</ph> che contiene gli oggetti registrati.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.GetRoutedEvents">
          <source>More <ph id="ph1">&lt;xref:System.Windows.RoutedEvent&gt;</ph> objects can be registered later.</source>
          <target state="translated">Ulteriori <ph id="ph1">&lt;xref:System.Windows.RoutedEvent&gt;</ph> oggetti possono essere registrati in un secondo momento.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.GetRoutedEvents">
          <source>This method gets a snapshot and the collection of routed events is writeable throughout an application's lifetime.</source>
          <target state="translated">Questo metodo ottiene uno snapshot e la raccolta degli eventi indirizzati è scrivibile per tutta la durata di un'applicazione.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.GetRoutedEvents">
          <source>The collection returned might be quite large.</source>
          <target state="translated">La raccolta restituita può essere notevole.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.GetRoutedEvents">
          <source>Even just counting the events that are part of the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph2">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph>, the collection count is in the high hundreds.</source>
          <target state="translated">Contando anche solo gli eventi che fanno parte di <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph2">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph>, il numero di raccolte è più di cento.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)">
          <source>The type to start the search with.</source>
          <target state="translated">Il tipo da cui cominciare a cercare.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)">
          <source>Base classes are included in the search.</source>
          <target state="translated">Le classi di base sono incluse nella ricerca.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)">
          <source>Finds all routed event identifiers for events that are registered with the provided owner type.</source>
          <target state="translated">Trova tutti gli identificatori di eventi indirizzati per eventi registrati con il tipo fornito di proprietario.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)">
          <source>An array of matching routed event identifiers if any match is found; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Una matrice di identificatori corrispondenti all’evento indirizzato se qualsiasi corrispondenza è trovata; in caso contrario, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.Windows.EventManager">
          <source>Registers a class handler for a particular routed event.</source>
          <target state="translated">Iscrive un gestore della classe per un particolare evento indirizzato.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>The type of the class that is declaring class handling.</source>
          <target state="translated">Il tipo della classe che dichiara la gestione della classe.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>The routed event identifier of the event to handle.</source>
          <target state="translated">L'identificatore dell'evento indirizzato dell'evento da gestire.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>A reference to the class handler implementation.</source>
          <target state="translated">Un riferimento all'implementazione del gestore di classe.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>Registers a class handler for a particular routed event.</source>
          <target state="translated">Iscrive un gestore della classe per un particolare evento indirizzato.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</source>
          <target state="translated">La gestione di classi è una funzionalità disponibile per gli eventi indirizzati, inclusi gli eventi associati che vengono implementati con backup dell'evento indirizzato.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>A class handler is like a static handler that exists for all instances of the class.</source>
          <target state="translated">Un gestore di classe è simile a un gestore statico esistente per tutte le istanze della classe.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the <ph id="ph1">`sender`</ph> parameter and/or the event data.</source>
          <target state="translated">Poiché il gestore è statico, non è possibile modificare le proprietà dell'istanza direttamente con un gestore di classe, ma è possibile accedere alle istanze tramite il <ph id="ph1">`sender`</ph> parametro e/o i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>Class handlers are invoked before instance handlers.</source>
          <target state="translated">Gestori di classi vengono richiamati prima dei gestori di istanza.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>You can implement a class handler that has the behavior of marking the event as handled.</source>
          <target state="translated">È possibile implementare un gestore di classe con il comportamento di contrassegnare l'evento come gestito.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</source>
          <target state="translated">Di conseguenza, i gestori di istanze per un evento gestito dalla classe non vengono richiamati a meno che non registra i gestori di istanza in particolare per gli eventi gestiti.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>Many of the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> base element events provide class handling virtual methods.</source>
          <target state="translated">Molti di <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> gli eventi di elemento di base forniscono la gestione di metodi virtuali della classe.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph> in static constructors.</source>
          <target state="translated">Eseguendo l'override di questi metodi nelle classi che ereditano le classi di base, è possibile implementare la gestione senza chiamare il metodo della classe <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph> nei costruttori statici.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</source>
          <target state="translated">In genere, questi metodi di gestione della classe esistono per gli eventi di input e hanno nomi che iniziano con "On" e terminano con il nome dell'evento è una classe gestita.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>For more information about class handling, see <bpt id="p1">[</bpt>Marking Routed Events as Handled, and Class Handling<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione delle classi, vedere <bpt id="p1">[</bpt>contrassegnare gli eventi indirizzati come Handled e la gestione della classe<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>Using this signature, class handlers will be registered to invoke only in response to unhandled events.</source>
          <target state="translated">Utilizzando questa firma, gestori di classi verranno registrati per richiamare solo in risposta a eventi non gestiti.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>You can also register class handlers to invoke even if the event arguments are marked handled, by using the <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> signature, with <ph id="ph2">`handledEventsToo`</ph> set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">È inoltre possibile registrare gestori di classi per richiamare anche se gli argomenti dell'evento sono contrassegnati come gestiti, utilizzando il <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> firma, con <ph id="ph2">`handledEventsToo`</ph> impostato su <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>The following example adds a handler for <ph id="ph1">&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;</ph>, calling <ph id="ph2">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente aggiunge un gestore per <ph id="ph1">&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;</ph>, la chiamata <ph id="ph2">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>The type of the class that is declaring class handling.</source>
          <target state="translated">Il tipo della classe che dichiara la gestione della classe.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>The routed event identifier of the event to handle.</source>
          <target state="translated">L'identificatore dell'evento indirizzato dell'evento da gestire.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>A reference to the class handler implementation.</source>
          <target state="translated">Un riferimento all'implementazione del gestore di classe.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to invoke this class handler even if arguments of the routed event have been marked as handled; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to retain the default behavior of not invoking the handler on any marked-handled event.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per richiamare questo gestore della classe anche se gli argomenti dell'evento indirizzato sono stati contrassegnati come gestiti; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per mantenere il comportamento predefinito di non richiamare il gestore su qualsiasi evento contrassegnato come gestito.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>Registers a class handler for a particular routed event, with the option to handle events where event data is already marked handled.</source>
          <target state="translated">Registra un gestore della classe per un particolare evento indirizzato, con l'opzione di gestire gli eventi in cui i dati degli eventi sono già contrassegnati come gestiti.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</source>
          <target state="translated">La gestione di classi è una funzionalità disponibile per gli eventi indirizzati, inclusi gli eventi associati che vengono implementati con backup dell'evento indirizzato.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>A class handler is like a static handler that exists for all instances of the class.</source>
          <target state="translated">Un gestore di classe è simile a un gestore statico esistente per tutte le istanze della classe.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the <ph id="ph1">`sender`</ph> parameter and/or the event data.</source>
          <target state="translated">Poiché il gestore è statico, non è possibile modificare le proprietà dell'istanza direttamente con un gestore di classe, ma è possibile accedere alle istanze tramite il <ph id="ph1">`sender`</ph> parametro e/o i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>Class handlers are invoked before instance handlers.</source>
          <target state="translated">Gestori di classi vengono richiamati prima dei gestori di istanza.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>You can implement a class handler that has the behavior of marking the event as handled.</source>
          <target state="translated">È possibile implementare un gestore di classe con il comportamento di contrassegnare l'evento come gestito.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</source>
          <target state="translated">Di conseguenza, i gestori di istanze per un evento gestito dalla classe non vengono richiamati a meno che non registra i gestori di istanza in particolare per gli eventi gestiti.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>Many of the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> base element events provide class handling virtual methods.</source>
          <target state="translated">Molti di <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> gli eventi di elemento di base forniscono la gestione di metodi virtuali della classe.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph> in static constructors.</source>
          <target state="translated">Eseguendo l'override di questi metodi nelle classi che ereditano le classi di base, è possibile implementare la gestione senza chiamare il metodo della classe <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph> nei costruttori statici.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</source>
          <target state="translated">In genere, questi metodi di gestione della classe esistono per gli eventi di input e hanno nomi che iniziano con "On" e terminano con il nome dell'evento è una classe gestita.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>For more information about class handling, see <bpt id="p1">[</bpt>Marking Routed Events as Handled, and Class Handling<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione delle classi, vedere <bpt id="p1">[</bpt>contrassegnare gli eventi indirizzati come Handled e la gestione della classe<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>Using this signature, class handlers can be registered to invoke upon handled events, by setting <ph id="ph1">`handledEventsToo`</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Utilizzando questa firma, gestori di classi possono essere richiamati per eventi gestiti, impostando <ph id="ph1">`handledEventsToo`</ph> impostato su <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>Generally, you should do this only if there is a known handling issue you are trying to work around, such as input system handling from mouse or keyboard events.</source>
          <target state="translated">In genere, eseguire questa operazione solo se si verifica un problema noto di gestione che si sta tentando di risolvere, ad esempio la gestione degli eventi del mouse o tastiera sistema di input.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>The name of the routed event.</source>
          <target state="translated">Nome dell'evento indirizzato.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>The name must be unique within the owner type and cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated">Il nome deve essere univoco all'interno del tipo di proprietario e non può essere <ph id="ph1">&lt;see langword="null" /&gt;</ph> o una stringa vuota.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>The routing strategy of the event as a value of the enumeration.</source>
          <target state="translated">Strategia di routing dell'evento come valore dell'enumerazione.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>The type of the event handler.</source>
          <target state="translated">Tipo del gestore dell'evento.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>This must be a delegate type and cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Deve trattarsi di un tipo delegato e non può essere <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>The owner class type of the routed event.</source>
          <target state="translated">Tipo di classe proprietario dell'evento indirizzato.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>This cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Non può essere <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>Registers a new routed event with the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> event system.</source>
          <target state="translated">Registra un nuovo evento indirizzato nel sistema di eventi <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>The identifier for the newly registered routed event.</source>
          <target state="translated">Identificatore dell'evento indirizzato appena registrato.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>This identifier object can now be stored as a static field in a class and then used as a parameter for methods that attach handlers to the event.</source>
          <target state="translated">Questo oggetto identificatore può ora essere archiviato come campo statico in una classe e poi usato come parametro per i metodi che associano i gestori all'evento.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>The routed event identifier is also used for other event system <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph>.</source>
          <target state="translated">L'identificatore dell'evento indirizzato è utilizzato anche per un altro sistema dell’evento <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>Use the return value of this method to create the static declaration for a unique <ph id="ph1">&lt;xref:System.Windows.RoutedEvent&gt;</ph> identifier field.</source>
          <target state="translated">Utilizzare il valore restituito di questo metodo per creare la dichiarazione statica per univoco <ph id="ph1">&lt;xref:System.Windows.RoutedEvent&gt;</ph> campo dell'identificatore.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>This field should be stored within the owner type.</source>
          <target state="translated">Questo campo deve essere archiviato all'interno del tipo di proprietario.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>There are a considerable number of conventions and best practices associated with how routed events should be named, registered, and exposed in a class.</source>
          <target state="translated">Esistono un numero considerevole di convenzioni e procedure consigliate associate a eventi indirizzati come devono essere denominate, registrate ed esposte in una classe.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>For more information, see <bpt id="p1">[</bpt>Routed Events Overview<ept id="p1">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>indirizzato Cenni preliminari sugli eventi<ept id="p1">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>