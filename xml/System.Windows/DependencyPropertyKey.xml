<Type Name="DependencyPropertyKey" FullName="System.Windows.DependencyPropertyKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9a12e407bc5345e416145c390f8fcd6f8262c445" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DependencyPropertyKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DependencyPropertyKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DependencyPropertyKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyKey sealed" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c97d3-101">Fornisce l'identificatore di una proprietà di dipendenza per accesso in scrittura limitato a una proprietà di dipendenza di sola lettura.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c97d3-101">Provides a dependency property identifier for limited write access to a read-only dependency property.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97d3-102"><xref:System.Windows.DependencyPropertyKey> le istanze vengono ottenute come valore restituito di una chiamata di registrazione di proprietà di dipendenza utilizzando i metodi <xref:System.Windows.DependencyProperty.RegisterReadOnly%2A> o <xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="c97d3-102"><xref:System.Windows.DependencyPropertyKey> instances are obtained as the return value of a dependency property registration call using the methods <xref:System.Windows.DependencyProperty.RegisterReadOnly%2A> or <xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A>.</span></span>  
  
 <span data-ttu-id="c97d3-103">I tipi che registrano una proprietà di dipendenza è possono utilizzare il <xref:System.Windows.DependencyPropertyKey> nelle chiamate a <xref:System.Windows.DependencyObject.SetValue%2A> e <xref:System.Windows.DependencyObject.ClearValue%2A> che modificano il valore della proprietà come parte della logica di classe.</span><span class="sxs-lookup"><span data-stu-id="c97d3-103">The types that register a dependency property can use the <xref:System.Windows.DependencyPropertyKey> in calls to <xref:System.Windows.DependencyObject.SetValue%2A> and <xref:System.Windows.DependencyObject.ClearValue%2A> that adjust the property's value as part of class logic.</span></span> <span data-ttu-id="c97d3-104">Se consentito dal livello di accesso della chiave, le classi correlate possono utilizzare anche la chiave e la proprietà di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="c97d3-104">If permitted by the access level of the key, related classes can use the key and the dependency property also.</span></span> <span data-ttu-id="c97d3-105">Ad esempio, è possibile dichiarare la chiave come interna, e altri tipi all'interno dello stesso assembly possono inoltre impostare tale proprietà di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="c97d3-105">For instance, you can declare the key as internal, and other types within the same assembly can also set that dependency property.</span></span>  
  
 <span data-ttu-id="c97d3-106">Il <xref:System.Windows.DependencyPropertyKey> restituito dalla dipendenza di sola lettura e registrazione di proprietà non deve essere reso pubblica, perché esporre la chiave rende la proprietà impostabili, annullando così il punto di registrazione come una proprietà di dipendenza di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="c97d3-106">The <xref:System.Windows.DependencyPropertyKey> returned by read-only dependency property registration should not be made public, because exposing the key makes the property settable, thus defeating the point of registering it as a read-only dependency property.</span></span> <span data-ttu-id="c97d3-107">Inoltre, esponendo la chiave provoca una mancata corrispondenza tra la dipendenza disponibile comportamenti di proprietà e il relativo [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] implementazioni del wrapper della proprietà, ovvero corretta progettazione delle classi.</span><span class="sxs-lookup"><span data-stu-id="c97d3-107">Also, exposing the key causes a mismatch between the available dependency property behaviors and its [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property wrapper implementations, which is bad class design.</span></span>  
  
 <span data-ttu-id="c97d3-108">Anziché esporre la chiave stessa, è consigliabile esporre il <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> valore il <xref:System.Windows.DependencyPropertyKey> come un `public static readonly` <xref:System.Windows.DependencyProperty> nella classe.</span><span class="sxs-lookup"><span data-stu-id="c97d3-108">Instead of exposing the key itself, you should instead expose the <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> value of the <xref:System.Windows.DependencyPropertyKey> as a `public static readonly`<xref:System.Windows.DependencyProperty> on your class.</span></span> <span data-ttu-id="c97d3-109">In questo modo la proprietà restituire un identificatore della proprietà di dipendenza valido per alcune operazioni di sistema di proprietà quali l'enumerazione di valori impostati in locale.</span><span class="sxs-lookup"><span data-stu-id="c97d3-109">This enables the property to return a valid dependency property identifier for certain property system operations such as enumerating locally set values.</span></span> <span data-ttu-id="c97d3-110">Tuttavia, l'identificatore così ottenuto non dispone di tutte le funzionalità di un <xref:System.Windows.DependencyProperty> per molte operazioni di sistema di proprietà.</span><span class="sxs-lookup"><span data-stu-id="c97d3-110">However, the identifier thus obtained does not have the full capabilities of a <xref:System.Windows.DependencyProperty> for many property system operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c97d3-111">Nell'esempio seguente registra una proprietà di dipendenza di sola lettura e utilizza anche la chiave per due scopi in altri membri della classe: implementazione get "wrapper" e come identificatore per un'operazione di determinazione protetto che imposta il valore in base a calcoli valori di altre proprietà.</span><span class="sxs-lookup"><span data-stu-id="c97d3-111">The following example registers a read-only dependency property, and also uses the key for two purposes in other class members: implementing the get "wrapper", and as the identifier for a protected determination operation that sets the value based on calculations of other property values.</span></span>  
  
 [!code-csharp[WPFAquariumSln#RODP](~/samples/snippets/csharp/VS_Snippets_Wpf/WPFAquariumSln/CSharp/WPFAquariumObjects/Class1.cs#rodp)]
 [!code-vb[WPFAquariumSln#RODP](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WPFAquariumSln/visualbasic/wpfaquariumobjects/class1.vb#rodp)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
  <Members>
    <Member MemberName="DependencyProperty">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty DependencyProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty DependencyProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyKey.DependencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependencyProperty As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ DependencyProperty { System::Windows::DependencyProperty ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c97d3-112">Ottiene l'identificatore della proprietà di dipendenza associato all'identificatore della proprietà di dipendenza di sola lettura specializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c97d3-112">Gets the dependency property identifier associated with this specialized read-only dependency property identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c97d3-113">Identificatore della proprietà di dipendenza pertinente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c97d3-113">The relevant dependency property identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97d3-114">Il <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> valore consente identificatore una proprietà di sola lettura di partecipare a comuni operazioni di sistema di proprietà utilizzando alcune delle interfacce utilizzate per le proprietà di dipendenza di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="c97d3-114">The <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> value enables a read-only property's identifier to participate in common property system operations using some of the same interfaces as used for read-write dependency properties.</span></span>  
  
 <span data-ttu-id="c97d3-115">Per implementare la funzione di accesso get della proprietà di dipendenza di sola lettura, è necessario creare ed esporre un <xref:System.Windows.DependencyProperty> identificatore nella classe.</span><span class="sxs-lookup"><span data-stu-id="c97d3-115">In order to implement the get property accessor for a read-only dependency property, you should create and expose a <xref:System.Windows.DependencyProperty> identifier on your class.</span></span> <span data-ttu-id="c97d3-116">Questo ha due scopi:</span><span class="sxs-lookup"><span data-stu-id="c97d3-116">This serves two purposes:</span></span>  
  
-   <span data-ttu-id="c97d3-117">La classe necessita di <xref:System.Windows.DependencyProperty> identificatore per implementare la funzione di accesso get per il wrapper della proprietà.</span><span class="sxs-lookup"><span data-stu-id="c97d3-117">Your own class needs the <xref:System.Windows.DependencyProperty> identifier in order to implement the get accessor for the property wrapper.</span></span> <span data-ttu-id="c97d3-118">Utilizzare il <xref:System.Windows.DependencyProperty> come parametro per il <xref:System.Windows.DependencyObject.GetValue%2A> chiamata che implementa la funzione di accesso get.</span><span class="sxs-lookup"><span data-stu-id="c97d3-118">You use the <xref:System.Windows.DependencyProperty> as a parameter for the <xref:System.Windows.DependencyObject.GetValue%2A> call that implements the get accessor.</span></span>  
  
-   <span data-ttu-id="c97d3-119"><xref:System.Windows.DependencyProperty> gli identificatori espongono proprietà di dipendenza per il sistema di proprietà in modo che altri metodi che si basano sui metadati possano accedervi in un formato standard.</span><span class="sxs-lookup"><span data-stu-id="c97d3-119"><xref:System.Windows.DependencyProperty> identifiers expose your dependency property to the property system such that other methods that rely on metadata can access it in a standard form.</span></span> <span data-ttu-id="c97d3-120">Ad esempio, se è stato chiamato <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> alcuni <xref:System.Windows.DependencyObject> e ottiene un'enumerazione di proprietà impostate localmente (valori e identificatori), l'identificatore restituito per una proprietà di dipendenza di sola lettura il <xref:System.Windows.DependencyProperty> valore anziché la chiave.</span><span class="sxs-lookup"><span data-stu-id="c97d3-120">For instance, if you called <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> on some <xref:System.Windows.DependencyObject> and obtained an enumeration of locally set properties (values and identifiers) the identifier returned for a read-only dependency property would be your <xref:System.Windows.DependencyProperty> value rather than the key.</span></span> <span data-ttu-id="c97d3-121">Non esporre una <xref:System.Windows.DependencyProperty> identificatore non aumenta la sicurezza della proprietà di dipendenza di sola lettura in alcun modo, ma rende le operazioni che coinvolgono la proprietà più complesse per le classi derivate successive e le istanze di classe.</span><span class="sxs-lookup"><span data-stu-id="c97d3-121">Not exposing a <xref:System.Windows.DependencyProperty> identifier does not increase the security of your read-only dependency property in any way, it just makes operations that involve your property more awkward both for subsequent derived classes and class instances.</span></span>  
  
 <span data-ttu-id="c97d3-122">Per esporre il <xref:System.Windows.DependencyProperty> identificatore nella classe, chiamare <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> direttamente nella chiave.</span><span class="sxs-lookup"><span data-stu-id="c97d3-122">To expose the  <xref:System.Windows.DependencyProperty> identifier on your class, you call <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> directly on your key.</span></span> <span data-ttu-id="c97d3-123">Utilizzare questo valore per creare un `public static readonly` <xref:System.Windows.DependencyProperty> identificatore sulla classe, che rende parallelo di <xref:System.Windows.DependencyPropertyKey>.</span><span class="sxs-lookup"><span data-stu-id="c97d3-123">Use this value to create a `public static readonly`<xref:System.Windows.DependencyProperty> identifier on the class, which parallels the <xref:System.Windows.DependencyPropertyKey>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c97d3-124">L'esempio seguente chiama <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> per esporre il <xref:System.Windows.DependencyProperty> identificatore (`AquariumGraphicProperty`) per il `AquariumGraphic` proprietà di dipendenza di sola lettura in una classe.</span><span class="sxs-lookup"><span data-stu-id="c97d3-124">The following example calls <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> to expose the <xref:System.Windows.DependencyProperty> identifier (`AquariumGraphicProperty`) for the `AquariumGraphic` read-only dependency property on a class.</span></span> <span data-ttu-id="c97d3-125">L'esempio mostra anche la <xref:System.Windows.DependencyPropertyKey> creazione (come un membro interno) e la funzione di accesso get `AquariumGraphic`.</span><span class="sxs-lookup"><span data-stu-id="c97d3-125">The example also shows the <xref:System.Windows.DependencyPropertyKey> creation (as an internal member) and the get accessor for `AquariumGraphic`.</span></span>  
  
 [!code-csharp[WPFAquariumSln#RODP](~/samples/snippets/csharp/VS_Snippets_Wpf/WPFAquariumSln/CSharp/WPFAquariumObjects/Class1.cs#rodp)]
 [!code-vb[WPFAquariumSln#RODP](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WPFAquariumSln/visualbasic/wpfaquariumobjects/class1.vb#rodp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
    <Member MemberName="OverrideMetadata">
      <MemberSignature Language="C#" Value="public void OverrideMetadata (Type forType, System.Windows.PropertyMetadata typeMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OverrideMetadata(class System.Type forType, class System.Windows.PropertyMetadata typeMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OverrideMetadata (forType As Type, typeMetadata As PropertyMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OverrideMetadata(Type ^ forType, System::Windows::PropertyMetadata ^ typeMetadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forType" Type="System.Type" />
        <Parameter Name="typeMetadata" Type="System.Windows.PropertyMetadata" />
      </Parameters>
      <Docs>
        <param name="forType">
          <span data-ttu-id="c97d3-126">Tipo della proprietà di dipendenza e in cui deve essere eseguito l'override dei metadati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c97d3-126">The type on which this dependency property exists and metadata should be overridden.</span>
          </span>
        </param>
        <param name="typeMetadata">
          <span data-ttu-id="c97d3-127">Metadati forniti per il tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c97d3-127">Metadata supplied for this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c97d3-128">Esegue l'override dei metadati di una proprietà di dipendenza di sola lettura rappresentata da questo identificatore di proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c97d3-128">Overrides the metadata of a read-only dependency property that is represented by this dependency property identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97d3-129">L'override dei metadati su una proprietà di dipendenza di sola lettura viene eseguita per motivi analoghi a eseguire l'override dei metadati su una proprietà di dipendenza di sola lettura e con restrizioni per l'accesso a livello di chiave perché comportamenti specificati nei metadati possono modificare il comportamento di set (la il valore predefinito, ad esempio).</span><span class="sxs-lookup"><span data-stu-id="c97d3-129">Overriding metadata on a read-only dependency property is done for similar reasons as overriding metadata on a read-write dependency property, and is restricted to access at the key level because behaviors specified in the metadata can change the set behavior (the default value, for instance).</span></span>  
  
 <span data-ttu-id="c97d3-130">Come con le proprietà di dipendenza di sola lettura, si esegue l'override dei metadati su una proprietà di dipendenza di sola lettura deve essere effettuata solo prima di tale proprietà viene inserita in uso dal sistema di proprietà (ciò corrisponde a quella che specifica le istanze degli oggetti che registrano il proprietà viene creata un'istanza).</span><span class="sxs-lookup"><span data-stu-id="c97d3-130">As with read-write dependency properties, overriding metadata on a read-only dependency property should only be done prior to that property being placed in use by the property system (this equates to the time that specific instances of objects that register the property are instantiated).</span></span> <span data-ttu-id="c97d3-131">Le chiamate a <xref:System.Windows.DependencyPropertyKey.OverrideMetadata%2A> deve essere eseguita solo all'interno dei costruttori statici del tipo che fornisce se stesso come il `forType` parametro del metodo o di inizializzazione equivalente per la classe.</span><span class="sxs-lookup"><span data-stu-id="c97d3-131">Calls to <xref:System.Windows.DependencyPropertyKey.OverrideMetadata%2A> should only be performed within the static constructors of the type that provides itself as the `forType` parameter of this method, or equivalent initialization for that class.</span></span>  
  
 <span data-ttu-id="c97d3-132">Questo metodo inoltra in modo efficace per la <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> , passando il <xref:System.Windows.DependencyPropertyKey> istanza come parametro di chiave.</span><span class="sxs-lookup"><span data-stu-id="c97d3-132">This method effectively forwards to the <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> method, passing the <xref:System.Windows.DependencyPropertyKey> instance as the key parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c97d3-133">Nell'esempio seguente esegue l'override dei metadati per una proprietà di dipendenza di sola lettura esistente che eredita una classe.</span><span class="sxs-lookup"><span data-stu-id="c97d3-133">The following example overrides metadata for an existing read-only dependency property that a class inherits.</span></span> <span data-ttu-id="c97d3-134">In questo caso, l'obiettivo di scenario è stata per aggiungere un callback di valore soggetto a coercizione che non dispone dei metadati della proprietà di base.</span><span class="sxs-lookup"><span data-stu-id="c97d3-134">In this case, the scenario goal was to add a coerce value callback that the base property metadata did not have.</span></span> <span data-ttu-id="c97d3-135">È anche possibile eseguire l'override dei metadati per i motivi che in genere si esegue l'override dei metadati è appropriata (modifica il valore predefinito, aggiunta di <xref:System.Windows.FrameworkPropertyMetadataOptions> valori, ecc.)</span><span class="sxs-lookup"><span data-stu-id="c97d3-135">You could also override metadata for any of the other reasons that overriding metadata is typically appropriate (changing default value, adding <xref:System.Windows.FrameworkPropertyMetadataOptions> values, etc.)</span></span>  
  
 [!code-csharp[WPFAquariumSln#RODPOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/WPFAquariumSln/CSharp/WPFAquariumObjects/Class1.cs#rodpoverride)]
 [!code-vb[WPFAquariumSln#RODPOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WPFAquariumSln/visualbasic/wpfaquariumobjects/class1.vb#rodpoverride)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c97d3-136">Tentativo di override dei metadati in una proprietà di dipendenza di sola lettura, che non può essere eseguito utilizzando questa firma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c97d3-136">Attempted metadata override on a read-write dependency property (cannot be done using this signature).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c97d3-137">I metadati sono già stati definiti per la proprietà, in quanto la proprietà è disponibile nel tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c97d3-137">Metadata was already established for the property as it exists on the provided type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.DependencyProperty" />
        <altmember cref="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyPropertyKey)" />
      </Docs>
    </Member>
  </Members>
</Type>