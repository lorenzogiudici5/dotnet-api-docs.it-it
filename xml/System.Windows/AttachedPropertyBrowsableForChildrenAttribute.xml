<Type Name="AttachedPropertyBrowsableForChildrenAttribute" FullName="System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e6652212075e681ea125aba0f03a662ff2e7735a" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52736047" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AttachedPropertyBrowsableForChildrenAttribute : System.Windows.AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AttachedPropertyBrowsableForChildrenAttribute extends System.Windows.AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttachedPropertyBrowsableForChildrenAttribute&#xA;Inherits AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttachedPropertyBrowsableForChildrenAttribute sealed : System::Windows::AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="F#" Value="type AttachedPropertyBrowsableForChildrenAttribute = class&#xA;    inherit AttachedPropertyBrowsableAttribute" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.AttachedPropertyBrowsableAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="322e3-101">Specifica che una proprietà associata ha un ambito esplorabile che si estende agli elementi figlio nell'albero logico.</span>
      <span class="sxs-lookup">
        <span data-stu-id="322e3-101">Specifies that an attached property has a browsable scope that extends to child elements in the logical tree.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="322e3-102">Il significato del termine `browsable` usato nelle descrizioni per questo [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] è analogo per le descrizioni specificate per <xref:System.ComponentModel.BrowsableAttribute>, ma lo stato esplorabile di una proprietà associata è particolarmente rilevante per informazioni sulle proprietà di [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], in quanto una proprietà associata è principalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concetto.</span><span class="sxs-lookup"><span data-stu-id="322e3-102">The meaning of the term `browsable` as used in descriptions for this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is analogous to the descriptions given for <xref:System.ComponentModel.BrowsableAttribute>, but the browsable state for an attached property is particularly relevant to property information for [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], because an attached property is primarily a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concept.</span></span>  
  
 <span data-ttu-id="322e3-103">Quando ciò [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] viene applicato alla funzione di accesso get di una proprietà associata, ciò [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] specifica che una proprietà associata è esplorabile quando il proprietario della proprietà associata è un elemento padre di altri elementi.</span><span class="sxs-lookup"><span data-stu-id="322e3-103">When this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is applied to the get accessor for an attached property, this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] specifies that an attached property is browsable when the attached property owner is a parent element of other elements.</span></span>  
  
 <span data-ttu-id="322e3-104">Quando vengono interpretati da una finestra di progettazione che utilizza le informazioni sul descrittore di tipi, la finestra di progettazione deve aggiungere questa proprietà come esplorabile per tutti gli elementi figlio nell'albero logico, basato sull'elemento padre con questo [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] applicato.</span><span class="sxs-lookup"><span data-stu-id="322e3-104">When interpreted by a designer that uses type descriptor information, the designer should add this property as a browsable property to all child elements in the logical tree, based on the parent element with this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] applied.</span></span>  
  
 <span data-ttu-id="322e3-105">In genere, lo stato esplorabile parallelo funzionalità.</span><span class="sxs-lookup"><span data-stu-id="322e3-105">Generally, the browsable state parallels functionality.</span></span> <span data-ttu-id="322e3-106">Ad esempio, <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> designato esplorabile sugli elementi che sono elementi figlio di un <xref:System.Windows.Controls.Canvas>, in quanto <xref:System.Windows.Controls.Canvas> include il codice per la verifica dei valori di set di <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> sugli elementi figlio.</span><span class="sxs-lookup"><span data-stu-id="322e3-106">For example, <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> is designated browsable on elements that are child elements of a <xref:System.Windows.Controls.Canvas>, because <xref:System.Windows.Controls.Canvas> includes code for checking any set values of <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> on child elements.</span></span>  
  
 <span data-ttu-id="322e3-107">Ciò [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] supporta due tipi di modalità di rilevamento dell'albero per le posizioni dell'elemento padre: una modalità superficiale e una modalità completa.</span><span class="sxs-lookup"><span data-stu-id="322e3-107">This  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] supports two types of tree detection modes for parent element positions:  a shallow mode, and a deep mode.</span></span> <span data-ttu-id="322e3-108">La modalità di superficiale, ovvero la modalità predefinita per un applicato <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], richiede che l'elemento padre diretto sia il tipo di proprietario della proprietà in ordine per la proprietà associata sia esplorabile.</span><span class="sxs-lookup"><span data-stu-id="322e3-108">The shallow mode, which is the default mode for an applied <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], requires that the immediate parent element be the owner type of the property in order for the attached property to be browsable.</span></span> <span data-ttu-id="322e3-109">Applicando l'attributo con cui viene dichiarata la modalità completa <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> come `true`.</span><span class="sxs-lookup"><span data-stu-id="322e3-109">The deep mode is declared by applying the attribute with <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> as `true`.</span></span> <span data-ttu-id="322e3-110">La modalità completa è meno restrittiva perché richiede solo che il tipo di proprietario si trovi nella direzione predecessori dell'albero logico e pertanto la proprietà associata è esplorabile per tutti gli elementi figlio, elementi figlio immediati non solo.</span><span class="sxs-lookup"><span data-stu-id="322e3-110">The deep mode is less restrictive because it only requires that the owner type be somewhere in the ancestor direction of the logical tree, and therefore the attached property is browsable on all child elements, not just immediate child elements.</span></span> <span data-ttu-id="322e3-111">Viene applicata la modalità completa per gli utilizzi di proprietà associata in cui gli elementi intermedi nell'albero logico non devono essere dichiarati come elemento padre true.</span><span class="sxs-lookup"><span data-stu-id="322e3-111">The deep mode is applied for attached property usages where intervening elements in the logical tree should not be reported as the true parent element.</span></span> <span data-ttu-id="322e3-112">Raccolte implicite (ad esempio, il <xref:System.Windows.Controls.UIElementCollection> che è implicita nel <xref:System.Windows.Controls.Panel.Children%2A> di un <xref:System.Windows.Controls.Panel>) non sono considerati elementi padre ai fini della procedura in questo [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] dichiara la modalità di rilevamento dell'albero.</span><span class="sxs-lookup"><span data-stu-id="322e3-112">Implicit collections (for example, the <xref:System.Windows.Controls.UIElementCollection> that is implicit in the <xref:System.Windows.Controls.Panel.Children%2A> of a <xref:System.Windows.Controls.Panel>) are not considered to be parent elements for purposes of how this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] declares the tree detection mode.</span></span>  
  
 <span data-ttu-id="322e3-113">Ciò [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] deve essere applicato solo nella funzione di accesso get di definizioni di proprietà associata.</span><span class="sxs-lookup"><span data-stu-id="322e3-113">This [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] should only be applied on the get accessor of attached property definitions.</span></span> <span data-ttu-id="322e3-114">Non applicare [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] alla funzione di accesso set.</span><span class="sxs-lookup"><span data-stu-id="322e3-114">Do not apply this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] to the set accessor.</span></span> <span data-ttu-id="322e3-115">Sebbene sia in modo intuitivo l'operazione di impostazione che è stata effettuata esplorabile per [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sugli elementi figlio, è la presenza e le caratteristiche della funzione di accesso get sull'elemento padre che controlla il comportamento true.</span><span class="sxs-lookup"><span data-stu-id="322e3-115">Although intuitively it is the set operation that is being made browsable for [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] on child elements, it is the presence and characteristics of the get accessor on the parent element that controls the true behavior.</span></span>  
  
 <span data-ttu-id="322e3-116">Indica se una proprietà associata è esplorabile per un elemento figlio non è una garanzia assoluta che il valore della proprietà associata sia realmente elaborato dall'elemento padre in qualche modo.</span><span class="sxs-lookup"><span data-stu-id="322e3-116">Whether an attached property is browsable on a child element is not an absolute guarantee that the attached property value is really processed by the parent element in some manner.</span></span> <span data-ttu-id="322e3-117">Inoltre, il <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> valore non è una garanzia assoluta che l'ambito dell'elaborazione o non si estende oltre l'elemento padre immediato.</span><span class="sxs-lookup"><span data-stu-id="322e3-117">Also, the <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> value is not an absolute guarantee that the processing scope does or does not extend beyond the immediate parent element.</span></span> <span data-ttu-id="322e3-118">Tutto questo è specifico dell'implementazione.</span><span class="sxs-lookup"><span data-stu-id="322e3-118">All this is implementation specific.</span></span> <span data-ttu-id="322e3-119">Tuttavia, ciò [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] per aver segnalato lo stato esplorabile è il meccanismo migliore per riportare le informazioni sull'utilizzo e funzionale per una proprietà associata.</span><span class="sxs-lookup"><span data-stu-id="322e3-119">However, this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] for reporting the browsable state is the best available mechanism for reporting the usage information and functional information for an attached property.</span></span> <span data-ttu-id="322e3-120">Pertanto, in genere si può presupporre che lo stato esplorabile di una proprietà associata è analogo al comportamento di elaborazione o interpretato dall'elemento padre rilevante nel codice dell'applicazione come un valore della proprietà associata a un elemento figlio.</span><span class="sxs-lookup"><span data-stu-id="322e3-120">Therefore, you can generally assume that the browsable state of an attached property is analogous to the behavior of how an attached property value on a child element is processed or interpreted by the relevant parent element in your application code.</span></span>  
  
 <span data-ttu-id="322e3-121">Per informazioni generali sulle proprietà associate dichiarante, vedere [Cenni preliminari sulle proprietà associate](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span><span class="sxs-lookup"><span data-stu-id="322e3-121">For general information on declaring attached properties, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
<a name="xamlTextUsage_AttachedPropertyBrowsableForChildrenAttribute"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="322e3-122">Utilizzo di testo XAML</span><span class="sxs-lookup"><span data-stu-id="322e3-122">XAML Text Usage</span></span>  
 <span data-ttu-id="322e3-123">I membri di questo tipo non vengono utilizzati in genere [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="322e3-123">Members of this type are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Windows.Markup" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttachedPropertyBrowsableForChildrenAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttachedPropertyBrowsableForChildrenAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="322e3-124">Inizializza una nuova istanza della classe <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="322e3-124">Initializes a new instance of the <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="322e3-125">Il valore predefinito per <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> è `false`.</span><span class="sxs-lookup"><span data-stu-id="322e3-125">The default for <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool&#xA;override this.Equals : obj -&gt; bool" Usage="attachedPropertyBrowsableForChildrenAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="322e3-126">L'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> da confrontare con l'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="322e3-126">The <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> to compare to the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="322e3-127">Determina se il <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] corrente è uguale ad un oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="322e3-127">Determines whether the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="322e3-128">
            <see langword="true" /> se l'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> specificato è uguale all'oggetto <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> corrente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="322e3-128">
              <see langword="true" /> if the specified <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> is equal to the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="322e3-129">Questa implementazione supporta un'uguaglianza di valore di uno dei possibili da questa [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.</span><span class="sxs-lookup"><span data-stu-id="322e3-129">This implementation supports value equality of the one possible settable value exposed by this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int&#xA;override this.GetHashCode : unit -&gt; int" Usage="attachedPropertyBrowsableForChildrenAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="322e3-130">Restituisce il codice hash per questo [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="322e3-130">Returns the hash code for this <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="322e3-131">Valore intero senza segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="322e3-131">An unsigned 32-bit integer value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="322e3-132">Questa implementazione supporta due possibili valori basati su un possibile valore impostabile esposto da questo [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.</span><span class="sxs-lookup"><span data-stu-id="322e3-132">This implementation supports two possible hash values based on the one possible settable value exposed by this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeDescendants">
      <MemberSignature Language="C#" Value="public bool IncludeDescendants { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeDescendants" />
      <MemberSignature Language="DocId" Value="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeDescendants As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeDescendants { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeDescendants : bool with get, set" Usage="System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="322e3-133">Ottiene o imposta un valore che dichiara se usare la modalità completa per il rilevamento di elementi padre della proprietà associata in cui si applica [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="322e3-133">Gets or sets a value that declares whether to use the deep mode for detection of parent elements on the attached property where this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is applied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="322e3-134">
            <see langword="true" /> se la proprietà associata è esplorabile per tutti gli elementi figlio dell'albero logico dell'elemento padre che possiede la proprietà associata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="322e3-134">
              <see langword="true" /> if the attached property is browsable for all child elements in the logical tree of the parent element that owns the attached property.</span>
          </span>
          <span data-ttu-id="322e3-135">
            <see langword="false" /> se la proprietà associata è esplorabile solo per gli elementi figlio immediati di un elemento padre che possiede la proprietà associata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="322e3-135">
              <see langword="false" /> if the attached property is only browsable for immediate child elements of a parent element that owns the attached property.</span>
          </span>
          <span data-ttu-id="322e3-136">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="322e3-136">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="322e3-137">La maggior parte delle proprietà associate definite da [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] che si applicano <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> eseguire questa operazione con il valore predefinito è <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> come `false`.</span><span class="sxs-lookup"><span data-stu-id="322e3-137">Most of the attached properties defined by [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] that apply <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> do so with the default of <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> as `false`.</span></span>  
  
<a name="xamlTextUsage_IncludeDescendants"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="322e3-138">Utilizzo di testo XAML</span><span class="sxs-lookup"><span data-stu-id="322e3-138">XAML Text Usage</span></span>  
 <span data-ttu-id="322e3-139">I membri di questo tipo non vengono utilizzati in genere [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="322e3-139">Members of this type are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>