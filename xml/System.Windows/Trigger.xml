<Type Name="Trigger" FullName="System.Windows.Trigger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0c41c0dfa023434197bddb68f7b77ac93b5a9dc8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36456302" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Trigger : System.Windows.TriggerBase, System.ComponentModel.ISupportInitialize, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Trigger extends System.Windows.TriggerBase implements class System.ComponentModel.ISupportInitialize, class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Trigger" />
  <TypeSignature Language="VB.NET" Value="Public Class Trigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild, ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class Trigger : System::Windows::TriggerBase, System::ComponentModel::ISupportInitialize, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type Trigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.XamlSetTypeConverter("ReceiveTypeConverter")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un trigger che applica i valori delle proprietà o esegue azioni in modo condizionale.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] definisce le proprietà che corrispondono alle azioni dell'utente finale, ad esempio il <xref:System.Windows.UIElement.IsMouseOver%2A> proprietà è impostata su `true` quando l'utente posiziona il cursore su un <xref:System.Windows.UIElement> o corrispondenti <xref:System.Windows.ContentElement.IsMouseOver%2A> proprietà di un <xref:System.Windows.ContentElement>. Che rappresenta le azioni degli utenti finali in valori di proprietà, insieme ai <xref:System.Windows.Trigger> elemento, consente [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] stili per modificare i valori delle proprietà in base a tali azioni dell'utente finale, tutti da markup.  
  
 Le proprietà modificate dal trigger vengono reimpostate sul valore precedente automaticamente quando la condizione del trigger non è più soddisfatta. I trigger sono ottimizzati per gli stati temporanei che si prevede di modificare e torneranno allo stato originale, ad esempio <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> sul <xref:System.Windows.Controls.Button> e <xref:System.Windows.Controls.ListBoxItem.IsSelected%2A> su <xref:System.Windows.Controls.ListBoxItem>. Il <xref:System.Windows.Trigger.Property%2A> di interesse deve essere una proprietà di dipendenza.  
  
 Si noti che è necessario specificare sia il <xref:System.Windows.Trigger.Property%2A> e <xref:System.Windows.Trigger.Value%2A> proprietà su un <xref:System.Windows.Trigger> per il trigger è significativo. Se non vengono impostate una o entrambe le proprietà, viene generata un'eccezione.  
  
 Il <xref:System.Windows.Trigger.Setters%2A> proprietà di un <xref:System.Windows.Trigger> oggetto può contenere solo <xref:System.Windows.Setter> oggetti. Aggiunta di un <xref:System.Windows.Setter> figlio a un <xref:System.Windows.Trigger> oggetto aggiunge in modo implicito per il <xref:System.Windows.SetterBaseCollection> per il <xref:System.Windows.Trigger> oggetto. <xref:System.Windows.EventSetter> gli oggetti non sono supportati. solo <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> supporta <xref:System.Windows.EventSetter> oggetti.  
  
 Esistono altri tipi di trigger. <xref:System.Windows.MultiTrigger> Consente di applicare le modifiche in base allo stato di più proprietà. <xref:System.Windows.EventTrigger> Consente di applicare le modifiche quando si verifica un evento. <xref:System.Windows.DataTrigger> e <xref:System.Windows.MultiDataTrigger> sono per le proprietà associati a dati.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un oggetto denominato <xref:System.Windows.Style> disponibile per <xref:System.Windows.Controls.Button> controlli. Il <xref:System.Windows.Style> definisce una <xref:System.Windows.Trigger> elemento che viene modificato il <xref:System.Windows.Controls.Control.Foreground%2A> proprietà di un pulsante quando il <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> proprietà `true`.  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Trigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Trigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Trigger" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Trigger.Property" />
      <MemberSignature Language="VB.NET" Value="Public Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); void set(System::Windows::DependencyProperty ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Property : System.Windows.DependencyProperty with get, set" Usage="System.Windows.Trigger.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la proprietà che restituisce il valore da confrontare con la proprietà <see cref="P:System.Windows.Trigger.Value" /> del trigger. Il confronto è un controllo di uguaglianza dei riferimenti.</summary>
        <value>
          <see cref="T:System.Windows.DependencyProperty" /> che restituisce il valore della proprietà dell'elemento. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito da questa proprietà viene confrontato con il valore specificato per il <xref:System.Windows.Trigger.Value%2A> proprietà. Il confronto che viene eseguito è un controllo di uguaglianza di riferimento. Se i due valori corrispondono, quindi associato <xref:System.Windows.Setter>applicheranno i valori delle proprietà specificato.  
  
 Utilizzare la `ClassName.PropertyName` sintassi per qualificare la proprietà si specifica se lo stile o il modello che contiene il trigger non dispone di `TargetType` set di proprietà.  
  
 Si noti che è necessario specificare sia il <xref:System.Windows.Trigger.Property%2A> e <xref:System.Windows.Trigger.Value%2A> proprietà su un <xref:System.Windows.Trigger> per il trigger è significativo. Se non vengono impostate una o entrambe le proprietà, viene generata un'eccezione.  
  
   
  
## Examples  
 Nell'esempio seguente contiene due trigger. Le modifiche prima di <xref:System.Windows.Controls.Control.Background%2A> proprietà di un <xref:System.Windows.Controls.Button> quando il <xref:System.Windows.UIElement.IsMouseOver%2A> proprietà **true**. Le modifiche secondo la <xref:System.Windows.Controls.Control.Foreground%2A> proprietà di un pulsante quando il <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> è di proprietà **true**. Il <xref:System.Windows.Style.TargetType%2A> del <xref:System.Windows.Style> è impostata su <xref:System.Windows.Controls.Button> e pertanto non è necessario qualificare il `Property` proprietà con il nome della classe.  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Windows.Style" /> non può contenere un oggetto <see cref="T:System.Windows.Trigger" /> che fa riferimento alla proprietà <see cref="T:System.Windows.Style" />.</exception>
        <exception cref="T:System.InvalidOperationException">Se un oggetto <see cref="T:System.Windows.Trigger" /> è in uso, non può essere modificato.</exception>
        <altmember cref="P:System.Windows.Trigger.Value" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTypeConverter">
      <MemberSignature Language="C#" Value="public static void ReceiveTypeConverter (object targetObject, System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveTypeConverter(object targetObject, class System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveTypeConverter (targetObject As Object, eventArgs As XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveTypeConverter(System::Object ^ targetObject, System::Windows::Markup::XamlSetTypeConverterEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveTypeConverter : obj * System.Windows.Markup.XamlSetTypeConverterEventArgs -&gt; unit" Usage="System.Windows.Trigger.ReceiveTypeConverter (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetTypeConverterEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetObject">Oggetto in corrispondenza del quale il convertitore di tipo imposta il valore.</param>
        <param name="eventArgs">Dati pertinenti per l'elaborazione del convertitore di tipo.</param>
        <summary>Gestisce casi dove un convertitore di tipo fornisce un valore per una proprietà di oggetto <see cref="T:System.Windows.Trigger" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tratta del metodo fanno riferimento un applicato <xref:System.Windows.Markup.XamlSetTypeConverterAttribute> a livello di classe, che indica che questo metodo elabora tutti i tentativi di impostare valori di attributo <xref:System.Windows.Trigger> con un convertitore di tipi. In genere, questo metodo non viene chiamata direttamente.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Trigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.Trigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di oggetti <see cref="T:System.Windows.Setter" /> che descrivono i valori della proprietà da applicare quando la condizione specificata è stata soddisfatta.</summary>
        <value>Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>Utilizzo della sintassi XAML per elementi proprietà  
  
```  
<object>  
  <object.Setters>  
    ZeroOrMoreSetters  
  </object.Setters>  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *ZeroOrMoreSetters*  
 Zero o più <xref:System.Windows.Setter> oggetti. Non include il supporto <xref:System.Windows.EventSetter> oggetto.  
  
 Un <xref:System.Windows.Trigger> consente di utilizzare <xref:System.Windows.Setter>s applicare proprietà valori quando l'elemento soddisfa una condizione specificata. Ad esempio, si desideri modificare il colore di sfondo di un elemento quando si trova nello stato attivo.  
  
 Se la stessa proprietà è impostata più di una volta, verrà applicato l'ultimo valore di proprietà.  
  
 Il <xref:System.Windows.Trigger.Setters%2A> proprietà di un <xref:System.Windows.Trigger> oggetto può contenere solo <xref:System.Windows.Setter> oggetti. Aggiunta di un <xref:System.Windows.Setter> figlio a un <xref:System.Windows.Trigger> oggetto aggiunge in modo implicito per il <xref:System.Windows.SetterBaseCollection> per il <xref:System.Windows.Trigger> oggetto. <xref:System.Windows.EventSetter> gli oggetti non sono supportati. solo <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> supporta <xref:System.Windows.EventSetter> oggetti.  
  
   
  
## Examples  
 Come indicato in precedenza, l'aggiunta una <xref:System.Windows.Setter> figlio a un <xref:System.Windows.Trigger> oggetto aggiunge in modo implicito per il <xref:System.Windows.SetterBaseCollection> per il <xref:System.Windows.Trigger> oggetto. Nell'esempio seguente, `<Trigger.Setters>` è implicito.  
  
 [!code-xaml[PhotoStoreDemoStyled#TriggerSettersRef](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#triggersettersref)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Trigger.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceName : string with get, set" Usage="System.Windows.Trigger.SourceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'oggetto con la proprietà che causa l'applicazione dei metodi di impostazione associati.</summary>
        <value>La proprietà predefinita è <see langword="null" />.  Se questa proprietà è <see langword="null" />, la proprietà <see cref="P:System.Windows.Trigger.Property" /> viene valutata per l'elemento al quale viene applicato questo stile o modello, ovvero il padre basato su stili o modelli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile impostare questa proprietà per il nome di qualsiasi elemento all'interno dell'ambito in cui la raccolta di trigger (la raccolta da questo <xref:System.Windows.Trigger> fa parte di) viene applicato. Si tratta in genere un elemento denominato che si trova all'interno del modello contenente questo <xref:System.Windows.Trigger>.  
  
 È possibile assegnare un oggetto utilizzando il [direttiva X:Name](~/docs/framework/xaml-services/x-name-directive.md) sintassi.  
  
   
  
## Examples  
 Uno scenario in cui si utilizzerebbe il <xref:System.Windows.Trigger.SourceName%2A> proprietà è quando la proprietà di interesse non è una proprietà dell'elemento padre basato su modelli, come nell'esempio seguente:  
  
 [!code-xaml[ControlTemplateExamples#TriggerSourceName](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/menu.xaml#triggersourcename)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Se un oggetto <see cref="T:System.Windows.Trigger" /> è in uso, non può essere modificato.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Segnala all'oggetto l'avvio dell'inizializzazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Setter> a un'interfaccia <xref:System.ComponentModel.ISupportInitialize>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Segnala all'oggetto che l'inizializzazione è completa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Setter> a un'interfaccia <xref:System.ComponentModel.ISupportInitialize>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto figlio da aggiungere.</param>
        <summary>Aggiunge un oggetto figlio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Trigger> a un'interfaccia <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Testo da aggiungere all'oggetto.</param>
        <summary>Aggiunge il contenuto di testo di un nodo all'oggetto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Trigger> a un'interfaccia <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Trigger.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.Trigger.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.SetterTriggerConditionValueConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Property")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("SourceName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore con cui confrontare il valore della proprietà dell'elemento. Il confronto è un controllo di uguaglianza dei riferimenti.</summary>
        <value>Il valore predefinito è <see langword="null" />. Vedere anche la sezione relativa alle eccezioni.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo valore viene confrontato con il valore della proprietà restituito dal <xref:System.Windows.Trigger.Property%2A> proprietà del <xref:System.Windows.Trigger>. Il confronto che viene eseguito è un controllo di qualità di riferimento. Se i due valori sono uguali, associato <xref:System.Windows.Setter>applicheranno i valori delle proprietà specificato.  
  
 Si noti che è necessario specificare sia il <xref:System.Windows.Trigger.Property%2A> e <xref:System.Windows.Trigger.Value%2A> proprietà su un <xref:System.Windows.Trigger> per il trigger è significativo. Pertanto, se una o entrambe le proprietà non sono specificate, viene generata un'eccezione.  
  
<a name="xamlPropertyElementUsage_Value"></a>   
## <a name="xaml-property-element-usage"></a>Utilizzo della sintassi XAML per elementi proprietà  
  
```  
<object>  
  <object.Value>  
    Value  
  </object.Value>  
</object>  
```  
  
   
  
## Examples  
 Nell'esempio seguente il <xref:System.Windows.Controls.Control.Foreground%2A> proprietà di un pulsante quando il <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> è di proprietà **true**.  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Espressioni quali le associazioni non sono supportate.</exception>
        <exception cref="T:System.InvalidOperationException">Se un oggetto <see cref="T:System.Windows.Trigger" /> è in uso, non può essere modificato.</exception>
        <altmember cref="P:System.Windows.Trigger.Property" />
        <altmember cref="P:System.Windows.Trigger.Setters" />
      </Docs>
    </Member>
  </Members>
</Type>