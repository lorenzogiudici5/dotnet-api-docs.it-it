<Type Name="PropertyMetadata" FullName="System.Windows.PropertyMetadata">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="423f853a60d99a5767f47d8a9e4d3ef0dce3cb15" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39845058" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PropertyMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyMetadata extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PropertyMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyMetadata" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyMetadata" />
  <TypeSignature Language="F#" Value="type PropertyMetadata = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definisce determinati aspetti del comportamento di una proprietà di dipendenza applicata a un tipo specifico, incluse le condizioni con cui è stata registrata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I metadati della proprietà possono essere definito e usato durante la registrazione di proprietà di dipendenza quando si chiama il <xref:System.Windows.DependencyProperty.Register%2A> metodo (o varianti per le proprietà associate o le proprietà di dipendenza di sola lettura), o dopo la registrazione di proprietario originale quando si chiama la <xref:System.Windows.DependencyPropertyKey.OverrideMetadata%2A> metodo. <xref:System.Windows.DependencyProperty.AddOwner%2A> accetta anche i metadati della proprietà.  
  
 Questa classe è una classe di base concreta che può essere usata in ognuna di queste chiamate. Tuttavia, è molto comune per specificare i metadati utilizzando una delle classi derivate, ad esempio <xref:System.Windows.FrameworkPropertyMetadata>. Queste classi derivate supportano più dettagliata dei metadati trasportata come valori di proprietà booleana, che sono utili per rilevare e abilitare alcuni comportamenti di layout e del sistema proprietà solo implementati nel [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] a livello di framework.  
  
 Molte proprietà di questa classe sono in lettura / scrittura per il modello a oggetti, ma può essere scritta solo prima l'istanza utilizzata in un'operazione di sistema di proprietà, ad esempio <xref:System.Windows.DependencyProperty.Register%2A> o <xref:System.Windows.DependencyPropertyKey.OverrideMetadata%2A>. Ognuna di queste proprietà potrebbero inoltre essere impostate dal costruttore, ma vengono esposte in modo che <xref:System.Windows.PropertyMetadata.Merge%2A> implementazioni del metodo possono impostarle.  
  
<a name="xamlTextUsage_PropertyMetadata"></a>   
## <a name="xaml-text-usage"></a>Utilizzo di testo XAML  
 Questo tipo e i membri di questo tipo, non sono in genere usati [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.PropertyMetadata" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyMetadata.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyMetadata();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.PropertyMetadata" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyMetadata (object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyMetadata.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (defaultValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyMetadata(System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyMetadata : obj -&gt; System.Windows.PropertyMetadata" Usage="new System.Windows.PropertyMetadata defaultValue" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="defaultValue">Valore predefinito da specificare per una proprietà di dipendenza, in genere fornito come valore di un tipo specifico.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.PropertyMetadata" /> con un valore predefinito specificato per la proprietà di dipendenza a cui verranno applicati i metadati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il tipo del valore fornito per `defaultValue` deve corrispondere o essere correlato al tipo specificato nella registrazione originale della proprietà di dipendenza che verranno applicati i metadati. Mancate corrispondenze tra il tipo di valore di metadati predefinito e il tipo della proprietà di dipendenza per che viene applicato possono essere difficile eseguire il debug, in quanto la mancata corrispondenza non è rilevabile durante la compilazione (la mancata corrispondenza genereranno un'eccezione di run-time).  
  
 Anche se è il valore predefinito per il costruttore senza parametri, un `defaultValue` di <xref:System.Windows.DependencyProperty.UnsetValue> non può essere specificato. Tentativo di eseguire questa operazione genererà un'eccezione.  
  
   
  
## Examples  
 [!code-csharp[PropertyMetadataAPIs#Initpm](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#initpm)]  
[!code-csharp[PropertyMetadataAPIs#PMCtor1param](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#pmctor1param)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="defaultValue" /> non può essere impostato sul valore <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyMetadata (System.Windows.PropertyChangedCallback propertyChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.PropertyChangedCallback propertyChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyMetadata(System::Windows::PropertyChangedCallback ^ propertyChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyMetadata : System.Windows.PropertyChangedCallback -&gt; System.Windows.PropertyMetadata" Usage="new System.Windows.PropertyMetadata propertyChangedCallback" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyChangedCallback" Type="System.Windows.PropertyChangedCallback" />
      </Parameters>
      <Docs>
        <param name="propertyChangedCallback">Riferimento a un'implementazione del gestore che il sistema di proprietà chiamerà a ogni modifica del valore effettivo della proprietà.</param>
        <summary>Inizializza una nuova istanza della classe  <see cref="T:System.Windows.PropertyMetadata" /> con il riferimento all'implementazione di <see cref="T:System.Windows.PropertyChangedCallback" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[PropertyMetadataAPIs#Initpm](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#initpm)]  
[!code-csharp[PropertyMetadataAPIs#PMCtor1paramcallback](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#pmctor1paramcallback)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyMetadata (object defaultValue, System.Windows.PropertyChangedCallback propertyChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object defaultValue, class System.Windows.PropertyChangedCallback propertyChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyMetadata(System::Object ^ defaultValue, System::Windows::PropertyChangedCallback ^ propertyChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyMetadata : obj * System.Windows.PropertyChangedCallback -&gt; System.Windows.PropertyMetadata" Usage="new System.Windows.PropertyMetadata (defaultValue, propertyChangedCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="propertyChangedCallback" Type="System.Windows.PropertyChangedCallback" />
      </Parameters>
      <Docs>
        <param name="defaultValue">Valore predefinito della proprietà di dipendenza, in genere fornito come valore di un tipo specifico.</param>
        <param name="propertyChangedCallback">Riferimento a un'implementazione del gestore che il sistema di proprietà chiamerà a ogni modifica del valore effettivo della proprietà.</param>
        <summary>Inizializza una nuova istanza della classe  <see cref="T:System.Windows.PropertyMetadata" /> con il valore predefinito e il riferimento all'implementazione di <see cref="T:System.Windows.PropertyChangedCallback" /> specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il tipo del valore fornito `defaultValue` deve corrispondere o essere correlato al tipo specificato nella registrazione originale della proprietà di dipendenza che verranno applicati i metadati. Mancate corrispondenze tra il tipo di valore di metadati predefinito e il tipo della proprietà di dipendenza per che viene applicato possono essere difficile eseguire il debug, in quanto la mancata corrispondenza non è rilevabile durante la compilazione (la mancata corrispondenza genereranno un'eccezione di run-time).  
  
 Anche se è il valore predefinito per il costruttore senza parametri, un `defaultValue` di <xref:System.Windows.DependencyProperty.UnsetValue> non può essere specificato. Tentativo di eseguire questa operazione genererà un'eccezione.  
  
   
  
## Examples  
 [!code-csharp[PropertyMetadataAPIs#Initpm](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#initpm)]  
[!code-csharp[PropertyMetadataAPIs#PMCtor2param](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#pmctor2param)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="defaultValue" /> non può essere impostato sul valore <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyMetadata (object defaultValue, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object defaultValue, class System.Windows.PropertyChangedCallback propertyChangedCallback, class System.Windows.CoerceValueCallback coerceValueCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyMetadata(System::Object ^ defaultValue, System::Windows::PropertyChangedCallback ^ propertyChangedCallback, System::Windows::CoerceValueCallback ^ coerceValueCallback);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyMetadata : obj * System.Windows.PropertyChangedCallback * System.Windows.CoerceValueCallback -&gt; System.Windows.PropertyMetadata" Usage="new System.Windows.PropertyMetadata (defaultValue, propertyChangedCallback, coerceValueCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="propertyChangedCallback" Type="System.Windows.PropertyChangedCallback" />
        <Parameter Name="coerceValueCallback" Type="System.Windows.CoerceValueCallback" />
      </Parameters>
      <Docs>
        <param name="defaultValue">Valore predefinito della proprietà di dipendenza, in genere fornito come valore di un tipo specifico.</param>
        <param name="propertyChangedCallback">Riferimento a un'implementazione del gestore che il sistema di proprietà chiamerà a ogni modifica del valore effettivo della proprietà.</param>
        <param name="coerceValueCallback">Riferimento a un'implementazione del gestore che verrà chiamata ogni volta che il sistema di proprietà chiama <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> per la proprietà.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.PropertyMetadata" />, con il valore predefinito e i callback specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si desidera specificare una <xref:System.Windows.CoerceValueCallback> ma non una <xref:System.Windows.PropertyChangedCallback>, è possibile passare `null` per il `propertyChangedCallback` parametro.  
  
 Il tipo del valore fornito per `defaultValue` deve corrispondere o essere correlato al tipo specificato nella registrazione originale della proprietà di dipendenza che verranno applicati i metadati. Mancate corrispondenze tra il tipo di valore di metadati predefinito e il tipo della proprietà di dipendenza per che viene applicato possono essere difficile eseguire il debug, in quanto la mancata corrispondenza non è rilevabile durante la compilazione (la mancata corrispondenza genereranno un'eccezione di run-time).  
  
 Anche se è il valore predefinito per il costruttore senza parametri, un `defaultValue` di <xref:System.Windows.DependencyProperty.UnsetValue> non può essere specificato. Tentativo di eseguire questa operazione genererà un'eccezione.  
  
   
  
## Examples  
 [!code-csharp[PropertyMetadataAPIs#Initpm](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#initpm)]  
[!code-csharp[PropertyMetadataAPIs#PMCtor3param](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#pmctor3param)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="defaultValue" /> non può essere impostato sul valore <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CoerceValueCallback">
      <MemberSignature Language="C#" Value="public System.Windows.CoerceValueCallback CoerceValueCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.CoerceValueCallback CoerceValueCallback" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyMetadata.CoerceValueCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property CoerceValueCallback As CoerceValueCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::CoerceValueCallback ^ CoerceValueCallback { System::Windows::CoerceValueCallback ^ get(); void set(System::Windows::CoerceValueCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CoerceValueCallback : System.Windows.CoerceValueCallback with get, set" Usage="System.Windows.PropertyMetadata.CoerceValueCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.CoerceValueCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un riferimento a un'implementazione di <see cref="T:System.Windows.CoerceValueCallback" /> specificata nei metadati.</summary>
        <value>Riferimento all'implementazione di <see cref="T:System.Windows.CoerceValueCallback" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I callback nei metadati della proprietà non sono in genere membri pubblici nel tipo contenitore, pertanto il valore di questa proprietà non è importante per la maggior parte degli scenari che utilizzano solo i metadati della proprietà di dipendenza un'esistente. Un motivo per cui questa proprietà viene visualizzata sia in modo che le sottoclassi di metadati di eseguire la logica di unione desiderato se viene sottoposto a override o l'aggiunta dei metadati sia i metadati di base specificano un <xref:System.Windows.CoerceValueCallback>. Tuttavia, il valore predefinito merge per la logica per un <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> consiste nel sostituire quella precedente.  
  
 <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> è definito nel modello a oggetti in lettura e scrittura. In tal caso <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> può essere modificato dopo l'inizializzazione del <xref:System.Windows.PropertyMetadata> oggetto stesso. Tuttavia, dopo che i metadati vengono utilizzati come parte di una chiamata a <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, o <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, il sistema di proprietà eseguirà il sealing dell'istanza di metadati e le proprietà sono ora considerate immutabili. Tentativo di impostare <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> una volta <xref:System.Windows.PropertyMetadata.IsSealed%2A> è `true` su questi metadati istanza genererà un'eccezione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Impossibile impostare una proprietà dei metadati dopo averla applicata a un'operazione relativa alla proprietà di dipendenza.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyMetadata.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : obj with get, set" Usage="System.Windows.PropertyMetadata.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore predefinito della proprietà di dipendenza.</summary>
        <value>Valore predefinito della proprietà. Il valore predefinito in un <see cref="T:System.Windows.PropertyMetadata" /> istanza creata con il costruttore senza parametri sarà <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.PropertyMetadata.DefaultValue%2A> è definito nel modello a oggetti in lettura e scrittura. In tal caso <xref:System.Windows.PropertyMetadata.DefaultValue%2A> può essere modificato dopo l'inizializzazione del <xref:System.Windows.PropertyMetadata> oggetto stesso. Tuttavia, dopo che i metadati vengono utilizzati come parte di una chiamata a <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, o <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, il sistema di proprietà eseguirà il sealing dell'istanza di metadati e le proprietà sono ora considerate immutabili. Tentativo di impostare <xref:System.Windows.PropertyMetadata.DefaultValue%2A> una volta <xref:System.Windows.PropertyMetadata.IsSealed%2A> è `true` su questi metadati istanza genererà un'eccezione.  
  
 Anche se è il valore predefinito per il costruttore senza parametri, un `defaultValue` dei <xref:System.Windows.DependencyProperty.UnsetValue> non può essere impostata usando <xref:System.Windows.PropertyMetadata.DefaultValue%2A> o il costruttore. Tentativo di eseguire questa operazione genererà un'eccezione.  
  
<a name="xamlTextUsage_PropertyChangedCallback"></a>   
## <a name="xaml-text-usage"></a>Utilizzo di testo XAML  
 I membri di questo tipo non vengono utilizzati in genere [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Non possono essere impostati sul valore <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> successivamente alla creazione.</exception>
        <exception cref="T:System.InvalidOperationException">Impossibile impostare una proprietà dei metadati dopo averla applicata a un'operazione relativa alla proprietà di dipendenza.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="protected bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyMetadata.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSealed : bool" Usage="System.Windows.PropertyMetadata.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che determina se i metadati sono stati applicati a una proprietà in qualche modo e di conseguenza lo stato dell'istanza di metadati è diventato non modificabile.</summary>
        <value>
          <see langword="true" /> se l'istanza di metadati non è modificabile; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Varie proprietà del <xref:System.Windows.PropertyMetadata>, ad esempio <xref:System.Windows.PropertyMetadata.DefaultValue%2A>, sono definite nel modello a oggetti in lettura e scrittura. Si tratta in modo che tali proprietà possono essere modificate dopo l'inizializzazione del <xref:System.Windows.PropertyMetadata> oggetto stesso. Tuttavia, dopo aver applicato i metadati per una proprietà di dipendenza come parte di una chiamata a <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, o <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, il sistema di proprietà eseguirà il sealing dell'istanza di metadati e le proprietà sono ora considerate immutabili. Al momento di una di queste chiamate <xref:System.Windows.PropertyMetadata.OnApply%2A> viene chiamato, e il valore di questa proprietà è impostato su `true`.  
  
   
  
## Examples  
 Nell'esempio seguente viene controllato <xref:System.Windows.PropertyMetadata.IsSealed%2A> prima un'operazione di impostazione di una proprietà di metadati personalizzati.  
  
 [!code-csharp[PropertyMetadataAPIs#MergeImpl](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#mergeimpl)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.PropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="protected virtual void Merge (System.Windows.PropertyMetadata baseMetadata, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Merge(class System.Windows.PropertyMetadata baseMetadata, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Merge (baseMetadata As PropertyMetadata, dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Merge(System::Windows::PropertyMetadata ^ baseMetadata, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member Merge : System.Windows.PropertyMetadata * System.Windows.DependencyProperty -&gt; unit&#xA;override this.Merge : System.Windows.PropertyMetadata * System.Windows.DependencyProperty -&gt; unit" Usage="propertyMetadata.Merge (baseMetadata, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseMetadata" Type="System.Windows.PropertyMetadata" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="baseMetadata">Metadati di base da unire con i valori dell'istanza.</param>
        <param name="dp">Proprietà di dipendenza alla quale vengono applicati i metadati.</param>
        <summary>Unisce i metadati con i metadati di base.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene usato internamente quando sono in corso l'override dei metadati (<xref:System.Windows.DependencyProperty.OverrideMetadata%2A> (metodo)).  
  
   
  
## Examples  
 L'esempio seguente implementa un'operazione di merge per un tipo di metadati personalizzato che aggiunge una proprietà aggiuntiva per i metadati della proprietà.  
  
 [!code-csharp[PropertyMetadataAPIs#MergeImpl](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#mergeimpl)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Le implementazioni che derivano dalla classe <see cref="T:System.Windows.PropertyMetadata" /> deve eseguire l'override di questo metodo per conto di qualsiasi proprietà di metadati che sono aggiunti nelle rispettive implementazioni. Ad esempio, l'implementazione potrebbe avere aggiunto un nuovo valore di enumerazione flag per flag e il <see cref="M:System.Windows.PropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" /> implementazione dovrebbe quindi essere in grado di combinare correttamente i flag.  Chiamare sempre l'implementazione di base prima del codice di implementazione, poiché l'implementazione di base si occupa di unione di tutte le proprietà già definite nel <see cref="T:System.Windows.PropertyMetadata" /> tipo.  Il comportamento esatto del merge è responsabilità dell'utente. È possibile scegliere di combinare i valori, verranno ripristinate al valore di base se i metadati derivati sono stati lasciati l'impostazione predefinita e molti altri comportamenti in base ai tipi di proprietà che è stato aggiunto per la classe di metadati specifico e i relativi significati.</para>
        </block>
        <altmember cref="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="OnApply">
      <MemberSignature Language="C#" Value="protected virtual void OnApply (System.Windows.DependencyProperty dp, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnApply(class System.Windows.DependencyProperty dp, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnApply (dp As DependencyProperty, targetType As Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnApply(System::Windows::DependencyProperty ^ dp, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="abstract member OnApply : System.Windows.DependencyProperty * Type -&gt; unit&#xA;override this.OnApply : System.Windows.DependencyProperty * Type -&gt; unit" Usage="propertyMetadata.OnApply (dp, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="dp">Proprietà di dipendenza alla quale sono stati applicati i metadati.</param>
        <param name="targetType">Il tipo associato a questi metadati se questi sono metadati di tipo specifico. Se si tratta di metadati predefiniti, il valore è un riferimento null.</param>
        <summary>Chiamata effettuata quando questi metadati sono stati applicati ad una proprietà che indica che i metadati sono sealed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le sottoclassi devono assicurare che eventuali modificabilità della struttura dei dati di un <xref:System.Windows.PropertyMetadata> sottoclasse deve essere contrassegnata come non modificabile di una volta <xref:System.Windows.PropertyMetadata.OnApply%2A> viene chiamato. Questo evento viene chiamato dopo che i metadati vengano applicato a un'operazione di sistema di proprietà (registrazione, aggiungere un proprietario, eseguire l'override dei metadati).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChangedCallback">
      <MemberSignature Language="C#" Value="public System.Windows.PropertyChangedCallback PropertyChangedCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PropertyChangedCallback PropertyChangedCallback" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyMetadata.PropertyChangedCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyChangedCallback As PropertyChangedCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PropertyChangedCallback ^ PropertyChangedCallback { System::Windows::PropertyChangedCallback ^ get(); void set(System::Windows::PropertyChangedCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PropertyChangedCallback : System.Windows.PropertyChangedCallback with get, set" Usage="System.Windows.PropertyMetadata.PropertyChangedCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyChangedCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un riferimento a un'implementazione di <see cref="T:System.Windows.PropertyChangedCallback" /> specificata nei metadati.</summary>
        <value>Riferimento all'implementazione di <see cref="T:System.Windows.PropertyChangedCallback" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I callback nei metadati della proprietà non sono in genere membri pubblici nel tipo di definizione, pertanto il valore di questa proprietà non è importante per la maggior parte degli scenari che utilizzano solo i metadati della proprietà di dipendenza un'esistente. Un motivo per cui questa proprietà viene visualizzata sia in modo che le classi di metadati possono eseguire la logica di unione desiderato se viene sottoposto a override o l'aggiunta dei metadati sia i metadati di base specificano un <xref:System.Windows.PropertyChangedCallback>. La logica di unione predefinita consiste nel mantenere tutti <xref:System.Windows.PropertyMetadata.PropertyChangedCallback%2A> implementazioni in una tabella e ogni chiamata di esse, con i callback stabiliti dalla classe più in basso nella gerarchia che esegue prima.  
  
 <xref:System.Windows.PropertyMetadata.PropertyChangedCallback%2A> è definito nel modello a oggetti in lettura e scrittura. In tal caso <xref:System.Windows.PropertyMetadata.PropertyChangedCallback%2A> può essere modificato dopo l'inizializzazione del <xref:System.Windows.PropertyMetadata> oggetto stesso. Tuttavia, dopo che i metadati vengono utilizzati come parte di una chiamata a <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, o <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, il sistema di proprietà eseguirà il sealing dell'istanza di metadati e le proprietà sono ora considerate immutabili. Tentativo di impostare <xref:System.Windows.PropertyMetadata.PropertyChangedCallback%2A> una volta <xref:System.Windows.PropertyMetadata.IsSealed%2A> è `true` su questi metadati istanza genererà un'eccezione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Impossibile impostare una proprietà dei metadati dopo averla applicata a un'operazione relativa alla proprietà di dipendenza.</exception>
      </Docs>
    </Member>
  </Members>
</Type>