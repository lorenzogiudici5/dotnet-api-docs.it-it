<Type Name="TextDecorationCollection" FullName="System.Windows.TextDecorationCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="90145b239bdfd3dc1e967e0d92b7974502dbf735" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TextDecorationCollection : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection&lt;System.Windows.TextDecoration&gt;, System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt;, System.Collections.Generic.IList&lt;System.Windows.TextDecoration&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextDecorationCollection extends System.Windows.Media.Animation.Animatable implements class System.Collections.Generic.ICollection`1&lt;class System.Windows.TextDecoration&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.TextDecoration&gt;, class System.Collections.Generic.IList`1&lt;class System.Windows.TextDecoration&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TextDecorationCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextDecorationCollection&#xA;Inherits Animatable&#xA;Implements ICollection(Of TextDecoration), IEnumerable(Of TextDecoration), IList, IList(Of TextDecoration)" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextDecorationCollection sealed : System::Windows::Media::Animation::Animatable, System::Collections::Generic::ICollection&lt;System::Windows::TextDecoration ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Windows::TextDecoration ^&gt;, System::Collections::Generic::IList&lt;System::Windows::TextDecoration ^&gt;, System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Windows.TextDecoration&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;System.Windows.TextDecoration&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.TextDecorationCollectionConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3921a-101">Rappresenta una raccolta di istanze di <see cref="T:System.Windows.TextDecoration" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3921a-101">Represents a collection of <see cref="T:System.Windows.TextDecoration" /> instances.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3921a-102">Inizializza una nuova istanza della classe <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-102">Initializes a new instance of the <see cref="T:System.Windows.TextDecorationCollection" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDecorationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextDecorationCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3921a-103">Inizializza una nuova istanza vuota della classe <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-103">Initializes a new <see cref="T:System.Windows.TextDecorationCollection" /> instance that is empty.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDecorationCollection (System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.TextDecoration&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of TextDecoration))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextDecorationCollection(System::Collections::Generic::IEnumerable&lt;System::Windows::TextDecoration ^&gt; ^ collection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="3921a-104">Enumeratore di tipo <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-104">An enumerator of type <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-105">Inizializza una nuova istanza della classe <see cref="T:System.Windows.TextDecorationCollection" /> specificando un enumeratore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-105">Initializes a new instance of the <see cref="T:System.Windows.TextDecorationCollection" /> class by specifying an enumerator.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDecorationCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextDecorationCollection(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="3921a-106">Numero di elementi che il nuovo insieme è inizialmente in grado di archiviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-106">The number of elements that the new collection is initially capable of storing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-107">Inizializza una nuova istanza vuota della classe <see cref="T:System.Windows.TextDecorationCollection" /> che ha la capacità iniziale specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-107">Initializes a new <see cref="T:System.Windows.TextDecorationCollection" /> instance that is empty and has the specified initial capacity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3921a-108">Inserisce l'oggetto <see cref="T:System.Windows.TextDecoration" /> specificato nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-108">Inserts the specified <see cref="T:System.Windows.TextDecoration" /> object into the collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt; textDecorations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.TextDecoration&gt; textDecorations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.Add(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (textDecorations As IEnumerable(Of TextDecoration))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Collections::Generic::IEnumerable&lt;System::Windows::TextDecoration ^&gt; ^ textDecorations);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textDecorations" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt;" />
      </Parameters>
      <Docs>
        <param name="textDecorations">
          <span data-ttu-id="3921a-109">Oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> generico di tipo <see cref="T:System.Windows.TextDecoration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-109">A generic <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.Windows.TextDecoration" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-110">Aggiunge un oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> generico all'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-110">Adds a generic <see cref="T:System.Collections.Generic.IEnumerable`1" /> to the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.TextDecoration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Windows.TextDecoration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.Add(System.Windows.TextDecoration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (value As TextDecoration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Windows::TextDecoration ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.TextDecoration" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3921a-111">Oggetto <see cref="T:System.Windows.TextDecoration" /> da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-111">The <see cref="T:System.Windows.TextDecoration" /> object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-112">Inserisce l'oggetto <see cref="T:System.Windows.TextDecoration" /> specificato nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-112">Inserts the specified <see cref="T:System.Windows.TextDecoration" /> object into the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3921a-113">Rimuove tutti gli oggetti <see cref="T:System.Windows.TextDecoration" /> da <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-113">Removes all <see cref="T:System.Windows.TextDecoration" /> objects from the <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationCollection Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.TextDecorationCollection Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::TextDecorationCollection ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3921a-114">Crea un clone modificabile di questo oggetto <see cref="T:System.Windows.TextDecorationCollection" />, eseguendo copie complete dei valori dell'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-114">Creates a modifiable clone of this <see cref="T:System.Windows.TextDecorationCollection" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="3921a-115">Durante la copia delle proprietà di dipendenza, questo metodo copia i riferimenti alle risorse e i data binding (che potrebbero non essere più risolti), ma non le animazioni né i relativi valori correnti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-115">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3921a-116">Clone modificabile dell'oggetto corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-116">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="3921a-117">La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto clonato sarà <see langword="false" />, anche se la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true." />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-117">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3921a-118">Questo metodo viene utilizzato per produrre copie modificabili di bloccata <xref:System.Windows.Freezable> oggetti (o qualsiasi <xref:System.Windows.Freezable> oggetto).</span><span class="sxs-lookup"><span data-stu-id="3921a-118">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="3921a-119">Per comodità, questo metodo nasconde la versione ereditata con un'implementazione fortemente tipizzata.</span><span class="sxs-lookup"><span data-stu-id="3921a-119">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="3921a-120">Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3921a-120">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationCollection CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.TextDecorationCollection CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::TextDecorationCollection ^ CloneCurrentValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3921a-121">Crea un clone modificabile dell'oggetto <see cref="T:System.Windows.TextDecorationCollection" />, eseguendo copie complete dei valori correnti di tale oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-121">Creates a modifiable clone of this <see cref="T:System.Windows.TextDecorationCollection" /> object, making deep copies of this object's current values.</span>
          </span>
          <span data-ttu-id="3921a-122">I riferimenti alle risorse, i data binding e le animazioni non vengono copiati, ma vengono copiati i relativi valori correnti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-122">Resource references, data bindings, and animations are not copied, but their current values are.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3921a-123">Clone modificabile dell'oggetto corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-123">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="3921a-124">La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto clonato sarà <see langword="false" />, anche se la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-124">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3921a-125">Questo metodo viene utilizzato per produrre copie modificabili di bloccata <xref:System.Windows.Freezable> oggetti (o qualsiasi <xref:System.Windows.Freezable> oggetto).</span><span class="sxs-lookup"><span data-stu-id="3921a-125">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="3921a-126">Per comodità, questo metodo nasconde la versione ereditata con un'implementazione fortemente tipizzata.</span><span class="sxs-lookup"><span data-stu-id="3921a-126">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="3921a-127">Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3921a-127">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.TextDecoration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Windows.TextDecoration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.Contains(System.Windows.TextDecoration)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As TextDecoration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Windows::TextDecoration ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.TextDecoration" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3921a-128">Oggetto <see cref="T:System.Windows.TextDecoration" /> da individuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-128">The <see cref="T:System.Windows.TextDecoration" /> object to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-129">Determina se l'insieme <see cref="T:System.Windows.TextDecorationCollection" /> contiene l'oggetto <see cref="T:System.Windows.TextDecoration" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-129">Determines if the <see cref="T:System.Windows.TextDecorationCollection" /> contains the specified <see cref="T:System.Windows.TextDecoration" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3921a-130">È <see langword="true" /> se <paramref name="value" /> si trova nella raccolta. In caso contrario è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-130">
              <see langword="true" /> if <paramref name="value" /> is in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.TextDecoration[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Windows.TextDecoration[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.CopyTo(System.Windows.TextDecoration[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As TextDecoration(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Windows::TextDecoration ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.TextDecoration[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="3921a-131">Matrice di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-131">The destination array.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="3921a-132">Posizione di indice in base zero in cui inizia la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-132">The zero-based index position where copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-133">Copia gli oggetti <see cref="T:System.Windows.TextDecoration" /> contenuti nell'insieme in una matrice di <see cref="T:System.Windows.TextDecorationCollection" />, iniziando da una posizione di indice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-133">Copies the <see cref="T:System.Windows.TextDecoration" /> objects in the collection into an array of <see cref="T:System.Windows.TextDecorationCollection" />, starting at the specified index position.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3921a-134">Ottiene il numero di oggetti <see cref="T:System.Windows.TextDecoration" /> nella classe <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-134">Gets the number of <see cref="T:System.Windows.TextDecoration" /> objects in the <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3921a-135">Numero di oggetti della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-135">The number of objects in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.TextDecorationCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As TextDecorationCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::TextDecorationCollection::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3921a-136">Restituisce un enumeratore in grado di eseguire l'iterazione nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-136">Returns an enumerator that can iterate through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3921a-137">Enumeratore in grado di scorrere l'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-137">An enumerator that can iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.TextDecoration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Windows.TextDecoration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.IndexOf(System.Windows.TextDecoration)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As TextDecoration) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Windows::TextDecoration ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.TextDecoration" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3921a-138">Oggetto <see cref="T:System.Windows.TextDecoration" /> da individuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-138">The <see cref="T:System.Windows.TextDecoration" /> object to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-139">Restituisce l'indice dell'oggetto <see cref="T:System.Windows.TextDecoration" /> specificato all'interno della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-139">Returns the index of the specified <see cref="T:System.Windows.TextDecoration" /> object within the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3921a-140">Indice in base zero di <paramref name="value" />, se trovato; in caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-140">The zero-based index of <paramref name="value" />, if found; otherwise -1;</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.TextDecoration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Windows.TextDecoration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.Insert(System.Int32,System.Windows.TextDecoration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As TextDecoration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Windows::TextDecoration ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Windows.TextDecoration" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="3921a-141">Posizione di indice in base zero in cui inserire l'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-141">The zero-based index position to insert the object.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="3921a-142">Oggetto <see cref="T:System.Windows.TextDecoration" /> da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-142">The <see cref="T:System.Windows.TextDecoration" /> object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-143">Inserisce l'oggetto <see cref="T:System.Windows.TextDecoration" /> indicato nella posizione di indice specificata all'interno dell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-143">Inserts the specified <see cref="T:System.Windows.TextDecoration" /> object at the specified index position in the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecoration this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TextDecoration Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As TextDecoration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecoration ^ default[int] { System::Windows::TextDecoration ^ get(int index); void set(int index, System::Windows::TextDecoration ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecoration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="3921a-144">Posizione di indice in base zero dell'oggetto da ottenere o impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-144">The zero-based index position of the object to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-145">Ottiene o imposta l'oggetto <see cref="T:System.Windows.TextDecoration" /> in corrispondenza della posizione di indice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-145">Gets or sets the <see cref="T:System.Windows.TextDecoration" /> object at the specified index position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3921a-146">Oggetto <see cref="T:System.Windows.TextDecoration" /> in corrispondenza della posizione <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-146">The <see cref="T:System.Windows.TextDecoration" /> object at the <paramref name="index" /> position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Windows.TextDecoration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Windows.TextDecoration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.Remove(System.Windows.TextDecoration)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (value As TextDecoration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Windows::TextDecoration ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.TextDecoration" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3921a-147">Oggetto <see cref="T:System.Windows.TextDecoration" /> da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-147">The <see cref="T:System.Windows.TextDecoration" /> object to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-148">Rimuove l'oggetto <see cref="T:System.Windows.TextDecoration" /> specificato dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-148">Removes the specified <see cref="T:System.Windows.TextDecoration" /> object from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3921a-149">
            <see langword="true" /> se <paramref name="value" /> è stato eliminato correttamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-149">
              <see langword="true" /> if <paramref name="value" /> was successfully deleted; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="3921a-150">Posizione di indice in base zero da cui eliminare l'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-150">The zero-based index position from where to delete the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-151">Rimuove dall'insieme l'oggetto <see cref="T:System.Windows.TextDecoration" /> indicato in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-151">Removes the specified <see cref="T:System.Windows.TextDecoration" /> object from the collection at the specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Windows.TextDecoration&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Windows.TextDecoration&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Windows.TextDecoration&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.System#Collections#Generic#ICollection&lt;System#Windows#TextDecoration&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of TextDecoration).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;System.Windows.TextDecoration&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3921a-152">Ottiene un valore che indica se la raccolta è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-152">Gets a value indicating whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3921a-153">
            <see langword="true" /> se <see cref="T:System.Windows.TextDecorationCollection" /> è di sola lettura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-153">
              <see langword="true" /> if the <see cref="T:System.Windows.TextDecorationCollection" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3921a-154">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="3921a-154">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3921a-155">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.TextDecorationCollection> a un'interfaccia <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="3921a-155">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Windows.TextDecoration&gt; IEnumerable&lt;TextDecoration&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.TextDecoration&gt; System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.System#Collections#Generic#IEnumerable&lt;System#Windows#TextDecoration&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of TextDecoration) Implements IEnumerable(Of TextDecoration).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Windows::TextDecoration ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Windows::TextDecoration ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.TextDecoration&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3921a-156">Restituisce un enumeratore che consente di scorrere la raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-156">Returns an enumerator that iterates through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3921a-157">Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-157">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3921a-158">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="3921a-158">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3921a-159">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.TextDecorationCollection> a un'interfaccia <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="3921a-159">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TextDecorationCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="3921a-160">
            <see cref="T:System.Array" /> in base zero che riceve gli elementi copiati dalla classe <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-160">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="3921a-161">Prima posizione dell'oggetto <see cref="T:System.Array" /> specificato che riceverà il contenuto copiato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-161">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-162">Per una descrizione di questo membro, vedere <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-162">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3921a-163">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="3921a-163">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3921a-164">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.TextDecorationCollection> a un'interfaccia <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="3921a-164">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TextDecorationCollection.CopyTo(System.Windows.TextDecoration[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3921a-165">Ottiene un valore che indica se l'accesso alla raccolta è sincronizzato (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-165">Gets a value that indicates whether access to the collection is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3921a-166">
            <see langword="true" /> se l'accesso a <see cref="T:System.Windows.TextDecorationCollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-166">
              <see langword="true" /> if access to the <see cref="T:System.Windows.TextDecorationCollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3921a-167">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="3921a-167">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3921a-168">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.TextDecorationCollection> a un'interfaccia <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="3921a-168">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3921a-169">Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-169">Gets an object that can be used to synchronize access to the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3921a-170">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-170">An object that can be used to synchronize access to the <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3921a-171">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="3921a-171">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3921a-172">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.TextDecorationCollection> a un'interfaccia <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="3921a-172">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3921a-173">Restituisce un enumeratore che consente di scorrere la raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-173">Returns an enumerator that iterates through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3921a-174">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-174">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3921a-175">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="3921a-175">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3921a-176">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.TextDecorationCollection> a un'interfaccia <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="3921a-176">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TextDecorationCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3921a-177">Oggetto <see cref="T:System.Object" /> da aggiungere a <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-177">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-178">Aggiunge un elemento alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-178">Adds an item to the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3921a-179">Posizione in cui è stato inserito il nuovo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-179">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3921a-180">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="3921a-180">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3921a-181">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.TextDecorationCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="3921a-181">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TextDecorationCollection.Add(System.Windows.TextDecoration)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3921a-182">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-182">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.TextEffectCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-183">Determina se la raccolta contiene un valore specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-183">Determines whether the collection contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3921a-184">
            <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> si trova in <see cref="T:System.Windows.TextDecorationCollection" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-184">
              <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.TextDecorationCollection" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3921a-185">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="3921a-185">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3921a-186">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.TextDecorationCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="3921a-186">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TextDecorationCollection.Contains(System.Windows.TextDecoration)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3921a-187">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-187">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-188">Determina l'indice di un elemento specifico dell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-188">Determines the index of a specific item in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3921a-189">Indice di <paramref name="value" />, se presente nell'elenco; in caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-189">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3921a-190">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="3921a-190">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3921a-191">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.TextDecorationCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="3921a-191">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TextDecorationCollection.IndexOf(System.Windows.TextDecoration)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="3921a-192">Indice in base zero in corrispondenza del quale inserire l'oggetto <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-192">The zero-based index at which to insert the <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="3921a-193">
            <see cref="T:System.Object" /> da inserire in <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-193">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-194">Inserisce un elemento nell'insieme in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-194">Inserts an item to the collection at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3921a-195">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="3921a-195">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3921a-196">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.TextDecorationCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="3921a-196">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TextDecorationCollection.Insert(System.Int32,System.Windows.TextDecoration)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3921a-197">Ottiene un valore che indica se le dimensioni della raccolta sono fisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-197">Gets a value that indicates whether the collection has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3921a-198">
            <see langword="true" /> se <see cref="T:System.Windows.TextDecorationCollection" /> è di dimensioni fisse; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-198">
              <see langword="true" /> if the <see cref="T:System.Windows.TextDecorationCollection" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3921a-199">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="3921a-199">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3921a-200">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.TextDecorationCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="3921a-200">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3921a-201">Ottiene un valore che indica se la raccolta è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-201">Gets a value that indicates whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3921a-202">
            <see langword="true" /> se <see cref="T:System.Windows.TextDecorationCollection" /> è di sola lettura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-202">
              <see langword="true" /> if the <see cref="T:System.Windows.TextDecorationCollection" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3921a-203">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="3921a-203">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3921a-204">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.TextDecorationCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="3921a-204">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="3921a-205">Indice in base zero dell'elemento da ottenere o impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-205">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-206">Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-206">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3921a-207">Elemento in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-207">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3921a-208">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="3921a-208">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3921a-209">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.TextDecorationCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="3921a-209">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.TextDecorationCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3921a-210">Oggetto <see cref="T:System.Object" /> da rimuovere da <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-210">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.TextDecorationCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-211">Rimuove la prima occorrenza di un oggetto specifico dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-211">Removes the first occurrence of a specific object from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3921a-212">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="3921a-212">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3921a-213">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.TextDecorationCollection> a un'interfaccia <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="3921a-213">It can be used only when the <xref:System.Windows.TextDecorationCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TextDecorationCollection.Remove(System.Windows.TextDecoration)" />
      </Docs>
    </Member>
    <Member MemberName="TryRemove">
      <MemberSignature Language="C#" Value="public bool TryRemove (System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt; textDecorations, out System.Windows.TextDecorationCollection result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryRemove(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.TextDecoration&gt; textDecorations, [out] class System.Windows.TextDecorationCollection&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.TryRemove(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration},System.Windows.TextDecorationCollection@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryRemove (textDecorations As IEnumerable(Of TextDecoration), ByRef result As TextDecorationCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryRemove(System::Collections::Generic::IEnumerable&lt;System::Windows::TextDecoration ^&gt; ^ textDecorations, [Runtime::InteropServices::Out] System::Windows::TextDecorationCollection ^ % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textDecorations" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.TextDecoration&gt;" />
        <Parameter Name="result" Type="System.Windows.TextDecorationCollection&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="textDecorations">
          <span data-ttu-id="3921a-214">Raccolta da rimuovere</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-214">The collection to be removed</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="3921a-215">Parametro Out contenente il risultato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-215">Out parameter containing the result.</span>
          </span>
          <span data-ttu-id="3921a-216">Se non è stato rimosso alcun elemento dalla raccolta corrente, <see langword="result" /> è una nuova raccolta identica a quella originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-216">If no element was removed from the current collection, then <see langword="result" /> is a new collection          identical to the original one.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3921a-217">Rimuove una raccolta di <see cref="T:System.Windows.TextDecorations" /> dalla raccolta corrente e restituisce la raccolta risultante (nuova).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-217">Removes a collection of <see cref="T:System.Windows.TextDecorations" /> from the current collection and returns the resultant (new) collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3921a-218">
            <see langword="True" /> se almeno un elemento è stato rimosso dalla raccolta corrente, in caso contrario <see langword="False" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3921a-218">
              <see langword="True" /> if at least one item was removed from the current collection, <see langword="False" /> otherwise</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3921a-219">La raccolta corrente rimane invariata.</span><span class="sxs-lookup"><span data-stu-id="3921a-219">The current collection remains unchanged.</span></span> <span data-ttu-id="3921a-220">Se la raccolta da rimuovere non è un subset della raccolta corrente, viene rimosso alcun elemento.</span><span class="sxs-lookup"><span data-stu-id="3921a-220">If the collection to be removed is not a subset of the current collection, then no element is removed.</span></span> <span data-ttu-id="3921a-221">Se la raccolta di origine dispone di più istanze di un elemento, vengono rimosse tutte le istanze dell'elemento.</span><span class="sxs-lookup"><span data-stu-id="3921a-221">If          the source collection has multiple instances of an item, then all instances of the item are removed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>