<Type Name="Freezable" FullName="System.Windows.Freezable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12a1be02c542dfe0d4b2b31c8c4e0fbee60ca7d5" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37549381" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Freezable : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Freezable extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Freezable" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Freezable&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class Freezable abstract : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type Freezable = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fbb2d-101">Defines an object that has a modifiable state and a read-only (frozen) state.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fbb2d-101">Defines an object that has a modifiable state and a read-only (frozen) state.</span>
      </span>
      <span data-ttu-id="fbb2d-102">Classes that derive from <see cref="T:System.Windows.Freezable" /> provide detailed change notification, can be made immutable, and can clone themselves.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fbb2d-102">Classes that derive from <see cref="T:System.Windows.Freezable" /> provide detailed change notification, can be made immutable, and can clone themselves.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-103">Il <xref:System.Windows.Freezable> classe fornisce funzionalità speciali che consentono di migliorare le prestazioni dell'applicazione quando si usano gli oggetti che sono costosi da modificare o copiare.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-103">The <xref:System.Windows.Freezable> class provides special features that can help improve application performance when using objects that are expensive to modify or copy.</span></span> <span data-ttu-id="fbb2d-104">Esempi di <xref:System.Windows.Freezable> oggetti includono quanto segue:</span><span class="sxs-lookup"><span data-stu-id="fbb2d-104">Examples of <xref:System.Windows.Freezable> objects include the following:</span></span>  
  
-   <xref:System.Windows.Media.Brush>  
  
-   <xref:System.Windows.Media.Pen>  
  
-   <xref:System.Windows.Media.Geometry>  
  
-   <xref:System.Windows.Media.Transform>  
  
-   <xref:System.Windows.Media.Animation.AnimationTimeline>  
  
## <a name="deriving-from-freezable"></a><span data-ttu-id="fbb2d-105">Che derivano da Freezable</span><span class="sxs-lookup"><span data-stu-id="fbb2d-105">Deriving From Freezable</span></span>  
 <span data-ttu-id="fbb2d-106">Una classe che deriva da <xref:System.Windows.Freezable> Ottiene le funzionalità seguenti:</span><span class="sxs-lookup"><span data-stu-id="fbb2d-106">A class that derives from <xref:System.Windows.Freezable> gains the following features:</span></span>  
  
-   <span data-ttu-id="fbb2d-107">Stati speciali: (una sola lettura bloccato) e uno stato accessibile in scrittura.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-107">Special states: a read-only (frozen) state and a writable state.</span></span>  
  
-   <span data-ttu-id="fbb2d-108">Sicurezza dei thread: un oggetto bloccato <xref:System.Windows.Freezable> oggetto può essere condivisi tra thread.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-108">Thread safety: a frozen <xref:System.Windows.Freezable> object can be shared across threads.</span></span>  
  
-   <span data-ttu-id="fbb2d-109">Notifica dettagliata delle modifiche: a differenza di altri <xref:System.Windows.DependencyObject> oggetti, un <xref:System.Windows.Freezable> oggetto fornisce notifiche di modifica quando cambiano i valori delle sottoproprietà.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-109">Detailed change notification: Unlike other <xref:System.Windows.DependencyObject> objects, a <xref:System.Windows.Freezable> object provides change notifications when sub-property values change.</span></span>  
  
-   <span data-ttu-id="fbb2d-110">La clonazione semplice: la classe Freezable ha già implementato diversi metodi che producono cloni.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-110">Easy cloning: the Freezable class has already implemented several methods that produce deep clones.</span></span>  
  
 <span data-ttu-id="fbb2d-111">Per informazioni sull'uso e crearne una propria <xref:System.Windows.Freezable> oggetti, vedere [Cenni preliminari sugli oggetti Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="fbb2d-111">For information on using and creating your own <xref:System.Windows.Freezable> objects, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="fbb2d-112">Qualsiasi membro pubblico <see langword="static" /> membri di questo tipo sono thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fbb2d-112">Any public <see langword="static" /> members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="fbb2d-113">I membri di istanza non sono garantiti come thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fbb2d-113">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="fbb2d-114">Quando la <see cref="P:System.Windows.Freezable.IsFrozen" /> proprietà viene <see langword="false" />, un <see cref="T:System.Windows.Freezable" /> oggetto sono accessibili solo dal thread in cui è stato creato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fbb2d-114">When the <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" />, a <see cref="T:System.Windows.Freezable" /> object can be accessed only from the thread on which it was created.</span>
      </span>
      <span data-ttu-id="fbb2d-115">Il tentativo di accedervi da un altro thread genererà un <see cref="T:System.InvalidOperationException" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fbb2d-115">Attempting to access it from another thread throws an <see cref="T:System.InvalidOperationException" />.</span>
      </span>
      <span data-ttu-id="fbb2d-116">Il <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> e <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> metodi forniscono supporto per il marshalling al thread corretto.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fbb2d-116">The <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> and <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> methods provide support for marshalling to the correct thread.</span>
      </span>
      <span data-ttu-id="fbb2d-117">Quando le <see cref="P:System.Windows.Freezable.IsFrozen" /> proprietà viene <see langword="true" />, <see cref="T:System.Windows.Freezable" /> sono oggetti a thread libero.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fbb2d-117">When their <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, <see cref="T:System.Windows.Freezable" /> objects are free-threaded.</span>
      </span>
      <span data-ttu-id="fbb2d-118">Per altre informazioni, vedere [Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md) oggetti Freezable.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fbb2d-118">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Freezable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Freezable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbb2d-119">Initializes a new instance of a <see cref="T:System.Windows.Freezable" /> derived class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-119">Initializes a new instance of a <see cref="T:System.Windows.Freezable" /> derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-120">Questo è il costruttore di accessibilità protected di una classe astratta.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-120">This is the protected-accessibility constructor of an abstract class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFreeze">
      <MemberSignature Language="C#" Value="public bool CanFreeze { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFreeze" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Freezable.CanFreeze" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanFreeze As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanFreeze { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanFreeze : bool" Usage="System.Windows.Freezable.CanFreeze" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbb2d-121">Gets a value that indicates whether the object can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-121">Gets a value that indicates whether the object can be made unmodifiable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fbb2d-122">
            <see langword="true" /> se l'oggetto corrente può essere impostato come non modificabile o è già non modificabile. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-122">
              <see langword="true" /> if the current object can be made unmodifiable or is already unmodifiable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbb2d-123">
            <para>Questa implementazione del metodo Usa il <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> metodo con <paramref name="isChecking" /> impostata su <see langword="true" /> per determinare se un <see cref="T:System.Windows.Freezable" /> può essere reso immodificabile. Per modificare il comportamento di questa proprietà in una classe derivata, esegue l'override di <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> (metodo).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-123">
              <para>This method implementation uses the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method with <paramref name="isChecking" /> set to <see langword="true" /> to determine whether a <see cref="T:System.Windows.Freezable" /> can be made unmodifiable. To modify the way this property behaves in a derived class, override the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Changed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Freezable.Changed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Changed;" />
      <MemberSignature Language="F#" Value="member this.Changed : EventHandler " Usage="member this.Changed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbb2d-124">Occurs when the <see cref="T:System.Windows.Freezable" /> or an object it contains is modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-124">Occurs when the <see cref="T:System.Windows.Freezable" /> or an object it contains is modified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-125">Se si tenta di aggiungere o rimuovere i gestori eventi quando l'oggetto corrente non è modificabile (quando il <xref:System.Windows.Freezable.IsFrozen%2A> è di proprietà `true`), viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-125">If you attempt to add or remove event handlers when the current object is not modifiable (when the <xref:System.Windows.Freezable.IsFrozen%2A> property is `true`), an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Windows.Freezable" Usage="freezable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbb2d-126">Creates a modifiable clone of the <see cref="T:System.Windows.Freezable" />, making deep copies of the object's values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-126">Creates a modifiable clone of the <see cref="T:System.Windows.Freezable" />, making deep copies of the object's values.</span>
          </span>
          <span data-ttu-id="fbb2d-127">When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-127">When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbb2d-128">A modifiable clone of the current object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-128">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="fbb2d-129">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-129">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-130">Il <xref:System.Windows.Freezable.Clone%2A> e <xref:System.Windows.Freezable.CloneCurrentValue%2A> producono modificabili cloni di bloccato <xref:System.Windows.Freezable> oggetti (clonare anche i metodi <xref:System.Windows.Freezable> gli oggetti che non sono bloccati).</span><span class="sxs-lookup"><span data-stu-id="fbb2d-130">The <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods produce modifiable clones of frozen <xref:System.Windows.Freezable> objects (the methods also clone <xref:System.Windows.Freezable> objects that are not frozen).</span></span> <span data-ttu-id="fbb2d-131">Il clone in modo efficace è una copia completa dell'oggetto corrente.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-131">The clone is effectively a deep copy of the current object.</span></span>  
  
 <span data-ttu-id="fbb2d-132">Nella tabella seguente riepiloga le differenze tra il <xref:System.Windows.Freezable.Clone%2A> e <xref:System.Windows.Freezable.CloneCurrentValue%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-132">The following table summarizes the differences between the <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods.</span></span>  
  
|<span data-ttu-id="fbb2d-133">Operazione</span><span class="sxs-lookup"><span data-stu-id="fbb2d-133">Action</span></span>|<span data-ttu-id="fbb2d-134">Comportamento del metodo Clone</span><span class="sxs-lookup"><span data-stu-id="fbb2d-134">Clone method behavior</span></span>|<span data-ttu-id="fbb2d-135">Metodo CloneCurrentValue</span><span class="sxs-lookup"><span data-stu-id="fbb2d-135">CloneCurrentValue method behavior</span></span>|  
|------------|---------------------------|---------------------------------------|  
|<span data-ttu-id="fbb2d-136">Copia di una proprietà di dipendenza che dispone di un'espressione</span><span class="sxs-lookup"><span data-stu-id="fbb2d-136">Copying a dependency property that has an expression</span></span>|<span data-ttu-id="fbb2d-137">L'espressione viene copiato, ma non è più potrebbe essere risolto.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-137">The expression is copied, but might no longer resolve.</span></span> <span data-ttu-id="fbb2d-138">Per altre informazioni, vedere [Cenni preliminari sugli oggetti Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="fbb2d-138">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>|<span data-ttu-id="fbb2d-139">Il valore corrente dell'espressione viene copiato, ma non l'espressione stessa.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-139">The current value of the expression is copied, but not the expression itself.</span></span>|  
|<span data-ttu-id="fbb2d-140">Copia di una proprietà di dipendenza animata</span><span class="sxs-lookup"><span data-stu-id="fbb2d-140">Copying an animated dependency property</span></span>|<span data-ttu-id="fbb2d-141">Il valore della proprietà base (non animati) viene copiato.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-141">The property's base (non-animated) value is copied.</span></span> <span data-ttu-id="fbb2d-142">Le animazioni non vengono copiate.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-142">Animations are not copied.</span></span>|<span data-ttu-id="fbb2d-143">Il valore della proprietà corrente animata viene copiato.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-143">The property's current animated value is copied.</span></span> <span data-ttu-id="fbb2d-144">Le animazioni non vengono copiate.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-144">Animations are not copied.</span></span>|  
  
 <span data-ttu-id="fbb2d-145">Si noti che non vengono copiate le proprietà non impostate.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-145">Note that unset properties are not copied.</span></span> <span data-ttu-id="fbb2d-146">Se una proprietà non impostata ha un valore predefinito che è un oggetto bloccato <xref:System.Windows.Freezable>, che rimane bloccato nel clone modificabile in caso contrario, un valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-146">If an unset property has a default value that is a frozen <xref:System.Windows.Freezable>, that property value remains frozen in the otherwise modifiable clone.</span></span>  
  
## <a name="move-a-freezable-between-threads"></a><span data-ttu-id="fbb2d-147">Spostare un oggetto Freezable tra thread</span><span class="sxs-lookup"><span data-stu-id="fbb2d-147">Move a Freezable Between Threads</span></span>  
 <span data-ttu-id="fbb2d-148">Questo metodo può essere utile per lo spostamento di un <xref:System.Windows.Freezable> tra thread.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-148">This method can be useful for moving a <xref:System.Windows.Freezable> between threads.</span></span> <span data-ttu-id="fbb2d-149">In primo luogo, verificare i <xref:System.Windows.Freezable> immodificabile chiamando relativo <xref:System.Windows.Freezable.Freeze%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="fbb2d-149">First, make the <xref:System.Windows.Freezable> unmodifiable by calling its <xref:System.Windows.Freezable.Freeze%2A> method.</span></span> <span data-ttu-id="fbb2d-150">È ora possibile accedere a un altro thread il <xref:System.Windows.Freezable> e apportare una variabile locale <xref:System.Windows.Freezable.Clone%2A> che possa accedere.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-150">Now another thread can access the <xref:System.Windows.Freezable> and make a local <xref:System.Windows.Freezable.Clone%2A> that it can access.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbb2d-151">
            <para>Questo metodo Usa <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> per produrre il clone. Per modificare il comportamento di questo metodo in una classe derivata, esegue l'override di <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> (metodo).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-151">
              <para>This method uses <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> to produce the clone. To modify the behavior of this method in a derived class, override the <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected virtual void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="freezable.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="fbb2d-152">The object to clone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-152">The object to clone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbb2d-153">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-153">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-154">Questo metodo viene chiamato dal <xref:System.Windows.Freezable.Clone%2A> metodo e non può essere chiamato direttamente dal codice, tranne quando si chiama l'implementazione di base durante l'override di questo metodo.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-154">This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="fbb2d-155">Per creare una copia modificabile dell'oggetto corrente, chiamare <xref:System.Windows.Freezable.Clone%2A> invece di chiamare direttamente questo metodo.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-155">To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbb2d-156">
            <para>Se si deriva da <see cref="T:System.Windows.Freezable" />, potrebbe essere necessario eseguire l'override di questo metodo. Motivi per eseguire l'override includono quanto segue:-la classe derivata dispone di dati che non vengono esposti tramite proprietà di dipendenza.  -La classe derivata deve eseguire operazioni di inizializzazione aggiuntive che non possono essere eseguita sostituendo semplicemente <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Ad esempio, si applica se la classe derivata implementa <see cref="T:System.ComponentModel.ISupportInitialize" />.  Le classi che archiviano tutti i dati nelle proprietà di dipendenza e che non è necessario effettuare operazioni di inizializzazione aggiuntiva non sono necessario eseguire l'override <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />.  È essenziale che tutte le implementazioni di chiamano l'implementazione di base di questo metodo. Le implementazioni devono solo eseguire operazioni che non viene eseguita dall'implementazione predefinita. L'implementazione predefinita esegue copie complete di tutte le proprietà scrivibili, impostate localmente, incluse le espressioni interne.  Se l'oggetto ha proprietà di dipendenza associata a dati, le espressioni vengono copiate ma non è più possano risolvere. Per altre informazioni sugli oggetti associati a dati duplicati, vedere [Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md) oggetti Freezable. Se l'oggetto ha proprietà di dipendenza animate, viene copiato il valore di base (non animati) delle proprietà. Le animazioni non vengono copiate.  Si noti che non vengono copiate le proprietà non impostate né sono proprietà di sola lettura. Se questa proprietà ha un valore predefinito che è un oggetto bloccato <see cref="T:System.Windows.Freezable" />, che rimane bloccato nel clone modificabile in caso contrario, un valore della proprietà.  L'elenco seguente riepiloga il comportamento previsto per questo metodo:-la copia del prodotto contiene copie di tutti <see cref="T:System.Windows.Freezable" /> oggetti secondari.  -Proprietà unset e di sola lettura non vengono copiate.  -Le espressioni vengono copiate.  -Nessuno di questi oggetti secondari vengono bloccate al momento della creazione.  -La copia di se stesso non sia bloccata.  -Le animazioni non vengono copiate.  -Solo i valori di base proprietà sono valori animati copiati, non attualmente.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-156">
              <para>If you derive from <see cref="T:System.Windows.Freezable" />, you may need to override this method. Reasons to override include the following:  -   Your derived class has data that is not exposed via dependency properties.  -   Your derived class must perform extra initialization work that cannot be accomplished by simply overriding <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. For example, this applies if your derived class implements <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes that store all their data in dependency properties and that do not need to perform extra initialization work do not need to override <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />.  It is essential that all implementations call the base implementation of this method. Implementations should only perform work that is not performed by the default implementation. The default implementation makes deep copies of all writable, locally set properties, including internal expressions.  If the object has data-bound dependency properties, the expressions are copied but might no longer resolve. For more information about cloning data-bound objects, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). If the object has animated dependency properties, the base (non-animated) value of those properties is copied. Animations are not copied.  Note that unset properties are not copied, nor are read-only properties. If such a property has a default value that is a frozen <see cref="T:System.Windows.Freezable" />, that property value remains frozen in the otherwise modifiable clone.  The following list summarizes the expected behavior for this method:  -   The copy produced contains copies of all <see cref="T:System.Windows.Freezable" /> sub-objects.  -   Unset and read-only properties are not copied.  -   Expressions are copied.  -   None of these sub-objects are frozen on creation.  -   The copy itself is not frozen.  -   Animations are not copied.  -   Only property base values are copied, not current animated values.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.Freezable" Usage="freezable.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbb2d-157">Creates a modifiable clone (deep copy) of the <see cref="T:System.Windows.Freezable" /> using its current values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-157">Creates a modifiable clone (deep copy) of the <see cref="T:System.Windows.Freezable" /> using its current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbb2d-158">A modifiable clone of the current object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-158">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="fbb2d-159">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-159">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-160">Il <xref:System.Windows.Freezable.Clone%2A> e <xref:System.Windows.Freezable.CloneCurrentValue%2A> producono modificabili cloni di bloccato <xref:System.Windows.Freezable> oggetti (clonare anche i metodi <xref:System.Windows.Freezable> gli oggetti che non sono bloccati).</span><span class="sxs-lookup"><span data-stu-id="fbb2d-160">The <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods produce modifiable clones of frozen <xref:System.Windows.Freezable> objects (the methods also clone <xref:System.Windows.Freezable> objects that are not frozen).</span></span> <span data-ttu-id="fbb2d-161">Il clone in modo efficace è una copia completa dell'oggetto corrente.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-161">The clone is effectively a deep copy of the current object.</span></span>  
  
 <span data-ttu-id="fbb2d-162">Nella tabella seguente riepiloga le differenze tra il <xref:System.Windows.Freezable.Clone%2A> e <xref:System.Windows.Freezable.CloneCurrentValue%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-162">The following table summarizes the differences between the <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods.</span></span>  
  
|<span data-ttu-id="fbb2d-163">Operazione</span><span class="sxs-lookup"><span data-stu-id="fbb2d-163">Action</span></span>|<span data-ttu-id="fbb2d-164">Comportamento del metodo Clone</span><span class="sxs-lookup"><span data-stu-id="fbb2d-164">Clone method behavior</span></span>|<span data-ttu-id="fbb2d-165">Metodo CloneCurrentValue</span><span class="sxs-lookup"><span data-stu-id="fbb2d-165">CloneCurrentValue method behavior</span></span>|  
|------------|---------------------------|---------------------------------------|  
|<span data-ttu-id="fbb2d-166">Copia di una proprietà di dipendenza che dispone di un'espressione</span><span class="sxs-lookup"><span data-stu-id="fbb2d-166">Copying a dependency property that has an expression</span></span>|<span data-ttu-id="fbb2d-167">L'espressione viene copiato, ma non è più potrebbe essere risolto.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-167">The expression is copied, but might no longer resolve.</span></span> <span data-ttu-id="fbb2d-168">Per altre informazioni, vedere [Cenni preliminari sugli oggetti Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="fbb2d-168">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>|<span data-ttu-id="fbb2d-169">Il valore corrente dell'espressione viene copiato, ma non l'espressione stessa.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-169">The current value of the expression is copied, but not the expression itself.</span></span>|  
|<span data-ttu-id="fbb2d-170">Copia di una proprietà di dipendenza animata</span><span class="sxs-lookup"><span data-stu-id="fbb2d-170">Copying an animated dependency property</span></span>|<span data-ttu-id="fbb2d-171">Il valore della proprietà base (non animati) viene copiato.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-171">The property's base (non-animated) value is copied.</span></span> <span data-ttu-id="fbb2d-172">Le animazioni non vengono copiate.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-172">Animations are not copied.</span></span>|<span data-ttu-id="fbb2d-173">Il valore della proprietà corrente animata viene copiato.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-173">The property's current animated value is copied.</span></span> <span data-ttu-id="fbb2d-174">Le animazioni non vengono copiate.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-174">Animations are not copied.</span></span>|  
  
 <span data-ttu-id="fbb2d-175">Si noti che non vengono copiate le proprietà non impostate.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-175">Note that unset properties are not copied.</span></span> <span data-ttu-id="fbb2d-176">Se una proprietà non impostata ha un valore predefinito che è un oggetto bloccato <xref:System.Windows.Freezable>, che rimane bloccato nel clone modificabile in caso contrario, un valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-176">If an unset property has a default value that is a frozen <xref:System.Windows.Freezable>, that property value remains frozen in the otherwise modifiable clone.</span></span>  
  
## <a name="move-a-freezable-between-threads"></a><span data-ttu-id="fbb2d-177">Spostare un oggetto Freezable tra thread</span><span class="sxs-lookup"><span data-stu-id="fbb2d-177">Move a Freezable Between Threads</span></span>  
 <span data-ttu-id="fbb2d-178">Questo metodo può essere utile per lo spostamento di un <xref:System.Windows.Freezable> tra thread.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-178">This method can be useful for moving a <xref:System.Windows.Freezable> between threads.</span></span> <span data-ttu-id="fbb2d-179">In primo luogo, verificare i <xref:System.Windows.Freezable> immodificabile usando relativo <xref:System.Windows.Freezable.Freeze%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="fbb2d-179">First, make the <xref:System.Windows.Freezable> unmodifiable by using its <xref:System.Windows.Freezable.Freeze%2A> method.</span></span> <span data-ttu-id="fbb2d-180">È ora possibile accedere a un altro thread il <xref:System.Windows.Freezable> e creare un clone locale che può accedere.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-180">Now another thread can access the <xref:System.Windows.Freezable> and make a local clone that it can access.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbb2d-181">
            <para>Questo metodo Usa il <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> per produrre il clone; (metodo) <see cref="T:System.Windows.Freezable" /> gli implementatori di che eseguire l'override <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> necessario assicurarsi che la copia non viene bloccata durante la creazione.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-181">
              <para>This method uses the <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> method to produce the clone; <see cref="T:System.Windows.Freezable" /> implementers who override <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> must ensure that the copy is not frozen on creation.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected virtual void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="freezable.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="fbb2d-182">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-182">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbb2d-183">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-183">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-184">Questo metodo viene chiamato dal <xref:System.Windows.Freezable.CloneCurrentValue%2A> metodo e non può essere chiamato direttamente dal codice, tranne quando si chiama l'implementazione di base durante l'override di questo metodo.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-184">This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="fbb2d-185">Per creare una copia modificabile dell'oggetto corrente, chiamare <xref:System.Windows.Freezable.CloneCurrentValue%2A> invece di chiamare direttamente questo metodo.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-185">To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbb2d-186">
            <para>Se si deriva da <see cref="T:System.Windows.Freezable" />, potrebbe essere necessario eseguire l'override di questo metodo. Motivi per eseguire l'override includono quanto segue:-la classe derivata dispone di dati che non vengono esposti tramite proprietà di dipendenza.  -La classe derivata deve eseguire operazioni di inizializzazione aggiuntive che non possono essere eseguita sostituendo semplicemente <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Ad esempio, si applica se la classe derivata implementa <see cref="T:System.ComponentModel.ISupportInitialize" />.  Le classi che archiviano tutti i dati nelle proprietà di dipendenza e che non è necessario effettuare operazioni di inizializzazione aggiuntiva non sono necessario eseguire l'override <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />.  È essenziale che tutte le implementazioni di chiamano l'implementazione di base di questo metodo. Le implementazioni devono solo eseguire operazioni che non viene eseguita dall'implementazione predefinita. L'implementazione predefinita esegue copie complete di tutte le proprietà scrivibili, impostate localmente. Se l'oggetto contiene le proprietà di dipendenza con espressioni (ad esempio, un'associazione di dati), ma non l'espressione stessa viene copiato il valore corrente dell'espressione.  Se l'oggetto ha proprietà di dipendenza animate, viene copiato il valore animato corrente di tali proprietà, ma non le animazioni.  Si noti che non vengono copiate le proprietà non impostate né sono proprietà di sola lettura. Se questa proprietà ha un valore predefinito che è un oggetto bloccato <see cref="T:System.Windows.Freezable" />, che rimane bloccato nel clone modificabile in caso contrario, un valore della proprietà.  L'elenco seguente riepiloga il comportamento previsto per questo metodo.  -La copia del prodotto contiene copie di tutti <see cref="T:System.Windows.Freezable" /> oggetti secondari.  -Proprietà unset e di sola lettura non vengono copiate.  -Se una proprietà è animata, viene copiato il valore corrente, ma non dell'animazione stessa.  -Nessuno di questi oggetti secondari vengono bloccate al momento della creazione.  -La copia di se stesso non sia bloccata.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-186">
              <para>If you derive from <see cref="T:System.Windows.Freezable" />, you may need to override this method. Reasons to override include the following:  -   Your derived class has data that is not exposed via dependency properties.  -   Your derived class must perform extra initialization work that cannot be accomplished by simply overriding <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. For example, this applies if your derived class implements <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes that store all their data in dependency properties and that do not need to perform extra initialization work do not need to override <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />.  It is essential that all implementations call the base implementation of this method. Implementations should only perform work that is not performed by the default implementation. The default implementation makes deep copies of all writable, locally set properties. If the object contains dependency properties with expressions (such as a data binding), the current value of the expression is copied but not the expression itself.  If the object has animated dependency properties, the current animated value of those properties is copied, but the animations are not.  Note that unset properties are not copied, nor are read-only properties. If such a property has a default value that is a frozen <see cref="T:System.Windows.Freezable" />, that property value remains frozen in the otherwise modifiable clone.  The following list summarizes the expected behavior for this method.  -   The copy produced contains copies of all <see cref="T:System.Windows.Freezable" /> sub-objects.  -   Unset and read-only properties are not copied.  -   If a property is animated, its current value is copied, but the animation itself is not.  -   None of these sub-objects are frozen on creation.  -   The copy itself is not frozen.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected System.Windows.Freezable CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Freezable CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateInstance () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Freezable ^ CreateInstance();" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : unit -&gt; System.Windows.Freezable" Usage="freezable.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbb2d-187">Initializes a new instance of the <see cref="T:System.Windows.Freezable" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-187">Initializes a new instance of the <see cref="T:System.Windows.Freezable" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbb2d-188">The new instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-188">The new instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-189">Si tratta di un metodo protetto, e le implementazioni specifiche dell'oggetto effettive per il comportamento dipende l'implementazione di override di <xref:System.Windows.Freezable.CreateInstanceCore%2A> metodo, che questo metodo chiama internamente.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-189">This is a protected method, and the actual object-specific implementations for the behavior are dependent on the override implementation of the <xref:System.Windows.Freezable.CreateInstanceCore%2A> method, which this method calls internally.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="freezable.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbb2d-190">When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-190">When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbb2d-191">The new instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-191">The new instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-192">Non chiamare questo metodo direttamente (tranne quando la chiamata a base in un'implementazione).</span><span class="sxs-lookup"><span data-stu-id="fbb2d-192">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="fbb2d-193">Questo metodo viene chiamato internamente dal <xref:System.Windows.Freezable.CreateInstance%2A> metodo ogni volta che una nuova istanza del <xref:System.Windows.Freezable> viene creato.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-193">This method is called internally by the <xref:System.Windows.Freezable.CreateInstance%2A> method whenever a new instance of the <xref:System.Windows.Freezable> is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbb2d-194">Nell'esempio seguente viene illustrata un'implementazione tipica delle <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-194">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbb2d-195">
            <para>Ogni <see cref="T:System.Windows.Freezable" /> classe derivata deve implementare questo metodo. Un'implementazione tipica è semplicemente chiamare il costruttore predefinito e restituire il risultato.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-195">
              <para>Every <see cref="T:System.Windows.Freezable" /> derived class must implement this method. A typical implementation is to simply call the default constructor and return the result.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CreateInstance" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Freeze">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fbb2d-196">Makes a <see cref="T:System.Windows.Freezable" /> object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />, or tests whether a <see cref="T:System.Windows.Freezable" /> object can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-196">Makes a <see cref="T:System.Windows.Freezable" /> object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />, or tests whether a <see cref="T:System.Windows.Freezable" /> object can be made unmodifiable.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="public void Freeze ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Freeze() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Freeze" />
      <MemberSignature Language="VB.NET" Value="Public Sub Freeze ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Freeze();" />
      <MemberSignature Language="F#" Value="member this.Freeze : unit -&gt; unit" Usage="freezable.Freeze " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbb2d-197">Makes the current object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-197">Makes the current object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-198">Per evitare la possibilità di un' <xref:System.InvalidOperationException> quando si chiama questo metodo, verificare la <xref:System.Windows.Freezable.CanFreeze%2A> proprietà per determinare se il <xref:System.Windows.Freezable> può essere reso immodificabile prima di chiamare questo metodo.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-198">To avoid the possibility of an <xref:System.InvalidOperationException> when calling this method, check the <xref:System.Windows.Freezable.CanFreeze%2A> property to determine whether the <xref:System.Windows.Freezable> can be made unmodifiable before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fbb2d-199">The <see cref="T:System.Windows.Freezable" /> cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-199">The <see cref="T:System.Windows.Freezable" /> cannot be made unmodifiable.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbb2d-200">
            <para>Questo metodo Usa il <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> metodo per rendere il <see cref="T:System.Windows.Freezable" /> immodificabile. Per modificare il comportamento di blocco, eseguire l'override di <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> (metodo).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-200">
              <para>This method uses the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method to make the <see cref="T:System.Windows.Freezable" /> unmodifiable. To modify freezing behavior, override the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="protected internal static bool Freeze (System.Windows.Freezable freezable, bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig bool Freeze(class System.Windows.Freezable freezable, bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static bool Freeze(System::Windows::Freezable ^ freezable, bool isChecking);" />
      <MemberSignature Language="F#" Value="static member Freeze : System.Windows.Freezable * bool -&gt; bool" Usage="System.Windows.Freezable.Freeze (freezable, isChecking)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="freezable" Type="System.Windows.Freezable" />
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="freezable">
          <span data-ttu-id="fbb2d-201">The object to check or make unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-201">The object to check or make unmodifiable.</span>
          </span>
          <span data-ttu-id="fbb2d-202">If <c>isChecking</c> is <see langword="true" />, the object is checked to determine whether it can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-202">If <c>isChecking</c> is <see langword="true" />, the object is checked to determine whether it can be made unmodifiable.</span>
          </span>
          <span data-ttu-id="fbb2d-203">If <c>isChecking</c> is <see langword="false" />, the object is made unmodifiable, if possible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-203">If <c>isChecking</c> is <see langword="false" />, the object is made unmodifiable, if possible.</span>
          </span>
        </param>
        <param name="isChecking">
          <span data-ttu-id="fbb2d-204">
            <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-204">
              <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbb2d-205">If the <paramref name="isChecking" /> parameter is <see langword="true" />, this method indicates whether the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-205">If the <paramref name="isChecking" /> parameter is <see langword="true" />, this method indicates whether the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable.</span>
          </span>
          <span data-ttu-id="fbb2d-206">If the <paramref name="isChecking" /> parameter is <see langword="false" />, this method attempts to make the specified <see cref="T:System.Windows.Freezable" /> unmodifiable and indicates whether the operation succeeded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-206">If the <paramref name="isChecking" /> parameter is <see langword="false" />, this method attempts to make the specified <see cref="T:System.Windows.Freezable" /> unmodifiable and indicates whether the operation succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbb2d-207">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-207">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
          <span data-ttu-id="fbb2d-208">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-208">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-209">Non chiamare questo metodo a meno che non si deriva da <xref:System.Windows.Freezable> ed eseguire l'override di <xref:System.Windows.Freezable.FreezeCore%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="fbb2d-209">Do not call this method unless you are deriving from <xref:System.Windows.Freezable> and overriding the <xref:System.Windows.Freezable.FreezeCore%2A> method.</span></span>  <span data-ttu-id="fbb2d-210">Questo metodo può essere usato nel <xref:System.Windows.Freezable.FreezeCore%2A> metodo per bloccare i membri dati della classe a loro volta <xref:System.Windows.Freezable> oggetti.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-210">This method may be used in the <xref:System.Windows.Freezable.FreezeCore%2A> method to freeze class data members that are themselves <xref:System.Windows.Freezable> objects.</span></span>  
  
 <span data-ttu-id="fbb2d-211">Bene. ora è chiamare questo metodo nuovamente su un <xref:System.Windows.Freezable> oggetto che è già bloccata (non modificabile).</span><span class="sxs-lookup"><span data-stu-id="fbb2d-211">It is alright to call this method again on a <xref:System.Windows.Freezable> object that is already frozen (unmodifiable).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fbb2d-212">When <paramref name="isChecking" /> is <see langword="false" />, the attempt to make <paramref name="freezable" /> unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-212">When <paramref name="isChecking" /> is <see langword="false" />, the attempt to make <paramref name="freezable" /> unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbb2d-213">
            <para>Questo metodo Usa il <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> metodo per rendere il <see cref="T:System.Windows.Freezable" /> immodificabile. Per modificare il comportamento di blocco, eseguire l'override di <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> (metodo).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-213">
              <para>This method uses the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method to make the <see cref="T:System.Windows.Freezable" /> unmodifiable. To modify freezing behavior, override the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected virtual bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="abstract member FreezeCore : bool -&gt; bool&#xA;override this.FreezeCore : bool -&gt; bool" Usage="freezable.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">
          <span data-ttu-id="fbb2d-214">
            <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-214">
              <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbb2d-215">Makes the <see cref="T:System.Windows.Freezable" /> object unmodifiable or tests whether it can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-215">Makes the <see cref="T:System.Windows.Freezable" /> object unmodifiable or tests whether it can be made unmodifiable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbb2d-216">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-216">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
          <span data-ttu-id="fbb2d-217">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-217">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-218">Non chiamare questo metodo direttamente (tranne quando la chiamata a base in un'implementazione).</span><span class="sxs-lookup"><span data-stu-id="fbb2d-218">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="fbb2d-219">Questo metodo viene chiamato internamente dal <xref:System.Windows.Freezable.CanFreeze%2A> proprietà (con `isChecking` uguale a `true`) e il <xref:System.Windows.Freezable.Freeze%2A> metodo (con `isChecking` uguale a `false`).</span><span class="sxs-lookup"><span data-stu-id="fbb2d-219">This method is called internally by the <xref:System.Windows.Freezable.CanFreeze%2A> property (with `isChecking` equal to `true`) and the <xref:System.Windows.Freezable.Freeze%2A> method (with `isChecking` equal to `false`).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbb2d-220">
            <para>
              <see cref="T:System.Windows.Freezable" /> gli implementatori devono eseguire l'override di questo metodo quando la classe contiene i dati che non vengono archiviati utilizzando le proprietà di dipendenza.  Un'implementazione tipica potrebbe chiamare il metodo base, quindi chiamare il metodo statico <see cref="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)" /> metodo in tutti i <see cref="T:System.Windows.Freezable" /> le proprietà che contiene la classe, restituendo tipizzate <see langword="true" /> solo se tutte le proprietà sono state bloccate (o potrebbero essere state bloccate, in caso di specifica <see langword="true" /> per <paramref name="isChecking" />).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-220">
              <para>
                <see cref="T:System.Windows.Freezable" /> implementers must override this method when the class contains data that is not stored using dependency properties.  A typical implementation would call base, then call the static <see cref="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)" /> method on all <see cref="T:System.Windows.Freezable" /> typed properties that the class contains, returning <see langword="true" /> only if all properties were frozen (or could have been frozen, in the case of specifying <see langword="true" /> for <paramref name="isChecking" />).</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.Freeze" />
        <altmember cref="P:System.Windows.Freezable.CanFreeze" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozen">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable GetAsFrozen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable GetAsFrozen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetAsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsFrozen () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ GetAsFrozen();" />
      <MemberSignature Language="F#" Value="member this.GetAsFrozen : unit -&gt; System.Windows.Freezable" Usage="freezable.GetAsFrozen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbb2d-221">Creates a frozen copy of the <see cref="T:System.Windows.Freezable" />, using base (non-animated) property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-221">Creates a frozen copy of the <see cref="T:System.Windows.Freezable" />, using base (non-animated) property values.</span>
          </span>
          <span data-ttu-id="fbb2d-222">Because the copy is frozen, any frozen sub-objects are copied by reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-222">Because the copy is frozen, any frozen sub-objects are copied by reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbb2d-223">A frozen copy of the <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-223">A frozen copy of the <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="fbb2d-224">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-224">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-225">È consigliabile controllare la <xref:System.Windows.Freezable.CanFreeze%2A> proprietà prima di chiamare questo metodo per verificare che il <xref:System.Windows.Freezable> può essere bloccato.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-225">You should check the <xref:System.Windows.Freezable.CanFreeze%2A> property before calling this method to verify that the <xref:System.Windows.Freezable> can be frozen.</span></span> <span data-ttu-id="fbb2d-226">Con questo metodo è simile alla creazione di una copia usando il <xref:System.Windows.Freezable.Clone%2A> e quindi bloccandolo con la <xref:System.Windows.Freezable.Freeze%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="fbb2d-226">Using this method is similar to creating a copy using the <xref:System.Windows.Freezable.Clone%2A> and then freezing it with the <xref:System.Windows.Freezable.Freeze%2A> method.</span></span>  
  
 <span data-ttu-id="fbb2d-227">Il <xref:System.Windows.Freezable.GetAsFrozen%2A> e <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> metodi possono migliorare le prestazioni di copia perché non duplicano <xref:System.Windows.Freezable> oggetti secondari che sono già bloccati, li copiano solo per riferimento.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-227">The <xref:System.Windows.Freezable.GetAsFrozen%2A> and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods can improve copying performance because they do not clone <xref:System.Windows.Freezable> sub-objects that are already frozen; they only copy them by reference.</span></span>  
  
 <span data-ttu-id="fbb2d-228">Nella tabella seguente riepiloga le differenze tra il <xref:System.Windows.Freezable.GetAsFrozen%2A> e <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-228">The following table summarizes the differences between the <xref:System.Windows.Freezable.GetAsFrozen%2A> and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods.</span></span>  
  
|<span data-ttu-id="fbb2d-229">Operazione</span><span class="sxs-lookup"><span data-stu-id="fbb2d-229">Action</span></span>|<span data-ttu-id="fbb2d-230">Metodo GetAsFrozen</span><span class="sxs-lookup"><span data-stu-id="fbb2d-230">GetAsFrozen method behavior</span></span>|<span data-ttu-id="fbb2d-231">Metodo GetCurrentValueAsFrozen</span><span class="sxs-lookup"><span data-stu-id="fbb2d-231">GetCurrentValueAsFrozen method behavior</span></span>|  
|------------|---------------------------------|---------------------------------------------|  
|<span data-ttu-id="fbb2d-232">Copia di una proprietà di dipendenza che dispone di un'espressione</span><span class="sxs-lookup"><span data-stu-id="fbb2d-232">Copying a dependency property that has an expression</span></span>|<span data-ttu-id="fbb2d-233">Il metodo genera un' <xref:System.InvalidOperationException> perché non è possibile <xref:System.Windows.Freezable.Freeze%2A> la proprietà.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-233">The method throws an <xref:System.InvalidOperationException> because it cannot <xref:System.Windows.Freezable.Freeze%2A> the property.</span></span>|<span data-ttu-id="fbb2d-234">Il valore corrente dell'espressione viene copiato, ma non l'espressione stessa.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-234">The current value of the expression is copied, but not the expression itself.</span></span>|  
|<span data-ttu-id="fbb2d-235">Copia di una proprietà di dipendenza animata</span><span class="sxs-lookup"><span data-stu-id="fbb2d-235">Copying an animated dependency property</span></span>|<span data-ttu-id="fbb2d-236">Il valore della proprietà base (non animati) viene copiato.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-236">The property's base (non-animated) value is copied.</span></span> <span data-ttu-id="fbb2d-237">Le animazioni non vengono copiate.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-237">Animations are not copied.</span></span>|<span data-ttu-id="fbb2d-238">Il valore della proprietà corrente animata viene copiato.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-238">The property's current animated value is copied.</span></span> <span data-ttu-id="fbb2d-239">Le animazioni non vengono copiate.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-239">Animations are not copied.</span></span>|  
  
 <span data-ttu-id="fbb2d-240">Si noti che non vengono copiate le proprietà non impostate né sono proprietà di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-240">Note that unset properties are not copied, nor are read-only properties.</span></span>  
  
 <span data-ttu-id="fbb2d-241">Per creare una copia del <xref:System.Windows.Freezable> vale a dire non bloccato, utilizzare il <xref:System.Windows.Freezable.Clone%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="fbb2d-241">To create a copy of the <xref:System.Windows.Freezable> that is not frozen, use the <xref:System.Windows.Freezable.Clone%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fbb2d-242">The <see cref="T:System.Windows.Freezable" /> cannot be frozen because it contains expressions or animated properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-242">The <see cref="T:System.Windows.Freezable" /> cannot be frozen because it contains expressions or animated properties.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbb2d-243">
            <para>Questo metodo Usa virtuale <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" /> metodo per produrre il clone.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-243">
              <para>This method uses the virtual <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" /> method to produce the clone.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected virtual void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezable.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="fbb2d-244">The instance to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-244">The instance to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbb2d-245">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-245">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-246">Questo metodo viene chiamato dal <xref:System.Windows.Freezable.GetAsFrozen%2A> metodo e non può essere chiamato direttamente dal codice, tranne quando si chiama l'implementazione di base durante l'override di questo metodo.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-246">This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="fbb2d-247">Per creare una copia bloccata dell'oggetto corrente, chiamare <xref:System.Windows.Freezable.GetAsFrozen%2A> invece di chiamare direttamente questo metodo.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-247">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbb2d-248">
            <para>Se si deriva da <see cref="T:System.Windows.Freezable" /> potrebbe essere necessario eseguire l'override di questo metodo. Motivi per eseguire l'override includono quanto segue:-la classe derivata dispone di dati che non vengono esposti tramite proprietà di dipendenza.  -La classe derivata deve eseguire operazioni di inizializzazione aggiuntive che non possono essere eseguita sostituendo semplicemente <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Ad esempio, si applica se la classe derivata implementa <see cref="T:System.ComponentModel.ISupportInitialize" />.  Le classi che archiviano tutti i dati nelle proprietà di dipendenza e che non è necessario effettuare operazioni di inizializzazione aggiuntiva non sono necessario eseguire l'override <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.  È essenziale che tutte le implementazioni di chiamano l'implementazione di base di questo metodo. Le implementazioni devono solo eseguire operazioni che non viene eseguita dall'implementazione predefinita. L'implementazione predefinita esegue copie complete di eventuali oggetti Freezable non bloccati e superficiale copie di tutte le altre proprietà scrivibili, in locale che contiene le proprietà del set. Se l'oggetto ha proprietà di dipendenza associata a dati, le espressioni vengono copiate ma non è più possano risolvere; per altre informazioni sugli oggetti associati a dati duplicati, vedere [Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md) oggetti Freezable. Se l'oggetto ha proprietà di dipendenza animate, vengono copiati i valori di base (non animati) delle proprietà. Le animazioni non vengono copiate.  Si noti che non vengono copiate le proprietà non impostate né sono proprietà di sola lettura.  Se si esegue l'override di questo metodo, è necessario chiamare l'implementazione di base.  Non è necessario per <see cref="M:System.Windows.Freezable.Freeze" /> quando vengono copiati i valori.  Il risultato è stato bloccato dal <see cref="M:System.Windows.Freezable.GetAsFrozen" /> prima di essere restituiti.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-248">
              <para>If you derive from <see cref="T:System.Windows.Freezable" /> you may need to override this method. Reasons to override include the following:  -   Your derived class has data that is not exposed via dependency properties.  -   Your derived class must perform extra initialization work that cannot be accomplished by simply overriding <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. For example, this applies if your derived class implements <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes that store all their data in dependency properties and that do not need to perform extra initialization work do not need to override <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.  It is essential that all implementations call the base implementation of this method. Implementations should only perform work that is not performed by the default implementation. The default implementation makes deep copies of any unfrozen freezables and shallow copies of all other writable, locally set properties it contains. If the object has data-bound dependency properties, the expressions are copied but might no longer resolve; for more information about cloning data-bound objects, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). If the object has animated dependency properties, the base (non-animated) values of those properties are copied. Animations are not copied.  Note that unset properties are not copied, nor are read-only properties.  If you do override this method, you must call the base implementation.  You do not need to <see cref="M:System.Windows.Freezable.Freeze" /> values as they are copied.  The result is frozen by <see cref="M:System.Windows.Freezable.GetAsFrozen" /> before being returned.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozen" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozen">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable GetCurrentValueAsFrozen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable GetCurrentValueAsFrozen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentValueAsFrozen () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ GetCurrentValueAsFrozen();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentValueAsFrozen : unit -&gt; System.Windows.Freezable" Usage="freezable.GetCurrentValueAsFrozen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbb2d-249">Creates a frozen copy of the <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-249">Creates a frozen copy of the <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          </span>
          <span data-ttu-id="fbb2d-250">Because the copy is frozen, any frozen sub-objects are copied by reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-250">Because the copy is frozen, any frozen sub-objects are copied by reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbb2d-251">A frozen copy of the <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-251">A frozen copy of the <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="fbb2d-252">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-252">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-253">Con questo metodo è simile alla creazione di una copia usando il <xref:System.Windows.Freezable.CloneCurrentValue%2A> e quindi bloccandolo con la <xref:System.Windows.Freezable.Freeze%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="fbb2d-253">Using this method is similar to creating a copy using the <xref:System.Windows.Freezable.CloneCurrentValue%2A> and then freezing it with the <xref:System.Windows.Freezable.Freeze%2A> method.</span></span>  
  
 <span data-ttu-id="fbb2d-254">Il <xref:System.Windows.Freezable.GetAsFrozen%2A> e <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> metodi possono migliorare le prestazioni di copia perché non duplicano <xref:System.Windows.Freezable> oggetti secondari che sono già bloccati, li copiano solo per riferimento.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-254">The <xref:System.Windows.Freezable.GetAsFrozen%2A> and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods can improve copying performance because they do not clone <xref:System.Windows.Freezable> sub-objects that are already frozen; they only copy them by reference.</span></span>  
  
 <span data-ttu-id="fbb2d-255">Nella tabella seguente riepiloga le differenze tra il <xref:System.Windows.Freezable.GetAsFrozen%2A> e <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-255">The following table summarizes the differences between the <xref:System.Windows.Freezable.GetAsFrozen%2A> and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods.</span></span>  
  
|<span data-ttu-id="fbb2d-256">Operazione</span><span class="sxs-lookup"><span data-stu-id="fbb2d-256">Action</span></span>|<span data-ttu-id="fbb2d-257">Metodo GetAsFrozen</span><span class="sxs-lookup"><span data-stu-id="fbb2d-257">GetAsFrozen method behavior</span></span>|<span data-ttu-id="fbb2d-258">Metodo GetCurrentValueAsFrozen</span><span class="sxs-lookup"><span data-stu-id="fbb2d-258">GetCurrentValueAsFrozen method behavior</span></span>|  
|------------|---------------------------------|---------------------------------------------|  
|<span data-ttu-id="fbb2d-259">Copia di una proprietà di dipendenza che dispone di un'espressione</span><span class="sxs-lookup"><span data-stu-id="fbb2d-259">Copying a dependency property that has an expression</span></span>|<span data-ttu-id="fbb2d-260">Il metodo genera un' <xref:System.InvalidOperationException> perché non è possibile <xref:System.Windows.Freezable.Freeze%2A> la proprietà.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-260">The method throws an <xref:System.InvalidOperationException> because it cannot <xref:System.Windows.Freezable.Freeze%2A> the property.</span></span>|<span data-ttu-id="fbb2d-261">Il valore corrente dell'espressione viene copiato, ma non l'espressione stessa.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-261">The current value of the expression is copied, but not the expression itself.</span></span>|  
|<span data-ttu-id="fbb2d-262">Copia di una proprietà di dipendenza animata</span><span class="sxs-lookup"><span data-stu-id="fbb2d-262">Copying an animated dependency property</span></span>|<span data-ttu-id="fbb2d-263">Il valore della proprietà base (non animati) viene copiato.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-263">The property's base (non-animated) value is copied.</span></span> <span data-ttu-id="fbb2d-264">Le animazioni non vengono copiate.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-264">Animations are not copied.</span></span>|<span data-ttu-id="fbb2d-265">Il valore della proprietà corrente animata viene copiato.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-265">The property's current animated value is copied.</span></span> <span data-ttu-id="fbb2d-266">Le animazioni non vengono copiate.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-266">Animations are not copied.</span></span>|  
  
 <span data-ttu-id="fbb2d-267">Si noti che non vengono copiate le proprietà non impostate né sono proprietà di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-267">Note that unset properties are not copied, nor are read-only properties.</span></span>  
  
 <span data-ttu-id="fbb2d-268">Per creare una copia del <xref:System.Windows.Freezable> vale a dire non bloccato, utilizzare il <xref:System.Windows.Freezable.CloneCurrentValue%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="fbb2d-268">To create a copy of the <xref:System.Windows.Freezable> that is not frozen, use the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbb2d-269">
            <para>Questo metodo Usa virtuale <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" /> metodo per produrre il clone.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-269">
              <para>This method uses the virtual <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" /> method to produce the clone.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected virtual void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezable.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="fbb2d-270">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-270">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbb2d-271">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-271">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="fbb2d-272">If the object has animated dependency properties, their current animated values are copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-272">If the object has animated dependency properties, their current animated values are copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-273">Questo metodo viene chiamato dal <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> metodo e non può essere chiamato direttamente dal codice, tranne quando si chiama l'implementazione di base durante l'override di questo metodo.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-273">This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="fbb2d-274">Per creare una copia bloccata dell'oggetto corrente, chiamare <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> invece di chiamare direttamente questo metodo.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-274">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbb2d-275">
            <para>Se si deriva da <see cref="T:System.Windows.Freezable" />, potrebbe essere necessario eseguire l'override di questo metodo. Motivi per eseguire l'override includono quanto segue:-la classe derivata dispone di dati che non vengono esposti tramite proprietà di dipendenza.  -La classe derivata deve eseguire operazioni di inizializzazione aggiuntive che non possono essere eseguita sostituendo semplicemente <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Ad esempio, si applica se la classe derivata implementa <see cref="T:System.ComponentModel.ISupportInitialize" />.  Le classi che archiviano tutti i dati nelle proprietà di dipendenza e che non è necessario effettuare operazioni di inizializzazione aggiuntiva non sono necessario eseguire l'override <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.  È essenziale che tutte le implementazioni di chiamano l'implementazione di base di questo metodo. Le implementazioni devono solo eseguire operazioni che non viene eseguita dall'implementazione predefinita. L'implementazione predefinita crea un nuovo <see cref="T:System.Windows.Freezable" /> utilizzando il <see cref="M:System.Windows.Freezable.CreateInstance" /> (metodo) e la imposta come copie complete di oggetti Freezable non bloccati e copia superficiale di tutte le altre proprietà scrivibili, in locale impostare proprietà in essa contenute. Se l'oggetto ha proprietà di dipendenza associata a dati, le associazioni dati vengono copiate ma non è più potrebbero risolvere; per altre informazioni sugli oggetti associati a dati duplicati, vedere [Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md) oggetti Freezable. Se l'oggetto ha proprietà di dipendenza animate, viene copiato il valore animato corrente di tali proprietà, ma non le animazioni.  Le proprietà di dipendenza di sola lettura all'interno di un <see cref="T:System.Windows.Freezable" /> non vengono copiati da questa implementazione predefinita.  Se si esegue l'override di questo metodo, è necessario chiamare l'implementazione di base.  Non è necessario per <see cref="M:System.Windows.Freezable.Freeze" /> quando vengono copiati i valori.  Il risultato è stato bloccato dal <see cref="M:System.Windows.Freezable.GetAsFrozen" /> prima di essere restituiti.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-275">
              <para>If you derive from <see cref="T:System.Windows.Freezable" />, you may need to override this method. Reasons to override include the following:  -   Your derived class has data that is not exposed via dependency properties.  -   Your derived class must perform extra initialization work that cannot be accomplished by simply overriding <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. For example, this applies if your derived class implements <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes that store all their data in dependency properties and that do not need to perform extra initialization work do not need to override <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.  It is essential that all implementations call the base implementation of this method. Implementations should only perform work that is not performed by the default implementation. The default implementation creates a new <see cref="T:System.Windows.Freezable" /> using the <see cref="M:System.Windows.Freezable.CreateInstance" /> method and makes deep copies of unfrozen freezables and shallow copies of all other writable, locally set properties it contains. If the object has data-bound dependency properties, the data bindings are copied but might no longer resolve; for more information about cloning data-bound objects, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). If the object has animated dependency properties, the current animated value of those properties is copied, but the animations are not.  Read-only dependency properties within a <see cref="T:System.Windows.Freezable" /> are not copied by this default implementation.  If you do override this method, you must call the base implementation.  You do not need to <see cref="M:System.Windows.Freezable.Freeze" /> values as they are copied.  The result is frozen by <see cref="M:System.Windows.Freezable.GetAsFrozen" /> before being returned.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrozen">
      <MemberSignature Language="C#" Value="public bool IsFrozen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFrozen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Freezable.IsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFrozen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFrozen { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFrozen : bool" Usage="System.Windows.Freezable.IsFrozen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbb2d-276">Gets a value that indicates whether the object is currently modifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-276">Gets a value that indicates whether the object is currently modifiable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fbb2d-277">
            <see langword="true" /> Se l'oggetto è bloccato e non può essere modificato. <see langword="false" /> se l'oggetto può essere modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-277">
              <see langword="true" /> if the object is frozen and cannot be modified; <see langword="false" /> if the object can be modified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-278">Tenta di modificare un oggetto quando relativi <xref:System.Windows.Freezable.IsFrozen%2A> proprietà viene `true` genera un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-278">Attempting to modify an object when its <xref:System.Windows.Freezable.IsFrozen%2A> property is `true` throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="fbb2d-279">Questa proprietà è di sola lettura dalla prospettiva del modello oggetto.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-279">This property is read-only from the object model perspective.</span></span> <span data-ttu-id="fbb2d-280">Parte della documentazione sui <xref:System.Windows.Freezable> comportamenti possono menzionare "imposta <xref:System.Windows.Freezable.IsFrozen%2A> al `true`" o un linguaggio simile durante l'analisi del comportamento di altri metodi di <xref:System.Windows.Freezable>, ma questo comportamento avviene internamente nelle istanze della classe, i metodi dell'istanza quando modificano le variabili private presenti all'interno della classe astratta.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-280">Some of the documentation about <xref:System.Windows.Freezable> behaviors may mention "sets <xref:System.Windows.Freezable.IsFrozen%2A> to `true`" or similar language when discussing the behavior of other methods of <xref:System.Windows.Freezable>, but this behavior is happening internally in the class instances, when methods of the instance manipulate the private variables that exist within the abstract class.</span></span> <span data-ttu-id="fbb2d-281">Per impostare il valore di questa proprietà, è necessario chiamare <xref:System.Windows.Freezable.Freeze%2A>.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-281">To set the value of this property, you should call <xref:System.Windows.Freezable.Freeze%2A>.</span></span> <span data-ttu-id="fbb2d-282">Questa operazione una tantum per modificare in modo efficace è il <xref:System.Windows.Freezable.IsFrozen%2A> proprietà dal valore predefinito iniziale `false` torni allo stato di `true` dello stato.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-282">This effectively is a one-time operation to change the <xref:System.Windows.Freezable.IsFrozen%2A> property from the initial default `false` state to the `true` state.</span></span> <span data-ttu-id="fbb2d-283">Non c'è alcun mezzo disponibili per impostare il valore al `false`.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-283">There is no available means to set the value back to `false`.</span></span> <span data-ttu-id="fbb2d-284">In alternativa, è possibile modificare qualsiasi copia completa eseguita dalla versione originale (vedere il <xref:System.Windows.Freezable.Clone%2A> (metodo)).</span><span class="sxs-lookup"><span data-stu-id="fbb2d-284">Instead, you could change any deep copy made from the original (see the <xref:System.Windows.Freezable.Clone%2A> method).</span></span> <span data-ttu-id="fbb2d-285">Si tratta per impostazione predefinita ed è come qualsiasi classe derivata deve comportarsi quando applicato ai case in cui il <xref:System.Windows.Freezable> modello è utile.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-285">This is by design and is how any derived class should behave when applied to the cases where the <xref:System.Windows.Freezable> pattern is useful.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnChanged : unit -&gt; unit&#xA;override this.OnChanged : unit -&gt; unit" Usage="freezable.OnChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbb2d-286">Called when the current <see cref="T:System.Windows.Freezable" /> object is modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-286">Called when the current <see cref="T:System.Windows.Freezable" /> object is modified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-287">Questo metodo viene chiamato ogni volta che il <xref:System.Windows.Freezable.Changed> evento si verifica.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-287">This method is called whenever the <xref:System.Windows.Freezable.Changed> event occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbb2d-288">
            <para>Quando si implementa una classe che deriva da <see cref="T:System.Windows.Freezable" />, si può eseguire l'override di questo metodo per eseguire le attività.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-288">
              <para>When you implement a class that derives from <see cref="T:System.Windows.Freezable" />, you may override this method to perform tasks.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Freezable.Changed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OnFreezablePropertyChanged">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fbb2d-289">Ensures that appropriate context pointers are established for a data member of type <see cref="T:System.Windows.DependencyObject" /> that has just been modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-289">Ensures that appropriate context pointers are established for a data member of type <see cref="T:System.Windows.DependencyObject" /> that has just been modified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnFreezablePropertyChanged">
      <MemberSignature Language="C#" Value="protected void OnFreezablePropertyChanged (System.Windows.DependencyObject oldValue, System.Windows.DependencyObject newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnFreezablePropertyChanged(class System.Windows.DependencyObject oldValue, class System.Windows.DependencyObject newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnFreezablePropertyChanged (oldValue As DependencyObject, newValue As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnFreezablePropertyChanged(System::Windows::DependencyObject ^ oldValue, System::Windows::DependencyObject ^ newValue);" />
      <MemberSignature Language="F#" Value="member this.OnFreezablePropertyChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="freezable.OnFreezablePropertyChanged (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="newValue" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="fbb2d-290">The previous value of the data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-290">The previous value of the data member.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="fbb2d-291">The current value of the data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-291">The current value of the data member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbb2d-292">Ensures that appropriate context pointers are established for a <see cref="T:System.Windows.DependencyObjectType" /> data member that has just been set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-292">Ensures that appropriate context pointers are established for a <see cref="T:System.Windows.DependencyObjectType" /> data member that has just been set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-293">Questo metodo deve essere chiamato da <xref:System.Windows.Freezable> eredi ogni volta che un <xref:System.Windows.DependencyObject> membro dati che non verrà archiviato come un <xref:System.Windows.DependencyProperty> è impostata.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-293">This method should be called by <xref:System.Windows.Freezable> inheritors each time a <xref:System.Windows.DependencyObject> data member that is not stored as a <xref:System.Windows.DependencyProperty> is set.</span></span>  
  
 <span data-ttu-id="fbb2d-294">Questo metodo non deve essere chiamato per <xref:System.Windows.DependencyObject> i membri dati vengono archiviati usando un <xref:System.Windows.DependencyProperty>.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-294">This method does not need to be called for <xref:System.Windows.DependencyObject> data members that are stored using a <xref:System.Windows.DependencyProperty>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFreezablePropertyChanged">
      <MemberSignature Language="C#" Value="protected void OnFreezablePropertyChanged (System.Windows.DependencyObject oldValue, System.Windows.DependencyObject newValue, System.Windows.DependencyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnFreezablePropertyChanged(class System.Windows.DependencyObject oldValue, class System.Windows.DependencyObject newValue, class System.Windows.DependencyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnFreezablePropertyChanged (oldValue As DependencyObject, newValue As DependencyObject, property As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnFreezablePropertyChanged(System::Windows::DependencyObject ^ oldValue, System::Windows::DependencyObject ^ newValue, System::Windows::DependencyProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.OnFreezablePropertyChanged : System.Windows.DependencyObject * System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; unit" Usage="freezable.OnFreezablePropertyChanged (oldValue, newValue, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="newValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="property" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="fbb2d-295">The previous value of the data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-295">The previous value of the data member.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="fbb2d-296">The current value of the data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-296">The current value of the data member.</span>
          </span>
        </param>
        <param name="property">
          <span data-ttu-id="fbb2d-297">The property that changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-297">The property that changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbb2d-298">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-298">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="freezable.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="fbb2d-299">Event data that contains information about which property changed, and its old and new values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-299">Event data that contains information about which property changed, and its old and new values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbb2d-300">Overrides the <see cref="T:System.Windows.DependencyObject" /> implementation of <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> to also invoke any <see cref="E:System.Windows.Freezable.Changed" /> handlers in response to a changing dependency property of type <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-300">Overrides the <see cref="T:System.Windows.DependencyObject" /> implementation of <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> to also invoke any <see cref="E:System.Windows.Freezable.Changed" /> handlers in response to a changing dependency property of type <see cref="T:System.Windows.Freezable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-301">I dati dell'evento contengono informazioni su solo il <xref:System.Windows.Freezable> stesso.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-301">The event data contains information about only the <xref:System.Windows.Freezable> itself.</span></span> <span data-ttu-id="fbb2d-302">Eventuali informazioni sulle proprietà secondarie devono essere ottenute tramite il <xref:System.Windows.Freezable.Changed> gestori.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-302">Any sub-property information must be obtained through the <xref:System.Windows.Freezable.Changed> handlers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPreamble">
      <MemberSignature Language="C#" Value="protected void ReadPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.ReadPreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadPreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadPreamble();" />
      <MemberSignature Language="F#" Value="member this.ReadPreamble : unit -&gt; unit" Usage="freezable.ReadPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbb2d-303">Ensures that the <see cref="T:System.Windows.Freezable" /> is being accessed from a valid thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-303">Ensures that the <see cref="T:System.Windows.Freezable" /> is being accessed from a valid thread.</span>
          </span>
          <span data-ttu-id="fbb2d-304">Inheritors of <see cref="T:System.Windows.Freezable" /> must call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that reads data members that are not dependency properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-304">Inheritors of <see cref="T:System.Windows.Freezable" /> must call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that reads data members that are not dependency properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbb2d-305">
            <para>Le classi che derivano da <see cref="T:System.Windows.Freezable" /> chiami la <see cref="M:System.Windows.Freezable.ReadPreamble" /> metodo prima di tentare di accedere a qualsiasi membro che non è proprietà di dipendenza. Il <see cref="M:System.Windows.Freezable.WritePreamble" /> metodo deve essere chiamato prima che tali membri vengono scritti.  Questo metodo in modo efficace non esegue alcuna operazione fa altro che chiamare <see cref="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-305">
              <para>Classes that derive from <see cref="T:System.Windows.Freezable" /> should call the <see cref="M:System.Windows.Freezable.ReadPreamble" /> method before they attempt to access any members that are not dependency properties. The <see cref="M:System.Windows.Freezable.WritePreamble" /> method should be called before any such members are written to.  This method effectively does nothing more than call <see cref="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.WritePreamble" />
      </Docs>
    </Member>
    <Member MemberName="WritePostscript">
      <MemberSignature Language="C#" Value="protected void WritePostscript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WritePostscript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.WritePostscript" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WritePostscript ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WritePostscript();" />
      <MemberSignature Language="F#" Value="member this.WritePostscript : unit -&gt; unit" Usage="freezable.WritePostscript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbb2d-306">Raises the <see cref="E:System.Windows.Freezable.Changed" /> event for the <see cref="T:System.Windows.Freezable" /> and invokes its <see cref="M:System.Windows.Freezable.OnChanged" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-306">Raises the <see cref="E:System.Windows.Freezable.Changed" /> event for the <see cref="T:System.Windows.Freezable" /> and invokes its <see cref="M:System.Windows.Freezable.OnChanged" /> method.</span>
          </span>
          <span data-ttu-id="fbb2d-307">Classes that derive from <see cref="T:System.Windows.Freezable" /> should call this method at the end of any API that modifies class members that are not stored as dependency properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-307">Classes that derive from <see cref="T:System.Windows.Freezable" /> should call this method at the end of any API that modifies class members that are not stored as dependency properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbb2d-308">
            <para>Le classi che derivano da <see cref="T:System.Windows.Freezable" /> consigliabile chiamare questo metodo alla fine di qualsiasi API che modifica un membro della classe che non verrà archiviato come un <see cref="T:System.Windows.DependencyProperty" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-308">
              <para>Classes that derive from <see cref="T:System.Windows.Freezable" /> should call this method at the end of any API that modifies a class member that is not stored as a <see cref="T:System.Windows.DependencyProperty" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WritePreamble">
      <MemberSignature Language="C#" Value="protected void WritePreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WritePreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.WritePreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WritePreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WritePreamble();" />
      <MemberSignature Language="F#" Value="member this.WritePreamble : unit -&gt; unit" Usage="freezable.WritePreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbb2d-309">Verifies that the <see cref="T:System.Windows.Freezable" /> is not frozen and that it is being accessed from a valid threading context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-309">Verifies that the <see cref="T:System.Windows.Freezable" /> is not frozen and that it is being accessed from a valid threading context.</span>
          </span>
          <span data-ttu-id="fbb2d-310">
            <see cref="T:System.Windows.Freezable" /> inheritors should call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that writes to data members that are not dependency properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-310">
              <see cref="T:System.Windows.Freezable" /> inheritors should call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that writes to data members that are not dependency properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbb2d-311">Questo metodo chiama <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> per verificare il contesto di threading è accessibile e viene generata un'eccezione se il <xref:System.Windows.Freezable> istanza è già bloccata.</span><span class="sxs-lookup"><span data-stu-id="fbb2d-311">This method calls <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> to verify the threading context is accessible, and it throws an exception if the <xref:System.Windows.Freezable> instance is already frozen.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fbb2d-312">The <see cref="T:System.Windows.Freezable" /> instance is frozen and cannot have its members written to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-312">The <see cref="T:System.Windows.Freezable" /> instance is frozen and cannot have its members written to.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbb2d-313">
            <para>Le classi che derivano da <see cref="T:System.Windows.Freezable" /> consigliabile chiamare <see cref="M:System.Windows.Freezable.WritePreamble" /> prima di tentare di scrivere in qualsiasi membro che non è proprietà di dipendenza. Se si chiama <see cref="M:System.Windows.Freezable.WritePreamble" /> in un [! INCLUDE[TLA#tla_api](~/Includes/tlasharptla-API-MD.MD)], è possibile omettere una chiamata a <see cref="M:System.Windows.Freezable.ReadPreamble" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbb2d-313">
              <para>Classes that derive from <see cref="T:System.Windows.Freezable" /> should call <see cref="M:System.Windows.Freezable.WritePreamble" /> before attempting to write to any members that are not dependency properties. If you call <see cref="M:System.Windows.Freezable.WritePreamble" /> in an [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], you can omit a call to <see cref="M:System.Windows.Freezable.ReadPreamble" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.ReadPreamble" />
      </Docs>
    </Member>
  </Members>
</Type>