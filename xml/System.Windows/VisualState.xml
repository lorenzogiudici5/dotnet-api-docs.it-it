<Type Name="VisualState" FullName="System.Windows.VisualState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2991e42e0328cca2b857aee018bd001f88c8896b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36455967" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VisualState : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualState extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualState" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualState&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualState : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualState = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta l'aspetto visivo del controllo quando questo si trova in uno stato specifico.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Windows.VisualState> specifica l'aspetto del controllo si trova in un determinato stato. Ad esempio, quando un <xref:System.Windows.Controls.Button> è premuto, il bordo potrebbe essere un colore diverso rispetto al normale.  Il <xref:System.Windows.VisualState> classe ha un <xref:System.Windows.VisualState.Storyboard%2A> proprietà che modifica l'aspetto del controllo. Quando il controllo entra nello stato specificato per il <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> proprietà, il <xref:System.Windows.VisualState.Storyboard%2A> inizia. Quando il controllo esce dallo stato, il <xref:System.Windows.VisualState.Storyboard%2A> viene arrestata.  
  
 Il <xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType> contiene proprietà <xref:System.Windows.VisualState> oggetti. <xref:System.Windows.VisualStateGroup> gli oggetti vengono aggiunti al <xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType> associata, definito nell'in un <xref:System.Windows.FrameworkElement>. È possibile aggiungere <xref:System.Windows.VisualState> gli oggetti a qualsiasi <xref:System.Windows.FrameworkElement>, ma sono in genere vengono utilizzati in un <xref:System.Windows.Controls.ControlTemplate> di un <xref:System.Windows.Controls.Control>. Per informazioni su come creare un <xref:System.Windows.Controls.ControlTemplate> e <xref:System.Windows.VisualState> degli oggetti per i controlli esistenti, vedere [personalizzazione dell'aspetto di un controllo esistente tramite la creazione di ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md). Per un esempio di utilizzo <xref:System.Windows.VisualState> oggetti di fuori di un <xref:System.Windows.Controls.ControlTemplate>, vedere il <xref:System.Windows.VisualStateManager> classe.  
  
   
  
## Examples  
 Nell'esempio seguente viene creata una <xref:System.Windows.VisualStateGroup> nella <xref:System.Windows.Controls.ControlTemplate> di un <xref:System.Windows.Controls.Button> chiamato `CommonStates` e aggiunge <xref:System.Windows.VisualState> oggetti per gli stati `Normal`, `Pressed`, e `MouseOver`. Il <xref:System.Windows.Controls.Button> inoltre definisce uno stato denominato `Disabled` che si trova nel `CommonStates` <xref:System.Windows.VisualStateGroup>, ma nell'esempio vengono omessi per brevità. Per l'esempio completo, vedere [personalizzazione dell'aspetto di un controllo esistente tramite la creazione di ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.VisualState" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualState.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome di <see cref="T:System.Windows.VisualState" />.</summary>
        <value>Nome di <see cref="T:System.Windows.VisualState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Specificare quale stato di un elemento visual deve immettere passando il <xref:System.Windows.VisualState.Name%2A> del <xref:System.Windows.VisualState> per il <xref:System.Windows.VisualStateManager>.  
  
 Quando un <xref:System.Windows.Controls.Control> Usa la <xref:System.Windows.VisualStateManager> in un <xref:System.Windows.Controls.ControlTemplate>, l'autore del controllo deve specificare quali <xref:System.Windows.VisualState> oggetti controllo prevede di trovare in relativi <xref:System.Windows.Controls.ControlTemplate> inserendo il <xref:System.Windows.TemplateVisualStateAttribute> nella firma della classe. <xref:System.Windows.Controls.ControlTemplate> gli autori di definiscono nuove <xref:System.Windows.VisualState> oggetti e impostare il <xref:System.Windows.VisualState.Name%2A> sul valore specificato dal <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> proprietà.  
  
 Per trovare i nomi degli stati di visualizzazione per i controlli inclusi in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], vedere [modelli e stili del controllo](~/docs/framework/wpf/controls/control-styles-and-templates.md). Per informazioni su come creare un <xref:System.Windows.Controls.ControlTemplate> e <xref:System.Windows.VisualState> degli oggetti per i controlli esistenti, vedere [personalizzazione dell'aspetto di un controllo esistente tramite la creazione di ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene creata una <xref:System.Windows.VisualStateGroup> nella <xref:System.Windows.Controls.ControlTemplate> di un <xref:System.Windows.Controls.Button> chiamato `CommonStates` e aggiunge <xref:System.Windows.VisualState> oggetti per gli stati `Normal`, `Pressed`, e `MouseOver`. Il <xref:System.Windows.Controls.Button> inoltre definisce uno stato denominato `Disabled` che si trova nel `CommonStates` <xref:System.Windows.VisualStateGroup>, ma nell'esempio vengono omessi per brevità. Per l'esempio completo, vedere [personalizzazione dell'aspetto di un controllo esistente tramite la creazione di ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualState.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un oggetto <see cref="T:System.Windows.Media.Animation.Storyboard" /> che definisce l'aspetto del controllo quando questo è nello stato rappresentato dall'oggetto <see cref="T:System.Windows.VisualState" />.</summary>
        <value>Storyboard che definisce l'aspetto del controllo quando questo è nello stato rappresentato dall'oggetto <see cref="T:System.Windows.VisualState" />. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il controllo entra nello stato specificato per il <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> proprietà, il <xref:System.Windows.VisualState.Storyboard%2A> inizia. Quando il controllo esce dallo stato, il <xref:System.Windows.VisualState.Storyboard%2A> viene arrestata.  
  
   
  
## Examples  
 L'esempio seguente viene creata una semplice <xref:System.Windows.Controls.ControlTemplate> per un <xref:System.Windows.Controls.Button> che contiene uno <xref:System.Windows.Controls.Grid>.  Il <xref:System.Windows.VisualState> chiamato `MouseOver` dispone di uno Storyboard che modifica il colore del <xref:System.Windows.Controls.Grid> da verde a rosso quando l'utente posiziona il mouse sopra il <xref:System.Windows.Controls.Button>.  Il <xref:System.Windows.VisualState> chiamato `Normal` viene incluso in modo che quando l'utente sposta il mouse dal pulsante, il <xref:System.Windows.Controls.Grid> nuovamente in verde.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>