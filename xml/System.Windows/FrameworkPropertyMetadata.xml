<Type Name="FrameworkPropertyMetadata" FullName="System.Windows.FrameworkPropertyMetadata">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c70304d7b52b8f4e76c37fd1e35de0928f9619c7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FrameworkPropertyMetadata : System.Windows.UIPropertyMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FrameworkPropertyMetadata extends System.Windows.UIPropertyMetadata" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FrameworkPropertyMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkPropertyMetadata&#xA;Inherits UIPropertyMetadata" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkPropertyMetadata : System::Windows::UIPropertyMetadata" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.UIPropertyMetadata</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="79342-101">Segnala o applica i metadati per una proprietà di dipendenza, aggiungendo specificamente le caratteristiche di sistema delle proprietà specifiche del framework.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79342-101">Reports or applies metadata for a dependency property, specifically adding framework-specific property system characteristics.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-102">Questa classe deriva da <xref:System.Windows.PropertyMetadata> (tramite <xref:System.Windows.UIPropertyMetadata>).</span><span class="sxs-lookup"><span data-stu-id="79342-102">This class derives from <xref:System.Windows.PropertyMetadata> (through <xref:System.Windows.UIPropertyMetadata>) .</span></span> <span data-ttu-id="79342-103">Per la maggior parte degli scopi di sviluppo a livello di framework applicazione WPF, <xref:System.Windows.FrameworkPropertyMetadata> è il tipo utilizzato per i metadati di proprietà di dipendenza, anziché i tipi di metadati di base <xref:System.Windows.PropertyMetadata> o <xref:System.Windows.UIPropertyMetadata>.</span><span class="sxs-lookup"><span data-stu-id="79342-103">For most WPF framework-level application development purposes, <xref:System.Windows.FrameworkPropertyMetadata> is the type used for dependency property metadata, rather than the base metadata types <xref:System.Windows.PropertyMetadata> or <xref:System.Windows.UIPropertyMetadata>.</span></span> <span data-ttu-id="79342-104">Questo vale sia per le proprietà di dipendenza esistenti e per la maggior parte degli scenari di proprietà di dipendenza personalizzata.</span><span class="sxs-lookup"><span data-stu-id="79342-104">This is true both for existing dependency properties and for most custom dependency property scenarios.</span></span>  
  
 <span data-ttu-id="79342-105">I membri dichiarati da questa classe che integrano la <xref:System.Windows.PropertyMetadata> classe di base includono diverse proprietà booleane che specificano o comportamento del sistema di proprietà a livello di framework WPF, ad esempio l'ereditarietà delle proprietà, l'associazione dati e layout di report.</span><span class="sxs-lookup"><span data-stu-id="79342-105">The members declared by this class that supplement the <xref:System.Windows.PropertyMetadata> base class include various Boolean properties that specify or report WPF framework-level property system behavior such as property inheritance, data binding, and layout.</span></span>  
  
 <span data-ttu-id="79342-106">Molte firme del costruttore per la creazione di un <xref:System.Windows.FrameworkPropertyMetadata> istanza accettano un <xref:System.Windows.FrameworkPropertyMetadataOptions> parametro.</span><span class="sxs-lookup"><span data-stu-id="79342-106">Several constructor signatures for creating a <xref:System.Windows.FrameworkPropertyMetadata> instance take a <xref:System.Windows.FrameworkPropertyMetadataOptions> parameter.</span></span> <span data-ttu-id="79342-107">Il <xref:System.Windows.FrameworkPropertyMetadataOptions> enumerazione viene utilizzata solo per specificare il comportamento iniziale nel costruttore e non è esposta dopo <xref:System.Windows.FrameworkPropertyMetadata> viene costruito.</span><span class="sxs-lookup"><span data-stu-id="79342-107">The <xref:System.Windows.FrameworkPropertyMetadataOptions> enumeration is used only to specify initial behavior in the constructor, and is not otherwise exposed after <xref:System.Windows.FrameworkPropertyMetadata> is constructed.</span></span> <span data-ttu-id="79342-108">Da un'istanza costruita, è possibile ottenere o impostare le informazioni corrispondenti tramite varie proprietà che condividono il nome dei valori di enumerazione utilizzato nella chiamata al costruttore.</span><span class="sxs-lookup"><span data-stu-id="79342-108">From a constructed instance, you can get or set the corresponding information through various properties that share the name of the enumeration values used in the constructor call.</span></span>  
  
<a name="xamlTextUsage_FrameworkPropertyMetadata"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="79342-109">Utilizzo di testo XAML</span><span class="sxs-lookup"><span data-stu-id="79342-109">XAML Text Usage</span></span>  
 <span data-ttu-id="79342-110">Questa classe non è in genere utilizzata in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="79342-110">This class is not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79342-111">Nell'esempio seguente ottiene i metadati per una proprietà di dipendenza su un particolare proprietario come iniziale base <xref:System.Windows.PropertyMetadata> tipo.</span><span class="sxs-lookup"><span data-stu-id="79342-111">The following example gets metadata for a dependency property on a particular owner as the initial base <xref:System.Windows.PropertyMetadata> type.</span></span> <span data-ttu-id="79342-112">Viene eseguito il cast dei metadati <xref:System.Windows.FrameworkPropertyMetadata>.</span><span class="sxs-lookup"><span data-stu-id="79342-112">That metadata is cast to <xref:System.Windows.FrameworkPropertyMetadata>.</span></span> <span data-ttu-id="79342-113">Se il cast ha restituito un valore valido <xref:System.Windows.FrameworkPropertyMetadata>, quindi varie <xref:System.Windows.FrameworkPropertyMetadata> i valori delle proprietà sono segnalati tramite un'interfaccia utente semplice (non illustrata).</span><span class="sxs-lookup"><span data-stu-id="79342-113">If the cast returned a valid <xref:System.Windows.FrameworkPropertyMetadata>, then various <xref:System.Windows.FrameworkPropertyMetadata> property values are reported through a simple UI (not shown).</span></span>  
  
 [!code-csharp[PropertySystemEsoterics#DPGetMetadataSingle](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]
 [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  
[!code-csharp[PropertySystemEsoterics#FPMProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/XAMLAPP/page2.xaml.cs#fpmproperties)]
[!code-vb[PropertySystemEsoterics#FPMProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.PropertyMetadata" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79342-114">Inizializza una nuova istanza della classe <see cref="T:System.Windows.FrameworkPropertyMetadata" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-114">Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class.</span>
          </span>
        </summary>
        <altmember cref="T:System.Windows.PropertyMetadata" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkPropertyMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkPropertyMetadata.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkPropertyMetadata();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79342-115">Inizializza una nuova istanza della classe <see cref="T:System.Windows.FrameworkPropertyMetadata" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-115">Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-116">Questa firma inizializza tutti i valori di <xref:System.Windows.FrameworkPropertyMetadata.%23ctor%2A> i valori di proprietà predefiniti.</span><span class="sxs-lookup"><span data-stu-id="79342-116">This signature initializes all values of <xref:System.Windows.FrameworkPropertyMetadata.%23ctor%2A> to their property defaults.</span></span> <span data-ttu-id="79342-117"><xref:System.Windows.PropertyMetadata.DefaultValue%2A> sarà `null`e i vari <xref:System.Windows.FrameworkPropertyMetadata> le proprietà booleane sarà `false`.</span><span class="sxs-lookup"><span data-stu-id="79342-117"><xref:System.Windows.PropertyMetadata.DefaultValue%2A> will be `null`, and the various <xref:System.Windows.FrameworkPropertyMetadata> Boolean properties will be `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.PropertyMetadata" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkPropertyMetadata (object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (defaultValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkPropertyMetadata(System::Object ^ defaultValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="defaultValue">
          <span data-ttu-id="79342-118">Valore predefinito della proprietà di dipendenza, in genere fornito come valore di un tipo specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-118">The default value of the dependency property, usually provided as a value of a specific type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79342-119">Inizializza una nuova istanza della classe <see cref="T:System.Windows.FrameworkPropertyMetadata" /> con il valore predefinito specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-119">Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the specified default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-120">Il tipo di valore fornito per `defaultValue` deve corrispondere o essere correlato al tipo specificato nella registrazione originale della proprietà di dipendenza che verranno applicati i metadati.</span><span class="sxs-lookup"><span data-stu-id="79342-120">The type of the value provided for `defaultValue` must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</span></span> <span data-ttu-id="79342-121">Mancata corrispondenza tra il tipo di valore di metadati predefinito e il tipo della proprietà di dipendenza applicata a può essere difficile eseguire il debug, in quanto la mancata corrispondenza non è rilevabile durante la compilazione.</span><span class="sxs-lookup"><span data-stu-id="79342-121">Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</span></span> <span data-ttu-id="79342-122">Il sistema di proprietà non valuta il valore effettivo di una proprietà in fase di esecuzione, pertanto il risultato della mancata corrispondenza di tipo o la proprietà tipo di valore predefinito è un errore di run-time.</span><span class="sxs-lookup"><span data-stu-id="79342-122">The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</span></span>  
  
 <span data-ttu-id="79342-123">Il valore <xref:System.Windows.DependencyProperty.UnsetValue> ha un significato speciale nel sistema di proprietà e non può essere utilizzato come un valore predefinito di proprietà di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="79342-123">The value <xref:System.Windows.DependencyProperty.UnsetValue> has special meaning in the property system, and cannot be used as a dependency property default value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79342-124">Questa firma del costruttore viene chiamato nell'esempio seguente:</span><span class="sxs-lookup"><span data-stu-id="79342-124">The following example calls this constructor signature:</span></span>  
  
 [!code-csharp[PropertyMetadataAPIs#Initfpm](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#initfpm)]  
[!code-csharp[PropertyMetadataAPIs#FPMCtor1param](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#fpmctor1param)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79342-125">
            <paramref name="defaultValue" /> è impostato su <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-125">
              <paramref name="defaultValue" /> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.PropertyMetadata" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkPropertyMetadata (System.Windows.PropertyChangedCallback propertyChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.PropertyChangedCallback propertyChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkPropertyMetadata(System::Windows::PropertyChangedCallback ^ propertyChangedCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyChangedCallback" Type="System.Windows.PropertyChangedCallback" />
      </Parameters>
      <Docs>
        <param name="propertyChangedCallback">
          <span data-ttu-id="79342-126">Un riferimento ad un'implementazione del gestore che il sistema di proprietà chiamerà ogni volta che il valore effettivo della proprietà si modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-126">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79342-127">Inizializza una nuova istanza della classe <see cref="T:System.Windows.FrameworkPropertyMetadata" /> con il callback specificato <see cref="T:System.Windows.PropertyChangedCallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-127">Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the specified <see cref="T:System.Windows.PropertyChangedCallback" /> callback.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="79342-128">Questa firma del costruttore viene chiamato nell'esempio seguente:</span><span class="sxs-lookup"><span data-stu-id="79342-128">The following example calls this constructor signature:</span></span>  
  
 [!code-csharp[PropertyMetadataAPIs#Initfpm](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#initfpm)]  
[!code-csharp[PropertyMetadataAPIs#FPMCtor1paramcallback](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#fpmctor1paramcallback)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object defaultValue, valuetype System.Windows.FrameworkPropertyMetadataOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (defaultValue As Object, flags As FrameworkPropertyMetadataOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkPropertyMetadata(System::Object ^ defaultValue, System::Windows::FrameworkPropertyMetadataOptions flags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="flags" Type="System.Windows.FrameworkPropertyMetadataOptions" />
      </Parameters>
      <Docs>
        <param name="defaultValue">
          <span data-ttu-id="79342-129">Valore predefinito della proprietà di dipendenza, in genere fornito come valore di un tipo specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-129">The default value of the dependency property, usually provided as a value of a specific type.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="79342-130">Flag dell’opzione dei metadati (una combinazione dei valori <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> ).</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-130">The metadata option flags (a combination of <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> values).</span>
          </span>
          <span data-ttu-id="79342-131">Queste opzioni specificano le caratteristiche della proprietà di dipendenza che interagiscono con sistemi come ad esempio layout o associazione dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-131">These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79342-132">Inizializza una nuova istanza della classe <see cref="T:System.Windows.FrameworkPropertyMetadata" /> con il valore fornito predefinito e le opzioni dei metadati a livello di framework.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-132">Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the provided default value and framework-level metadata options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-133">Il tipo di valore fornito per `defaultValue` deve corrispondere o essere correlato al tipo specificato nella registrazione originale della proprietà di dipendenza che verranno applicati i metadati.</span><span class="sxs-lookup"><span data-stu-id="79342-133">The type of the value provided for `defaultValue` must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</span></span> <span data-ttu-id="79342-134">Mancata corrispondenza tra il tipo di valore di metadati predefinito e il tipo della proprietà di dipendenza applicata a può essere difficile eseguire il debug, in quanto la mancata corrispondenza non è rilevabile durante la compilazione.</span><span class="sxs-lookup"><span data-stu-id="79342-134">Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</span></span> <span data-ttu-id="79342-135">Il sistema di proprietà non valuta il valore effettivo di una proprietà in fase di esecuzione, pertanto il risultato della mancata corrispondenza di tipo o la proprietà tipo di valore predefinito è un errore di run-time.</span><span class="sxs-lookup"><span data-stu-id="79342-135">The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</span></span>  
  
 <span data-ttu-id="79342-136">Il valore <xref:System.Windows.DependencyProperty.UnsetValue> ha un significato speciale nel sistema di proprietà e non può essere utilizzato come un valore predefinito di proprietà di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="79342-136">The value <xref:System.Windows.DependencyProperty.UnsetValue> has special meaning in the property system, and cannot be used as a dependency property default value.</span></span>  
  
 <span data-ttu-id="79342-137">I valori contrassegnati come flag impostati nel `flags` parametro verrà impostato il valore booleano di <xref:System.Windows.FrameworkPropertyMetadata> le proprietà corrispondenti che <xref:System.Windows.FrameworkPropertyMetadataOptions> nome flag a `true`.</span><span class="sxs-lookup"><span data-stu-id="79342-137">Values marked as set flags in the `flags` parameter will set the Boolean value of <xref:System.Windows.FrameworkPropertyMetadata> properties that match that <xref:System.Windows.FrameworkPropertyMetadataOptions> flag's name to `true`.</span></span> <span data-ttu-id="79342-138">Successivamente, è possibile modificare i valori delle proprietà nei metadati, purché i metadati non sono ancora applicato a un'operazione di sistema di proprietà specifici.</span><span class="sxs-lookup"><span data-stu-id="79342-138">You can subsequently change the values of the properties in the metadata, as long as the metadata has not yet been applied to a specific property system operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79342-139">Questa firma del costruttore viene chiamato nell'esempio seguente:</span><span class="sxs-lookup"><span data-stu-id="79342-139">The following example calls this constructor signature:</span></span>  
  
 [!code-csharp[PropertyMetadataAPIs#Initfpm](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#initfpm)]  
[!code-csharp[PropertyMetadataAPIs#FPMCtor_DV_FPMO](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#fpmctor_dv_fpmo)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79342-140">
            <paramref name="defaultValue" /> è impostato su <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-140">
              <paramref name="defaultValue" /> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.PropertyMetadata" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkPropertyMetadata (object defaultValue, System.Windows.PropertyChangedCallback propertyChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object defaultValue, class System.Windows.PropertyChangedCallback propertyChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkPropertyMetadata(System::Object ^ defaultValue, System::Windows::PropertyChangedCallback ^ propertyChangedCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="propertyChangedCallback" Type="System.Windows.PropertyChangedCallback" />
      </Parameters>
      <Docs>
        <param name="defaultValue">
          <span data-ttu-id="79342-141">Valore predefinito della proprietà di dipendenza, in genere fornito come valore di un tipo specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-141">The default value of the dependency property, usually provided as a value of a specific type.</span>
          </span>
        </param>
        <param name="propertyChangedCallback">
          <span data-ttu-id="79342-142">Un riferimento ad un'implementazione del gestore che il sistema di proprietà chiamerà ogni volta che il valore effettivo della proprietà si modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-142">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79342-143">Inizializza una nuova istanza della classe <see cref="T:System.Windows.FrameworkPropertyMetadata" />  con il valore fornito predefinito e il callback specificato <see cref="T:System.Windows.PropertyChangedCallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-143">Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the provided default value and specified <see cref="T:System.Windows.PropertyChangedCallback" /> callback.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-144">Il tipo di valore fornito per `defaultValue` deve corrispondere o essere correlato al tipo specificato nella registrazione originale della proprietà di dipendenza che verranno applicati i metadati.</span><span class="sxs-lookup"><span data-stu-id="79342-144">The type of the value provided for `defaultValue` must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</span></span> <span data-ttu-id="79342-145">Mancata corrispondenza tra il tipo di valore di metadati predefinito e il tipo della proprietà di dipendenza applicata a può essere difficile eseguire il debug, in quanto la mancata corrispondenza non è rilevabile durante la compilazione.</span><span class="sxs-lookup"><span data-stu-id="79342-145">Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</span></span> <span data-ttu-id="79342-146">Il sistema di proprietà non valuta il valore effettivo di una proprietà in fase di esecuzione, pertanto il risultato della mancata corrispondenza di tipo o la proprietà tipo di valore predefinito è un errore di run-time.</span><span class="sxs-lookup"><span data-stu-id="79342-146">The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</span></span>  
  
 <span data-ttu-id="79342-147">Il valore <xref:System.Windows.DependencyProperty.UnsetValue> ha un significato speciale nel sistema di proprietà e non può essere utilizzato come un valore predefinito di proprietà di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="79342-147">The value <xref:System.Windows.DependencyProperty.UnsetValue> has special meaning in the property system, and cannot be used as a dependency property default value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79342-148">Questa firma del costruttore viene chiamato nell'esempio seguente:</span><span class="sxs-lookup"><span data-stu-id="79342-148">The following example calls this constructor signature:</span></span>  
  
 [!code-csharp[PropertyMetadataAPIs#Initfpm](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#initfpm)]  
[!code-csharp[PropertyMetadataAPIs#FPMCtor2param](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#fpmctor2param)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79342-149">
            <paramref name="defaultValue" /> è impostato su <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-149">
              <paramref name="defaultValue" /> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.PropertyMetadata" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkPropertyMetadata (System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.PropertyChangedCallback propertyChangedCallback, class System.Windows.CoerceValueCallback coerceValueCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkPropertyMetadata(System::Windows::PropertyChangedCallback ^ propertyChangedCallback, System::Windows::CoerceValueCallback ^ coerceValueCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyChangedCallback" Type="System.Windows.PropertyChangedCallback" />
        <Parameter Name="coerceValueCallback" Type="System.Windows.CoerceValueCallback" />
      </Parameters>
      <Docs>
        <param name="propertyChangedCallback">
          <span data-ttu-id="79342-150">Un riferimento ad un'implementazione del gestore che il sistema di proprietà chiamerà ogni volta che il valore effettivo della proprietà si modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-150">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</span>
          </span>
        </param>
        <param name="coerceValueCallback">
          <span data-ttu-id="79342-151">Un riferimento ad un'implementazione del gestore sarà richiesto ogni qualvolta il sistema di proprietà chiamerà <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> per questa proprietà di dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-151">A reference to a handler implementation will be called whenever the property system calls <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> for this dependency property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79342-152">Inizializza una nuova istanza della classe <see cref="T:System.Windows.FrameworkPropertyMetadata" /> con i callback specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-152">Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the specified callbacks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-153">Questa implementazione chiama un inizializzatore di base e quindi aggiunge la `coerceValueCallback` impostando la proprietà sull'istanza di base.</span><span class="sxs-lookup"><span data-stu-id="79342-153">This implementation calls a base initializer and then adds the `coerceValueCallback` by setting the property on the base instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79342-154">Questa firma del costruttore viene chiamato nell'esempio seguente:</span><span class="sxs-lookup"><span data-stu-id="79342-154">The following example calls this constructor signature:</span></span>  
  
 [!code-csharp[PropertyMetadataAPIs#Initfpm](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#initfpm)]  
[!code-csharp[PropertyMetadataAPIs#FPMCtor_PCC_CVC](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#fpmctor_pcc_cvc)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.PropertyMetadata" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags, System.Windows.PropertyChangedCallback propertyChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object defaultValue, valuetype System.Windows.FrameworkPropertyMetadataOptions flags, class System.Windows.PropertyChangedCallback propertyChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkPropertyMetadata(System::Object ^ defaultValue, System::Windows::FrameworkPropertyMetadataOptions flags, System::Windows::PropertyChangedCallback ^ propertyChangedCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="flags" Type="System.Windows.FrameworkPropertyMetadataOptions" />
        <Parameter Name="propertyChangedCallback" Type="System.Windows.PropertyChangedCallback" />
      </Parameters>
      <Docs>
        <param name="defaultValue">
          <span data-ttu-id="79342-155">Valore predefinito della proprietà di dipendenza, in genere fornito come valore di un tipo specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-155">The default value of the dependency property, usually provided as a value of a specific type.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="79342-156">Flag dell’opzione dei metadati (una combinazione dei valori <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> ).</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-156">The metadata option flags (a combination of <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> values).</span>
          </span>
          <span data-ttu-id="79342-157">Queste opzioni specificano le caratteristiche della proprietà di dipendenza che interagiscono con sistemi come ad esempio layout o associazione dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-157">These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</span>
          </span>
        </param>
        <param name="propertyChangedCallback">
          <span data-ttu-id="79342-158">Un riferimento ad un'implementazione del gestore che il sistema di proprietà chiamerà ogni volta che il valore effettivo della proprietà si modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-158">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79342-159">Inizializza una nuova istanza della classe <see cref="T:System.Windows.FrameworkPropertyMetadata" /> con il valore fornito predefinito e le opzioni dei metadati a livello di framework, e il callback specificato <see cref="T:System.Windows.PropertyChangedCallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-159">Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the provided default value and framework metadata options, and specified <see cref="T:System.Windows.PropertyChangedCallback" /> callback.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-160">Il tipo di valore fornito per `defaultValue` deve corrispondere o essere correlato al tipo specificato nella registrazione originale della proprietà di dipendenza che verranno applicati i metadati.</span><span class="sxs-lookup"><span data-stu-id="79342-160">The type of the value provided for `defaultValue` must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</span></span> <span data-ttu-id="79342-161">Mancata corrispondenza tra il tipo di valore di metadati predefinito e il tipo della proprietà di dipendenza applicata a può essere difficile eseguire il debug, in quanto la mancata corrispondenza non è rilevabile durante la compilazione.</span><span class="sxs-lookup"><span data-stu-id="79342-161">Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</span></span> <span data-ttu-id="79342-162">Il sistema di proprietà non valuta il valore effettivo di una proprietà in fase di esecuzione, pertanto il risultato della mancata corrispondenza di tipo o la proprietà tipo di valore predefinito è un errore di run-time.</span><span class="sxs-lookup"><span data-stu-id="79342-162">The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</span></span>  
  
 <span data-ttu-id="79342-163">Il valore <xref:System.Windows.DependencyProperty.UnsetValue> ha un significato speciale nel sistema di proprietà e non può essere utilizzato come un valore predefinito di proprietà di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="79342-163">The value <xref:System.Windows.DependencyProperty.UnsetValue> has special meaning in the property system, and cannot be used as a dependency property default value.</span></span>  
  
 <span data-ttu-id="79342-164">I valori contrassegnati come flag impostati nel `flags` parametro verrà impostato il valore booleano di <xref:System.Windows.FrameworkPropertyMetadata> le proprietà corrispondenti che <xref:System.Windows.FrameworkPropertyMetadataOptions> nome flag a `true`.</span><span class="sxs-lookup"><span data-stu-id="79342-164">Values marked as set flags in the `flags` parameter will set the Boolean value of <xref:System.Windows.FrameworkPropertyMetadata> properties that match that <xref:System.Windows.FrameworkPropertyMetadataOptions> flag's name to `true`.</span></span> <span data-ttu-id="79342-165">È comunque possibile modificare i valori delle proprietà nei metadati, purché i metadati non sono ancora applicato a un'operazione di sistema di proprietà specifici.</span><span class="sxs-lookup"><span data-stu-id="79342-165">You can still change the values of the properties in the metadata, as long as the metadata has not yet been applied to a specific property system operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79342-166">Questa firma del costruttore viene chiamato nell'esempio seguente:</span><span class="sxs-lookup"><span data-stu-id="79342-166">The following example calls this constructor signature:</span></span>  
  
 [!code-csharp[PropertyMetadataAPIs#Initfpm](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#initfpm)]  
[!code-csharp[PropertyMetadataAPIs#FPMCtor_DV_FPMO_PCC](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#fpmctor_dv_fpmo_pcc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79342-167">
            <paramref name="defaultValue" /> è impostato su <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-167">
              <paramref name="defaultValue" /> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.PropertyMetadata" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkPropertyMetadata (object defaultValue, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object defaultValue, class System.Windows.PropertyChangedCallback propertyChangedCallback, class System.Windows.CoerceValueCallback coerceValueCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkPropertyMetadata(System::Object ^ defaultValue, System::Windows::PropertyChangedCallback ^ propertyChangedCallback, System::Windows::CoerceValueCallback ^ coerceValueCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="propertyChangedCallback" Type="System.Windows.PropertyChangedCallback" />
        <Parameter Name="coerceValueCallback" Type="System.Windows.CoerceValueCallback" />
      </Parameters>
      <Docs>
        <param name="defaultValue">
          <span data-ttu-id="79342-168">Valore predefinito della proprietà di dipendenza, in genere fornito come tipo specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-168">The default value of the dependency property, usually provided as a specific type.</span>
          </span>
        </param>
        <param name="propertyChangedCallback">
          <span data-ttu-id="79342-169">Un riferimento ad un'implementazione del gestore che il sistema di proprietà chiamerà ogni volta che il valore effettivo della proprietà si modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-169">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</span>
          </span>
        </param>
        <param name="coerceValueCallback">
          <span data-ttu-id="79342-170">Un riferimento ad un'implementazione del gestore che sarà richiesto ogni qualvolta il sistema di proprietà chiamerà <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> per questa proprietà di dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-170">A reference to a handler implementation that will be called whenever the property system calls <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> for this dependency property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79342-171">Inizializza una nuova istanza della classe <see cref="T:System.Windows.FrameworkPropertyMetadata" />  con il valore fornito predefinito e i callback specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-171">Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the provided default value and specified callbacks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-172">Il tipo di valore fornito per `defaultValue` deve corrispondere o essere correlato al tipo specificato nella registrazione originale della proprietà di dipendenza che verranno applicati i metadati.</span><span class="sxs-lookup"><span data-stu-id="79342-172">The type of the value provided for `defaultValue` must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</span></span> <span data-ttu-id="79342-173">Mancata corrispondenza tra il tipo di valore di metadati predefinito e il tipo della proprietà di dipendenza applicata a può essere difficile eseguire il debug, in quanto la mancata corrispondenza non è rilevabile durante la compilazione.</span><span class="sxs-lookup"><span data-stu-id="79342-173">Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</span></span> <span data-ttu-id="79342-174">Il sistema di proprietà non valuta il valore effettivo di una proprietà in fase di esecuzione, pertanto il risultato della mancata corrispondenza di tipo o la proprietà tipo di valore predefinito è un errore di run-time.</span><span class="sxs-lookup"><span data-stu-id="79342-174">The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</span></span>  
  
 <span data-ttu-id="79342-175">Il valore <xref:System.Windows.DependencyProperty.UnsetValue> ha un significato speciale nel sistema di proprietà e non può essere utilizzato come un valore predefinito di proprietà di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="79342-175">The value <xref:System.Windows.DependencyProperty.UnsetValue> has special meaning in the property system, and cannot be used as a dependency property default value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79342-176">Questa firma del costruttore viene chiamato nell'esempio seguente:</span><span class="sxs-lookup"><span data-stu-id="79342-176">The following example calls this constructor signature:</span></span>  
  
 [!code-csharp[PropertyMetadataAPIs#Initfpm](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#initfpm)]  
[!code-csharp[PropertyMetadataAPIs#FPMCtor3param](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#fpmctor3param)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79342-177">
            <paramref name="defaultValue" /> è impostato su <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-177">
              <paramref name="defaultValue" /> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.PropertyMetadata" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object defaultValue, valuetype System.Windows.FrameworkPropertyMetadataOptions flags, class System.Windows.PropertyChangedCallback propertyChangedCallback, class System.Windows.CoerceValueCallback coerceValueCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkPropertyMetadata(System::Object ^ defaultValue, System::Windows::FrameworkPropertyMetadataOptions flags, System::Windows::PropertyChangedCallback ^ propertyChangedCallback, System::Windows::CoerceValueCallback ^ coerceValueCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="flags" Type="System.Windows.FrameworkPropertyMetadataOptions" />
        <Parameter Name="propertyChangedCallback" Type="System.Windows.PropertyChangedCallback" />
        <Parameter Name="coerceValueCallback" Type="System.Windows.CoerceValueCallback" />
      </Parameters>
      <Docs>
        <param name="defaultValue">
          <span data-ttu-id="79342-178">Valore predefinito della proprietà di dipendenza, in genere fornito come tipo specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-178">The default value of the dependency property, usually provided as a specific type.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="79342-179">Flag dell’opzione dei metadati (una combinazione dei valori <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> ).</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-179">The metadata option flags (a combination of <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> values).</span>
          </span>
          <span data-ttu-id="79342-180">Queste opzioni specificano le caratteristiche della proprietà di dipendenza che interagiscono con sistemi come ad esempio layout o associazione dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-180">These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</span>
          </span>
        </param>
        <param name="propertyChangedCallback">
          <span data-ttu-id="79342-181">Un riferimento ad un'implementazione del gestore che il sistema di proprietà chiamerà ogni volta che il valore effettivo della proprietà si modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-181">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</span>
          </span>
        </param>
        <param name="coerceValueCallback">
          <span data-ttu-id="79342-182">Un riferimento ad un'implementazione del gestore che sarà richiesto ogni qualvolta il sistema di proprietà eseguirà chiamate <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> a questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-182">A reference to a handler implementation that will be called whenever the property system calls <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> against this property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79342-183">Inizializza una nuova istanza della classe <see cref="T:System.Windows.FrameworkPropertyMetadata" /> con il valore fornito predefinito e le opzioni dei metadati a livello di framework, e i callback specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-183">Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the provided default value and framework metadata options, and specified callbacks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-184">Il tipo di valore fornito per `defaultValue` deve corrispondere o essere correlato al tipo specificato nella registrazione originale della proprietà di dipendenza che verranno applicati i metadati.</span><span class="sxs-lookup"><span data-stu-id="79342-184">The type of the value provided for `defaultValue` must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</span></span> <span data-ttu-id="79342-185">Mancata corrispondenza tra il tipo di valore di metadati predefinito e il tipo della proprietà di dipendenza applicata a può essere difficile eseguire il debug, in quanto la mancata corrispondenza non è rilevabile durante la compilazione.</span><span class="sxs-lookup"><span data-stu-id="79342-185">Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</span></span> <span data-ttu-id="79342-186">Il sistema di proprietà non valuta il valore effettivo di una proprietà in fase di esecuzione, pertanto il risultato della mancata corrispondenza di tipo o la proprietà tipo di valore predefinito è un errore di run-time.</span><span class="sxs-lookup"><span data-stu-id="79342-186">The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</span></span>  
  
 <span data-ttu-id="79342-187">Il valore <xref:System.Windows.DependencyProperty.UnsetValue> ha un significato speciale nel sistema di proprietà e non può essere utilizzato come un valore predefinito di proprietà di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="79342-187">The value <xref:System.Windows.DependencyProperty.UnsetValue> has special meaning in the property system, and cannot be used as a dependency property default value.</span></span>  
  
 <span data-ttu-id="79342-188">I valori contrassegnati come flag impostati nel `flags` parametro verrà impostato il valore booleano di <xref:System.Windows.FrameworkPropertyMetadata> le proprietà corrispondenti che <xref:System.Windows.FrameworkPropertyMetadataOptions> nome flag a `true`.</span><span class="sxs-lookup"><span data-stu-id="79342-188">Values marked as set flags in the `flags` parameter will set the Boolean value of <xref:System.Windows.FrameworkPropertyMetadata> properties that match that <xref:System.Windows.FrameworkPropertyMetadataOptions> flag's name to `true`.</span></span> <span data-ttu-id="79342-189">È comunque possibile modificare i valori delle proprietà nei metadati, purché i metadati non sono ancora applicato a un'operazione di sistema di proprietà specifici.</span><span class="sxs-lookup"><span data-stu-id="79342-189">You can still change the values of the properties in the metadata, as long as the metadata has not yet been applied to a specific property system operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79342-190">Questa firma del costruttore viene chiamato nell'esempio seguente:</span><span class="sxs-lookup"><span data-stu-id="79342-190">The following example calls this constructor signature:</span></span>  
  
 [!code-csharp[PropertyMetadataAPIs#Initfpm](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#initfpm)]  
[!code-csharp[PropertyMetadataAPIs#FPMCtor_DV_FPMO_PCC_CVC](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#fpmctor_dv_fpmo_pcc_cvc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79342-191">
            <paramref name="defaultValue" /> è impostato su <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-191">
              <paramref name="defaultValue" /> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.PropertyMetadata" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback, bool isAnimationProhibited);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object defaultValue, valuetype System.Windows.FrameworkPropertyMetadataOptions flags, class System.Windows.PropertyChangedCallback propertyChangedCallback, class System.Windows.CoerceValueCallback coerceValueCallback, bool isAnimationProhibited) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkPropertyMetadata(System::Object ^ defaultValue, System::Windows::FrameworkPropertyMetadataOptions flags, System::Windows::PropertyChangedCallback ^ propertyChangedCallback, System::Windows::CoerceValueCallback ^ coerceValueCallback, bool isAnimationProhibited);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="flags" Type="System.Windows.FrameworkPropertyMetadataOptions" />
        <Parameter Name="propertyChangedCallback" Type="System.Windows.PropertyChangedCallback" />
        <Parameter Name="coerceValueCallback" Type="System.Windows.CoerceValueCallback" />
        <Parameter Name="isAnimationProhibited" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="defaultValue">
          <span data-ttu-id="79342-192">Valore predefinito della proprietà di dipendenza, in genere fornito come tipo specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-192">The default value of the dependency property, usually provided as a specific type.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="79342-193">Flag dell’opzione dei metadati (una combinazione dei valori <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> ).</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-193">The metadata option flags (a combination of <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> values).</span>
          </span>
          <span data-ttu-id="79342-194">Queste opzioni specificano le caratteristiche della proprietà di dipendenza che interagiscono con sistemi come ad esempio layout o associazione dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-194">These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</span>
          </span>
        </param>
        <param name="propertyChangedCallback">
          <span data-ttu-id="79342-195">Un riferimento ad un'implementazione del gestore che il sistema di proprietà chiamerà ogni volta che il valore effettivo della proprietà si modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-195">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</span>
          </span>
        </param>
        <param name="coerceValueCallback">
          <span data-ttu-id="79342-196">Un riferimento ad un'implementazione del gestore che sarà richiesto ogni qualvolta il sistema di proprietà eseguirà una chiamata <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> su questa proprietà di dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-196">A reference to a handler implementation that will be called whenever the property system calls <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> on this dependency property.</span>
          </span>
        </param>
        <param name="isAnimationProhibited">
          <span data-ttu-id="79342-197">
            <see langword="true" /> per impedire che il sistema di proprietà aggiunga un’animazione alla proprietà alla quale questi metadati sono applicati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-197">
              <see langword="true" /> to prevent the property system from animating the property that this metadata is applied to.</span>
          </span>
          <span data-ttu-id="79342-198">Tali proprietà genereranno un'eccezione in fase di esecuzione di origine dal sistema di proprietà se si tenta di aggiungere animazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-198">Such properties will raise a run-time exception originating from the property system if animations of them are attempted.</span>
          </span>
          <span data-ttu-id="79342-199">
            <see langword="false" /> per consentire l'animazione della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-199">
              <see langword="false" /> to permit animating the property.</span>
          </span>
          <span data-ttu-id="79342-200">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-200">The default is <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79342-201">Inizializza una nuova istanza della classe <see cref="T:System.Windows.FrameworkPropertyMetadata" /> con il valore fornito predefinito ed opzioni di metadati di framework, callback specificati ed un Booleano che può essere utilizzato per impedire l’animazione della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-201">Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the provided default value and framework metadata options, specified callbacks, and a Boolean that can be used to prevent animation of the property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-202">Il tipo di valore fornito per `defaultValue` deve corrispondere o essere correlato al tipo specificato nella registrazione originale della proprietà di dipendenza che verranno applicati i metadati.</span><span class="sxs-lookup"><span data-stu-id="79342-202">The type of the value provided for `defaultValue` must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</span></span> <span data-ttu-id="79342-203">Mancata corrispondenza tra il tipo di valore di metadati predefinito e il tipo della proprietà di dipendenza applicata a può essere difficile eseguire il debug, in quanto la mancata corrispondenza non è rilevabile durante la compilazione.</span><span class="sxs-lookup"><span data-stu-id="79342-203">Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</span></span> <span data-ttu-id="79342-204">Il sistema di proprietà non valuta il valore effettivo di una proprietà in fase di esecuzione, pertanto il risultato della mancata corrispondenza di tipo o la proprietà tipo di valore predefinito è un errore di run-time.</span><span class="sxs-lookup"><span data-stu-id="79342-204">The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</span></span>  
  
 <span data-ttu-id="79342-205">Il valore <xref:System.Windows.DependencyProperty.UnsetValue> ha un significato speciale nel sistema di proprietà e non può essere utilizzato come un valore predefinito di proprietà di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="79342-205">The value <xref:System.Windows.DependencyProperty.UnsetValue> has special meaning in the property system, and cannot be used as a dependency property default value.</span></span>  
  
 <span data-ttu-id="79342-206">Il `isAnimationProhibited` parametro imposta il valore iniziale del <xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A> proprietà dichiarata dal tipo di base immediata <xref:System.Windows.UIPropertyMetadata> classe.</span><span class="sxs-lookup"><span data-stu-id="79342-206">The `isAnimationProhibited` parameter sets the initial value of the <xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A> property declared by the immediate base <xref:System.Windows.UIPropertyMetadata> class.</span></span>  
  
 <span data-ttu-id="79342-207">I valori contrassegnati come flag impostati nel `flags` parametro verrà impostato il valore booleano di <xref:System.Windows.FrameworkPropertyMetadata> le proprietà corrispondenti che <xref:System.Windows.FrameworkPropertyMetadataOptions> nome flag a `true`.</span><span class="sxs-lookup"><span data-stu-id="79342-207">Values marked as set flags in the `flags` parameter will set the Boolean value of <xref:System.Windows.FrameworkPropertyMetadata> properties that match that <xref:System.Windows.FrameworkPropertyMetadataOptions> flag's name to `true`.</span></span> <span data-ttu-id="79342-208">È comunque possibile modificare i valori delle proprietà nei metadati, purché i metadati non sono ancora applicato a un'operazione di sistema di proprietà specifici.</span><span class="sxs-lookup"><span data-stu-id="79342-208">You can still change the values of the properties in the metadata, as long as the metadata has not yet been applied to a specific property system operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79342-209">Questa firma del costruttore viene chiamato nell'esempio seguente:</span><span class="sxs-lookup"><span data-stu-id="79342-209">The following example calls this constructor signature:</span></span>  
  
 [!code-csharp[PropertyMetadataAPIs#Initfpm](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#initfpm)]  
[!code-csharp[PropertyMetadataAPIs#FPMCtor_DV_FPMO_PCC_CVC_IAP](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#fpmctor_dv_fpmo_pcc_cvc_iap)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79342-210">
            <paramref name="defaultValue" /> è impostato su <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-210">
              <paramref name="defaultValue" /> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.PropertyMetadata" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback, bool isAnimationProhibited, System.Windows.Data.UpdateSourceTrigger defaultUpdateSourceTrigger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object defaultValue, valuetype System.Windows.FrameworkPropertyMetadataOptions flags, class System.Windows.PropertyChangedCallback propertyChangedCallback, class System.Windows.CoerceValueCallback coerceValueCallback, bool isAnimationProhibited, valuetype System.Windows.Data.UpdateSourceTrigger defaultUpdateSourceTrigger) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkPropertyMetadata(System::Object ^ defaultValue, System::Windows::FrameworkPropertyMetadataOptions flags, System::Windows::PropertyChangedCallback ^ propertyChangedCallback, System::Windows::CoerceValueCallback ^ coerceValueCallback, bool isAnimationProhibited, System::Windows::Data::UpdateSourceTrigger defaultUpdateSourceTrigger);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="flags" Type="System.Windows.FrameworkPropertyMetadataOptions" />
        <Parameter Name="propertyChangedCallback" Type="System.Windows.PropertyChangedCallback" />
        <Parameter Name="coerceValueCallback" Type="System.Windows.CoerceValueCallback" />
        <Parameter Name="isAnimationProhibited" Type="System.Boolean" />
        <Parameter Name="defaultUpdateSourceTrigger" Type="System.Windows.Data.UpdateSourceTrigger" />
      </Parameters>
      <Docs>
        <param name="defaultValue">
          <span data-ttu-id="79342-211">Valore predefinito della proprietà di dipendenza, in genere fornito come tipo specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-211">The default value of the dependency property, usually provided as a specific type.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="79342-212">Flag dell’opzione dei metadati (una combinazione dei valori <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> ).</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-212">The metadata option flags (a combination of <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> values).</span>
          </span>
          <span data-ttu-id="79342-213">Queste opzioni specificano le caratteristiche della proprietà di dipendenza che interagiscono con sistemi come ad esempio layout o associazione dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-213">These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</span>
          </span>
        </param>
        <param name="propertyChangedCallback">
          <span data-ttu-id="79342-214">Un riferimento ad un'implementazione del gestore che il sistema di proprietà chiamerà ogni volta che il valore effettivo della proprietà si modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-214">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</span>
          </span>
        </param>
        <param name="coerceValueCallback">
          <span data-ttu-id="79342-215">Un riferimento ad un'implementazione del gestore che sarà richiesto ogni qualvolta il sistema di proprietà eseguirà chiamate <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> a questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-215">A reference to a handler implementation that will be called whenever the property system calls <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> against this property.</span>
          </span>
        </param>
        <param name="isAnimationProhibited">
          <span data-ttu-id="79342-216">
            <see langword="true" /> per impedire che il sistema di proprietà aggiunga un’animazione alla proprietà alla quale questi metadati sono applicati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-216">
              <see langword="true" /> to prevent the property system from animating the property that this metadata is applied to.</span>
          </span>
          <span data-ttu-id="79342-217">Tali proprietà genereranno un'eccezione in fase di esecuzione di origine dal sistema di proprietà se si tenta di aggiungere animazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-217">Such properties will raise a run-time exception originating from the property system if animations of them are attempted.</span>
          </span>
          <span data-ttu-id="79342-218">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-218">The default is <see langword="false" />.</span>
          </span>
        </param>
        <param name="defaultUpdateSourceTrigger">
          <span data-ttu-id="79342-219">
            <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> da utilizzare quando le associazioni per questa proprietà sono applicate ed hanno <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> impostato a <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-219">The <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> to use when bindings for this property are applied that have their <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> set to <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79342-220">Inizializza una nuova istanza della classe <see cref="T:System.Windows.FrameworkPropertyMetadata" /> con il valore fornito predefinito ed opzioni di metadati di framework, callback specificati ed un Booleano che può essere utilizzato per impedire l’animazione della proprietà, e un'impostazione predefinita di trigger di aggiornamento di associazione dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-220">Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata" /> class with the provided default value and framework metadata options, specified callbacks, a Boolean that can be used to prevent animation of the property, and a data-binding update trigger default.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-221">Il tipo di valore fornito per `defaultValue` deve corrispondere o essere correlato al tipo specificato nella registrazione originale della proprietà di dipendenza che verranno applicati i metadati.</span><span class="sxs-lookup"><span data-stu-id="79342-221">The type of the value provided for `defaultValue` must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</span></span> <span data-ttu-id="79342-222">Mancata corrispondenza tra il tipo di valore di metadati predefinito e il tipo della proprietà di dipendenza applicata a può essere difficile eseguire il debug, in quanto la mancata corrispondenza non è rilevabile durante la compilazione.</span><span class="sxs-lookup"><span data-stu-id="79342-222">Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</span></span> <span data-ttu-id="79342-223">Il sistema di proprietà non valuta il valore effettivo di una proprietà in fase di esecuzione, pertanto il risultato della mancata corrispondenza di tipo o la proprietà tipo di valore predefinito è un errore di run-time.</span><span class="sxs-lookup"><span data-stu-id="79342-223">The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</span></span>  
  
 <span data-ttu-id="79342-224">Il valore <xref:System.Windows.DependencyProperty.UnsetValue> ha un significato speciale nel sistema di proprietà e non può essere utilizzato come un valore predefinito di proprietà di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="79342-224">The value <xref:System.Windows.DependencyProperty.UnsetValue> has special meaning in the property system, and cannot be used as a dependency property default value.</span></span>  
  
 <span data-ttu-id="79342-225">Il `isAnimationProhibited` parametro imposta il valore iniziale del <xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A> proprietà dichiarata dal tipo di base immediata <xref:System.Windows.UIPropertyMetadata> classe.</span><span class="sxs-lookup"><span data-stu-id="79342-225">The `isAnimationProhibited` parameter sets the initial value of the <xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A> property declared by the immediate base <xref:System.Windows.UIPropertyMetadata> class.</span></span>  
  
 <span data-ttu-id="79342-226">Per ulteriori informazioni sul comportamento di origine di aggiornamento per i binding, vedere [Panoramica del Data Binding](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="79342-226">For more information about the update source behavior for bindings, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="79342-227">I valori contrassegnati come flag impostati nel `flags` parametro verrà impostato il valore booleano di <xref:System.Windows.FrameworkPropertyMetadata> le proprietà corrispondenti che <xref:System.Windows.FrameworkPropertyMetadataOptions> nome flag a `true`.</span><span class="sxs-lookup"><span data-stu-id="79342-227">Values marked as set flags in the `flags` parameter will set the Boolean value of <xref:System.Windows.FrameworkPropertyMetadata> properties that match that <xref:System.Windows.FrameworkPropertyMetadataOptions> flag's name to `true`.</span></span> <span data-ttu-id="79342-228">È comunque possibile modificare i valori delle proprietà nei metadati, purché i metadati non sono ancora applicato a un'operazione di sistema di proprietà specifici.</span><span class="sxs-lookup"><span data-stu-id="79342-228">You can still change the values of the properties in the metadata, as long as the metadata has not yet been applied to a specific property system operation.</span></span>  
  
   
  
## Examples  
 [!code-csharp[PropertyMetadataAPIs#Initfpm](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#initfpm)]  
[!code-csharp[PropertyMetadataAPIs#FPMCtor_DV_FPMO_PCC_CVC_IAP_DUST](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMetadataAPIs/CSharp/Class1.cs#fpmctor_dv_fpmo_pcc_cvc_iap_dust)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79342-229">
            <paramref name="defaultValue" /> è impostato su <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-229">
              <paramref name="defaultValue" /> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.PropertyMetadata" />
      </Docs>
    </Member>
    <Member MemberName="AffectsArrange">
      <MemberSignature Language="C#" Value="public bool AffectsArrange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AffectsArrange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange" />
      <MemberSignature Language="VB.NET" Value="Public Property AffectsArrange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AffectsArrange { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79342-230">Ottiene o imposta un valore che indica se una proprietà di dipendenza può influire sul passaggio di disposizione durante operazioni del motore di layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-230">Gets or sets a value that indicates whether a dependency property potentially affects the arrange pass during layout engine operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79342-231">
            <see langword="true" /> se la proprietà di dipendenza sulla quale esistono potenzialmente questi metadati influisce sul passaggio della disposizione; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-231">
              <see langword="true" /> if the dependency property on which this metadata exists potentially affects the arrange pass; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="79342-232">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-232">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-233"><xref:System.Windows.FrameworkElement> e <xref:System.Windows.FrameworkContentElement> includono un'implementazione di <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> che esegue il monitoraggio delle modifiche del valore effettivo di tutte le proprietà di dipendenza esistenti su un elemento.</span><span class="sxs-lookup"><span data-stu-id="79342-233"><xref:System.Windows.FrameworkElement> and <xref:System.Windows.FrameworkContentElement> include an implementation of <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> that monitors effective value changes to all dependency properties that exist on an element.</span></span> <span data-ttu-id="79342-234">Come parte di quella logica, le proprietà di dipendenza che modificano l'effettivo valore e hanno metadati con <xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A> impostato su `true` verrà avviata una richiesta differita per invalidare gli oggetti visivi per quell'elemento (una chiamata a <xref:System.Windows.UIElement.InvalidateArrange%2A>).</span><span class="sxs-lookup"><span data-stu-id="79342-234">As part of that logic, dependency properties that change effective value and have metadata with <xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A> set to `true` will initiate a deferred request to invalidate the visuals for that element (a call to <xref:System.Windows.UIElement.InvalidateArrange%2A>).</span></span> <span data-ttu-id="79342-235">Poiché questa implementazione a livello di framework WPF è già attiva, in genere non è necessaria cercare le proprietà di dipendenza con <xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A> a meno che non si stia sostituendo o modificando il comportamento di layout a livello di framework WPF.</span><span class="sxs-lookup"><span data-stu-id="79342-235">Because this WPF framework-level implementation is already in place, you typically do not need to look for dependency properties with <xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A> unless you are substantially replacing or modifying the WPF framework-level layout behavior.</span></span>  
  
 <span data-ttu-id="79342-236">Custom <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementazioni è potrebbero scegliere di disporre di un comportamento simile per le modifiche alle proprietà di dipendenza in cui <xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A> è `true`.</span><span class="sxs-lookup"><span data-stu-id="79342-236">Custom <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementations might choose to have similar behavior for dependency property changes where <xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A> is `true`.</span></span>  
  
 <span data-ttu-id="79342-237">Proprietà nelle classi derivate di <xref:System.Windows.PropertyMetadata> sono in genere definiti nel modello a oggetti di lettura e scrittura.</span><span class="sxs-lookup"><span data-stu-id="79342-237">Properties on derived classes of <xref:System.Windows.PropertyMetadata> are typically defined in the object model as read-write.</span></span> <span data-ttu-id="79342-238">Si tratta pertanto può essere modificate dopo l'inizializzazione dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="79342-238">This is so they can be adjusted after initialization of the instance.</span></span> <span data-ttu-id="79342-239">Tuttavia, dopo che i metadati sono utilizzati come parte di una chiamata a <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, o <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, il sistema di proprietà eseguirà il sealing dell'istanza di metadati e proprietà che trasmettono le specifiche dei metadati ora sono considerate immutabili.</span><span class="sxs-lookup"><span data-stu-id="79342-239">However, after the metadata is consumed as part of a call to <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, or <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</span></span> <span data-ttu-id="79342-240">Il tentativo di impostare questa proprietà dopo <xref:System.Windows.PropertyMetadata.IsSealed%2A> è `true` i metadati di questa istanza verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="79342-240">Attempting to set this property after <xref:System.Windows.PropertyMetadata.IsSealed%2A> is `true` on this metadata instance will raise an exception.</span></span>  
  
<a name="xamlTextUsage_AffectsArrange"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="79342-241">Utilizzo di testo XAML</span><span class="sxs-lookup"><span data-stu-id="79342-241">XAML Text Usage</span></span>  
 <span data-ttu-id="79342-242">Membri di questa classe vengono in genere non viene utilizzati [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="79342-242">Members of this class are either not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79342-243">L'esempio seguente ottiene i metadati predefiniti dalla dipendenza vari campi delle proprietà, il valore di varie query <xref:System.Windows.FrameworkPropertyMetadata> , proprietà e utilizza le informazioni per popolare una tabella per implementare un browser"metadati".</span><span class="sxs-lookup"><span data-stu-id="79342-243">The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a "metadata browser".</span></span>  
  
 [!code-csharp[PropertySystemEsoterics#DPGetMetadataSingle](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]
 [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  
[!code-csharp[PropertySystemEsoterics#FPMProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/XAMLAPP/page2.xaml.cs#fpmproperties)]
[!code-vb[PropertySystemEsoterics#FPMProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79342-244">Poiché sono già stati applicati a un'operazione della proprietà di dipendenza, questi metadati sono sealed e non è possibile impostarne le proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-244">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.FrameworkPropertyMetadataOptions" />
      </Docs>
    </Member>
    <Member MemberName="AffectsMeasure">
      <MemberSignature Language="C#" Value="public bool AffectsMeasure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AffectsMeasure" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure" />
      <MemberSignature Language="VB.NET" Value="Public Property AffectsMeasure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AffectsMeasure { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79342-245">Ottiene o imposta un valore che indica se una proprietà di dipendenza può influire sul passaggio di misurazione durante operazioni del motore di layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-245">Gets or sets a value that indicates whether a dependency property potentially affects the measure pass during layout engine operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79342-246">
            <see langword="true" /> se la proprietà di dipendenza in cui si trovano i metadati può influire sul passaggio di misurazione. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-246">
              <see langword="true" /> if the dependency property on which this metadata exists potentially affects the measure pass; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="79342-247">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-247">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-248"><xref:System.Windows.FrameworkElement> e <xref:System.Windows.FrameworkContentElement> includono un'implementazione di <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> che esegue il monitoraggio delle modifiche del valore effettivo di tutte le proprietà di dipendenza esistenti su un elemento.</span><span class="sxs-lookup"><span data-stu-id="79342-248"><xref:System.Windows.FrameworkElement> and <xref:System.Windows.FrameworkContentElement> include an implementation of <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> that monitors effective value changes to all dependency properties that exist on an element.</span></span> <span data-ttu-id="79342-249">Come parte di quella logica, le proprietà di dipendenza che modificano l'effettivo valore e hanno metadati con <xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> impostato su `true` verrà avviata una richiesta differita per invalidare gli oggetti visivi per quell'elemento.</span><span class="sxs-lookup"><span data-stu-id="79342-249">As part of that logic, dependency properties that change effective value and have metadata with <xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> set to `true` will initiate a deferred request to invalidate the visuals for that element.</span></span> <span data-ttu-id="79342-250">Poiché questa implementazione a livello di framework WPF è già attiva, in genere non è necessaria cercare le proprietà di dipendenza con <xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> a meno che non si stia sostituendo o modificando il comportamento di layout a livello di framework WPF.</span><span class="sxs-lookup"><span data-stu-id="79342-250">Because this WPF framework-level implementation is already in place, you typically do not need to look for dependency properties with <xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> unless you are substantially replacing or modifying the WPF framework-level layout behavior.</span></span>  
  
 <span data-ttu-id="79342-251">Custom <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementazioni è potrebbero scegliere di disporre di un comportamento simile per le modifiche alle proprietà di dipendenza in cui <xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> è `true`.</span><span class="sxs-lookup"><span data-stu-id="79342-251">Custom <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementations might choose to have similar behavior for dependency property changes where <xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> is `true`.</span></span>  
  
 <span data-ttu-id="79342-252">Proprietà nelle classi derivate di <xref:System.Windows.PropertyMetadata> sono in genere definiti nel modello a oggetti di lettura e scrittura.</span><span class="sxs-lookup"><span data-stu-id="79342-252">Properties on derived classes of <xref:System.Windows.PropertyMetadata> are typically defined in the object model as read-write.</span></span> <span data-ttu-id="79342-253">Si tratta pertanto può essere modificate dopo l'inizializzazione dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="79342-253">This is so they can be adjusted after initialization of the instance.</span></span> <span data-ttu-id="79342-254">Tuttavia, dopo che i metadati sono utilizzati come parte di una chiamata a <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, o <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, il sistema di proprietà eseguirà il sealing dell'istanza di metadati e proprietà che trasmettono le specifiche dei metadati ora sono considerate immutabili.</span><span class="sxs-lookup"><span data-stu-id="79342-254">However, after the metadata is consumed as part of a call to <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, or <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</span></span> <span data-ttu-id="79342-255">Il tentativo di impostare questa proprietà dopo <xref:System.Windows.PropertyMetadata.IsSealed%2A> è `true` i metadati di questa istanza verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="79342-255">Attempting to set this property after <xref:System.Windows.PropertyMetadata.IsSealed%2A> is `true` on this metadata instance will raise an exception.</span></span>  
  
<a name="xamlTextUsage_AffectsMeasure"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="79342-256">Utilizzo di testo XAML</span><span class="sxs-lookup"><span data-stu-id="79342-256">XAML Text Usage</span></span>  
 <span data-ttu-id="79342-257">Membri di questa classe non vengono utilizzati in genere [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="79342-257">Members of this class are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79342-258">L'esempio seguente ottiene i metadati predefiniti dalla dipendenza vari campi delle proprietà, il valore di varie query <xref:System.Windows.FrameworkPropertyMetadata> , proprietà e utilizza le informazioni per popolare una tabella per implementare un browser"metadati".</span><span class="sxs-lookup"><span data-stu-id="79342-258">The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a "metadata browser".</span></span>  
  
 [!code-csharp[PropertySystemEsoterics#DPGetMetadataSingle](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]
 [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  
[!code-csharp[PropertySystemEsoterics#FPMProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/XAMLAPP/page2.xaml.cs#fpmproperties)]
[!code-vb[PropertySystemEsoterics#FPMProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79342-259">Poiché sono già stati applicati a un'operazione della proprietà di dipendenza, questi metadati sono sealed e non è possibile impostarne le proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-259">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.FrameworkPropertyMetadataOptions" />
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="AffectsParentArrange">
      <MemberSignature Language="C#" Value="public bool AffectsParentArrange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AffectsParentArrange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange" />
      <MemberSignature Language="VB.NET" Value="Public Property AffectsParentArrange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AffectsParentArrange { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79342-260">Ottiene o imposta un valore che indica se una proprietà di dipendenza può influire sul passaggio di disposizione del layout dell'elemento padre durante le operazioni del motore di layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-260">Gets or sets a value that indicates whether a dependency property potentially affects the arrange pass of its parent element's layout during layout engine operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79342-261">
            <see langword="true" /> se la proprietà di dipendenza sulla quale esistono potenzialmente questi metadati influisce specificamente sul passaggio della disposizione sull'elemento padre; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-261">
              <see langword="true" /> if the dependency property on which this metadata exists potentially affects the arrange pass specifically on its parent element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="79342-262">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-262">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-263"><xref:System.Windows.FrameworkElement> e <xref:System.Windows.FrameworkContentElement> includono un'implementazione di <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> che esegue il monitoraggio delle modifiche del valore effettivo di tutte le proprietà di dipendenza esistenti su un elemento.</span><span class="sxs-lookup"><span data-stu-id="79342-263"><xref:System.Windows.FrameworkElement> and <xref:System.Windows.FrameworkContentElement> include an implementation of <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> that monitors effective value changes to all dependency properties that exist on an element.</span></span> <span data-ttu-id="79342-264">Come parte di quella logica, le proprietà di dipendenza che modificano l'effettivo valore e hanno metadati con <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A> impostato su `true` verrà avviata una richiesta differita per invalidare gli oggetti visivi per l'elemento padre.</span><span class="sxs-lookup"><span data-stu-id="79342-264">As part of that logic, dependency properties that change effective value and have metadata with <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A> set to `true` will initiate a deferred request to invalidate the visuals for the parent element.</span></span>  
  
 <span data-ttu-id="79342-265">In genere, non è necessaria per segnalare le modifiche di un <xref:System.Windows.FrameworkElement> proprietà a un elemento padre utilizzando <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A> perché l'elemento stesso ha già un proprio <xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A> come `true`.</span><span class="sxs-lookup"><span data-stu-id="79342-265">Generally, you do not need to report changes of a <xref:System.Windows.FrameworkElement> property to a parent element using <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A> because the element itself would already have its own <xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A> as `true`.</span></span> <span data-ttu-id="79342-266">In genere sufficiente, perché le modifiche nell'elemento figlio iniziano in genere un elemento padre disposizione quando appropriato.</span><span class="sxs-lookup"><span data-stu-id="79342-266">That is usually sufficient, because changes in the child element generally initiate a parent arrange when appropriate.</span></span> <span data-ttu-id="79342-267"><xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A> a volte viene utilizzato per un <xref:System.Windows.FrameworkContentElement> classe derivata.</span><span class="sxs-lookup"><span data-stu-id="79342-267"><xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A> is sometimes used for a <xref:System.Windows.FrameworkContentElement> derived class.</span></span> <span data-ttu-id="79342-268">In questo caso, l'elemento figlio imposta una proprietà, ma un <xref:System.Windows.FrameworkContentElement> classe derivata non controlla il rendering.</span><span class="sxs-lookup"><span data-stu-id="79342-268">In this case, the child element sets a property, but a <xref:System.Windows.FrameworkContentElement> derived class does not control its own rendering.</span></span> <span data-ttu-id="79342-269">Il rendering è gestito da un <xref:System.Windows.FrameworkElement> elemento padre che funge da host del contenuto.</span><span class="sxs-lookup"><span data-stu-id="79342-269">The rendering is handled by a <xref:System.Windows.FrameworkElement> parent element that serves as the content host.</span></span> <span data-ttu-id="79342-270">Ad esempio, una modifica al valore del <xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=nameWithType> proprietà associata da un elemento figlio invalida disposizione del padre, perché la posizione dell'elemento figlio dell'elemento padre deve essere modificata.</span><span class="sxs-lookup"><span data-stu-id="79342-270">For instance, a change to the value of the <xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=nameWithType> attached property by a child element invalidates arrange of the parent, because the position of the child in the parent must be changed.</span></span> <span data-ttu-id="79342-271">Pertanto, il <xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=nameWithType> proprietà associata ha metadati dove <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A> è `true`.</span><span class="sxs-lookup"><span data-stu-id="79342-271">Therefore, the <xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=nameWithType> attached property has metadata where <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A> is `true`.</span></span> <span data-ttu-id="79342-272">Un altro esempio è <xref:System.Windows.Controls.Control.Padding%2A>; quando questa proprietà viene modificata, l'elemento padre potrebbe modificare il posizionamento dell'elemento figlio, a seconda dello spazio disponibile.</span><span class="sxs-lookup"><span data-stu-id="79342-272">Another example is <xref:System.Windows.Controls.Control.Padding%2A>; when this property changes, the parent might change the positioning of the child, depending on available space.</span></span>  
  
 <span data-ttu-id="79342-273">Poiché questa implementazione a livello di framework WPF è già attiva, in genere non è necessaria cercare le proprietà di dipendenza con <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A> a meno che non si stia sostituendo o modificando il comportamento di layout a livello di framework WPF.</span><span class="sxs-lookup"><span data-stu-id="79342-273">Because this WPF framework-level implementation is already in place, you typically do not need to look for dependency properties with <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A> unless you are substantially replacing or modifying the WPF framework-level layout behavior.</span></span>  
  
 <span data-ttu-id="79342-274">Custom <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementazioni è potrebbero scegliere di disporre di un comportamento simile per le modifiche alle proprietà di dipendenza in cui <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A> è `true`.</span><span class="sxs-lookup"><span data-stu-id="79342-274">Custom <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementations might choose to have similar behavior for dependency property changes where <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A> is `true`.</span></span>  
  
 <span data-ttu-id="79342-275">Le proprietà per qualsiasi classe derivata di <xref:System.Windows.PropertyMetadata> sono in genere definiti nel modello a oggetti di lettura e scrittura.</span><span class="sxs-lookup"><span data-stu-id="79342-275">Properties on any derived classes of <xref:System.Windows.PropertyMetadata> are typically defined in the object model as read-write.</span></span> <span data-ttu-id="79342-276">Si tratta pertanto può essere modificate dopo l'inizializzazione dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="79342-276">This is so they can be adjusted after initialization of the instance.</span></span> <span data-ttu-id="79342-277">Tuttavia, dopo che i metadati sono utilizzati come parte di una chiamata a <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, o <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, il sistema di proprietà eseguirà il sealing dell'istanza di metadati e proprietà che trasmettono le specifiche dei metadati ora sono considerate immutabili.</span><span class="sxs-lookup"><span data-stu-id="79342-277">However, after the metadata is consumed as part of a call to <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, or <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</span></span> <span data-ttu-id="79342-278">Il tentativo di impostare questa proprietà dopo <xref:System.Windows.PropertyMetadata.IsSealed%2A> è `true` i metadati di questa istanza verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="79342-278">Attempting to set this property after <xref:System.Windows.PropertyMetadata.IsSealed%2A> is `true` on this metadata instance will raise an exception.</span></span>  
  
<a name="xamlTextUsage_AffectsParentArrange"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="79342-279">Utilizzo di testo XAML</span><span class="sxs-lookup"><span data-stu-id="79342-279">XAML Text Usage</span></span>  
 <span data-ttu-id="79342-280">Membri di questa classe non vengono utilizzati in genere [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="79342-280">Members of this class are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79342-281">Poiché sono già stati applicati a un'operazione della proprietà di dipendenza, questi metadati sono sealed e non è possibile impostarne le proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-281">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.FrameworkPropertyMetadataOptions" />
      </Docs>
    </Member>
    <Member MemberName="AffectsParentMeasure">
      <MemberSignature Language="C#" Value="public bool AffectsParentMeasure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AffectsParentMeasure" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure" />
      <MemberSignature Language="VB.NET" Value="Public Property AffectsParentMeasure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AffectsParentMeasure { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79342-282">Ottiene o imposta un valore che indica se una proprietà di dipendenza può influire sul passaggio di misurazione del layout dell'elemento padre durante le operazioni del motore di layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-282">Gets or sets a value that indicates whether a dependency property potentially affects the measure pass of its parent element's layout during layout engine operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79342-283">
            <see langword="true" /> se la proprietà di dipendenza sulla quale esistono potenzialmente questi metadati influisce specificamente sul passaggio della disposizione sull'elemento padre; in caso contrario, <see langword="false" />. L’impostazione predefinita è <see langword="false" /> . </span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-283">
              <see langword="true" /> if the dependency property on which this metadata exists potentially affects the measure pass specifically on its parent element; otherwise, <see langword="false" />.The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-284"><xref:System.Windows.FrameworkElement> e <xref:System.Windows.FrameworkContentElement> includono un'implementazione di <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> che esegue il monitoraggio delle modifiche del valore effettivo di tutte le proprietà di dipendenza esistenti su un elemento.</span><span class="sxs-lookup"><span data-stu-id="79342-284"><xref:System.Windows.FrameworkElement> and <xref:System.Windows.FrameworkContentElement> include an implementation of <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> that monitors effective value changes to all dependency properties that exist on an element.</span></span> <span data-ttu-id="79342-285">Come parte di quella logica, le proprietà di dipendenza che modificano l'effettivo valore e hanno metadati con <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A> impostato su `true` verrà avviata una richiesta differita per invalidare gli oggetti visivi per l'elemento padre.</span><span class="sxs-lookup"><span data-stu-id="79342-285">As part of that logic, dependency properties that change effective value and have metadata with <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A> set to `true` will initiate a deferred request to invalidate the visuals for the parent element.</span></span> <span data-ttu-id="79342-286">Poiché questa implementazione a livello di framework WPF è già attiva, in genere non è necessaria cercare le proprietà di dipendenza con <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A> a meno che non si stia sostituendo o modificando il comportamento di layout a livello di framework WPF.</span><span class="sxs-lookup"><span data-stu-id="79342-286">Because this WPF framework-level implementation is already in place, you typically do not need to look for dependency properties with <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A> unless you are substantially replacing or modifying the WPF framework-level layout behavior.</span></span>  
  
 <span data-ttu-id="79342-287">In genere, non è necessaria per segnalare le modifiche di un <xref:System.Windows.FrameworkElement> proprietà a un elemento padre utilizzando <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A> perché l'elemento stesso ha già un proprio <xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> come `true`.</span><span class="sxs-lookup"><span data-stu-id="79342-287">Generally, you do not need to report changes of a <xref:System.Windows.FrameworkElement> property to a parent element using <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A> because the element itself would already have its own <xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> as `true`.</span></span> <span data-ttu-id="79342-288">Che è in genere sufficiente, perché le modifiche nell'elemento figlio iniziano in genere un passaggio di misurazione padre quando appropriato.</span><span class="sxs-lookup"><span data-stu-id="79342-288">That is usually sufficient, because changes in the child element generally initiate a parent measure pass when appropriate.</span></span> <span data-ttu-id="79342-289"><xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A> a volte viene utilizzato per un <xref:System.Windows.FrameworkContentElement> classe derivata.</span><span class="sxs-lookup"><span data-stu-id="79342-289"><xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A> is sometimes used for a <xref:System.Windows.FrameworkContentElement> derived class.</span></span> <span data-ttu-id="79342-290">In questo caso, l'elemento figlio imposta una proprietà, ma un <xref:System.Windows.FrameworkContentElement> classe derivata non controlla il rendering.</span><span class="sxs-lookup"><span data-stu-id="79342-290">In this case, the child element sets a property, but a <xref:System.Windows.FrameworkContentElement> derived class does not control its own rendering.</span></span> <span data-ttu-id="79342-291">Il rendering è gestito da un <xref:System.Windows.FrameworkElement> elemento padre che funge da host del contenuto.</span><span class="sxs-lookup"><span data-stu-id="79342-291">The rendering is handled by a <xref:System.Windows.FrameworkElement> parent element that serves as the content host.</span></span> <span data-ttu-id="79342-292">Ad esempio, una modifica al valore del <xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=nameWithType> proprietà da un elemento figlio invalida misura dell'elemento padre, perché lo spazio relativo di paragrafi potrebbe modificare e aumentare o diminuire le dimensioni dell'host del contenuto.</span><span class="sxs-lookup"><span data-stu-id="79342-292">For instance, a change to the value of the <xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=nameWithType> property by a child element invalidates measure of the parent, because the relative spacing of paragraphs might change and might increase or decrease the content host size.</span></span> <span data-ttu-id="79342-293">Pertanto, il <xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=nameWithType> è di proprietà di metadati in cui <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A> è `true`.</span><span class="sxs-lookup"><span data-stu-id="79342-293">Therefore, the <xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=nameWithType> property has metadata where <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A> is `true`.</span></span>  
  
 <span data-ttu-id="79342-294">Elementi host del contenuto consente di cercare spesso anche le modifiche nelle proprietà di dipendenza in cui <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A> è `true`, come parte della logica di rendering di host del contenuto.</span><span class="sxs-lookup"><span data-stu-id="79342-294">Content host elements also frequently look for changes in dependency properties where <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A> is `true`, as part of content host rendering logic.</span></span> <span data-ttu-id="79342-295">Ad esempio, il <xref:System.Windows.Controls.TextBox> elemento deve rispondere a determinate modifiche all'interno del testo che potrebbero richiedere che il rettangolo di selezione del <xref:System.Windows.Controls.TextBox> stesso essere modificato.</span><span class="sxs-lookup"><span data-stu-id="79342-295">For instance, the <xref:System.Windows.Controls.TextBox> element must respond to certain changes within text that might require that the bounding box of the <xref:System.Windows.Controls.TextBox> itself be changed.</span></span>  
  
 <span data-ttu-id="79342-296">Custom <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementazioni è potrebbero scegliere di disporre di un comportamento simile per le modifiche alle proprietà di dipendenza in cui <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A> è `true`.</span><span class="sxs-lookup"><span data-stu-id="79342-296">Custom <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementations might choose to have similar behavior for dependency property changes where <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A> is `true`.</span></span>  
  
 <span data-ttu-id="79342-297">Le proprietà per qualsiasi classe derivata di <xref:System.Windows.PropertyMetadata> sono in genere definiti nel modello a oggetti di lettura e scrittura.</span><span class="sxs-lookup"><span data-stu-id="79342-297">Properties on any derived classes of <xref:System.Windows.PropertyMetadata> are typically defined in the object model as read-write.</span></span> <span data-ttu-id="79342-298">Si tratta pertanto può essere modificate dopo l'inizializzazione dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="79342-298">This is so they can be adjusted after initialization of the instance.</span></span> <span data-ttu-id="79342-299">Tuttavia, dopo che i metadati sono utilizzati come parte di una chiamata a <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, o <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, il sistema di proprietà eseguirà il sealing dell'istanza di metadati e proprietà che trasmettono le specifiche dei metadati ora sono considerate immutabili.</span><span class="sxs-lookup"><span data-stu-id="79342-299">However, after the metadata is consumed as part of a call to <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, or <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</span></span> <span data-ttu-id="79342-300">Il tentativo di impostare questa proprietà dopo <xref:System.Windows.PropertyMetadata.IsSealed%2A> è `true` i metadati di questa istanza verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="79342-300">Attempting to set this property after <xref:System.Windows.PropertyMetadata.IsSealed%2A> is `true` on this metadata instance will raise an exception.</span></span>  
  
<a name="xamlTextUsage_AffectsParentMeasure"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="79342-301">Utilizzo di testo XAML</span><span class="sxs-lookup"><span data-stu-id="79342-301">XAML Text Usage</span></span>  
 <span data-ttu-id="79342-302">Membri di questa classe non vengono utilizzati in genere [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="79342-302">Members of this class are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79342-303">Poiché sono già stati applicati a un'operazione della proprietà di dipendenza, questi metadati sono sealed e non è possibile impostarne le proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-303">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.FrameworkPropertyMetadataOptions" />
      </Docs>
    </Member>
    <Member MemberName="AffectsRender">
      <MemberSignature Language="C#" Value="public bool AffectsRender { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AffectsRender" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkPropertyMetadata.AffectsRender" />
      <MemberSignature Language="VB.NET" Value="Public Property AffectsRender As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AffectsRender { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79342-304">Ottiene o imposta un valore che indica se una proprietà di dipendenza può avere potenzialmente effetto sul layout generale, in un modo che non influenza in modo specifico la disposizione o la misurazione, ma che richiederebbe un nuovo disegno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-304">Gets or sets a value that indicates whether a dependency property potentially affects the general layout in some way that does not specifically influence arrangement or measurement, but would require a redraw.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79342-305">
            <see langword="true" /> se la proprietà di dipendenza sulla quale esistono questi metadati influisce sul rendering; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-305">
              <see langword="true" /> if the dependency property on which this metadata exists affects rendering; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="79342-306">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-306">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-307"><xref:System.Windows.FrameworkElement> e <xref:System.Windows.FrameworkContentElement> includono un'implementazione di <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> che esegue il monitoraggio delle modifiche del valore effettivo di tutte le proprietà di dipendenza esistenti su un elemento.</span><span class="sxs-lookup"><span data-stu-id="79342-307"><xref:System.Windows.FrameworkElement> and <xref:System.Windows.FrameworkContentElement> include an implementation of <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> that monitors effective value changes to all dependency properties that exist on an element.</span></span> <span data-ttu-id="79342-308">Come parte di quella logica, le proprietà di dipendenza che modificano l'effettivo valore e hanno metadati con <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> impostato su `true` verrà avviata una richiesta differita per invalidare gli oggetti visivi per quell'elemento.</span><span class="sxs-lookup"><span data-stu-id="79342-308">As part of that logic, dependency properties that change effective value and have metadata with <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> set to `true` will initiate a deferred request to invalidate the visuals for that element.</span></span> <span data-ttu-id="79342-309">Poiché questa implementazione a livello di framework WPF è già attiva, in genere non è necessaria cercare le proprietà di dipendenza con <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> a meno che non si stia sostituendo o modificando il comportamento di layout a livello di framework WPF.</span><span class="sxs-lookup"><span data-stu-id="79342-309">Because this WPF framework-level implementation is already in place, you typically do not need to look for dependency properties with <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> unless you are substantially replacing or modifying the WPF framework-level layout behavior.</span></span>  
  
 <span data-ttu-id="79342-310">Custom <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementazioni è potrebbero scegliere di disporre di un comportamento simile per le modifiche alle proprietà di dipendenza in cui <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> è `true`.</span><span class="sxs-lookup"><span data-stu-id="79342-310">Custom <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementations might choose to have similar behavior for dependency property changes where <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> is `true`.</span></span>  
  
 <span data-ttu-id="79342-311">Le proprietà per qualsiasi classe derivata di <xref:System.Windows.PropertyMetadata> sono in genere definiti nel modello a oggetti di lettura e scrittura.</span><span class="sxs-lookup"><span data-stu-id="79342-311">Properties on any derived classes of <xref:System.Windows.PropertyMetadata> are typically defined in the object model as read-write.</span></span> <span data-ttu-id="79342-312">Si tratta pertanto può essere modificate dopo l'inizializzazione dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="79342-312">This is so they can be adjusted after initialization of the instance.</span></span> <span data-ttu-id="79342-313">Tuttavia, dopo che i metadati sono utilizzati come parte di una chiamata a <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, o <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, il sistema di proprietà eseguirà il sealing dell'istanza di metadati e proprietà che trasmettono le specifiche dei metadati ora sono considerate immutabili.</span><span class="sxs-lookup"><span data-stu-id="79342-313">However, after the metadata is consumed as part of a call to <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, or <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</span></span> <span data-ttu-id="79342-314">Il tentativo di impostare questa proprietà dopo <xref:System.Windows.PropertyMetadata.IsSealed%2A> è `true` i metadati di questa istanza verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="79342-314">Attempting to set this property after <xref:System.Windows.PropertyMetadata.IsSealed%2A> is `true` on this metadata instance will raise an exception.</span></span>  
  
<a name="xamlTextUsage_AffectsRender"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="79342-315">Utilizzo di testo XAML</span><span class="sxs-lookup"><span data-stu-id="79342-315">XAML Text Usage</span></span>  
 <span data-ttu-id="79342-316">Membri di questa classe non vengono utilizzati in genere [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="79342-316">Members of this class are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79342-317">L'esempio seguente ottiene i metadati predefiniti dalla dipendenza vari campi delle proprietà, il valore di varie query <xref:System.Windows.FrameworkPropertyMetadata> , proprietà e utilizza le informazioni per popolare una tabella per implementare un browser"metadati".</span><span class="sxs-lookup"><span data-stu-id="79342-317">The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a "metadata browser".</span></span>  
  
 [!code-csharp[PropertySystemEsoterics#DPGetMetadataSingle](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]
 [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  
[!code-csharp[PropertySystemEsoterics#FPMProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/XAMLAPP/page2.xaml.cs#fpmproperties)]
[!code-vb[PropertySystemEsoterics#FPMProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79342-318">Poiché sono già stati applicati a un'operazione della proprietà di dipendenza, questi metadati sono sealed e non è possibile impostarne le proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-318">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.FrameworkPropertyMetadataOptions" />
      </Docs>
    </Member>
    <Member MemberName="BindsTwoWayByDefault">
      <MemberSignature Language="C#" Value="public bool BindsTwoWayByDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BindsTwoWayByDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property BindsTwoWayByDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BindsTwoWayByDefault { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79342-319">Ottiene o imposta un valore che indica se la proprietà esegue l'associazione bidirezionale per impostazione predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-319">Gets or sets a value that indicates whether the property binds two-way by default.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79342-320">
            <see langword="true" /> Se la proprietà di dipendenza per cui esistono il questi metadati esegue l'associazione bidirezionale per impostazione predefinita. in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-320">
              <see langword="true" /> if the dependency property on which this metadata exists binds two-way by default; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="79342-321">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-321">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-322">In assenza di questa proprietà sia `true`, gli aggiornamenti dell'associazione sono unidirezionali per impostazione predefinita, in base al comportamento predefinito del <xref:System.Windows.Data.Binding> costruttori o equivalente [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sintassi.</span><span class="sxs-lookup"><span data-stu-id="79342-322">In absence of this property being `true`, binding updates are one-way by default, based on the default behavior of the <xref:System.Windows.Data.Binding> constructors or equivalent [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span>  
  
 <span data-ttu-id="79342-323">Negli elementi esistenti, si troverà in genere questa proprietà è impostata su `true` nei metadati per le proprietà di dipendenza che segnalano lo stato e che sono modificabili dall'utente, ad esempio <xref:System.Windows.Controls.Primitives.Selector.IsSelected%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="79342-323">In existing elements, you will usually find this property set to `true` in metadata for dependency properties that both report state and are modifiable by user action, for example <xref:System.Windows.Controls.Primitives.Selector.IsSelected%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="79342-324">Questa proprietà restituisce solo le caratteristiche di aggiornamento di associazione predefinito della proprietà di dipendenza in generale.</span><span class="sxs-lookup"><span data-stu-id="79342-324">This property only reports the default binding update characteristics of the dependency property in general.</span></span> <span data-ttu-id="79342-325">Qualsiasi associazione impostata su questa proprietà su un'istanza locale è possibile impostare il <xref:System.Windows.Data.Binding.Mode%2A> proprietà dell'associazione e modificare il valore predefinito.</span><span class="sxs-lookup"><span data-stu-id="79342-325">Any binding set to this property on an instance can locally set the <xref:System.Windows.Data.Binding.Mode%2A> property of the binding and change this default.</span></span>  
  
 <span data-ttu-id="79342-326">Le proprietà per qualsiasi classe derivata di <xref:System.Windows.PropertyMetadata> sono in genere definiti nel modello a oggetti di lettura e scrittura.</span><span class="sxs-lookup"><span data-stu-id="79342-326">Properties on any derived classes of <xref:System.Windows.PropertyMetadata> are typically defined in the object model as read-write.</span></span> <span data-ttu-id="79342-327">Si tratta pertanto può essere modificate dopo l'inizializzazione dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="79342-327">This is so they can be adjusted after initialization of the instance.</span></span> <span data-ttu-id="79342-328">Tuttavia, dopo che i metadati sono utilizzati come parte di una chiamata a <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, o <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, il sistema di proprietà eseguirà il sealing dell'istanza di metadati e proprietà che trasmettono le specifiche dei metadati ora sono considerate immutabili.</span><span class="sxs-lookup"><span data-stu-id="79342-328">However, after the metadata is consumed as part of a call to <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, or <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</span></span> <span data-ttu-id="79342-329">Il tentativo di impostare questa proprietà dopo <xref:System.Windows.PropertyMetadata.IsSealed%2A> è `true` i metadati di questa istanza verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="79342-329">Attempting to set this property after <xref:System.Windows.PropertyMetadata.IsSealed%2A> is `true` on this metadata instance will raise an exception.</span></span>  
  
<a name="xamlTextUsage_BindsTwoWayByDefault"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="79342-330">Utilizzo di testo XAML</span><span class="sxs-lookup"><span data-stu-id="79342-330">XAML Text Usage</span></span>  
 <span data-ttu-id="79342-331">Membri di questa classe non vengono utilizzati in genere [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="79342-331">Members of this class are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79342-332">L'esempio seguente ottiene i metadati predefiniti dalla dipendenza vari campi delle proprietà, il valore di varie query <xref:System.Windows.FrameworkPropertyMetadata> , proprietà e utilizza le informazioni per popolare una tabella per implementare un browser"metadati".</span><span class="sxs-lookup"><span data-stu-id="79342-332">The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a "metadata browser".</span></span>  
  
 [!code-csharp[PropertySystemEsoterics#DPGetMetadataSingle](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]
 [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  
[!code-csharp[PropertySystemEsoterics#FPMProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/XAMLAPP/page2.xaml.cs#fpmproperties)]
[!code-vb[PropertySystemEsoterics#FPMProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79342-333">Poiché sono già stati applicati a un'operazione della proprietà di dipendenza, questi metadati sono sealed e non è possibile impostarne le proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-333">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.FrameworkPropertyMetadataOptions" />
      </Docs>
    </Member>
    <Member MemberName="DefaultUpdateSourceTrigger">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceTrigger DefaultUpdateSourceTrigger { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.UpdateSourceTrigger DefaultUpdateSourceTrigger" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultUpdateSourceTrigger As UpdateSourceTrigger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceTrigger DefaultUpdateSourceTrigger { System::Windows::Data::UpdateSourceTrigger get(); void set(System::Windows::Data::UpdateSourceTrigger value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceTrigger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79342-334">Ottiene o imposta l'impostazione predefinita per <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> da utilizzare quando le associazioni per la proprietà con questi metadati sono applicate, che hanno <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> impostato in <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-334">Gets or sets the default for <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> to use when bindings for the property with this metadata are applied, which have their <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> set to <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79342-335">Un valore dell'enumerazione, diverso da <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-335">A value of the enumeration, other than <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-336">Proprietà nelle classi derivate di <xref:System.Windows.PropertyMetadata> sono in genere definiti nel modello a oggetti di lettura e scrittura.</span><span class="sxs-lookup"><span data-stu-id="79342-336">Properties on derived classes of <xref:System.Windows.PropertyMetadata> are typically defined in the object model as read-write.</span></span> <span data-ttu-id="79342-337">Si tratta pertanto può essere modificate dopo l'inizializzazione dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="79342-337">This is so they can be adjusted after initialization of the instance.</span></span> <span data-ttu-id="79342-338">Tuttavia, dopo che i metadati sono utilizzati come parte di una chiamata a <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, o <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, il sistema di proprietà eseguirà il sealing dell'istanza di metadati e proprietà che trasmettono le specifiche dei metadati ora sono considerate immutabili.</span><span class="sxs-lookup"><span data-stu-id="79342-338">However, after the metadata is consumed as part of a call to <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, or <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</span></span> <span data-ttu-id="79342-339">Il tentativo di impostare questa proprietà dopo <xref:System.Windows.PropertyMetadata.IsSealed%2A> è `true` i metadati di questa istanza verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="79342-339">Attempting to set this property after <xref:System.Windows.PropertyMetadata.IsSealed%2A> is `true` on this metadata instance will raise an exception.</span></span>  
  
<a name="xamlTextUsage_DefaultUpdateSourceTrigger"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="79342-340">Utilizzo di testo XAML</span><span class="sxs-lookup"><span data-stu-id="79342-340">XAML Text Usage</span></span>  
 <span data-ttu-id="79342-341">Membri di questa classe non vengono utilizzati in genere [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="79342-341">Members of this class are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79342-342">Questa proprietà è impostata su <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />; si suppone che il valore impostato divenga un’impostazione predefinita, quando richiesto dalle associazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-342">This property is set to <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />; the value you set is supposed to become the default when requested by bindings.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79342-343">Poiché sono già stati applicati a un'operazione della proprietà di dipendenza, questi metadati sono sealed e non è possibile impostarne le proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-343">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Inherits">
      <MemberSignature Language="C#" Value="public bool Inherits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherits" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkPropertyMetadata.Inherits" />
      <MemberSignature Language="VB.NET" Value="Public Property Inherits As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Inherits { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79342-344">Ottiene o imposta un valore che indica se il valore della proprietà di dipendenza è ereditabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-344">Gets or sets a value that indicates whether the value of the dependency property is inheritable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79342-345">
            <see langword="true" /> se il valore della proprietà è ereditabile; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-345">
              <see langword="true" /> if the property value is inheritable; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="79342-346">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-346">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-347">Ereditarietà del valore di proprietà è una funzionalità del [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] il sistema di proprietà a livello di framework WPF, in base al quale alcune proprietà di dipendenza può essere locale impostato su un elemento in prossimità della radice di un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] elemento della struttura ad albero e quindi chiedere loro valore ereditato dalle tutti gli elementi all'interno dell'albero logico degli elementi figlio che dispone anche di tale proprietà.</span><span class="sxs-lookup"><span data-stu-id="79342-347">Property value inheritance is a feature of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system at the WPF framework level, whereby certain dependency properties can be locally set on an element at or near the root of a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] element tree and then have their value inherited by all elements within the logical tree of child elements that also possess that property.</span></span> <span data-ttu-id="79342-348">Ereditarietà del valore di proprietà non è abilitato per impostazione predefinita e abilitarlo hanno alcune implicazioni sulle prestazioni.</span><span class="sxs-lookup"><span data-stu-id="79342-348">Property value inheritance is not enabled by default, and enabling it does have some performance implications.</span></span> <span data-ttu-id="79342-349">Per informazioni dettagliate, vedere [Ereditarietà del valore della proprietà](~/docs/framework/wpf/advanced/property-value-inheritance.md).</span><span class="sxs-lookup"><span data-stu-id="79342-349">For details, see [Property Value Inheritance](~/docs/framework/wpf/advanced/property-value-inheritance.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79342-350">Anche se potrebbe sembrare che ereditarietà del valore di proprietà funziona per le proprietà di dipendenza non associata, non è definito il comportamento di ereditarietà per una proprietà non associata tramite determinati reparti oggetto nell'albero della fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="79342-350">Although property value inheritance might appear to work for nonattached dependency properties, the inheritance behavior for a nonattached property through certain object-object divisions in the runtime tree is undefined.</span></span> <span data-ttu-id="79342-351">Utilizzare sempre <xref:System.Windows.DependencyProperty.RegisterAttached%2A> per registrare le proprietà in cui si specifica <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> nei metadati.</span><span class="sxs-lookup"><span data-stu-id="79342-351">Always use <xref:System.Windows.DependencyProperty.RegisterAttached%2A> to register properties where you specify <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> in the metadata.</span></span>  
  
 <span data-ttu-id="79342-352">Proprietà nelle classi derivate di <xref:System.Windows.PropertyMetadata> sono in genere definiti nel modello a oggetti di lettura e scrittura.</span><span class="sxs-lookup"><span data-stu-id="79342-352">Properties on derived classes of <xref:System.Windows.PropertyMetadata> are typically defined in the object model as read-write.</span></span> <span data-ttu-id="79342-353">Si tratta pertanto può essere modificate dopo l'inizializzazione dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="79342-353">This is so they can be adjusted after initialization of the instance.</span></span> <span data-ttu-id="79342-354">Tuttavia, dopo che i metadati sono utilizzati come parte di una chiamata a <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, o <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, il sistema di proprietà eseguirà il sealing dell'istanza di metadati e proprietà che trasmettono le specifiche dei metadati ora sono considerate immutabili.</span><span class="sxs-lookup"><span data-stu-id="79342-354">However, after the metadata is consumed as part of a call to <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, or <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</span></span> <span data-ttu-id="79342-355">Il tentativo di impostare questa proprietà dopo <xref:System.Windows.PropertyMetadata.IsSealed%2A> è `true` i metadati di questa istanza verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="79342-355">Attempting to set this property after <xref:System.Windows.PropertyMetadata.IsSealed%2A> is `true` on this metadata instance will raise an exception.</span></span>  
  
<a name="xamlTextUsage_Inherits"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="79342-356">Utilizzo di testo XAML</span><span class="sxs-lookup"><span data-stu-id="79342-356">XAML Text Usage</span></span>  
 <span data-ttu-id="79342-357">Membri di questa classe non vengono utilizzati in genere [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="79342-357">Members of this class are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79342-358">L'esempio seguente ottiene i metadati predefiniti dalla dipendenza vari campi delle proprietà, il valore di varie query <xref:System.Windows.FrameworkPropertyMetadata> , proprietà e utilizza le informazioni per popolare una tabella per implementare un browser"metadati".</span><span class="sxs-lookup"><span data-stu-id="79342-358">The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a "metadata browser".</span></span>  
  
 [!code-csharp[PropertySystemEsoterics#DPGetMetadataSingle](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]
 [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  
[!code-csharp[PropertySystemEsoterics#FPMProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/XAMLAPP/page2.xaml.cs#fpmproperties)]
[!code-vb[PropertySystemEsoterics#FPMProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79342-359">Poiché sono già stati applicati a un'operazione della proprietà di dipendenza, questi metadati sono sealed e non è possibile impostarne le proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-359">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.FrameworkPropertyMetadataOptions" />
      </Docs>
    </Member>
    <Member MemberName="IsDataBindingAllowed">
      <MemberSignature Language="C#" Value="public bool IsDataBindingAllowed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDataBindingAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDataBindingAllowed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDataBindingAllowed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79342-360">Ottiene un valore che indica se il data binding è supportato per la proprietà di dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-360">Gets a value that indicates whether data binding is supported for the dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79342-361">
            <see langword="true" /> se l'associazione dati è supportata sulla proprietà di dipendenza alla quale si applicano questi metadati; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-361">
              <see langword="true" /> if data binding is supported on the dependency property to which this metadata applies; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="79342-362">Il valore predefinito è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-362">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-363">Questa proprietà riporta `false` per una delle due condizioni possibili: l'associazione dati per una proprietà di dipendenza non è consentita perché la proprietà di dipendenza è di sola lettura (come indicato nell'identificatore della proprietà di dipendenza, non nei metadati), o il valore di un'altra proprietà di metadati, <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>, è impostato su `true` nei metadati.</span><span class="sxs-lookup"><span data-stu-id="79342-363">This property reports `false` for one of two possible conditions: either data binding to a dependency property is not allowed because the dependency property is read-only (as reported in the dependency property identifier, not the metadata), or the value of another metadata property, <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>, is set to `true` in this metadata.</span></span> <span data-ttu-id="79342-364">Questa proprietà viene esposta per praticità, in modo che i chiamanti non è necessario verificare entrambi <xref:System.Windows.DependencyProperty.ReadOnly%2A> e <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>.</span><span class="sxs-lookup"><span data-stu-id="79342-364">This property is exposed as a convenience so that callers do not have to check both <xref:System.Windows.DependencyProperty.ReadOnly%2A> and <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>.</span></span>  
  
 <span data-ttu-id="79342-365">Se si sta tentando di creare i metadati che specifica che una proprietà di lettura/scrittura in caso contrario non deve supportare l'associazione dati, specificare il flag <xref:System.Windows.FrameworkPropertyMetadataOptions.NotDataBindable> (si noti la leggera differenza di convenzione di denominazione invece <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>).</span><span class="sxs-lookup"><span data-stu-id="79342-365">If you are attempting to create metadata that specifies that an otherwise read/write property should not support data binding, specify the flag <xref:System.Windows.FrameworkPropertyMetadataOptions.NotDataBindable> (note the slight naming convention difference versus <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>).</span></span>  
  
<a name="xamlTextUsage_IsDataBindingAllowed"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="79342-366">Utilizzo di testo XAML</span><span class="sxs-lookup"><span data-stu-id="79342-366">XAML Text Usage</span></span>  
 <span data-ttu-id="79342-367">Membri di questa classe non vengono utilizzati in genere [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="79342-367">Members of this class are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79342-368">L'esempio seguente ottiene i metadati predefiniti dalla dipendenza vari campi delle proprietà, il valore di varie query <xref:System.Windows.FrameworkPropertyMetadata> , proprietà e utilizza le informazioni per popolare una tabella per implementare un browser"metadati".</span><span class="sxs-lookup"><span data-stu-id="79342-368">The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a "metadata browser".</span></span>  
  
 [!code-csharp[PropertySystemEsoterics#DPGetMetadataSingle](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]
 [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  
[!code-csharp[PropertySystemEsoterics#FPMProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/XAMLAPP/page2.xaml.cs#fpmproperties)]
[!code-vb[PropertySystemEsoterics#FPMProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.FrameworkPropertyMetadataOptions" />
      </Docs>
    </Member>
    <Member MemberName="IsNotDataBindable">
      <MemberSignature Language="C#" Value="public bool IsNotDataBindable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNotDataBindable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNotDataBindable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNotDataBindable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79342-369">Ottiene o imposta un valore che indica se la proprietà di dipendenza supporta il data binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-369">Gets or sets a value that indicates whether the dependency property supports data binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79342-370">
            <see langword="true" /> se la proprietà non supporta l’associazione dati; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-370">
              <see langword="true" /> if the property does not support data binding; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="79342-371">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-371">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-372">Si noti che questa proprietà di metadati è impostata su `true` in particolare per le proprietà che non devono supportare l'associazione di dati, nonostante siano di proprietà di lettura / scrittura.</span><span class="sxs-lookup"><span data-stu-id="79342-372">Note that this metadata property is set to `true` specifically for properties that should not support data binding, despite being read-write properties.</span></span> <span data-ttu-id="79342-373">È previsto che nella maggior parte dei casi in cui viene dichiarata una proprietà di dipendenza, associazione dati viene considerata, perché l'associazione dati è uno degli scenari chiave in cui una proprietà di dipendenza è utile.</span><span class="sxs-lookup"><span data-stu-id="79342-373">The expectation is that in most cases where a dependency property is declared, data binding is desired, because data binding is one of the key scenarios where a dependency property is useful.</span></span> <span data-ttu-id="79342-374">A differenza di <xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, questo non modifica soltanto un valore predefinito che può essere modificato successivamente in un'associazione specifica.</span><span class="sxs-lookup"><span data-stu-id="79342-374">Unlike <xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, this does not merely change a default that can later be changed on a specific binding.</span></span> <span data-ttu-id="79342-375">Impostazione di questa proprietà `true` nei metadati per una proprietà di dipendenza dei metadati disabiliterà tutte le associazioni dell'applicazione i valori tramite espressioni a tale proprietà di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="79342-375">Setting this property `true` in the metadata for a dependency property metadata will disable all bindings from applying their values through expressions to that dependency property.</span></span>  
  
 <span data-ttu-id="79342-376">Le proprietà di dipendenza di sola lettura non supportano l'associazione dati (perché non hanno alcuna funzione set che è possibile applicare i valori modificati), ma vengono comunque report `false` per <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>.</span><span class="sxs-lookup"><span data-stu-id="79342-376">Read-only dependency properties do not support data binding (because they have no setter that can apply changed values), but will still report `false` for <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>.</span></span> <span data-ttu-id="79342-377">In questo modo le proprietà che corrispondono a un <xref:System.Windows.FrameworkPropertyMetadataOptions> valori riporteranno con i metadati come è stata effettivamente stabilito, anziché reporting sempre il comportamento del risultato finale che potrebbe implicare la denominazione della proprietà.</span><span class="sxs-lookup"><span data-stu-id="79342-377">This is because properties that correspond to a <xref:System.Windows.FrameworkPropertyMetadataOptions> values will report parity with how the metadata was actually established, rather than always reporting the end result behavior that the naming of the property might imply.</span></span> <span data-ttu-id="79342-378">Per determinare se una proprietà di dipendenza consente l'associazione di dati, è consigliabile controllare <xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A> invece.</span><span class="sxs-lookup"><span data-stu-id="79342-378">To determine whether a given dependency property permits data binding, you should usually check <xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A> instead.</span></span> <span data-ttu-id="79342-379"><xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A> è utile per la verifica di <xref:System.Windows.DependencyProperty.ReadOnly%2A> e <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A> come una singola operazione, producendo il risultato previsto.</span><span class="sxs-lookup"><span data-stu-id="79342-379"><xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A> is a convenience for checking both <xref:System.Windows.DependencyProperty.ReadOnly%2A> and <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A> as a single operation, yielding the expected result.</span></span>  
  
 <span data-ttu-id="79342-380">Proprietà nelle classi derivate di <xref:System.Windows.PropertyMetadata> sono in genere definiti nel modello a oggetti di lettura e scrittura.</span><span class="sxs-lookup"><span data-stu-id="79342-380">Properties on derived classes of <xref:System.Windows.PropertyMetadata> are typically defined in the object model as read-write.</span></span> <span data-ttu-id="79342-381">Si tratta pertanto può essere modificate dopo l'inizializzazione dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="79342-381">This is so they can be adjusted after initialization of the instance.</span></span> <span data-ttu-id="79342-382">Tuttavia, dopo che i metadati sono utilizzati come parte di una chiamata a <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, o <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, il sistema di proprietà eseguirà il sealing dell'istanza di metadati e proprietà che trasmettono le specifiche dei metadati ora sono considerate immutabili.</span><span class="sxs-lookup"><span data-stu-id="79342-382">However, after the metadata is consumed as part of a call to <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, or <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</span></span> <span data-ttu-id="79342-383">Il tentativo di impostare questa proprietà dopo <xref:System.Windows.PropertyMetadata.IsSealed%2A> è `true` i metadati di questa istanza verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="79342-383">Attempting to set this property after <xref:System.Windows.PropertyMetadata.IsSealed%2A> is `true` on this metadata instance will raise an exception.</span></span>  
  
<a name="xamlTextUsage_IsNotDataBindable"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="79342-384">Utilizzo di testo XAML</span><span class="sxs-lookup"><span data-stu-id="79342-384">XAML Text Usage</span></span>  
 <span data-ttu-id="79342-385">Membri di questa classe non vengono utilizzati in genere [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="79342-385">Members of this class are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79342-386">Poiché sono già stati applicati a un'operazione della proprietà di dipendenza, questi metadati sono sealed e non è possibile impostarne le proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-386">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed" />
        <altmember cref="T:System.Windows.FrameworkPropertyMetadataOptions" />
      </Docs>
    </Member>
    <Member MemberName="Journal">
      <MemberSignature Language="C#" Value="public bool Journal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Journal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkPropertyMetadata.Journal" />
      <MemberSignature Language="VB.NET" Value="Public Property Journal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Journal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79342-387">Ottiene o imposta un valore che indica se la proprietà contiene informazioni di inserimento nel journal che le applicazioni possono o devono archiviare come parte di un'implementazione di inserimento nel journal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-387">Gets or sets a value that indicates whether this property contains journaling information that applications can or should store as part of a journaling implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79342-388">
            <see langword="true" /> se l'inserimento nel journal deve essere eseguito nella proprietà di dipendenza a cui sono applicati i metadati. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-388">
              <see langword="true" /> if journaling should be performed on the dependency property that this metadata is applied to; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="79342-389">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-389">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-390">Proprietà nelle classi derivate di <xref:System.Windows.PropertyMetadata> sono in genere definiti nel modello a oggetti di lettura e scrittura.</span><span class="sxs-lookup"><span data-stu-id="79342-390">Properties on derived classes of <xref:System.Windows.PropertyMetadata> are typically defined in the object model as read-write.</span></span> <span data-ttu-id="79342-391">Si tratta pertanto può essere modificate dopo l'inizializzazione dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="79342-391">This is so they can be adjusted after initialization of the instance.</span></span> <span data-ttu-id="79342-392">Tuttavia, dopo che i metadati sono utilizzati come parte di una chiamata a <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, o <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, il sistema di proprietà eseguirà il sealing dell'istanza di metadati e proprietà che trasmettono le specifiche dei metadati ora sono considerate immutabili.</span><span class="sxs-lookup"><span data-stu-id="79342-392">However, after the metadata is consumed as part of a call to <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, or <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</span></span> <span data-ttu-id="79342-393">Il tentativo di impostare questa proprietà dopo <xref:System.Windows.PropertyMetadata.IsSealed%2A> è `true` i metadati di questa istanza verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="79342-393">Attempting to set this property after <xref:System.Windows.PropertyMetadata.IsSealed%2A> is `true` on this metadata instance will raise an exception.</span></span>  
  
<a name="xamlTextUsage_Journal"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="79342-394">Utilizzo di testo XAML</span><span class="sxs-lookup"><span data-stu-id="79342-394">XAML Text Usage</span></span>  
 <span data-ttu-id="79342-395">Membri di questa classe non vengono utilizzati in genere [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="79342-395">Members of this class are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79342-396">Poiché sono già stati applicati a un'operazione della proprietà di dipendenza, questi metadati sono sealed e non è possibile impostarne le proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-396">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.FrameworkPropertyMetadataOptions" />
        <altmember cref="T:System.Windows.Navigation.JournalEntry" />
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="protected override void Merge (System.Windows.PropertyMetadata baseMetadata, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Merge(class System.Windows.PropertyMetadata baseMetadata, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Merge (baseMetadata As PropertyMetadata, dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Merge(System::Windows::PropertyMetadata ^ baseMetadata, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseMetadata" Type="System.Windows.PropertyMetadata" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="baseMetadata">
          <span data-ttu-id="79342-397">Metadati di base da unire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-397">The base metadata to merge.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="79342-398">Proprietà di dipendenza a cui vengono applicati i metadati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-398">The dependency property this metadata is being applied to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79342-399">Abilita un merge dei metadati di origine con i metadati di base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-399">Enables a merge of the source metadata with base metadata.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-400">Questo metodo viene utilizzato internamente durante l'override di metadati.</span><span class="sxs-lookup"><span data-stu-id="79342-400">This method is used internally when metadata is being overridden.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="79342-401">Le classi che derivano da <see cref="T:System.Windows.PropertyMetadata" /> (o da questa classe particolarmente) deve eseguire l'override di questo metodo per l'account per tutte le proprietà dei metadati che hanno aggiunto nelle rispettive implementazioni.</span>
            <span class="sxs-lookup">
              <span data-stu-id="79342-401">Classes that derive from <see cref="T:System.Windows.PropertyMetadata" /> (or this class particularly) should override this method to account for any metadata properties they have added in their implementations.</span>
            </span>
            <span data-ttu-id="79342-402">Ad esempio, l'implementazione potrebbe essere aggiunto un nuovo valore di enumerazione flag per flag e <see cref="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" /> implementazione deve quindi essere in grado di combinare correttamente tali flag.</span>
            <span class="sxs-lookup">
              <span data-stu-id="79342-402">For instance, your implementation might have added a new flagwise enumeration value, and the <see cref="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" /> implementation should then be able to combine those flags correctly.</span>
            </span>
            <span data-ttu-id="79342-403">Chiamare sempre l'implementazione di base prima dell'implementazione, perché l'implementazione di base si occupa dell'unione di tutte le proprietà già definite sui tipi precedenti nella gerarchia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="79342-403">Always call the base implementation prior to your own implementation, because the base implementation takes care of merging all the properties already defined on previous types in the hierarchy.</span>
            </span>
            <span data-ttu-id="79342-404">Il comportamento aggiunto dal <see cref="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" /> implementazione in <see cref="T:System.Windows.FrameworkPropertyMetadata" /> è che specifiche proprietà a livello di framework WPF nei metadati, ad esempio <see cref="P:System.Windows.FrameworkPropertyMetadata.AffectsRender" /> vengono combinati in un bit per bit o operazione.</span>
            <span class="sxs-lookup">
              <span data-stu-id="79342-404">The behavior added by the <see cref="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" /> implementation in <see cref="T:System.Windows.FrameworkPropertyMetadata" /> is that specific WPF framework-level properties in the metadata such as <see cref="P:System.Windows.FrameworkPropertyMetadata.AffectsRender" /> are combined in a bitwise or operation.</span>
            </span>
            <span data-ttu-id="79342-405">Il <see cref="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" /> comportamento implementa anche il comportamento quando si sostituiscono i metadati della proprietà su una proprietà di dipendenza esistente chiamando <see cref="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)" />., usando i metadati di sostituzione sono <see cref="T:System.Windows.FrameworkPropertyMetadata" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="79342-405">The <see cref="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" /> behavior also implements the behavior when you override the property metadata on an existing dependency property by calling <see cref="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)" />., using override metadata that is <see cref="T:System.Windows.FrameworkPropertyMetadata" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.PropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" />
        <altmember cref="P:System.Windows.PropertyMetadata.IsSealed" />
        <altmember cref="M:System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="OnApply">
      <MemberSignature Language="C#" Value="protected override void OnApply (System.Windows.DependencyProperty dp, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnApply(class System.Windows.DependencyProperty dp, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnApply (dp As DependencyProperty, targetType As Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnApply(System::Windows::DependencyProperty ^ dp, Type ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="79342-406">Proprietà di dipendenza alla quale sono stati applicati i metadati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-406">The dependency property to which the metadata has been applied.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="79342-407">Il tipo associato a questi metadati se questi sono metadati di tipo specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-407">The type associated with this metadata if this is type-specific metadata.</span>
          </span>
          <span data-ttu-id="79342-408">Se si tratta di metadati predefiniti, questo valore può essere <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-408">If this is default metadata, this value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79342-409">Chiamata effettuata quando questi metadati sono stati applicati ad una proprietà che indica che i metadati sono sealed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-409">Called when this metadata has been applied to a property, which indicates that the metadata is being sealed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-410">Qualsiasi mutabilità della struttura di dati di un <xref:System.Windows.FrameworkPropertyMetadata> istanza deve essere contrassegnata come non modificabile quando questo metodo viene richiamato.</span><span class="sxs-lookup"><span data-stu-id="79342-410">Any mutability of the data structure of a <xref:System.Windows.FrameworkPropertyMetadata> instance should be marked as immutable when this method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="79342-411">Il <see cref="T:System.Windows.FrameworkPropertyMetadata" /> implementazione di questo metodo non esegue alcuna operazione, oltre a chiamare l'implementazione di base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="79342-411">The <see cref="T:System.Windows.FrameworkPropertyMetadata" /> implementation of this method does nothing beyond calling the base implementation.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.PropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)" />
        <altmember cref="P:System.Windows.PropertyMetadata.IsSealed" />
        <altmember cref="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="OverridesInheritanceBehavior">
      <MemberSignature Language="C#" Value="public bool OverridesInheritanceBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OverridesInheritanceBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property OverridesInheritanceBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OverridesInheritanceBehavior { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79342-412">Ottiene o imposta un valore che indica se la valutazione dell'ereditarietà del valore della proprietà deve estendersi attraverso determinati limiti di contenuto nell'albero logico degli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-412">Gets or sets a value that indicates whether the property value inheritance evaluation should span across certain content boundaries in the logical tree of elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79342-413">
            <see langword="true" /> se l'ereditarietà del valore di proprietà deve estendersi attraverso certi limiti di contenuto; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-413">
              <see langword="true" /> if the property value inheritance should span across certain content boundaries; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="79342-414">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-414">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-415">Questi metadati indica una modifica raramente applicata al comportamento di ereditarietà di proprietà valore attraverso i limiti degli elementi figlio dell'elemento padre speciale.</span><span class="sxs-lookup"><span data-stu-id="79342-415">This metadata reports a seldom-applied modification to property value inheritance behavior across special parent element-child element boundaries.</span></span> <span data-ttu-id="79342-416">L'esempio canonico di tale limite è il contenuto di un <xref:System.Windows.Controls.Frame>, dove il <xref:System.Windows.Controls.Frame> contenuto potrebbe essere ricaricato indipendentemente dall'esistenza del <xref:System.Windows.Controls.Frame>.</span><span class="sxs-lookup"><span data-stu-id="79342-416">The canonical example of such a boundary is the contents of a <xref:System.Windows.Controls.Frame>, where the <xref:System.Windows.Controls.Frame> content might get reloaded independently of the existence of the <xref:System.Windows.Controls.Frame>.</span></span> <span data-ttu-id="79342-417">Il comportamento del sistema di proprietà desiderato è che ereditarietà del valore di proprietà non deve attraversare il contenuto del <xref:System.Windows.Controls.Frame>, perché questi contenuti potrebbero essere elementi che l'applicazione che ospita il frame non possiede o controlla.</span><span class="sxs-lookup"><span data-stu-id="79342-417">The desired property system behavior is that property value inheritance should not traverse into the contents of the <xref:System.Windows.Controls.Frame>, because these contents might be elements that the application hosting the frame does not own or control.</span></span> <span data-ttu-id="79342-418">Specificare i metadati con <xref:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior%2A> impostato su `true`, specificando anche <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> come `true`, causerà la proprietà in cui i metadati sono applicati sarà ereditabile anche attraverso il <xref:System.Windows.Controls.Frame> limite o limiti simili.</span><span class="sxs-lookup"><span data-stu-id="79342-418">Specifying metadata with <xref:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior%2A> set to `true`, as well as specifying <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> as `true`, will cause the property on which the metadata is applied to be inheritable even across the <xref:System.Windows.Controls.Frame> boundary or similar boundaries.</span></span>  
  
 <span data-ttu-id="79342-419">Proprietà nelle classi derivate di <xref:System.Windows.PropertyMetadata> sono in genere definiti nel modello a oggetti di lettura e scrittura.</span><span class="sxs-lookup"><span data-stu-id="79342-419">Properties on derived classes of <xref:System.Windows.PropertyMetadata> are typically defined in the object model as read-write.</span></span> <span data-ttu-id="79342-420">Si tratta pertanto può essere modificate dopo l'inizializzazione dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="79342-420">This is so they can be adjusted after initialization of the instance.</span></span> <span data-ttu-id="79342-421">Tuttavia, dopo che i metadati sono utilizzati come parte di una chiamata a <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, o <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, il sistema di proprietà eseguirà il sealing dell'istanza di metadati e proprietà che trasmettono le specifiche dei metadati ora sono considerate immutabili.</span><span class="sxs-lookup"><span data-stu-id="79342-421">However, after the metadata is consumed as part of a call to <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, or <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</span></span> <span data-ttu-id="79342-422">Il tentativo di impostare questa proprietà dopo <xref:System.Windows.PropertyMetadata.IsSealed%2A> è `true` i metadati di questa istanza verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="79342-422">Attempting to set this property after <xref:System.Windows.PropertyMetadata.IsSealed%2A> is `true` on this metadata instance will raise an exception.</span></span>  
  
<a name="xamlTextUsage_OverridesInheritanceBehavior"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="79342-423">Utilizzo di testo XAML</span><span class="sxs-lookup"><span data-stu-id="79342-423">XAML Text Usage</span></span>  
 <span data-ttu-id="79342-424">Membri di questa classe non vengono utilizzati in genere [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="79342-424">Members of this class are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79342-425">Poiché sono già stati applicati a un'operazione della proprietà di dipendenza, questi metadati sono sealed e non è possibile impostarne le proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-425">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.FrameworkPropertyMetadataOptions" />
      </Docs>
    </Member>
    <Member MemberName="SubPropertiesDoNotAffectRender">
      <MemberSignature Language="C#" Value="public bool SubPropertiesDoNotAffectRender { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubPropertiesDoNotAffectRender" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender" />
      <MemberSignature Language="VB.NET" Value="Public Property SubPropertiesDoNotAffectRender As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SubPropertiesDoNotAffectRender { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79342-426">Ottiene o imposta un valore che indica se le sottoproprietà della proprietà di dipendenza non influiscono sul rendering dell'oggetto contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-426">Gets or sets a value that indicates whether sub-properties of the dependency property do not affect the rendering of the containing object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79342-427">
            <see langword="true" /> se le modifiche ai valori della sub-proprietà non influiscono su rendering modificato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-427">
              <see langword="true" /> if changes to sub-property values do not affect rendering if changed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="79342-428">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-428">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79342-429">Questa opzione di metadati è pertinente per le proprietà di dipendenza che sono tipi di riferimento, in cui tale tipo ha i valori delle proprietà di un proprio.</span><span class="sxs-lookup"><span data-stu-id="79342-429">This metadata option is pertinent for dependency properties that are reference types, where that type has property values of its own.</span></span> <span data-ttu-id="79342-430">In genere, la logica del sistema di layout è presupporre che qualsiasi proprietà di dipendenza con sottoproprietà potenzialmente avranno effetto su layout, perché il controllo di tutte le sottoproprietà per le modifiche è più tempo rispetto al effettivamente in esecuzione un'altra passaggio di rendering.</span><span class="sxs-lookup"><span data-stu-id="79342-430">Typically, the layout system logic is to assume that any dependency property with sub-properties potentially will affect layout, because checking all sub-properties for changes is more time consuming than actually running another render pass.</span></span> <span data-ttu-id="79342-431">Impostazione dell'opzione `true` è utile per ottimizzare le prestazioni dell'implementazione di sistema di layout a livello di framework WPF.</span><span class="sxs-lookup"><span data-stu-id="79342-431">Setting this option to `true` is useful for optimizing performance of the WPF framework level layout system implementation.</span></span>  
  
 <span data-ttu-id="79342-432">Proprietà nelle classi derivate di <xref:System.Windows.PropertyMetadata> sono in genere definiti nel modello a oggetti di lettura e scrittura.</span><span class="sxs-lookup"><span data-stu-id="79342-432">Properties on derived classes of <xref:System.Windows.PropertyMetadata> are typically defined in the object model as read-write.</span></span> <span data-ttu-id="79342-433">Si tratta pertanto può essere modificate dopo l'inizializzazione dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="79342-433">This is so they can be adjusted after initialization of the instance.</span></span> <span data-ttu-id="79342-434">Tuttavia, dopo che i metadati vengono utilizzati come parte di una chiamata a <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, o <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, il sistema di proprietà eseguirà il sealing dell'istanza di metadati e proprietà che trasmettono le specifiche dei metadati ora sono considerate immutabili.</span><span class="sxs-lookup"><span data-stu-id="79342-434">However, once the metadata is consumed as part of a call to <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, or <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</span></span> <span data-ttu-id="79342-435">Il tentativo di impostare questa proprietà dopo <xref:System.Windows.PropertyMetadata.IsSealed%2A> è `true` i metadati di questa istanza verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="79342-435">Attempting to set this property after <xref:System.Windows.PropertyMetadata.IsSealed%2A> is `true` on this metadata instance will raise an exception.</span></span>  
  
<a name="xamlTextUsage_SubPropertiesDoNotAffectRender"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="79342-436">Utilizzo di testo XAML</span><span class="sxs-lookup"><span data-stu-id="79342-436">XAML Text Usage</span></span>  
 <span data-ttu-id="79342-437">Membri di questa classe non vengono utilizzati in genere [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="79342-437">Members of this class are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79342-438">Poiché sono già stati applicati a un'operazione della proprietà di dipendenza, questi metadati sono sealed e non è possibile impostarne le proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79342-438">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Freezable" />
      </Docs>
    </Member>
  </Members>
</Type>