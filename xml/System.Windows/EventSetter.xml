<Type Name="EventSetter" FullName="System.Windows.EventSetter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f1abeae481be679a4c632b9e1b904e5a0a9369e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36460429" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventSetter : System.Windows.SetterBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSetter extends System.Windows.SetterBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventSetter" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSetter&#xA;Inherits SetterBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSetter : System::Windows::SetterBase" />
  <TypeSignature Language="F#" Value="type EventSetter = class&#xA;    inherit SetterBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.SetterBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta un setter evento in uno stile. I setter evento richiamano i gestori eventi specificati in risposta agli eventi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I setter evento richiamano i gestori eventi specificati in risposta a eventi indirizzati che si applicano a tutti gli elementi che fanno riferimento le <xref:System.Windows.Style> anziché richiedere di associano i gestori di istanza per ogni singolo elemento. Solo <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> supportano <xref:System.Windows.EventSetter> oggetti.  
  
 È possibile dichiarare solo i setter evento per gli eventi indirizzati eventi. È possibile dichiarare i setter evento per eventi indirizzati, con una strategia di routing diretto, eventi di bubbling, o eventi di tunneling.  
  
 Istanze di <xref:System.Windows.EventSetter> classe sono in genere create tramite [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], come un elemento oggetto in uno stile definito tramite [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]. Un <xref:System.Windows.EventSetter> potrebbe inoltre essere creata un'istanza dal codice.  
  
 Impossibile utilizzare i setter evento in uno stile che è contenuto in un dizionario risorse tema. Questo accade perché un dizionario risorse tema in fase di esecuzione è spesso separato [!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)] file e non dispone di alcun ambito definito in cui può esistere code-behind che definisce i gestori di accompagnamento.  
  
 I gestori associati tramite Setter evento vengono richiamati dopo eventuali gestori di classi per un evento, nonché dopo eventuali gestori di istanza. Di conseguenza, se un gestore di classe o istanza contrassegna un evento gestito nei relativi argomenti, quindi dichiarato da un setter evento viene richiamato il gestore non, a meno che l'evento imposti specificatamente <xref:System.Windows.EventSetter.HandledEventsToo%2A> `true`.  
  
 I setter evento possono provenire anche da <xref:System.Windows.Style.BasedOn%2A> stili. I gestori di setter evento dallo stile specificato come <xref:System.Windows.Style.BasedOn%2A> verranno richiamati dopo i gestori nello stile immediato.  
  
 Si noti che solo <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> supporta <xref:System.Windows.EventSetter> oggetti. Trigger (<xref:System.Windows.TriggerBase> e le classi derivate) non supportano <xref:System.Windows.EventSetter>.  
  
   
  
## Examples  
 Nell'esempio seguente definisce una singola <xref:System.Windows.EventSetter> all'interno di uno stile a livello di pagina.  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 L'esempio seguente mostra i gestori di eventi:  
  
 [!code-csharp[EventOvwSupport#EventSetterRef](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#eventsetterref)]
 [!code-vb[EventOvwSupport#EventSetterRef](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#eventsetterref)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
    <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.EventSetter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventSetter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSetter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.EventSetter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSetter (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSetter(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Windows.EventSetter : System.Windows.RoutedEvent * Delegate -&gt; System.Windows.EventSetter" Usage="new System.Windows.EventSetter (routedEvent, handler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">Evento indirizzato specifico a cui risponde <see cref="T:System.Windows.EventSetter" />.</param>
        <param name="handler">Gestore da assegnare in questo setter.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.EventSetter" /> usando i parametri dell'evento e del gestore specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa firma viene in genere utilizzata se si crea un' <xref:System.Windows.EventSetter> nel codice o nel code-behind per creare un <xref:System.Windows.EventSetter> che aumenta di uno stile esistente prima di utilizzare.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Event">
      <MemberSignature Language="C#" Value="public System.Windows.RoutedEvent Event { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.RoutedEvent Event" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.Event" />
      <MemberSignature Language="VB.NET" Value="Public Property Event As RoutedEvent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::RoutedEvent ^ Event { System::Windows::RoutedEvent ^ get(); void set(System::Windows::RoutedEvent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Event : System.Windows.RoutedEvent with get, set" Usage="System.Windows.EventSetter.Event" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'evento indirizzato specifico a cui risponde <see cref="T:System.Windows.EventSetter" />.</summary>
        <value>Campo identificatore dell'evento indirizzato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è possibile impostare questa proprietà se lo stile che contiene il <xref:System.Windows.EventSetter> è in uso e pertanto sealed. Se si imposta questa proprietà nel codice e la possibilità è che lo stile è in uso, controllare il valore della <xref:System.Windows.SetterBase.IsSealed%2A> proprietà il <xref:System.Windows.EventSetter> istanza prima di provare a impostare <xref:System.Windows.EventSetter.Event%2A>.  
  
   
  
## Examples  
 Nell'esempio seguente il <xref:System.Windows.EventSetter.Event%2A> proprietà come parte di un <xref:System.Windows.EventSetter> in uno stile di markup.  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è tentato di impostare questa proprietà su un oggetto <see cref="T:System.Windows.EventSetter" /> sealed.</exception>
        <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="HandledEventsToo">
      <MemberSignature Language="C#" Value="public bool HandledEventsToo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandledEventsToo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.HandledEventsToo" />
      <MemberSignature Language="VB.NET" Value="Public Property HandledEventsToo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HandledEventsToo { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HandledEventsToo : bool with get, set" Usage="System.Windows.EventSetter.HandledEventsToo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che determina se il gestore assegnato al metodo Set deve ancora essere richiamato, anche se l'evento è contrassegnato come gestito nei relativi dati.</summary>
        <value>
          <see langword="true" /> se il gestore deve essere richiamato; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Impostazione di <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> caratteristiche del modo in cui verranno richiamati gestori dell'evento devono essere eseguite sempre nel codice, il principio generale che non è possibile specificare <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> quando assegnazione definiti gestori eventi per le istanze direttamente a eventi denominati nella [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sintassi degli attributi. Sebbene l'impostazione di questo valore [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] non genera errori in fase di compilazione, il valore risultante [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genererà un'eccezione in fase di esecuzione quando viene utilizzato lo stile.  
  
<a name="xamlTextUsage_HandledEventsToo"></a>   
## <a name="xaml-text-usage"></a>Utilizzo di testo XAML  
 Questa proprietà non deve essere utilizzata [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]. Vedere la sezione Osservazioni.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public Delegate Handler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Delegate Handler" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.Handler" />
      <MemberSignature Language="VB.NET" Value="Public Property Handler As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Delegate ^ Handler { Delegate ^ get(); void set(Delegate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Handler : Delegate with get, set" Usage="System.Windows.EventSetter.Handler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.EventSetterHandlerConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il riferimento a un gestore per un evento indirizzato nel metodo Set.</summary>
        <value>Riferimento al gestore associato da <see cref="T:System.Windows.EventSetter" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente il <xref:System.Windows.EventSetter.Handler%2A> proprietà come parte di un <xref:System.Windows.EventSetter> in uno stile di markup.  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEvent.HandlerType" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
  </Members>
</Type>