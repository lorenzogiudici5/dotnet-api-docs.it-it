<Type Name="TextDecoration" FullName="System.Windows.TextDecoration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61d06bf3ddcf5b070701686bbe181bedcb95afb1" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52211349" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TextDecoration : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TextDecoration extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TextDecoration" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextDecoration&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextDecoration sealed : System::Windows::Media::Animation::Animatable" />
  <TypeSignature Language="F#" Value="type TextDecoration = class&#xA;    inherit Animatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un effetto del testo, ovvero un ornamento visivo aggiunto al testo, ad esempio una sottolineatura.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esistono quattro tipi di effetti del testo: sottolineato, linea di base, quali il barrato e linea sopra. Nell'esempio seguente mostra la posizione delle decorazioni di testo rispetto al testo.  
  
 ![Diagramma della posizione delle decorazioni di testo](~/add/media/textdecoration01.gif "diagramma della posizione delle decorazioni di testo")  
Esempio di tipi di effetto di testo  
  
 L'esempio seguente illustra un effetto di testo che è stato disegnato con un pennello sfumato lineare e una penna tratteggiata.  
  
 ![Decorazione di testo con sottolineatura sfumata lineare](~/add/media/textdecoration02.png "decorazione di testo con sottolineatura sfumata lineare")  
Esempio di un carattere di sottolineatura nello stile con una sfumatura lineare brush e pen tratteggiate  
  
 Si noti che <xref:System.Windows.TextDecoration> è derivato da <xref:System.Windows.Media.Animation.Animatable>. In questo modo è possibile applicare animazioni agli elementi, usando un <xref:System.Windows.Media.Animation.DoubleAnimation> per il <xref:System.Windows.TextDecoration.PenOffset%2A> e una <xref:System.Windows.Media.Animation.ThicknessAnimation> per il <xref:System.Windows.TextDecoration.Pen%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.TextDecorations" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.TextDecoration" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDecoration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecoration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextDecoration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.TextDecoration" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore predefinito di <xref:System.Windows.TextDecoration.Location%2A> è di proprietà <xref:System.Windows.TextDecorationLocation.Underline>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare un <xref:System.Windows.TextDecoration> usando il costruttore predefinito.  
  
 [!code-csharp[TextDecorationSnippets#TextDecorationSnippets2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets2)]
 [!code-vb[TextDecorationSnippets#TextDecorationSnippets2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets2)]
 [!code-xaml[TextDecorationSnippets#TextDecorationSnippets2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDecoration (System.Windows.TextDecorationLocation location, System.Windows.Media.Pen pen, double penOffset, System.Windows.TextDecorationUnit penOffsetUnit, System.Windows.TextDecorationUnit penThicknessUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.TextDecorationLocation location, class System.Windows.Media.Pen pen, float64 penOffset, valuetype System.Windows.TextDecorationUnit penOffsetUnit, valuetype System.Windows.TextDecorationUnit penThicknessUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecoration.#ctor(System.Windows.TextDecorationLocation,System.Windows.Media.Pen,System.Double,System.Windows.TextDecorationUnit,System.Windows.TextDecorationUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextDecoration(System::Windows::TextDecorationLocation location, System::Windows::Media::Pen ^ pen, double penOffset, System::Windows::TextDecorationUnit penOffsetUnit, System::Windows::TextDecorationUnit penThicknessUnit);" />
      <MemberSignature Language="F#" Value="new System.Windows.TextDecoration : System.Windows.TextDecorationLocation * System.Windows.Media.Pen * double * System.Windows.TextDecorationUnit * System.Windows.TextDecorationUnit -&gt; System.Windows.TextDecoration" Usage="new System.Windows.TextDecoration (location, pen, penOffset, penOffsetUnit, penThicknessUnit)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.Windows.TextDecorationLocation" />
        <Parameter Name="pen" Type="System.Windows.Media.Pen" />
        <Parameter Name="penOffset" Type="System.Double" />
        <Parameter Name="penOffsetUnit" Type="System.Windows.TextDecorationUnit" />
        <Parameter Name="penThicknessUnit" Type="System.Windows.TextDecorationUnit" />
      </Parameters>
      <Docs>
        <param name="location">Posizione dell'effetto di testo.</param>
        <param name="pen">Oggetto <see cref="T:System.Windows.Media.Pen" /> utilizzato per disegnare l'effetto di testo. Se questo valore è <see langword="null" />, il colore dell'effetto di testo corrisponde al colore del testo al quale viene applicato e lo spessore dell'effetto di testo viene impostato sullo spessore consigliato per il tipo di carattere.</param>
        <param name="penOffset">Spostamento verticale dalla posizione dell'effetto di testo. Utilizzando un valore negativo l'effetto viene spostato verso il basso, con un valore positivo l'effetto viene spostato verso l'alto.</param>
        <param name="penOffsetUnit">Unità utilizzate per interpretare il valore di <paramref name="penOffset" />.</param>
        <param name="penThicknessUnit">Unità utilizzate per interpretare il valore di <see cref="P:System.Windows.Media.Pen.Thickness" /> per <paramref name="pen" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.TextDecoration" /> con i valori delle proprietà <see cref="P:System.Windows.TextDecoration.Location" />, <see cref="P:System.Windows.TextDecoration.Pen" />, <see cref="P:System.Windows.TextDecoration.PenOffset" />, <see cref="P:System.Windows.TextDecoration.PenOffsetUnit" /> e <see cref="P:System.Windows.TextDecoration.PenThicknessUnit" /> specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come creare un <xref:System.Windows.TextDecoration> usando il `location`, `pen`, `penOffset`, `penOffsetUnit`, e `penThicknessUnit` parametri.  
  
 [!code-csharp[TextDecorationSnippets#TextDecorationSnippets6](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets6)]
 [!code-vb[TextDecorationSnippets#TextDecorationSnippets6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets6)]
 [!code-xaml[TextDecorationSnippets#TextDecorationSnippets6](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecoration Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.TextDecoration Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecoration.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As TextDecoration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::TextDecoration ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.TextDecoration" Usage="textDecoration.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecoration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clone modificabile di questo oggetto <see cref="T:System.Windows.TextDecoration" />, eseguendo copie complete dei valori dell'oggetto.</summary>
        <returns>Clone modificabile dell'oggetto corrente. La proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto clonato è <see langword="false" />, anche se la proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true." />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato per generare copie modificabili di bloccata <xref:System.Windows.Freezable> oggetti (o qualsiasi <xref:System.Windows.Freezable> oggetto). Per praticità, questo metodo nasconde la versione ereditata con un'implementazione fortemente tipizzata.  
  
 Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 Durante la copia delle proprietà di dipendenza, questo metodo copia i riferimenti alle risorse e i data binding (che potrebbero non essere più risolti), ma non le animazioni né i relativi valori correnti.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecoration CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.TextDecoration CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecoration.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As TextDecoration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::TextDecoration ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.TextDecoration" Usage="textDecoration.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecoration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clone modificabile dell'oggetto <see cref="T:System.Windows.TextDecoration" />, eseguendo copie complete dei valori correnti di tale oggetto.</summary>
        <returns>Clone modificabile dell'oggetto corrente. Il valore della proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto duplicato è <see langword="false" /> anche se il valore della proprietà <see cref="P:System.Windows.Freezable.IsFrozen" /> dell'oggetto di origine è <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato per generare copie modificabili di bloccata <xref:System.Windows.Freezable> oggetti (o qualsiasi <xref:System.Windows.Freezable> oggetto). Per praticità, questo metodo nasconde la versione ereditata con un'implementazione fortemente tipizzata.  
  
 Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 I riferimenti alle risorse, i data binding e le animazioni non vengono copiati, ma vengono copiati i relativi valori correnti.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecoration.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="textDecoration.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextDecorationLocation Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecoration.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As TextDecorationLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecorationLocation Location { System::Windows::TextDecorationLocation get(); void set(System::Windows::TextDecorationLocation value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Windows.TextDecorationLocation with get, set" Usage="System.Windows.TextDecoration.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la posizione verticale nella quale viene disegnato l'effetto di testo.</summary>
        <value>Posizione verticale nella quale viene disegnato l'effetto di testo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nell'esempio seguente mostra la posizione delle decorazioni di testo rispetto al testo.  
  
 ![Diagramma della posizione delle decorazioni di testo](~/add/media/textdecoration01.gif "diagramma della posizione delle decorazioni di testo")  
Esempio di tipi di effetto di testo  
  
 Il <xref:System.Windows.TextDecoration.PenOffset%2A> proprietà consente di eseguire l'offset dell'effetto di testo dall'oggetto specificato <xref:System.Windows.TextDecoration.Location%2A>.  
  
<a name="dependencyPropertyInfo_Location"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietà di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.TextDecoration.LocationProperty>|  
|Impostare le proprietà dei metadati `true`|nessuno|  
  
   
  
## Examples  
 Nell'esempio di codice seguente, un effetto di testo barrato viene creato con un pennello di colore a tinta unita per la penna. La proprietà <xref:System.Windows.TextDecoration.Location%2A> è impostata su <xref:System.Windows.TextDecorationLocation.Strikethrough>.  
  
 [!code-csharp[textdecorationsnippets#TextDecorationSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets1)]
 [!code-vb[textdecorationsnippets#TextDecorationSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets1)]
 [!code-xaml[textdecorationsnippets#TextDecorationSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LocationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LocationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextDecoration.LocationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LocationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LocationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LocationProperty : System.Windows.DependencyProperty" Usage="System.Windows.TextDecoration.LocationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.TextDecoration.Location" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pen">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Pen Pen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Pen Pen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecoration.Pen" />
      <MemberSignature Language="VB.NET" Value="Public Property Pen As Pen" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Pen ^ Pen { System::Windows::Media::Pen ^ get(); void set(System::Windows::Media::Pen ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Pen : System.Windows.Media.Pen with get, set" Usage="System.Windows.TextDecoration.Pen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Windows.Media.Pen" /> utilizzato per disegnare l'effetto di testo.</summary>
        <value>Oggetto <see cref="T:System.Windows.Media.Pen" /> utilizzato per disegnare l'effetto di testo. Se questo valore è <c>null</c>, il colore dell'effetto corrisponde al testo a cui è applicato e lo spessore dell'effetto viene impostato per il tipo di carattere consigliato spessore.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'esempio seguente illustra un effetto di testo che è stato disegnato con un pennello sfumato lineare e una penna tratteggiata.  
  
 ![Decorazione di testo con sottolineatura sfumata lineare](~/add/media/textdecoration02.png "decorazione di testo con sottolineatura sfumata lineare")  
Esempio di un carattere di sottolineatura nello stile con una sfumatura lineare brush e pen tratteggiate  
  
<a name="dependencyPropertyInfo_Pen"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietà di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.TextDecoration.PenProperty>|  
|Impostare le proprietà dei metadati `true`|nessuno|  
  
   
  
## Examples  
 Nell'esempio di codice seguente, un effetto di testo sottolineato viene creato con un pennello sfumato lineare per la penna tratteggiata.  
  
 [!code-csharp[textdecorationsnippets#TextDecorationSnippets3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets3)]
 [!code-vb[textdecorationsnippets#TextDecorationSnippets3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets3)]
 [!code-xaml[textdecorationsnippets#TextDecorationSnippets3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.TextDecoration.PenThicknessUnit" />
      </Docs>
    </Member>
    <Member MemberName="PenOffset">
      <MemberSignature Language="C#" Value="public double PenOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PenOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecoration.PenOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property PenOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PenOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PenOffset : double with get, set" Usage="System.Windows.TextDecoration.PenOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'offset dell'effetto di testo dal relativo oggetto <see cref="P:System.Windows.TextDecoration.Location" />.</summary>
        <value>Offset dell'effetto di testo dal relativo oggetto <see cref="P:System.Windows.TextDecoration.Location" />. Il valore predefinito è 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valore negativo consente di spostare l'effetto di testo superiore, mentre un valore positivo viene spostata verso l'effetto di testo più basso. Usare il <xref:System.Windows.TextDecoration.PenOffsetUnit%2A> proprietà per specificare come vengono interpretate le unità di questo valore.  
  
<a name="dependencyPropertyInfo_PenOffset"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietà di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.TextDecoration.PenOffsetProperty>|  
|Impostare le proprietà dei metadati `true`|nessuno|  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come impostare la proprietà <xref:System.Windows.TextDecoration.PenOffset%2A>.  
  
 [!code-csharp[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets7)]
 [!code-vb[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets7)]
 [!code-xaml[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.TextDecoration.PenOffsetUnit" />
      </Docs>
    </Member>
    <Member MemberName="PenOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PenOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PenOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextDecoration.PenOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PenOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PenOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PenOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.TextDecoration.PenOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.TextDecoration.PenOffset" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PenOffsetUnit">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationUnit PenOffsetUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextDecorationUnit PenOffsetUnit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecoration.PenOffsetUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property PenOffsetUnit As TextDecorationUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecorationUnit PenOffsetUnit { System::Windows::TextDecorationUnit get(); void set(System::Windows::TextDecorationUnit value); };" />
      <MemberSignature Language="F#" Value="member this.PenOffsetUnit : System.Windows.TextDecorationUnit with get, set" Usage="System.Windows.TextDecoration.PenOffsetUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le unità nelle quali è espresso il valore <see cref="P:System.Windows.TextDecoration.PenOffset" />.</summary>
        <value>Unità nelle quali è espresso il valore <see cref="P:System.Windows.TextDecoration.PenOffset" />. Il valore predefinito è <see cref="F:System.Windows.TextDecorationUnit.FontRecommended" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PenOffsetUnit"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietà di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.TextDecoration.PenOffsetUnitProperty>|  
|Impostare le proprietà dei metadati `true`|nessuno|  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come impostare la proprietà <xref:System.Windows.TextDecoration.PenOffsetUnit%2A>.  
  
 [!code-csharp[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets7)]
 [!code-vb[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets7)]
 [!code-xaml[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PenOffsetUnitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PenOffsetUnitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PenOffsetUnitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextDecoration.PenOffsetUnitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PenOffsetUnitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PenOffsetUnitProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PenOffsetUnitProperty : System.Windows.DependencyProperty" Usage="System.Windows.TextDecoration.PenOffsetUnitProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.TextDecoration.PenOffsetUnit" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextDecoration.PenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PenProperty : System.Windows.DependencyProperty" Usage="System.Windows.TextDecoration.PenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.TextDecoration.Pen" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PenThicknessUnit">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationUnit PenThicknessUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextDecorationUnit PenThicknessUnit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecoration.PenThicknessUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property PenThicknessUnit As TextDecorationUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecorationUnit PenThicknessUnit { System::Windows::TextDecorationUnit get(); void set(System::Windows::TextDecorationUnit value); };" />
      <MemberSignature Language="F#" Value="member this.PenThicknessUnit : System.Windows.TextDecorationUnit with get, set" Usage="System.Windows.TextDecoration.PenThicknessUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le unità nelle quali è espresso l'oggetto <see cref="P:System.Windows.Media.Pen.Thickness" /> dell'effetto di testo  <see cref="P:System.Windows.TextDecoration.Pen" />.</summary>
        <value>Unità nelle quali è espresso l'oggetto <see cref="P:System.Windows.Media.Pen.Thickness" /> dell'effetto di testo  <see cref="P:System.Windows.TextDecoration.Pen" />. Il valore predefinito è <see cref="F:System.Windows.TextDecorationUnit.FontRecommended" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PenThicknessUnit"></a>   
## <a name="dependency-property-information"></a>Informazioni proprietà di dipendenza  
  
|||  
|-|-|  
|Campo dell'identificatore|<xref:System.Windows.TextDecoration.PenThicknessUnitProperty>|  
|Impostare le proprietà dei metadati `true`|nessuno|  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come impostare la proprietà <xref:System.Windows.TextDecoration.PenThicknessUnit%2A>.  
  
 [!code-csharp[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets7)]
 [!code-vb[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets7)]
 [!code-xaml[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PenThicknessUnitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PenThicknessUnitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PenThicknessUnitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextDecoration.PenThicknessUnitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PenThicknessUnitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PenThicknessUnitProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PenThicknessUnitProperty : System.Windows.DependencyProperty" Usage="System.Windows.TextDecoration.PenThicknessUnitProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà di dipendenza <see cref="P:System.Windows.TextDecoration.PenThicknessUnit" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>