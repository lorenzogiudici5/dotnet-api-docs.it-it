<Type Name="IDataObject" FullName="System.Windows.IDataObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="158a4276f6109167ac95604ef998ca5d6520a69c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30679555" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.IDataObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fornisce un meccanismo indipendente dal formato per il trasferimento dei dati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.IDataObject> interfaccia viene utilizzata la <xref:System.Windows.Clipboard> classe per i dati di operazioni di trasferimento come trascinamento e rilascio.  
  
 Quando viene implementato da una classe, il <xref:System.Windows.IDataObject> metodi consentono un singolo oggetto dati di offrire dati in più formati.  Offerta di dati in più formati tende a rendere i dati possono essere usati da un'ampia gamma di applicazioni da se solo un unico formato dati sono supportati.  
  
 Il <xref:System.Windows.DataObject> classe fornisce un'implementazione di base di <xref:System.Windows.IDataObject> interfaccia.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera un oggetto dati in un formato dati specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Stringa che specifica il formato in cui recuperare i dati. Per un set di formati dati predefiniti, vedere la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <summary>Recupera un oggetto dati in un formato dati specificato da una stringa.</summary>
        <returns>Oggetto dati contenente i dati nel formato specificato oppure **null** se i dati non sono disponibili nel formato specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un'implementazione di questo metodo, vedere <xref:System.Windows.DataObject.GetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(Type ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">Oggetto <see cref="T:System.Type" /> che specifica il formato in cui recuperare i dati. Per un set di formati dati predefiniti, vedere la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <summary>Recupera un oggetto dati in un formato dati specificato da un oggetto <see cref="T:System.Type" />.</summary>
        <returns>Oggetto dati contenente i dati nel formato specificato oppure **null** se i dati non sono disponibili nel formato specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un'implementazione di questo metodo, vedere <xref:System.Windows.DataObject.GetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Stringa che specifica il formato in cui recuperare i dati. Per un set di formati dati predefiniti, vedere la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="autoConvert">
          <see langword="true" /> per tentare di convertire automaticamente i dati nel formato specificato; <see langword="false" /> per non eseguire alcuna conversione del formato dati.  
  
 Se questo parametro è <see langword="false" />, il metodo restituisce i dati nel formato specificato, se disponibile, oppure come <see langword="null" /> se i dati non sono disponibili nel formato specificato.</param>
        <summary>Recupera un oggetto dati in un formato specificato, con conversione facoltativa dei dati nel formato specificato.</summary>
        <returns>Oggetto dati contenente i dati nel formato specificato oppure **null** se i dati non sono disponibili nel formato specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un'implementazione di questo metodo, vedere <xref:System.Windows.DataObject.GetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Verifica se i dati sono disponibili o se possono essere convertiti in un formato specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare **GetDataPresent** per determinare se un formato specificato non è disponibile nell'oggetto dati prima di chiamare <xref:System.Windows.IDataObject.GetData%2A>.  
  
 Chiamare <xref:System.Windows.IDataObject.GetFormats%2A> per ottenere un elenco di tutti i formati disponibili in questo oggetto dati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Stringa che specifica il formato di cui verificare la disponibilità. Per un insieme di formati dati predefiniti, vedere la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <summary>Verifica se i dati sono disponibili, o possono essere convertiti, in un formato specificato. Il formato dati è specificato da una stringa.</summary>
        <returns>
          <see langword="true" /> se i dati sono nel formato specificato o possono essere convertiti in tale formato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un'implementazione di questo metodo, vedere <xref:System.Windows.DataObject.GetDataPresent%2A>.  
  
 Chiamare **GetDataPresent** per determinare se un formato specificato non è disponibile nell'oggetto dati prima di chiamare <xref:System.Windows.IDataObject.GetData%2A>.  
  
 Chiamare <xref:System.Windows.IDataObject.GetFormats%2A> per ottenere un elenco di tutti i formati disponibili in questo oggetto dati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(Type ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">Oggetto <see cref="T:System.Type" /> che specifica il formato di cui verificare la disponibilità. Per un set di formati dati predefiniti, vedere la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <summary>Verifica se i dati sono disponibili o se possono essere convertiti in un formato specificato. Il formato dati è specificato da un oggetto <see cref="T:System.Type" />.</summary>
        <returns>
          <see langword="true" /> se i dati sono nel formato specificato o possono essere convertiti in tale formato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un'implementazione di questo metodo, <xref:System.Windows.DataObject.GetDataPresent%2A>.  
  
 Chiamare **GetDataPresent** per determinare se un formato specificato non è disponibile nell'oggetto dati prima di chiamare <xref:System.Windows.IDataObject.GetData%2A>.  
  
 Chiamare <xref:System.Windows.IDataObject.GetFormats%2A> per ottenere un elenco di tutti i formati disponibili in questo oggetto dati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Stringa che specifica il formato di cui verificare la disponibilità. Per un insieme di formati dati predefiniti, vedere la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="autoConvert">
          <see langword="false" /> per verificare solo la disponibilità del formato specificato; <see langword="true" /> per verificare anche se i dati archiviati nell'oggetto dati possono o meno essere convertiti nel formato specificato.</param>
        <summary>Verifica se i dati sono disponibili o se possono essere convertiti in un formato specificato. Un flag <see langword="Boolean" /> indica se verificare se i dati possono essere convertiti nel formato specificato qualora non siano disponibili in tale formato.</summary>
        <returns>
          <see langword="true" /> se i dati sono nel formato specificato o possono essere convertiti in tale formato; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un'implementazione di questo metodo, vedere <xref:System.Windows.DataObject.GetDataPresent%2A>.  
  
 Chiamare **GetDataPresent** per determinare se un formato specificato non è disponibile nell'oggetto dati prima di chiamare <xref:System.Windows.IDataObject.GetData%2A>.  
  
 Chiamare <xref:System.Windows.IDataObject.GetFormats%2A> per ottenere un elenco di tutti i formati disponibili in questo oggetto dati.  
  
 Questo metodo restituisce **true** quando:  
  
-   Il *autoConvert* parametro **true** e i dati sono nel formato specificato oppure può essere convertito nel formato specificato.  
  
-   Il *autoConvert* parametro **false** e i dati sono nel formato specificato.  
  
 Questo metodo restituisce **false** quando:  
  
-   Il *autoConvert* parametro **true** e i dati non sono disponibili nel formato specificato e non possono essere convertiti nel formato specificato.  
  
-   Il *autoConvert* parametro **false**, e i dati non sono disponibili nel formato specificato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un elenco di formati in cui sono archiviati i dati di questo oggetto o in cui possono essere convertiti.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'elenco di tutti i formati in cui sono archiviati, o possono essere convertiti, i dati presenti nell'oggetto dati.</summary>
        <returns>Una matrice di stringhe, con ogni stringa che specifica il nome di un formato supportato da questo oggetto dati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un'implementazione di questo metodo, vedere <xref:System.Windows.DataObject.GetFormats%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert">
          <see langword="true" /> per recuperare tutti i formati in cui sono archiviati, o possono essere convertiti, i dati presenti nell'oggetto dati; <see langword="false" /> per recuperare solo i formati in cui sono archiviati i dati presenti nell'oggetto dati, ma non quelli in cui i dati non sono archiviati ma possono essere automaticamente convertiti.</param>
        <summary>Restituisce un elenco di tutti i formati in cui i dati in questo oggetto dati sono archiviati. Un flag <see langword="Boolean" /> che indica se includere o meno anche i formati nei quali i dati possono essere convertiti automaticamente.</summary>
        <returns>Una matrice di stringhe, con ogni stringa che specifica il nome di un formato supportato da questo oggetto dati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un'implementazione di questo metodo, vedere <xref:System.Windows.DataObject.GetFormats%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Archivia i dati specificati in questo oggetto dati.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Dati da archiviare in questo oggetto dati.</param>
        <summary>Archivia nell'oggetto dati i dati specificati, convertendo automaticamente il formato dati dal tipo di oggetto di origine.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un'implementazione di questo metodo, vedere <xref:System.Windows.DataObject.SetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Stringa che specifica il formato da utilizzare per archiviare i dati. Per un insieme di formati dati predefiniti, vedere la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="data">Dati da archiviare in questo oggetto dati.</param>
        <summary>Archivia i dati specificati in questo oggetto dati, insieme ad uno o più formati dati specificati. Il formato dati è specificato da una stringa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un'implementazione di questo metodo, vedere <xref:System.Windows.DataObject.SetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(Type ^ format, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Oggetto <see cref="T:System.Type" /> che specifica il formato in cui archiviare i dati. Per un set di formati dati predefiniti, vedere la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="data">Dati da archiviare in questo oggetto dati.</param>
        <summary>Archivia i dati specificati in questo oggetto dati, insieme ad uno o più formati dati specificati. Il formato dati è specificato da una classe <see cref="T:System.Type" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un'implementazione di questo metodo, vedere <xref:System.Windows.DataObject.SetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object, autoConvert As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, System::Object ^ data, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Stringa che specifica il formato da utilizzare per archiviare i dati. Per un insieme di formati dati predefiniti, vedere la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="data">Dati da archiviare in questo oggetto dati.</param>
        <param name="autoConvert">
          <see langword="true" /> per consentire la conversione dei dati in un altro formato al momento del recupero; <see langword="false" /> per impedire la conversione dei dati in un altro formato al momento del recupero.</param>
        <summary>Archivia i dati specificati in questo oggetto dati, insieme ad uno o più formati dati specificati. Questo overload include un flag <see langword="Boolean" /> che indica se i dati possono essere convertiti in un altro formato al momento del recupero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un'implementazione di questo metodo, vedere <xref:System.Windows.DataObject.SetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>