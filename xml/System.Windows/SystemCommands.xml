<Type Name="SystemCommands" FullName="System.Windows.SystemCommands">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="684b816ecfaa06732b78514e55c593052ae71a2f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36456871" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class SystemCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed SystemCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.SystemCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class SystemCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class SystemCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type SystemCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e9301-101">Definisce i comandi indirizzati che sono comuni alla gestione della finestra.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e9301-101">Defines routed commands that are common to window management.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9301-102">I comandi nel <xref:System.Windows.SystemCommands> classe rappresentano un set di comandi comuni che gestiscono un <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="e9301-102">The commands in the <xref:System.Windows.SystemCommands> class represent a set of common commands that manage a <xref:System.Windows.Window>.</span></span>  <span data-ttu-id="e9301-103">Le proprietà di questa classe rappresentano <xref:System.Windows.Input.RoutedCommand> oggetti e non forniscono la logica di implementazione per il comando.</span><span class="sxs-lookup"><span data-stu-id="e9301-103">The properties in this class represent <xref:System.Windows.Input.RoutedCommand> objects and do not provide the implementation logic for the command.</span></span> <span data-ttu-id="e9301-104">È possibile fornire la logica per un comando associando il comando con un <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="e9301-104">You can provide the logic for a command by binding the command with a <xref:System.Windows.Input.CommandBinding>.</span></span>  <span data-ttu-id="e9301-105">Per altre informazioni, vedere [procedura: Hook un comando a un controllo con supporto del comando No](~/docs/framework/wpf/advanced/how-to-hook-up-a-command-to-a-control-with-no-command-support.md).</span><span class="sxs-lookup"><span data-stu-id="e9301-105">For more information, see [How to: Hook Up a Command to a Control with No Command Support](~/docs/framework/wpf/advanced/how-to-hook-up-a-command-to-a-control-with-no-command-support.md).</span></span> <span data-ttu-id="e9301-106">In alternativa, il <xref:System.Windows.SystemCommands> classe fornisce metodi statici che implementano la logica per l'oggetto specificato <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="e9301-106">Alternatively, the <xref:System.Windows.SystemCommands> class provides static methods that implement the logic for the specified <xref:System.Windows.Window>.</span></span> <span data-ttu-id="e9301-107">È possibile passare un metodo statico a un tipo che implementa <xref:System.Windows.Input.ICommand> e che accetta un delegato.</span><span class="sxs-lookup"><span data-stu-id="e9301-107">You can pass a static method to a type that implements <xref:System.Windows.Input.ICommand> and that accepts a delegate.</span></span> <span data-ttu-id="e9301-108">Per altre informazioni, vedere l'esempio incluso nel <xref:System.Windows.Input.InputBinding> classe.</span><span class="sxs-lookup"><span data-stu-id="e9301-108">For more information, see the example in the <xref:System.Windows.Input.InputBinding> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.InputBinding" />
  </Docs>
  <Members>
    <Member MemberName="CloseWindow">
      <MemberSignature Language="C#" Value="public static void CloseWindow (System.Windows.Window window);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CloseWindow(class System.Windows.Window window) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SystemCommands.CloseWindow(System.Windows.Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CloseWindow(System::Windows::Window ^ window);" />
      <MemberSignature Language="F#" Value="static member CloseWindow : System.Windows.Window -&gt; unit" Usage="System.Windows.SystemCommands.CloseWindow window" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="System.Windows.Window" />
      </Parameters>
      <Docs>
        <param name="window">
          <span data-ttu-id="e9301-109">Finestra da chiudere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-109">The window to close.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9301-110">Consente di chiudere la finestra specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-110">Closes the specified window.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseWindowCommand">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedCommand CloseWindowCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedCommand CloseWindowCommand" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemCommands.CloseWindowCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CloseWindowCommand As RoutedCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedCommand ^ CloseWindowCommand { System::Windows::Input::RoutedCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseWindowCommand : System.Windows.Input.RoutedCommand" Usage="System.Windows.SystemCommands.CloseWindowCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9301-111">Ottiene un comando che chiude una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-111">Gets a command that closes a window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9301-112">Comando che chiude una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-112">A command that closes a window.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximizeWindow">
      <MemberSignature Language="C#" Value="public static void MaximizeWindow (System.Windows.Window window);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MaximizeWindow(class System.Windows.Window window) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SystemCommands.MaximizeWindow(System.Windows.Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MaximizeWindow(System::Windows::Window ^ window);" />
      <MemberSignature Language="F#" Value="static member MaximizeWindow : System.Windows.Window -&gt; unit" Usage="System.Windows.SystemCommands.MaximizeWindow window" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="System.Windows.Window" />
      </Parameters>
      <Docs>
        <param name="window">
          <span data-ttu-id="e9301-113">Finestra da ingrandire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-113">The window to maximize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9301-114">Ingrandisce la finestra specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-114">Maximizes the specified window.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximizeWindowCommand">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedCommand MaximizeWindowCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedCommand MaximizeWindowCommand" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemCommands.MaximizeWindowCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaximizeWindowCommand As RoutedCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedCommand ^ MaximizeWindowCommand { System::Windows::Input::RoutedCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximizeWindowCommand : System.Windows.Input.RoutedCommand" Usage="System.Windows.SystemCommands.MaximizeWindowCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9301-115">Ottiene un comando che ingrandisce una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-115">Gets a command that maximizes a window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9301-116">Comando che ingrandisce una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-116">A command that maximizes a window.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimizeWindow">
      <MemberSignature Language="C#" Value="public static void MinimizeWindow (System.Windows.Window window);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MinimizeWindow(class System.Windows.Window window) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SystemCommands.MinimizeWindow(System.Windows.Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MinimizeWindow(System::Windows::Window ^ window);" />
      <MemberSignature Language="F#" Value="static member MinimizeWindow : System.Windows.Window -&gt; unit" Usage="System.Windows.SystemCommands.MinimizeWindow window" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="System.Windows.Window" />
      </Parameters>
      <Docs>
        <param name="window">
          <span data-ttu-id="e9301-117">Finestra da ridurre a icona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-117">The window to minimize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9301-118">Riduce a icona la finestra specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-118">Minimizes the specified window.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimizeWindowCommand">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedCommand MinimizeWindowCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedCommand MinimizeWindowCommand" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemCommands.MinimizeWindowCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinimizeWindowCommand As RoutedCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedCommand ^ MinimizeWindowCommand { System::Windows::Input::RoutedCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimizeWindowCommand : System.Windows.Input.RoutedCommand" Usage="System.Windows.SystemCommands.MinimizeWindowCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9301-119">Ottiene un comando che ingrandisce una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-119">Gets a command that maximizes a window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9301-120">Comando che ingrandisce una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-120">A command that maximizes a window.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreWindow">
      <MemberSignature Language="C#" Value="public static void RestoreWindow (System.Windows.Window window);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreWindow(class System.Windows.Window window) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SystemCommands.RestoreWindow(System.Windows.Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RestoreWindow(System::Windows::Window ^ window);" />
      <MemberSignature Language="F#" Value="static member RestoreWindow : System.Windows.Window -&gt; unit" Usage="System.Windows.SystemCommands.RestoreWindow window" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="System.Windows.Window" />
      </Parameters>
      <Docs>
        <param name="window">
          <span data-ttu-id="e9301-121">Finestra da ripristinare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-121">The window to restore.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9301-122">Ripristina la riga isolata specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-122">Restores the specified widow.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreWindowCommand">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedCommand RestoreWindowCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedCommand RestoreWindowCommand" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemCommands.RestoreWindowCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RestoreWindowCommand As RoutedCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedCommand ^ RestoreWindowCommand { System::Windows::Input::RoutedCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RestoreWindowCommand : System.Windows.Input.RoutedCommand" Usage="System.Windows.SystemCommands.RestoreWindowCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9301-123">Ottiene un comando che ripristina una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-123">Gets a command that restores a window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9301-124">Comando che ripristina una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-124">A command that restores a window.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSystemMenu">
      <MemberSignature Language="C#" Value="public static void ShowSystemMenu (System.Windows.Window window, System.Windows.Point screenLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ShowSystemMenu(class System.Windows.Window window, valuetype System.Windows.Point screenLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SystemCommands.ShowSystemMenu(System.Windows.Window,System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ShowSystemMenu(System::Windows::Window ^ window, System::Windows::Point screenLocation);" />
      <MemberSignature Language="F#" Value="static member ShowSystemMenu : System.Windows.Window * System.Windows.Point -&gt; unit" Usage="System.Windows.SystemCommands.ShowSystemMenu (window, screenLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="System.Windows.Window" />
        <Parameter Name="screenLocation" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="window">
          <span data-ttu-id="e9301-125">Finestra per cui il menu di sistema deve essere visualizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-125">The window to have its system menu displayed.</span>
          </span>
        </param>
        <param name="screenLocation">
          <span data-ttu-id="e9301-126">La posizione del menu di sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-126">The location of the system menu.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9301-127">Viene mostrato il menu di sistema per la finestra specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-127">Displays the system menu for the specified window.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSystemMenuCommand">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedCommand ShowSystemMenuCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedCommand ShowSystemMenuCommand" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SystemCommands.ShowSystemMenuCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ShowSystemMenuCommand As RoutedCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedCommand ^ ShowSystemMenuCommand { System::Windows::Input::RoutedCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowSystemMenuCommand : System.Windows.Input.RoutedCommand" Usage="System.Windows.SystemCommands.ShowSystemMenuCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9301-128">Ottiene un comando che visualizza il menu di sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-128">Gets a command that displays the system menu.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9301-129">Comando che visualizza il menu di sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9301-129">A command that displays the system menu.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>