<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LogicalTreeHelper.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f2fd27ad4c537a177069b372af2f1a949e102361.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2fd27ad4c537a177069b372af2f1a949e102361</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.LogicalTreeHelper">
          <source>Provides static helper methods for querying objects in the logical tree.</source>
          <target state="translated">Fornisce metodi helper statici per eseguire query sugli oggetti nell'albero logico.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LogicalTreeHelper">
          <source>The <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper&gt;</ph> class provides methods that you can use to return child collections of objects, or specific objects from within subnodes of the logical tree.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper&gt;</ph> classe fornisce metodi che è possibile utilizzare per restituire le raccolte figlio degli oggetti o oggetti specifici dall'interno dei nodi secondari dell'albero logico.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LogicalTreeHelper">
          <source>However, most of the object tree operations that you typically perform are also exposed by similar methods or properties on <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>.</source>
          <target state="translated">Tuttavia, la maggior parte delle operazioni eseguite in genere albero oggetto sono esposte anche da proprietà o metodi simili in <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LogicalTreeHelper">
          <source>For example, try the following:</source>
          <target state="translated">Ad esempio, procedere come segue:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LogicalTreeHelper">
          <source>Instead of calling the static <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.GetChildren%2A&gt;</ph> method, which returns an enumerator for the logical child objects, use the dedicated collection exposed in the content model for that object.</source>
          <target state="translated">Anziché chiamare il metodo statico <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.GetChildren%2A&gt;</ph> metodo, che restituisce un enumeratore per il figlio logico di oggetti, utilizzare l'insieme dedicato esposto nel modello di contenuto per l'oggetto.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LogicalTreeHelper">
          <source>Nearly all objects that support a content model expose some property that contains the collection of child objects, and provides collection interface support directly on that collection.</source>
          <target state="translated">Quasi tutti gli oggetti che supportano un modello di contenuto espongono alcune proprietà che contiene la raccolta di oggetti figlio e fornisce il supporto dell'interfaccia direttamente in tale raccolta.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LogicalTreeHelper">
          <source>Instead of calling the static <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph> method to obtain a child object by specifying its name, call the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType&gt;</ph> method on specific objects.</source>
          <target state="translated">Anziché chiamare il metodo statico <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph> per ottenere un oggetto figlio specificandone il nome, chiamata di <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType&gt;</ph> metodo per oggetti specifici.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LogicalTreeHelper">
          <source><ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper&gt;</ph> is most useful for analysis scenarios where you are traveling up or down the logical tree recursively through multiple levels, and want to use a consistent approach for examining the various parent or child objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper&gt;</ph> è molto utile per gli scenari di analisi in cui si trovano verso l'alto o verso il basso l'albero logico in modo ricorsivo più livelli e si desidera utilizzare un approccio coerente per esaminare i vari oggetti padre o figlio.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LogicalTreeHelper">
          <source>In this case, you might be accessing a mixture of content models, and using the more content-model specific APIs would be too complex.</source>
          <target state="translated">In questo caso, è possibile accedere a una combinazione di modelli di contenuto e utilizzando il modello di contenuto più API specifiche che potrebbero essere troppo complesse.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)">
          <source>The UI element to bring into view.</source>
          <target state="translated">Elemento UI da visualizzare.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)">
          <source>Attempts to bring the requested UI element into view and raises the <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /&gt;</ph> event on the target in order to report the results.</source>
          <target state="translated">Tenta visualizzare l'elemento UI richiesto e genera l'evento <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /&gt;</ph> sulla destinazione, in modo da riportare i risultati.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)">
          <source>It is typically more convenient to call the instance methods <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType&gt;</ph> rather than this static utility method.</source>
          <target state="translated">È in genere è più conveniente chiamare i metodi di istanza <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType&gt;</ph> invece di questo metodo statico dell'utilità.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)">
          <source>The behavior of the instance methods is equivalent to the behavior of the static method.</source>
          <target state="translated">Il comportamento dei metodi di istanza è equivalente al comportamento del metodo statico.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)">
          <source>Even if the <ph id="ph1">`current`</ph> UI element provided was a <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>, the resulting event is still the same <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType&gt;</ph> event, with the originating <ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> identifiable by checking the event data of the event.</source>
          <target state="translated">Anche se il <ph id="ph1">`current`</ph> elemento dell'interfaccia utente fornito è stato un <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>, l'evento risultante è ancora <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType&gt;</ph> evento, con il tipo di origine <ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> identificabili controllando i dati dell'evento dell'evento.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>The object to start searching from.</source>
          <target state="translated">Oggetto da cui cominciare la ricerca.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>This object must be either a <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> or a <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph>.</source>
          <target state="translated">Questo oggetto deve essere un tipo <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> oppure <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>The name of the object to find.</source>
          <target state="translated">Nome dell'oggetto  da trovare.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>Attempts to find and return an object that has the specified name.</source>
          <target state="translated">Tenta di trovare e restituire un oggetto con il nome specificato.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>The search starts from the specified object and continues into subnodes of the logical tree.</source>
          <target state="translated">La ricerca comincia dall'oggetto specificato e continua con i nodi secondari dell'albero logico.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>The object with the matching name, if one is found; returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no matching name was found in the logical tree.</source>
          <target state="translated">Oggetto con il nome corrispondente, se viene trovato; restituisce <ph id="ph1">&lt;see langword="null" /&gt;</ph> se nessun nome corrispondente viene trovato nell'albero logico.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>The methods <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType&gt;</ph> are superficially similar to <ph id="ph3">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph>, but operate by different logic:</source>
          <target state="translated">I metodi <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType&gt;</ph> sono apparentemente simili a <ph id="ph3">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph>, ma operano con logica diversa:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>The search direction for <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph> is toward child objects (down the tree); the search direction for the <ph id="ph2">`FindName`</ph> methods is towards parent objects (up the tree).</source>
          <target state="translated">La direzione di ricerca per <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph> è verso gli oggetti figlio (verso il basso l'albero); la direzione di ricerca per il <ph id="ph2">`FindName`</ph> metodi è verso oggetti padre (l'alto nell'albero).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>The <ph id="ph1">`FindName`</ph> methods are governed by the concept of a XAML namescope.</source>
          <target state="translated">Il <ph id="ph1">`FindName`</ph> metodi vengono gestiti con il concetto di un namescope XAML.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>Using <ph id="ph1">`FindName`</ph> you are guaranteed that only one object of that name exists, because XAML namescopes enforce uniqueness.</source>
          <target state="translated">Utilizzando <ph id="ph1">`FindName`</ph> si è certi che solo un oggetto di tale nome esiste, perché gli ambiti dei nomi XAML impone l'univocità.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>In contrast, <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph> ignores XAML namescope and might cross XAML namescope boundaries during the search.</source>
          <target state="translated">Al contrario, <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph> namescope XAML e potrebbe attraversare i limiti del namescope XAML vengono ignorati durante la ricerca.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>As such, there is no guarantee of uniqueness of the <ph id="ph1">`elementName`</ph> name once boundaries are crossed.</source>
          <target state="translated">Di conseguenza, non c'è garanzia di univocità del <ph id="ph1">`elementName`</ph> nome quando si superano i limiti.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>For more information about XAML namescopes, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sui NameScope XAML, vedere <bpt id="p1">[</bpt>NameScope XAML WPF<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Windows.LogicalTreeHelper">
          <source>Returns the collection of immediate child objects of the specified object by processing the logical tree.</source>
          <target state="translated">Restituisce l'insieme degli oggetti figlio diretti dell'oggetto specificato, elaborando l'albero logico.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
          <source>The object from which to start processing the logical tree.</source>
          <target state="translated">Oggetto da cui iniziare l'elaborazione dell'albero logico.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
          <source>This is expected to be either a <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph>.</source>
          <target state="translated">È previsto che sia <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> oppure <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
          <source>Returns the collection of immediate child objects of the specified object, by processing the logical tree.</source>
          <target state="translated">Restituisce la raccolta degli oggetti figlio diretti dell'oggetto specificato, elaborando l'albero logico.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
          <source>The enumerable collection of immediate child objects from the logical tree of the specified object.</source>
          <target state="translated">Raccolta enumerabile di oggetti figlio diretti dall'albero logico dell'oggetto specificato.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
          <source>Use this signature and helper method primarily when you are unsure whether <ph id="ph1">`current`</ph> is a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> and are also unsure whether that object's class supports its own content model collection.</source>
          <target state="translated">Utilizzare questo metodo di firma e nell'helper principalmente quando si è certi se <ph id="ph1">`current`</ph> è un <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> e indica se la classe dell'oggetto supporta la propria raccolta di modello di contenuto.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
          <source>If you can determine the type of the object you are querying, check the specific content property that you know exists on that type.</source>
          <target state="translated">Se è possibile determinare il tipo dell'oggetto a cui che si esegue una query, controllare la proprietà di contenuto specifica che si è certi esistente su quel tipo.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
          <source>For example, if you know that the object you are querying is an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, check the <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.Items%2A&gt;</ph> property to get a strongly typed collection, which has collection interface support and is probably more useful than an enumerator.</source>
          <target state="translated">Ad esempio, se si è certi che l'oggetto esegue la query è un <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, controllare il <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.Items%2A&gt;</ph> proprietà da ottenere una raccolta fortemente tipizzata, che dispone del supporto di interfaccia di raccolta e probabilmente più utile di un enumeratore.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)">
          <source>The object from which to start processing the logical tree.</source>
          <target state="translated">Oggetto da cui iniziare l'elaborazione dell'albero logico.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)">
          <source>Returns the collection of immediate child objects of the specified <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph> by processing the logical tree.</source>
          <target state="translated">Restituisce l'insieme degli oggetti figlio diretti dell'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph> specificato, elaborando l'albero logico.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)">
          <source>The enumerable collection of immediate child objects starting from <ph id="ph1">&lt;paramref name="current" /&gt;</ph> in the logical tree.</source>
          <target state="translated">Insieme enumerabile degli oggetti figlio diretti a partire dall'oggetto <ph id="ph1">&lt;paramref name="current" /&gt;</ph> specificato, all'interno dell'albero logico.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)">
          <source>The object from which to start processing the logical tree.</source>
          <target state="translated">Oggetto da cui iniziare l'elaborazione dell'albero logico.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)">
          <source>Returns the collection of immediate child objects of the specified <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> by processing the logical tree.</source>
          <target state="translated">Restituisce l'insieme degli oggetti figlio diretti dell'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> specificato, elaborando l'albero logico.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)">
          <source>The enumerable collection of immediate child objects starting from <ph id="ph1">&lt;paramref name="current" /&gt;</ph> in the logical tree.</source>
          <target state="translated">Insieme enumerabile degli oggetti figlio diretti a partire dall'oggetto <ph id="ph1">&lt;paramref name="current" /&gt;</ph> specificato, all'interno dell'albero logico.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>The object to find the parent object for.</source>
          <target state="translated">Oggetto per il quale trovare un oggetto padre.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>This is expected to be either a <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> or a <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph>.</source>
          <target state="translated">È previsto che sia un oggetto <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> oppure <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>Returns the parent object of the specified object by processing the logical tree.</source>
          <target state="translated">Restituisce l'oggetto padre dell'oggetto specificato, elaborando l'albero logico.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>The requested parent object.</source>
          <target state="translated">Oggetto padre richiesto.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>This method is merely a wrapper that gets the appropriate type version (<ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>) of the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType&gt;</ph> property; so unless you are unable to determine the <ph id="ph5">`current`</ph> type, you might want to check the respective instance properties instead.</source>
          <target state="translated">Questo metodo è semplicemente un wrapper che ottiene la versione del tipo appropriato (<ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>) del <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType&gt;</ph> o <ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType&gt;</ph> proprietà; pertanto, a meno che non si riesce a determinare la <ph id="ph5">`current`</ph> tipo, è consigliabile verificare la rispettiva al contrario delle proprietà dell'istanza.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>