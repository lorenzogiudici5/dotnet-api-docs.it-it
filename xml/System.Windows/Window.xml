<Type Name="Window" FullName="System.Windows.Window">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9dd7e936ea22b7525eb1d45f6018d5044891941f" />
    <Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/27/2018" />
    <Meta Name="ms.locfileid" Value="50178224" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Window : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Window extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Window" />
  <TypeSignature Language="VB.NET" Value="Public Class Window&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Window : System::Windows::Controls::ContentControl" />
  <TypeSignature Language="F#" Value="type Window = class&#xA;    inherit ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="694b7-101">Fornisce la possibilità di creare, configurare, visualizzare e gestire la durata di finestre e finestre di dialogo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="694b7-101">Provides the ability to create, configure, show, and manage the lifetime of windows and dialog boxes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-102">Il punto di interazione tra un utente e un'applicazione autonoma in una finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-102">The point of interaction between a user and a standalone application is a window.</span></span> <span data-ttu-id="694b7-103">Oggetto [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] finestra è costituito da due aree distinte:</span><span class="sxs-lookup"><span data-stu-id="694b7-103">A [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window consists of two distinct areas:</span></span>  
  
-   <span data-ttu-id="694b7-104">Un'area non client, che ospita le aree di controllo di windows, tra cui un'icona, titolo, il menu di sistema, pulsante Riduci a icona, ingrandire pulsante, pulsante di ripristino, pulsante di chiusura e un bordo.</span><span class="sxs-lookup"><span data-stu-id="694b7-104">A non-client area, which hosts the windows adornments, including an icon, title, System menu, minimize button, maximize button, restore button, close button, and a border.</span></span>  
  
-   <span data-ttu-id="694b7-105">Un'area client, che ospita il contenuto specifico dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="694b7-105">A client area, which hosts application-specific content.</span></span>  
  
 <span data-ttu-id="694b7-106">Nella figura seguente viene visualizzata una finestra standard:</span><span class="sxs-lookup"><span data-stu-id="694b7-106">A standard window is shown in the following figure:</span></span>  
  
 <span data-ttu-id="694b7-107">![Elementi di una finestra](~/add/media/windowoverviewfigure1.PNG "gli elementi della finestra")</span><span class="sxs-lookup"><span data-stu-id="694b7-107">![Window elements](~/add/media/windowoverviewfigure1.PNG "Window elements")</span></span>  
  
 <span data-ttu-id="694b7-108"><xref:System.Windows.Window> incapsula la possibilità di creare, configurare, visualizzare e gestire la durata di finestre e finestre di dialogo e fornisce i servizi principali seguenti:</span><span class="sxs-lookup"><span data-stu-id="694b7-108"><xref:System.Windows.Window> encapsulates the ability to create, configure, show, and manage the lifetime of both windows and dialog boxes, and provides the following key services:</span></span>  
  
 <span data-ttu-id="694b7-109">**Gestione della durata**: <xref:System.Windows.Window.Activate%2A>, <xref:System.Windows.Window.Activated>, <xref:System.Windows.Window.Close%2A>, <xref:System.Windows.Window.Closed>, <xref:System.Windows.Window.Closing>, <xref:System.Windows.Window.Deactivated>, <xref:System.Windows.Window.Hide%2A>, <xref:System.Windows.Window.IsActive%2A>, <xref:System.Windows.Window.Show%2A>, <xref:System.Windows.Window.SourceInitialized>.</span><span class="sxs-lookup"><span data-stu-id="694b7-109">**Lifetime Management**: <xref:System.Windows.Window.Activate%2A>, <xref:System.Windows.Window.Activated>, <xref:System.Windows.Window.Close%2A>, <xref:System.Windows.Window.Closed>, <xref:System.Windows.Window.Closing>, <xref:System.Windows.Window.Deactivated>, <xref:System.Windows.Window.Hide%2A>, <xref:System.Windows.Window.IsActive%2A>, <xref:System.Windows.Window.Show%2A>, <xref:System.Windows.Window.SourceInitialized>.</span></span>  
  
 <span data-ttu-id="694b7-110">**Gestione delle finestre**: <xref:System.Windows.Window.GetWindow%2A>, <xref:System.Windows.Window.OwnedWindows%2A>, <xref:System.Windows.Window.Owner%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-110">**Window Management**: <xref:System.Windows.Window.GetWindow%2A>, <xref:System.Windows.Window.OwnedWindows%2A>, <xref:System.Windows.Window.Owner%2A>.</span></span>  
  
 <span data-ttu-id="694b7-111">**Aspetto e il comportamento**: <xref:System.Windows.Window.AllowsTransparency%2A>, <xref:System.Windows.Window.ContentRendered>, <xref:System.Windows.Window.DragMove%2A>, <xref:System.Windows.Window.Icon%2A>, <xref:System.Windows.Window.Left%2A>, <xref:System.Windows.Window.LocationChanged>, <xref:System.Windows.Window.ResizeMode%2A>, <xref:System.Windows.Window.RestoreBounds%2A>, <xref:System.Windows.Window.ShowActivated%2A>, <xref:System.Windows.Window.ShowInTaskbar%2A>, <xref:System.Windows.Window.SizeToContent%2A>, <xref:System.Windows.Window.StateChanged>, <xref:System.Windows.Window.Title%2A>, <xref:System.Windows.Window.Top%2A>, <xref:System.Windows.Window.Topmost%2A>, <xref:System.Windows.Window.WindowStartupLocation%2A>, <xref:System.Windows.Window.WindowState%2A>, <xref:System.Windows.Window.WindowStyle%2A></span><span class="sxs-lookup"><span data-stu-id="694b7-111">**Appearance and Behavior**: <xref:System.Windows.Window.AllowsTransparency%2A>, <xref:System.Windows.Window.ContentRendered>, <xref:System.Windows.Window.DragMove%2A>, <xref:System.Windows.Window.Icon%2A>, <xref:System.Windows.Window.Left%2A>, <xref:System.Windows.Window.LocationChanged>, <xref:System.Windows.Window.ResizeMode%2A>, <xref:System.Windows.Window.RestoreBounds%2A>, <xref:System.Windows.Window.ShowActivated%2A>, <xref:System.Windows.Window.ShowInTaskbar%2A>, <xref:System.Windows.Window.SizeToContent%2A>, <xref:System.Windows.Window.StateChanged>, <xref:System.Windows.Window.Title%2A>, <xref:System.Windows.Window.Top%2A>, <xref:System.Windows.Window.Topmost%2A>, <xref:System.Windows.Window.WindowStartupLocation%2A>, <xref:System.Windows.Window.WindowState%2A>, <xref:System.Windows.Window.WindowStyle%2A></span></span>  
  
 <span data-ttu-id="694b7-112">**Finestre di dialogo**: <xref:System.Windows.Window.DialogResult%2A>, <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-112">**Dialog Boxes**: <xref:System.Windows.Window.DialogResult%2A>, <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="694b7-113">Inoltre, <xref:System.Windows.Application> espone un supporto speciale per la gestione di tutte le finestre in un'applicazione:</span><span class="sxs-lookup"><span data-stu-id="694b7-113">Additionally, <xref:System.Windows.Application> exposes special support for managing all of the windows in an application:</span></span>  
  
-   <span data-ttu-id="694b7-114">Applicazione gestisce un elenco di tutte le finestre che attualmente viene creata un'istanza dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="694b7-114">Application maintains a list of all the windows that are currently instantiated in the application.</span></span> <span data-ttu-id="694b7-115">Questo elenco viene esposto dal <xref:System.Windows.Application.Windows%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="694b7-115">This list is exposed by the <xref:System.Windows.Application.Windows%2A> property.</span></span>  
  
-   <span data-ttu-id="694b7-116">Per impostazione predefinita <xref:System.Windows.Application.MainWindow%2A> viene impostato automaticamente con un riferimento al primo <xref:System.Windows.Window> che viene creata un'istanza in un'applicazione.</span><span class="sxs-lookup"><span data-stu-id="694b7-116">By default, <xref:System.Windows.Application.MainWindow%2A> is automatically set with a reference to the first <xref:System.Windows.Window> that is instantiated in an application.</span></span> <span data-ttu-id="694b7-117">Ciò in modo da ottenere la finestra la finestra principale dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="694b7-117">This thereby making the window the main application window.</span></span>  
  
 <span data-ttu-id="694b7-118">Oggetto <xref:System.Windows.Window> può essere implementata tramite markup, markup e code-behind o codice.</span><span class="sxs-lookup"><span data-stu-id="694b7-118">A <xref:System.Windows.Window> can be implemented using markup, markup and code-behind, or code.</span></span>  
  
 <span data-ttu-id="694b7-119"><xref:System.Windows.Window> viene utilizzato principalmente per visualizzare finestre e finestre di dialogo per le applicazioni autonome.</span><span class="sxs-lookup"><span data-stu-id="694b7-119"><xref:System.Windows.Window> is primarily used to display windows and dialog boxes for standalone applications.</span></span> <span data-ttu-id="694b7-120">Tuttavia, per le applicazioni che richiedono lo spostamento a livello di finestra, ad esempio le procedure guidate, è possibile usare <xref:System.Windows.Navigation.NavigationWindow> invece; <xref:System.Windows.Navigation.NavigationWindow> deriva da <xref:System.Windows.Window> e lo estende con il supporto di navigazione di tipo browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-120">However, for applications that require navigation at the window level, such as wizards, you can use <xref:System.Windows.Navigation.NavigationWindow> instead; <xref:System.Windows.Navigation.NavigationWindow> derives from <xref:System.Windows.Window> and extends it with browser-style navigation support.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-121">Isole di contenuto navigabile possono essere incorporate in altri contenitori, contenuti e il contenuto usando <xref:System.Windows.Controls.Frame>.</span><span class="sxs-lookup"><span data-stu-id="694b7-121">Islands of navigable content can be incorporated into other content and content containers using <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="694b7-122"><xref:System.Windows.Window> deve `UnmanagedCode` autorizzazione di sicurezza da cui creare istanze.</span><span class="sxs-lookup"><span data-stu-id="694b7-122"><xref:System.Windows.Window> needs `UnmanagedCode` security permission to be instantiated.</span></span> <span data-ttu-id="694b7-123">Ciò comporta le conseguenze seguenti:</span><span class="sxs-lookup"><span data-stu-id="694b7-123">This has the following consequences:</span></span>  
  
-   [!INCLUDE[TLA#tla_clickonce](~/includes/tlasharptla-clickonce-md.md)]<span data-ttu-id="694b7-124">-le applicazioni autonome distribuite richiede l'elevazione delle autorizzazioni quando avviata dalle aree Internet o Intranet locale.</span><span class="sxs-lookup"><span data-stu-id="694b7-124">-deployed standalone applications will request permission elevation when launched from either the Internet or Local Intranet zones.</span></span>  
  
-   [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] <span data-ttu-id="694b7-125">che non richiedono le autorizzazioni complete non sarà in grado di creare un'istanza di windows o le finestre di dialogo.</span><span class="sxs-lookup"><span data-stu-id="694b7-125">that request anything less than full permissions will not be able to instantiate windows or dialog boxes.</span></span>  
  
 <span data-ttu-id="694b7-126">Per informazioni sulla distribuzione delle applicazioni autonome e considerazioni sulla sicurezza, vedere [strategia di sicurezza WPF - sicurezza della piattaforma](~/docs/framework/wpf/wpf-security-strategy-platform-security.md).</span><span class="sxs-lookup"><span data-stu-id="694b7-126">For information about standalone application deployment and security considerations, see [WPF Security Strategy - Platform Security](~/docs/framework/wpf/wpf-security-strategy-platform-security.md).</span></span>  
  
 <span data-ttu-id="694b7-127">Oggetto <xref:System.Windows.Window> è un <xref:System.Windows.Controls.ContentControl>, il che significa che può contenere un singolo oggetto di qualsiasi tipo (ad esempio, una stringa, un'immagine o un pannello).</span><span class="sxs-lookup"><span data-stu-id="694b7-127">A <xref:System.Windows.Window> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="694b7-128">Per altre informazioni, vedere la classe <xref:System.Windows.Controls.ContentControl>.</span><span class="sxs-lookup"><span data-stu-id="694b7-128">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span> <span data-ttu-id="694b7-129">Inoltre, <xref:System.Windows.Window> è un elemento radice e, pertanto, non possono far parte del contenuto di un altro elemento.</span><span class="sxs-lookup"><span data-stu-id="694b7-129">Also, <xref:System.Windows.Window> is a root element and, therefore, cannot be part of another element's content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-130">Il <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.Window.Top%2A>, e <xref:System.Windows.Window.Left%2A> le proprietà impostate su un <xref:System.Windows.Window> attraverso uno stile non verrà applicata in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="694b7-130">The <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.Window.Top%2A>, and <xref:System.Windows.Window.Left%2A> properties set on a <xref:System.Windows.Window> through a style will not be applied at run time.</span></span>  
  
## <a name="customizing-the-window-control"></a><span data-ttu-id="694b7-131">Personalizzazione del controllo di finestra</span><span class="sxs-lookup"><span data-stu-id="694b7-131">Customizing the Window Control</span></span>  
 <span data-ttu-id="694b7-132">Per applicare le stesse impostazioni di proprietà al multiplo <xref:System.Windows.Window> controlli, usare il <xref:System.Windows.FrameworkElement.Style%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="694b7-132">To apply the same property settings to multiple <xref:System.Windows.Window> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="694b7-133">È possibile modificare il valore predefinito <xref:System.Windows.Controls.ControlTemplate> per fornire al controllo un aspetto univoco.</span><span class="sxs-lookup"><span data-stu-id="694b7-133">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="694b7-134">Per altre informazioni sulla creazione di un <xref:System.Windows.Controls.ControlTemplate>, vedere [personalizzazione dell'aspetto di un controllo esistente mediante la creazione di un oggetto ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="694b7-134">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="694b7-135">Per visualizzare le parti e stati specifici di <xref:System.Windows.Window>, vedere [finestra Stili e modelli](~/docs/framework/wpf/controls/window-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="694b7-135">To see the parts and states that are specific to the <xref:System.Windows.Window>, see [Window Styles and Templates](~/docs/framework/wpf/controls/window-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="694b7-136">Le proprietà di dipendenza di questo controllo potrebbero essere impostate dallo stile predefinito del controllo.</span><span class="sxs-lookup"><span data-stu-id="694b7-136">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="694b7-137">Se una proprietà viene impostata da uno stile predefinito, la proprietà può variare rispetto al valore predefinito quando il controllo viene visualizzato nell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="694b7-137">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="694b7-138">Lo stile predefinito è determinato dal tema del desktop viene usato quando viene eseguita l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="694b7-138">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="694b7-139">Per altre informazioni, vedere [temi WPF predefiniti](http://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="694b7-139">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-140">L'impostazione di una proprietà di visualizzazione verrà hanno effetto solo se tale proprietà è presente in entrambi <xref:System.Windows.Window> controllo del modello predefinito e viene impostata tramite una.</span><span class="sxs-lookup"><span data-stu-id="694b7-140">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Window> control's default template and is set by using a .</span></span> <span data-ttu-id="694b7-141">È possibile trovare un elenco di proprietà visive nella sezione "Modifica la struttura Visual di un controllo" in [personalizzazione dell'aspetto di un controllo esistente mediante la creazione di un oggetto ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="694b7-141">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="694b7-142">Nell'esempio seguente viene illustrato come una normale finestra viene definita utilizzando solo markup:</span><span class="sxs-lookup"><span data-stu-id="694b7-142">The following example shows how a standard window is defined using only markup:</span></span>  
  
 [!code-xaml[WindowSnippets#WindowMARKUPONLY](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MarkupOnlyWindow.xaml#windowmarkuponly)]  
  
 <span data-ttu-id="694b7-143">Nell'esempio seguente viene illustrato come una normale finestra viene definita usando solo codice:</span><span class="sxs-lookup"><span data-stu-id="694b7-143">The following example shows how a standard window is defined using only code:</span></span>  
  
 [!code-csharp[WindowSnippets#WindowCODEONLY](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/CodeOnlyWindow.cs#windowcodeonly)]
 [!code-vb[WindowSnippets#WindowCODEONLY](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowSnippets/visualbasic/codeonlywindow.vb#windowcodeonly)]  
  
 <span data-ttu-id="694b7-144">Nell'esempio seguente viene illustrato come una finestra standard viene definito mediante una combinazione di markup e code-behind.</span><span class="sxs-lookup"><span data-stu-id="694b7-144">The following example shows how a standard window is defined using a combination of markup and code-behind.</span></span>  
  
 [!code-xaml[WindowSnippets#WindowXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MainWindow.xaml#windowxaml)]  
  
 [!code-csharp[WindowSnippets#WindowCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MainWindow.xaml.cs#windowcodebehind)]
 [!code-vb[WindowSnippets#WindowCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowSnippets/visualbasic/mainwindow.xaml.vb#windowcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Window.Show" />
    <altmember cref="M:System.Windows.Window.ShowDialog" />
    <altmember cref="P:System.Windows.Window.DialogResult" />
    <altmember cref="T:System.Windows.Application" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Window ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Window();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="694b7-145">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-145">Initializes a new instance of the <see cref="T:System.Windows.Window" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-146">Il costruttore inizializza la <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.Window.Top%2A>, e <xref:System.Windows.Window.Left%2A> le proprietà sui valori predefiniti <xref:System.Windows.Window> valori.</span><span class="sxs-lookup"><span data-stu-id="694b7-146">The constructor initializes the <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.Window.Top%2A>, and <xref:System.Windows.Window.Left%2A> properties to their default <xref:System.Windows.Window> values.</span></span>  
  
 <span data-ttu-id="694b7-147">Se viene creata una finestra all'interno di un <xref:System.AppDomain> che ha un <xref:System.Windows.Application> dell'oggetto, il costruttore aggiunge il <xref:System.Windows.Window> oggetti al set di <xref:System.Windows.Application>-gestiti windows tramite il <xref:System.Windows.Application.Windows%2A> proprietà del <xref:System.Windows.Application> oggetto.</span><span class="sxs-lookup"><span data-stu-id="694b7-147">If a window is created within an <xref:System.AppDomain> that has an <xref:System.Windows.Application> object, the constructor adds the <xref:System.Windows.Window> object to the set of <xref:System.Windows.Application>-managed windows via the <xref:System.Windows.Application.Windows%2A> property of the <xref:System.Windows.Application> object.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="694b7-148">per l'autorizzazione per questo oggetto chiamare i metodi nativi non sicuri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-148">for permission for this object to call unsafe native methods.</span>
          </span>
          <span data-ttu-id="694b7-149">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-149">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public bool Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; bool" Usage="window.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="694b7-150">Tenta di portare la finestra in primo piano e la attiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-150">Attempts to bring the window to the foreground and activates it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="694b7-151">
            <see langword="true" /> se l'oggetto <see cref="T:System.Windows.Window" /> è stato attivato correttamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-151">
              <see langword="true" /> if the <see cref="T:System.Windows.Window" /> was successfully activated; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-152">Le regole che determinano se la finestra viene attivata sono identici a quelli usati per la [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] `SetForegroundWindow` funzione (User32. dll).</span><span class="sxs-lookup"><span data-stu-id="694b7-152">The rules that determine whether the window is activated are the same as those used by the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] `SetForegroundWindow` function (User32.dll).</span></span>  
  
 <span data-ttu-id="694b7-153">Se la finestra viene attivata in un'applicazione Windows Presentation Foundation che non è l'applicazione dell'utente in primo piano, <xref:System.Windows.Application.Activated> viene generato l'evento.</span><span class="sxs-lookup"><span data-stu-id="694b7-153">If the window is activated in a Windows Presentation Foundation application that is not the user's foreground application, <xref:System.Windows.Application.Activated> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-154">Questo metodo non può essere chiamato quando una finestra è ospitata in un browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-154">This method cannot be called when a window is hosted in a browser.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="694b7-155">per l'autorizzazione per l'attivazione di una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-155">for permission to activate a window.</span>
          </span>
          <span data-ttu-id="694b7-156">Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-156">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-157">Si verifica quando una finestra diventa la finestra in primo piano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-157">Occurs when a window becomes the foreground window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-158">Una finestra viene attivata (diventa la finestra di primo piano) quando:</span><span class="sxs-lookup"><span data-stu-id="694b7-158">A window is activated (becomes the foreground window) when:</span></span>  
  
-   <span data-ttu-id="694b7-159">Prima di tutto viene aperta la finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-159">The window is first opened.</span></span>  
  
-   <span data-ttu-id="694b7-160">Un utente passa a una finestra, selezionarlo con il mouse premendo ALT + TAB, oppure da Gestione attività.</span><span class="sxs-lookup"><span data-stu-id="694b7-160">A user switches to a window by selecting it with the mouse, pressing ALT+TAB, or from Task Manager.</span></span>  
  
-   <span data-ttu-id="694b7-161">Un utente fa clic sul pulsante della barra delle applicazioni della finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-161">A user clicks the window's taskbar button.</span></span>  
  
 <span data-ttu-id="694b7-162">Windows che dobbiamo rilevare quando diventano attive può gestire il <xref:System.Windows.Window.Activated> evento.</span><span class="sxs-lookup"><span data-stu-id="694b7-162">Windows that need to detect when they become activate can handle the <xref:System.Windows.Window.Activated> event.</span></span>  
  
 <span data-ttu-id="694b7-163">Dopo che una finestra viene attivata prima di tutto, può essere disattivato e riattivato molte volte durante la sua durata.</span><span class="sxs-lookup"><span data-stu-id="694b7-163">After a window is first activated, it may be deactivated and reactivated many times during its lifetime.</span></span> <span data-ttu-id="694b7-164">Se il comportamento di un'applicazione o dello stato dipende dal relativo stato di attivazione, è possibile esaminare <xref:System.Windows.Window.IsActive%2A> per determinare quale stato di attivazione si trova in.</span><span class="sxs-lookup"><span data-stu-id="694b7-164">If an application's behavior or state depends on its activation state, it can inspect <xref:System.Windows.Window.IsActive%2A> to determine which activation state it's in.</span></span>  
  
 <span data-ttu-id="694b7-165">Un'applicazione può anche essere <xref:System.Windows.Application.Activated>.</span><span class="sxs-lookup"><span data-stu-id="694b7-165">An application can also be <xref:System.Windows.Application.Activated>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Deactivated" />
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparency">
      <MemberSignature Language="C#" Value="public bool AllowsTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.AllowsTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowsTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsTransparency { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowsTransparency : bool with get, set" Usage="System.Windows.Window.AllowsTransparency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-166">Ottiene o imposta un valore che indica se l'area client di una finestra supporta la trasparenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-166">Gets or sets a value that indicates whether a window's client area supports transparency.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-167">
            <see langword="true" /> se la finestra supporta la trasparenza; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-167">
              <see langword="true" /> if the window supports transparency; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-168">Quando la <xref:System.Windows.Controls.Control.Background%2A> di una finestra è impostata su un trasparente il colore usando <xref:System.Windows.Media.Brushes.Transparent%2A> , ad esempio, la finestra resta opaca.</span><span class="sxs-lookup"><span data-stu-id="694b7-168">When the <xref:System.Windows.Controls.Control.Background%2A> property of a window is set to a transparent color, using <xref:System.Windows.Media.Brushes.Transparent%2A> for example, the window remains opaque.</span></span> <span data-ttu-id="694b7-169">Ciò significa che non possono essere visualizzate sul desktop e le applicazioni in esecuzione "la finestra beneath".</span><span class="sxs-lookup"><span data-stu-id="694b7-169">This means that the desktop and any running applications "beneath" the window cannot be seen.</span></span> <span data-ttu-id="694b7-170">Per abilitare questo tipo di trasparenza <xref:System.Windows.Window.AllowsTransparency%2A> deve essere impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="694b7-170">To enable this type of transparency, <xref:System.Windows.Window.AllowsTransparency%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="694b7-171"><xref:System.Windows.Window.AllowsTransparency%2A> è disponibile per facilitare la creazione di finestre non rettangolari e, di conseguenza, quando <xref:System.Windows.Window.AllowsTransparency%2A> è impostata su `true`, una finestra <xref:System.Windows.Window.WindowStyle%2A> proprietà deve essere impostata su <xref:System.Windows.WindowStyle.None>.</span><span class="sxs-lookup"><span data-stu-id="694b7-171"><xref:System.Windows.Window.AllowsTransparency%2A> exists to facilitate the creation of non-rectangular windows, and, consequently, when <xref:System.Windows.Window.AllowsTransparency%2A> is set to `true`, a window's <xref:System.Windows.Window.WindowStyle%2A> property must be set to <xref:System.Windows.WindowStyle.None>.</span></span>  
  
<a name="dependencyPropertyInfo_WindowAllowsTransparency"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="694b7-172">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="694b7-172">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="694b7-173">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="694b7-173">Identifier field</span></span>|<xref:System.Windows.Window.AllowsTransparencyProperty>|  
|<span data-ttu-id="694b7-174">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="694b7-174">Metadata properties set to `true`</span></span>|<span data-ttu-id="694b7-175">nessuno</span><span class="sxs-lookup"><span data-stu-id="694b7-175">None</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="694b7-176">Finestra con un valore di <see cref="P:System.Windows.Window.WindowStyle" /> diverso da <see cref="F:System.Windows.WindowStyle.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-176">A window that has a <see cref="P:System.Windows.Window.WindowStyle" /> value of anything other than <see cref="F:System.Windows.WindowStyle.None" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparencyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowsTransparencyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowsTransparencyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.AllowsTransparencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowsTransparencyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowsTransparencyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowsTransparencyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.AllowsTransparencyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-177">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Window.AllowsTransparency" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-177">Identifies the <see cref="P:System.Windows.Window.AllowsTransparency" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeBounds As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeBounds);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="window.ArrangeOverride arrangeBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeBounds" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeBounds">
          <span data-ttu-id="694b7-178">Oggetto <see cref="T:System.Windows.Size" /> che riflette le dimensioni finali che la finestra deve utilizzare per disporre se stessa e i relativi elementi figlio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-178">A <see cref="T:System.Windows.Size" /> that reflects the final size that the window should use to arrange itself and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="694b7-179">Eseguire l'override di questo metodo per disporre e ridimensionare una finestra e i relativi elementi figlio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-179">Override this method to arrange and size a window and its child elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="694b7-180">Oggetto <see cref="T:System.Windows.Size" /> che riflette le dimensioni effettive utilizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-180">A <see cref="T:System.Windows.Size" /> that reflects the actual size that was used.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-181"><xref:System.Windows.Window.ArrangeOverride%2A> non viene chiamato quando la <xref:System.Windows.UIElement.Visibility%2A> un valore della proprietà è <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="694b7-181"><xref:System.Windows.Window.ArrangeOverride%2A> is not called when the <xref:System.Windows.UIElement.Visibility%2A> property has a value of <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="694b7-182">Se il valore della <xref:System.Windows.UIElement.Visibility%2A> la proprietà <xref:System.Windows.Visibility.Hidden> oppure <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.ArrangeOverride%2A> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="694b7-182">If the value of the <xref:System.Windows.UIElement.Visibility%2A> property is either <xref:System.Windows.Visibility.Hidden> or <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.ArrangeOverride%2A> is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-183">Quando sia <xref:System.Windows.Window.Show%2A> oppure <xref:System.Windows.Window.ShowDialog%2A> vengono chiamati, il <xref:System.Windows.UIElement.Visibility%2A> proprietà di un <xref:System.Windows.Window> è impostato su <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="694b7-183">When either <xref:System.Windows.Window.Show%2A> or <xref:System.Windows.Window.ShowDialog%2A> are called, the <xref:System.Windows.UIElement.Visibility%2A> property of a <xref:System.Windows.Window> is set to <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="window.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="694b7-184">Chiude manualmente un oggetto <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-184">Manually closes a <see cref="T:System.Windows.Window" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-185">Oggetto <xref:System.Windows.Window> possono essere chiusi utilizzando uno di diversi meccanismi noti, fornita dal sistema, che si trovano nella barra del titolo, tra cui:</span><span class="sxs-lookup"><span data-stu-id="694b7-185">A <xref:System.Windows.Window> can be closed using one of several, well-known, system-provided mechanisms located in its title bar, including:</span></span>  
  
-   <span data-ttu-id="694b7-186">ALT+F4.</span><span class="sxs-lookup"><span data-stu-id="694b7-186">ALT+F4.</span></span>  
  
-   <span data-ttu-id="694b7-187">Menu di sistema &#124; **Chiudi**.</span><span class="sxs-lookup"><span data-stu-id="694b7-187">System menu &#124; **Close**.</span></span>  
  
-   <span data-ttu-id="694b7-188">**Chiudi** pulsante.</span><span class="sxs-lookup"><span data-stu-id="694b7-188">**Close** button.</span></span>  
  
 <span data-ttu-id="694b7-189">Oggetto <xref:System.Windows.Window> può anche essere chiusa utilizzando uno dei diversi meccanismi noti all'interno dell'area client forniti da sviluppatori, tra cui:</span><span class="sxs-lookup"><span data-stu-id="694b7-189">A <xref:System.Windows.Window> can also be closed using one of several well-known mechanisms within the client area that are provided by developers, including:</span></span>  
  
-   <span data-ttu-id="694b7-190">**File** &#124; **Exit** in una finestra principale.</span><span class="sxs-lookup"><span data-stu-id="694b7-190">**File** &#124; **Exit** on a main window.</span></span>  
  
-   <span data-ttu-id="694b7-191">**File** &#124; **Close** o un' **Chiudi** pulsante in una finestra figlio.</span><span class="sxs-lookup"><span data-stu-id="694b7-191">**File** &#124; **Close** or a **Close** button on a child window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-192">**OK** e **annullare** pulsanti in una finestra di dialogo sono inoltre fornita dallo sviluppatore, anche se verrà probabilmente set <xref:System.Windows.Window.DialogResult%2A>, che deve essere chiuso automaticamente una finestra aperta chiamando <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-192">**OK** and **Cancel** buttons on a dialog box are also developer-provided, although will likely set <xref:System.Windows.Window.DialogResult%2A>, which automatically closes a window that was opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="694b7-193">Questi meccanismi richiedono una chiamata esplicita a <xref:System.Windows.Window.Close%2A> per chiudere una finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-193">These mechanisms require you to explicitly call <xref:System.Windows.Window.Close%2A> to close a window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-194">Se una finestra aperta chiamando <xref:System.Windows.Window.ShowDialog%2A>e con un <xref:System.Windows.Controls.Button> con relativo <xref:System.Windows.Controls.Button.IsCancel%2A> proprietà impostata su true, verrà chiusa automaticamente quando il pulsante viene fatto clic o si preme ESC.</span><span class="sxs-lookup"><span data-stu-id="694b7-194">If a window, opened by calling <xref:System.Windows.Window.ShowDialog%2A>, and with a <xref:System.Windows.Controls.Button> with its <xref:System.Windows.Controls.Button.IsCancel%2A> property set to true, will automatically close when the button is either clicked, or ESC is pressed.</span></span> <span data-ttu-id="694b7-195">Se la finestra è stata aperta tramite <xref:System.Windows.Window.Show%2A>, tuttavia <xref:System.Windows.Window.Close%2A> deve essere chiamato in modo esplicito, ad esempio dal <xref:System.Windows.Controls.Primitives.ButtonBase.Click> gestore eventi per il <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="694b7-195">If the window was opened using <xref:System.Windows.Window.Show%2A>, however, <xref:System.Windows.Window.Close%2A> must be explicitly called, such as from <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler for the <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="694b7-196">Chiusura di una finestra determina il <xref:System.Windows.Window.Closing> generazione dell'evento.</span><span class="sxs-lookup"><span data-stu-id="694b7-196">Closing a window causes the <xref:System.Windows.Window.Closing> event to be raised.</span></span> <span data-ttu-id="694b7-197">Se il <xref:System.Windows.Window.Closing> evento non viene annullato, si verifica quanto segue:</span><span class="sxs-lookup"><span data-stu-id="694b7-197">If the <xref:System.Windows.Window.Closing> event isn't canceled, the following occurs:</span></span>  
  
-   <span data-ttu-id="694b7-198">Il <xref:System.Windows.Window> viene rimosso dalla <xref:System.Windows.Application.Windows%2A?displayProperty=nameWithType> (se un <xref:System.Windows.Application> oggetto esistente).</span><span class="sxs-lookup"><span data-stu-id="694b7-198">The <xref:System.Windows.Window> is removed from <xref:System.Windows.Application.Windows%2A?displayProperty=nameWithType> (if an <xref:System.Windows.Application> object exists).</span></span>  
  
-   <span data-ttu-id="694b7-199">Il <xref:System.Windows.Window> viene rimosso dal proprietario <xref:System.Windows.Window> se è stata stabilita la relazione di proprietario/proprietà prima la proprietà <xref:System.Windows.Window> è stato illustrato e dopo il proprietario <xref:System.Windows.Window> è stato aperto.</span><span class="sxs-lookup"><span data-stu-id="694b7-199">The <xref:System.Windows.Window> is removed from the owner <xref:System.Windows.Window> if the owner/owned relationship was established before the owned <xref:System.Windows.Window> was shown and after the owner <xref:System.Windows.Window> was opened.</span></span>  
  
-   <span data-ttu-id="694b7-200">Viene generato l'evento <xref:System.Windows.Window.Closed>.</span><span class="sxs-lookup"><span data-stu-id="694b7-200">The <xref:System.Windows.Window.Closed> event is raised.</span></span>  
  
-   <span data-ttu-id="694b7-201">Non gestita le risorse create tramite il <xref:System.Windows.Window> vengono eliminati.</span><span class="sxs-lookup"><span data-stu-id="694b7-201">Unmanaged resources created by the <xref:System.Windows.Window> are disposed.</span></span>  
  
-   <span data-ttu-id="694b7-202">Se <xref:System.Windows.Window.ShowDialog%2A> è stato chiamato per visualizzare il <xref:System.Windows.Window>, <xref:System.Windows.Window.ShowDialog%2A> restituisce.</span><span class="sxs-lookup"><span data-stu-id="694b7-202">If <xref:System.Windows.Window.ShowDialog%2A> was called to show the <xref:System.Windows.Window>, <xref:System.Windows.Window.ShowDialog%2A> returns.</span></span>  
  
 <span data-ttu-id="694b7-203">Chiusura di un <xref:System.Windows.Window> fa sì che tutte le finestre di sua proprietà per essere chiuso.</span><span class="sxs-lookup"><span data-stu-id="694b7-203">Closing a <xref:System.Windows.Window> causes any windows that it owns to be closed.</span></span> <span data-ttu-id="694b7-204">Inoltre, la chiusura una <xref:System.Windows.Window> potrebbe essere un'applicazione arrestare l'esecuzione a seconda del modo in cui il <xref:System.Windows.Application.ShutdownMode%2A?displayProperty=nameWithType> è impostata.</span><span class="sxs-lookup"><span data-stu-id="694b7-204">Furthermore, closing a <xref:System.Windows.Window> may cause an application to stop running depending on how the <xref:System.Windows.Application.ShutdownMode%2A?displayProperty=nameWithType> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-205">Questo metodo non può essere chiamato quando una finestra è ospitata in un browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-205">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="694b7-206">L'esempio seguente mostra una **File** &#124; **Exit** menu gestito per chiamare in modo esplicito <xref:System.Windows.Window.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-206">The following example shows a **File** &#124; **Exit** menu being handled to explicitly call <xref:System.Windows.Window.Close%2A>.</span></span>  
  
 [!code-xaml[WindowCloseSnippets#WindowCloseXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowCloseSnippets/CSharp/MainWindow.xaml#windowclosexaml)]  
  
 [!code-csharp[WindowCloseSnippets#WindowCloseCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowCloseSnippets/CSharp/MainWindow.xaml.cs#windowclosecodebehind)]
 [!code-vb[WindowCloseSnippets#WindowCloseCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowCloseSnippets/visualbasic/mainwindow.xaml.vb#windowclosecodebehind)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="694b7-207">l'autorizzazione usare tutte le finestre e gli eventi input utente senza alcuna restrizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-207">for permission to use all windows and user input events without restriction.</span>
          </span>
          <span data-ttu-id="694b7-208">Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-208">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Window.Show" />
        <altmember cref="M:System.Windows.Window.ShowDialog" />
        <altmember cref="P:System.Windows.Window.DialogResult" />
        <altmember cref="P:System.Windows.Window.Owner" />
        <altmember cref="P:System.Windows.Window.OwnedWindows" />
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-209">Si verifica quando la finestra è in fase di chiusura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-209">Occurs when the window is about to close.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-210">Dopo questo evento viene generato, una finestra non è possibile impedire la chiusura.</span><span class="sxs-lookup"><span data-stu-id="694b7-210">Once this event is raised, a window cannot be prevented from closing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="694b7-211">
            <see cref="P:System.Windows.UIElement.Visibility" /> è impostata oppure viene chiamato <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" /> o <see cref="M:System.Windows.Window.Hide" /> durante la chiusura di una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-211">
              <see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Hide" /> is called while a window is closing.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="E:System.Windows.Window.Closing" />
        <altmember cref="M:System.Windows.Application.Shutdown" />
        <altmember cref="P:System.Windows.Application.ShutdownMode" />
        <altmember cref="E:System.Windows.Application.SessionEnding" />
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Closing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closing As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : System.ComponentModel.CancelEventHandler " Usage="member this.Closing : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-212">Si verifica direttamente dopo la chiamata a <see cref="M:System.Windows.Window.Close" /> e può essere gestito per annullare la chiusura della finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-212">Occurs directly after <see cref="M:System.Windows.Window.Close" /> is called, and can be handled to cancel window closure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-213"><xref:System.Windows.Window.Closing> può essere gestito per rilevare quando viene chiusa una finestra (ad esempio, quando <xref:System.Windows.Window.Close%2A> viene chiamato).</span><span class="sxs-lookup"><span data-stu-id="694b7-213"><xref:System.Windows.Window.Closing> can be handled to detect when a window is being closed (for example, when <xref:System.Windows.Window.Close%2A> is called).</span></span> <span data-ttu-id="694b7-214">Inoltre, <xref:System.Windows.Window.Closing> può essere utilizzato per impedire la chiusura di una finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-214">Furthermore, <xref:System.Windows.Window.Closing> can be used to prevent a window from closing.</span></span> <span data-ttu-id="694b7-215">Per impedire la chiusura di una finestra, è possibile impostare il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> proprietà del <xref:System.ComponentModel.CancelEventArgs> argomento `true`.</span><span class="sxs-lookup"><span data-stu-id="694b7-215">To prevent a window from closing, you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> argument to `true`.</span></span>  
  
 <span data-ttu-id="694b7-216">Il <xref:System.Windows.Window.Closing> evento viene generato quando <xref:System.Windows.Window.Close%2A> viene chiamato, se si fa clic sul pulsante Chiudi della finestra, oppure se l'utente preme ALT + F4.</span><span class="sxs-lookup"><span data-stu-id="694b7-216">The <xref:System.Windows.Window.Closing> event is raised when <xref:System.Windows.Window.Close%2A> is called, if a window's Close button is clicked, or if the user presses ALT+F4.</span></span>  
  
 <span data-ttu-id="694b7-217">Se è stato aperto una finestra di proprietà dalla finestra proprietaria tramite <xref:System.Windows.Window.Show%2A>e il proprietario della finestra viene chiusa, la finestra di proprietà <xref:System.Windows.Window.Closing> non viene generato l'evento.</span><span class="sxs-lookup"><span data-stu-id="694b7-217">If an owned window was opened by its owner window using <xref:System.Windows.Window.Show%2A>, and the owner window is closed, the owned window's <xref:System.Windows.Window.Closing> event is not raised.</span></span> <span data-ttu-id="694b7-218">Se il proprietario di una finestra viene chiusa (vedere <xref:System.Windows.Window.Owner%2A>), <xref:System.Windows.Window.Closing> non viene generato nella finestra Proprietà.</span><span class="sxs-lookup"><span data-stu-id="694b7-218">If the owner of a window is closed (see <xref:System.Windows.Window.Owner%2A>), <xref:System.Windows.Window.Closing> is not raised on the owned window.</span></span>  
  
 <span data-ttu-id="694b7-219">Se <xref:System.Windows.Application.Shutdown%2A> viene chiamato, il <xref:System.Windows.Window.Closing> viene generato l'evento per ogni finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-219">If <xref:System.Windows.Application.Shutdown%2A> is called, the <xref:System.Windows.Window.Closing> event for each window is raised.</span></span> <span data-ttu-id="694b7-220">Tuttavia, se <xref:System.Windows.Window.Closing> viene annullato, annullamento viene ignorato.</span><span class="sxs-lookup"><span data-stu-id="694b7-220">However, if <xref:System.Windows.Window.Closing> is canceled, cancellation is ignored.</span></span>  
  
 <span data-ttu-id="694b7-221">Se una sessione viene interrotta perché un utente si disconnette o arrestato <xref:System.Windows.Window.Closing> non viene generato; gestire <xref:System.Windows.Application.SessionEnding> per implementare il codice che consente di annullare la chiusura dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="694b7-221">If a session ends because a user logs off or shuts down, <xref:System.Windows.Window.Closing> is not raised; handle <xref:System.Windows.Application.SessionEnding> to implement code that cancels application closure.</span></span>  
  
 <span data-ttu-id="694b7-222">Se si desidera mostrare e nascondere una finestra più volte nel corso della durata di un'applicazione e non si vuole creare una nuova finestra ogni volta che è la visualizzazione, è possibile gestire il <xref:System.Windows.Window.Closing> evento, annullare l'operazione e chiamare il <xref:System.Windows.Window.Hide%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="694b7-222">If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to reinstantiate the window each time you show it, you can handle the <xref:System.Windows.Window.Closing> event, cancel it, and call the <xref:System.Windows.Window.Hide%2A> method.</span></span> <span data-ttu-id="694b7-223">Quindi, è possibile chiamare <xref:System.Windows.Window.Show%2A> nella stessa istanza di riaprirlo.</span><span class="sxs-lookup"><span data-stu-id="694b7-223">Then, you can call <xref:System.Windows.Window.Show%2A> on the same instance to reopen it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="694b7-224">L'esempio seguente illustra un <xref:System.Windows.Window> che determina se è necessario l'intervento dell'utente a chiudere.</span><span class="sxs-lookup"><span data-stu-id="694b7-224">The following example demonstrates a <xref:System.Windows.Window> that determines whether it needs user intervention to close.</span></span>  
  
 [!code-xaml[WindowClosingSnippets#WindowClosingXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowClosingSnippets/CSharp/DataWindow.xaml#windowclosingxaml1)]  
  
 [!code-csharp[WindowClosingSnippets](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowClosingSnippets/CSharp/DataWindow.xaml.cs)]
 [!code-vb[WindowClosingSnippets](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowClosingSnippets/visualbasic/datawindow.xaml.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="694b7-225">
            <see cref="P:System.Windows.UIElement.Visibility" /> è impostata oppure viene chiamato <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" /> o <see cref="M:System.Windows.Window.Close" /> durante la chiusura di una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-225">
              <see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Close" /> is called while a window is closing.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Application.ShutdownMode" />
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="E:System.Windows.Window.Closed" />
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContentRendered As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ ContentRendered;" />
      <MemberSignature Language="F#" Value="member this.ContentRendered : EventHandler " Usage="member this.ContentRendered : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-226">Si verifica dopo il rendering del contenuto di una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-226">Occurs after a window's content has been rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-227">Se la finestra non dispone di alcun contenuto, non viene generato questo evento.</span><span class="sxs-lookup"><span data-stu-id="694b7-227">If the window has no content, this event is not raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ContentControl.Content" />
        <altmember cref="E:System.Windows.FrameworkElement.Loaded" />
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberSignature Language="F#" Value="member this.Deactivated : EventHandler " Usage="member this.Deactivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-228">Si verifica quando una finestra diventa una finestra di sfondo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-228">Occurs when a window becomes a background window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-229">Una finestra è disattivata (diventa una finestra in background) quando:</span><span class="sxs-lookup"><span data-stu-id="694b7-229">A window is deactivated (becomes a background window) when:</span></span>  
  
-   <span data-ttu-id="694b7-230">Un utente passa a un'altra finestra dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="694b7-230">A user switches to another window in the current application.</span></span>  
  
-   <span data-ttu-id="694b7-231">Un utente passa alla finestra in un'altra applicazione con ALT + TAB oppure tramite Gestione attività.</span><span class="sxs-lookup"><span data-stu-id="694b7-231">A user switches to the window in another application by using ALT+TAB or by using Task Manager.</span></span>  
  
-   <span data-ttu-id="694b7-232">Un utente fa clic sul pulsante della barra delle applicazioni per una finestra in un'altra applicazione.</span><span class="sxs-lookup"><span data-stu-id="694b7-232">A user clicks the taskbar button for a window in another application.</span></span>  
  
 <span data-ttu-id="694b7-233">Windows che dobbiamo rilevare quando diventano disattivate gestendo il <xref:System.Windows.Window.Deactivated> evento.</span><span class="sxs-lookup"><span data-stu-id="694b7-233">Windows that need to detect when they become deactivated by handling the <xref:System.Windows.Window.Deactivated> event.</span></span>  
  
 <span data-ttu-id="694b7-234">Dopo che una finestra è prima necessario disattivarlo, potrebbe riattivato e disattivato molte volte durante la sua durata.</span><span class="sxs-lookup"><span data-stu-id="694b7-234">After a window is first deactivated, it may be reactivated and deactivated many times during its lifetime.</span></span> <span data-ttu-id="694b7-235">Se il comportamento di un'applicazione o dello stato dipende dal relativo stato di attivazione, è possibile esaminare <xref:System.Windows.Window.IsActive%2A> per determinare quale stato di attivazione si trova in.</span><span class="sxs-lookup"><span data-stu-id="694b7-235">If an application's behavior or state depends on its activation state, it can inspect <xref:System.Windows.Window.IsActive%2A> to determine which activation state it's in.</span></span>  
  
 <span data-ttu-id="694b7-236">Un'applicazione può anche essere <xref:System.Windows.Application.Deactivated>.</span><span class="sxs-lookup"><span data-stu-id="694b7-236">An application can also be <xref:System.Windows.Application.Deactivated>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; DialogResult { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DialogResult : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Window.DialogResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DialogResultConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-237">Ottiene o imposta il valore del risultato della finestra di dialogo, ovvero il valore restituito dal metodo <see cref="M:System.Windows.Window.ShowDialog" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-237">Gets or sets the dialog result value, which is the value that is returned from the <see cref="M:System.Windows.Window.ShowDialog" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-238">Valore <see cref="T:System.Nullable`1" /> di tipo <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-238">A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="694b7-239">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-239">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-240"><xref:System.Windows.Window.DialogResult%2A> può essere usato dal codice che illustra una finestra di dialogo per determinare se un utente è stato accettato (`true`) o annullata (`false`) finestra di dialogo.</span><span class="sxs-lookup"><span data-stu-id="694b7-240"><xref:System.Windows.Window.DialogResult%2A> can be used from the code that showed a dialog box to determine whether a user accepted (`true`) or canceled (`false`) the dialog box.</span></span> <span data-ttu-id="694b7-241">Se una finestra di dialogo è stata accettata, questa opzione è usata per il codice che ha aperto la finestra di dialogo per recuperare i dati raccolti dall'utente ed elaborarlo.</span><span class="sxs-lookup"><span data-stu-id="694b7-241">If a dialog box was accepted, this signifies to the code that opened the dialog box to retrieve the data that was collected by the user and process it.</span></span> <span data-ttu-id="694b7-242">Se una finestra di dialogo è stata annullata, tuttavia, ciò significa che il codice chiamante deve essere interrotta un'ulteriore elaborazione.</span><span class="sxs-lookup"><span data-stu-id="694b7-242">If a dialog box was canceled, however, this signifies that calling code should stop any further processing.</span></span>  
  
 <span data-ttu-id="694b7-243">Per impostazione predefinita, una finestra di dialogo viene annullata quando un utente esegue uno dei seguenti:</span><span class="sxs-lookup"><span data-stu-id="694b7-243">By default, a dialog box is canceled when a user does one of the following:</span></span>  
  
-   <span data-ttu-id="694b7-244">PressesALT + F4.</span><span class="sxs-lookup"><span data-stu-id="694b7-244">PressesALT+F4.</span></span>  
  
-   <span data-ttu-id="694b7-245">Sceglie la **Chiudi** pulsante.</span><span class="sxs-lookup"><span data-stu-id="694b7-245">Clicks the **Close** button.</span></span>  
  
-   <span data-ttu-id="694b7-246">Consente di selezionare **Chiudi** dal menu di sistema.</span><span class="sxs-lookup"><span data-stu-id="694b7-246">Selects **Close** from the System menu.</span></span>  
  
 <span data-ttu-id="694b7-247">In tutti questi casi <xref:System.Windows.Window.DialogResult%2A> è `false` per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="694b7-247">In all of these cases, <xref:System.Windows.Window.DialogResult%2A> is `false` by default.</span></span>  
  
 <span data-ttu-id="694b7-248">Una finestra di dialogo fornisce in genere un pulsante speciale per annullare una finestra di dialogo, ovvero il pulsante di cui <xref:System.Windows.Controls.Button.IsCancel%2A> è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="694b7-248">A dialog box typically provides a special button to cancel a dialog, which is the button whose <xref:System.Windows.Controls.Button.IsCancel%2A> property is set to `true`.</span></span> <span data-ttu-id="694b7-249">Un pulsante configurato in questo modo verrà chiusa automaticamente una finestra quando sia premuto o quando viene premuto il tasto ESC.</span><span class="sxs-lookup"><span data-stu-id="694b7-249">A button configured this way will automatically close a window when either it is pressed, or when the ESC key is pressed.</span></span> <span data-ttu-id="694b7-250">In entrambi i casi <xref:System.Windows.Window.DialogResult%2A> rimane `false`.</span><span class="sxs-lookup"><span data-stu-id="694b7-250">In either of these cases, <xref:System.Windows.Window.DialogResult%2A> remains `false`.</span></span>  
  
 <span data-ttu-id="694b7-251">Una finestra di dialogo in genere disponibile anche un pulsante di conferma, ovvero il pulsante di cui <xref:System.Windows.Controls.Button.IsDefault%2A> è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="694b7-251">A dialog box also typically provides an accept button, which is the button whose <xref:System.Windows.Controls.Button.IsDefault%2A> property is set to `true`.</span></span> <span data-ttu-id="694b7-252">Un pulsante configurato in questo modo verrà generato il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento quando viene premuto, o il tasto INVIO.</span><span class="sxs-lookup"><span data-stu-id="694b7-252">A button configured this way will raise its <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event when either it or the ENTER key is pressed.</span></span> <span data-ttu-id="694b7-253">Tuttavia, non verrà chiusa automaticamente la finestra di dialogo, non verrà impostata <xref:System.Windows.Window.DialogResult%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="694b7-253">However, it won't automatically close the dialog box, nor will it set <xref:System.Windows.Window.DialogResult%2A> to `true`.</span></span> <span data-ttu-id="694b7-254">È necessario scrivere manualmente il codice, in genere dal <xref:System.Windows.Controls.Primitives.ButtonBase.Click> gestore eventi per il pulsante predefinito.</span><span class="sxs-lookup"><span data-stu-id="694b7-254">You need to manually write this code, usually from the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler for the default button.</span></span>  
  
 <span data-ttu-id="694b7-255"><xref:System.Windows.Window.DialogResult%2A> è `null` quando viene visualizzata nella finestra di dialogo non viene accettata né annullato.</span><span class="sxs-lookup"><span data-stu-id="694b7-255"><xref:System.Windows.Window.DialogResult%2A> is `null` when the dialog box is shown but neither accepted nor canceled.</span></span>  
  
 <span data-ttu-id="694b7-256">Quando si chiude una finestra di dialogo, è possibile ottenere il risultato della finestra di dialogo dal valore restituito da <xref:System.Windows.Window.ShowDialog%2A> metodo, o controllando il <xref:System.Windows.Window.DialogResult%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="694b7-256">After a dialog box closes, you can get the dialog result from the value returned by <xref:System.Windows.Window.ShowDialog%2A> method, or by inspecting the <xref:System.Windows.Window.DialogResult%2A> property.</span></span>  
  
 <span data-ttu-id="694b7-257"><xref:System.Windows.Window.DialogResult%2A> può essere impostato solo quando un <xref:System.Windows.Window> aperta chiamando relativo <xref:System.Windows.Window.ShowDialog%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="694b7-257"><xref:System.Windows.Window.DialogResult%2A> can only be set when a <xref:System.Windows.Window> is opened by calling its <xref:System.Windows.Window.ShowDialog%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-258">Non è possibile impostare o ottenere questa proprietà quando una finestra è ospitata in un browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-258">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="694b7-259">Nell'esempio seguente viene illustrato come configurare un pulsante OK e un pulsante di annullamento per restituire la classe appropriata <xref:System.Windows.Window.DialogResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-259">The following example shows how to configure an OK button and a Cancel button to return the appropriate <xref:System.Windows.Window.DialogResult%2A>.</span></span>  
  
 [!code-xaml[WindowDialogResultSnippets#WindowDialogResultXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDialogResultSnippets/CSharp/DialogBox.xaml#windowdialogresultxaml)]  
  
 [!code-csharp[WindowDialogResultSnippets#WindowDialogResultCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDialogResultSnippets/CSharp/DialogBox.xaml.cs#windowdialogresultcodebehind)]
 [!code-vb[WindowDialogResultSnippets#WindowDialogResultCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowDialogResultSnippets/visualbasic/dialogbox.xaml.vb#windowdialogresultcodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="694b7-260">
            <see cref="P:System.Windows.Window.DialogResult" /> viene impostato prima che la finestra venga aperta chiamando <see cref="M:System.Windows.Window.ShowDialog" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-260">
              <see cref="P:System.Windows.Window.DialogResult" /> is set before a window is opened by calling <see cref="M:System.Windows.Window.ShowDialog" />.</span>
          </span>
          <span data-ttu-id="694b7-261">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-261">-or-</span>
          </span>
          <span data-ttu-id="694b7-262">
            <see cref="P:System.Windows.Window.DialogResult" /> viene impostato in una finestra aperta chiamando <see cref="M:System.Windows.Window.Show" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-262">
              <see cref="P:System.Windows.Window.DialogResult" /> is set on a window that is opened by calling <see cref="M:System.Windows.Window.Show" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As DpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DpiChangedEventHandler ^ DpiChanged;" />
      <MemberSignature Language="F#" Value="member this.DpiChanged : System.Windows.DpiChangedEventHandler " Usage="member this.DpiChanged : System.Windows.DpiChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-263">Si verifica dopo la modifica del valore DPI dello schermo su cui è visualizzata la finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-263">Occurs after the DPI of the screen on which the Window is displayed changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DpiChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DpiChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.DpiChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DpiChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DpiChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DpiChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Window.DpiChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-264">Oggetto <see cref="T:System.Windows.RoutedEvent" /> per la modifica del valore DPI dello schermo su cui si trova la finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-264">A <see cref="T:System.Windows.RoutedEvent" /> for when the DPI of the screen the Window is on changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragMove">
      <MemberSignature Language="C#" Value="public void DragMove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DragMove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.DragMove" />
      <MemberSignature Language="VB.NET" Value="Public Sub DragMove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DragMove();" />
      <MemberSignature Language="F#" Value="member this.DragMove : unit -&gt; unit" Usage="window.DragMove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="694b7-265">Consente il trascinamento di una finestra con il pulsante sinistro del mouse su un'area esposta dell'area client della finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-265">Allows a window to be dragged by a mouse with its left button down over an exposed area of the window's client area.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-266">Il pulsante sinistro del mouse deve essere premuto quando <xref:System.Windows.Window.DragMove%2A> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="694b7-266">The left mouse button must be down when <xref:System.Windows.Window.DragMove%2A> is called.</span></span> <span data-ttu-id="694b7-267">Per rilevare quando viene premuto il pulsante sinistro del mouse, è possibile gestire il <xref:System.Windows.UIElement.MouseLeftButtonDown> evento.</span><span class="sxs-lookup"><span data-stu-id="694b7-267">One way to detect when the left mouse button is pressed is to handle the <xref:System.Windows.UIElement.MouseLeftButtonDown> event.</span></span>  
  
 <span data-ttu-id="694b7-268">Quando si <xref:System.Windows.Window.DragMove%2A> viene chiamato, sinistra deve essere premuto il pulsante del mouse su un'area esposta dell'area client della finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-268">When <xref:System.Windows.Window.DragMove%2A> is called, the left mouse button must be depressed over an exposed area of the window's client area.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-269">Questo metodo non può essere chiamato quando una finestra è ospitata in un browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-269">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="694b7-270">Nell'esempio seguente viene illustrato come eseguire l'override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> chiamare <xref:System.Windows.Window.DragMove%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-270">The following example shows how to override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> to call <xref:System.Windows.Window.DragMove%2A>.</span></span>  
  
 [!code-csharp[WindowDragMoveSnippets#CallWindowDragMoveCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDragMoveSnippets/CSharp/MainWindow.xaml.cs#callwindowdragmovecodebehind)]
 [!code-vb[WindowDragMoveSnippets#CallWindowDragMoveCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowDragMoveSnippets/visualbasic/mainwindow.xaml.vb#callwindowdragmovecodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="694b7-271">Il pulsante sinistro del mouse non è premuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-271">The left mouse button is not down.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="694b7-272">l'autorizzazione trascinare una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-272">for permission to drag a window.</span>
          </span>
          <span data-ttu-id="694b7-273">Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-273">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="E:System.Windows.Window.LocationChanged" />
      </Docs>
    </Member>
    <Member MemberName="GetWindow">
      <MemberSignature Language="C#" Value="public static System.Windows.Window GetWindow (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Window GetWindow(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.GetWindow(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Window ^ GetWindow(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetWindow : System.Windows.DependencyObject -&gt; System.Windows.Window" Usage="System.Windows.Window.GetWindow dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Window</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">
          <span data-ttu-id="694b7-274">Oggetto di dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-274">The dependency object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="694b7-275">Restituisce un riferimento all'oggetto <see cref="T:System.Windows.Window" /> che ospita la struttura ad albero del contenuto in cui è situato l'oggetto di dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-275">Returns a reference to the <see cref="T:System.Windows.Window" /> object that hosts the content tree within which the dependency object is located.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="694b7-276">Riferimento <see cref="T:System.Windows.Window" /> alla finestra host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-276">A <see cref="T:System.Windows.Window" /> reference to the host window.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="694b7-277">
            <paramref name="dependencyObject" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-277">
              <paramref name="dependencyObject" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public void Hide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Hide() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Hide" />
      <MemberSignature Language="VB.NET" Value="Public Sub Hide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Hide();" />
      <MemberSignature Language="F#" Value="member this.Hide : unit -&gt; unit" Usage="window.Hide " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="694b7-278">Rende invisibile una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-278">Makes a window invisible.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-279">Una finestra non viene chiuso quando è nascosto e né la <xref:System.Windows.Window.Closing> né <xref:System.Windows.Window.Closed> viene generato l'evento.</span><span class="sxs-lookup"><span data-stu-id="694b7-279">A window is not closed when it is hidden, and neither the <xref:System.Windows.Window.Closing> nor <xref:System.Windows.Window.Closed> event is raised.</span></span> <span data-ttu-id="694b7-280">Al contrario, la finestra <xref:System.Windows.UIElement.Visibility%2A> è impostata su <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="694b7-280">Instead, the window's <xref:System.Windows.UIElement.Visibility%2A> property is set to <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="694b7-281">Se l'applicazione è una finestra <xref:System.Windows.Application.MainWindow%2A> e dell'applicazione <xref:System.Windows.Application.ShutdownMode%2A> è <xref:System.Windows.ShutdownMode.OnMainWindowClose>, l'applicazione non viene arrestato.</span><span class="sxs-lookup"><span data-stu-id="694b7-281">If a window is the application's <xref:System.Windows.Application.MainWindow%2A> and the application's <xref:System.Windows.Application.ShutdownMode%2A> is <xref:System.Windows.ShutdownMode.OnMainWindowClose>, the application does not shut down.</span></span> <span data-ttu-id="694b7-282">Analogamente, l'applicazione viene arrestata se una finestra è l'unica finestra e modalità di arresto dell'applicazione è <xref:System.Windows.ShutdownMode.OnLastWindowClose>.</span><span class="sxs-lookup"><span data-stu-id="694b7-282">Likewise, the application does not shut down if a window is the only window and the application's shutdown mode is <xref:System.Windows.ShutdownMode.OnLastWindowClose>.</span></span>  
  
 <span data-ttu-id="694b7-283">Se si desidera mostrare e nascondere una finestra più volte nel corso della durata di un'applicazione e non si vuole creare nuovamente la finestra ogni volta che è la visualizzazione, è possibile gestire il <xref:System.Windows.Window.Closing> evento, annullare l'operazione e chiamare il <xref:System.Windows.Window.Hide%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="694b7-283">If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to re-instantiate the window each time you show it, you can handle the <xref:System.Windows.Window.Closing> event, cancel it, and call the <xref:System.Windows.Window.Hide%2A> method.</span></span> <span data-ttu-id="694b7-284">Quindi, è possibile chiamare <xref:System.Windows.Window.Show%2A> nella stessa istanza per riaprirla.</span><span class="sxs-lookup"><span data-stu-id="694b7-284">Then, you can call <xref:System.Windows.Window.Show%2A> on the same instance to re-open it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="694b7-285">
            <see cref="M:System.Windows.Window.Hide" /> viene chiamato su una finestra in fase di chiusura (<see cref="E:System.Windows.Window.Closing" />) o che è stata chiusa (<see cref="E:System.Windows.Window.Closed" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-285">
              <see cref="M:System.Windows.Window.Hide" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Window.Show" />
        <altmember cref="M:System.Windows.Window.ShowDialog" />
        <altmember cref="M:System.Windows.Window.Close" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ImageSource Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageSource Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As ImageSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageSource ^ Icon { System::Windows::Media::ImageSource ^ get(); void set(System::Windows::Media::ImageSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Windows.Media.ImageSource with get, set" Usage="System.Windows.Window.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-286">Recupera o imposta l'icona di una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-286">Gets or sets a window's icon.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-287">Oggetto <see cref="T:System.Windows.Media.ImageSource" /> che rappresenta l'icona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-287">An <see cref="T:System.Windows.Media.ImageSource" /> object that represents the icon.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-288">Le applicazioni autonome di Windows Presentation Foundation (WPF) hanno due tipi di icone:</span><span class="sxs-lookup"><span data-stu-id="694b7-288">Windows Presentation Foundation (WPF) standalone applications have two types of icons:</span></span>  
  
-   <span data-ttu-id="694b7-289">Icona di un assembly, viene specificata utilizzando il `<ApplicationIcon>` file di compilazione proprietà nel progetto dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="694b7-289">One assembly icon, which is specified by using the `<ApplicationIcon>` property in the application's project build file.</span></span> <span data-ttu-id="694b7-290">Questa icona viene utilizzata come icona del desktop per un assembly.</span><span class="sxs-lookup"><span data-stu-id="694b7-290">This icon is used as the desktop icon for an assembly.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="694b7-291">Durante il debug in Visual Studio, non verrà visualizzata l'icona a causa di un processo di hosting.</span><span class="sxs-lookup"><span data-stu-id="694b7-291">When debugging in Visual Studio, your icon may not appear due to the hosting process.</span></span> <span data-ttu-id="694b7-292">Se si esegue il file eseguibile, verrà visualizzata l'icona.</span><span class="sxs-lookup"><span data-stu-id="694b7-292">If you run the executable, the icon will appear.</span></span> <span data-ttu-id="694b7-293">Per altre informazioni, vedere [Processo di hosting (vshost.exe)](http://msdn.microsoft.com/library/c6b9e2be-f18d-4d75-ac52-56d55784734b).</span><span class="sxs-lookup"><span data-stu-id="694b7-293">For more information, see [Hosting Process (vshost.exe)](http://msdn.microsoft.com/library/c6b9e2be-f18d-4d75-ac52-56d55784734b).</span></span>  
  
-   <span data-ttu-id="694b7-294">Un'icona per ogni finestra in cui viene specificato impostando <xref:System.Windows.Window.Icon%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-294">One icon per window that is specified by setting <xref:System.Windows.Window.Icon%2A>.</span></span> <span data-ttu-id="694b7-295">Per ogni finestra, questa icona viene utilizzata nella barra del titolo, nel pulsante della barra e nella relativa voce dell'elenco di selezione applicazione ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="694b7-295">For each window, this icon is used in its title bar, its task bar button, and in its ALT-TAB application selection list entry.</span></span>  
  
 <span data-ttu-id="694b7-296">Una finestra WPF viene sempre visualizzata un'icona.</span><span class="sxs-lookup"><span data-stu-id="694b7-296">A WPF window always displays an icon.</span></span> <span data-ttu-id="694b7-297">Quando non ne viene specificato impostando <xref:System.Windows.Window.Icon%2A>, WPF viene scelta un'icona da visualizzare in base alle regole seguenti:</span><span class="sxs-lookup"><span data-stu-id="694b7-297">When one is not provided by setting <xref:System.Windows.Window.Icon%2A>, WPF chooses an icon to display based on the following rules:</span></span>  
  
1.  <span data-ttu-id="694b7-298">Usare l'icona di assembly, se specificato.</span><span class="sxs-lookup"><span data-stu-id="694b7-298">Use the assembly icon, if specified.</span></span>  
  
2.  <span data-ttu-id="694b7-299">Se l'icona assembly non viene specificato, usare l'icona di Microsoft Windows predefinita.</span><span class="sxs-lookup"><span data-stu-id="694b7-299">If the assembly icon is not specified, use the default Microsoft Windows icon.</span></span>  
  
 <span data-ttu-id="694b7-300">Se si usa <xref:System.Windows.Window.Icon%2A> per specificare un'icona di finestra personalizzati, è possibile ripristinare l'icona applicazione predefinita impostando <xref:System.Windows.Window.Icon%2A> a `null`.</span><span class="sxs-lookup"><span data-stu-id="694b7-300">If you use <xref:System.Windows.Window.Icon%2A> to specify a custom window icon, you can restore the default application icon by setting <xref:System.Windows.Window.Icon%2A> to `null`.</span></span>  
  
 <span data-ttu-id="694b7-301">Una singola icona è utilizzabile in vari modi in Windows, tra cui viene visualizzato nella barra del titolo di una finestra, sulla barra delle applicazioni per una finestra, l'elenco di selezione file ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="694b7-301">A single icon can be used in a variety of ways in Windows, including being shown in the title bar of a window, the task bar for a window, the ALT+TAB file selection list.</span></span> <span data-ttu-id="694b7-302">Ognuna di queste Mostra l'icona con dimensioni diverse. viene visualizzata un'icona di 16x16 pixel nella barra del titolo di una finestra e sulla barra delle applicazioni, anche se viene visualizzata un'icona di 32 x 32 pixel nell'elenco di selezione file ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="694b7-302">Each of these shows the icon using a different size; a 16x16 pixel icon is displayed in the title bar of a window and in the task bar, while a 32x32 pixel icon is displayed in the ALT+TAB file selection list.</span></span> <span data-ttu-id="694b7-303">Alcune applicazioni, ad esempio [!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)], specificare un **visualizzazione** menu che consente di scegliere le dimensioni dell'icona da visualizzare.</span><span class="sxs-lookup"><span data-stu-id="694b7-303">Some applications, like [!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)], provide a **View** menu that allows you to choose the size of the icon you'd like to view.</span></span>  
  
 <span data-ttu-id="694b7-304">Per soddisfare le diverse dimensioni di visualizzazione, un file di icona è costituito da uno o più delle icone effettive in cui ognuno di essi rappresenta una versione dell'icona che è destinato a una profondità di colore e dimensione specifica.</span><span class="sxs-lookup"><span data-stu-id="694b7-304">To cater to the various display sizes, an icon file is composed of one or more actual icons where each one represents a version of the icon that targets a specific size and color depth.</span></span> <span data-ttu-id="694b7-305">Ad esempio, un'icona visualizzata può avere solo una singola icona di 16x16 pixel con 16 colori, mentre un altro può contenere 16 x 16 pixel e icone di 32 x 32 pixel con 16 colori e 256 colori.</span><span class="sxs-lookup"><span data-stu-id="694b7-305">For example, one icon may only have a single 16x16 pixel icon with 16 colors, while another may contain 16x16 pixel and 32x32 pixel icons with both 16 colors and 256 colors.</span></span>  
  
 <span data-ttu-id="694b7-306">Se le icone per tutte le dimensioni possibili e intensità di colore esistono all'interno di un file di icona, <xref:System.Windows.Window> userà sull'icona appropriata.</span><span class="sxs-lookup"><span data-stu-id="694b7-306">If icons for all possible sizes and color depths exist within an icon file, <xref:System.Windows.Window> will use the appropriate icon.</span></span> <span data-ttu-id="694b7-307">Se un file icona contiene solo un subset di tutte le icone possibili, <xref:System.Windows.Window> utilizza l'icona più appropriato in ordine decrescente di intensità di colore e dimensioni.</span><span class="sxs-lookup"><span data-stu-id="694b7-307">If an icon file contains only a subset of all the possible icons, <xref:System.Windows.Window> uses the next most appropriate icon in order of decreasing sizes and color depth.</span></span>  
  
 <span data-ttu-id="694b7-308">Il risultato è un'icona verrà sempre utilizzata da <xref:System.Windows.Window>, anche se l'icona utilizzata non è possibile destinare la profondità di colore e dimensione necessaria.</span><span class="sxs-lookup"><span data-stu-id="694b7-308">The result is that an icon will always be used by <xref:System.Windows.Window>, although the icon used may not target the required size and color depth.</span></span> <span data-ttu-id="694b7-309">Ad esempio, un'icona di 16x16 pixel con 16 colori di può essere usata per la visualizzazione come un'icona di 32 x 32 pixel con 256 colori.</span><span class="sxs-lookup"><span data-stu-id="694b7-309">For example, a 16x16 pixel icon with 16 colors may be used for display as a 32x32 pixel icon with 256 colors.</span></span> <span data-ttu-id="694b7-310">Questo può causare effetti indesiderati visual, ad esempio dei mezzitoni, ma può essere evitato mediante la creazione di icone per tutte le dimensioni e intensità di colore.</span><span class="sxs-lookup"><span data-stu-id="694b7-310">This can cause undesirable visual effects, such as pixilation, but may be avoided by creating icons for all targeted sizes and color depths.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-311">Non è possibile impostare o ottenere questa proprietà quando una finestra è ospitata in un browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-311">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowIcon"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="694b7-312">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="694b7-312">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="694b7-313">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="694b7-313">Identifier field</span></span>|<xref:System.Windows.Window.IconProperty>|  
|<span data-ttu-id="694b7-314">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="694b7-314">Metadata properties set to `true`</span></span>|<span data-ttu-id="694b7-315">nessuno</span><span class="sxs-lookup"><span data-stu-id="694b7-315">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="694b7-316">Nell'esempio seguente viene illustrato come impostare un'icona della finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-316">The following example shows how to set a window icon.</span></span>  
  
 [!code-xaml[WindowIconSnippets#WindowIconSetXAML](~/samples/snippets/xaml/VS_Snippets_Wpf/WindowIconSnippets/XAML/MainWindow.xaml#windowiconsetxaml)]  
  
 [!code-csharp[WindowIconSnippets#SetWindowIconInCode](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowIconSnippets/CSharp/MainWindow.xaml.cs#setwindowiconincode)]
 [!code-vb[WindowIconSnippets#SetWindowIconInCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowIconSnippets/visualbasic/mainwindow.xaml.vb#setwindowiconincode)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="694b7-317">l'autorizzazione impostare l'icona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-317">for permission to set the icon.</span>
          </span>
          <span data-ttu-id="694b7-318">Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-318">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IconProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IconProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IconProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.IconProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IconProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IconProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IconProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.IconProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-319">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Window.Icon" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-319">Identifies the <see cref="P:System.Windows.Window.Icon" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsActive : bool" Usage="System.Windows.Window.IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-320">Ottiene un valore che indica se la finestra è attiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-320">Gets a value that indicates whether the window is active.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-321">
            <see langword="true" /> se la finestra è attiva; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-321">
              <see langword="true" /> if the window is active; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="694b7-322">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-322">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-323">Una finestra attiva è visualizzata in primo piano corrente dell'utente e lo stato attivo, contraddistinta dall'aspetto della barra del titolo attiva.</span><span class="sxs-lookup"><span data-stu-id="694b7-323">An active window is the user's current foreground window and has the focus, which is signified by the active appearance of the title bar.</span></span> <span data-ttu-id="694b7-324">Una finestra attiva sarà anche il superiore di tutte le finestre di primo livello non impostato in modo esplicito il <xref:System.Windows.Window.Topmost%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="694b7-324">An active window will also be the top-most of all top-level windows that don't explicitly set the <xref:System.Windows.Window.Topmost%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_WindowIsActive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="694b7-325">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="694b7-325">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="694b7-326">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="694b7-326">Identifier field</span></span>|<xref:System.Windows.Window.IsActiveProperty>|  
|<span data-ttu-id="694b7-327">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="694b7-327">Metadata properties set to `true`</span></span>|<span data-ttu-id="694b7-328">nessuno</span><span class="sxs-lookup"><span data-stu-id="694b7-328">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="IsActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.IsActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsActiveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsActiveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.IsActiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-329">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Window.IsActive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-329">Identifies the <see cref="P:System.Windows.Window.IsActive" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Left : double with get, set" Usage="System.Windows.Window.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-330">Ottiene o imposta la posizione del bordo sinistro della finestra, in relazione al desktop.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-330">Gets or sets the position of the window's left edge, in relation to the desktop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-331">Posizione del bordo sinistro della finestra, in unità logiche (1/96 di pollice).</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-331">The position of the window's left edge, in logical units (1/96th of an inch).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-332">Quando la <xref:System.Windows.Window> viene ingrandita o ridotta, questo valore rappresenta il bordo sinistro dell'operazione di ripristino punto per il <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="694b7-332">When the <xref:System.Windows.Window> is maximized or minimized, this value represents the left edge of the restore point for the <xref:System.Windows.Window>.</span></span>  
  
 <span data-ttu-id="694b7-333">Questa proprietà non può essere impostata tramite uno stile.</span><span class="sxs-lookup"><span data-stu-id="694b7-333">This property cannot be set through a style.</span></span>  
  
 <span data-ttu-id="694b7-334">Se non si specifica un valore, <xref:System.Windows.Window.Left%2A> è impostata sul valore predefinito di sistema.</span><span class="sxs-lookup"><span data-stu-id="694b7-334">If you do not specify a value, <xref:System.Windows.Window.Left%2A> is set to the system default value.</span></span> <span data-ttu-id="694b7-335">È anche possibile specificare il valore predefinito di sistema impostando <xref:System.Windows.Window.Left%2A> a <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="694b7-335">You can also specify the system default value by setting <xref:System.Windows.Window.Left%2A> to <xref:System.Double.NaN>.</span></span> <span data-ttu-id="694b7-336">Né <xref:System.Double.NegativeInfinity> né <xref:System.Double.PositiveInfinity> è un valore valido per <xref:System.Windows.Window.Left%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-336">Neither <xref:System.Double.NegativeInfinity> nor <xref:System.Double.PositiveInfinity> is a valid value for <xref:System.Windows.Window.Left%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-337">Non è possibile impostare o ottenere questa proprietà quando una finestra è ospitata in un browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-337">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowLeft"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="694b7-338">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="694b7-338">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="694b7-339">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="694b7-339">Identifier field</span></span>|<xref:System.Windows.Window.LeftProperty>|  
|<span data-ttu-id="694b7-340">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="694b7-340">Metadata properties set to `true`</span></span>|<span data-ttu-id="694b7-341">nessuno</span><span class="sxs-lookup"><span data-stu-id="694b7-341">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Top" />
      </Docs>
    </Member>
    <Member MemberName="LeftProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LeftProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LeftProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.LeftProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LeftProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LeftProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LeftProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.LeftProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-342">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Window.Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-342">Identifies the <see cref="P:System.Windows.Window.Left" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.LocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LocationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocationChanged : EventHandler " Usage="member this.LocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-343">Si verifica in seguito alla modifica della posizione della finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-343">Occurs when the window's location changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-344">Posizione della finestra viene modificato quando:</span><span class="sxs-lookup"><span data-stu-id="694b7-344">A window's location changes when:</span></span>  
  
-   <span data-ttu-id="694b7-345">Un utente si sposta una finestra trascinandolo con barra del titolo della finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-345">A user moves a window by dragging it with the window's title bar.</span></span>  
  
-   <span data-ttu-id="694b7-346">Una finestra viene spostata dopo <xref:System.Windows.Window.DragMove%2A> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="694b7-346">A window is moved after <xref:System.Windows.Window.DragMove%2A> is called.</span></span>  
  
-   <span data-ttu-id="694b7-347">Sia la <xref:System.Windows.Window.Left%2A> o <xref:System.Windows.Window.Top%2A> viene impostata a livello di codice.</span><span class="sxs-lookup"><span data-stu-id="694b7-347">Either the <xref:System.Windows.Window.Left%2A> or <xref:System.Windows.Window.Top%2A> property is set programmatically.</span></span>  
  
-   <span data-ttu-id="694b7-348">Il **spostare** del menu di sistema di una finestra viene scelto.</span><span class="sxs-lookup"><span data-stu-id="694b7-348">The **Move** menu item of a window's System menu is chosen.</span></span>  
  
-   <span data-ttu-id="694b7-349">Il <xref:System.Windows.Window.WindowState%2A> proprietà viene modificata.</span><span class="sxs-lookup"><span data-stu-id="694b7-349">The <xref:System.Windows.Window.WindowState%2A> property is changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
        <altmember cref="P:System.Windows.Window.Top" />
        <altmember cref="P:System.Windows.Window.RestoreBounds" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Window.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-350">Ottiene un enumeratore per gli elementi figlio logici di una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-350">Gets an enumerator for a window's logical child elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-351">Oggetto <see cref="T:System.Collections.IEnumerator" /> per gli elementi figlio logici di una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-351">An <see cref="T:System.Collections.IEnumerator" /> a window's logical child elements.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.FrameworkElement.LogicalChildren" />
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="window.MeasureOverride availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">
          <span data-ttu-id="694b7-352">Oggetto <see cref="T:System.Windows.Size" /> che riflette le dimensioni disponibili che la finestra può assegnare all'elemento figlio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-352">A <see cref="T:System.Windows.Size" /> that reflects the available size that this window can give to the child.</span>
          </span>
          <span data-ttu-id="694b7-353">È possibile specificare Infinity per indicare che la finestra verrà ridimensionata in base al contenuto disponibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-353">Infinity can be given as a value to indicate that the window will size to whatever content is available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="694b7-354">Eseguire l'override di questo metodo per misurare le dimensioni di una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-354">Override this method to measure the size of a window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="694b7-355">Oggetto <see cref="T:System.Windows.Size" /> che riflette le dimensioni che questa finestra determina come necessarie durante il layout, in base ai calcoli delle dimensioni degli elementi figlio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-355">A <see cref="T:System.Windows.Size" /> that reflects the size that this window determines it needs during layout, based on its calculations of children's sizes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-356"><xref:System.Windows.Window.MeasureOverride%2A> non viene chiamato quando la <xref:System.Windows.UIElement.Visibility%2A> un valore della proprietà è <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="694b7-356"><xref:System.Windows.Window.MeasureOverride%2A> is not called when the <xref:System.Windows.UIElement.Visibility%2A> property has a value of <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="694b7-357">Se il valore della <xref:System.Windows.UIElement.Visibility%2A> la proprietà <xref:System.Windows.Visibility.Hidden> oppure <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.MeasureOverride%2A> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="694b7-357">If the value of the <xref:System.Windows.UIElement.Visibility%2A> property is either <xref:System.Windows.Visibility.Hidden> or <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.MeasureOverride%2A> is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-358">Quando sia <xref:System.Windows.Window.Show%2A> oppure <xref:System.Windows.Window.ShowDialog%2A> vengono chiamati, il <xref:System.Windows.UIElement.Visibility%2A> proprietà di un <xref:System.Windows.Window> è impostato su <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="694b7-358">When either <xref:System.Windows.Window.Show%2A> or <xref:System.Windows.Window.ShowDialog%2A> are called, the <xref:System.Windows.UIElement.Visibility%2A> property of a <xref:System.Windows.Window> is set to <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActivated : EventArgs -&gt; unit&#xA;override this.OnActivated : EventArgs -&gt; unit" Usage="window.OnActivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="694b7-359">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-359">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="694b7-360">Genera l'evento <see cref="E:System.Windows.Window.Activated" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-360">Raises the <see cref="E:System.Windows.Window.Activated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-361"><xref:System.Windows.Window.OnActivated%2A> genera l'evento <xref:System.Windows.Window.Activated>.</span><span class="sxs-lookup"><span data-stu-id="694b7-361"><xref:System.Windows.Window.OnActivated%2A> raises the <xref:System.Windows.Window.Activated> event.</span></span>  
  
 <span data-ttu-id="694b7-362">Un tipo che deriva da <xref:System.Windows.Window> può eseguire l'override <xref:System.Windows.Window.OnActivated%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-362">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnActivated%2A>.</span></span> <span data-ttu-id="694b7-363">Il metodo sottoposto a override deve chiamare <xref:System.Windows.Window.OnActivated%2A> sulla classe di base se <xref:System.Windows.Window.Activated> deve essere generato.</span><span class="sxs-lookup"><span data-stu-id="694b7-363">The overridden method must call <xref:System.Windows.Window.OnActivated%2A> on the base class if <xref:System.Windows.Window.Activated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnDeactivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : EventArgs -&gt; unit&#xA;override this.OnClosed : EventArgs -&gt; unit" Usage="window.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="694b7-364">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-364">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="694b7-365">Genera l'evento <see cref="E:System.Windows.Window.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-365">Raises the <see cref="E:System.Windows.Window.Closed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-366"><xref:System.Windows.Window.OnClosed%2A> genera l'evento <xref:System.Windows.Window.Closed>.</span><span class="sxs-lookup"><span data-stu-id="694b7-366"><xref:System.Windows.Window.OnClosed%2A> raises the <xref:System.Windows.Window.Closed> event.</span></span>  
  
 <span data-ttu-id="694b7-367">Un tipo che deriva da <xref:System.Windows.Window> può eseguire l'override <xref:System.Windows.Window.OnClosed%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-367">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnClosed%2A>.</span></span> <span data-ttu-id="694b7-368">Il metodo sottoposto a override deve chiamare <xref:System.Windows.Window.OnClosed%2A> sulla classe di base se <xref:System.Windows.Window.Closed> deve essere generato.</span><span class="sxs-lookup"><span data-stu-id="694b7-368">The overridden method must call <xref:System.Windows.Window.OnClosed%2A> on the base class if <xref:System.Windows.Window.Closed> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnClosing (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosing(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosing (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosing(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="window.OnClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="694b7-369">Oggetto <see cref="T:System.ComponentModel.CancelEventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-369">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="694b7-370">Genera l'evento <see cref="E:System.Windows.Window.Closing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-370">Raises the <see cref="E:System.Windows.Window.Closing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-371"><xref:System.Windows.Window.OnClosing%2A> genera l'evento <xref:System.Windows.Window.Closing>.</span><span class="sxs-lookup"><span data-stu-id="694b7-371"><xref:System.Windows.Window.OnClosing%2A> raises the <xref:System.Windows.Window.Closing> event.</span></span>  
  
 <span data-ttu-id="694b7-372">Un tipo che deriva da <xref:System.Windows.Window> può eseguire l'override <xref:System.Windows.Window.OnClosing%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-372">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnClosing%2A>.</span></span> <span data-ttu-id="694b7-373">Il metodo sottoposto a override deve chiamare <xref:System.Windows.Window.OnClosing%2A> sulla classe di base se <xref:System.Windows.Window.Closing> deve essere generato.</span><span class="sxs-lookup"><span data-stu-id="694b7-373">The overridden method must call <xref:System.Windows.Window.OnClosing%2A> on the base class if <xref:System.Windows.Window.Closing> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnClosed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnContentChanged">
      <MemberSignature Language="C#" Value="protected override void OnContentChanged (object oldContent, object newContent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContentChanged(object oldContent, object newContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnContentChanged(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContentChanged (oldContent As Object, newContent As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContentChanged(System::Object ^ oldContent, System::Object ^ newContent);" />
      <MemberSignature Language="F#" Value="override this.OnContentChanged : obj * obj -&gt; unit" Usage="window.OnContentChanged (oldContent, newContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContent" Type="System.Object" />
        <Parameter Name="newContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldContent">
          <span data-ttu-id="694b7-374">Riferimento alla radice della struttura ad albero di contenuto obsoleta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-374">A reference to the root of the old content tree.</span>
          </span>
        </param>
        <param name="newContent">
          <span data-ttu-id="694b7-375">Riferimento alla radice della nuova struttura ad albero di contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-375">A reference to the root of the new content tree.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="694b7-376">Viene chiamato quando la proprietà <see cref="P:System.Windows.Controls.ContentControl.Content" /> cambia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-376">Called when the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentRendered">
      <MemberSignature Language="C#" Value="protected virtual void OnContentRendered (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentRendered(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnContentRendered(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentRendered (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentRendered(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContentRendered : EventArgs -&gt; unit&#xA;override this.OnContentRendered : EventArgs -&gt; unit" Usage="window.OnContentRendered e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="694b7-377">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-377">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="694b7-378">Genera l'evento <see cref="E:System.Windows.Window.ContentRendered" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-378">Raises the <see cref="E:System.Windows.Window.ContentRendered" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-379"><xref:System.Windows.Window.OnContentRendered%2A> genera l'evento <xref:System.Windows.Window.ContentRendered>.</span><span class="sxs-lookup"><span data-stu-id="694b7-379"><xref:System.Windows.Window.OnContentRendered%2A> raises the <xref:System.Windows.Window.ContentRendered> event.</span></span>  
  
 <span data-ttu-id="694b7-380">Un tipo che deriva da <xref:System.Windows.Window> può eseguire l'override <xref:System.Windows.Window.OnContentRendered%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-380">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnContentRendered%2A>.</span></span> <span data-ttu-id="694b7-381">Il metodo sottoposto a override deve chiamare <xref:System.Windows.Window.OnContentRendered%2A> sulla classe di base se <xref:System.Windows.Window.ContentRendered> deve essere generato.</span><span class="sxs-lookup"><span data-stu-id="694b7-381">The overridden method must call <xref:System.Windows.Window.OnContentRendered%2A> on the base class if <xref:System.Windows.Window.ContentRendered> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="window.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="694b7-382">Crea e restituisce un oggetto <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> per questo <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-382">Creates and returns a <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="694b7-383">Oggetto <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> per questa classe <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-383">A <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-384">Questo metodo esegue l'override di <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-384">This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeactivated">
      <MemberSignature Language="C#" Value="protected virtual void OnDeactivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeactivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnDeactivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeactivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeactivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeactivated : EventArgs -&gt; unit&#xA;override this.OnDeactivated : EventArgs -&gt; unit" Usage="window.OnDeactivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="694b7-385">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-385">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="694b7-386">Genera l'evento <see cref="E:System.Windows.Window.Deactivated" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-386">Raises the <see cref="E:System.Windows.Window.Deactivated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-387"><xref:System.Windows.Window.OnDeactivated%2A> genera l'evento <xref:System.Windows.Window.Deactivated>.</span><span class="sxs-lookup"><span data-stu-id="694b7-387"><xref:System.Windows.Window.OnDeactivated%2A> raises the <xref:System.Windows.Window.Deactivated> event.</span></span>  
  
 <span data-ttu-id="694b7-388">Un tipo che deriva da <xref:System.Windows.Window> può eseguire l'override <xref:System.Windows.Window.OnDeactivated%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-388">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnDeactivated%2A>.</span></span> <span data-ttu-id="694b7-389">Il metodo sottoposto a override deve chiamare <xref:System.Windows.Window.OnDeactivated%2A> sulla classe di base se <xref:System.Windows.Window.Deactivated> deve essere generato.</span><span class="sxs-lookup"><span data-stu-id="694b7-389">The overridden method must call <xref:System.Windows.Window.OnDeactivated%2A> on the base class if <xref:System.Windows.Window.Deactivated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnActivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected override void OnDpiChanged (System.Windows.DpiScale oldDpi, System.Windows.DpiScale newDpi);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDpiChanged(valuetype System.Windows.DpiScale oldDpi, valuetype System.Windows.DpiScale newDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDpiChanged (oldDpi As DpiScale, newDpi As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDpiChanged(System::Windows::DpiScale oldDpi, System::Windows::DpiScale newDpi);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit&#xA;override this.OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit" Usage="window.OnDpiChanged (oldDpi, newDpi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDpi" Type="System.Windows.DpiScale" />
        <Parameter Name="newDpi" Type="System.Windows.DpiScale" />
      </Parameters>
      <Docs>
        <param name="oldDpi">
          <span data-ttu-id="694b7-390">Impostazione precedente della scala DPI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-390">The previous DPI scale setting.</span>
          </span>
        </param>
        <param name="newDpi">
          <span data-ttu-id="694b7-391">Nuova impostazione della scala DPI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-391">The new DPI scale setting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="694b7-392">Chiamato in caso di variazione del valore DPI usato per il rendering della finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-392">Called when the DPI at which this window is rendered changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLocationChanged : EventArgs -&gt; unit&#xA;override this.OnLocationChanged : EventArgs -&gt; unit" Usage="window.OnLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="694b7-393">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-393">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="694b7-394">Genera l'evento <see cref="E:System.Windows.Window.LocationChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-394">Raises the <see cref="E:System.Windows.Window.LocationChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-395"><xref:System.Windows.Window.OnLocationChanged%2A> genera l'evento <xref:System.Windows.Window.LocationChanged>.</span><span class="sxs-lookup"><span data-stu-id="694b7-395"><xref:System.Windows.Window.OnLocationChanged%2A> raises the <xref:System.Windows.Window.LocationChanged> event.</span></span>  
  
 <span data-ttu-id="694b7-396">Un tipo che deriva da <xref:System.Windows.Window> può eseguire l'override <xref:System.Windows.Window.OnLocationChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-396">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnLocationChanged%2A>.</span></span> <span data-ttu-id="694b7-397">Il metodo sottoposto a override deve chiamare <xref:System.Windows.Window.OnLocationChanged%2A> sulla classe di base se <xref:System.Windows.Window.LocationChanged> deve essere generato.</span><span class="sxs-lookup"><span data-stu-id="694b7-397">The overridden method must call <xref:System.Windows.Window.OnLocationChanged%2A> on the base class if <xref:System.Windows.Window.LocationChanged> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
        <altmember cref="P:System.Windows.Window.Top" />
      </Docs>
    </Member>
    <Member MemberName="OnManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="protected override void OnManipulationBoundaryFeedback (System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnManipulationBoundaryFeedback(class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnManipulationBoundaryFeedback (e As ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnManipulationBoundaryFeedback(System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnManipulationBoundaryFeedback : System.Windows.Input.ManipulationBoundaryFeedbackEventArgs -&gt; unit" Usage="window.OnManipulationBoundaryFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="694b7-398">Dati per l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-398">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="694b7-399">Viene chiamato quando si verifica l'evento <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-399">Called when the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-400">Questa implementazione non modifica lo stato gestito (il <xref:System.Windows.RoutedEventArgs.Handled%2A> proprietà) del <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> i dati dell'evento.</span><span class="sxs-lookup"><span data-stu-id="694b7-400">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="694b7-401">Se esegue l'override <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />, chiamare sempre l'implementazione di base <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /> implementazione.</span>
            <span class="sxs-lookup">
              <span data-stu-id="694b7-401">If you override <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="694b7-402">Errore durante la chiamata l'implementazione di base impedisce che le classi di base gestisce l'evento, il che potrebbe modificare il comportamento di runtime della classe finale.</span>
            <span class="sxs-lookup">
              <span data-stu-id="694b7-402">Failure to call the base implementation prevents base classes from handling the event, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="694b7-403">È possibile chiamare l'implementazione di base prima o dopo la gestione speciale, a seconda dei requisiti.</span>
            <span class="sxs-lookup">
              <span data-stu-id="694b7-403">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSourceInitialized">
      <MemberSignature Language="C#" Value="protected virtual void OnSourceInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSourceInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSourceInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSourceInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSourceInitialized : EventArgs -&gt; unit&#xA;override this.OnSourceInitialized : EventArgs -&gt; unit" Usage="window.OnSourceInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="694b7-404">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-404">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="694b7-405">Genera l'evento <see cref="E:System.Windows.Window.SourceInitialized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-405">Raises the <see cref="E:System.Windows.Window.SourceInitialized" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-406"><xref:System.Windows.Window.OnSourceInitialized%2A> genera l'evento <xref:System.Windows.Window.SourceInitialized>.</span><span class="sxs-lookup"><span data-stu-id="694b7-406"><xref:System.Windows.Window.OnSourceInitialized%2A> raises the <xref:System.Windows.Window.SourceInitialized> event.</span></span>  
  
 <span data-ttu-id="694b7-407">Un tipo che deriva da <xref:System.Windows.Window> può eseguire l'override <xref:System.Windows.Window.OnSourceInitialized%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-407">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnSourceInitialized%2A>.</span></span> <span data-ttu-id="694b7-408">Il metodo sottoposto a override deve chiamare <xref:System.Windows.Window.OnSourceInitialized%2A> sulla classe di base se <xref:System.Windows.Window.SourceInitialized> deve essere generato.</span><span class="sxs-lookup"><span data-stu-id="694b7-408">The overridden method must call <xref:System.Windows.Window.OnSourceInitialized%2A> on the base class if <xref:System.Windows.Window.SourceInitialized> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStateChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStateChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnStateChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStateChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStateChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStateChanged : EventArgs -&gt; unit&#xA;override this.OnStateChanged : EventArgs -&gt; unit" Usage="window.OnStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="694b7-409">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-409">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="694b7-410">Genera l'evento <see cref="E:System.Windows.Window.StateChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-410">Raises the <see cref="E:System.Windows.Window.StateChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-411"><xref:System.Windows.Window.OnStateChanged%2A> genera l'evento <xref:System.Windows.Window.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="694b7-411"><xref:System.Windows.Window.OnStateChanged%2A> raises the <xref:System.Windows.Window.StateChanged> event.</span></span>  
  
 <span data-ttu-id="694b7-412">Un tipo che deriva da <xref:System.Windows.Window> può eseguire l'override <xref:System.Windows.Window.OnStateChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-412">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnStateChanged%2A>.</span></span> <span data-ttu-id="694b7-413">Il metodo sottoposto a override deve chiamare <xref:System.Windows.Window.OnStateChanged%2A> sulla classe di base se <xref:System.Windows.Window.StateChanged> deve essere generato.</span><span class="sxs-lookup"><span data-stu-id="694b7-413">The overridden method must call <xref:System.Windows.Window.OnStateChanged%2A> on the base class if <xref:System.Windows.Window.StateChanged> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualChildrenChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualChildrenChanged (System.Windows.DependencyObject visualAdded, System.Windows.DependencyObject visualRemoved);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualChildrenChanged(class System.Windows.DependencyObject visualAdded, class System.Windows.DependencyObject visualRemoved) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualChildrenChanged (visualAdded As DependencyObject, visualRemoved As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualChildrenChanged(System::Windows::DependencyObject ^ visualAdded, System::Windows::DependencyObject ^ visualRemoved);" />
      <MemberSignature Language="F#" Value="override this.OnVisualChildrenChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="window.OnVisualChildrenChanged (visualAdded, visualRemoved)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visualAdded" Type="System.Windows.DependencyObject" />
        <Parameter Name="visualRemoved" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="visualAdded">To be added.</param>
        <param name="visualRemoved">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override sealed void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides NotOverridable Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="window.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">
          <span data-ttu-id="694b7-414">Elemento padre precedente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-414">The previous parent.</span>
          </span>
          <span data-ttu-id="694b7-415">È impostato su null se <see cref="T:System.Windows.DependencyObject" /> non aveva un elemento padre precedente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-415">Set to null if the <see cref="T:System.Windows.DependencyObject" /> did not have a previous parent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="694b7-416">Viene chiamato quando l'elemento padre della finestra viene modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-416">Called when the parent of the window is changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="OwnedWindows">
      <MemberSignature Language="C#" Value="public System.Windows.WindowCollection OwnedWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.WindowCollection OwnedWindows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.OwnedWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnedWindows As WindowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowCollection ^ OwnedWindows { System::Windows::WindowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnedWindows : System.Windows.WindowCollection" Usage="System.Windows.Window.OwnedWindows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-417">Ottiene un insieme di finestre di proprietà della finestra corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-417">Gets a collection of windows for which this window is the owner.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-418">Oggetto <see cref="T:System.Windows.WindowCollection" /> che contiene riferimenti alle finestre di proprietà della finestra corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-418">A <see cref="T:System.Windows.WindowCollection" /> that contains references to the windows for which this window is the owner.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-419">Una finestra di proprietà è una cui <xref:System.Windows.Window.Owner%2A> viene impostata con un riferimento a un'altra finestra, che è noto come la finestra proprietaria.</span><span class="sxs-lookup"><span data-stu-id="694b7-419">An owned window is one whose <xref:System.Windows.Window.Owner%2A> property is set with a reference to another window, which is known as the owner window.</span></span> <span data-ttu-id="694b7-420">Per trovare tutte le finestre che una finestra proprietaria, è possibile enumerare <xref:System.Windows.WindowCollection> restituito dal <xref:System.Windows.Window.OwnedWindows%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="694b7-420">To find all the windows that an owner window owns, you can enumerate <xref:System.Windows.WindowCollection> that is returned by the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="694b7-421">Nell'esempio seguente viene illustrato come enumerare <xref:System.Windows.Window.OwnedWindows%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-421">The following example shows how to enumerate <xref:System.Windows.Window.OwnedWindows%2A>.</span></span>  
  
 [!code-csharp[WindowOwnerOwnedWindowsSnippets#GetWindowOwnedWindowsCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/CSharp/MainWindow.xaml.cs#getwindowownedwindowscode)]
 [!code-vb[WindowOwnerOwnedWindowsSnippets#GetWindowOwnedWindowsCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/visualbasic/mainwindow.xaml.vb#getwindowownedwindowscode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Window Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Window Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Window ^ Owner { System::Windows::Window ^ get(); void set(System::Windows::Window ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.Window with get, set" Usage="System.Windows.Window.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-422">Ottiene o imposta l'oggetto <see cref="T:System.Windows.Window" /> proprietario di questo oggetto <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-422">Gets or sets the <see cref="T:System.Windows.Window" /> that owns this <see cref="T:System.Windows.Window" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-423">Oggetto <see cref="T:System.Windows.Window" /> che rappresenta il proprietario di questo oggetto <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-423">A <see cref="T:System.Windows.Window" /> object that represents the owner of this <see cref="T:System.Windows.Window" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-424">Quando viene aperta una finestra figlio da una finestra padre chiamando <xref:System.Windows.Window.ShowDialog%2A>, viene stabilita una relazione implicita tra la finestra padre e figlio.</span><span class="sxs-lookup"><span data-stu-id="694b7-424">When a child window is opened by a parent window by calling <xref:System.Windows.Window.ShowDialog%2A>, an implicit relationship is established between both parent and child window.</span></span> <span data-ttu-id="694b7-425">Questa relazione consente di applicare determinati comportamenti, tra cui rispetto alla riduzione al minimo, ottimizzazione e il ripristino.</span><span class="sxs-lookup"><span data-stu-id="694b7-425">This relationship enforces certain behaviors, including with respect to minimizing, maximizing, and restoring.</span></span>  
  
 <span data-ttu-id="694b7-426">Quando una finestra figlio viene creata da una finestra padre chiamando <xref:System.Windows.Window.Show%2A>, tuttavia, la finestra figlio non ha una relazione con la finestra padre.</span><span class="sxs-lookup"><span data-stu-id="694b7-426">When a child window is created by a parent window by calling <xref:System.Windows.Window.Show%2A>, however, the child window does not have a relationship with the parent window.</span></span> <span data-ttu-id="694b7-427">Vale a dire che:</span><span class="sxs-lookup"><span data-stu-id="694b7-427">This means that:</span></span>  
  
-   <span data-ttu-id="694b7-428">La finestra figlio non è un riferimento alla finestra padre.</span><span class="sxs-lookup"><span data-stu-id="694b7-428">The child window does not have a reference to the parent window.</span></span>  
  
-   <span data-ttu-id="694b7-429">Il comportamento della finestra figlio non dipende il comportamento della finestra padre. entrambe le finestre possono coprire l'altra, o essere ridotta a icona, ingrandite e ripristinate indipendentemente da altra.</span><span class="sxs-lookup"><span data-stu-id="694b7-429">The behavior of the child window is not dependent on the behavior of the parent window; either window can cover the other, or be minimized, maximized, and restored independently of the other.</span></span>  
  
 <span data-ttu-id="694b7-430">Consente di creare una relazione tra una finestra figlio e una finestra padre, <xref:System.Windows.Window> supporta la nozione di proprietà.</span><span class="sxs-lookup"><span data-stu-id="694b7-430">To allow you to create a relationship between a child window and a parent window, <xref:System.Windows.Window> supports the notion of ownership.</span></span> <span data-ttu-id="694b7-431">La proprietà viene stabilita quando il <xref:System.Windows.Window.Owner%2A> proprietà di una finestra (finestra del proprietario) è impostata con un riferimento a un'altra finestra (finestra del proprietario).</span><span class="sxs-lookup"><span data-stu-id="694b7-431">Ownership is established when the <xref:System.Windows.Window.Owner%2A> property of a window (the owned window) is set with a reference to another window (the owner window).</span></span>  
  
 <span data-ttu-id="694b7-432">Una volta stabilita la relazione, si verificano i comportamenti seguenti:</span><span class="sxs-lookup"><span data-stu-id="694b7-432">Once this relationship is established, the following behaviors are exhibited:</span></span>  
  
-   <span data-ttu-id="694b7-433">Se è ridotta a icona una finestra del proprietario, sono minimizzate anche tutte le finestre di proprietà.</span><span class="sxs-lookup"><span data-stu-id="694b7-433">If an owner window is minimized, all its owned windows are minimized as well.</span></span>  
  
-   <span data-ttu-id="694b7-434">Se è ridotta a icona una finestra di proprietà, il relativo proprietario non è ridotta a icona.</span><span class="sxs-lookup"><span data-stu-id="694b7-434">If an owned window is minimized, its owner is not minimized.</span></span>  
  
-   <span data-ttu-id="694b7-435">Se una finestra è ingrandita, sia la finestra proprietaria e le finestre di proprietà vengono ripristinate.</span><span class="sxs-lookup"><span data-stu-id="694b7-435">If an owner window is maximized, both the owner window and its owned windows are restored.</span></span>  
  
-   <span data-ttu-id="694b7-436">Una finestra non può coprire mai una finestra di proprietà.</span><span class="sxs-lookup"><span data-stu-id="694b7-436">An owner window can never cover an owned window.</span></span>  
  
-   <span data-ttu-id="694b7-437">Proprietà che non sono state aperte usando <xref:System.Windows.Window.ShowDialog%2A> non sono modale.</span><span class="sxs-lookup"><span data-stu-id="694b7-437">Owned windows that were not opened using <xref:System.Windows.Window.ShowDialog%2A> are not modal.</span></span> <span data-ttu-id="694b7-438">L'utente può comunque interagire con la finestra proprietaria.</span><span class="sxs-lookup"><span data-stu-id="694b7-438">The user can still interact with the owner window.</span></span>  
  
-   <span data-ttu-id="694b7-439">Se si chiude una finestra del proprietario, le finestre di proprietà vengono chiusi.</span><span class="sxs-lookup"><span data-stu-id="694b7-439">If you close an owner window, its owned windows are also closed.</span></span>  
  
-   <span data-ttu-id="694b7-440">Se è stato aperto una finestra di proprietà dalla finestra proprietaria tramite <xref:System.Windows.Window.Show%2A>e il proprietario della finestra viene chiusa, la finestra di proprietà <xref:System.Windows.Window.Closing> non viene generato l'evento.</span><span class="sxs-lookup"><span data-stu-id="694b7-440">If an owned window was opened by its owner window using <xref:System.Windows.Window.Show%2A>, and the owner window is closed, the owned window's <xref:System.Windows.Window.Closing> event is not raised.</span></span>  
  
 <span data-ttu-id="694b7-441">Quando si apre una finestra figlio chiamando <xref:System.Windows.Window.ShowDialog%2A>, è necessario impostare anche il <xref:System.Windows.Window.Owner%2A> proprietà della finestra figlio.</span><span class="sxs-lookup"><span data-stu-id="694b7-441">When you open a child window by calling <xref:System.Windows.Window.ShowDialog%2A>, you should also set the <xref:System.Windows.Window.Owner%2A> property of the child window.</span></span> <span data-ttu-id="694b7-442">In caso contrario, gli utenti non essere in grado di ripristinare sia finestre figlio e padre premendo il pulsante della barra.</span><span class="sxs-lookup"><span data-stu-id="694b7-442">If you don't, then your users won't be able to restore both child window and parent window by pressing the task bar button.</span></span> <span data-ttu-id="694b7-443">In alternativa, premere il pulsante della barra verrà generato un elenco di windows, tra cui finestra padre e figlio, per poter selezionare; viene ripristinata solo la finestra selezionata.</span><span class="sxs-lookup"><span data-stu-id="694b7-443">Instead, pressing the task bar button will yield a list of windows, including both child and parent window, for them to select; only the selected window is restored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="694b7-444">È necessario impostare anche il <xref:System.Windows.Window.Owner%2A> proprietà in una finestra che che sia aperto chiamando <xref:System.Windows.Window.ShowDialog%2A> per assicurare il corretto funzionamento con.</span><span class="sxs-lookup"><span data-stu-id="694b7-444">You should also set the <xref:System.Windows.Window.Owner%2A> property on a window that that is opened by calling <xref:System.Windows.Window.ShowDialog%2A> to ensure correct behavior with .</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-445">Non è possibile impostare o ottenere questa proprietà quando una finestra è ospitata in un browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-445">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="694b7-446">Nell'esempio seguente viene illustrato come stabilire la relazione di proprietario/proprietà.</span><span class="sxs-lookup"><span data-stu-id="694b7-446">The following example shows how to establish the owner/owned relationship.</span></span>  
  
 [!code-csharp[WindowOwnerOwnedWindowsSnippets#SetWindowOwnerCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/CSharp/MainWindow.xaml.cs#setwindowownercode)]
 [!code-vb[WindowOwnerOwnedWindowsSnippets#SetWindowOwnerCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/visualbasic/mainwindow.xaml.vb#setwindowownercode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="694b7-447">Una finestra tenta di essere proprietaria di se stessa</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-447">A window tries to own itself</span>
          </span>
          <span data-ttu-id="694b7-448">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-448">-or-</span>
          </span>
          <span data-ttu-id="694b7-449">Due finestre tentano di essere proprietarie una dell'altra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-449">Two windows try to own each other.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="694b7-450">La proprietà <see cref="P:System.Windows.Window.Owner" /> è impostata su una finestra visibile visualizzata tramite <see cref="M:System.Windows.Window.ShowDialog" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-450">The <see cref="P:System.Windows.Window.Owner" /> property is set on a visible window shown using <see cref="M:System.Windows.Window.ShowDialog" /></span>
          </span>
          <span data-ttu-id="694b7-451">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-451">-or-</span>
          </span>
          <span data-ttu-id="694b7-452">La proprietà <see cref="P:System.Windows.Window.Owner" /> è impostata con una finestra che non è stata visualizzata in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-452">The <see cref="P:System.Windows.Window.Owner" /> property is set with a window that has not been previously shown.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="694b7-453">l'autorizzazione usare tutte le finestre e gli eventi input utente senza alcuna restrizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-453">for permission to use all windows and user input events without restriction.</span>
          </span>
          <span data-ttu-id="694b7-454">Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-454">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Window.OwnedWindows" />
      </Docs>
    </Member>
    <Member MemberName="ResizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.ResizeMode ResizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.ResizeMode ResizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ResizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ResizeMode As ResizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResizeMode ResizeMode { System::Windows::ResizeMode get(); void set(System::Windows::ResizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ResizeMode : System.Windows.ResizeMode with get, set" Usage="System.Windows.Window.ResizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-455">Ottiene o imposta la modalità di ridimensionamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-455">Gets or sets the resize mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-456">Valore di <see cref="T:System.Windows.ResizeMode" /> che specifica la modalità di ridimensionamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-456">A <see cref="T:System.Windows.ResizeMode" /> value specifying the resize mode.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-457">Sono disponibili quattro opzioni:</span><span class="sxs-lookup"><span data-stu-id="694b7-457">There are four options:</span></span>  
  
-   <span data-ttu-id="694b7-458">**NoResize**.</span><span class="sxs-lookup"><span data-stu-id="694b7-458">**NoResize**.</span></span> <span data-ttu-id="694b7-459">L'utente non è possibile ridimensionare la finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-459">The user cannot resize the window.</span></span> <span data-ttu-id="694b7-460">Non vengono visualizzate le caselle di ingrandimento e riduzione a icona.</span><span class="sxs-lookup"><span data-stu-id="694b7-460">The Maximize and Minimize boxes are not shown.</span></span>  
  
-   <span data-ttu-id="694b7-461">**CanMinimize**.</span><span class="sxs-lookup"><span data-stu-id="694b7-461">**CanMinimize**.</span></span> <span data-ttu-id="694b7-462">L'utente può solo ridurre a icona la finestra e ripristinarlo dalla barra delle applicazioni.</span><span class="sxs-lookup"><span data-stu-id="694b7-462">The user can only minimize the window and restore it from the taskbar.</span></span> <span data-ttu-id="694b7-463">Le finestre di riduzione a icona e Ingrandisci sono entrambi disponibili, ma solo la casella di riduzione a icona è abilitata.</span><span class="sxs-lookup"><span data-stu-id="694b7-463">The Minimize and Maximize boxes are both shown, but only the Minimize box is enabled.</span></span>  
  
-   <span data-ttu-id="694b7-464">**CanResize**.</span><span class="sxs-lookup"><span data-stu-id="694b7-464">**CanResize**.</span></span> <span data-ttu-id="694b7-465">L'utente ha la possibilità di ridimensionare la finestra, completa usando le caselle di ingrandimento e riduzione a icona e una struttura trascinabile attorno alla finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-465">The user has the full ability to resize the window, using the Minimize and Maximize boxes, and a draggable outline around the window.</span></span> <span data-ttu-id="694b7-466">Le caselle Riduci a icona e Ingrandisci vengono visualizzate e abilitate.</span><span class="sxs-lookup"><span data-stu-id="694b7-466">The Minimize and Maximize boxes are shown and enabled.</span></span> <span data-ttu-id="694b7-467">(Impostazione predefinita).</span><span class="sxs-lookup"><span data-stu-id="694b7-467">(Default).</span></span>  
  
-   <span data-ttu-id="694b7-468">**CanResizeWithGrip**.</span><span class="sxs-lookup"><span data-stu-id="694b7-468">**CanResizeWithGrip**.</span></span> <span data-ttu-id="694b7-469">Questa opzione ha la stessa funzionalità <xref:System.Windows.ResizeMode.CanResize>, ma aggiunge un "ridimensionamento" nell'angolo inferiore destro della finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-469">This option has the same functionality as <xref:System.Windows.ResizeMode.CanResize>, but adds a "resize grip" to the lower right corner of the window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-470">Non è possibile impostare o ottenere questa proprietà quando una finestra è ospitata in un browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-470">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowResizeMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="694b7-471">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="694b7-471">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="694b7-472">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="694b7-472">Identifier field</span></span>|<xref:System.Windows.Window.ResizeModeProperty>|  
|<span data-ttu-id="694b7-473">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="694b7-473">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.ResizeGrip" />
      </Docs>
    </Member>
    <Member MemberName="ResizeModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ResizeModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ResizeModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ResizeModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResizeModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ResizeModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ResizeModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ResizeModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-474">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Window.ResizeMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-474">Identifies the <see cref="P:System.Windows.Window.ResizeMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect RestoreBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect RestoreBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.RestoreBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreBounds As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect RestoreBounds { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.RestoreBounds : System.Windows.Rect" Usage="System.Windows.Window.RestoreBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-475">Ottiene le dimensioni e la posizione di una finestra prima della riduzione a icona o l'ingrandimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-475">Gets the size and location of a window before being either minimized or maximized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-476">Oggetto <see cref="T:System.Windows.Rect" /> che specifica le dimensioni e la posizione di una finestra prima della riduzione a icona o l'ingrandimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-476">A <see cref="T:System.Windows.Rect" /> that specifies the size and location of a window before being either minimized or maximized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-477">Il rettangolo di ripristino è l'area occupata dalla finestra prima che è stata ridotta a icona o ingrandita.</span><span class="sxs-lookup"><span data-stu-id="694b7-477">The restore rectangle is the region occupied by the window before it was minimized or maximized.</span></span> <span data-ttu-id="694b7-478">È possibile usare <xref:System.Windows.Window.RestoreBounds%2A> per salvare le ultime dimensioni e la posizione di una finestra prima della chiusura di un'applicazione e per recuperare i valori al successivo avvio di un'applicazione per ripristinare la finestra al modo in cui è stato lasciato un utente.</span><span class="sxs-lookup"><span data-stu-id="694b7-478">You can use <xref:System.Windows.Window.RestoreBounds%2A> to save the last size and location of a window before an application is closed, and retrieve those values the next time an application starts to restore a window to the way a user left it.</span></span>  
  
 <span data-ttu-id="694b7-479">Se esegue una query <xref:System.Windows.Window.RestoreBounds%2A> prima che la finestra è stata visualizzata o dopo che è stato chiuso, <xref:System.Windows.Rect.Empty%2A> viene restituito.</span><span class="sxs-lookup"><span data-stu-id="694b7-479">If you query <xref:System.Windows.Window.RestoreBounds%2A> before the window has been shown or after it has been closed, <xref:System.Windows.Rect.Empty%2A> is returned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-480">È possibile ottenere questa proprietà quando una finestra è ospitata in un browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-480">You cannot get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="694b7-481">L'esempio seguente usa <xref:System.Windows.Window.RestoreBounds%2A> e isolato per assicurarsi che le dimensioni e la posizione di una finestra sono uguali come avveniva l'ora precedente è stata visualizzata la finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-481">The following example uses <xref:System.Windows.Window.RestoreBounds%2A> and isolated storage to ensure the size and location of a window are the same as they were the previous time the window was shown.</span></span>  
  
 [!code-xaml[WindowRestoreBoundsSnippets#WindowRestoreBoundsXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml#windowrestoreboundsxaml1)]  
[!code-xaml[WindowRestoreBoundsSnippets#WindowRestoreBoundsXAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml#windowrestoreboundsxaml2)]  
  
 [!code-csharp[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml.cs#windowrestoreboundscodebehind1)]
 [!code-vb[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/visualbasic/mainwindow.xaml.vb#windowrestoreboundscodebehind1)]  
[!code-csharp[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND2](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml.cs#windowrestoreboundscodebehind2)]
[!code-vb[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/visualbasic/mainwindow.xaml.vb#windowrestoreboundscodebehind2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="694b7-482">l'autorizzazione eseguire una query per le dimensioni e posizione di una finestra rettangolo di delimitazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-482">for permission to query for the size and location of a window's bounding rectangle.</span>
          </span>
          <span data-ttu-id="694b7-483">Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-483">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Show" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show();" />
      <MemberSignature Language="F#" Value="member this.Show : unit -&gt; unit" Usage="window.Show " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="694b7-484">Apre una finestra e restituisce un valore senza attendere la chiusura della finestra appena aperta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-484">Opens a window and returns without waiting for the newly opened window to close.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-485">Quando il <xref:System.Windows.Window> viene creata un'istanza di classe, non è visibile per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="694b7-485">When the <xref:System.Windows.Window> class is instantiated, it is not visible by default.</span></span> <span data-ttu-id="694b7-486"><xref:System.Windows.Window.Show%2A> viene visualizzata una finestra e restituisce immediatamente, senza attendere la chiusura della finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-486"><xref:System.Windows.Window.Show%2A> shows a window and returns immediately, without waiting for the window to be closed.</span></span> <span data-ttu-id="694b7-487">Di conseguenza, la finestra aperta non impedisce agli utenti di interagire con altre finestre nell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="694b7-487">Consequently, the opened window does not prevent users from interacting with other windows in the application.</span></span> <span data-ttu-id="694b7-488">Questo tipo di finestra viene chiamato un *modale* finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-488">This type of window is called a *modeless* window.</span></span> <span data-ttu-id="694b7-489">Esempi comuni di windows non modale sono tavolozze, le caselle e finestre delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="694b7-489">Common examples of modeless windows are properties windows, toolboxes, and palettes.</span></span> <span data-ttu-id="694b7-490">Per limitare un utente per l'interazione con una specifica finestra, la finestra deve essere aperta chiamando <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-490">To restrict a user to interacting with a specific window, the window must be opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="694b7-491">Una finestra aperta chiamando <xref:System.Windows.Window.Show%2A> viene automaticamente hanno una relazione con la finestra di cui è stato aperto; in particolare, la finestra aperta non sa quale finestra aperta.</span><span class="sxs-lookup"><span data-stu-id="694b7-491">A window that is opened by calling <xref:System.Windows.Window.Show%2A> does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</span></span> <span data-ttu-id="694b7-492">È possibile stabilire questa relazione usando la <xref:System.Windows.Window.Owner%2A> proprietà e gestiti mediante il <xref:System.Windows.Window.OwnedWindows%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="694b7-492">This relationship can be established using the <xref:System.Windows.Window.Owner%2A> property and managed using the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span>  
  
 <span data-ttu-id="694b7-493">La chiamata <xref:System.Windows.Window.Show%2A> ottenga lo stesso risultato finale come impostazione <xref:System.Windows.UIElement.Visibility%2A> proprietà del <xref:System.Windows.Window> oggetto <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="694b7-493">Calling <xref:System.Windows.Window.Show%2A> achieves the same end result as setting <xref:System.Windows.UIElement.Visibility%2A> property of the <xref:System.Windows.Window> object to <xref:System.Windows.Visibility.Visible>.</span></span> <span data-ttu-id="694b7-494">Tuttavia, vi è una differenza tra i due oggetti da un punto di vista temporale.</span><span class="sxs-lookup"><span data-stu-id="694b7-494">However, there is a difference between the two from a timing perspective.</span></span>  
  
 <span data-ttu-id="694b7-495">La chiamata <xref:System.Windows.Window.Show%2A> è un'operazione sincrona che restituisce solo dopo che il <xref:System.Windows.FrameworkElement.Loaded> è stato generato l'evento nella finestra di figlio:</span><span class="sxs-lookup"><span data-stu-id="694b7-495">Calling <xref:System.Windows.Window.Show%2A> is a synchronous operation that returns only after the <xref:System.Windows.FrameworkElement.Loaded> event on the child window has been raised:</span></span>  
  
 [!code-csharp[WindowShowTimingSnippets#ShowSync](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowTimingSnippets/CSharp/Window1.xaml.cs#showsync)]
 [!code-vb[WindowShowTimingSnippets#ShowSync](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowTimingSnippets/visualbasic/window1.xaml.vb#showsync)]  
  
 <span data-ttu-id="694b7-496">Impostazione <xref:System.Windows.UIElement.Visibility%2A>, tuttavia, è un'operazione asincrona che restituisce immediatamente:</span><span class="sxs-lookup"><span data-stu-id="694b7-496">Setting <xref:System.Windows.UIElement.Visibility%2A>, however, is an asynchronous operation that returns immediately:</span></span>  
  
 [!code-csharp[WindowShowTimingSnippets#ShowASync](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowTimingSnippets/CSharp/Window1.xaml.cs#showasync)]
 [!code-vb[WindowShowTimingSnippets#ShowASync](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowTimingSnippets/visualbasic/window1.xaml.vb#showasync)]  
  
 <span data-ttu-id="694b7-497">Quando si impostano <xref:System.Windows.UIElement.Visibility%2A>, gli eventi di finestra si registra prima di impostare <xref:System.Windows.UIElement.Visibility%2A> non può essere generato dopo che il metodo in cui è stata <xref:System.Windows.UIElement.Visibility%2A> ha completato l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="694b7-497">When setting <xref:System.Windows.UIElement.Visibility%2A>, any window events you register before you set <xref:System.Windows.UIElement.Visibility%2A> may not be raised until after the method in which you set <xref:System.Windows.UIElement.Visibility%2A> has completed execution.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="694b7-498">L'esempio seguente viene illustrato come aprire una finestra non modale.</span><span class="sxs-lookup"><span data-stu-id="694b7-498">The following sample demonstrates how to open a modeless window.</span></span>  
  
 [!code-csharp[WindowShowSnippets#WindowShowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowSnippets/CSharp/MainWindow.xaml.cs#windowshowcode)]
 [!code-vb[WindowShowSnippets#WindowShowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowSnippets/visualbasic/mainwindow.xaml.vb#windowshowcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="694b7-499">
            <see cref="M:System.Windows.Window.Show" /> viene chiamato su una finestra in fase di chiusura (<see cref="E:System.Windows.Window.Closing" />) o che è stata chiusa (<see cref="E:System.Windows.Window.Closed" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-499">
              <see cref="M:System.Windows.Window.Show" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="M:System.Windows.Window.Hide" />
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowActivated">
      <MemberSignature Language="C#" Value="public bool ShowActivated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowActivated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ShowActivated" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowActivated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowActivated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowActivated : bool with get, set" Usage="System.Windows.Window.ShowActivated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-500">Ottiene o imposta un valore che indica se una finestra è attivata la prima volta che viene visualizzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-500">Gets or sets a value that indicates whether a window is activated when first shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-501">
            <see langword="true" /> se una finestra è attivata la prima volta che viene visualizzata. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-501">
              <see langword="true" /> if a window is activated when first shown; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="694b7-502">Il valore predefinito è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-502">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-503">Quando una finestra con relativi <xref:System.Windows.Window.ShowActivated%2A> impostata su `false` è aperto, la finestra non viene attivata e la relativa <xref:System.Windows.Window.Activated> evento non verrà generato fino a quando un utente manualmente, attiva la finestra scegliendo tale comando.</span><span class="sxs-lookup"><span data-stu-id="694b7-503">When a window with its <xref:System.Windows.Window.ShowActivated%2A> property set to `false` is opened, the window is not activated and its <xref:System.Windows.Window.Activated> event is not raised until a user manually activates the window by selecting it.</span></span> <span data-ttu-id="694b7-504">Dopo aver selezionata, la finestra attiva e disattiva normalmente.</span><span class="sxs-lookup"><span data-stu-id="694b7-504">After the window is selected, it activates and deactivates normally.</span></span>  
  
 <span data-ttu-id="694b7-505">Per impedire che una finestra viene attivata quando si apre, la <xref:System.Windows.Window.ShowActivated%2A> proprietà deve essere impostata su `false` prima della visualizzazione della finestra (chiamando <xref:System.Windows.Window.Show%2A>); impostando <xref:System.Windows.Window.ShowActivated%2A> a `false` dopo che viene visualizzata una finestra non ha alcun effetto.</span><span class="sxs-lookup"><span data-stu-id="694b7-505">To prevent a window from being activated when it opens, the <xref:System.Windows.Window.ShowActivated%2A> property must be set to `false` before the window is shown (by calling <xref:System.Windows.Window.Show%2A>); setting <xref:System.Windows.Window.ShowActivated%2A> to `false` after a window is shown has no effect.</span></span>  
  
 <span data-ttu-id="694b7-506">L'impostazione <xref:System.Windows.Window.ShowActivated%2A> al `false` in una finestra che viene aperto come form modale, chiamando <xref:System.Windows.Window.ShowDialog%2A>, non ha alcun impatto reale.</span><span class="sxs-lookup"><span data-stu-id="694b7-506">Setting <xref:System.Windows.Window.ShowActivated%2A> to `false` on a window that is opened modally, by calling <xref:System.Windows.Window.ShowDialog%2A>, has no real impact.</span></span> <span data-ttu-id="694b7-507">Anche se la finestra modale non verrà attivata, la finestra modale impedirà all'utente di attivare altre finestre dell'applicazione aperte.</span><span class="sxs-lookup"><span data-stu-id="694b7-507">Although the modal window will not be activated, the modal window will prevent the user from activating any other open application windows.</span></span>  
  
<a name="dependencyPropertyInfo_WindowShowActivated"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="694b7-508">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="694b7-508">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="694b7-509">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="694b7-509">Identifier field</span></span>|<xref:System.Windows.Window.ShowActivatedProperty>|  
|<span data-ttu-id="694b7-510">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="694b7-510">Metadata properties set to `true`</span></span>|<span data-ttu-id="694b7-511">nessuno</span><span class="sxs-lookup"><span data-stu-id="694b7-511">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="694b7-512">Nell'esempio seguente viene illustrato come utilizzare il markup per configurare una finestra per essere aperto senza essere attivato.</span><span class="sxs-lookup"><span data-stu-id="694b7-512">The following example shows how to use markup to configure a window to be opened without being activated.</span></span>  
  
 [!code-xaml[WindowShowActivatedSnippets#ShowUnactivatedMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/AWindow.xaml#showunactivatedmarkup1)]  
  
  
 [!code-csharp[WindowShowActivatedSnippets#ShowUnactivatedCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/AWindow.xaml.cs#showunactivatedcodebehind)]
 [!code-vb[WindowShowActivatedSnippets#ShowUnactivatedCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowActivatedSnippets/visualbasic/awindow.xaml.vb#showunactivatedcodebehind)]  
  
 <span data-ttu-id="694b7-513">Nell'esempio seguente viene illustrato come usare il codice per configurare un intervallo per essere aperto senza di esso in fase di attivazione.</span><span class="sxs-lookup"><span data-stu-id="694b7-513">The following example shows how to use code to configure a window to be opened without it being activated.</span></span>  
  
 [!code-csharp[WindowShowActivatedSnippets#ShowUnactivatedWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/Window1.xaml.cs#showunactivatedwindowcode)]
 [!code-vb[WindowShowActivatedSnippets#ShowUnactivatedWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowActivatedSnippets/visualbasic/window1.xaml.vb#showunactivatedwindowcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowActivatedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowActivatedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowActivatedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ShowActivatedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowActivatedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowActivatedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowActivatedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ShowActivatedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-514">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Window.ShowActivated" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-514">Identifies the <see cref="P:System.Windows.Window.ShowActivated" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;bool&gt; ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;bool&gt; ShowDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : unit -&gt; Nullable&lt;bool&gt;" Usage="window.ShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="694b7-515">Apre una finestra e restituisce un valore solo quando la finestra appena aperta viene chiusa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-515">Opens a window and returns only when the newly opened window is closed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="694b7-516">Valore <see cref="T:System.Nullable`1" /> del tipo <see cref="T:System.Boolean" /> che specifica se l'attività è stata accettata (<see langword="true" />) o annullata (<see langword="false" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-516">A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" /> that specifies whether the activity was accepted (<see langword="true" />) or canceled (<see langword="false" />).</span>
          </span>
          <span data-ttu-id="694b7-517">Il valore restituito è il valore della proprietà <see cref="P:System.Windows.Window.DialogResult" /> prima della chiusura di una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-517">The return value is the value of the <see cref="P:System.Windows.Window.DialogResult" /> property before a window closes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-518">Quando un <xref:System.Windows.Window> viene creata un'istanza di classe, non è visibile per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="694b7-518">When a <xref:System.Windows.Window> class is instantiated, it is not visible by default.</span></span> <span data-ttu-id="694b7-519"><xref:System.Windows.Window.ShowDialog%2A> Mostra la finestra, disabilita tutte le altre finestre nell'applicazione e viene restituita solo quando la finestra viene chiusa.</span><span class="sxs-lookup"><span data-stu-id="694b7-519"><xref:System.Windows.Window.ShowDialog%2A> shows the window, disables all other windows in the application, and returns only when the window is closed.</span></span> <span data-ttu-id="694b7-520">Questo tipo di finestra è noto come un *modale* finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-520">This type of window is known as a *modal* window.</span></span>  
  
 <span data-ttu-id="694b7-521">Finestre modali vengono utilizzate principalmente le finestre di dialogo.</span><span class="sxs-lookup"><span data-stu-id="694b7-521">Modal windows are primarily used as dialog boxes.</span></span> <span data-ttu-id="694b7-522">Una finestra di dialogo è un tipo speciale di finestra in cui le applicazioni utilizzano per interagire con gli utenti per completare le attività, ad esempio apertura di file o la stampa di documenti.</span><span class="sxs-lookup"><span data-stu-id="694b7-522">A dialog box is a special type of window that applications use to interact with users to complete tasks, such as opening files or printing documents.</span></span> <span data-ttu-id="694b7-523">Finestre di dialogo comune consentono agli utenti di accettare o annullare le attività per cui vengono visualizzate prima che venga chiuso la finestra di dialogo.</span><span class="sxs-lookup"><span data-stu-id="694b7-523">Dialog boxes commonly allow users to accept or cancel the task for which they were shown before the dialog box is closed.</span></span> <span data-ttu-id="694b7-524"><xref:System.Windows.Window.ShowDialog%2A> Restituisce un <xref:System.Nullable%601> <xref:System.Boolean> valore che specifica se l'attività è stata accettata o annullata.</span><span class="sxs-lookup"><span data-stu-id="694b7-524"><xref:System.Windows.Window.ShowDialog%2A> returns a <xref:System.Nullable%601><xref:System.Boolean> value that specifies whether the activity was accepted or canceled.</span></span> <span data-ttu-id="694b7-525">Il valore restituito è il valore della proprietà <xref:System.Windows.Window.DialogResult%2A> prima della chiusura di una finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-525">The return value is the value of the <xref:System.Windows.Window.DialogResult%2A> property before a window closes.</span></span> <span data-ttu-id="694b7-526">Per ulteriori informazioni, vedere <xref:System.Windows.Window.DialogResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-526">For more information, see <xref:System.Windows.Window.DialogResult%2A>.</span></span>  
  
 <span data-ttu-id="694b7-527">Una finestra aperta chiamando il <xref:System.Windows.Window.ShowDialog%2A> metodo non deve automaticamente una relazione con la finestra di cui è stato aperto, in particolare, la finestra aperta non sa quale finestra aperta.</span><span class="sxs-lookup"><span data-stu-id="694b7-527">A window that is opened by calling the <xref:System.Windows.Window.ShowDialog%2A> method does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</span></span> <span data-ttu-id="694b7-528">È possibile stabilire questa relazione usando la <xref:System.Windows.Window.Owner%2A> proprietà e gestiti mediante il <xref:System.Windows.Window.OwnedWindows%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="694b7-528">This relationship can be established using the <xref:System.Windows.Window.Owner%2A> property and managed using the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span> <span data-ttu-id="694b7-529">Per supportare [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] automazione (vedere [UI Automation Overview](~/docs/framework/ui-automation/ui-automation-overview.md)), <xref:System.Windows.Window.Owner%2A> deve essere impostata per una finestra aperta chiamando <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-529">To support [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] automation (see [UI Automation Overview](~/docs/framework/ui-automation/ui-automation-overview.md)), <xref:System.Windows.Window.Owner%2A> must be set for a window opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="694b7-530">Quando una finestra modale [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] finestra (una finestra aperta chiamando <xref:System.Windows.Window.ShowDialog%2A>) viene chiuso, precedentemente attivata viene riattivata finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-530">When a modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window (a window opened by calling <xref:System.Windows.Window.ShowDialog%2A>) is closed, the previously activated window is reactivated.</span></span> <span data-ttu-id="694b7-531">Se una finestra modale [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] finestra dispone di una finestra del proprietario (vedere <xref:System.Windows.Window.Owner%2A>), la finestra proprietaria non viene riattivata quando finestra modale [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] finestra viene chiusa, a meno che si tratti della finestra attivata in precedenza.</span><span class="sxs-lookup"><span data-stu-id="694b7-531">If a modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window has an owner window (see <xref:System.Windows.Window.Owner%2A>), the owner window is not reactivated when the modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window is closed unless it was the previously activated window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-532">Questo metodo non può essere chiamato quando una finestra è ospitata in un browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-532">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="694b7-533">L'esempio seguente viene illustrato come aprire una finestra modale.</span><span class="sxs-lookup"><span data-stu-id="694b7-533">The following sample demonstrates how to open a modal window.</span></span>  
  
 [!code-csharp[WindowShowDialogSnippets#WindowShowDialogCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowDialogSnippets/CSharp/MainWindow.xaml.cs#windowshowdialogcode)]
 [!code-vb[WindowShowDialogSnippets#WindowShowDialogCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowDialogSnippets/visualbasic/mainwindow.xaml.vb#windowshowdialogcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="694b7-534">
            <see cref="M:System.Windows.Window.ShowDialog" /> viene chiamato su una finestra in fase di chiusura (<see cref="E:System.Windows.Window.Closing" />) o che è stata chiusa (<see cref="E:System.Windows.Window.Closed" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-534">
              <see cref="M:System.Windows.Window.ShowDialog" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="694b7-535">per l'autorizzazione per l'attivazione di una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-535">for permission to activate a window.</span>
          </span>
          <span data-ttu-id="694b7-536">Enumerazione associata: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-536">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInTaskbar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ShowInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInTaskbar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowInTaskbar : bool with get, set" Usage="System.Windows.Window.ShowInTaskbar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-537">Ottiene o imposta un valore che indica se la finestra è associata a un pulsante della barra delle applicazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-537">Gets or sets a value that indicates whether the window has a task bar button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-538">
            <see langword="true" /> se la finestra è associata a un pulsante della barra delle applicazioni; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-538">
              <see langword="true" /> if the window has a task bar button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="694b7-539">Non si applica quando la finestra è ospitata in un browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-539">Does not apply when the window is hosted in a browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-540">Se <xref:System.Windows.Window.ShowInTaskbar%2A> è impostata su `true`, la finestra verrà visualizzato anche nell'elenco di selezione applicazione ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="694b7-540">If <xref:System.Windows.Window.ShowInTaskbar%2A> is set to `true`, the window will also appear in the ALT+TAB application selection list.</span></span>  
  
 <span data-ttu-id="694b7-541">L'icona che viene usato per il pulsante della barra e l'elenco di selezione applicazione ALT + TAB è il valore della <xref:System.Windows.Window.Icon%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="694b7-541">The icon that is used for both the task bar button and the ALT+TAB application selection list is the value of the <xref:System.Windows.Window.Icon%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-542">Non è possibile impostare o ottenere questa proprietà quando una finestra è ospitata in un browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-542">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowShowInTaskbar"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="694b7-543">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="694b7-543">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="694b7-544">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="694b7-544">Identifier field</span></span>|<xref:System.Windows.Window.ShowInTaskbarProperty>|  
|<span data-ttu-id="694b7-545">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="694b7-545">Metadata properties set to `true`</span></span>|<span data-ttu-id="694b7-546">nessuno</span><span class="sxs-lookup"><span data-stu-id="694b7-546">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbarProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowInTaskbarProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowInTaskbarProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ShowInTaskbarProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowInTaskbarProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowInTaskbarProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowInTaskbarProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ShowInTaskbarProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-547">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Window.ShowInTaskbar" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-547">Identifies the <see cref="P:System.Windows.Window.ShowInTaskbar" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeToContent">
      <MemberSignature Language="C#" Value="public System.Windows.SizeToContent SizeToContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.SizeToContent SizeToContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.SizeToContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeToContent As SizeToContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SizeToContent SizeToContent { System::Windows::SizeToContent get(); void set(System::Windows::SizeToContent value); };" />
      <MemberSignature Language="F#" Value="member this.SizeToContent : System.Windows.SizeToContent with get, set" Usage="System.Windows.Window.SizeToContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.SizeToContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-548">Ottiene o imposta un valore che indica se una finestra verrà ridimensionata automaticamente in base alle dimensioni del contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-548">Gets or sets a value that indicates whether a window will automatically size itself to fit the size of its content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-549">Valore <see cref="T:System.Windows.SizeToContent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-549">A <see cref="T:System.Windows.SizeToContent" /> value.</span>
          </span>
          <span data-ttu-id="694b7-550">Il valore predefinito è <see cref="F:System.Windows.SizeToContent.Manual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-550">The default is <see cref="F:System.Windows.SizeToContent.Manual" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-551">Quando <xref:System.Windows.Window.SizeToContent%2A> è impostata su <xref:System.Windows.SizeToContent.WidthAndHeight>, l'impostazione entrambi <xref:System.Windows.FrameworkElement.Height%2A> o <xref:System.Windows.FrameworkElement.Width%2A> non ha alcun effetto; è possibile impostare entrambe le proprietà, ma non vengono applicati i valori sono impostati con la finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-551">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.WidthAndHeight>, setting either <xref:System.Windows.FrameworkElement.Height%2A> or <xref:System.Windows.FrameworkElement.Width%2A> has no effect; both properties can be set, but the values they are set with are not applied to the window.</span></span>  
  
 <span data-ttu-id="694b7-552">Quando <xref:System.Windows.Window.SizeToContent%2A> è impostata su <xref:System.Windows.SizeToContent.Height>, l'impostazione <xref:System.Windows.FrameworkElement.Height%2A> non modifica l'altezza della finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-552">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Height>, setting <xref:System.Windows.FrameworkElement.Height%2A> does not change the height of the window.</span></span>  
  
 <span data-ttu-id="694b7-553">Quando <xref:System.Windows.Window.SizeToContent%2A> è impostata su <xref:System.Windows.SizeToContent.Width>, l'impostazione <xref:System.Windows.FrameworkElement.Width%2A> non modifica la larghezza della finestra.</span><span class="sxs-lookup"><span data-stu-id="694b7-553">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Width>, setting <xref:System.Windows.FrameworkElement.Width%2A> does not change the width of the window.</span></span>  
  
 <span data-ttu-id="694b7-554">Se <xref:System.Windows.Window.SizeToContent%2A> ha un valore diverso da <xref:System.Windows.SizeToContent.Manual>:</span><span class="sxs-lookup"><span data-stu-id="694b7-554">If <xref:System.Windows.Window.SizeToContent%2A> has a value other than <xref:System.Windows.SizeToContent.Manual>:</span></span>  
  
-   <span data-ttu-id="694b7-555"><xref:System.Windows.Window.SizeToContent%2A> viene impostato automaticamente su <xref:System.Windows.SizeToContent.Manual> se un utente ridimensiona la finestra tramite il ridimensionamento o trascinando il bordo.</span><span class="sxs-lookup"><span data-stu-id="694b7-555"><xref:System.Windows.Window.SizeToContent%2A> is automatically set to <xref:System.Windows.SizeToContent.Manual> if a user resizes the window by using the resize grip or dragging the border.</span></span>  
  
-   <span data-ttu-id="694b7-556">Se le dimensioni del contenuto viene modificato in modo che la finestra di ridimensionamento automatico, <xref:System.Windows.FrameworkElement.SizeChanged> viene generato.</span><span class="sxs-lookup"><span data-stu-id="694b7-556">If the size of the content changes in a way that causes the window to resize itself, <xref:System.Windows.FrameworkElement.SizeChanged> is raised.</span></span>  
  
 <span data-ttu-id="694b7-557">Se una finestra è trasparente (vedere <xref:System.Windows.Window.AllowsTransparency%2A>), è consigliabile impostare <xref:System.Windows.Window.SizeToContent%2A> a <xref:System.Windows.SizeToContent.WidthAndHeight> per assicurarsi che la finestra non siano maggiore del relativo contenuto visibile.</span><span class="sxs-lookup"><span data-stu-id="694b7-557">If a window is transparent (see <xref:System.Windows.Window.AllowsTransparency%2A>), you should consider setting <xref:System.Windows.Window.SizeToContent%2A> to <xref:System.Windows.SizeToContent.WidthAndHeight> to ensure the window is no larger than its visible content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-558">Non è possibile impostare o ottenere questa proprietà quando una finestra è ospitata in un browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-558">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowSizeToContent"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="694b7-559">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="694b7-559">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="694b7-560">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="694b7-560">Identifier field</span></span>|<xref:System.Windows.Window.SizeToContentProperty>|  
|<span data-ttu-id="694b7-561">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="694b7-561">Metadata properties set to `true`</span></span>|<span data-ttu-id="694b7-562">nessuno</span><span class="sxs-lookup"><span data-stu-id="694b7-562">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="694b7-563">Nell'esempio seguente viene illustrato come impostare il <xref:System.Windows.Window.SizeToContent%2A> proprietà nel codice per specificare come una finestra viene ridimensionata per adattarla al contenuto.</span><span class="sxs-lookup"><span data-stu-id="694b7-563">The following example shows how to set the <xref:System.Windows.Window.SizeToContent%2A> property in code to specify how a window resizes to fit its content.</span></span>  
  
 [!code-csharp[HOWTOWindowManagementSnippets#SetWindowSizeToContentPropertyCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/CSharp/MainWindow.xaml.cs#setwindowsizetocontentpropertycode)]
 [!code-vb[HOWTOWindowManagementSnippets#SetWindowSizeToContentPropertyCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/visualbasic/mainwindow.xaml.vb#setwindowsizetocontentpropertycode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
        <altmember cref="P:System.Windows.Window.ResizeMode" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SizeToContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SizeToContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.SizeToContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeToContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SizeToContentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SizeToContentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.SizeToContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-564">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Window.SizeToContent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-564">Identifies the <see cref="P:System.Windows.Window.SizeToContent" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceInitialized">
      <MemberSignature Language="C#" Value="public event EventHandler SourceInitialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SourceInitialized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.SourceInitialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SourceInitialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SourceInitialized;" />
      <MemberSignature Language="F#" Value="member this.SourceInitialized : EventHandler " Usage="member this.SourceInitialized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-565">Questo evento viene generato per supportare l'interazione con [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-565">This event is raised to support interoperation with [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)].</span>
          </span>
          <span data-ttu-id="694b7-566">Vedere <see cref="T:System.Windows.Interop.HwndSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-566">See <see cref="T:System.Windows.Interop.HwndSource" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StateChanged;" />
      <MemberSignature Language="F#" Value="member this.StateChanged : EventHandler " Usage="member this.StateChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-567">Si verifica quando la proprietà <see cref="P:System.Windows.Window.WindowState" /> della finestra viene modificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-567">Occurs when the window's <see cref="P:System.Windows.Window.WindowState" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="TaskbarItemInfo">
      <MemberSignature Language="C#" Value="public System.Windows.Shell.TaskbarItemInfo TaskbarItemInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Shell.TaskbarItemInfo TaskbarItemInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.TaskbarItemInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property TaskbarItemInfo As TaskbarItemInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Shell::TaskbarItemInfo ^ TaskbarItemInfo { System::Windows::Shell::TaskbarItemInfo ^ get(); void set(System::Windows::Shell::TaskbarItemInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TaskbarItemInfo : System.Windows.Shell.TaskbarItemInfo with get, set" Usage="System.Windows.Window.TaskbarItemInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.TaskbarItemInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-568">Ottiene o imposta l'anteprima della barra delle applicazioni di [!INCLUDE[win7](~/includes/win7-md.md)] per <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-568">Gets or sets the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail for the <see cref="T:System.Windows.Window" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-569">Anteprima della barra delle applicazioni di [!INCLUDE[win7](~/includes/win7-md.md)] per <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-569">The [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail for the <see cref="T:System.Windows.Window" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-570">Per altre informazioni su come usare il [!INCLUDE[win7](~/includes/win7-md.md)] sulla barra delle applicazioni in anteprima, vedere il <xref:System.Windows.Shell.TaskbarItemInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="694b7-570">For more information about how to use the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail, see the <xref:System.Windows.Shell.TaskbarItemInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Windows.Shell" />
      </Docs>
    </Member>
    <Member MemberName="TaskbarItemInfoProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TaskbarItemInfoProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TaskbarItemInfoProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TaskbarItemInfoProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TaskbarItemInfoProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TaskbarItemInfoProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TaskbarItemInfoProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TaskbarItemInfoProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-571">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Window.TaskbarItemInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-571">Identifies the <see cref="P:System.Windows.Window.TaskbarItemInfo" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Window.Title" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IWindowService.Title</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Title)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-572">Recupera o imposta il titolo di una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-572">Gets or sets a window's title.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-573">Oggetto <see cref="T:System.String" /> che contiene il titolo della finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-573">A <see cref="T:System.String" /> that contains the window's title.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-574">Il titolo di una <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, o [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], può anche essere impostata in <xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="694b7-574">The title of a <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, or [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], can also be set by using <xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=nameWithType>.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTitle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="694b7-575">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="694b7-575">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="694b7-576">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="694b7-576">Identifier field</span></span>|<xref:System.Windows.Window.TitleProperty>|  
|<span data-ttu-id="694b7-577">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="694b7-577">Metadata properties set to `true`</span></span>|<span data-ttu-id="694b7-578">nessuno</span><span class="sxs-lookup"><span data-stu-id="694b7-578">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TitleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TitleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TitleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TitleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TitleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TitleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TitleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-579">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Window.Title" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-579">Identifies the <see cref="P:System.Windows.Window.Title" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Top : double with get, set" Usage="System.Windows.Window.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-580">Ottiene o imposta la posizione del bordo superiore della finestra, in relazione al desktop.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-580">Gets or sets the position of the window's top edge, in relation to the desktop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-581">Posizione della parte superiore della finestra, in unità logiche (1/96 di pollice).</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-581">The position of the window's top, in logical units (1/96").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-582">Quando la <xref:System.Windows.Window> viene ingrandita o ridotta, questo valore rappresenta il bordo superiore del ripristino punto per il <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="694b7-582">When the <xref:System.Windows.Window> is maximized or minimized, this value represents the top edge of the restore point for the <xref:System.Windows.Window>.</span></span>  
  
 <span data-ttu-id="694b7-583">Questa proprietà non può essere impostata tramite uno stile.</span><span class="sxs-lookup"><span data-stu-id="694b7-583">This property cannot be set through a style.</span></span>  
  
 <span data-ttu-id="694b7-584">Se non si specifica un valore, <xref:System.Windows.Window.Top%2A> è impostata sul valore predefinito di sistema.</span><span class="sxs-lookup"><span data-stu-id="694b7-584">If you do not specify a value, <xref:System.Windows.Window.Top%2A> is set to the system default value.</span></span> <span data-ttu-id="694b7-585">È anche possibile specificare il valore predefinito di sistema impostando <xref:System.Windows.Window.Top%2A> a <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="694b7-585">You can also specify the system default value by setting <xref:System.Windows.Window.Top%2A> to <xref:System.Double.NaN>.</span></span> <span data-ttu-id="694b7-586">Né <xref:System.Double.NegativeInfinity> né <xref:System.Double.PositiveInfinity> è un valore valido per <xref:System.Windows.Window.Top%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-586">Neither <xref:System.Double.NegativeInfinity> nor <xref:System.Double.PositiveInfinity> is a valid value for <xref:System.Windows.Window.Top%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-587">Non è possibile impostare o ottenere questa proprietà quando una finestra è ospitata in un browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-587">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="694b7-588">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="694b7-588">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="694b7-589">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="694b7-589">Identifier field</span></span>|<xref:System.Windows.Window.TopProperty>|  
|<span data-ttu-id="694b7-590">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="694b7-590">Metadata properties set to `true`</span></span>|<span data-ttu-id="694b7-591">nessuno</span><span class="sxs-lookup"><span data-stu-id="694b7-591">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
      </Docs>
    </Member>
    <Member MemberName="Topmost">
      <MemberSignature Language="C#" Value="public bool Topmost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Topmost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Topmost" />
      <MemberSignature Language="VB.NET" Value="Public Property Topmost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Topmost { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Topmost : bool with get, set" Usage="System.Windows.Window.Topmost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-592">Ottiene o imposta un valore che indica se una finestra viene visualizzata in primo piano nell'ordine Z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-592">Gets or sets a value that indicates whether a window appears in the topmost z-order.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-593">
            <see langword="true" /> se la finestra è in primo piano; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-593">
              <see langword="true" /> if the window is topmost; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-594">Una finestra di cui <xref:System.Windows.Window.Topmost%2A> è impostata su `true` viene visualizzato sopra tutte le piattaforme windows la cui proprietà <xref:System.Windows.Window.Topmost%2A> sono impostate su `false`.</span><span class="sxs-lookup"><span data-stu-id="694b7-594">A window whose <xref:System.Windows.Window.Topmost%2A> property is set to `true` appears above all windows whose <xref:System.Windows.Window.Topmost%2A> properties are set to `false`.</span></span>  
  
 <span data-ttu-id="694b7-595">Nel gruppo di windows che hanno <xref:System.Windows.Window.Topmost%2A> è impostata su `true`, la finestra attualmente attivata è la finestra in primo piano.</span><span class="sxs-lookup"><span data-stu-id="694b7-595">In the group of windows that have <xref:System.Windows.Window.Topmost%2A> property is set to `true`, the window that is currently activated is the topmost window.</span></span> <span data-ttu-id="694b7-596">Allo stesso modo per il gruppo di windows che hanno <xref:System.Windows.Window.Topmost%2A> è impostata su `false`.</span><span class="sxs-lookup"><span data-stu-id="694b7-596">Likewise for the group of windows that have <xref:System.Windows.Window.Topmost%2A> property is set to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-597">Non è possibile impostare o ottenere questa proprietà quando una finestra è ospitata in un browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-597">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTopmost"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="694b7-598">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="694b7-598">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="694b7-599">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="694b7-599">Identifier field</span></span>|<xref:System.Windows.Window.TopmostProperty>|  
|<span data-ttu-id="694b7-600">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="694b7-600">Metadata properties set to `true`</span></span>|<span data-ttu-id="694b7-601">nessuno</span><span class="sxs-lookup"><span data-stu-id="694b7-601">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="TopmostProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopmostProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopmostProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TopmostProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopmostProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopmostProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TopmostProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TopmostProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-602">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Window.Topmost" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-602">Identifies the <see cref="P:System.Windows.Window.Topmost" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TopProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TopProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TopProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-603">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Window.Top" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-603">Identifies the <see cref="P:System.Windows.Window.Top" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStartupLocation">
      <MemberSignature Language="C#" Value="public System.Windows.WindowStartupLocation WindowStartupLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowStartupLocation WindowStartupLocation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowStartupLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStartupLocation As WindowStartupLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowStartupLocation WindowStartupLocation { System::Windows::WindowStartupLocation get(); void set(System::Windows::WindowStartupLocation value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStartupLocation : System.Windows.WindowStartupLocation with get, set" Usage="System.Windows.Window.WindowStartupLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.WindowStartupLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-604">Recupera o imposta la posizione della finestra alla prima visualizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-604">Gets or sets the position of the window when first shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-605">Valore <see cref="T:System.Windows.WindowStartupLocation" /> che specifica la posizione superiore/sinistra di una finestra la prima volta che viene visualizzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-605">A <see cref="T:System.Windows.WindowStartupLocation" /> value that specifies the top/left position of a window when first shown.</span>
          </span>
          <span data-ttu-id="694b7-606">Il valore predefinito è <see cref="F:System.Windows.WindowStartupLocation.Manual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-606">The default is <see cref="F:System.Windows.WindowStartupLocation.Manual" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-607">Impostando il `WindowStartupLocation` proprietà <xref:System.Windows.WindowStartupLocation.Manual> fa sì che una finestra deve essere posizionato in base al relativo <xref:System.Windows.Window.Left%2A> e <xref:System.Windows.Window.Top%2A> i valori delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="694b7-607">Setting the `WindowStartupLocation` property to <xref:System.Windows.WindowStartupLocation.Manual> causes a window to be positioned according to its <xref:System.Windows.Window.Left%2A> and <xref:System.Windows.Window.Top%2A> property values.</span></span> <span data-ttu-id="694b7-608">Se il <xref:System.Windows.Window.Left%2A> o <xref:System.Windows.Window.Top%2A> non sono specificate proprietà, i relativi valori dipendono da Windows.</span><span class="sxs-lookup"><span data-stu-id="694b7-608">If either the <xref:System.Windows.Window.Left%2A> or <xref:System.Windows.Window.Top%2A> properties aren't specified, their values are determined by Windows.</span></span>  
  
 <span data-ttu-id="694b7-609">Impostando il `WindowStartupLocation` proprietà <xref:System.Windows.WindowStartupLocation.CenterScreen> fa sì che una finestra deve essere posizionato al centro della schermata che contiene il cursore del mouse.</span><span class="sxs-lookup"><span data-stu-id="694b7-609">Setting the `WindowStartupLocation` property to <xref:System.Windows.WindowStartupLocation.CenterScreen> causes a window to be positioned in the center of the screen that contains the mouse cursor.</span></span>  
  
 <span data-ttu-id="694b7-610">Impostando il `WindowStartupLocation` proprietà <xref:System.Windows.WindowStartupLocation.CenterOwner> fa sì che una finestra deve essere posizionato al centro della relativa finestra proprietaria (vedere <xref:System.Windows.Window.Owner%2A?displayProperty=nameWithType>), se specificato.</span><span class="sxs-lookup"><span data-stu-id="694b7-610">Setting the `WindowStartupLocation` property to <xref:System.Windows.WindowStartupLocation.CenterOwner> causes a window to be positioned in the center of its owner window (see <xref:System.Windows.Window.Owner%2A?displayProperty=nameWithType>), if specified.</span></span> <span data-ttu-id="694b7-611">La finestra proprietaria può essere un'altra finestra WPF o una finestra non WPF.</span><span class="sxs-lookup"><span data-stu-id="694b7-611">The owner window can be either another WPF window or a non-WPF window.</span></span>

> [!NOTE]   
>  <span data-ttu-id="694b7-612">Per altre informazioni sulle finestre WPF in windows non WPF, vedere [interoperatività di WPF e Win32](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md) e <xref:System.Windows.Interop.WindowInteropHelper>.</span><span class="sxs-lookup"><span data-stu-id="694b7-612">For more information about WPF windows with non-WPF windows, see [WPF and Win32 Interoperation](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md) and <xref:System.Windows.Interop.WindowInteropHelper>.</span></span> 

 <span data-ttu-id="694b7-613">Se una finestra del proprietario non viene specificata, la posizione della finestra è determinata esattamente come se il `WindowStartupLocation` è impostata su <xref:System.Windows.WindowStartupLocation.Manual>.</span><span class="sxs-lookup"><span data-stu-id="694b7-613">If an owner window is not specified, the position of the window is determined in the same way as if the `WindowStartupLocation` property is set to <xref:System.Windows.WindowStartupLocation.Manual>.</span></span>

> [!NOTE]
>  <span data-ttu-id="694b7-614">Non è possibile impostare o ottenere il valore di questa proprietà quando una finestra è ospitata in un browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-614">You cannot set or get the value of this property when a window is hosted in a browser.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public System.Windows.WindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As WindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowState WindowState { System::Windows::WindowState get(); void set(System::Windows::WindowState value); };" />
      <MemberSignature Language="F#" Value="member this.WindowState : System.Windows.WindowState with get, set" Usage="System.Windows.Window.WindowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-615">Ottiene o imposta un valore che indica se una finestra è ripristinata, ridotta a icona o ingrandita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-615">Gets or sets a value that indicates whether a window is restored, minimized, or maximized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-616">Oggetto <see cref="T:System.Windows.WindowState" /> che determina se una finestra è ripristinata, ridotta a icona o ingrandita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-616">A <see cref="T:System.Windows.WindowState" /> that determines whether a window is restored, minimized, or maximized.</span>
          </span>
          <span data-ttu-id="694b7-617">Il valore predefinito è <see cref="F:System.Windows.WindowState.Normal" /> (finestra ripristinata).</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-617">The default is <see cref="F:System.Windows.WindowState.Normal" /> (restored).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-618">Prima di una finestra è ridotta a icona o ingrandita, la posizione e dimensioni vengono archiviati <xref:System.Windows.Window.RestoreBounds%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-618">Before a window is minimized or maximized, its size and location are stored in <xref:System.Windows.Window.RestoreBounds%2A>.</span></span> <span data-ttu-id="694b7-619">Quando una finestra viene successivamente ripristinata, vengono ripristinati i valori di dimensioni e la posizione con i valori da <xref:System.Windows.Window.RestoreBounds%2A>.</span><span class="sxs-lookup"><span data-stu-id="694b7-619">When a window is subsequently restored, its size and location values are restored with the values from <xref:System.Windows.Window.RestoreBounds%2A>.</span></span>  
  
 <span data-ttu-id="694b7-620">Quando la <xref:System.Windows.Window.WindowState%2A> proprietà viene modificata, <xref:System.Windows.Window.StateChanged> viene generato.</span><span class="sxs-lookup"><span data-stu-id="694b7-620">When the <xref:System.Windows.Window.WindowState%2A> property is changed, <xref:System.Windows.Window.StateChanged> is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-621">Non è possibile impostare o ottenere questa proprietà quando una finestra è ospitata in un browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-621">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowState"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="694b7-622">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="694b7-622">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="694b7-623">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="694b7-623">Identifier field</span></span>|<xref:System.Windows.Window.WindowStateProperty>|  
|<span data-ttu-id="694b7-624">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="694b7-624">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.RestoreBounds" />
      </Docs>
    </Member>
    <Member MemberName="WindowStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WindowStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WindowStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.WindowStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WindowStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowStateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.WindowStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-625">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Window.WindowState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-625">Identifies the <see cref="P:System.Windows.Window.WindowState" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public System.Windows.WindowStyle WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowStyle WindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStyle As WindowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowStyle WindowStyle { System::Windows::WindowStyle get(); void set(System::Windows::WindowStyle value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStyle : System.Windows.WindowStyle with get, set" Usage="System.Windows.Window.WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-626">Recupera o imposta lo stile del bordo di una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-626">Gets or sets a window's border style.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="694b7-627">Oggetto <see cref="T:System.Windows.WindowStyle" /> che specifica lo stile del bordo di una finestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-627">A <see cref="T:System.Windows.WindowStyle" /> that specifies a window's border style.</span>
          </span>
          <span data-ttu-id="694b7-628">Il valore predefinito è <see cref="F:System.Windows.WindowStyle.SingleBorderWindow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-628">The default is <see cref="F:System.Windows.WindowStyle.SingleBorderWindow" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="694b7-629"><xref:System.Windows.Window.WindowStyle%2A> può essere uno dei <xref:System.Windows.WindowStyle> valori di enumerazione, incluso <xref:System.Windows.WindowStyle.None>, <xref:System.Windows.WindowStyle.ToolWindow>, <xref:System.Windows.WindowStyle.SingleBorderWindow> (predefinito), e <xref:System.Windows.WindowStyle.ThreeDBorderWindow>.</span><span class="sxs-lookup"><span data-stu-id="694b7-629"><xref:System.Windows.Window.WindowStyle%2A> can be one of the <xref:System.Windows.WindowStyle> enumeration values, including <xref:System.Windows.WindowStyle.None>, <xref:System.Windows.WindowStyle.ToolWindow>, <xref:System.Windows.WindowStyle.SingleBorderWindow> (default), and <xref:System.Windows.WindowStyle.ThreeDBorderWindow>.</span></span>  
  
 <span data-ttu-id="694b7-630">La figura seguente mostra gli stili di finestra in [!INCLUDE[TLA#tla_longhorn](~/includes/tlasharptla-longhorn-md.md)] (tema Windows Vista Aero, con trasparenza effetto cristallo abilitato):</span><span class="sxs-lookup"><span data-stu-id="694b7-630">The following figure shows the window styles on [!INCLUDE[TLA#tla_longhorn](~/includes/tlasharptla-longhorn-md.md)] (Windows Vista Aero theme, with transparent glass enabled):</span></span>  
  
 <span data-ttu-id="694b7-631">![Stili finestra](~/add/media/windowoverviewfigure6.PNG "stili finestra")</span><span class="sxs-lookup"><span data-stu-id="694b7-631">![Window styles](~/add/media/windowoverviewfigure6.PNG "Window styles")</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="694b7-632">Non è possibile impostare o ottenere questa proprietà quando una finestra è ospitata in un browser.</span><span class="sxs-lookup"><span data-stu-id="694b7-632">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="694b7-633">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="694b7-633">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="694b7-634">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="694b7-634">Identifier field</span></span>|<xref:System.Windows.Window.WindowStyleProperty>|  
|<span data-ttu-id="694b7-635">Impostare le proprietà dei metadati `true`</span><span class="sxs-lookup"><span data-stu-id="694b7-635">Metadata properties set to `true`</span></span>|<span data-ttu-id="694b7-636">nessuno</span><span class="sxs-lookup"><span data-stu-id="694b7-636">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WindowStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WindowStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.WindowStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WindowStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.WindowStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="694b7-637">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Window.WindowStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="694b7-637">Identifies the <see cref="P:System.Windows.Window.WindowStyle" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>