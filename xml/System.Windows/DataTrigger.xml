<Type Name="DataTrigger" FullName="System.Windows.DataTrigger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0cd8726db4cc343eaf11cc67688c5199d2a29a9e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36461215" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTrigger : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type DataTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un trigger che applica i valori di proprietà o esegue azioni quando i dati associati soddisfano una condizione specificata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Style>, <xref:System.Windows.Controls.ControlTemplate>, e <xref:System.Windows.DataTemplate> dispongano di una raccolta di trigger. Un <xref:System.Windows.DataTrigger> consente di impostare i valori delle proprietà quando il valore della proprietà dell'oggetto dati corrisponde a un determinato <xref:System.Windows.Condition.Value%2A>. Se, ad esempio, per visualizzare un elenco di `Employee` oggetti, è il colore di primo piano può essere diverso in base a ogni `Employee's` presenze corrente. (Ad esempio, `Employees` che sono attualmente in vacanza vengono visualizzati con un primo piano viola.) In alcuni scenari potrebbe essere più adatta per creare un convertitore di tipi o utilizzare un <xref:System.Windows.Controls.DataTemplateSelector>. Per altre informazioni, vedere la [panoramica dei modelli di dati](~/docs/framework/wpf/data/data-templating-overview.md).  
  
 Si noti che è necessario specificare sia il <xref:System.Windows.DataTrigger.Binding%2A> e <xref:System.Windows.DataTrigger.Value%2A> proprietà su un <xref:System.Windows.DataTrigger> per il trigger di dati è significativo. Se una o entrambe le proprietà non sono specificate, viene generata un'eccezione.  
  
 Il <xref:System.Windows.DataTrigger.Setters%2A> proprietà di un <xref:System.Windows.DataTrigger> oggetto può contenere solo <xref:System.Windows.Setter> oggetti. Aggiunta di un <xref:System.Windows.Setter> figlio a un <xref:System.Windows.DataTrigger> oggetto aggiunge in modo implicito per il <xref:System.Windows.SetterBaseCollection> per il <xref:System.Windows.DataTrigger> oggetto. <xref:System.Windows.EventSetter> gli oggetti non sono supportati. solo <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> supporta <xref:System.Windows.EventSetter> oggetti.  
  
   
  
## Examples  
 Nell'esempio seguente, il <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> del <xref:System.Windows.Controls.ListBox> è associato a *posizioni*, un oggetto <xref:System.Collections.ObjectModel.ObservableCollection%601> di *luogo* oggetti. *Sul posto* oggetti dispongono di proprietà *nome* e *stato*.  
  
 Ogni <xref:System.Windows.Controls.ListBoxItem> del <xref:System.Windows.Controls.ListBox> consente di visualizzare un *luogo* oggetto. Il <xref:System.Windows.Style> nell'esempio viene applicato a ogni <xref:System.Windows.Controls.ListBoxItem>.  
  
 Il <xref:System.Windows.DataTrigger> viene specificato in modo che se il *stato* del *luogo* elemento dati è "WA" quindi il primo piano del corrispondente <xref:System.Windows.Controls.ListBoxItem> è impostato su rosso.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 Nell'esempio seguente viene illustrato come utilizzare un <xref:System.Windows.DataTrigger>, una <xref:System.Windows.Media.Animation.BeginStoryboard> azione e un <xref:System.Windows.Media.Animation.Storyboard> per aggiungere un'animazione a una proprietà quando i dati associati soddisfano una condizione specificata. Nell'esempio vengono visualizzate le informazioni di inventario in un <xref:System.Windows.Controls.ListBox> controllo. Usa un <xref:System.Windows.DataTrigger> animare la <xref:System.Windows.UIElement.Opacity%2A> di ogni <xref:System.Windows.Controls.ListBoxItem> che contiene un libro out-of-stock.  
  
 [!code-xaml[AnimatePropertyStoryboards#GraphicsMMDataTriggerStoryboardWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/AnimatePropertyStoryboards/XAML/DataTriggerStoryboardExample.xaml#graphicsmmdatatriggerstoryboardwholepage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Trigger" />
    <altmember cref="T:System.Windows.MultiDataTrigger" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.DataTrigger" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase Binding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ Binding { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.DataTrigger.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'associazione che genera il valore della proprietà dell'oggetto dati.</summary>
        <value>Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore della proprietà prodotto da questa associazione viene confrontato con il valore specificato per il <xref:System.Windows.DataTrigger.Value%2A> proprietà. Tale valore viene prima convertito nel tipo del valore dell'associazione (se possibile) e quindi vengono confrontati due valori utilizzando il `Object.Equals` metodo. Se i due valori sono uguali, vengono applicate le azioni associate o setter di proprietà.  
  
 Creare un'associazione e utilizzare il <xref:System.Windows.Data.Binding.Path%2A> proprietà da associare a una proprietà di un determinato oggetto (l'oggetto di origine di associazione). Ad esempio, è possibile associare ai *priorità* proprietà di un *attività*. Per altre informazioni, vedere la [panoramica del data binding](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Si noti che è necessario specificare sia il <xref:System.Windows.DataTrigger.Binding%2A> e <xref:System.Windows.DataTrigger.Value%2A> proprietà su un <xref:System.Windows.DataTrigger> per il trigger di dati è significativo. Se non vengono impostate una o entrambe le proprietà, viene generata un'eccezione.  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlPropertyElementUsage_Binding"></a>   
## <a name="xaml-property-element-usage"></a>Utilizzo della sintassi XAML per elementi proprietà  
  
```  
<object>  
  <object.Binding>  
    <Binding …/>  
  </object.Binding>  
</object>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *declaration*  
 Zero o più clausole di assegnazione di attributi separate da virgole (,). Vedere [estensione di Markup di associazione](~/docs/framework/wpf/advanced/binding-markup-extension.md) per altre informazioni.  
  
   
  
## Examples  
 Nell'esempio seguente, il <xref:System.Windows.DataTrigger> imposta il <xref:System.Windows.Controls.Border.BorderBrush%2A> dell'elemento denominato `border` a `Yellow` se il `TaskType` proprietà `TaskType.Home`.  
  
 [!code-xaml[DataTemplatingIntro#DT](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#dt)]  
[!code-xaml[DataTemplatingIntro#DataTrigger](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#datatrigger)]  
[!code-xaml[DataTemplatingIntro#AddingMore2](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#addingmore2)]  
  
 Per una descrizione dettagliata di questo esempio, vedere [panoramica dei modelli di dati](~/docs/framework/wpf/data/data-templating-overview.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.DataTrigger.Value" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMarkupExtension(object targetObject, class System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveMarkupExtension (targetObject As Object, eventArgs As XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveMarkupExtension(System::Object ^ targetObject, System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveMarkupExtension : obj * System.Windows.Markup.XamlSetMarkupExtensionEventArgs -&gt; unit" Usage="System.Windows.DataTrigger.ReceiveMarkupExtension (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetObject">Oggetto in corrispondenza del quale l'estensione di markup imposta il valore.</param>
        <param name="eventArgs">Dati pertinenti per l'elaborazione dell'estensione di markup.</param>
        <summary>Gestisce casi dove un'estensione di markup fornisce un valore per una proprietà di un oggetto <see cref="T:System.Windows.DataTrigger" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tratta del metodo fanno riferimento un applicato <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> a livello di classe, che indica che questo metodo elabora tutti i tentativi di impostare valori di attributo <xref:System.Windows.DataTrigger> con un'estensione di markup. In genere, questo metodo non viene chiamata direttamente.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.DataTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di oggetti <see cref="T:System.Windows.Setter" /> che descrivono i valori della proprietà da applicare quando l'elemento dei dati soddisfa la condizione specificata.</summary>
        <value>Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>Utilizzo della sintassi XAML per elementi proprietà  
  
```  
<object>  
  <object.Setters>  
    ZeroOrMoreSetters  
  </object.Setters>  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *ZeroOrMoreSetters*  
 Zero o più <xref:System.Windows.Setter> oggetti.  
  
 Un <xref:System.Windows.DataTrigger> consente di avviare azioni o utilizzare <xref:System.Windows.Setter>s applicare proprietà valori quando l'elemento dati soddisfa una condizione specificata.  
  
 Se è presente più di un setter impostano la stessa proprietà nella stessa raccolta di set, viene utilizzato il metodo di impostazione che è dichiarato per ultimo.  
  
 Il <xref:System.Windows.DataTrigger.Setters%2A> proprietà di un <xref:System.Windows.DataTrigger> oggetto può contenere solo <xref:System.Windows.Setter> oggetti. Aggiunta di un <xref:System.Windows.Setter> figlio a un <xref:System.Windows.DataTrigger> oggetto aggiunge in modo implicito per il <xref:System.Windows.SetterBaseCollection> per il <xref:System.Windows.DataTrigger> oggetto. <xref:System.Windows.EventSetter> gli oggetti non sono supportati. solo <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> supporta <xref:System.Windows.EventSetter> oggetti.  
  
   
  
## Examples  
 Nell'esempio seguente vengono illustrati due <xref:System.Windows.DataTrigger> gli oggetti definiti in un <xref:System.Windows.DataTemplate>. Il <xref:System.Windows.DataTemplate> si riferisce alle *AuctionItem* oggetti dati (non illustrati in questo esempio), che dispongono della proprietà *SpecialFeatures*.  
  
 Il primo <xref:System.Windows.DataTrigger> viene specificato in modo che se l'oggetto dati dispone di un *SpecialFeatures* pari a *colore*, quindi l'elemento viene visualizzato con un `DodgerBlue` in background con titoli blu. Se l'oggetto dati dispone di un *SpecialFeatures* pari a *evidenziare*, quindi il secondo <xref:System.Windows.DataTrigger> sarà attivo, causando l'elemento deve essere visualizzato con un bordo arancione con un asterisco.  
  
 Per l'esempio completo, vedere [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Oggetto figlio da aggiungere.</param>
        <summary>Aggiunge un oggetto figlio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.DataTrigger> a un'interfaccia <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Testo da aggiungere all'oggetto.</param>
        <summary>Aggiunge il contenuto di testo di un nodo all'oggetto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.DataTrigger> a un'interfaccia <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.DataTrigger.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Binding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o imposta il valore da confrontare con il valore della proprietà dell'oggetto dati.</summary>
        <value>Il valore predefinito è <see langword="null" />. Vedere anche la sezione relativa alle eccezioni.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Value"></a>   
## <a name="xaml-property-element-usage"></a>Utilizzo della sintassi XAML per elementi proprietà  
  
```  
<object>  
  <object.Value>  
    Value  
  </object.Value>  
</object>  
```  
  
 Questo valore viene confrontato con il valore della proprietà prodotto dal <xref:System.Windows.DataTrigger.Binding%2A> proprietà del <xref:System.Windows.DataTrigger>. Il confronto è un controllo di uguaglianza dei riferimenti. Se i due valori sono uguali, vengono applicate le azioni associate o setter di proprietà.  
  
 Si noti che è necessario specificare sia il <xref:System.Windows.DataTrigger.Binding%2A> e <xref:System.Windows.DataTrigger.Value%2A> proprietà su un <xref:System.Windows.DataTrigger> per il trigger di dati è significativo. Se non vengono impostate proprietà di uno o entrambi, verrà generata un'eccezione.  
  
   
  
## Examples  
 Nell'esempio seguente, il <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> del <xref:System.Windows.Controls.ListBox> è associato a *posizioni*, un oggetto <xref:System.Collections.ObjectModel.ObservableCollection%601> di *luogo* oggetti. *Sul posto* oggetti dispongono di proprietà *nome* e *stato*.  
  
 Ogni <xref:System.Windows.Controls.ListBoxItem> del <xref:System.Windows.Controls.ListBox> consente di visualizzare un *luogo* oggetto. Il <xref:System.Windows.Style> nell'esempio viene applicato a ogni <xref:System.Windows.Controls.ListBoxItem>.  
  
 Il <xref:System.Windows.DataTrigger> viene specificato in modo che se il *stato* del *luogo* elemento dati è "WA" quindi il primo piano del corrispondente <xref:System.Windows.Controls.ListBoxItem> è impostato su rosso.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 Nell'esempio seguente vengono illustrati due <xref:System.Windows.DataTrigger>che sono definiti in un <xref:System.Windows.DataTemplate>. Il <xref:System.Windows.DataTemplate> si riferisce alle *AuctionItem* oggetti dati (non illustrati in questo esempio), che dispongono della proprietà *SpecialFeatures*. Vedere [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703) per un esempio completo.  
  
 Il primo <xref:System.Windows.DataTrigger> viene specificato in modo che se l'oggetto dati dispone di un *SpecialFeatures* pari a *colore*, quindi l'elemento viene visualizzato con titoli Navy su sfondo blu titoli. Se l'oggetto dati dispone di un *SpecialFeatures* pari a *evidenziare*, quindi il secondo <xref:System.Windows.DataTrigger> sarà attivo, causando l'elemento deve essere visualizzato con un bordo arancione con un asterisco.  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le espressioni non sono supportate. Le associazioni non sono supportate.</exception>
        <altmember cref="P:System.Windows.DataTrigger.Binding" />
        <altmember cref="P:System.Windows.DataTrigger.Setters" />
      </Docs>
    </Member>
  </Members>
</Type>