<Type Name="DataTemplate" FullName="System.Windows.DataTemplate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cffbeb8fcc8f02b552d5ae620f2af8c77273c146" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30678655" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataTemplate : System.Windows.FrameworkTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTemplate extends System.Windows.FrameworkTemplate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTemplate&#xA;Inherits FrameworkTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTemplate : System::Windows::FrameworkTemplate" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkTemplate</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.DictionaryKeyProperty("DataTemplateKey")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Descrive la struttura visiva di un oggetto dati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si utilizza un <xref:System.Windows.DataTemplate> per specificare la visualizzazione degli oggetti di dati. <xref:System.Windows.DataTemplate> gli oggetti sono particolarmente utili quando si associa un <xref:System.Windows.Controls.ItemsControl> , ad esempio un <xref:System.Windows.Controls.ListBox> per un'intera raccolta. Senza istruzioni specifiche, un <xref:System.Windows.Controls.ListBox> Visualizza la rappresentazione di stringa degli oggetti in una raccolta. In tal caso, è possibile utilizzare un <xref:System.Windows.DataTemplate> per definire l'aspetto degli oggetti di dati. Il contenuto del <xref:System.Windows.DataTemplate> diventa la struttura visiva degli oggetti di dati.  
  
 Per informazioni più dettagliate, vedere [panoramica dei modelli di dati](~/docs/framework/wpf/data/data-templating-overview.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un <xref:System.Windows.DataTemplate> inline. Il <xref:System.Windows.DataTemplate> specifica che ogni elemento di dati viene visualizzato come tre <xref:System.Windows.Controls.TextBlock> elementi all'interno di un <xref:System.Windows.Controls.StackPanel>. In questo esempio, l'oggetto dati è una classe denominata `Task`. Si noti che ogni <xref:System.Windows.Controls.TextBlock> elemento in questo modello è associato a una proprietà del `Task` classe.  
  
 [!code-xaml[DataTemplatingIntro_snip#Inline](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#inline)]  
  
 È più comune per definire un <xref:System.Windows.DataTemplate> nella sezione delle risorse, pertanto può essere un oggetto riutilizzabile, come nell'esempio seguente:  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#AsResource](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#asresource)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 È possibile a questo punto usare `myTaskTemplate` come risorsa, come illustrato nell'esempio seguente:  
  
 [!code-xaml[DataTemplatingIntro_snip#MyTaskTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#mytasktemplate)]  
  
 Per l'esempio completo, vedere [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009) (Introduzione a un esempio di applicazione di modello).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.Binding" />
    <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
    <altmember cref="T:System.Windows.HierarchicalDataTemplate" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.DataTemplate" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTemplate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.DataTemplate" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTemplate (object dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTemplate.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataType As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTemplate(System::Object ^ dataType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataType">Se il modello è destinato ai dati dell'oggetto, questo è il nome del tipo dell'oggetto dati.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.DataTemplate" /> con la proprietà <see cref="P:System.Windows.DataTemplate.DataType" /> specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per fare riferimento al nome del tipo della classe, utilizzare il [estensione di Markup X:Type](~/docs/framework/xaml-services/x-type-markup-extension.md). Se il modello è destinato [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] dati, questa è la stringa che rappresenta il nome del tag dei dati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTemplateKey">
      <MemberSignature Language="C#" Value="public object DataTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTemplate.DataTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataTemplateKey As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataTemplateKey { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la chiave predefinita di <see cref="T:System.Windows.DataTemplate" />.</summary>
        <value>Chiave predefinita di <see cref="T:System.Windows.DataTemplate" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non si imposta il [direttiva X:Key](~/docs/framework/xaml-services/x-key-directive.md) in un <xref:System.Windows.DataTemplate> che si trova in un <xref:System.Windows.ResourceDictionary>, <xref:System.Windows.DataTemplate.DataTemplateKey%2A> viene utilizzato come chiave.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public object DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTemplate.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataType { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo per cui l'oggetto <see cref="T:System.Windows.DataTemplate" /> è destinato.</summary>
        <value>Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è molto simile al <xref:System.Windows.Style.TargetType%2A> proprietà la <xref:System.Windows.Style> classe. Quando si imposta questa proprietà per il tipo di dati senza specificare un `x:Key`, <xref:System.Windows.DataTemplate> viene automaticamente applicato a oggetti di dati di quel tipo. Si noti che quando si esegue questa operazione il `x:Key` è impostato in modo implicito. Pertanto, se si assegna questa <xref:System.Windows.DataTemplate> un `x:Key` valore, si esegue l'override di implicita `x:Key` e <xref:System.Windows.DataTemplate> non viene applicato automaticamente.  
  
 Si noti inoltre che quando si associa un <xref:System.Windows.Controls.ContentControl> a una raccolta di `Task` oggetti, il <xref:System.Windows.Controls.ContentControl> non utilizza il <xref:System.Windows.DataTemplate> automaticamente. Infatti, l'associazione in un <xref:System.Windows.Controls.ContentControl> richiede ulteriori informazioni per distinguere se si desidera associare a un'intera raccolta o i singoli oggetti. Se il <xref:System.Windows.Controls.ContentControl> sta rilevando la selezione di un <xref:System.Windows.Controls.ItemsControl> tipo, è possibile impostare il <xref:System.Windows.Data.Binding.Path%2A> proprietà del <xref:System.Windows.Controls.ContentControl> associazione a "`/`" per indicare che si è interessati all'elemento corrente. Per un esempio, vedere [procedura: associare una raccolta e visualizzare informazioni in base alla selezione](~/docs/framework/wpf/data/how-to-bind-to-a-collection-and-display-information-based-on-selection.md). In caso contrario, è necessario specificare il <xref:System.Windows.DataTemplate> impostando in modo esplicito il <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> proprietà.  
  
 Il <xref:System.Windows.DataTemplate.DataType%2A> proprietà è particolarmente utile quando si dispone di un <xref:System.Windows.Data.CompositeCollection> di diversi tipi di oggetti dati.  
  
 Se questa proprietà è destinata a un elemento XML che non è incluso nello spazio dei nomi predefinito, è necessario anteporre il nome dell'elemento con lo spazio dei nomi o un identificatore dello spazio dei nomi. For XML esposto tramite LINQ to XML, lo spazio dei nomi viene visualizzato tra parentesi graffe, precedute da una sequenza di escape delle parentesi graffe:  
  
```xaml  
<DataTemplate DataType="{}{http://myNamespace}Details">  
```  
  
 For XML esposto tramite XPath, il nome dell'elemento è preceduto da un identificatore dello spazio dei nomi stabilito da un'istanza di <xref:System.Windows.Data.XmlNamespaceMapping>:  
  
```xaml  
<DataTemplate DataType="mn:Details">  
```  
  
<a name="xamlAttributeUsage_DataType"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object DataType="typeName"/>  
```  
  
<a name="xamlValues_DataType"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *typeName*  
 Se il modello è destinato ai dati dell'oggetto, questa proprietà contiene il nome del tipo di oggetto dati (come una stringa). Per fare riferimento al nome del tipo della classe, utilizzare il [estensione di Markup X:Type](~/docs/framework/xaml-services/x-type-markup-extension.md). Se il modello è destinato [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] dati, questa proprietà contengano il nome dell'elemento XML. Vedere i commenti di documentazione per informazioni dettagliate sulla specifica di uno spazio dei nomi non predefinito per l'elemento XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTemplate.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As TriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerCollection ^ Triggers { System::Windows::TriggerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("VisualTree")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Template")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di trigger che applicano valori di proprietà o eseguono azioni in base a una o più condizioni.</summary>
        <value>Insieme di oggetti trigger. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si sta creando trigger all'interno di un modello di dati, i metodi di impostazione dei trigger devono impostare le proprietà che rientrano nell'ambito del modello di dati. In caso contrario, può risultare più appropriata per creare trigger utilizzando uno stile destinato al tipo che contiene i dati. Ad esempio, se si associa un <xref:System.Windows.Controls.ListBox> controllo, i contenitori sono <xref:System.Windows.Controls.ListBoxItem> oggetti. Se si utilizza per impostare le proprietà che non rientrano nell'ambito del trigger di <xref:System.Windows.DataTemplate>, potrebbe essere più adatta creare un <xref:System.Windows.Controls.ListBoxItem> di stile e creazione di trigger all'interno di tale stile. Per ulteriori informazioni, vedere ciò che appartengono a un oggetto DataTemplate? nel [panoramica dei modelli di dati](~/docs/framework/wpf/data/data-templating-overview.md).  
  
> [!NOTE]
>  Questa proprietà può essere impostata solo [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] utilizzando la sintassi di raccolta illustrato, oppure accedendo all'oggetto collection e utilizzando i vari metodi, ad esempio Add. La proprietà per accedere all'oggetto della raccolta è di sola lettura, la raccolta è in lettura / scrittura.  
  
<a name="xamlPropertyElementUsage_Triggers"></a>   
## <a name="xaml-property-element-usage"></a>Utilizzo della sintassi XAML per elementi proprietà  
  
```  
<object>  
  <object.Triggers>  
    OneOrMoreTriggers  
  </object.Triggers>  
</object>  
```  
  
<a name="xamlValues_Triggers"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *oneOrMoreTriggers*  
 Zero o più <xref:System.Windows.TriggerBase> oggetti.  
  
   
  
## Examples  
 Nell'esempio <xref:System.Windows.DataTemplate> viene illustrato come utilizzare il <xref:System.Windows.DataTemplate.Triggers%2A> proprietà.  
  
 [!code-xaml[DataBindingLab#AuctionItemDataTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemdatatemplate)]  
  
 Per l'esempio completo, vedere [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DataTrigger" />
        <altmember cref="T:System.Windows.MultiDataTrigger" />
      </Docs>
    </Member>
    <Member MemberName="ValidateTemplatedParent">
      <MemberSignature Language="C#" Value="protected override void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateTemplatedParent(class System.Windows.FrameworkElement templatedParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateTemplatedParent (templatedParent As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateTemplatedParent(System::Windows::FrameworkElement ^ templatedParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templatedParent" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="templatedParent">L'elemento al quale viene applicato questo modello.</param>
        <summary>Controlla il padre basato su modelli rispetto a un insieme di regole.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo utilizza le regole seguenti:  
  
-   Il `templatedParent` deve essere un valore non null <xref:System.Windows.FrameworkElement>.  
  
-   Il <xref:System.Windows.DataTemplate> deve essere applicato a un <xref:System.Windows.Controls.ContentPresenter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>