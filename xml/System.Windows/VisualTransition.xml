<Type Name="VisualTransition" FullName="System.Windows.VisualTransition">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f81cd6208fc4e2e0b1b7b72d6ba555eea84a7003" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36455740" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VisualTransition : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualTransition extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualTransition" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualTransition&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualTransition : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualTransition = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta il comportamento visivo che si verifica quando un controllo passa da uno stato ad un altro.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile specificare il comportamento di un controllo visivo quando esegue la transizione tra stati aggiungendo <xref:System.Windows.VisualTransition> oggetti. Quando si crea un <xref:System.Windows.VisualTransition>, si specifica uno o più delle operazioni seguenti:  
  
-   Il tempo necessario per consentire una transizione tra stati impostando il <xref:System.Windows.VisualTransition.GeneratedDuration%2A> proprietà.  
  
-   Modifiche aggiuntive nell'aspetto del controllo che si verificano al momento della transizione, impostando il <xref:System.Windows.VisualTransition.Storyboard%2A> proprietà.  
  
-   Quando il <xref:System.Windows.VisualTransition> mediante l'impostazione viene applicata la <xref:System.Windows.VisualTransition.To%2A> e <xref:System.Windows.VisualTransition.From%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Windows.VisualTransition> che specifica che quando l'utente passa il mouse dal controllo, il bordo del controllo viene modificato in blu, quindi in giallo, quindi su nero in 1,5 secondi. Per l'esempio completo, vedere [personalizzazione dell'aspetto di un controllo esistente tramite la creazione di ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualTransition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualTransition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.VisualTransition" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public string From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string From" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ From { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.From : string with get, set" Usage="System.Windows.VisualTransition.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'oggetto <see cref="T:System.Windows.VisualState" /> da cui passare.</summary>
        <value>Nome dell'oggetto <see cref="T:System.Windows.VisualState" /> da cui passare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.VisualTransition.From%2A> proprietà è facoltativa. Oggetto <xref:System.Windows.VisualTransition> possono essere limitate da applicare solo a determinati stati o può essere applicato ogni volta che il controllo passa tra stati. Per limitare l'una <xref:System.Windows.VisualTransition> mediante l'impostazione viene applicata la <xref:System.Windows.VisualTransition.To%2A> e <xref:System.Windows.VisualTransition.From%2A> proprietà. Nella tabella seguente vengono descritti i livelli di restrizione, in modo decrescente dal più restrittivo.  
  
|Tipo di restrizione|Valore di From|Valore di To|  
|-------------------------|-------------------|-----------------|  
|Da uno stato specifico un altro stato specifico|Il nome di un <xref:System.Windows.VisualState>|Il nome di un <xref:System.Windows.VisualState>|  
|Da qualsiasi stato a uno stato specifico|Non impostato|Il nome di un <xref:System.Windows.VisualState>|  
|Da uno stato specifico a qualsiasi stato|Il nome di un <xref:System.Windows.VisualState>|Non impostato|  
|Da qualsiasi stato a qualsiasi altro stato|Non impostato|Non impostato|  
  
 È possibile avere più <xref:System.Windows.VisualTransition> gli oggetti in un <xref:System.Windows.VisualStateGroup> che fanno riferimento allo stesso stato, ma verranno usati nell'ordine specificato nella tabella precedente.  
  
 È possibile modificare questo comportamento creando una nuova classe che eredita da <xref:System.Windows.VisualStateManager> ed eseguendo l'override di <xref:System.Windows.VisualStateManager.GoToStateCore%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente vengono create due <xref:System.Windows.VisualTransition> oggetti. Quando il controllo esegue la transizione dal `Pressed` allo stato di `MouseOver` stato, la <xref:System.Windows.VisualTransition> che contiene sia <xref:System.Windows.VisualTransition.From%2A> e <xref:System.Windows.VisualTransition.To%2A> set può essere usato. Quando il controllo passa da uno stato diverso da `Pressed` allo stato `MouseOver`, viene usato l'altro stato.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration GeneratedDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration GeneratedDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration GeneratedDuration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedDuration : System.Windows.Duration with get, set" Usage="System.Windows.VisualTransition.GeneratedDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tempo necessario per passare da uno stato a un altro.</summary>
        <value>Tempo necessario per passare da uno stato a un altro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile specificare la durata di una transizione tramite l'impostazione di <xref:System.Windows.VisualTransition.GeneratedDuration%2A> proprietà. Quando si imposta la <xref:System.Windows.VisualTransition.GeneratedDuration%2A> proprietà, si specifica il tempo necessario per la transizione.  
  
   
  
## Examples  
 Nell'esempio seguente specifica che il controllo accetta mezzo secondo passi al `MouseOver` dello stato. Per l'esempio completo, vedere [personalizzazione dell'aspetto di un controllo esistente tramite la creazione di ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#MouseOverTransition](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#mouseovertransition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedEasingFunction">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedEasingFunction As IEasingFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::IEasingFunction ^ GeneratedEasingFunction { System::Windows::Media::Animation::IEasingFunction ^ get(); void set(System::Windows::Media::Animation::IEasingFunction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedEasingFunction : System.Windows.Media.Animation.IEasingFunction with get, set" Usage="System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.IEasingFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una formula matematica personalizzata utilizzata per eseguire la transizione tra stati.</summary>
        <value>Formula matematica personalizzata utilizzata per eseguire la transizione tra stati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile impostare il <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> proprietà per specificare il modo in cui si verifica una transizione. Ad esempio, è possibile specificare una funzione di interpolazione per velocizzare o rallentare la transizione. Per altre informazioni, vedere [le funzioni di interpolazione](~/docs/framework/wpf/graphics-multimedia/easing-functions.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene creata una <xref:System.Windows.VisualTransition> che attiva un <xref:System.Windows.Shapes.Rectangle> per spostarsi verticalmente quando l'utente preme il pulsante del mouse sul <xref:System.Windows.Controls.Canvas>. Nell'esempio viene impostata la <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> proprietà per un <xref:System.Windows.Media.Animation.BounceEase> oggetto per fare in modo il <xref:System.Windows.Shapes.Rectangle> sembrino rimbalzo quando raggiunge la destinazione. Il <xref:System.Windows.VisualTransition> che viene utilizzato quando l'utente rilascia il pulsante dispone di un altro <xref:System.Windows.Media.Animation.BounceEase> oggetto per fare in modo il <xref:System.Windows.Shapes.Rectangle> rimbalzi prima restituisce alla relativa posizione originale.  
  
 [!code-xaml[VSMCustomControl#VSMEasingFunction](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmeasingfunction)]  
  
 Nell'esempio seguente viene illustrato il gestore dell'evento per il <xref:System.Windows.UIElement3D.MouseDown> e <xref:System.Windows.UIElement.MouseUp> eventi. Nell'esempio viene chiamato il <xref:System.Windows.VisualStateManager.GoToElementState%2A> metodo per modificare il <xref:System.Windows.VisualState> dell'area di disegno.  
  
 [!code-csharp[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#vsmeasingfunctionlogic)]
 [!code-vb[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#vsmeasingfunctionlogic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualTransition.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Windows.Media.Animation.Storyboard" /> che si verifica al momento della transizione.</summary>
        <value>Oggetto <see cref="T:System.Windows.Media.Animation.Storyboard" /> che si verifica al momento della transizione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un <xref:System.Windows.VisualTransition> contiene una <xref:System.Windows.Media.Animation.Storyboard>, la <xref:System.Windows.Media.Animation.Storyboard> viene eseguito ogni volta che il <xref:System.Windows.VisualTransition> viene applicato. Ad esempio, se si desidera che il bordo di un <xref:System.Windows.Controls.Button> per modificare i colori quando l'utente sposta il mouse dal controllo, è possibile creare un <xref:System.Windows.VisualTransition> dotato di un <xref:System.Windows.Media.Animation.Storyboard> che modifica lo sfondo del pulsante.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Windows.VisualTransition> che specifica che quando l'utente passa il mouse dal controllo, il bordo del controllo viene modificato in blu, quindi in giallo, quindi su nero in 1,5 secondi. Per l'esempio completo, vedere [personalizzazione dell'aspetto di un controllo esistente tramite la creazione di ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public string To { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string To" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.To" />
      <MemberSignature Language="VB.NET" Value="Public Property To As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ To { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.To : string with get, set" Usage="System.Windows.VisualTransition.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'oggetto <see cref="T:System.Windows.VisualState" /> a cui passare.</summary>
        <value>Nome della classe <see cref="T:System.Windows.VisualState" /> per la transizione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.VisualTransition.To%2A> proprietà è facoltativa. Oggetto <xref:System.Windows.VisualTransition> possono essere limitate da applicare solo a determinati stati o può essere applicato ogni volta che il controllo passa tra stati. Per limitare l'una <xref:System.Windows.VisualTransition> mediante l'impostazione viene applicata la <xref:System.Windows.VisualTransition.To%2A> e <xref:System.Windows.VisualTransition.From%2A> proprietà. Nella tabella seguente vengono descritti i livelli di restrizione, in modo decrescente dal più restrittivo.  
  
|Tipo di restrizione|Valore di From|Valore di To|  
|-------------------------|-------------------|-----------------|  
|Da uno stato specifico un altro stato specifico|Il nome di un <xref:System.Windows.VisualState>|Il nome di un <xref:System.Windows.VisualState>|  
|Da qualsiasi stato a uno stato specifico|Non impostato|Il nome di un <xref:System.Windows.VisualState>|  
|Da uno stato specifico a qualsiasi stato|Il nome di un <xref:System.Windows.VisualState>|Non impostato|  
|Da qualsiasi stato a qualsiasi altro stato|Non impostato|Non impostato|  
  
 È possibile avere più <xref:System.Windows.VisualTransition> gli oggetti in un <xref:System.Windows.VisualStateGroup> che fanno riferimento allo stesso stato, ma verranno usati nell'ordine specificato nella tabella precedente.  
  
 È possibile modificare questo comportamento creando una nuova classe che eredita da <xref:System.Windows.VisualStateManager> ed eseguendo l'override di <xref:System.Windows.VisualStateManager.GoToStateCore%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente vengono create due <xref:System.Windows.VisualTransition> oggetti. Quando il controllo esegue la transizione dal `Pressed` allo stato di `MouseOver` stato, la <xref:System.Windows.VisualTransition> che contiene sia <xref:System.Windows.VisualTransition.From%2A> e <xref:System.Windows.VisualTransition.To%2A> set può essere usato. Quando il controllo passa da uno stato diverso da `Pressed` allo stato `MouseOver`, viene usato l'altro stato.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>