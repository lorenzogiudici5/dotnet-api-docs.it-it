<Type Name="Style" FullName="System.Windows.Style">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="523a416c6fe9e2601b434dc8eaf2ebbb5293d4f0" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39765024" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Style : System.Windows.Threading.DispatcherObject, System.Windows.ISealable, System.Windows.Markup.IAddChild, System.Windows.Markup.INameScope, System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Style extends System.Windows.Threading.DispatcherObject implements class System.Windows.ISealable, class System.Windows.Markup.IAddChild, class System.Windows.Markup.INameScope, class System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Style" />
  <TypeSignature Language="VB.NET" Value="Public Class Style&#xA;Inherits DispatcherObject&#xA;Implements IAddChild, INameScope, IQueryAmbient, ISealable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Style : System::Windows::Threading::DispatcherObject, System::Windows::ISealable, System::Windows::Markup::IAddChild, System::Windows::Markup::INameScope, System::Windows::Markup::IQueryAmbient" />
  <TypeSignature Language="F#" Value="type Style = class&#xA;    inherit DispatcherObject&#xA;    interface INameScope&#xA;    interface IAddChild&#xA;    interface ISealable&#xA;    interface IQueryAmbient" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.ISealable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.INameScope</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IQueryAmbient</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.DictionaryKeyProperty("TargetType")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="34960-101">Abilita la condivisione di proprietà, risorse e gestori eventi tra istanze di un tipo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="34960-101">Enables the sharing of properties, resources, and event handlers between instances of a type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34960-102">È possibile impostare una <xref:System.Windows.Style> su qualsiasi elemento che deriva da <xref:System.Windows.FrameworkElement> o <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="34960-102">You can set a <xref:System.Windows.Style> on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="34960-103">Uno stile più di frequente è dichiarato come una risorsa all'interno di <xref:System.Windows.Application.Resources%2A> sezione.</span><span class="sxs-lookup"><span data-stu-id="34960-103">A style is most commonly declared as a resource inside the <xref:System.Windows.Application.Resources%2A> section.</span></span> <span data-ttu-id="34960-104">Poiché gli stili sono risorse, obbediscono alle stesse regole di ambito che si applicano a tutte le risorse, in questo caso in cui si dichiara uno stile influisce in cui può essere applicato.</span><span class="sxs-lookup"><span data-stu-id="34960-104">Because styles are resources, they obey the same scoping rules that apply to all resources, so where you declare a style affects where it can be applied.</span></span> <span data-ttu-id="34960-105">Se, ad esempio, si dichiara lo stile nell'elemento radice della definizione di applicazione [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file, lo stile può essere utilizzato in un punto qualsiasi nell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="34960-105">If, for instance, you declare the style in the root element of your application definition [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file, the style can be used anywhere in your application.</span></span> <span data-ttu-id="34960-106">Se si sta creando un'applicazione di navigazione e si dichiara lo stile in uno dell'applicazione [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file, lo stile possono essere usati solo in quel [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file.</span><span class="sxs-lookup"><span data-stu-id="34960-106">If you are creating a navigation application and declare the style in one of the application's [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] files, the style can be used only in that [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file.</span></span> <span data-ttu-id="34960-107">Per altre informazioni sulle regole per le risorse di ambito, vedere [risorse XAML](~/docs/framework/wpf/advanced/xaml-resources.md).</span><span class="sxs-lookup"><span data-stu-id="34960-107">For more information on scoping rules for resources, see [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="34960-108">La dichiarazione di stile è costituito da un <xref:System.Windows.Style> oggetto che contiene una raccolta di uno o più <xref:System.Windows.Setter> oggetti.</span><span class="sxs-lookup"><span data-stu-id="34960-108">The style declaration consists of a <xref:System.Windows.Style> object that contains a collection of one or more <xref:System.Windows.Setter> objects.</span></span> <span data-ttu-id="34960-109">Ciascuna <xref:System.Windows.Setter> è costituito da un <xref:System.Windows.Setter.Property%2A> e un <xref:System.Windows.Setter.Value%2A>.</span><span class="sxs-lookup"><span data-stu-id="34960-109">Each <xref:System.Windows.Setter> consists of a <xref:System.Windows.Setter.Property%2A> and a <xref:System.Windows.Setter.Value%2A>.</span></span> <span data-ttu-id="34960-110">La proprietà è il nome della proprietà dell'elemento di stile da applicare a.</span><span class="sxs-lookup"><span data-stu-id="34960-110">The property is the name of the property of the element the style is to apply to.</span></span> <span data-ttu-id="34960-111">Dopo che lo stile è dichiarato come una risorsa, è possibile fare riferimento esattamente come qualsiasi altra risorsa.</span><span class="sxs-lookup"><span data-stu-id="34960-111">After the style is declared as a resource, it can then be referenced just like any other resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="34960-112">Se è presente più di un setter nella raccolta di setter con lo stesso <xref:System.Windows.Setter.Property%2A> viene utilizzato per ultimo valore della proprietà, il metodo di impostazione che è dichiarato.</span><span class="sxs-lookup"><span data-stu-id="34960-112">If there is more than one setter in the setter collection with the same <xref:System.Windows.Setter.Property%2A> property value, the setter that is declared last is used.</span></span> <span data-ttu-id="34960-113">Analogamente, se si imposta un valore per la stessa proprietà in uno stile e in un elemento direttamente, il valore impostato direttamente nell'elemento ha la precedenza.</span><span class="sxs-lookup"><span data-stu-id="34960-113">Similarly, if you set a value for the same property in a style and on an element directly, the value set on the element directly takes precedence.</span></span>  
  
 <span data-ttu-id="34960-114">Il [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] modello applicazione di stili e modelli permette di manutenzione e condividere uno sguardo, nonché la separazione tra presentazione e logica.</span><span class="sxs-lookup"><span data-stu-id="34960-114">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] styling and templating model allows maintenance and sharing of a look as well as the separation of presentation and logic.</span></span> <span data-ttu-id="34960-115">Il modello di stili e modelli include una suite di funzionalità che consentono di personalizzare il [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="34960-115">The styling and templating model includes a suite of features that enable you to customize your [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="34960-116">Questa è una suite di funzionalità include i <xref:System.Windows.Style> classe nonché quanto segue:</span><span class="sxs-lookup"><span data-stu-id="34960-116">This suite of features includes the <xref:System.Windows.Style> class as well as the following:</span></span>  
  
-   <xref:System.Windows.Trigger>  
  
-   <span data-ttu-id="34960-117"><xref:System.Windows.EventTrigger> e <xref:System.Windows.Media.Animation.Storyboard></span><span class="sxs-lookup"><span data-stu-id="34960-117"><xref:System.Windows.EventTrigger> and <xref:System.Windows.Media.Animation.Storyboard></span></span>  
  
-   <xref:System.Windows.Controls.ControlTemplate>  
  
-   <xref:System.Windows.DataTemplate>  
  
 <span data-ttu-id="34960-118">Per altre informazioni, vedere [Applicazione di stili e modelli](~/docs/framework/wpf/controls/styling-and-templating.md).</span><span class="sxs-lookup"><span data-stu-id="34960-118">For more information, see [Styling and Templating](~/docs/framework/wpf/controls/styling-and-templating.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34960-119">Nell'esempio seguente viene illustrata una dichiarazione di stile che interesserà le <xref:System.Windows.Controls.Control.Background%2A> proprietà di un <xref:System.Windows.Controls.Control>.</span><span class="sxs-lookup"><span data-stu-id="34960-119">The following example shows a style declaration that will affect the <xref:System.Windows.Controls.Control.Background%2A> property of a <xref:System.Windows.Controls.Control>.</span></span>  
  
 [!code-xaml[StyleOvw01#StyleSimple](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#stylesimple)]   
  
 <span data-ttu-id="34960-120">Per applicare lo stile precedente, eseguire le operazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="34960-120">To apply the above style, do the following:</span></span>  
  
 [!code-xaml[StyleOvw01#StyleSimpleApplied](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#stylesimpleapplied)]
  
 <span data-ttu-id="34960-121">È anche possibile applicare stili a tutti gli elementi di un tipo specificato utilizzando il <xref:System.Windows.Style.TargetType%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="34960-121">You can also apply styles to all elements of a given type by using the <xref:System.Windows.Style.TargetType%2A> property.</span></span> <span data-ttu-id="34960-122">Aggiunge il tipo di destinazione per lo stile, che non è più necessario qualificare completamente la proprietà con cui si sta impostando il `ClassName.PropertyName` sintassi.</span><span class="sxs-lookup"><span data-stu-id="34960-122">Adding the target type to the style means that you no longer have to fully qualify the property you are setting with the `ClassName.PropertyName` syntax.</span></span> <span data-ttu-id="34960-123">L'esempio seguente definisce uno stile che verrà applicato a ogni <xref:System.Windows.Controls.TextBlock> elemento.</span><span class="sxs-lookup"><span data-stu-id="34960-123">The following example defines a style that will be applied to every <xref:System.Windows.Controls.TextBlock> element.</span></span>  
  
 [!code-xaml[PhotoStoreDemoStyled#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#1)]   
  
> [!NOTE]
>  <span data-ttu-id="34960-124">Molte [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controlli sono costituiti da una combinazione di altri [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controlli, in modo che la creazione di uno stile che si applica a tutti i controlli di un tipo possono avere effetti estesi.</span><span class="sxs-lookup"><span data-stu-id="34960-124">Many [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls consist of a combination of other [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls, so creating a style that applies to all controls of a type can have broad impact.</span></span> <span data-ttu-id="34960-125">Ad esempio, se si crea uno stile destinato il <xref:System.Windows.Controls.TextBlock> controlla un <xref:System.Windows.Controls.Canvas>, lo stile applicato a tutti <xref:System.Windows.Controls.TextBlock> controlli nell'area di disegno, anche se il <xref:System.Windows.Controls.TextBlock> fa parte di un altro controllo, ad esempio un <xref:System.Windows.Controls.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="34960-125">For instance, if you create a style that targets the <xref:System.Windows.Controls.TextBlock> controls in a <xref:System.Windows.Controls.Canvas>, the style is applied to all <xref:System.Windows.Controls.TextBlock> controls in the canvas, even if the <xref:System.Windows.Controls.TextBlock> is part of another control, such as a <xref:System.Windows.Controls.ListBox>.</span></span>  
  
 <span data-ttu-id="34960-126">Per informazioni su come estendere o ereditare da uno stile definito, vedere il <xref:System.Windows.Style.BasedOn%2A> pagina.</span><span class="sxs-lookup"><span data-stu-id="34960-126">For information on how to extend or inherit from a defined style, see the <xref:System.Windows.Style.BasedOn%2A> page.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="34960-127">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Style" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-127">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="34960-128">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Style" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-128">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34960-129">Questa chiamata al costruttore richiede una convalida posticipata della <xref:System.Windows.Style.TargetType%2A> e <xref:System.Windows.Style.BasedOn%2A> applicare uno stile di tipo.</span><span class="sxs-lookup"><span data-stu-id="34960-129">This constructor call requires delayed validation of <xref:System.Windows.Style.TargetType%2A> and <xref:System.Windows.Style.BasedOn%2A> style type.</span></span> <span data-ttu-id="34960-130">Se questo viene usato all'esterno del contesto del parser, il comportamento è indefinito.</span><span class="sxs-lookup"><span data-stu-id="34960-130">If this is used outside the context of the parser, behavior is undefined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style (Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style(Type ^ targetType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Style : Type -&gt; System.Windows.Style" Usage="new System.Windows.Style targetType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="targetType">
          <span data-ttu-id="34960-131">Il tipo al quale si applicherà lo stile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-131">The type to which the style will apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34960-132">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Style" /> da utilizzare sull’oggetto <see cref="T:System.Type" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-132">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class to use on the specified <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style (Type targetType, System.Windows.Style basedOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type targetType, class System.Windows.Style basedOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.#ctor(System.Type,System.Windows.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetType As Type, basedOn As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style(Type ^ targetType, System::Windows::Style ^ basedOn);" />
      <MemberSignature Language="F#" Value="new System.Windows.Style : Type * System.Windows.Style -&gt; System.Windows.Style" Usage="new System.Windows.Style (targetType, basedOn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="basedOn" Type="System.Windows.Style" />
      </Parameters>
      <Docs>
        <param name="targetType">
          <span data-ttu-id="34960-133">Il tipo al quale si applicherà lo stile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-133">The type to which the style will apply.</span>
          </span>
        </param>
        <param name="basedOn">
          <span data-ttu-id="34960-134">Lo stile sul quale basare questo stile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-134">The style to base this style on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34960-135">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Style" /> da utilizzare sull’oggetto <see cref="T:System.Type" /> specificato e basata sull’oggetto <see cref="T:System.Windows.Style" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-135">Initializes a new instance of the <see cref="T:System.Windows.Style" /> class to use on the specified <see cref="T:System.Type" /> and based on the specified <see cref="T:System.Windows.Style" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BasedOn">
      <MemberSignature Language="C#" Value="public System.Windows.Style BasedOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style BasedOn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.BasedOn" />
      <MemberSignature Language="VB.NET" Value="Public Property BasedOn As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ BasedOn { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BasedOn : System.Windows.Style with get, set" Usage="System.Windows.Style.BasedOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34960-136">Ottiene o imposta uno stile definito che è la base dello stile corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-136">Gets or sets a defined style that is the basis of the current style.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34960-137">Stile definito che è la base dello stile corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-137">A defined style that is the basis of the current style.</span>
          </span>
          <span data-ttu-id="34960-138">Il valore predefinito è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-138">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34960-139">Ogni stile supporta solo uno <xref:System.Windows.Style.BasedOn%2A> valore.</span><span class="sxs-lookup"><span data-stu-id="34960-139">Each style only supports one <xref:System.Windows.Style.BasedOn%2A> value.</span></span>  
  
<a name="xamlAttributeUsage_BasedOn"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="34960-140">Uso della sintassi XAML per gli attributi</span><span class="sxs-lookup"><span data-stu-id="34960-140">XAML Attribute Usage</span></span>  
  
```  
<object BasedOn="myStyle" .../>  
```  
  
<a name="xamlValues_BasedOn"></a>   
## <a name="xaml-values"></a><span data-ttu-id="34960-141">Valori XAML</span><span class="sxs-lookup"><span data-stu-id="34960-141">XAML Values</span></span>  
 <span data-ttu-id="34960-142">*myStyle*</span><span class="sxs-lookup"><span data-stu-id="34960-142">*myStyle*</span></span>  
 <span data-ttu-id="34960-143">Uno stile esistente.</span><span class="sxs-lookup"><span data-stu-id="34960-143">An existing style.</span></span> <span data-ttu-id="34960-144">In genere, si usa la [estensioni di Markup e XAML WPF](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md) per fare riferimento a uno stile esistente.</span><span class="sxs-lookup"><span data-stu-id="34960-144">Typically, you use the [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md) to refer to an existing style.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34960-145">Esistono vari modi in cui gli stili in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] può essere estesa o ereditata.</span><span class="sxs-lookup"><span data-stu-id="34960-145">There are several ways that styles in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] can be extended or inherited.</span></span> <span data-ttu-id="34960-146">Gli stili possono essere basati sugli altri stili tramite questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="34960-146">Styles can be based on other styles through this property.</span></span> <span data-ttu-id="34960-147">Quando si usa questa proprietà, il nuovo stile eredita i valori dello stile di originale che non vengano ridefiniti in modo esplicito nel nuovo stile.</span><span class="sxs-lookup"><span data-stu-id="34960-147">When you use this property, the new style will inherit the values of the original style that are not explicitly redefined in the new style.</span></span> <span data-ttu-id="34960-148">Nell'esempio seguente, `Style2` eredita le <xref:System.Windows.Controls.Control.Background%2A?displayProperty=nameWithType> pari a `Yellow`e aggiunge un <xref:System.Windows.Controls.Control.Foreground%2A?displayProperty=nameWithType> valore `Blue`.</span><span class="sxs-lookup"><span data-stu-id="34960-148">In the following example, `Style2` inherits the <xref:System.Windows.Controls.Control.Background%2A?displayProperty=nameWithType> value of `Yellow`, and adds a <xref:System.Windows.Controls.Control.Foreground%2A?displayProperty=nameWithType> value of `Blue`.</span></span>  
  
 [!code-xaml[StyleOvw01#ExtendingStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#extendingstyle)]   
  
 <span data-ttu-id="34960-149">Analogamente, gli stili possono basarsi sullo stile di un oggetto esistente [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] elemento, come nell'esempio seguente in cui si basa il nuovo stile sullo stile di un <xref:System.Windows.Controls.TextBlock> elemento.</span><span class="sxs-lookup"><span data-stu-id="34960-149">Similarly, styles can be based on the style of an existing [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] element, as in the following example where the new style is based on the style of a <xref:System.Windows.Controls.TextBlock> element.</span></span>  
  
 [!code-xaml[PhotoStoreDemoStyled#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#2)]   
  
> [!NOTE]
>  <span data-ttu-id="34960-150">Se si crea uno stile con un <xref:System.Windows.Style.TargetType%2A> proprietà e si basa su un altro stile che definisce anche un <xref:System.Windows.Style.TargetType%2A> proprietà, il tipo di destinazione dello stile derivato deve essere uguale o derivato dal tipo di stile di base.</span><span class="sxs-lookup"><span data-stu-id="34960-150">If you create a style with a <xref:System.Windows.Style.TargetType%2A> property and base it on another style that also defines a <xref:System.Windows.Style.TargetType%2A> property, the target type of the derived style must be the same as or be derived from the type of the base style.</span></span>  
  
 <span data-ttu-id="34960-151">Gli stili definiti per tipi specifici possono anche basarsi sugli altri stili, come nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="34960-151">Styles defined for specific types can also be based on other styles, as in the following example.</span></span>  
  
 [!code-xaml[StyleOvw01#ExtendingStyleTargetType](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#extendingstyletargettype)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int&#xA;override this.GetHashCode : unit -&gt; int" Usage="style.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="34960-152">Restituisce il codice hash per questo oggetto <see cref="T:System.Windows.Style" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-152">Returns the hash code for this <see cref="T:System.Windows.Style" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="34960-153">Codice hash per <see cref="T:System.Windows.Style" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-153">The hash code for this <see cref="T:System.Windows.Style" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSealed : bool" Usage="System.Windows.Style.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34960-154">Ottiene un valore che indica se questo stile è di sola lettura e non può essere modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-154">Gets a value that indicates whether the style is read-only and cannot be changed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34960-155">
            <see langword="true" /> se lo stile è sealed; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-155">
              <see langword="true" /> if the style is sealed; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34960-156">Uno stile è bloccato quando un altro stile basato su di esso o quando viene applicato per la prima volta.</span><span class="sxs-lookup"><span data-stu-id="34960-156">A style is sealed when another style is based on it or when it is applied for the first time.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Style.BasedOn" />
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="abstract member RegisterName : string * obj -&gt; unit&#xA;override this.RegisterName : string * obj -&gt; unit" Usage="style.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="34960-157">Nome da registrare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-157">The name to register.</span>
          </span>
        </param>
        <param name="scopedElement">
          <span data-ttu-id="34960-158">Oggetto di cui eseguire il mapping all'oggetto <c>name</c> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-158">The object to map to the specified <c>name</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34960-159">Iscrive una nuova coppia nome-oggetto nel NameScope corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-159">Registers a new name-object pair in the current namescope.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public System.Windows.ResourceDictionary Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ResourceDictionary Resources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Property Resources As ResourceDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResourceDictionary ^ Resources { System::Windows::ResourceDictionary ^ get(); void set(System::Windows::ResourceDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resources : System.Windows.ResourceDictionary with get, set" Usage="System.Windows.Style.Resources" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IHaveResources.Resources</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34960-160">Ottiene o imposta l'insieme di risorse che possono essere utilizzate all'interno dell'ambito di questo stile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-160">Gets or sets the collection of resources that can be used within the scope of this style.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34960-161">Le risorse che possono essere utilizzate all'interno dell'ambito di questo stile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-161">The resources that can be used within the scope of this style.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Resources"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="34960-162">Utilizzo della sintassi XAML per elementi proprietà</span><span class="sxs-lookup"><span data-stu-id="34960-162">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Resources>  
    oneOrMoreResourceElements  
  </object.Resources>  
</object>  
- or -   
<object>  
  <object.Resources>  
    <ResourceDictionary Source="externalDictionarySource"/>  
  </object.Resources>  
</object>  
```  
  
<a name="xamlValues_Resources"></a>   
## <a name="xaml-values"></a><span data-ttu-id="34960-163">Valori XAML</span><span class="sxs-lookup"><span data-stu-id="34960-163">XAML Values</span></span>  
 <span data-ttu-id="34960-164">*oneOrMoreResourceElements*</span><span class="sxs-lookup"><span data-stu-id="34960-164">*oneOrMoreResourceElements*</span></span>  
 <span data-ttu-id="34960-165">Uno o più elementi di risorsa.</span><span class="sxs-lookup"><span data-stu-id="34960-165">One or more resource elements.</span></span> <span data-ttu-id="34960-166">Per farvi riferimento in un secondo momento in uno [estensione di Markup StaticResource](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) oppure [estensione di Markup DynamicResource](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) sintassi in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], un elemento di risorsa deve avere un `x:Key` attributo.</span><span class="sxs-lookup"><span data-stu-id="34960-166">To be referenced later in either [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) or [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], a resource element must have an `x:Key` attribute.</span></span>  
  
 <span data-ttu-id="34960-167">\<Origine di ResourceDictionary = " *externalDictionarySource*" / ></span><span class="sxs-lookup"><span data-stu-id="34960-167">\<ResourceDictionary Source=" *externalDictionarySource*"/></span></span>  
 <span data-ttu-id="34960-168">Un'origine di dizionario esterno.</span><span class="sxs-lookup"><span data-stu-id="34960-168">An external dictionary source.</span></span> <span data-ttu-id="34960-169">Per informazioni dettagliate, vedere [dizionari risorse uniti](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).</span><span class="sxs-lookup"><span data-stu-id="34960-169">For details, see [Merged Resource Dictionaries](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seal">
      <MemberSignature Language="C#" Value="public void Seal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.Seal" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seal ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seal();" />
      <MemberSignature Language="F#" Value="member this.Seal : unit -&gt; unit" Usage="style.Seal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="34960-170">Blocca questo stile e tutte le factory e i trigger in modo che non possano essere modificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-170">Locks this style and all factories and triggers so they cannot be changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.Style.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34960-171">Ottiene un insieme di oggetti <see cref="T:System.Windows.Setter" /> e <see cref="T:System.Windows.EventSetter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-171">Gets a collection of <see cref="T:System.Windows.Setter" /> and <see cref="T:System.Windows.EventSetter" /> objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34960-172">Un insieme di oggetti <see cref="T:System.Windows.Setter" /> e <see cref="T:System.Windows.EventSetter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-172">A collection of <see cref="T:System.Windows.Setter" /> and <see cref="T:System.Windows.EventSetter" /> objects.</span>
          </span>
          <span data-ttu-id="34960-173">Il valore predefinito è una raccolta vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-173">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34960-174">Il <xref:System.Windows.Style.Setters%2A> proprietà di un <xref:System.Windows.Style> oggetto può essere costituito solo da oggetti può essere assegnati al <xref:System.Windows.SetterBase>.</span><span class="sxs-lookup"><span data-stu-id="34960-174">The <xref:System.Windows.Style.Setters%2A> property of a <xref:System.Windows.Style> object can consist only of objects assignable to <xref:System.Windows.SetterBase>.</span></span> <span data-ttu-id="34960-175">Aggiunta di un <xref:System.Windows.SetterBase> figlio a un <xref:System.Windows.Style> oggetto aggiunge in modo implicito per il <xref:System.Windows.SetterBaseCollection> per il <xref:System.Windows.Style> oggetto.</span><span class="sxs-lookup"><span data-stu-id="34960-175">Adding a <xref:System.Windows.SetterBase> child to a <xref:System.Windows.Style> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Style> object.</span></span>  
  
 <span data-ttu-id="34960-176">Utilizzo di un elemento di proprietà esplicito per <xref:System.Windows.Style.Setters%2A> anche è abbastanza comune.</span><span class="sxs-lookup"><span data-stu-id="34960-176">An explicit property element usage  for <xref:System.Windows.Style.Setters%2A> is also relatively common.</span></span> <span data-ttu-id="34960-177">Questa è una decisione di stile markup che talvolta può essere utile distinguere <xref:System.Windows.Style.Setters%2A> dal <xref:System.Windows.Style.Resources%2A> e <xref:System.Windows.Style.Triggers%2A> elementi in uno stile di complesso.</span><span class="sxs-lookup"><span data-stu-id="34960-177">This is a markup style decision that can sometimes help distinguish <xref:System.Windows.Style.Setters%2A> from <xref:System.Windows.Style.Resources%2A> and <xref:System.Windows.Style.Triggers%2A> items in a complex style.</span></span> <span data-ttu-id="34960-178">Ad esempio:</span><span class="sxs-lookup"><span data-stu-id="34960-178">For example:</span></span>  
  
```  
<Style>  
  <Style.Setters>  
    <!--one or more SetterBase derived object elements here-->  
  </Style.Setters>  
</Style>  
```  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="34960-179">Utilizzo della sintassi XAML per elementi proprietà</span><span class="sxs-lookup"><span data-stu-id="34960-179">XAML Property Element Usage</span></span>  
  
```  
<object>  
  oneOrMoreSetters  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a><span data-ttu-id="34960-180">Valori XAML</span><span class="sxs-lookup"><span data-stu-id="34960-180">XAML Values</span></span>  
 <span data-ttu-id="34960-181">*oneOrMoreSetters*</span><span class="sxs-lookup"><span data-stu-id="34960-181">*oneOrMoreSetters*</span></span>  
 <span data-ttu-id="34960-182">Uno o più <xref:System.Windows.Setter> o <xref:System.Windows.EventSetter> oggetti.</span><span class="sxs-lookup"><span data-stu-id="34960-182">One or more <xref:System.Windows.Setter> or <xref:System.Windows.EventSetter> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34960-183">Nell'esempio seguente viene illustrato come utilizzare questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="34960-183">The following example shows how to use this property.</span></span>  
  
 [!code-csharp[listboxitemstyle#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxItemStyle/CSharp/Pane1.xaml.cs#1)]
 [!code-vb[listboxitemstyle#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBoxItemStyle/VisualBasic/Pane1.xaml.vb#1)]  
  
 <span data-ttu-id="34960-184">Aggiunta di un <xref:System.Windows.SetterBase> figlio a un <xref:System.Windows.Style> oggetto aggiunge in modo implicito per il <xref:System.Windows.SetterBaseCollection> per il <xref:System.Windows.Style> oggetto.</span><span class="sxs-lookup"><span data-stu-id="34960-184">Adding a <xref:System.Windows.SetterBase> child to a <xref:System.Windows.Style> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Style> object.</span></span> <span data-ttu-id="34960-185">Quanto segue <xref:System.Windows.EventSetter> viene aggiunto implicitamente al <xref:System.Windows.SetterBaseCollection> dello stile:</span><span class="sxs-lookup"><span data-stu-id="34960-185">The following <xref:System.Windows.EventSetter> is implicitly added to the <xref:System.Windows.SetterBaseCollection> of the style:</span></span>  
  
 [!code-xaml[eventovwsupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Setter" />
        <altmember cref="T:System.Windows.EventSetter" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.CanSeal">
      <MemberSignature Language="C#" Value="bool System.Windows.ISealable.CanSeal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.ISealable.CanSeal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.System#Windows#ISealable#CanSeal" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CanSeal As Boolean Implements ISealable.CanSeal" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Windows::ISealable::CanSeal { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.ISealable.CanSeal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.IsSealed">
      <MemberSignature Language="C#" Value="bool System.Windows.ISealable.IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.ISealable.IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.System#Windows#ISealable#IsSealed" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSealed As Boolean Implements ISealable.IsSealed" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Windows::ISealable::IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.ISealable.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.Seal">
      <MemberSignature Language="C#" Value="void ISealable.Seal ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.ISealable.Seal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#ISealable#Seal" />
      <MemberSignature Language="VB.NET" Value="Sub Seal () Implements ISealable.Seal" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.ISealable.Seal() = System::Windows::ISealable::Seal;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="34960-186">Oggetto figlio da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-186">The child object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34960-187">Aggiunge un oggetto figlio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-187">Adds a child object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34960-188">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="34960-188">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="34960-189">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Style> a un'interfaccia <xref:System.Windows.Markup.IAddChild>.</span><span class="sxs-lookup"><span data-stu-id="34960-189">It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="34960-190">Testo da aggiungere all'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-190">The text to add to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34960-191">Aggiunge il contenuto di testo di un nodo all'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-191">Adds the text content of a node to the object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34960-192">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="34960-192">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="34960-193">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Style> a un'interfaccia <xref:System.Windows.Markup.IAddChild>.</span><span class="sxs-lookup"><span data-stu-id="34960-193">It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.INameScope.FindName">
      <MemberSignature Language="C#" Value="object INameScope.FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Windows.Markup.INameScope.FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#INameScope#FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindName (name As String) As Object Implements INameScope.FindName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Windows.Markup.INameScope.FindName(System::String ^ name) = System::Windows::Markup::INameScope::FindName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.FindName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="34960-194">Identificatore del nome per l'oggetto da richiedere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-194">The name identifier for the object being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34960-195">Restituisce un oggetto con il nome identificativo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-195">Returns an object that has the provided identifying name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="34960-196">Oggetto, se trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-196">The object, if found.</span>
          </span>
          <span data-ttu-id="34960-197">Restituisce <see langword="null" /> se non è stato trovato alcun oggetto di tale nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-197">Returns <see langword="null" /> if no object of that name was found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34960-198">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="34960-198">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="34960-199">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Style> a un'interfaccia <xref:System.Windows.Markup.INameScope>.</span><span class="sxs-lookup"><span data-stu-id="34960-199">It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.INameScope> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsAmbientPropertyAvailable (propertyName As String) As Boolean Implements IQueryAmbient.IsAmbientPropertyAvailable" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System::String ^ propertyName) = System::Windows::Markup::IQueryAmbient::IsAmbientPropertyAvailable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="34960-200">Nome della proprietà di ambiente richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-200">The name of the requested ambient property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34960-201">Esegue una query per determinare se una proprietà di ambiente specificata è disponibile nell'ambito corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-201">Queries whether a specified ambient property is available in the current scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="34960-202">
            <see langword="true" /> se la proprietà di ambiente richiesta è disponibile; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-202">
              <see langword="true" /> if the requested ambient property is available; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.IQueryAmbient" />
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public Type TargetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TargetType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : Type with get, set" Usage="System.Windows.Style.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34960-203">Ottiene o imposta il tipo cui è destinato questo stile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-203">Gets or sets the type for which this style is intended.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34960-204">Il tipo di destinazione per questo stile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-204">The target type for this style.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34960-205">È possibile impostare uno stile in qualsiasi elemento da cui deriva <xref:System.Windows.FrameworkElement> o <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="34960-205">You can set a style on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="34960-206">Pertanto, il tipo di destinazione può essere uno qualsiasi di tali elementi.</span><span class="sxs-lookup"><span data-stu-id="34960-206">Therefore, your target type can be any of those elements.</span></span> <span data-ttu-id="34960-207">Tuttavia, se si crea uno stile con un <xref:System.Windows.Style.TargetType%2A> proprietà e si basa su un altro stile che definisce anche un <xref:System.Windows.Style.TargetType%2A> proprietà, il tipo di destinazione dello stile derivato deve essere uguale o derivato dal tipo di destinazione dello stile di base.</span><span class="sxs-lookup"><span data-stu-id="34960-207">However, if you create a style with a <xref:System.Windows.Style.TargetType%2A> property and base it on another style that also defines a <xref:System.Windows.Style.TargetType%2A> property, the target type of the derived style must be the same as or be derived from the target type of the base style.</span></span>  
  
 <span data-ttu-id="34960-208">Se non si specifica un <xref:System.Windows.Style.TargetType%2A>, è necessario specificare un `x:Key` per il <xref:System.Windows.Style> e qualificare le proprietà nello stile con un nome di classe.</span><span class="sxs-lookup"><span data-stu-id="34960-208">If you do not specify a <xref:System.Windows.Style.TargetType%2A>, then you must specify an `x:Key` for your <xref:System.Windows.Style> and also qualify the properties in your style with a class name.</span></span>  
  
<a name="xamlAttributeUsage_TargetType"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="34960-209">Uso della sintassi XAML per gli attributi</span><span class="sxs-lookup"><span data-stu-id="34960-209">XAML Attribute Usage</span></span>  
  
```  
<object  TargetType="{x:Type typeName}"/>  
-or-  
<object  TargetType="typeName"/>  
```  
  
<a name="xamlValues_TargetType"></a>   
## <a name="xaml-values"></a><span data-ttu-id="34960-210">Valori XAML</span><span class="sxs-lookup"><span data-stu-id="34960-210">XAML Values</span></span>  
 `{x:Type ...}`  
 <span data-ttu-id="34960-211">Un' [estensione di Markup X:Type](~/docs/framework/xaml-services/x-type-markup-extension.md) utilizzo dell'estensione di markup.</span><span class="sxs-lookup"><span data-stu-id="34960-211">An [x:Type Markup Extension](~/docs/framework/xaml-services/x-type-markup-extension.md) markup extension usage.</span></span>  
  
 <span data-ttu-id="34960-212">*typeName*</span><span class="sxs-lookup"><span data-stu-id="34960-212">*typeName*</span></span>  
 <span data-ttu-id="34960-213">Il nome del tipo della classe.</span><span class="sxs-lookup"><span data-stu-id="34960-213">The type name of the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34960-214">L'esempio seguente definisce uno stile che verrà applicato a tutte le istanze del <xref:System.Windows.Controls.TextBlock> elemento.</span><span class="sxs-lookup"><span data-stu-id="34960-214">The following example defines a style that will be applied to all instances of the <xref:System.Windows.Controls.TextBlock> element.</span></span>  
  
 [!code-xaml[PhotoStoreDemoStyled#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#1)]   
  
 <span data-ttu-id="34960-215">Impostando il <xref:System.Windows.Style.TargetType%2A> proprietà per il <xref:System.Windows.Controls.TextBlock> tipo senza impostare un `x:Key` imposta in modo implicito il `x:Key` a `{x:Type TextBlock}`.</span><span class="sxs-lookup"><span data-stu-id="34960-215">Setting the <xref:System.Windows.Style.TargetType%2A> property to the <xref:System.Windows.Controls.TextBlock> type without setting an `x:Key` implicitly sets the `x:Key` to `{x:Type TextBlock}`.</span></span> <span data-ttu-id="34960-216">Ciò significa anche che se si attribuisce il precedente <xref:System.Windows.Style> un' `x:Key` valore diverso da `{x:Type TextBlock}`, il <xref:System.Windows.Style> non viene applicato a tutti <xref:System.Windows.Controls.TextBlock> elementi automaticamente.</span><span class="sxs-lookup"><span data-stu-id="34960-216">This also means that if you give the above <xref:System.Windows.Style> an `x:Key` value of anything other than `{x:Type TextBlock}`, the <xref:System.Windows.Style> would not be applied to all <xref:System.Windows.Controls.TextBlock> elements automatically.</span></span> <span data-ttu-id="34960-217">In alternativa, è necessario applicare lo stile di <xref:System.Windows.Controls.TextBlock> elementi in modo esplicito.</span><span class="sxs-lookup"><span data-stu-id="34960-217">Instead, you need to apply the style to the <xref:System.Windows.Controls.TextBlock> elements explicitly.</span></span>  
  
 <span data-ttu-id="34960-218">Molte [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controlli sono costituiti da una combinazione di altri [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controlli, in modo che la creazione di uno stile che si applica a tutti i controlli di un tipo possono avere effetti estesi.</span><span class="sxs-lookup"><span data-stu-id="34960-218">Many [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls consist of a combination of other [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls, so creating a style that applies to all controls of a type can have broad impact.</span></span> <span data-ttu-id="34960-219">Ad esempio, se si crea uno stile destinato il <xref:System.Windows.Controls.TextBox> controlla un <xref:System.Windows.Controls.Canvas>, lo stile applicato a tutti <xref:System.Windows.Controls.TextBox> controlli nell'area di disegno, anche se il <xref:System.Windows.Controls.TextBox> fa parte di un altro controllo, ad esempio un <xref:System.Windows.Controls.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="34960-219">For instance, if you create a style that targets the <xref:System.Windows.Controls.TextBox> controls in a <xref:System.Windows.Controls.Canvas>, the style is applied to all <xref:System.Windows.Controls.TextBox> controls in the canvas, even if the <xref:System.Windows.Controls.TextBox> is part of another control, such as a <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Style.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As TriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerCollection ^ Triggers { System::Windows::TriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Windows.TriggerCollection" Usage="System.Windows.Style.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34960-220">Ottiene un insieme di oggetti <see cref="T:System.Windows.TriggerBase" /> che applicano valori di proprietà in base a condizioni specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-220">Gets a collection of <see cref="T:System.Windows.TriggerBase" /> objects that apply property values based on specified conditions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34960-221">Raccolta di oggetti <see cref="T:System.Windows.TriggerBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-221">A collection of <see cref="T:System.Windows.TriggerBase" /> objects.</span>
          </span>
          <span data-ttu-id="34960-222">Il valore predefinito è una raccolta vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-222">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34960-223">Il [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] modello di applicazione di stili e modelli consente di specificare i trigger all'interno di <xref:System.Windows.Style>.</span><span class="sxs-lookup"><span data-stu-id="34960-223">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] styling and templating model enables you to specify triggers within your <xref:System.Windows.Style>.</span></span> <span data-ttu-id="34960-224">In pratica, i trigger sono oggetti che consentono di applicare le modifiche quando determinate condizioni (ad esempio quando un determinato valore di proprietà diventa `true`, o quando si verifica un evento) sono soddisfatti.</span><span class="sxs-lookup"><span data-stu-id="34960-224">Essentially, triggers are objects that enable you to apply changes when certain conditions (such as when a certain property value becomes `true`, or when an event occurs) are satisfied.</span></span>  
  
<a name="xamlPropertyElementUsage_Triggers"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="34960-225">Utilizzo della sintassi XAML per elementi proprietà</span><span class="sxs-lookup"><span data-stu-id="34960-225">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Triggers>  
    oneOrMoreTriggers  
  </object.Triggers>  
</object>  
```  
  
<a name="xamlValues_Triggers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="34960-226">Valori XAML</span><span class="sxs-lookup"><span data-stu-id="34960-226">XAML Values</span></span>  
 <span data-ttu-id="34960-227">*oneOrMoreTriggers*</span><span class="sxs-lookup"><span data-stu-id="34960-227">*oneOrMoreTriggers*</span></span>  
 <span data-ttu-id="34960-228">Zero o più elementi di oggetti che sono classi che derivano da <xref:System.Windows.TriggerBase>.</span><span class="sxs-lookup"><span data-stu-id="34960-228">Zero or more object elements that are classes deriving from <xref:System.Windows.TriggerBase>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34960-229">L'esempio seguente mostra una classe denominata <xref:System.Windows.Style> disponibili per <xref:System.Windows.Controls.Button> controlli.</span><span class="sxs-lookup"><span data-stu-id="34960-229">The following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls.</span></span> <span data-ttu-id="34960-230">Il <xref:System.Windows.Style> definisce un <xref:System.Windows.Trigger> elemento che cambia il <xref:System.Windows.Controls.Control.Foreground%2A> proprietà di un pulsante quando il <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> è di proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="34960-230">The <xref:System.Windows.Style> defines a <xref:System.Windows.Trigger> element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.</span></span>  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DataTrigger" />
        <altmember cref="T:System.Windows.EventTrigger" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Style.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterName : string -&gt; unit&#xA;override this.UnregisterName : string -&gt; unit" Usage="style.UnregisterName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.UnregisterName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="34960-231">Nome del mapping da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-231">The name of the mapping to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34960-232">Rimuove un mapping nome-oggetto dal NameScope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34960-232">Removes a name-object mapping from the namescope.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>