<Type Name="RoutedEvent" FullName="System.Windows.RoutedEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8386e651562b2710e004e3807c1fc9557c403fbd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30678575" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RoutedEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RoutedEvent extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedEvent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RoutedEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoutedEvent sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Markup.RoutedEventConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Markup.RoutedEventValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta e identifica un evento indirizzato e ne dichiara le caratteristiche.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe contiene il <xref:System.Windows.RoutedEvent.Name%2A>, <xref:System.Windows.RoutedEvent.RoutingStrategy%2A>, <xref:System.Windows.RoutedEvent.HandlerType%2A>, e <xref:System.Windows.RoutedEvent.OwnerType%2A> proprietà. Nessuno di questi membri possono avere valori null.  
  
 Questa classe ha un utilizzo XAML che è destinato esclusivamente per fornire il valore della <xref:System.Windows.EventTrigger.RoutedEvent%2A> proprietà di un <xref:System.Windows.EventTrigger> (o classe derivata) o per il <xref:System.Windows.EventSetter.Event%2A> proprietà di un <xref:System.Windows.EventSetter> (o classe derivata). Per ulteriori informazioni su <xref:System.Windows.EventTrigger>, <xref:System.Windows.EventSetter>, e gli utilizzi XAML per tali classi, vedere [indirizzato Cenni preliminari sugli eventi](~/docs/framework/wpf/advanced/routed-events-overview.md).  
  
<a name="xamlAttributeUsage_RoutedEvent"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="eventName"/>  
- or -  
<object property="type.eventName"/>  
  
```  
  
<a name="xamlValues_RoutedEvent"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *eventName*  
 Un nome di evento, equivalente al <xref:System.Windows.RoutedEvent.Name%2A> proprietà del <xref:System.Windows.RoutedEvent> campo, non il nome del membro effettivo di <xref:System.Windows.RoutedEvent> campo identificatore all'interno di un tipo. Senza qualifica, *eventName* deve essere un evento trovato nel tipo che è il nome di <xref:System.Windows.Style.TargetType%2A> di stile corrente che contiene il <xref:System.Windows.EventSetter> o <xref:System.Windows.EventTrigger>.  
  
 *type*  
 Il tipo da utilizzare per qualificare il nome dell'evento. Se fornito, senza un prefisso, *tipo* deve essere un tipo all'interno dello spazio dei nomi XAML predefinito, che possono essere mappati a un tipo CLR esistente. Per gli eventi personalizzati o gli eventi che si trovano in tipi all'esterno di nomi XAML predefinito, la stringa per *tipo* può includere un prefisso di uno spazio dei nomi XAML mappato. Tale spazio dei nomi XAML deve contenere il tipo XAML che è possibile eseguire il mapping a un tipo CLR sottostante e il tipo CLR deve definire l'identificatore dell'evento indirizzato desiderato. Per ulteriori informazioni sul mapping dello spazio dei nomi XAML, vedere [spazi dei nomi XAML e Mapping Namespace per XAML WPF](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddOwner">
      <MemberSignature Language="C#" Value="public System.Windows.RoutedEvent AddOwner (Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.RoutedEvent AddOwner(class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEvent.AddOwner(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOwner (ownerType As Type) As RoutedEvent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::RoutedEvent ^ AddOwner(Type ^ ownerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ownerType">Il tipo in cui l'evento indirizzato è aggiunto.</param>
        <summary>Associa un altro tipo di proprietario con l'evento indirizzato rappresentato da un'istanza di <see cref="T:System.Windows.RoutedEvent" /> e abilita il routing dell'evento e la relativa gestione.</summary>
        <returns>Il campo dell'identificatore per l'evento. Questo valore restituito deve essere utilizzato per impostare un campo statico pubblico di sola lettura che archivierà l'identificatore per la rappresentazione dell'evento indirizzato sul tipo che possiede. Questo campo è definito in genere con l'accesso pubblico, perché il codice utente deve fare riferimento al campo per allegare qualsiasi gestore dell'istanza per l'evento indirizzato quando si utilizza il metodo di utilità <see cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il tipo di proprietario viene utilizzato internamente durante la risoluzione di un evento in base al nome.  
  
   
  
## Examples  
 Nell'esempio seguente aggiunge la classe corrente come un altro proprietario di un evento definito in una classe diversa. In questo caso, `AnotherEditContainer` è la classe corrente e `EditStateChangedEvent` <xref:System.Windows.RoutedEvent> campo viene definito come membro di tale classe. Il `MyEditContainer` classe ha definito l'evento, registrarlo con nome identico `EditStateChangedEvent` identificatore.  
  
 [!code-csharp[ClassHandling#RoutedEventAddOwner](~/samples/snippets/csharp/VS_Snippets_Wpf/ClassHandling/CSharp/SDKSampleLibrary/class1.cs#routedeventaddowner)]
 [!code-vb[ClassHandling#RoutedEventAddOwner](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClassHandling/visualbasic/sdksamplelibrary/class1.vb#routedeventaddowner)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlerType">
      <MemberSignature Language="C#" Value="public Type HandlerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type HandlerType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEvent.HandlerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HandlerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ HandlerType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tipo di gestore dell'evento indirizzato.</summary>
        <value>Il tipo di gestore dell'evento indirizzato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il tipo di gestore è il delegato del gestore eventi che deve essere utilizzato quando l'implementazione dei gestori che saranno in ascolto per l'evento rappresentato da questo <xref:System.Windows.RoutedEvent>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEvent.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome che identifica l'evento indirizzato.</summary>
        <value>Nome dell'evento indirizzato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il nome di un evento indirizzato deve essere univoco all'interno di ogni tipo di proprietario, ma non è necessario che sia globalmente univoco.  
  
 Il valore di questa proprietà deriva dal <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> metodo che definisce un <xref:System.Windows.RoutedEvent>. In particolare, il valore di <xref:System.Windows.RoutedEvent.Name%2A> è il `name` valore del parametro passato a <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="OwnerType">
      <MemberSignature Language="C#" Value="public Type OwnerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type OwnerType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEvent.OwnerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ OwnerType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tipo di proprietario registrato dell'evento indirizzato.</summary>
        <value>Il tipo di proprietario dell'evento indirizzato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo tipo può essere qualsiasi tipo di oggetto, non necessariamente limitato a <xref:System.Windows.DependencyObject>. In caso di eventi indirizzati che hanno proprietari aggiunti, questa proprietà restituisce il primo proprietario dichiarato.  
  
 Il valore di questa proprietà deriva dal <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> metodo che definisce un <xref:System.Windows.RoutedEvent>. In particolare, il valore di <xref:System.Windows.RoutedEvent.OwnerType%2A> è il `ownerType` valore del parametro passato a <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="RoutingStrategy">
      <MemberSignature Language="C#" Value="public System.Windows.RoutingStrategy RoutingStrategy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.RoutingStrategy RoutingStrategy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEvent.RoutingStrategy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoutingStrategy As RoutingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::RoutingStrategy RoutingStrategy { System::Windows::RoutingStrategy get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la strategia del routing dell'evento indirizzato.</summary>
        <value>Uno dei valori di enumerazione. Il valore è l’impostazione predefinita di enumerazione <see cref="F:System.Windows.RoutingStrategy.Bubble" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per convenzione, gli eventi indirizzati di tunneling presentano il prefisso del nome "Anteprima" e un evento associato di bubbling definito. Dovrebbe essere raro che deve essere presente solo una versione di tunneling e non una versione di bubbling corrispondente. Per ulteriori informazioni, vedere [procedura: creare un evento indirizzato personalizzato](~/docs/framework/wpf/advanced/how-to-create-a-custom-routed-event.md).  
  
 Il valore di questa proprietà deriva dal <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> metodo che definisce un <xref:System.Windows.RoutedEvent>. In particolare, il valore di <xref:System.Windows.RoutedEvent.RoutingStrategy%2A> è il `routingStrategy` valore del parametro passato a <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEvent.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce la rappresentazione della stringa di questo oggetto <see cref="T:System.Windows.RoutedEvent" />.</summary>
        <returns>Una rappresentazione della stringa per questo oggetto che è identica al valore restituito da <see cref="P:System.Windows.RoutedEvent.Name" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>