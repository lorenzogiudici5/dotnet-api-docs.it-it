<Type Name="LocalValueEnumerator" FullName="System.Windows.LocalValueEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6ec629675688af65632301370015ffad0f9568c3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30677945" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct LocalValueEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LocalValueEnumerator extends System.ValueType implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LocalValueEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure LocalValueEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public value class LocalValueEnumerator : System::Collections::IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="94b8b-101">Fornisce il supporto di enumerazione per i valori locali di qualsiasi proprietà di dipendenza presente in un oggetto <see cref="T:System.Windows.DependencyObject" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="94b8b-101">Provides enumeration support for the local values of any dependency properties that exist on a <see cref="T:System.Windows.DependencyObject" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94b8b-102">Oggetto *valore locale* è un valore per una proprietà di dipendenza che è stato impostato direttamente su una proprietà di dipendenza, chiamando <xref:System.Windows.DependencyObject.SetValue%2A>, o, più comunemente utilizzando la funzione di accesso set di un [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] wrapper della proprietà che chiama <xref:System.Windows.DependencyObject.SetValue%2A> internamente.</span><span class="sxs-lookup"><span data-stu-id="94b8b-102">A *local value* is a value for a dependency property that was set directly on a dependency property, by calling <xref:System.Windows.DependencyObject.SetValue%2A>, or more typically by using the set accessor of a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] property wrapper that calls <xref:System.Windows.DependencyObject.SetValue%2A> internally.</span></span> <span data-ttu-id="94b8b-103">Esempi di altri fattori determinanti sistema di proprietà che non sono valori locali sono valori impostati tramite gli stili o valori predefiniti della proprietà di dipendenza.</span><span class="sxs-lookup"><span data-stu-id="94b8b-103">Examples of other property system determinants that are not local values are values set through styles, or dependency property default values.</span></span> <span data-ttu-id="94b8b-104">Per altri dettagli, vedere [Precedenza del valore della proprietà di dipendenza](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="94b8b-104">For details, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 <span data-ttu-id="94b8b-105">Oggetto <xref:System.Windows.LocalValueEnumerator> restituito dal <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> (metodo) e implementa il <xref:System.Collections.IEnumerator> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="94b8b-105">A <xref:System.Windows.LocalValueEnumerator> is returned by the <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> method and implements the <xref:System.Collections.IEnumerator> interface.</span></span> <span data-ttu-id="94b8b-106">Pubblica <xref:System.Windows.LocalValueEnumerator> costruttore inesistente; pertanto, è necessario chiamare <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> per ottenere un'istanza di questa classe.</span><span class="sxs-lookup"><span data-stu-id="94b8b-106">A public <xref:System.Windows.LocalValueEnumerator> constructor does not exist; therefore, you must call <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> to obtain an instance of this class.</span></span>  
  
 <span data-ttu-id="94b8b-107">Non modificare i valori locali (chiamando <xref:System.Windows.DependencyObject.SetValue%2A> o <xref:System.Windows.DependencyObject.ClearValue%2A>) durante l'enumerazione dei valori locali.</span><span class="sxs-lookup"><span data-stu-id="94b8b-107">Do not modify local values (by calling <xref:System.Windows.DependencyObject.SetValue%2A> or <xref:System.Windows.DependencyObject.ClearValue%2A>) while enumerating local values.</span></span> <span data-ttu-id="94b8b-108">Se si modifica o deselezionare i valori delle proprietà in base alle proprietà che vengono restituite dall'enumeratore, la modifica o operazioni di cancellazione non invalidano l'enumeratore insieme, come avviene per molti <xref:System.Collections.IEnumerator> implementazioni.</span><span class="sxs-lookup"><span data-stu-id="94b8b-108">If you change or clear the property values based on properties that are returned by the enumerator, the change or clear operations do not invalidate the enumerator collection, as is the case for many <xref:System.Collections.IEnumerator> implementations.</span></span> <span data-ttu-id="94b8b-109">Inoltre, la visualizzazione dell'enumeratore è uno snapshot.</span><span class="sxs-lookup"><span data-stu-id="94b8b-109">Also, the enumerator view is a snapshot.</span></span> <span data-ttu-id="94b8b-110">Una modifica alla raccolta non deve necessariamente essere thread-safe, e viene applicato alcun blocco.</span><span class="sxs-lookup"><span data-stu-id="94b8b-110">A change to the collection is not guaranteed to be thread safe, and no lock is enforced.</span></span> <span data-ttu-id="94b8b-111">Altri thread ancora libero accesso ai valori locali da un contesto diverso dall'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="94b8b-111">Other threads still have free access to the local values from a context other than the enumerator.</span></span>  
  
 <span data-ttu-id="94b8b-112">Utilizzare questo tipo se sono presenti operazioni nella classe in cui è importante sapere se un valore della proprietà proviene da un valore locale.</span><span class="sxs-lookup"><span data-stu-id="94b8b-112">Use this type if you have operations in your class where it is important to know whether a property's value came from a local value.</span></span> <span data-ttu-id="94b8b-113">Ad esempio, utilizzare questo tipo in un <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementazione, o in cui si desidera eseguire query sui metadati in tutti localmente impostarla le proprietà.</span><span class="sxs-lookup"><span data-stu-id="94b8b-113">For example, use this type in an <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementation, or where you want to query the metadata on all locally set properties.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyObject" />
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEnumerator.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94b8b-114">Ottiene il numero di elementi rappresentati nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-114">Gets the number of items that are represented in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94b8b-115">Numero di elementi nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-115">The number of items in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94b8b-116">Questa proprietà non è un membro definito di <xref:System.Collections.IEnumerator> ma viene fornita per praticità.</span><span class="sxs-lookup"><span data-stu-id="94b8b-116">This property is not a defined member of <xref:System.Collections.IEnumerator> but is provided as a convenience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.LocalValueEntry Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LocalValueEntry Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As LocalValueEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::LocalValueEntry Current { System::Windows::LocalValueEntry get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LocalValueEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94b8b-117">Ottiene l'elemento corrente della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-117">Gets the current element in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94b8b-118">
            <see cref="T:System.Windows.LocalValueEntry" /> corrente presente nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-118">The current <see cref="T:System.Windows.LocalValueEntry" /> in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94b8b-119">Questa versione della proprietà accessibile in genere si basa su uno snapshot della raccolta che viene eseguita al momento della creazione.</span><span class="sxs-lookup"><span data-stu-id="94b8b-119">This generally accessible version of the property relies on a snapshot of the collection that is taken at creation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="94b8b-120">Oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> da confrontare con l'oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-120">The <see cref="T:System.Windows.LocalValueEnumerator" /> to compare with the current <see cref="T:System.Windows.LocalValueEnumerator" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94b8b-121">Determina se l'oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> fornito equivale a questo oggetto <see cref="T:System.Windows.LocalValueEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-121">Determines whether the provided <see cref="T:System.Windows.LocalValueEnumerator" /> is equivalent to this <see cref="T:System.Windows.LocalValueEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94b8b-122">
            <see langword="true" /> se l'oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> specificato è uguale all'oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> corrente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-122">
              <see langword="true" /> if the specified <see cref="T:System.Windows.LocalValueEnumerator" /> is equal to the current <see cref="T:System.Windows.LocalValueEnumerator" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94b8b-123">Questa implementazione supporta solo l'uguaglianza dei riferimenti.</span><span class="sxs-lookup"><span data-stu-id="94b8b-123">This implementation supports reference equality only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94b8b-124">Restituisce un codice hash per l'oggetto <see cref="T:System.Windows.LocalValueEnumerator" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-124">Returns a hash code for the current <see cref="T:System.Windows.LocalValueEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94b8b-125">Codice hash di valori interi a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-125">A 32-bit integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94b8b-126">Sposta l'enumeratore all'elemento successivo della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-126">Advances the enumerator to the next element of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94b8b-127">
            <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-127">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.LocalValueEnumerator obj1, valuetype System.Windows.LocalValueEnumerator obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (obj1 As LocalValueEnumerator, obj2 As LocalValueEnumerator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::LocalValueEnumerator obj1, System::Windows::LocalValueEnumerator obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Windows.LocalValueEnumerator" />
        <Parameter Name="obj2" Type="System.Windows.LocalValueEnumerator" />
      </Parameters>
      <Docs>
        <param name="obj1">
          <span data-ttu-id="94b8b-128">Primo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-128">The first object to compare.</span>
          </span>
        </param>
        <param name="obj2">
          <span data-ttu-id="94b8b-129">Secondo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-129">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94b8b-130">Confronta due oggetti <see cref="T:System.Windows.LocalValueEnumerator" /> specificati per verificare se sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-130">Compares whether two specified <see cref="T:System.Windows.LocalValueEnumerator" /> objects are the same.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94b8b-131">
            <see langword="true" /> se <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEnumerator" /> è uguale a <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEnumerator" />. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-131">
              <see langword="true" /> if the <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEnumerator" /> is equal to the <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEnumerator" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94b8b-132">Questa implementazione supporta solo l'uguaglianza dei riferimenti.</span><span class="sxs-lookup"><span data-stu-id="94b8b-132">This implementation supports reference equality only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.LocalValueEnumerator obj1, valuetype System.Windows.LocalValueEnumerator obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (obj1 As LocalValueEnumerator, obj2 As LocalValueEnumerator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::LocalValueEnumerator obj1, System::Windows::LocalValueEnumerator obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Windows.LocalValueEnumerator" />
        <Parameter Name="obj2" Type="System.Windows.LocalValueEnumerator" />
      </Parameters>
      <Docs>
        <param name="obj1">
          <span data-ttu-id="94b8b-133">Primo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-133">The first object to compare.</span>
          </span>
        </param>
        <param name="obj2">
          <span data-ttu-id="94b8b-134">Secondo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-134">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94b8b-135">Confronta due oggetti <see cref="T:System.Windows.LocalValueEnumerator" /> specificati per determinare se sono diversi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-135">Compares two specified <see cref="T:System.Windows.LocalValueEnumerator" /> objects to determine whether they are not the same.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94b8b-136">
            <see langword="true" /> se le istanze non sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-136">
              <see langword="true" /> if the instances are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94b8b-137">Questa implementazione supporta solo l'uguaglianza dei riferimenti.</span><span class="sxs-lookup"><span data-stu-id="94b8b-137">This implementation supports reference equality only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94b8b-138">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-138">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94b8b-139">Per una descrizione di questo membro, vedere <see cref="P:System.Collections.IEnumerator.Current" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-139">For a description of this members, see <see cref="P:System.Collections.IEnumerator.Current" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94b8b-140">Elemento corrente nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b8b-140">The current element in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94b8b-141">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="94b8b-141">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="94b8b-142">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.LocalValueEnumerator> a un'interfaccia <xref:System.Collections.IEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="94b8b-142">It can be used only when the <xref:System.Windows.LocalValueEnumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.LocalValueEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>