<Type Name="ViewTechnology" FullName="System.ComponentModel.Design.ViewTechnology">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fc9c23253cbc09cc29b28970c3f06961d8964b04" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36705245" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ViewTechnology" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ViewTechnology extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ViewTechnology" />
  <TypeSignature Language="VB.NET" Value="Public Enum ViewTechnology" />
  <TypeSignature Language="C++ CLI" Value="public enum class ViewTechnology" />
  <TypeSignature Language="F#" Value="type ViewTechnology = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definisce gli identificatori per un insieme di tecnologie supportate dagli host di progettazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il modello della scheda visualizzazione sostituisce e aggiunge la funzionalità per la <xref:System.ComponentModel.Design.ViewTechnology> funzionalità; tuttavia, il <xref:System.ComponentModel.Design.ViewTechnology> funzionalità viene mantenuto per compatibilità con le versioni precedenti e per eventuale uso futuro, se si sceglie. Per altre informazioni, vedere la sezione ".NET forma libreria: a esempio progettazione" nella Knowledge Base di Windows Form in http://windowsforms.net/articles/shapedesigner.aspx.  
  
 <xref:System.ComponentModel.Design.ViewTechnology> Definisce gli identificatori che possono indicare la modalità da utilizzare per controllare la visualizzazione di un documento di progettazione ospitato.  
  
 Utilizzare solo il valore predefinito nell'ambiente host della finestra di progettazione. Nelle versioni precedenti del [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], il <xref:System.ComponentModel.Design.ViewTechnology.Default> enumerazione specificato il tipo di modello dell'interfaccia utente supportato da una finestra di progettazione radice. Poiché questo modello non è estendibile, è consigliabile utilizzare invece un *adattatore visualizzazione* modello. Un adattatore di visualizzazione è un tipo che si adatta a un oggetto di uno tipo a un altro.  
  
 Ad esempio, una finestra di progettazione HTML potrebbe restituire un `DemoDOM` albero come visualizzazione. Finestra di progettazione HTML restituisce una tecnologia di visualizzazione del valore predefinito. Un ambiente di hosting di Windows Form avrebbe una o più classi di adapter visualizzazione disponibile. Se una di tali classi è stato possibile convertire il `DemoDOM` in un controllo Windows Form, l'applicazione host può supportare questo tipo di finestra di progettazione. Se nessun adapter può gestire il tipo di dati restituito dalla finestra di progettazione <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> metodo, il caricamento della finestra di progettazione avrà esito negativo e l'utente visualizzerà un errore.  
  
 Visual Studio è uno schema estensibile per fornire adattatori di visualizzazione, è possibile adattarsi a qualsiasi tecnologia dell'interfaccia utente. I provider di tecnologia di terze parti offrono anche un adattatore di visualizzazione appropriata e i relativi modelli a oggetti vengono immediatamente utilizzabile.  
  
 Per un esempio che utilizza adattatori di visualizzazione, vedere la sezione ".NET forma libreria: a esempio progettazione" nella Knowledge Base di Windows Form in http://windowsforms.net/articles/shapedesigner.aspx.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.ComponentModel.Design.ViewTechnology.Default> classe in una finestra di progettazione. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> interfaccia.  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Default = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 2" Usage="System.ComponentModel.Design.ViewTechnology.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Specifica il supporto di tecnologia di visualizzazione predefinito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Finestra di progettazione radice può restituire qualsiasi tipo di oggetto, ma l'oggetto deve essere compatibile con un adattatore per la tecnologia dell'host. Gli ambienti di hosting, ad esempio Visual Studio consentono di inserire nuovi adapter la tecnologia di visualizzazione. L'oggetto di visualizzazione predefinito per la finestra di progettazione Windows Form è un <xref:System.Windows.Forms.Control?displayProperty=nameWithType> istanza.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.ComponentModel.Design.ViewTechnology> classe in una finestra di progettazione. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.ComponentModel.Design.IRootDesigner> interfaccia.  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Passthrough">
      <MemberSignature Language="C#" Value="Passthrough" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Passthrough = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Passthrough" />
      <MemberSignature Language="VB.NET" Value="Passthrough" />
      <MemberSignature Language="C++ CLI" Value="Passthrough" />
      <MemberSignature Language="F#" Value="Passthrough = 0" Usage="System.ComponentModel.Design.ViewTechnology.Passthrough" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Rappresenta una modalità in cui l'oggetto visualizzazione viene passato direttamente all'ambiente di sviluppo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto visualizzazione deve implementare le interfacce che richiede l'ambiente di sviluppo. Ambiente di sviluppo di Visual Studio supporta oggetti di visualizzazione di un controllo ActiveX, documento attivo o un oggetto che implementa l'interfaccia IVsWindowPane è disponibile tramite il programma di Visual Studio VSI (integrazione di Visual Studio). Ambiente di sviluppo di Visual Studio fornisce supporto per questa tecnologia di visualizzazione. Supporto per questa tecnologia di visualizzazione non è necessariamente disponibile in tutti gli ambienti di sviluppo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForms">
      <MemberSignature Language="C#" Value="WindowsForms" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology WindowsForms = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.WindowsForms" />
      <MemberSignature Language="VB.NET" Value="WindowsForms" />
      <MemberSignature Language="C++ CLI" Value="WindowsForms" />
      <MemberSignature Language="F#" Value="WindowsForms = 1" Usage="System.ComponentModel.Design.ViewTechnology.WindowsForms" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Rappresenta una modalità in cui un oggetto controllo Windows Form fornisce la visualizzazione per la finestra di progettazione di primo livello.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'host di progettazione riempie la finestra di documento dell'ambiente di sviluppo con il controllo Windows Form.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.ComponentModel.Design.ViewTechnology> classe in una finestra di progettazione. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.ComponentModel.Design.LocalizationExtenderProvider> classe.  
  
 [!code-cpp[LocalizationExtenderProviderExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CPP/class1.cpp#1)]
 [!code-csharp[LocalizationExtenderProviderExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CS/class1.cs#1)]
 [!code-vb[LocalizationExtenderProviderExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LocalizationExtenderProviderExample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>