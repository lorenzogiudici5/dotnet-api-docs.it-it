<Type Name="ViewTechnology" FullName="System.ComponentModel.Design.ViewTechnology">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6053936d37892de14f1df98f478e1a2bf354997b" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52605610" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ViewTechnology" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ViewTechnology extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ViewTechnology" />
  <TypeSignature Language="VB.NET" Value="Public Enum ViewTechnology" />
  <TypeSignature Language="C++ CLI" Value="public enum class ViewTechnology" />
  <TypeSignature Language="F#" Value="type ViewTechnology = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definisce gli identificatori per un insieme di tecnologie supportate dagli host di progettazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il modello della scheda Vista sostituisce e aggiunge funzionalità per la <xref:System.ComponentModel.Design.ViewTechnology> funzionalità; tuttavia, il <xref:System.ComponentModel.Design.ViewTechnology> funzionalità viene mantenuto per compatibilità con le versioni precedenti e per un uso futuro, se si sceglie. Per altre informazioni, vedere ".NET forma libreria: a esempio Designer" nella Knowledge Base di Windows Form al http://windowsforms.net/articles/shapedesigner.aspx.  
  
 <xref:System.ComponentModel.Design.ViewTechnology> Definisce gli identificatori che possono indicare la modalità da usare per controllare la visualizzazione di un documento di progettazione ospitato.  
  
 Utilizzare solo il valore predefinito nell'ambiente di hosting della finestra di progettazione. Nelle versioni precedenti del [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], il <xref:System.ComponentModel.Design.ViewTechnology.Default> enumerazione specificato il tipo di modello di interfaccia utente supportato da una finestra di progettazione radice. Poiché questo modello non è estensibile, è necessario usare invece un *adattatore della visualizzazione* modello. Un adattatore della visualizzazione è un tipo che si adatta a un oggetto di uno tipo a un altro.  
  
 Ad esempio, potrebbe restituire una finestra di progettazione HTML un `DemoDOM` albero come relativa visualizzazione. Finestra di progettazione HTML restituisce una tecnologia di visualizzazione del valore predefinito. Un controllo Windows Form ambiente host avrà uno o più classi di adattatore visualizzazione disponibili. Se una di tali classi è stato possibile convertire il `DemoDOM` in un controllo Windows Form, l'applicazione host può supportare questo tipo di finestra di progettazione. Se nessun adapter può gestire il tipo di dati restituito dalla finestra di progettazione <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> metodo, il caricamento della finestra di progettazione avrà esito negativo e l'utente verrà visualizzato un errore.  
  
 Visual Studio offre uno schema estensibile per fornire gli adattatori di visualizzazione, può adattarsi a qualsiasi tecnologia dell'interfaccia utente. Ai fornitori di tecnologie di terze parti possono anche offrire un adattatore della visualizzazione appropriati e i relativi modelli di oggetto possono essere utilizzati immediatamente.  
  
 Per un esempio che utilizza adattatori di visualizzazione, vedere ".NET forma libreria: a esempio Designer" nella Knowledge Base di Windows Form al http://windowsforms.net/articles/shapedesigner.aspx.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.ComponentModel.Design.ViewTechnology.Default> classe in una finestra di progettazione. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> interfaccia.  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Default = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 2" Usage="System.ComponentModel.Design.ViewTechnology.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Specifica il supporto di tecnologia di visualizzazione predefinito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Finestra di progettazione radice può restituire qualsiasi tipo di oggetto, ma l'oggetto deve essere compatibile con un adattatore per la tecnologia dell'host. Gli ambienti di hosting, ad esempio Visual Studio forniscono un modo per inserire nuovi adapter la tecnologia di visualizzazione. L'oggetto di visualizzazione predefinito per la finestra di progettazione Windows Form è un <xref:System.Windows.Forms.Control?displayProperty=nameWithType> istanza.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.ComponentModel.Design.ViewTechnology> classe in una finestra di progettazione. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.ComponentModel.Design.IRootDesigner> interfaccia.  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Passthrough">
      <MemberSignature Language="C#" Value="Passthrough" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Passthrough = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Passthrough" />
      <MemberSignature Language="VB.NET" Value="Passthrough" />
      <MemberSignature Language="C++ CLI" Value="Passthrough" />
      <MemberSignature Language="F#" Value="Passthrough = 0" Usage="System.ComponentModel.Design.ViewTechnology.Passthrough" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Rappresenta una modalità in cui l'oggetto visualizzazione viene passato direttamente all'ambiente di sviluppo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto visualizzazione deve implementare le interfacce che richiede l'ambiente di sviluppo. L'ambiente di sviluppo di Visual Studio supporta gli oggetti di visualizzazione che sono un controllo ActiveX, documento attivo o un oggetto che implementa l'interfaccia IVsWindowPane è disponibile tramite il programma Visual Studio VSI (integrazione con Visual Studio). L'ambiente di sviluppo di Visual Studio fornisce supporto per questa tecnologia di visualizzazione. Supporto per questa tecnologia di visualizzazione non è necessariamente disponibile in tutti gli ambienti di sviluppo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForms">
      <MemberSignature Language="C#" Value="WindowsForms" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology WindowsForms = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.WindowsForms" />
      <MemberSignature Language="VB.NET" Value="WindowsForms" />
      <MemberSignature Language="C++ CLI" Value="WindowsForms" />
      <MemberSignature Language="F#" Value="WindowsForms = 1" Usage="System.ComponentModel.Design.ViewTechnology.WindowsForms" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Rappresenta una modalità in cui un oggetto controllo Windows Form fornisce la visualizzazione per la finestra di progettazione di primo livello.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'host di progettazione riempie la finestra di documento di ambiente di sviluppo con il controllo Windows Form.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.ComponentModel.Design.ViewTechnology> classe in una finestra di progettazione. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.ComponentModel.Design.LocalizationExtenderProvider> classe.  
  
 [!code-cpp[LocalizationExtenderProviderExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CPP/class1.cpp#1)]
 [!code-csharp[LocalizationExtenderProviderExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CS/class1.cs#1)]
 [!code-vb[LocalizationExtenderProviderExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LocalizationExtenderProviderExample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>