<Type Name="ComponentDesigner" FullName="System.ComponentModel.Design.ComponentDesigner">
  <TypeSignature Language="C#" Value="public class ComponentDesigner : IDisposable, System.ComponentModel.Design.IComponentInitializer, System.ComponentModel.Design.IDesigner, System.ComponentModel.Design.IDesignerFilter, System.ComponentModel.Design.ITreeDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentDesigner extends System.Object implements class System.ComponentModel.Design.IComponentInitializer, class System.ComponentModel.Design.IDesigner, class System.ComponentModel.Design.IDesignerFilter, class System.ComponentModel.Design.ITreeDesigner, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentDesigner&#xA;Implements IComponentInitializer, IDesigner, IDesignerFilter, IDisposable, ITreeDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentDesigner : IDisposable, System::ComponentModel::Design::IComponentInitializer, System::ComponentModel::Design::IDesigner, System::ComponentModel::Design::IDesignerFilter, System::ComponentModel::Design::ITreeDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IComponentInitializer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesignerFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.ITreeDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="90aec-101">Estende il comportamento della modalità progettazione di un componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-101">Extends the design mode behavior of a component.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-102">La <xref:System.ComponentModel.Design.ComponentDesigner> classe base di progettazione fornisce una semplice finestra di progettazione che è possibile estendere il comportamento di un componente associato in modalità progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-102">The <xref:System.ComponentModel.Design.ComponentDesigner> base designer class provides a simple designer that can extend the behavior of an associated component in design mode.</span></span>  
  
 <span data-ttu-id="90aec-103"><xref:System.ComponentModel.Design.ComponentDesigner> fornisce un oggetto vuoto <xref:System.ComponentModel.Design.IDesignerFilter> implementazione, i cui metodi possono essere sottoposto a override per modificare gli attributi, proprietà ed eventi del componente associato in fase di progettazione dell'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="90aec-103"><xref:System.ComponentModel.Design.ComponentDesigner> provides an empty <xref:System.ComponentModel.Design.IDesignerFilter> interface implementation, whose methods can be overridden to adjust the attributes, properties and events of the associated component at design time.</span></span>  
  
 <span data-ttu-id="90aec-104">È possibile associare una finestra di progettazione con un tipo usando un <xref:System.ComponentModel.DesignerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="90aec-104">You can associate a designer with a type using a <xref:System.ComponentModel.DesignerAttribute>.</span></span> <span data-ttu-id="90aec-105">Per una panoramica della personalizzazione del comportamento in fase di progettazione, vedere [estensione supporto in fase di progettazione](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).</span><span class="sxs-lookup"><span data-stu-id="90aec-105">For an overview of customizing design-time behavior, see [Extending Design-Time Support](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).</span></span>  
  
 <span data-ttu-id="90aec-106">Il <xref:System.ComponentModel.Design.ComponentDesigner> implementa un comportamento speciale per i descrittori di proprietà dei componenti ereditati.</span><span class="sxs-lookup"><span data-stu-id="90aec-106">The <xref:System.ComponentModel.Design.ComponentDesigner> class implements a special behavior for the property descriptors of inherited components.</span></span> <span data-ttu-id="90aec-107">Un tipo interno denominato `InheritedPropertyDescriptor` viene utilizzato il valore predefinito <xref:System.ComponentModel.Design.ComponentDesigner> implementazione per sostituire le proprietà ereditate da una classe base.</span><span class="sxs-lookup"><span data-stu-id="90aec-107">An internal type named `InheritedPropertyDescriptor` is used by the default <xref:System.ComponentModel.Design.ComponentDesigner> implementation to stand in for properties that are inherited from a base class.</span></span> <span data-ttu-id="90aec-108">Esistono due casi in cui vengono aggiunti i descrittori di proprietà.</span><span class="sxs-lookup"><span data-stu-id="90aec-108">There are two cases in which these property descriptors are added.</span></span>  
  
1.  <span data-ttu-id="90aec-109">Per l'oggetto radice stesso, restituito dal <xref:System.ComponentModel.Design.IDesignerHost.RootComponent%2A?displayProperty=nameWithType> proprietà, perché sta ereditando dalla classe base.</span><span class="sxs-lookup"><span data-stu-id="90aec-109">To the root object itself, which is returned by the <xref:System.ComponentModel.Design.IDesignerHost.RootComponent%2A?displayProperty=nameWithType> property, because you are inheriting from its base class.</span></span>  
  
2.  <span data-ttu-id="90aec-110">Per i campi trovati nella classe di base dell'oggetto radice.</span><span class="sxs-lookup"><span data-stu-id="90aec-110">To fields found in the base class of the root object.</span></span> <span data-ttu-id="90aec-111">I campi pubblici e protetti della classe base vengono aggiunti alla finestra di progettazione in modo che possano essere modificati dall'utente.</span><span class="sxs-lookup"><span data-stu-id="90aec-111">Public and protected fields from the base class are added to the designer so that they can be manipulated by the user.</span></span>  
  
 <span data-ttu-id="90aec-112">La `InheritedPropertyDescriptor` classe modifica il valore predefinito di una proprietà, in modo che il valore predefinito è il valore corrente nella creazione di istanze di oggetto.</span><span class="sxs-lookup"><span data-stu-id="90aec-112">The `InheritedPropertyDescriptor` class modifies the default value of a property, so that the default value is the current value at object instantiation.</span></span> <span data-ttu-id="90aec-113">Questo avviene perché la proprietà viene ereditata da un'altra istanza.</span><span class="sxs-lookup"><span data-stu-id="90aec-113">This is because the property is inherited from another instance.</span></span> <span data-ttu-id="90aec-114">La finestra di progettazione definisce reimpostare il valore della proprietà come impostazione per il valore che è stata impostata dalla classe ereditata.</span><span class="sxs-lookup"><span data-stu-id="90aec-114">The designer defines resetting the property value as setting it to the value that was set by the inherited class.</span></span> <span data-ttu-id="90aec-115">Questo valore può essere diverso da quello predefinito archiviato nei metadati.</span><span class="sxs-lookup"><span data-stu-id="90aec-115">This value may differ from the default value stored in metadata.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90aec-116">Esempio di codice seguente viene fornito un esempio <xref:System.ComponentModel.Design.ComponentDesigner> implementazione e un esempio di componente associato alla finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-116">The following code example provides an example <xref:System.ComponentModel.Design.ComponentDesigner> implementation and an example component associated with the designer.</span></span> <span data-ttu-id="90aec-117">La finestra di progettazione implementa un override del <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> metodo che chiama il metodo base `Initialize` (metodo), un override del <xref:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction%2A> metodo che visualizza un <xref:System.Windows.Forms.MessageBox> quando il componente si fa doppio clic e un override del <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> funzione di accesso alle proprietà che fornisce un oggetto personalizzato <xref:System.ComponentModel.Design.DesignerVerb> comando di menu di scelta rapida per il componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-117">The designer implements an override of the <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method that calls the base `Initialize` method, an override of the <xref:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction%2A> method that displays a <xref:System.Windows.Forms.MessageBox> when the component is double-clicked, and an override of the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property accessor that supplies a custom <xref:System.ComponentModel.Design.DesignerVerb> menu command to the shortcut menu for the component.</span></span>  
  
 [!code-cpp[ComponentDesignerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ComponentDesignerExample/CPP/examplecomponent.cpp#1)]
 [!code-csharp[ComponentDesignerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ComponentDesignerExample/CS/examplecomponent.cs#1)]
 [!code-vb[ComponentDesignerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComponentDesignerExample/VB/examplecomponent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
    <altmember cref="T:System.ComponentModel.DesignerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90aec-118">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-118">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90aec-119">Ottiene gli elenchi di azioni in fase di progettazione supportati dal componente associato alla finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-119">Gets the design-time action lists supported by the component associated with the designer.</span></span></summary>
        <value><span data-ttu-id="90aec-120">Elenchi di azioni in fase di progettazione supportati dal componente associato alla finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-120">The design-time action lists supported by the component associated with the designer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociatedComponents">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection AssociatedComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection AssociatedComponents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AssociatedComponents As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ AssociatedComponents { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90aec-121">Ottiene l'insieme dei componenti associati al componente gestito dalla finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-121">Gets the collection of components associated with the component managed by the designer.</span></span></summary>
        <value><span data-ttu-id="90aec-122">Componenti associati al componente gestito dalla finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-122">The components that are associated with the component managed by the designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-123">Questa proprietà indica i componenti per copiare o spostare insieme al componente gestito dalla finestra di progettazione durante una copia, trascinare o dell'operazione di spostamento.</span><span class="sxs-lookup"><span data-stu-id="90aec-123">This property indicates any components to copy or move along with the component managed by the designer during a copy, drag, or move operation.</span></span>  
  
 <span data-ttu-id="90aec-124">Se questa raccolta contiene riferimenti ad altri componenti nel documento corrente in modalità progettazione, tali componenti verranno copiati insieme al componente gestito dalla finestra di progettazione durante un'operazione di copia.</span><span class="sxs-lookup"><span data-stu-id="90aec-124">If this collection contains references to other components in the current design mode document, those components will be copied along with the component managed by the designer during a copy operation.</span></span>  
  
 <span data-ttu-id="90aec-125">Quando il componente gestito dalla finestra di progettazione è selezionato, questa raccolta viene riempita con tutti i controlli annidati.</span><span class="sxs-lookup"><span data-stu-id="90aec-125">When the component managed by the designer is selected, this collection is filled with any nested controls.</span></span> <span data-ttu-id="90aec-126">Questa raccolta può includere anche altri componenti, ad esempio i pulsanti di una barra degli strumenti.</span><span class="sxs-lookup"><span data-stu-id="90aec-126">This collection can also include other components, such as the buttons of a toolbar.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Component" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Component" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Component As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90aec-127">Ottiene il componente progettato dalla finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-127">Gets the component this designer is designing.</span></span></summary>
        <value><span data-ttu-id="90aec-128">Componente gestito dalla finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-128">The component managed by the designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-129">Il <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> metodo <xref:System.ComponentModel.Design.ComponentDesigner> imposta questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="90aec-129">The <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method of <xref:System.ComponentModel.Design.ComponentDesigner> sets this property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90aec-130">Quando si esegue l'override di <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> (metodo), verificare di chiamare la classe di base <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> metodo prima di utilizzare questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="90aec-130">When overriding the <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method, be sure to call the base class <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method before using this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="90aec-131">Rilascia le risorse usate da <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-131">Releases the resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90aec-132">Rilascia tutte le risorse usate da <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-132">Releases all resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-133">Chiamare il metodo <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> dopo aver terminato di utilizzare l'oggetto <xref:System.ComponentModel.Design.ComponentDesigner>.</span><span class="sxs-lookup"><span data-stu-id="90aec-133">Call <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.ComponentDesigner>.</span></span> <span data-ttu-id="90aec-134">Il metodo <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> lascia l'oggetto <xref:System.ComponentModel.Design.ComponentDesigner> in una condizione di inutilizzabilità.</span><span class="sxs-lookup"><span data-stu-id="90aec-134">The <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.ComponentDesigner> in an unusable state.</span></span> <span data-ttu-id="90aec-135">Dopo la chiamata <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A>, è necessario rilasciare tutti i riferimenti al <xref:System.ComponentModel.Design.ComponentDesigner> in modo che il garbage collector può recuperare la memoria che di <xref:System.ComponentModel.Design.ComponentDesigner> occupata.</span><span class="sxs-lookup"><span data-stu-id="90aec-135">After calling <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.ComponentDesigner> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.ComponentDesigner> was occupying.</span></span> <span data-ttu-id="90aec-136">Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="90aec-136">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90aec-137">Chiamare sempre il metodo <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> prima di rilasciare l'ultimo riferimento a <xref:System.ComponentModel.Design.ComponentDesigner>.</span><span class="sxs-lookup"><span data-stu-id="90aec-137">Always call <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.ComponentDesigner>.</span></span> <span data-ttu-id="90aec-138">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.ComponentModel.Design.ComponentDesigner> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.</span><span class="sxs-lookup"><span data-stu-id="90aec-138">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.ComponentDesigner> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="90aec-139"><see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span><span class="sxs-lookup"><span data-stu-id="90aec-139"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="90aec-140">Rilascia le risorse non gestite usate da <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> e, facoltativamente, le risorse gestite.</span><span class="sxs-lookup"><span data-stu-id="90aec-140">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-141">Questo metodo viene chiamato dal metodo pubblico `Dispose()` (metodo) e <xref:System.Object.Finalize%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="90aec-141">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="90aec-142">`Dispose()` richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="90aec-142">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="90aec-143"><xref:System.Object.Finalize%2A> richiama `Dispose` con `disposing` impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="90aec-143"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="90aec-144">Quando il `disposing` parametro è true, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.ComponentModel.Design.ComponentDesigner> riferimenti.</span><span class="sxs-lookup"><span data-stu-id="90aec-144">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.ComponentDesigner> references.</span></span> <span data-ttu-id="90aec-145">Il metodo richiama il metodo `Dispose()` di ciascun oggetto cui viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="90aec-145">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="90aec-146">Il metodo <see langword="Dispose" /> può essere chiamato più volte da altri oggetti.</span><span class="sxs-lookup"><span data-stu-id="90aec-146"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="90aec-147">Quando si esegue l'override <see langword="Dispose(Boolean)" /> prestare attenzione a non fare riferimento a oggetti che sono stati eliminati in una precedente chiamata a <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-147">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="90aec-148">Per ulteriori informazioni su come implementare <see langword="Dispose(Boolean)" />, vedere [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="90aec-148">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="90aec-149">Per ulteriori informazioni su <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [si esegue l'override del metodo Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="90aec-149">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90aec-150">Crea una firma di metodo nel file di codice sorgente per l'evento predefinito sul componente e sposta il cursore dell'utente in tale posizione.</span><span class="sxs-lookup"><span data-stu-id="90aec-150">Creates a method signature in the source code file for the default event on the component and navigates the user's cursor to that location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-151">Nelle finestre di progettazione Windows Form e Web Form, questo metodo viene richiamato quando un utente fa doppio clic su un componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-151">In Windows Forms and Web Forms designers, this method is invoked when a user double-clicks a component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Design.CheckoutException"><span data-ttu-id="90aec-152">Un tentativo di estrarre un file archiviato in un programma di gestione del codice sorgente non è riuscito.</span><span class="sxs-lookup"><span data-stu-id="90aec-152">An attempt to check out a file that is checked into a source code management program failed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ComponentDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ComponentDesigner ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90aec-153">Esegue un tentativo di liberare risorse chiamando <see langword="Dispose(false)" /> prima che l'oggetto venga recuperato dalla procedura di Garbage Collection.</span><span class="sxs-lookup"><span data-stu-id="90aec-153">Attempts to free resources by calling <see langword="Dispose(false)" /> before the object is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-154">Questo metodo esegue l'override <xref:System.Object.Finalize%2A?displayProperty=nameWithType> e pulisce le risorse chiamando `Dispose(false)`.</span><span class="sxs-lookup"><span data-stu-id="90aec-154">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType> and cleans up resources by calling `Dispose(false)`.</span></span> <span data-ttu-id="90aec-155">Esegue l'override di `Dispose(Boolean)` per personalizzare la pulizia.</span><span class="sxs-lookup"><span data-stu-id="90aec-155">Override `Dispose(Boolean)` to customize the cleanup.</span></span>  
  
 <span data-ttu-id="90aec-156">Il codice dell'applicazione non deve chiamare questo metodo. un oggetto `Finalize` metodo viene richiamato automaticamente durante l'operazione di garbage collection, a meno che la finalizzazione del garbage collector non è stata disabilitata da una chiamata al <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="90aec-156">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="90aec-157">Per ulteriori informazioni, vedere [metodi Finalize e distruttori](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md), e [si esegue l'override del metodo Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="90aec-157">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="90aec-158">Tipo di servizio da richiedere.</span><span class="sxs-lookup"><span data-stu-id="90aec-158">The type of service to request.</span></span></param>
        <summary><span data-ttu-id="90aec-159">Esegue un tentativo di recuperare il tipo di servizio specificato dal sito della modalità progettazione del componente della finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-159">Attempts to retrieve the specified type of service from the design mode site of the designer's component.</span></span></summary>
        <returns><span data-ttu-id="90aec-160">Oggetto che implementa il servizio richiesto oppure <see langword="null" /> se non è possibile risolvere il servizio.</span><span class="sxs-lookup"><span data-stu-id="90aec-160">An object implementing the requested service, or <see langword="null" /> if the service cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-161">L'implementazione predefinita di questo metodo richiede il servizio del sito del componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-161">The default implementation of this method requests the service from the site of the component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90aec-162">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.ComponentModel.Design.ComponentDesigner.GetService%2A> metodo per accedere a servizi della finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-162">The following code example demonstrates the use of the <xref:System.ComponentModel.Design.ComponentDesigner.GetService%2A> method to access designer services.</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.DesignerServices#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerServices#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceAttribute">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.InheritanceAttribute InheritanceAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.InheritanceAttribute InheritanceAttribute" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property InheritanceAttribute As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::InheritanceAttribute ^ InheritanceAttribute { System::ComponentModel::InheritanceAttribute ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90aec-163">Ottiene un attributo che indica il tipo di ereditarietà del componente associato.</span><span class="sxs-lookup"><span data-stu-id="90aec-163">Gets an attribute that indicates the type of inheritance of the associated component.</span></span></summary>
        <value><span data-ttu-id="90aec-164">Oggetto <see cref="T:System.ComponentModel.InheritanceAttribute" /> relativo al componente associato.</span><span class="sxs-lookup"><span data-stu-id="90aec-164">The <see cref="T:System.ComponentModel.InheritanceAttribute" /> for the associated component.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inherited">
      <MemberSignature Language="C#" Value="protected bool Inherited { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherited" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Inherited" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Inherited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Inherited { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90aec-165">Ottiene un valore che indica se questo componente è ereditato.</span><span class="sxs-lookup"><span data-stu-id="90aec-165">Gets a value indicating whether this component is inherited.</span></span></summary>
        <value>
          <span data-ttu-id="90aec-166"><see langword="true" /> se il componente è ereditato. <see langword="false" /> in caso contrario.</span><span class="sxs-lookup"><span data-stu-id="90aec-166"><see langword="true" /> if the component is inherited; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="90aec-167">Componente relativo a questa finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-167">The component for this designer.</span></span></param>
        <summary><span data-ttu-id="90aec-168">Prepara la finestra di progettazione per la visualizzazione, la modifica e la progettazione del componente specificato.</span><span class="sxs-lookup"><span data-stu-id="90aec-168">Prepares the designer to view, edit, and design the specified component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-169">L'host di progettazione chiama questo metodo quando è possibile utilizzare la finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-169">The designer host calls this method when it is ready to use the designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="InitializeExistingComponent">
      <MemberSignature Language="C#" Value="public virtual void InitializeExistingComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeExistingComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeExistingComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeExistingComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues"><span data-ttu-id="90aec-170">Dizionario in formato nome/valore dei valori predefiniti da applicare alle proprietà.</span><span class="sxs-lookup"><span data-stu-id="90aec-170">A name/value dictionary of default values to apply to properties.</span></span> <span data-ttu-id="90aec-171">Può essere <see langword="null" /> se non sono specificati valori predefiniti.</span><span class="sxs-lookup"><span data-stu-id="90aec-171">May be <see langword="null" /> if no default values are specified.</span></span></param>
        <summary><span data-ttu-id="90aec-172">Reinizializza un componente esistente.</span><span class="sxs-lookup"><span data-stu-id="90aec-172">Reinitializes an existing component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-173">Il <xref:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent%2A> metodo viene chiamato quando un componente esistente viene reinizializzato.</span><span class="sxs-lookup"><span data-stu-id="90aec-173">The <xref:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent%2A> method is called when an existing component is being reinitialized.</span></span> <span data-ttu-id="90aec-174">Ad esempio, ciò può verificarsi dopo che l'utente trascina un componente in un altro contenitore.</span><span class="sxs-lookup"><span data-stu-id="90aec-174">For example, this may occur after the user drags a component to another container.</span></span>  
  
 <span data-ttu-id="90aec-175">È possibile utilizzare il `defaultValues` dizionario per applicare impostazioni predefinite consigliate alle proprietà; tuttavia, non deve essere modificato le proprietà del componente diverse da quelle archiviate nel dizionario, perché questo componente esistente disponga già di proprietà impostate su di esso.</span><span class="sxs-lookup"><span data-stu-id="90aec-175">You may use the `defaultValues` dictionary to apply recommended defaults to properties; however, you should not modify component properties aside from those stored in the dictionary, because this existing component may already have properties set on it.</span></span>  
  
 <span data-ttu-id="90aec-176">L'implementazione predefinita di questo metodo non esegue alcuna operazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-176">The default implementation of this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewComponent">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNewComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNewComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues"><span data-ttu-id="90aec-177">Dizionario in formato nome/valore dei valori predefiniti da applicare alle proprietà.</span><span class="sxs-lookup"><span data-stu-id="90aec-177">A name/value dictionary of default values to apply to properties.</span></span> <span data-ttu-id="90aec-178">Può essere <see langword="null" /> se non sono specificati valori predefiniti.</span><span class="sxs-lookup"><span data-stu-id="90aec-178">May be <see langword="null" /> if no default values are specified.</span></span></param>
        <summary><span data-ttu-id="90aec-179">Inizializza un nuovo componente creato.</span><span class="sxs-lookup"><span data-stu-id="90aec-179">Initializes a newly created component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-180">Il <xref:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent%2A> metodo viene chiamato quando un componente viene inizializzato, in genere dopo l'aggiunta all'area di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-180">The <xref:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent%2A> method is called when a component is first initialized, typically after being first added to a design surface.</span></span>  
  
 <span data-ttu-id="90aec-181">È possibile eseguire qualsiasi inizializzazione necessaria di questo componente ed è possibile ignorare il `defaultValues` dizionario completamente.</span><span class="sxs-lookup"><span data-stu-id="90aec-181">You may perform any necessary initialization of this component, and you may ignore the `defaultValues` dictionary altogether.</span></span>  
  
 <span data-ttu-id="90aec-182">L'implementazione predefinita di questo metodo non esegue alcuna operazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-182">The default implementation of this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNonDefault">
      <MemberSignature Language="C#" Value="public virtual void InitializeNonDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNonDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNonDefault ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNonDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeExistingComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90aec-183">Inizializza le impostazioni relative a un componente importato già inizializzato per impostazioni diverse da quelle predefinite.</span><span class="sxs-lookup"><span data-stu-id="90aec-183">Initializes the settings for an imported component that is already initialized to settings other than the defaults.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-184">Questo metodo viene chiamato quando la finestra di progettazione è associata a un controllo che non è nello stato predefinito, ad esempio un controllo che si incollano o si sposta con un'operazione di trascinamento e rilascio nella finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-184">This method is called when the designer is associated with a control that is not in its default state, such as a control that you paste or move with a drag-and-drop operation onto the designer.</span></span> <span data-ttu-id="90aec-185">Questo metodo fornisce una possibilità per gli implementatori di modificare o nascondere le proprietà del componente anziché inizializzare le proprietà del componente per le impostazioni predefinite.</span><span class="sxs-lookup"><span data-stu-id="90aec-185">This method provides an opportunity for implementers to modify or shadow the properties of the component rather than initialize the properties for the component to their defaults.</span></span> <span data-ttu-id="90aec-186">Questo metodo viene chiamato dopo le altre funzioni di inizializzazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-186">This method is called after the other initialization functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeGetInheritanceAttribute">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.InheritanceAttribute InvokeGetInheritanceAttribute (System.ComponentModel.Design.ComponentDesigner toInvoke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.InheritanceAttribute InvokeGetInheritanceAttribute(class System.ComponentModel.Design.ComponentDesigner toInvoke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InvokeGetInheritanceAttribute (toInvoke As ComponentDesigner) As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::InheritanceAttribute ^ InvokeGetInheritanceAttribute(System::ComponentModel::Design::ComponentDesigner ^ toInvoke);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.ComponentModel.Design.ComponentDesigner" />
      </Parameters>
      <Docs>
        <param name="toInvoke"><span data-ttu-id="90aec-187">Oggetto <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> di cui recuperare l'attributo di ereditarietà.</span><span class="sxs-lookup"><span data-stu-id="90aec-187">The <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> whose inheritance attribute to retrieve.</span></span></param>
        <summary><span data-ttu-id="90aec-188">Ottiene l'oggetto <see cref="T:System.ComponentModel.InheritanceAttribute" /> dell'oggetto <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> specificato.</span><span class="sxs-lookup"><span data-stu-id="90aec-188">Gets the <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the specified <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span></span></summary>
        <returns><span data-ttu-id="90aec-189">Oggetto <see cref="T:System.ComponentModel.InheritanceAttribute" /> della finestra di progettazione specificata.</span><span class="sxs-lookup"><span data-stu-id="90aec-189">The <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the specified designer.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="OnSetComponentDefaults">
      <MemberSignature Language="C#" Value="public virtual void OnSetComponentDefaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSetComponentDefaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnSetComponentDefaults ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnSetComponentDefaults();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeNewComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90aec-190">Imposta le proprietà predefinite relative al componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-190">Sets the default properties for the component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-191"><xref:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults%2A> viene chiamato quando viene inizializzata la finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-191"><xref:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults%2A> is called when the designer is initialized.</span></span> <span data-ttu-id="90aec-192">In questo modo la finestra di progettazione fornire valori predefiniti per il componente di base.</span><span class="sxs-lookup"><span data-stu-id="90aec-192">This allows the designer to provide default values for the base component.</span></span>  
  
 <span data-ttu-id="90aec-193">Questo metodo viene chiamato una sola volta: quando si crea innanzitutto il componente trascinandolo dalla casella degli strumenti all'area di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-193">This method is called only once: when you first create the component by dragging it from the Toolbox to the design surface.</span></span> <span data-ttu-id="90aec-194">Le successive inizializzazioni della finestra di progettazione non richiamano questo metodo.</span><span class="sxs-lookup"><span data-stu-id="90aec-194">Subsequent initializations of the designer do not invoke this method.</span></span>  
  
 <span data-ttu-id="90aec-195">L'implementazione predefinita di questo metodo imposta la proprietà predefinita del componente per il nome del componente se la proprietà predefinita è una stringa e la proprietà non è già impostata.</span><span class="sxs-lookup"><span data-stu-id="90aec-195">The default implementation of this method sets the default property of the component to the name of the component if the default property is a string and the property is not already set.</span></span> <span data-ttu-id="90aec-196">Questo metodo può essere implementato in una classe derivata per personalizzare l'inizializzazione del componente questa finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-196">This method can be implemented in a derived class to customize the initialization of the component that this designer is designing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentComponent">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.IComponent ParentComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent ParentComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ParentComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::IComponent ^ ParentComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90aec-197">Ottiene il componente padre per la finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-197">Gets the parent component for this designer.</span></span></summary>
        <value><span data-ttu-id="90aec-198">Componente padre per la finestra di progettazione oppure <see langword="null" /> se la finestra di progettazione è il componente di primo livello.</span><span class="sxs-lookup"><span data-stu-id="90aec-198">The parent component for this designer, or <see langword="null" /> if this designer is the root component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-199">Questa proprietà fornisce un meccanismo generico per il rilevamento delle relazioni padre all'interno di finestre di progettazione e viene utilizzata il <xref:System.ComponentModel.Design.ComponentDesigner> dell'oggetto <xref:System.ComponentModel.Design.ITreeDesigner> implementazione dell'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="90aec-199">This property provides a generic mechanism for discovering parent relationships within designers, and is used by the <xref:System.ComponentModel.Design.ComponentDesigner> object's <xref:System.ComponentModel.Design.ITreeDesigner> interface implementation.</span></span> <span data-ttu-id="90aec-200">Questa proprietà deve restituire solo `null` quando questa finestra di progettazione è il componente radice.</span><span class="sxs-lookup"><span data-stu-id="90aec-200">This property should only return `null` when this designer is the root component.</span></span> <span data-ttu-id="90aec-201">L'implementazione predefinita di questa proprietà restituisce il componente radice per tutti i componenti che non sono di primo livello, e `null` per il componente radice.</span><span class="sxs-lookup"><span data-stu-id="90aec-201">The default implementation of this property returns the root component for all components that are not the root component, and it returns `null` for the root component.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="90aec-202">Attributi relativi alla classe del componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-202">The attributes for the class of the component.</span></span></param>
        <summary><span data-ttu-id="90aec-203">Consente a una finestra di progettazione di modificare o rimuovere elementi dall'insieme di attributi esposti tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-203">Allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-204">Questo metodo consente di modificare o rimuovere gli elementi nel dizionario degli attributi che vengono esposti tramite un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="90aec-204">This method provides a way to change or remove the items within the dictionary of attributes that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="90aec-205">Le chiavi nel dizionario degli attributi sono gli identificatori di tipo degli attributi, come specificato dal valore della loro <xref:System.Attribute.TypeId%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="90aec-205">The keys in the dictionary of attributes are the type identifiers of the attributes, as specified by the value of their <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="90aec-206">Gli oggetti sono di tipo <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="90aec-206">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="90aec-207">Questo metodo viene chiamato immediatamente dopo il <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="90aec-207">This method is called immediately after the <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="90aec-208">È possibile filtrare direttamente il dizionario che è possibile accedere tramite il <paramref name="attributes" /> parametro oppure lasciarla invariata.</span><span class="sxs-lookup"><span data-stu-id="90aec-208">You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="90aec-209">Se si esegue l'override di questo metodo, chiamare l'implementazione di base dopo aver eseguito le operazioni di filtro.</span><span class="sxs-lookup"><span data-stu-id="90aec-209">If you override this method, call the base implementation after you perform your own filtering.</span></span> <span data-ttu-id="90aec-210">Inoltre, non rimuovere gli elementi di <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" /> metodo.</span><span class="sxs-lookup"><span data-stu-id="90aec-210">In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" /> method.</span></span> <span data-ttu-id="90aec-211">In alternativa, modificare gli attributi per nascondere gli elementi.</span><span class="sxs-lookup"><span data-stu-id="90aec-211">Instead, change attributes to hide items.</span></span> <span data-ttu-id="90aec-212">È inoltre possibile rimuovere gli elementi di <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" /> metodo.</span><span class="sxs-lookup"><span data-stu-id="90aec-212">You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" /> method.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="90aec-213">Eventi relativi alla classe del componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-213">The events for the class of the component.</span></span></param>
        <summary><span data-ttu-id="90aec-214">Consente a una finestra di progettazione di modificare o rimuovere elementi dal gruppo di eventi esposti tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-214">Allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-215">Questo metodo consente di modificare o rimuovere gli elementi nel dizionario degli eventi che vengono esposti tramite un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="90aec-215">This method provides a way to change or remove the items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="90aec-216">Le chiavi nel dizionario di eventi sono i nomi degli eventi.</span><span class="sxs-lookup"><span data-stu-id="90aec-216">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="90aec-217">Gli oggetti sono di tipo <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="90aec-217">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="90aec-218">Questo metodo viene chiamato immediatamente dopo il <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="90aec-218">This method is called immediately after the <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="90aec-219">È possibile filtrare direttamente il dizionario che è possibile accedere tramite il <paramref name="events" /> parametro oppure lasciarla invariata.</span><span class="sxs-lookup"><span data-stu-id="90aec-219">You can directly filter the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="90aec-220">Se si esegue l'override di questo metodo, chiamare l'implementazione di base dopo aver eseguito le operazioni di filtro.</span><span class="sxs-lookup"><span data-stu-id="90aec-220">If you override this method, call the base implementation after you perform your own filtering.</span></span> <span data-ttu-id="90aec-221">Inoltre, non rimuovere gli elementi di <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" /> metodo.</span><span class="sxs-lookup"><span data-stu-id="90aec-221">In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" /> method.</span></span> <span data-ttu-id="90aec-222">In alternativa, modificare gli attributi per nascondere gli elementi.</span><span class="sxs-lookup"><span data-stu-id="90aec-222">Instead, change attributes to hide items.</span></span> <span data-ttu-id="90aec-223">È inoltre possibile rimuovere gli elementi di <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" /> metodo.</span><span class="sxs-lookup"><span data-stu-id="90aec-223">You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" /> method.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="90aec-224">Proprietà relative alla classe del componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-224">The properties for the class of the component.</span></span></param>
        <summary><span data-ttu-id="90aec-225">Consente a una finestra di progettazione di modificare o rimuovere elementi dall'insieme di proprietà esposte tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-225">Allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-226">Questo metodo consente di modificare o rimuovere gli elementi all'interno del dizionario delle proprietà esposte tramite un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="90aec-226">This method provides a way to change or remove the items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="90aec-227">Le chiavi nel dizionario delle proprietà sono i nomi delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="90aec-227">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="90aec-228">Gli oggetti sono di tipo <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="90aec-228">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="90aec-229">Questo metodo viene chiamato immediatamente dopo il <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="90aec-229">This method is called immediately after the <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="90aec-230">È possibile filtrare direttamente il dizionario che è possibile accedere tramite il <paramref name="properties" /> parametro oppure lasciarla invariata.</span><span class="sxs-lookup"><span data-stu-id="90aec-230">You can directly filter the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="90aec-231">Se si esegue l'override di questo metodo, chiamare l'implementazione di base dopo aver eseguito le operazioni di filtro.</span><span class="sxs-lookup"><span data-stu-id="90aec-231">If you override this method, call the base implementation after you perform your own filtering.</span></span> <span data-ttu-id="90aec-232">Inoltre, non rimuovere gli elementi di <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" /> metodo.</span><span class="sxs-lookup"><span data-stu-id="90aec-232">In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" /> method.</span></span> <span data-ttu-id="90aec-233">In alternativa, modificare gli attributi per nascondere gli elementi.</span><span class="sxs-lookup"><span data-stu-id="90aec-233">Instead, change attributes to hide items.</span></span> <span data-ttu-id="90aec-234">È inoltre possibile rimuovere gli elementi di <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" /> metodo.</span><span class="sxs-lookup"><span data-stu-id="90aec-234">You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" /> method.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="90aec-235">Attributi relativi alla classe del componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-235">The attributes for the class of the component.</span></span></param>
        <summary><span data-ttu-id="90aec-236">Consente a una finestra di progettazione di aggiungere un insieme di attributi che vengono esposti tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-236">Allows a designer to add to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-237">Questo metodo fornisce un modo per aggiungere elementi al dizionario di attributi esposti tramite una finestra di progettazione un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="90aec-237">This method provides a way to add items to the dictionary of attributes that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="90aec-238">Le chiavi nel dizionario degli attributi sono gli identificatori di tipo degli attributi, come specificato dal valore della loro <xref:System.Attribute.TypeId%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="90aec-238">The keys in the dictionary of attributes are the type identifiers of the attributes, as specified by the value of their <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="90aec-239">Gli oggetti sono di tipo <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="90aec-239">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="90aec-240">Questo metodo viene chiamato immediatamente prima di <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="90aec-240">This method is called immediately before the <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="90aec-241">È possibile modificare direttamente il dizionario che è possibile accedere tramite il <paramref name="attributes" /> parametro oppure lasciarla invariata.</span><span class="sxs-lookup"><span data-stu-id="90aec-241">You can directly modify the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="90aec-242">Se si esegue l'override di questo metodo, chiamare l'implementazione di base prima di eseguire le operazioni di filtro.</span><span class="sxs-lookup"><span data-stu-id="90aec-242">If you override this method, call the base implementation before you perform your own filtering.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="90aec-243">Eventi relativi alla classe del componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-243">The events for the class of the component.</span></span></param>
        <summary><span data-ttu-id="90aec-244">Consente a una finestra di progettazione di aggiungere un insieme di eventi che vengono esposti tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-244">Allows a designer to add to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-245">Questo metodo fornisce un modo per aggiungere elementi al dizionario di eventi esposti tramite una finestra di progettazione un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="90aec-245">This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="90aec-246">Le chiavi nel dizionario di eventi sono i nomi degli eventi.</span><span class="sxs-lookup"><span data-stu-id="90aec-246">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="90aec-247">Gli oggetti sono di tipo <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="90aec-247">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="90aec-248">Questo metodo viene chiamato immediatamente prima di <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="90aec-248">This method is called immediately before the <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="90aec-249">È possibile modificare direttamente il dizionario che è possibile accedere tramite il <paramref name="events" /> parametro oppure lasciarla invariata.</span><span class="sxs-lookup"><span data-stu-id="90aec-249">You can directly modify the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="90aec-250">Se si esegue l'override di questo metodo, chiamare l'implementazione di base prima di eseguire le operazioni di filtro.</span><span class="sxs-lookup"><span data-stu-id="90aec-250">If you override this method, call the base implementation before you perform your own filtering.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="90aec-251">Proprietà relative alla classe del componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-251">The properties for the class of the component.</span></span></param>
        <summary><span data-ttu-id="90aec-252">Consente a una finestra di progettazione di aggiungere un insieme di proprietà che vengono esposte tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-252">Allows a designer to add to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-253">Questo metodo fornisce un modo per aggiungere elementi al dizionario di proprietà esposti tramite una finestra di progettazione un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="90aec-253">This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="90aec-254">Le chiavi nel dizionario delle proprietà sono i nomi delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="90aec-254">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="90aec-255">Gli oggetti sono di tipo <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="90aec-255">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="90aec-256">Questo metodo viene chiamato immediatamente prima di <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="90aec-256">This method is called immediately before the <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="90aec-257">È possibile modificare direttamente il dizionario che è possibile accedere tramite il <paramref name="properties" /> parametro oppure lasciarla invariata.</span><span class="sxs-lookup"><span data-stu-id="90aec-257">You can directly modify the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="90aec-258">Se si esegue l'override di questo metodo, chiamare l'implementazione di base prima di eseguire le operazioni di filtro.</span><span class="sxs-lookup"><span data-stu-id="90aec-258">If you override this method, call the base implementation before you perform your own filtering.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="RaiseComponentChanged">
      <MemberSignature Language="C#" Value="protected void RaiseComponentChanged (System.ComponentModel.MemberDescriptor member, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseComponentChanged(class System.ComponentModel.MemberDescriptor member, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseComponentChanged (member As MemberDescriptor, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseComponentChanged(System::ComponentModel::MemberDescriptor ^ member, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="90aec-259">Oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> che indica il membro che è stato modificato.</span><span class="sxs-lookup"><span data-stu-id="90aec-259">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that indicates the member that has been changed.</span></span></param>
        <param name="oldValue"><span data-ttu-id="90aec-260">Valore precedente del membro.</span><span class="sxs-lookup"><span data-stu-id="90aec-260">The old value of the member.</span></span></param>
        <param name="newValue"><span data-ttu-id="90aec-261">Nuovo valore del membro.</span><span class="sxs-lookup"><span data-stu-id="90aec-261">The new value of the member.</span></span></param>
        <summary><span data-ttu-id="90aec-262">Notifica all'oggetto <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> che questo componente è stato modificato.</span><span class="sxs-lookup"><span data-stu-id="90aec-262">Notifies the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> that this component has been changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-263">Chiamare questo metodo solo quando si modificano le proprietà del componente direttamente e non tramite le funzioni di accesso forniti da <xref:System.ComponentModel.MemberDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="90aec-263">Call this method only when you affect component properties directly and not through the accessors provided by <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="RaiseComponentChanging">
      <MemberSignature Language="C#" Value="protected void RaiseComponentChanging (System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseComponentChanging(class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseComponentChanging (member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseComponentChanging(System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="90aec-264">Oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> che indica il membro che sta per essere modificato.</span><span class="sxs-lookup"><span data-stu-id="90aec-264">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that indicates the member that is about to be changed.</span></span></param>
        <summary><span data-ttu-id="90aec-265">Notifica all'oggetto <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> che questo componente sta per essere modificato.</span><span class="sxs-lookup"><span data-stu-id="90aec-265">Notifies the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> that this component is about to be changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-266">Chiamare questo metodo solo quando si modificano le proprietà del componente direttamente e non tramite le funzioni di accesso forniti da <xref:System.ComponentModel.MemberDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="90aec-266">Call this method only when you affect component properties directly and not through accessors provided by <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ShadowProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection ShadowProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ComponentDesigner/ShadowPropertyCollection ShadowProperties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ShadowProperties As ComponentDesigner.ShadowPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ComponentDesigner::ShadowPropertyCollection ^ ShadowProperties { System::ComponentModel::Design::ComponentDesigner::ShadowPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentDesigner+ShadowPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90aec-267">Ottiene un insieme di valori di proprietà che eseguono l'override delle impostazioni utente.</span><span class="sxs-lookup"><span data-stu-id="90aec-267">Gets a collection of property values that override user settings.</span></span></summary>
        <value><span data-ttu-id="90aec-268">Oggetto <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> che indica le proprietà replicate del documento di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-268">A <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> that indicates the shadow properties of the design document.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PostFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PostFilterAttributes;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="90aec-269">Oggetti <see cref="T:System.Attribute" /> relativi alla classe del componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-269">The <see cref="T:System.Attribute" /> objects for the class of the component.</span></span> <span data-ttu-id="90aec-270">Le chiavi presenti nel dizionario degli attributi sono i valori <see cref="P:System.Attribute.TypeId" /> degli attributi.</span><span class="sxs-lookup"><span data-stu-id="90aec-270">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span></span></param>
        <summary><span data-ttu-id="90aec-271">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-271">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-272">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="90aec-272">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="90aec-273">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.ComponentModel.Design.ComponentDesigner> a un'interfaccia <xref:System.ComponentModel.Design.IDesignerFilter>.</span><span class="sxs-lookup"><span data-stu-id="90aec-273">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterEvents (events As IDictionary) Implements IDesignerFilter.PostFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PostFilterEvents;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="90aec-274">Oggetti <see cref="T:System.ComponentModel.EventDescriptor" /> che rappresentano gli eventi della classe del componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-274">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span></span> <span data-ttu-id="90aec-275">Le chiavi presenti nel dizionario degli eventi sono i nomi degli eventi.</span><span class="sxs-lookup"><span data-stu-id="90aec-275">The keys in the dictionary of events are event names.</span></span></param>
        <summary><span data-ttu-id="90aec-276">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-276">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-277">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="90aec-277">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="90aec-278">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.ComponentModel.Design.ComponentDesigner> a un'interfaccia <xref:System.ComponentModel.Design.IDesignerFilter>.</span><span class="sxs-lookup"><span data-stu-id="90aec-278">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterProperties (properties As IDictionary) Implements IDesignerFilter.PostFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PostFilterProperties;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="90aec-279">Oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> che rappresentano le proprietà della classe del componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-279">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span></span> <span data-ttu-id="90aec-280">Le chiavi presenti nel dizionario delle proprietà sono i nomi delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="90aec-280">The keys in the dictionary of properties are property names.</span></span></param>
        <summary><span data-ttu-id="90aec-281">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-281">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-282">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="90aec-282">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="90aec-283">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.ComponentModel.Design.ComponentDesigner> a un'interfaccia <xref:System.ComponentModel.Design.IDesignerFilter>.</span><span class="sxs-lookup"><span data-stu-id="90aec-283">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PreFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PreFilterAttributes;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="90aec-284">Oggetti <see cref="T:System.Attribute" /> relativi alla classe del componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-284">The <see cref="T:System.Attribute" /> objects for the class of the component.</span></span> <span data-ttu-id="90aec-285">Le chiavi presenti nel dizionario degli attributi sono i valori <see cref="P:System.Attribute.TypeId" /> degli attributi.</span><span class="sxs-lookup"><span data-stu-id="90aec-285">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span></span></param>
        <summary><span data-ttu-id="90aec-286">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-286">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-287">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="90aec-287">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="90aec-288">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.ComponentModel.Design.ComponentDesigner> a un'interfaccia <xref:System.ComponentModel.Design.IDesignerFilter>.</span><span class="sxs-lookup"><span data-stu-id="90aec-288">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterEvents (events As IDictionary) Implements IDesignerFilter.PreFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PreFilterEvents;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="90aec-289">Oggetti <see cref="T:System.ComponentModel.EventDescriptor" /> che rappresentano gli eventi della classe del componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-289">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span></span> <span data-ttu-id="90aec-290">Le chiavi presenti nel dizionario degli eventi sono i nomi degli eventi.</span><span class="sxs-lookup"><span data-stu-id="90aec-290">The keys in the dictionary of events are event names.</span></span></param>
        <summary><span data-ttu-id="90aec-291">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-291">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-292">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="90aec-292">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="90aec-293">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.ComponentModel.Design.ComponentDesigner> a un'interfaccia <xref:System.ComponentModel.Design.IDesignerFilter>.</span><span class="sxs-lookup"><span data-stu-id="90aec-293">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterProperties (properties As IDictionary) Implements IDesignerFilter.PreFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PreFilterProperties;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="90aec-294">Oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> che rappresentano le proprietà della classe del componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-294">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span></span> <span data-ttu-id="90aec-295">Le chiavi presenti nel dizionario delle proprietà sono i nomi delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="90aec-295">The keys in the dictionary of properties are property names.</span></span></param>
        <summary><span data-ttu-id="90aec-296">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-296">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-297">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="90aec-297">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="90aec-298">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.ComponentModel.Design.ComponentDesigner> a un'interfaccia <xref:System.ComponentModel.Design.IDesignerFilter>.</span><span class="sxs-lookup"><span data-stu-id="90aec-298">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.ITreeDesigner.Children">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.ComponentModel.Design.ITreeDesigner.Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.ComponentModel.Design.ITreeDesigner.Children" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Children As ICollection Implements ITreeDesigner.Children" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.ComponentModel.Design.ITreeDesigner.Children { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90aec-299">Per una descrizione di questo membro, vedere la proprietà <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-299">For a description of this member, see the <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> property.</span></span></summary>
        <value><span data-ttu-id="90aec-300">Oggetto <see cref="T:System.Collections.ICollection" /> contenente l'insieme di finestre di progettazione <see cref="T:System.ComponentModel.Design.IDesigner" /> contenute nella finestra di progettazione padre corrente.</span><span class="sxs-lookup"><span data-stu-id="90aec-300">An <see cref="T:System.Collections.ICollection" /> that contains the collection of <see cref="T:System.ComponentModel.Design.IDesigner" /> designers contained in the current parent designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-301">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="90aec-301">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="90aec-302">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.ComponentModel.Design.ComponentDesigner> a un'interfaccia <xref:System.ComponentModel.Design.ITreeDesigner>.</span><span class="sxs-lookup"><span data-stu-id="90aec-302">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.ITreeDesigner> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.ITreeDesigner.Parent">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.IDesigner System.ComponentModel.Design.ITreeDesigner.Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.IDesigner System.ComponentModel.Design.ITreeDesigner.Parent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Parent As IDesigner Implements ITreeDesigner.Parent" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::IDesigner ^ System.ComponentModel.Design.ITreeDesigner.Parent { System::ComponentModel::Design::IDesigner ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90aec-303">Per una descrizione di questo membro, vedere la proprietà <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-303">For a description of this member, see the <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> property.</span></span></summary>
        <value><span data-ttu-id="90aec-304">Oggetto <see cref="T:System.ComponentModel.Design.IDesigner" /> che rappresenta la finestra di progettazione padre oppure <see langword="null" /> se non esiste alcuna finestra di progettazione padre.</span><span class="sxs-lookup"><span data-stu-id="90aec-304">An <see cref="T:System.ComponentModel.Design.IDesigner" /> representing the parent designer, or <see langword="null" /> if there is no parent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-305">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="90aec-305">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="90aec-306">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.ComponentModel.Design.ComponentDesigner> a un'interfaccia <xref:System.ComponentModel.Design.ITreeDesigner>.</span><span class="sxs-lookup"><span data-stu-id="90aec-306">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.ITreeDesigner> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90aec-307">Ottiene i verbi in fase di progettazione supportati dal componente associato alla finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-307">Gets the design-time verbs supported by the component that is associated with the designer.</span></span></summary>
        <value><span data-ttu-id="90aec-308">Insieme <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> di oggetti <see cref="T:System.ComponentModel.Design.DesignerVerb" /> oppure <see langword="null" /> se non è disponibile alcun verbo di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-308">A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> of <see cref="T:System.ComponentModel.Design.DesignerVerb" /> objects, or <see langword="null" /> if no designer verbs are available.</span></span> <span data-ttu-id="90aec-309">Questa implementazione predefinita restituisce sempre <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="90aec-309">This default implementation always returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90aec-310">Questo metodo restituisce `null` se il componente non dispone di verbi in fase di progettazione.</span><span class="sxs-lookup"><span data-stu-id="90aec-310">This method returns `null` if the component has no design-time verbs.</span></span>  
  
 <span data-ttu-id="90aec-311">In genere, l'ambiente in fase di progettazione visualizza verbi restituiti da questo metodo in un menu di scelta rapida (rapida).</span><span class="sxs-lookup"><span data-stu-id="90aec-311">The design-time environment typically displays verbs returned by this method in a shortcut (right-click) menu.</span></span> <span data-ttu-id="90aec-312">Quando un utente seleziona uno dei verbi, la <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> metodo dell'oggetto corrispondente <xref:System.ComponentModel.Design.DesignerVerb> viene richiamato.</span><span class="sxs-lookup"><span data-stu-id="90aec-312">When a user selects one of the verbs, the <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method of the corresponding <xref:System.ComponentModel.Design.DesignerVerb> is invoked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90aec-313">In genere fornisce un ambiente di progettazione un **proprietà** comando dal menu di scelta rapida di un componente.</span><span class="sxs-lookup"><span data-stu-id="90aec-313">A design-time environment typically provides a **Properties** command on a component's shortcut menu.</span></span> <span data-ttu-id="90aec-314">Pertanto, non includere tale voce nella raccolta dei verbi di progettazione specificato.</span><span class="sxs-lookup"><span data-stu-id="90aec-314">Therefore, do not include such an entry in the collection of designer-specified verbs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
  </Members>
</Type>