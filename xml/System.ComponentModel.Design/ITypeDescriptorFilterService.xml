<Type Name="ITypeDescriptorFilterService" FullName="System.ComponentModel.Design.ITypeDescriptorFilterService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="91e76a0ebf51b9ceb3ce9ae815d36bd43863f483" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37695647" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITypeDescriptorFilterService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDescriptorFilterService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDescriptorFilterService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDescriptorFilterService" />
  <TypeSignature Language="F#" Value="type ITypeDescriptorFilterService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fornisce un'interfaccia per modificare il set dei descrittori di membro per un componente in modalità progettazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> interfaccia fornisce un'interfaccia che consente di modificare le proprietà, eventi e gli attributi a livello di classe di un componente in fase di progettazione. Questa modifica viene eseguita tramite il set di descrittori forniti da un componente tramite un <xref:System.ComponentModel.TypeDescriptor>. Il descrittore di tipo viene eseguita una query al sito del componente per il <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> del servizio e, se presente, il descrittore di tipo passa tutti i metadati raccolti per questo servizio. Il servizio può quindi modificare i metadati da aggiungere, rimuovere e modificando le caratteristiche del componente.  
  
 Ad esempio, le proprietà di un componente modificabili tramite una chiamata al <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> (metodo). Il servizio filtro Ottiene un dizionario che contiene i nomi delle proprietà e i relativi descrittori di proprietà di tipo <xref:System.ComponentModel.PropertyDescriptor>. Le modifiche vengono implementate usando la logica seguente.  
  
|Modifica|Implementazione|  
|------------------|--------------------|  
|Rimozione|Eliminare la voce corrispondente nel dizionario.|  
|Addizione|Aggiungere la voce appropriata al dizionario.|  
|Modifica|Chiamare i metodi del descrittore di proprietà esistenti, sostituire la voce del descrittore della proprietà associata o sostituire la coppia chiave/valore di proprietà completo nel dizionario.|  
  
 Il valore restituito di <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> determina se questo set di proprietà è fissa. Se questo metodo restituisce `true`, il <xref:System.ComponentModel.TypeDescriptor> per questo componente può memorizzare nella cache i risultati. Questa cache viene mantenuta fino a quando il componente viene sottoposto a garbage collection o <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> viene chiamato metodo del descrittore del tipo.  
  
   
  
## Examples  
 L'esempio di codice seguente illustra una finestra di progettazione che usa il <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> per filtrare la raccolta di attributi di elementi nuovi o esistenti <xref:System.Windows.Forms.Button> per aggiungere un attributo della finestra di progettazione per una nuova finestra di progettazione prima di caricare o ricaricare la finestra di progettazione per il pulsante.  
  
 Per usare l'esempio, aggiungere il codice a un progetto Windows Forms e caricare i componenti dalla libreria di classi nella casella degli strumenti.  
  
 Vedere anche [procedura dettagliata: compilare automaticamente la casella degli strumenti con componenti personalizzati](http://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx).  
  
 Aggiungere alcuni pulsanti al form. Aggiungere un `ButtonDesignerFilterComponent` al form, che verrà visualizzata nella barra dei componenti. Il `ButtonDesignerFilterComponent` aggiungerà un `ButtonDesignerFilterService`, che implementa l'interfaccia <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>, come un provider di servizi in modalità progettazione. Nuova o esistente <xref:System.Windows.Forms.Button> oggetti nel modulo inizierà colore in modo ciclico dopo il `ButtonDesignerFilterService` sostituisce la finestra di progettazione per ogni pulsante nuovo o esistente con un `ColorCycleButtonDesigner`. I pulsanti verranno colorato di ciclo quando si sposta il puntatore del mouse su di essi e in alternativa continua in modo ciclico o reimpostare i colori di sfondo e primo piano in `MouseLeave` gli eventi. Nuovo <xref:System.Windows.Forms.Button> oggetti sarà assegnato il `ColorCycleButtonDesigner` tramite il <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> metodo del `ButtonDesignerFilterService` che è stato caricato, finché il `ButtonDesignerFilterComponent` viene eliminato e sostituirà quella originale <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>. Il `ColorCycleButton` classe in questo esempio è una <xref:System.Windows.Forms.Button> associata a un `ColorCycleButtonDesigner`.  
  
 [!code-cpp[ITypeDescriptorFilterService#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CPP/source.cpp#1)]
 [!code-csharp[ITypeDescriptorFilterService#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CS/source.cs#1)]
 [!code-vb[ITypeDescriptorFilterService#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeDescriptorFilterService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Per filtrare i descrittori di membro esposti da un <see cref="T:System.ComponentModel.TypeDescriptor" />, implementano questa interfaccia in un componente ed eseguire l'override di <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />, <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />, o <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> metodi di questa classe per filtrare gli attributi, gli eventi o proprietà, rispettivamente.</para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterAttributes(class System.ComponentModel.IComponent component, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterAttributes (component As IComponent, attributes As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterAttributes(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterAttributes (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Componente di cui filtrare gli attributi.</param>
        <param name="attributes">Dizionario degli attributi che può essere modificato.</param>
        <summary>Filtra gli attributi esposti da un componente tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns>
          <see langword="true" /> se l'insieme di attributi filtrati può essere memorizzato nella cache; <see langword="false" /> se il servizio filtro deve eseguire di nuovo la query.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato quando un utente richiede un set di attributi per un componente. Gli attributi vengono aggiunti al dizionario con l'attributo <xref:System.Attribute.TypeId%2A> come le chiavi e l'attributo come valore effettivo. I responsabili dell'implementazione di questo servizio può aggiungere, rimuovere o modificare voci degli attributi esistenti nel dizionario.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Restituire <see langword="false" /> solo quando necessario, poiché ripetuti di query per il servizio di filtro del descrittore di tipo può influire sulle prestazioni.</para>
        </block>
        <altmember cref="T:System.Attribute" />
        <altmember cref="P:System.Attribute.TypeId" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterEvents">
      <MemberSignature Language="C#" Value="public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterEvents(class System.ComponentModel.IComponent component, class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterEvents (component As IComponent, events As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterEvents(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member FilterEvents : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterEvents (component, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Componente per il quale filtrare gli eventi.</param>
        <param name="events">Dizionario degli eventi che può essere modificato.</param>
        <summary>Filtra gli eventi esposti da un componente tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns>
          <see langword="true" /> se l'insieme di eventi filtrati può essere memorizzato nella cache; <see langword="false" /> se il servizio filtro deve eseguire di nuovo la query.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato quando un utente richiede un set di eventi per un componente. Gli eventi vengono aggiunti al dizionario con i nomi degli eventi come le chiavi e le corrispondenti <xref:System.ComponentModel.EventDescriptor> oggetti come valori. I responsabili dell'implementazione di questo servizio può aggiungere, rimuovere o modificare le voci di evento nel dizionario.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Restituire <see langword="false" /> solo quando necessario, poiché ripetuti di query per il servizio di filtro del descrittore di tipo può influire sulle prestazioni.</para>
        </block>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterProperties">
      <MemberSignature Language="C#" Value="public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterProperties(class System.ComponentModel.IComponent component, class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterProperties (component As IComponent, properties As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterProperties(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member FilterProperties : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterProperties (component, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Componente per il quale filtrare le proprietà.</param>
        <param name="properties">Dizionario delle proprietà che può essere modificato.</param>
        <summary>Filtra le proprietà esposte da un componente tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns>
          <see langword="true" /> se il set di proprietà filtrate può essere memorizzato nella cache; <see langword="false" /> se il servizio filtro deve eseguire di nuovo la query.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato quando un utente richiede un set di proprietà per un componente. Le proprietà vengono aggiunte al dizionario con i nomi delle proprietà come le chiavi e le corrispondenti <xref:System.ComponentModel.PropertyDescriptor> oggetti come valori. I responsabili dell'implementazione di questo servizio può aggiungere, rimuovere o modificare voci nel dizionario di proprietà.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Restituire <see langword="false" /> solo quando necessario, poiché ripetuti di query per il servizio di filtro del descrittore di tipo può influire sulle prestazioni.</para>
        </block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
  </Members>
</Type>