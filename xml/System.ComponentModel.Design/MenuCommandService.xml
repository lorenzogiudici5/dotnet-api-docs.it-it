<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MenuCommandService.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e0516c7b006471c73e0f38f2e6a40d4566190dd2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e0516c7b006471c73e0f38f2e6a40d4566190dd2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IMenuCommandService" /&gt;</ph> interface.</source>
          <target state="translated">Implementa l'interfaccia <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IMenuCommandService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> interface, which is the managed interface used to add handlers for menu commands and to define verbs.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> classe implementa il <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> interfaccia, che rappresenta l'interfaccia gestita utilizzata per aggiungere gestori per i comandi di menu e per definire i verbi.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> class is automatically offered by the package class to offer global commands for an entire package, and it is also offered by the <ph id="ph2">`Microsoft.VisualStudio.Shell.WindowPane`</ph> class to offer commands for the current window.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> classe viene fornita automaticamente dalla classe del package per rendere disponibili i comandi globali per un intero pacchetto, e viene inoltre offerta dalla <ph id="ph2">`Microsoft.VisualStudio.Shell.WindowPane`</ph> classe per rendere disponibili i comandi per la finestra corrente.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>This offering is always done through the service container, so anyone deriving from the package or window pane classes can remove or replace the default implementation of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> interface.</source>
          <target state="translated">Questa offerta è eseguita sempre tramite il contenitore del servizio, quindi la derivazione dal pacchetto o classi di finestra riquadro è possono rimuovere o sostituire l'implementazione predefinita del <ph id="ph1">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> class utilizes several other services.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> classe utilizza diversi altri servizi.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>All of these services are optional, so the behavior of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> class degrades if one or more services are missing.</source>
          <target state="translated">Tutti questi servizi sono facoltativi, pertanto il comportamento del <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> classe risulta ridotto se uno o più servizi risultano mancanti.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>The following table shows which services are used and for what purpose.</source>
          <target state="translated">La tabella seguente illustra i servizi utilizzati e il loro scopo.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Service</source>
          <target state="translated">Service</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Purpose</source>
          <target state="translated">Scopo</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Used to discover the current selection in order to obtain verbs offered by the currently selected designer.</source>
          <target state="translated">Utilizzato per individuare la selezione corrente per ottenere i verbi forniti dalla finestra di progettazione attualmente selezionata.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Used to obtain the designer for the currently selected component, if any.</source>
          <target state="translated">Utilizzato per ottenere la finestra di progettazione per il componente selezionato, se presente.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Used to notify <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> that the command status has changed.</source>
          <target state="translated">Utilizzato per notificare <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> che è stato modificato lo stato del comando.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Used to show context menus.</source>
          <target state="translated">Utilizzato per mostrare i menu di scelta rapida.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
          <source>The service provider that this service uses to obtain other services.</source>
          <target state="translated">Il provider di servizi utilizzato da questo servizio per ottenere gli altri servizi.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
          <source>If the service is being used with a designer, the <ph id="ph1">`serviceProvider`</ph> parameter should be the service provider for the designer, as is the case with <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.</source>
          <target state="translated">Se il servizio viene utilizzato con una finestra di progettazione, il <ph id="ph1">`serviceProvider`</ph> parametro deve essere il provider di servizi per la finestra di progettazione, come accade con <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> to add.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> da aggiungere.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
          <source>Adds a command handler to the menu command service.</source>
          <target state="translated">Aggiunge un gestore di comandi al servizio dei comandi di menu.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A&gt;</ph> method adds a command handler to the menu command service.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A&gt;</ph> metodo aggiunge un gestore del comando per il servizio di comando di menu.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
          <source>Command handlers do not define the text, shortcut, or placement of a menu item.</source>
          <target state="translated">Gestori di comandi non definisce il testo, una scelta rapida o la selezione di una voce di menu.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
          <source>Rather, they define the menu item’s behavior if the item is clicked.</source>
          <target state="translated">Piuttosto, definiscono il comportamento della voce di menu se si seleziona l'elemento.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
          <source><ph id="ph1">&lt;paramref name="command" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="command" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
          <source>A command handler <ph id="ph1">&lt;paramref name="command" /&gt;</ph> already exists.</source>
          <target state="translated">Un gestore di comandi <ph id="ph1">&lt;paramref name="command" /&gt;</ph> è già esistente.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerVerb" /&gt;</ph> to add.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerVerb" /&gt;</ph> da aggiungere.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
          <source>Adds a verb to the verb table of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph>.</source>
          <target state="translated">Aggiunge un verbo alla tabella dei verbi dell'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
          <source>This verb is available regardless of what designer is currently selected.</source>
          <target state="translated">Il verbo è disponibile indipendentemente dalla finestra di progettazione attualmente selezionata.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
          <source>Unlike menu commands, verbs can define the text that is displayed to the user, but they do not define the placement of the command on the actual menu.</source>
          <target state="translated">A differenza dei comandi di menu, verbi possono definire il testo che viene visualizzato all'utente, ma non definiscono la posizione del comando all'interno del menu.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
          <source><ph id="ph1">&lt;paramref name="verb" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="verb" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph>.</source>
          <target state="translated">Rilascia tutte le risorse usate da <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph>.</source>
          <target state="translated">Rilascia tutte le risorse usate da <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph>.</source>
          <target state="translated">Chiamare il metodo <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph> dopo aver terminato di utilizzare l'oggetto <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> in an unusable state.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph> lascia l'oggetto <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> in una condizione di inutilizzabilità.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> was occupying.</source>
          <target state="translated">Dopo la chiamata <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph>, è necessario rilasciare tutti i riferimenti al <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> in modo che il garbage collector può recuperare la memoria che di <ph id="ph3">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> occupata.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>implementazione di un metodo Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph>.</source>
          <target state="translated">Chiamare sempre il metodo <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph> prima di rilasciare l'ultimo riferimento a <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> dell'oggetto <ph id="ph2">`Finalize`</ph> non viene richiamato dal Garbage Collector.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per rilasciare sia le risorse gestite sia quelle non gestite; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph>.</source>
          <target state="translated">Rilascia tutte le risorse usate da <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Questo metodo viene chiamato dal metodo pubblico <ph id="ph1">`Dispose()`</ph> (metodo) e <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> richiama il metodo protetto <ph id="ph2">`Dispose(Boolean)`</ph> metodo con il <ph id="ph3">`disposing`</ph> parametro impostato su <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> richiama <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> impostato su <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> references.</source>
          <target state="translated">Quando il <ph id="ph1">`disposing`</ph> parametro è true, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> riferimenti.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Il metodo richiama il metodo <ph id="ph1">`Dispose()`</ph> di ciascun oggetto cui viene fatto riferimento.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> può essere chiamato più volte da altri oggetti.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> prestare attenzione a non fare riferimento a oggetti che sono stati eliminati in una precedente chiamata a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su come implementare <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, vedere <bpt id="p1">[</bpt>implementazione di un metodo Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>si esegue l'override del metodo Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
          <source>Ensures that the verb list has been created.</source>
          <target state="translated">Assicura che l'elenco dei verbi sia stato creato.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.EnsureVerbs%2A&gt;</ph> method creates the verb list if it has not already been created.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.EnsureVerbs%2A&gt;</ph> metodo crea l'elenco dei verbi se non è già stato creato.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Searches for the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> associated with the given command ID.</source>
          <target state="translated">Ricerca l'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> associato all'ID comando indicato.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.CommandID" /&gt;</ph> to find.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.CommandID" /&gt;</ph> da trovare.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
          <source>Searches for the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> associated with the given command ID.</source>
          <target state="translated">Ricerca l'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> associato all'ID comando indicato.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> associated with the given command; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the command is not found.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> associato al comando indicato; in caso contrario, <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non è possibile trovare il comando.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
          <source>The GUID of the command.</source>
          <target state="translated">GUID del comando.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
          <source>The ID of the command.</source>
          <target state="translated">ID del comando.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
          <source>Searches for the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> associated with the given command.</source>
          <target state="translated">Ricerca l'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> associato al comando indicato.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> associated with the given command; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the command is not found.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> associato al comando indicato; in caso contrario, <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non è possibile trovare il comando.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
          <source>The GUID of the command list.</source>
          <target state="translated">GUID dell'elenco di comandi.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
          <source>Gets the command list for a given GUID.</source>
          <target state="translated">Ottiene l'elenco dei comandi per un determinato GUID.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> of commands.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> di comandi.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the service to retrieve.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del servizio da recuperare.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
          <source>Gets a reference to the requested service.</source>
          <target state="translated">Ottiene un riferimento al servizio richiesto.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
          <source>A reference to <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph>; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the service is not found.</source>
          <target state="translated">Riferimento a <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph>; in caso contrario, <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non è possibile trovare il servizio.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.MenuCommandService">
          <source>Invokes a command on the local form or in the global environment.</source>
          <target state="translated">Richiama un comando sul form locale o nell'ambiente globale.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
          <source>The command to invoke.</source>
          <target state="translated">Comando da richiamare.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
          <source>Invokes the given command on the local form or in the global environment.</source>
          <target state="translated">Richiama il comando indicato sul form locale o nell'ambiente globale.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the command was found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, se il comando è stato trovato, <ph id="ph2">&lt;see langword="false" /&gt;</ph> in caso contrario.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
          <source>The local form is first searched for the given command ID.</source>
          <target state="translated">Form locale viene innanzitutto eseguita la ricerca per l'ID di comando specificato.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
          <source>If it is found, it is invoked.</source>
          <target state="translated">Se viene trovato, viene richiamato.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
          <source>Otherwise, the command ID is passed to the global environment command handler, if one is available.</source>
          <target state="translated">In caso contrario, l'ID di comando viene passato al gestore del comando ambiente globale, se disponibile.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
          <source>The command to invoke.</source>
          <target state="translated">Comando da richiamare.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
          <source>A parameter for the invocation.</source>
          <target state="translated">Un parametro per la chiamata.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
          <source>Invokes the given command with the given parameter on the local form or in the global environment.</source>
          <target state="translated">Richiama il comando indicato con il parametro indicato sul form locale o nell'ambiente globale.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the command was found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, se il comando è stato trovato, <ph id="ph2">&lt;see langword="false" /&gt;</ph> in caso contrario.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
          <source>The local form is first searched for the given command ID.</source>
          <target state="translated">Form locale viene innanzitutto eseguita la ricerca per l'ID di comando specificato.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
          <source>If it is found, it is invoked.</source>
          <target state="translated">Se viene trovato, viene richiamato.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
          <source>Otherwise, the command ID is passed to the global environment command handler, if one is available.</source>
          <target state="translated">In caso contrario, l'ID di comando viene passato al gestore del comando ambiente globale, se disponibile.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
          <source>Occurs when the status of a menu command has changed.</source>
          <target state="translated">Viene generato quando lo stato di un comando di menu viene modificato.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulla gestione degli eventi, vedere <bpt id="p1">[</bpt>NIB: utilizzo degli eventi<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /&gt;</ph> che contiene i dati dell'evento.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A&gt;</ph> method is called by a menu command when its status has changed.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A&gt;</ph> metodo viene chiamato da un comando di menu quando il relativo stato è stato modificato.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>gestione e generazione di eventi<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A&gt;</ph> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /&gt;</ph> in una classe derivata, assicurarsi di chiamare la classe base <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /&gt;</ph> metodo in modo che i delegati registrati ricevano l'evento.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
          <source>The command to remove.</source>
          <target state="translated">Comando da rimuovere.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
          <source>Removes the given menu command from the document.</source>
          <target state="translated">Rimuove dal documento il comando di menu indicato.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
          <source>If there are no more commands in the command group, the group is removed.</source>
          <target state="translated">Se non sono presenti altri comandi del gruppo di comando, il gruppo viene rimosso.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
          <source><ph id="ph1">&lt;paramref name="command" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="command" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
          <source>The verb to remove.</source>
          <target state="translated">Il verbo da rimuovere.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
          <source>Removes the given verb from the document.</source>
          <target state="translated">Rimuove il verbo specificato dal documento.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
          <source><ph id="ph1">&lt;paramref name="verb" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="verb" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
          <source>The shortcut menu to display.</source>
          <target state="translated">Il menu di scelta rapida da visualizzare.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
          <source>The x-coordinate of the shortcut menu's location.</source>
          <target state="translated">La coordinata x della posizione del menu di scelta rapida.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
          <source>The y-coordinate of the shortcut menu's location.</source>
          <target state="translated">La coordinata y della posizione del menu di scelta rapida.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
          <source>Shows the shortcut menu with the given command ID at the given location.</source>
          <target state="translated">Mostra il menu di scelta rapida con l'ID comando indicato nella posizione indicata.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
          <source>The default implementation does nothing.</source>
          <target state="translated">L'implementazione predefinita non esegue alcuna operazione.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>Gets a collection of the designer verbs that are currently available.</source>
          <target state="translated">Ottiene un insieme dei verbi di progettazione attualmente disponibili.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /&gt;</ph> of the designer verbs that are currently available.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /&gt;</ph> dei verbi di progettazione attualmente disponibili.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A&gt;</ph> property provides a collection of verbs.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A&gt;</ph> proprietà fornisce una raccolta di verbi.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>These verbs come from two places:</source>
          <target state="translated">Questi verbi provengono da due posizioni:</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>Verbs added through the <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A&gt;</ph> method of <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A&gt;</ph>.</source>
          <target state="translated">Verbi aggiunti tramite il <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A&gt;</ph> metodo <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>Verbs offered by the currently selected designer.</source>
          <target state="translated">Verbi forniti dalla finestra di progettazione attualmente selezionata.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>Verbs added to this service through the <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A&gt;</ph> method are called global verbs because they are global to this service, but generally there is one instance of this service for each tool or document window.</source>
          <target state="translated">Verbi aggiunti al servizio tramite il <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A&gt;</ph> metodo sono detti verbi globali, in quanto sono globali per il servizio, ma in genere è un'istanza del servizio per ogni finestra degli strumenti o documento.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>Designer verbs are obtained by querying the service provider for <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.Design.ISelectionService&gt;</ph>.</source>
          <target state="translated">Verbi di progettazione vengono ottenuti eseguendo una query nel provider di servizi <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> e <ph id="ph2">&lt;xref:System.ComponentModel.Design.ISelectionService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>If the selection service offers a primary selection, and a designer can be obtained for that selection from <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph>, the designer’s verbs are added to this list.</source>
          <target state="translated">Se il servizio di selezione fornisce una selezione primaria ed è possibile ottenere una finestra di progettazione per la selezione da <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph>, questo elenco vengono aggiunti i verbi di progettazione.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommandService.Verbs">
          <source>If the name of a global verb conflicts with the name of a designer verb, the designer-provided designer verb takes precedence.</source>
          <target state="translated">Se il nome di un verbo globale in conflitto con il nome di un verbo di progettazione, il verbo di progettazione fornite dalla finestra di progettazione ha la precedenza.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>