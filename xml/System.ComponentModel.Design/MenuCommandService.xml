<Type Name="MenuCommandService" FullName="System.ComponentModel.Design.MenuCommandService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1de3c2e9261ededd99f2e94c8d5bf2d539066cd6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36705678" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MenuCommandService : IDisposable, System.ComponentModel.Design.IMenuCommandService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuCommandService extends System.Object implements class System.ComponentModel.Design.IMenuCommandService, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.MenuCommandService" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuCommandService&#xA;Implements IDisposable, IMenuCommandService" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuCommandService : IDisposable, System::ComponentModel::Design::IMenuCommandService" />
  <TypeSignature Language="F#" Value="type MenuCommandService = class&#xA;    interface IMenuCommandService&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IMenuCommandService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2820c-101">Implementa l'interfaccia <see cref="T:System.ComponentModel.Design.IMenuCommandService" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2820c-101">Implements the <see cref="T:System.ComponentModel.Design.IMenuCommandService" /> interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2820c-102">Il <xref:System.ComponentModel.Design.MenuCommandService> implementa la <xref:System.ComponentModel.Design.IMenuCommandService> interfaccia, che rappresenta l'interfaccia gestita utilizzata per aggiungere gestori per comandi di menu e per definire i verbi.</span><span class="sxs-lookup"><span data-stu-id="2820c-102">The <xref:System.ComponentModel.Design.MenuCommandService> class implements the <xref:System.ComponentModel.Design.IMenuCommandService> interface, which is the managed interface used to add handlers for menu commands and to define verbs.</span></span>  
  
 <span data-ttu-id="2820c-103">Il <xref:System.ComponentModel.Design.MenuCommandService> classe viene fornita automaticamente dalla classe del package per rendere disponibili i comandi globali per un intero pacchetto, e viene inoltre offerta dal `Microsoft.VisualStudio.Shell.WindowPane` (classe) per rendere disponibili i comandi per la finestra corrente.</span><span class="sxs-lookup"><span data-stu-id="2820c-103">The <xref:System.ComponentModel.Design.MenuCommandService> class is automatically offered by the package class to offer global commands for an entire package, and it is also offered by the `Microsoft.VisualStudio.Shell.WindowPane` class to offer commands for the current window.</span></span> <span data-ttu-id="2820c-104">Questa offerta viene eseguita sempre tramite contenitore del servizio, pertanto la derivazione dal pacchetto o classi di finestra riquadro è possono rimuovere o sostituire l'implementazione predefinita del <xref:System.ComponentModel.Design.IMenuCommandService> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="2820c-104">This offering is always done through the service container, so anyone deriving from the package or window pane classes can remove or replace the default implementation of the <xref:System.ComponentModel.Design.IMenuCommandService> interface.</span></span>  
  
 <span data-ttu-id="2820c-105">Il <xref:System.ComponentModel.Design.MenuCommandService> classe utilizza diversi altri servizi.</span><span class="sxs-lookup"><span data-stu-id="2820c-105">The <xref:System.ComponentModel.Design.MenuCommandService> class utilizes several other services.</span></span> <span data-ttu-id="2820c-106">Tutti questi servizi sono facoltativi, pertanto il comportamento del <xref:System.ComponentModel.Design.MenuCommandService> classe comporta una riduzione se uno o più servizi risultano mancanti.</span><span class="sxs-lookup"><span data-stu-id="2820c-106">All of these services are optional, so the behavior of the <xref:System.ComponentModel.Design.MenuCommandService> class degrades if one or more services are missing.</span></span> <span data-ttu-id="2820c-107">La tabella seguente illustra i servizi utilizzati e il loro scopo.</span><span class="sxs-lookup"><span data-stu-id="2820c-107">The following table shows which services are used and for what purpose.</span></span>  
  
|<span data-ttu-id="2820c-108">Service</span><span class="sxs-lookup"><span data-stu-id="2820c-108">Service</span></span>|<span data-ttu-id="2820c-109">Scopo</span><span class="sxs-lookup"><span data-stu-id="2820c-109">Purpose</span></span>|  
|-------------|-------------|  
|<xref:System.ComponentModel.Design.ISelectionService>|<span data-ttu-id="2820c-110">Usato per individuare la selezione corrente per ottenere i verbi forniti dalla finestra di progettazione attualmente selezionato.</span><span class="sxs-lookup"><span data-stu-id="2820c-110">Used to discover the current selection in order to obtain verbs offered by the currently selected designer.</span></span>|  
|<xref:System.ComponentModel.Design.IDesignerHost>|<span data-ttu-id="2820c-111">Utilizzato per ottenere la finestra di progettazione per il componente selezionato, se presente.</span><span class="sxs-lookup"><span data-stu-id="2820c-111">Used to obtain the designer for the currently selected component, if any.</span></span>|  
|`Microsoft.VisualStudio.Shell.Interop.IVsUIShell`|<span data-ttu-id="2820c-112">Utilizzato per notificare a Visual Studio che è stato modificato lo stato del comando.</span><span class="sxs-lookup"><span data-stu-id="2820c-112">Used to notify Visual Studio that the command status has changed.</span></span>|  
|`Microsoft.VisualStudio.Shell.Interop.IOleComponentUIManager`|<span data-ttu-id="2820c-113">Consente di visualizzare menu di scelta rapida.</span><span class="sxs-lookup"><span data-stu-id="2820c-113">Used to show context menus.</span></span>|  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.CommandID" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuCommandService (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuCommandService(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.MenuCommandService : IServiceProvider -&gt; System.ComponentModel.Design.MenuCommandService" Usage="new System.ComponentModel.Design.MenuCommandService serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="2820c-114">Il provider di servizi utilizzato da questo servizio per ottenere gli altri servizi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-114">The service provider that this service uses to obtain other services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2820c-115">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-115">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.MenuCommandService" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2820c-116">Se il servizio viene utilizzato con una finestra di progettazione, il `serviceProvider` parametro deve essere il provider di servizi per la finestra di progettazione, come accade con <xref:System.ComponentModel.Design.DesignSurface>.</span><span class="sxs-lookup"><span data-stu-id="2820c-116">If the service is being used with a designer, the `serviceProvider` parameter should be the service provider for the designer, as is the case with <xref:System.ComponentModel.Design.DesignSurface>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="AddCommand">
      <MemberSignature Language="C#" Value="public virtual void AddCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddCommand : System.ComponentModel.Design.MenuCommand -&gt; unit&#xA;override this.AddCommand : System.ComponentModel.Design.MenuCommand -&gt; unit" Usage="menuCommandService.AddCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="2820c-117">Oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-117">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2820c-118">Aggiunge un gestore di comandi al servizio dei comandi di menu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-118">Adds a command handler to the menu command service.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2820c-119">Il <xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A> metodo aggiunge un gestore del comando per il servizio di comando di menu.</span><span class="sxs-lookup"><span data-stu-id="2820c-119">The <xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A> method adds a command handler to the menu command service.</span></span> <span data-ttu-id="2820c-120">Gestori di comandi non definisce il testo, scelta rapida o la selezione di una voce di menu.</span><span class="sxs-lookup"><span data-stu-id="2820c-120">Command handlers do not define the text, shortcut, or placement of a menu item.</span></span> <span data-ttu-id="2820c-121">Piuttosto, definiscono il comportamento della voce di menu se si seleziona l'elemento.</span><span class="sxs-lookup"><span data-stu-id="2820c-121">Rather, they define the menu item’s behavior if the item is clicked.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2820c-122">
            <paramref name="command" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-122">
              <paramref name="command" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2820c-123">Un gestore di comandi <paramref name="command" /> è già esistente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-123">A command handler <paramref name="command" /> already exists.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public virtual void AddVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberSignature Language="F#" Value="abstract member AddVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit&#xA;override this.AddVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit" Usage="menuCommandService.AddVerb verb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb">
          <span data-ttu-id="2820c-124">Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-124">The <see cref="T:System.ComponentModel.Design.DesignerVerb" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2820c-125">Aggiunge un verbo alla tabella dei verbi dell'oggetto <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-125">Adds a verb to the verb table of the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2820c-126">Il verbo è disponibile indipendentemente dalla finestra di progettazione attualmente selezionata.</span><span class="sxs-lookup"><span data-stu-id="2820c-126">This verb is available regardless of what designer is currently selected.</span></span> <span data-ttu-id="2820c-127">A differenza dei comandi di menu, i verbi possono definire il testo che viene visualizzato all'utente, ma non definiscono la posizione del comando del menu effettivo.</span><span class="sxs-lookup"><span data-stu-id="2820c-127">Unlike menu commands, verbs can define the text that is displayed to the user, but they do not define the placement of the command on the actual menu.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2820c-128">
            <paramref name="verb" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-128">
              <paramref name="verb" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2820c-129">Rilascia tutte le risorse usate da <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-129">Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="menuCommandService.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2820c-130">Rilascia tutte le risorse usate da <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-130">Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2820c-131">Chiamare il metodo <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> dopo aver terminato di utilizzare l'oggetto <xref:System.ComponentModel.Design.MenuCommandService>.</span><span class="sxs-lookup"><span data-stu-id="2820c-131">Call <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.MenuCommandService>.</span></span> <span data-ttu-id="2820c-132">Il metodo <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> lascia l'oggetto <xref:System.ComponentModel.Design.MenuCommandService> in una condizione di inutilizzabilità.</span><span class="sxs-lookup"><span data-stu-id="2820c-132">The <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.MenuCommandService> in an unusable state.</span></span> <span data-ttu-id="2820c-133">Dopo la chiamata <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A>, è necessario rilasciare tutti i riferimenti per il <xref:System.ComponentModel.Design.MenuCommandService> consentire al garbage collector di recuperare la memoria che il <xref:System.ComponentModel.Design.MenuCommandService> occupata.</span><span class="sxs-lookup"><span data-stu-id="2820c-133">After calling <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.MenuCommandService> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.MenuCommandService> was occupying.</span></span> <span data-ttu-id="2820c-134">Per altre informazioni, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="2820c-134">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2820c-135">Chiamare sempre il metodo <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> prima di rilasciare l'ultimo riferimento a <xref:System.ComponentModel.Design.MenuCommandService>.</span><span class="sxs-lookup"><span data-stu-id="2820c-135">Always call <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.MenuCommandService>.</span></span> <span data-ttu-id="2820c-136">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.ComponentModel.Design.MenuCommandService> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.</span><span class="sxs-lookup"><span data-stu-id="2820c-136">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.MenuCommandService> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="menuCommandService.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="2820c-137">
            <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-137">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2820c-138">Rilascia tutte le risorse usate da <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-138">Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2820c-139">Questo metodo viene chiamato dal metodo pubblico `Dispose()` metodo e il <xref:System.Object.Finalize%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2820c-139">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="2820c-140">`Dispose()` richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="2820c-140">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="2820c-141"><xref:System.Object.Finalize%2A> richiama `Dispose` con `disposing` impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="2820c-141"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="2820c-142">Quando il `disposing` parametro è true, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.ComponentModel.Design.MenuCommandService> riferimenti.</span><span class="sxs-lookup"><span data-stu-id="2820c-142">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.MenuCommandService> references.</span></span> <span data-ttu-id="2820c-143">Il metodo richiama il metodo `Dispose()` di ciascun oggetto cui viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="2820c-143">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="2820c-144">
            <para>
              <see langword="Dispose" /> può essere chiamato più volte da altri oggetti. Quando si esegue l'override <see langword="Dispose(Boolean)" /> prestare attenzione a non fare riferimento a oggetti già eliminati in una chiamata precedente a <see langword="Dispose" />. Per ulteriori informazioni su come implementare <see langword="Dispose(Boolean)" />, vedere [implementazione di un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Per ulteriori informazioni <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, vedere [pulizia backup Resources](~/docs/standard/garbage-collection/unmanaged.md) non gestito e [override del metodo Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-144">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EnsureVerbs">
      <MemberSignature Language="C#" Value="protected void EnsureVerbs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureVerbs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureVerbs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureVerbs();" />
      <MemberSignature Language="F#" Value="member this.EnsureVerbs : unit -&gt; unit" Usage="menuCommandService.EnsureVerbs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2820c-145">Assicura che l'elenco dei verbi sia stato creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-145">Ensures that the verb list has been created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2820c-146">Il <xref:System.ComponentModel.Design.MenuCommandService.EnsureVerbs%2A> metodo crea l'elenco dei verbi se non è già stato creato.</span><span class="sxs-lookup"><span data-stu-id="2820c-146">The <xref:System.ComponentModel.Design.MenuCommandService.EnsureVerbs%2A> method creates the verb list if it has not already been created.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindCommand">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2820c-147">Ricerca l'oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> associato all'ID comando indicato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-147">Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command ID.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.MenuCommand FindCommand(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::MenuCommand ^ FindCommand(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberSignature Language="F#" Value="abstract member FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand&#xA;override this.FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand" Usage="menuCommandService.FindCommand commandID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID">
          <span data-ttu-id="2820c-148">
            <see cref="T:System.ComponentModel.Design.CommandID" /> da trovare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-148">The <see cref="T:System.ComponentModel.Design.CommandID" /> to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2820c-149">Ricerca l'oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> associato all'ID comando indicato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-149">Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command ID.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2820c-150">L'oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> associato al comando indicato; in caso contrario, <see langword="null" /> se non è possibile trovare il comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-150">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command; otherwise, <see langword="null" /> if the command is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.MenuCommand FindCommand (Guid guid, int id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.MenuCommand FindCommand(valuetype System.Guid guid, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::Design::MenuCommand ^ FindCommand(Guid guid, int id);" />
      <MemberSignature Language="F#" Value="member this.FindCommand : Guid * int -&gt; System.ComponentModel.Design.MenuCommand" Usage="menuCommandService.FindCommand (guid, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.Guid" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="guid">
          <span data-ttu-id="2820c-151">GUID del comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-151">The GUID of the command.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="2820c-152">ID del comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-152">The ID of the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2820c-153">Ricerca l'oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> associato al comando indicato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-153">Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2820c-154">L'oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> associato al comando indicato; in caso contrario, <see langword="null" /> se non è possibile trovare il comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-154">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command; otherwise, <see langword="null" /> if the command is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetCommandList">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection GetCommandList (Guid guid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Collections.ICollection GetCommandList(valuetype System.Guid guid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Collections::ICollection ^ GetCommandList(Guid guid);" />
      <MemberSignature Language="F#" Value="member this.GetCommandList : Guid -&gt; System.Collections.ICollection" Usage="menuCommandService.GetCommandList guid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="guid">
          <span data-ttu-id="2820c-155">GUID dell'elenco di comandi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-155">The GUID of the command list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2820c-156">Ottiene l'elenco dei comandi per un determinato GUID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-156">Gets the command list for a given GUID.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2820c-157">Un <see cref="T:System.Collections.ICollection" /> di comandi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-157">An <see cref="T:System.Collections.ICollection" /> of commands.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="menuCommandService.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="2820c-158">Oggetto <see cref="T:System.Type" /> del servizio da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-158">The <see cref="T:System.Type" /> of the service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2820c-159">Ottiene un riferimento al servizio richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-159">Gets a reference to the requested service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2820c-160">Riferimento a <paramref name="serviceType" />; in caso contrario, <see langword="null" /> se non è possibile trovare il servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-160">A reference to <paramref name="serviceType" />; otherwise, <see langword="null" /> if the service is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2820c-161">
            <paramref name="serviceType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-161">
              <paramref name="serviceType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GlobalInvoke">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2820c-162">Richiama un comando sul form locale o nell'ambiente globale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-162">Invokes a command on the local form or in the global environment.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GlobalInvoke">
      <MemberSignature Language="C#" Value="public virtual bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalInvoke(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GlobalInvoke(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberSignature Language="F#" Value="abstract member GlobalInvoke : System.ComponentModel.Design.CommandID -&gt; bool&#xA;override this.GlobalInvoke : System.ComponentModel.Design.CommandID -&gt; bool" Usage="menuCommandService.GlobalInvoke commandID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID">
          <span data-ttu-id="2820c-163">Comando da richiamare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-163">The command to invoke.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2820c-164">Richiama il comando indicato sul form locale o nell'ambiente globale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-164">Invokes the given command on the local form or in the global environment.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2820c-165">
            <see langword="true" />, se il comando è stato trovato, <see langword="false" /> in caso contrario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-165">
              <see langword="true" />, if the command was found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2820c-166">Viene innanzitutto eseguita la ricerca di form locale per l'ID di comando specificato.</span><span class="sxs-lookup"><span data-stu-id="2820c-166">The local form is first searched for the given command ID.</span></span> <span data-ttu-id="2820c-167">Se viene trovato, viene richiamato.</span><span class="sxs-lookup"><span data-stu-id="2820c-167">If it is found, it is invoked.</span></span> <span data-ttu-id="2820c-168">In caso contrario, l'ID di comando viene passato al gestore del comando ambiente globale, se disponibile.</span><span class="sxs-lookup"><span data-stu-id="2820c-168">Otherwise, the command ID is passed to the global environment command handler, if one is available.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GlobalInvoke">
      <MemberSignature Language="C#" Value="public virtual bool GlobalInvoke (System.ComponentModel.Design.CommandID commandId, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalInvoke(class System.ComponentModel.Design.CommandID commandId, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GlobalInvoke(System::ComponentModel::Design::CommandID ^ commandId, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member GlobalInvoke : System.ComponentModel.Design.CommandID * obj -&gt; bool&#xA;override this.GlobalInvoke : System.ComponentModel.Design.CommandID * obj -&gt; bool" Usage="menuCommandService.GlobalInvoke (commandId, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandId" Type="System.ComponentModel.Design.CommandID" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="commandId">
          <span data-ttu-id="2820c-169">Comando da richiamare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-169">The command to invoke.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="2820c-170">Un parametro per la chiamata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-170">A parameter for the invocation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2820c-171">Richiama il comando indicato con il parametro indicato sul form locale o nell'ambiente globale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-171">Invokes the given command with the given parameter on the local form or in the global environment.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2820c-172">
            <see langword="true" />, se il comando è stato trovato, <see langword="false" /> in caso contrario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-172">
              <see langword="true" />, if the command was found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2820c-173">Viene innanzitutto eseguita la ricerca di form locale per l'ID di comando specificato.</span><span class="sxs-lookup"><span data-stu-id="2820c-173">The local form is first searched for the given command ID.</span></span> <span data-ttu-id="2820c-174">Se viene trovato, viene richiamato.</span><span class="sxs-lookup"><span data-stu-id="2820c-174">If it is found, it is invoked.</span></span> <span data-ttu-id="2820c-175">In caso contrario, l'ID di comando viene passato al gestore del comando ambiente globale, se disponibile.</span><span class="sxs-lookup"><span data-stu-id="2820c-175">Otherwise, the command ID is passed to the global environment command handler, if one is available.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="MenuCommandsChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.MenuCommandsChangedEventHandler MenuCommandsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.MenuCommandsChangedEventHandler MenuCommandsChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuCommandsChanged As MenuCommandsChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::MenuCommandsChangedEventHandler ^ MenuCommandsChanged;" />
      <MemberSignature Language="F#" Value="member this.MenuCommandsChanged : System.ComponentModel.Design.MenuCommandsChangedEventHandler " Usage="member this.MenuCommandsChanged : System.ComponentModel.Design.MenuCommandsChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommandsChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2820c-176">Viene generato quando lo stato di un comando di menu viene modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-176">Occurs when the status of a menu command has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2820c-177">Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="2820c-177">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCommandsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCommandsChanged (System.ComponentModel.Design.MenuCommandsChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommandsChanged(class System.ComponentModel.Design.MenuCommandsChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommandsChanged (e As MenuCommandsChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommandsChanged(System::ComponentModel::Design::MenuCommandsChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCommandsChanged : System.ComponentModel.Design.MenuCommandsChangedEventArgs -&gt; unit&#xA;override this.OnCommandsChanged : System.ComponentModel.Design.MenuCommandsChangedEventArgs -&gt; unit" Usage="menuCommandService.OnCommandsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.MenuCommandsChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="2820c-178">Oggetto <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-178">A <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2820c-179">Genera l'evento <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-179">Raises the <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2820c-180">Il <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> metodo viene chiamato da un comando di menu quando il relativo stato è stato modificato.</span><span class="sxs-lookup"><span data-stu-id="2820c-180">The <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> method is called by a menu command when its status has changed.</span></span>  
  
 <span data-ttu-id="2820c-181">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</span><span class="sxs-lookup"><span data-stu-id="2820c-181">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2820c-182">Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2820c-182">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2820c-183">Il metodo <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</span><span class="sxs-lookup"><span data-stu-id="2820c-183">The <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2820c-184">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="2820c-184">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="2820c-185">
            <para>Quando si esegue l'override <see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-185">
              <para>When overriding <see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCommand">
      <MemberSignature Language="C#" Value="public virtual void RemoveCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member RemoveCommand : System.ComponentModel.Design.MenuCommand -&gt; unit&#xA;override this.RemoveCommand : System.ComponentModel.Design.MenuCommand -&gt; unit" Usage="menuCommandService.RemoveCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="2820c-186">Comando da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-186">The command to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2820c-187">Rimuove dal documento il comando di menu indicato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-187">Removes the given menu command from the document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2820c-188">Se non siano presenti più comandi nel gruppo di comando, il gruppo viene rimosso.</span><span class="sxs-lookup"><span data-stu-id="2820c-188">If there are no more commands in the command group, the group is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2820c-189">
            <paramref name="command" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-189">
              <paramref name="command" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveVerb">
      <MemberSignature Language="C#" Value="public virtual void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberSignature Language="F#" Value="abstract member RemoveVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit&#xA;override this.RemoveVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit" Usage="menuCommandService.RemoveVerb verb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb">
          <span data-ttu-id="2820c-190">Il verbo da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-190">The verb to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2820c-191">Rimuove il verbo specificato dal documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-191">Removes the given verb from the document.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2820c-192">
            <paramref name="verb" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-192">
              <paramref name="verb" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="ShowContextMenu">
      <MemberSignature Language="C#" Value="public virtual void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowContextMenu(class System.ComponentModel.Design.CommandID menuID, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ShowContextMenu (menuID As CommandID, x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ShowContextMenu(System::ComponentModel::Design::CommandID ^ menuID, int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member ShowContextMenu : System.ComponentModel.Design.CommandID * int * int -&gt; unit&#xA;override this.ShowContextMenu : System.ComponentModel.Design.CommandID * int * int -&gt; unit" Usage="menuCommandService.ShowContextMenu (menuID, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuID" Type="System.ComponentModel.Design.CommandID" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="menuID">
          <span data-ttu-id="2820c-193">Il menu di scelta rapida da visualizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-193">The shortcut menu to display.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="2820c-194">La coordinata x della posizione del menu di scelta rapida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-194">The x-coordinate of the shortcut menu's location.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="2820c-195">La coordinata y della posizione del menu di scelta rapida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-195">The y-coordinate of the shortcut menu's location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2820c-196">Mostra il menu di scelta rapida con l'ID comando indicato nella posizione indicata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-196">Shows the shortcut menu with the given command ID at the given location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2820c-197">L'implementazione predefinita non esegue alcuna operazione.</span><span class="sxs-lookup"><span data-stu-id="2820c-197">The default implementation does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommandService.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : System.ComponentModel.Design.DesignerVerbCollection" Usage="System.ComponentModel.Design.MenuCommandService.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2820c-198">Ottiene un insieme dei verbi di progettazione attualmente disponibili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-198">Gets a collection of the designer verbs that are currently available.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2820c-199">Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> dei verbi di progettazione attualmente disponibili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2820c-199">A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> of the designer verbs that are currently available.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2820c-200">Il <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A> proprietà fornisce una raccolta di verbi.</span><span class="sxs-lookup"><span data-stu-id="2820c-200">The <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A> property provides a collection of verbs.</span></span> <span data-ttu-id="2820c-201">Questi verbi provengono da due posizioni:</span><span class="sxs-lookup"><span data-stu-id="2820c-201">These verbs come from two places:</span></span>  
  
-   <span data-ttu-id="2820c-202">Verbi aggiunti tramite il <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> metodo <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A>.</span><span class="sxs-lookup"><span data-stu-id="2820c-202">Verbs added through the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> method of <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A>.</span></span>  
  
-   <span data-ttu-id="2820c-203">Verbi offerti dalla finestra di progettazione attualmente selezionato.</span><span class="sxs-lookup"><span data-stu-id="2820c-203">Verbs offered by the currently selected designer.</span></span>  
  
 <span data-ttu-id="2820c-204">Verbi aggiunti al servizio tramite il <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> metodo sono detti verbi globali in quanto sono globali per il servizio, ma in genere viene rilevata un'istanza del servizio per ogni finestra degli strumenti o documento.</span><span class="sxs-lookup"><span data-stu-id="2820c-204">Verbs added to this service through the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> method are called global verbs because they are global to this service, but generally there is one instance of this service for each tool or document window.</span></span> <span data-ttu-id="2820c-205">I verbi di progettazione vengono ottenuti eseguendo una query nel provider di servizi <xref:System.ComponentModel.Design.IDesignerHost> e <xref:System.ComponentModel.Design.ISelectionService>.</span><span class="sxs-lookup"><span data-stu-id="2820c-205">Designer verbs are obtained by querying the service provider for <xref:System.ComponentModel.Design.IDesignerHost> and <xref:System.ComponentModel.Design.ISelectionService>.</span></span> <span data-ttu-id="2820c-206">Se il servizio di selezione fornisce una selezione primaria e una finestra di progettazione può essere ottenuto per la selezione da <xref:System.ComponentModel.Design.IDesignerHost>, questo elenco vengono aggiunti i verbi di progettazione.</span><span class="sxs-lookup"><span data-stu-id="2820c-206">If the selection service offers a primary selection, and a designer can be obtained for that selection from <xref:System.ComponentModel.Design.IDesignerHost>, the designer’s verbs are added to this list.</span></span> <span data-ttu-id="2820c-207">Se il nome di un verbo globale è in conflitto con il nome di un verbo di progettazione, il verbo di progettazione fornite progettazione ha la precedenza.</span><span class="sxs-lookup"><span data-stu-id="2820c-207">If the name of a global verb conflicts with the name of a designer verb, the designer-provided designer verb takes precedence.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
  </Members>
</Type>