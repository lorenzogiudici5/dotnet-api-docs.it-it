<Type Name="IMenuCommandService" FullName="System.ComponentModel.Design.IMenuCommandService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4446ee90bf32fe234db8c8c634d6b18bb066bec1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30372775" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMenuCommandService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMenuCommandService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IMenuCommandService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMenuCommandService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMenuCommandService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce metodi per gestire i verbi di progettazione globali e i comandi di menu disponibili in modalità progettazione e per visualizzare alcuni tipi di menu di scelta rapida.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa interfaccia fornisce metodi per:  
  
-   Individuare, invoke, aggiungere e rimuovere comandi globali verbi di progettazione.  
  
-   Individuare, invoke, aggiungere e rimuovere i comandi di menu standard.  
  
-   Modificare i gestori di eventi associati a comandi di menu standard.  
  
-   Visualizzare un menu di scelta rapida di comandi standard associato a un menu <xref:System.ComponentModel.Design.CommandID>.  
  
 I verbi di progettazione rappresentano i comandi personalizzati sono elencati nel menu di scelta rapida in modalità progettazione. Un verbo di progettazione è possibile fornire un'etichetta di testo specificato. Ogni verbo di progettazione viene assegnato automaticamente un univoco <xref:System.ComponentModel.Design.CommandID>. Una finestra di progettazione può fornire i verbi di progettazione tramite il relativo <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> proprietà, ma questi sono disponibili solo quando è selezionato il componente della finestra di progettazione. Verbi di progettazione globali sono verbi di progettazione che è possibile accedere da un menu di scelta rapida in modalità progettazione indipendentemente dal componente selezionato. Questa interfaccia consente di gestire l'insieme dei verbi di progettazione globali sono disponibili in modalità progettazione.  
  
 È possibile aggiungere un verbo di progettazione globale utilizzando il <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> metodo ed è possibile rimuovere un verbo di progettazione globale utilizzando il <xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A> metodo. È possibile richiamare un verbo di progettazione utilizzando il <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> metodo se si conosce il <xref:System.ComponentModel.Design.CommandID> del verbo. Il <xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A> proprietà di questa interfaccia contiene il set corrente di comandi di verbi di progettazione per visualizzare un menu di scelta rapida. Questo set di comandi di verbi di progettazione è costituito da tutti i verbi di progettazione globali e tutti i verbi di progettazione offerti dalla finestra di progettazione di qualsiasi componente selezionato. Questo set di verbi viene aggiornato ogni volta che un componente con una finestra di progettazione offerta verbi di progettazione viene selezionato o deselezionato.  
  
 I comandi di menu sono limitati al set di comandi standard predefiniti. La maggior parte dei comandi standard predefiniti sono definita nel <xref:System.ComponentModel.Design.StandardCommands> e <xref:System.Windows.Forms.Design.MenuCommands> enumerazioni. È possibile aggiungere, rimuovere, richiamare i comandi di menu e cercare i comandi di menu che sono stati aggiunti a un menu utilizzando i metodi di questa interfaccia.  
  
 È possibile aggiungere un comando di menu standard utilizzando la <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> metodo e rimozione di un comando di menu standard utilizzando la <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> metodo. È possibile collegare un gestore eventi a un comando di menu standard predefinito seguendo la procedura descritta nella documentazione per il <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> metodo. È possibile recuperare un comando di menu da <xref:System.ComponentModel.Design.CommandID> se è stato aggiunto a un menu utilizzando il <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> metodo. È possibile richiamare un comando di menu o verbi di progettazione da <xref:System.ComponentModel.Design.CommandID> utilizzando il <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> metodo.  
  
> [!NOTE]
>  Un tentativo di aggiungere un comando di menu con un oggetto già esistente <xref:System.ComponentModel.Design.CommandID> genererà un <xref:System.InvalidOperationException>. Quando si aggiunge un comando di menu, assicurarsi di controllare che sia già in un menu utilizzando il <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> metodo oppure utilizzare eccezioni in modo appropriato.  
  
> [!NOTE]
>  Un comando di menu possono essere aggiunti a un menu e hanno relativo <xref:System.ComponentModel.Design.MenuCommand.Visible%2A> o <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A> le proprietà impostate su `false`. Se si riesce a visualizzare un comando di menu che è stato aggiunto un menu, una di queste proprietà può impostata `false`.  
  
 È possibile visualizzare alcuni menu di scelta rapida standard contenente comandi di menu in un percorso specificato utilizzando il <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> metodo. La documentazione relativa a questo metodo contiene una tabella che elenca gli ID di comando che specificano i menu validi da visualizzare.  
  
   
  
## Examples  
 In questo esempio viene illustrato l'utilizzo di <xref:System.ComponentModel.Design.IMenuCommandService> per aggiungere un <xref:System.ComponentModel.Design.MenuCommand>.  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.CommandID" />
    <altmember cref="T:System.Windows.Forms.Design.MenuCommands" />
    <altmember cref="T:System.ComponentModel.Design.StandardCommands" />
  </Docs>
  <Members>
    <Member MemberName="AddCommand">
      <MemberSignature Language="C#" Value="public void AddCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command">Oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> da aggiungere.</param>
        <summary>Aggiunge al menu il comando di menu standard specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Forms.Design.MenuCommands> e <xref:System.ComponentModel.Design.StandardCommands> enumerazioni contengono <xref:System.ComponentModel.Design.CommandID> identificatori per i comandi standard predefiniti e i comandi di menu che sono già associata a un percorso di un determinato menu.  
  
> [!NOTE]
>  Un tentativo di aggiungere un comando di menu con un oggetto già esistente <xref:System.ComponentModel.Design.CommandID> genererà un <xref:System.InvalidOperationException>. Quando si aggiunge un comando di menu, assicurarsi di controllare che sia già in un menu utilizzando il <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> metodo oppure utilizzare eccezioni in modo appropriato.  
  
 È possibile collegare un gestore eventi a un comando di menu predefinito con la procedura seguente:  
  
1.  Se il comando di menu per il collegamento a un gestore eventi è stato aggiunto a un menu o si trova il <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> (metodo), considerare se si desidera ripristinare il comando in un secondo momento, e se si desidera richiamare il gestore dell'evento corrente dal nuovo gestore eventi. Se il codice consente di ripristinare il comando di menu o la catena di chiamata di gestori eventi, assicurarsi di archiviare un riferimento a un punto qualsiasi del comando di menu.  
  
2.  Verificare che i comandi di menu già esistenti con lo stesso <xref:System.ComponentModel.Design.CommandID> è stata rimossa dal menu utilizzando il <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> metodo.  
  
3.  Creare un nuovo <xref:System.ComponentModel.Design.MenuCommand> e specificare il gestore di evento nel costruttore, insieme a un <xref:System.ComponentModel.Design.CommandID> che rappresenta il comando da aggiungere. Ogni comando di menu standard è associato a un percorso di menu predefinito in cui viene aggiunto alla. L'ID di comando supportati è definito nel <xref:System.ComponentModel.Design.StandardCommands> e <xref:System.Windows.Forms.Design.MenuCommands> enumerazioni.  
  
4.  Se si desidera richiamare un gestore eventi preesistenti per il comando di menu, chiamare il <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> (metodo) del comando di menu è stato sostituito dal menu dal gestore eventi che gestisce l'evento di chiamata del comando di menu.  
  
5.  Se si desidera ripristinare il gestore dell'evento di un comando di menu preesistenti che è stato sostituito, aggiungere l'oggetto memorizzato, comando preesistente, dopo aver rimosso il comando di menu sostituzione è stato creato. È opportuno aggiungere questo comportamento per la `Dispose` metodo relativo al tipo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> dell'oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> specificato è già presente in un menu.</exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public void AddVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb">Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> da aggiungere.</param>
        <summary>Aggiunge il verbo di progettazione specificato al gruppo di verbi di progettazione globali.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Finestre di progettazione di componenti che forniscono i verbi di progettazione deve usare il <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> proprietà della finestra di progettazione, anziché chiamare questo metodo. Questo metodo aggiunge un verbo di progettazione globale che è possibile accedere dal menu di scelta rapida in modalità progettazione indipendentemente dal componente selezionato.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.MenuCommand FindCommand(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::MenuCommand ^ FindCommand(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> da cercare.</param>
        <summary>Cerca l'ID del comando specificato e restituisce il comando di menu ad esso associato.</summary>
        <returns>
          <see cref="T:System.ComponentModel.Design.MenuCommand" /> associato all'ID di comando o <see langword="null" /> se non viene trovato alcun comando.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="GlobalInvoke">
      <MemberSignature Language="C#" Value="public bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalInvoke(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GlobalInvoke(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID">
          <see cref="T:System.ComponentModel.Design.CommandID" /> del comando da cercare ed eseguire.</param>
        <summary>Richiama un menu o un comando di verbo di progettazione corrispondente all'ID di comando specificato.</summary>
        <returns>
          <see langword="true" /> se il comando è stato trovato e richiamato correttamente. <see langword="false" /> in caso contrario.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo cerca un comando di menu o i verbi di progettazione con un <xref:System.ComponentModel.Design.CommandID> corrispondente specificato <xref:System.ComponentModel.Design.CommandID>. Questo metodo cerca all'interno della raccolta di verbi di progettazione costituito verbi fornito globali e attivi prima di continuare la ricerca, se necessario, tramite il servizio comando ambiente globale. Se viene individuato un comando di menu o i verbi di progettazione, viene richiamato il comando.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCommand">
      <MemberSignature Language="C#" Value="public void RemoveCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command">Oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> da rimuovere.</param>
        <summary>Rimuove dal menu il comando di menu standard specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo rimuove l'oggetto specificato <xref:System.ComponentModel.Design.MenuCommand> se viene trovato. Questo metodo non genera un'eccezione o restituiscono un valore se l'oggetto specificato <xref:System.ComponentModel.Design.MenuCommand> non viene trovato. Utilizzare il <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> metodo per determinare se un <xref:System.ComponentModel.Design.MenuCommand> corrispondente al specificato <xref:System.ComponentModel.Design.CommandID> si trova in un menu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
      </Docs>
    </Member>
    <Member MemberName="RemoveVerb">
      <MemberSignature Language="C#" Value="public void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb">Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> da rimuovere.</param>
        <summary>Rimuove il verbo di progettazione specificato dall'insieme dei verbi di progettazione globali.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è all'interno della raccolta di verbi di progettazione globale, questo metodo rimuove il verbo di progettazione globale specificato. È possibile aggiungere un verbo di progettazione per la raccolta di verbi di progettazione globali utilizzando il <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="ShowContextMenu">
      <MemberSignature Language="C#" Value="public void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowContextMenu(class System.ComponentModel.Design.CommandID menuID, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowContextMenu (menuID As CommandID, x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowContextMenu(System::ComponentModel::Design::CommandID ^ menuID, int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuID" Type="System.ComponentModel.Design.CommandID" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="menuID">
          <see cref="T:System.ComponentModel.Design.CommandID" /> per il menu di scelta rapida da visualizzare.</param>
        <param name="x">Coordinata x in corrispondenza della quale visualizzare il menu, secondo le coordinate dello schermo.</param>
        <param name="y">Coordinata y in corrispondenza della quale visualizzare il menu, secondo le coordinate dello schermo.</param>
        <summary>Visualizza il menu di scelta rapida specificato nella posizione indicata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> metodo consente di visualizzare uno qualsiasi dei seguenti menu di scelta rapida di Visual Studio contenente i comandi di menu in un punto specificato:  
  
|Menu|CommandID|  
|----------|---------------|  
|Menu di scelta rapida visualizzato per un contenitore|<xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>|  
|Menu di scelta rapida visualizzato per la barra dei componenti|<xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu>|  
|Menu di scelta rapida visualizzato per una selezione|<xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu>|  
|Menu di scelta rapida visualizzato per una selezione area di notifica|<xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu>|  
  
 Questo metodo è inoltre possibile visualizzare altri menu di scelta rapida registrati.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IMenuCommandService.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme dei verbi di progettazione attualmente disponibili.</summary>
        <value>Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> che contiene i verbi di progettazione attualmente disponibili.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il set di verbi di progettazione attualmente disponibili è costituito da tutti i verbi di progettazione globali aggiunti dal <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> metodo su questa interfaccia e singoli verbi di progettazione, disponibili tramite il <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> proprietà di singole finestre di progettazione. Se il nome di un verbo globale in conflitto con il nome di un verbo di progettazione, il verbo di progettazione fornite dalla finestra di progettazione ha la precedenza.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerbCollection" />
        <altmember cref="P:System.ComponentModel.Design.IDesigner.Verbs" />
      </Docs>
    </Member>
  </Members>
</Type>