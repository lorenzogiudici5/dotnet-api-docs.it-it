<Type Name="ComponentDesigner+ShadowPropertyCollection" FullName="System.ComponentModel.Design.ComponentDesigner+ShadowPropertyCollection">
  <TypeSignature Language="C#" Value="protected sealed class ComponentDesigner.ShadowPropertyCollection" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi sealed beforefieldinit ComponentDesigner/ShadowPropertyCollection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />
  <TypeSignature Language="VB.NET" Value="Protected NotInheritable Class ComponentDesigner.ShadowPropertyCollection" />
  <TypeSignature Language="C++ CLI" Value="protected: ref class ComponentDesigner::ShadowPropertyCollection sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1c060-101">Rappresenta un insieme di proprietà replicate che dovrebbero eseguire l'override dei valori ereditati predefiniti o assegnati per specifiche proprietà.</span><span class="sxs-lookup"><span data-stu-id="1c060-101">Represents a collection of shadow properties that should override inherited default or assigned values for specific properties.</span></span> <span data-ttu-id="1c060-102">Questa classe non può essere ereditata.</span><span class="sxs-lookup"><span data-stu-id="1c060-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c060-103"><xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection> Archivia una raccolta di valori per le proprietà specifiche che eseguono l'override di qualsiasi altro valore per queste proprietà in fase di progettazione.</span><span class="sxs-lookup"><span data-stu-id="1c060-103"><xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection> stores a collection of values for specific properties that override any other value for these properties at design time.</span></span> <span data-ttu-id="1c060-104">Ciò è utile per garantire che una proprietà specifica è impostata su un valore specifico, ad esempio, nelle situazioni in cui il form in background abbia sempre la proprietà visibile impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="1c060-104">This is useful for ensuring that a specific property is set to a specific value, for example, in situations when the background form should always have its visible property set to `true`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties" />
  </Docs>
  <Members>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1c060-105">Nome della proprietà da controllare nell'insieme.</span><span class="sxs-lookup"><span data-stu-id="1c060-105">The name of the property to check for in the collection.</span></span></param>
        <summary><span data-ttu-id="1c060-106">Indica se una proprietà che corrisponde al nome specificato esiste nell'insieme.</span><span class="sxs-lookup"><span data-stu-id="1c060-106">Indicates whether a property matching the specified name exists in the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="1c060-107"><see langword="true" /> se la proprietà esiste nell'insieme. <see langword="false" /> in caso contrario.</span><span class="sxs-lookup"><span data-stu-id="1c060-107"><see langword="true" /> if the property exists in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1c060-108">Nome della proprietà a cui accedere nell'insieme.</span><span class="sxs-lookup"><span data-stu-id="1c060-108">The name of the property to access in the collection.</span></span></param>
        <summary><span data-ttu-id="1c060-109">Ottiene o imposta l'oggetto in corrispondenza dell'indice specificato.</span><span class="sxs-lookup"><span data-stu-id="1c060-109">Gets or sets the object at the specified index.</span></span></summary>
        <value><span data-ttu-id="1c060-110">Valore della proprietà specificata, se esiste nell'insieme.</span><span class="sxs-lookup"><span data-stu-id="1c060-110">The value of the specified property, if it exists in the collection.</span></span> <span data-ttu-id="1c060-111">In caso contrario, il valore viene recuperato dal valore corrente della proprietà non nascosta.</span><span class="sxs-lookup"><span data-stu-id="1c060-111">Otherwise, the value is retrieved from the current value of the nonshadowed property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c060-112">Questo metodo restituisce il valore corrente di una proprietà, se la proprietà non è stata nascosta.</span><span class="sxs-lookup"><span data-stu-id="1c060-112">This method returns the current value of a property, if the property has not been shadowed.</span></span> <span data-ttu-id="1c060-113">Pertanto, è importante determinare se la proprietà è nascosta chiamando <xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains%2A>.</span><span class="sxs-lookup"><span data-stu-id="1c060-113">Therefore, it is important to determine whether the property is shadowed by calling <xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>