<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2dbad6fdfb09f4fc16d8d85beafb69dfaa4f5eea" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37696280" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <TypeSignature Language="F#" Value="type IDesignerFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fornisce un'interfaccia che permette a una finestra di progettazione di accedere e filtrare i dizionari di un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" /> che memorizza i descrittori delle proprietà, degli attributi e degli eventi che una finestra di progettazione dei componenti può esporre all'ambiente in fase di progettazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IDesignerFilter> la finestra di progettazione filtrare il set di descrittori di proprietà, attributi ed evento dal componente associato esposti tramite un <xref:System.ComponentModel.TypeDescriptor>. I metodi di questa interfaccia i cui nomi iniziano con `Pre` vengono chiamati i metodi i cui nomi iniziano con la precedono `Post`.  
  
 Se si desidera aggiungere l'attributo, eventi o i descrittori di proprietà, usare una <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, o <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> (metodo).  
  
 Se si desidera modificare o rimuovere attributi, eventi o i descrittori di proprietà, utilizzare un <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, o <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> (metodo).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un override di <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> che aggiunge una proprietà della finestra di progettazione nella finestra Proprietà quando è selezionato controllo della finestra di progettazione in fase di progettazione. Vedere l'esempio per la <xref:System.Windows.Forms.Design.ControlDesigner> classe per un esempio completo della finestra di progettazione che usa il <xref:System.ComponentModel.Design.IDesignerFilter> interfaccia.  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">Oggetti <see cref="T:System.Attribute" /> relativi alla classe del componente. Le chiavi presenti nel dizionario degli attributi sono i valori <see cref="P:System.Attribute.TypeId" /> degli attributi.</param>
        <summary>Quando viene sottoposto a override in una classe derivata, consente di modificare o rimuovere, mediante una finestra di progettazione, elementi dell'insieme di attributi esposti tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo fornisce un modo per modificare o rimuovere elementi all'interno del dizionario degli attributi che il componente associato della finestra di progettazione che implementa questa interfaccia espone tramite una <xref:System.ComponentModel.TypeDescriptor>.  
  
 Le chiavi nel dizionario degli attributi sono di tipo ID degli attributi. Gli oggetti sono di tipo <xref:System.Attribute>. Questo metodo viene chiamato immediatamente dopo <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.  
  
 L'ID del tipo di un attributo può essere qualsiasi oggetto. Per impostazione predefinita <xref:System.Attribute> restituisce relativi <xref:System.Type> come valore del relativo <xref:System.Attribute.TypeId%2A> proprietà. È possibile controllare la <xref:System.Attribute.TypeId%2A> di un attributo nel dizionario per l'equivalenza con un noto <xref:System.Attribute.TypeId%2A> per un attributo per facilitarne l'identificazione o usare <xref:System.Reflection> per identificare l'oggetto attributo stesso.  
  
 Quando un attributo con lo stesso <xref:System.Attribute.TypeId%2A> come un attributo esistente o ereditato viene aggiunto a un componente, il nuovo attributo sostituirà quello precedente. Per molti attributi, un nuovo attributo dello stesso tipo sostituirà qualsiasi tipo di attributo precedente. Tuttavia, alcuni tipi di attributo restituiscono un <xref:System.Attribute.TypeId%2A> che distingue in modo selettivo l'attributo. Ad esempio, per fornire tipi diversi di finestre di progettazione simultaneamente attive per un tipo, ad esempio un <xref:System.ComponentModel.Design.IRootDesigner> e un' <xref:System.ComponentModel.Design.IDesigner>, il <xref:System.ComponentModel.DesignerAttribute> classe restituisce un <xref:System.Attribute.TypeId%2A> che identifica in modo univoco l'attributo sia la finestra di progettazione di base tipo. Il <xref:System.ComponentModel.DesignerAttribute> costruttore consente di specificare il tipo di base della finestra di progettazione della finestra di progettazione oltre il tipo specifico, e <xref:System.ComponentModel.DesignerAttribute> restituisce un <xref:System.Attribute.TypeId%2A> che riflette ciò. Pertanto quando si aggiunge un nuovo <xref:System.ComponentModel.DesignerAttribute> con un tipo di progettazione dello stesso tipo come tipo di finestra di progettazione di base di un oggetto esistente <xref:System.ComponentModel.DesignerAttribute>, l'attributo precedente viene sostituita con il nuovo attributo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>È possibile filtrare direttamente dizionario in cui è possibile accedere tramite il <paramref name="attributes" /> parametro oppure è possibile lasciarla invariata. Se si esegue l'override di questo metodo, chiamare l'implementazione di base dopo aver eseguito le operazioni di filtro.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">Oggetti <see cref="T:System.ComponentModel.EventDescriptor" /> che rappresentano gli eventi della classe del componente. Le chiavi presenti nel dizionario degli eventi sono i nomi degli eventi.</param>
        <summary>Quando viene sottoposto a override in una classe derivata, consente a una finestra di progettazione di modificare o rimuovere elementi dall'insieme degli eventi esposti tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo fornisce un modo per modificare o rimuovere elementi all'interno del dizionario di eventi esposti tramite un <xref:System.ComponentModel.TypeDescriptor>.  
  
 Le chiavi nel dizionario degli eventi sono i nomi degli eventi. Gli oggetti sono di tipo <xref:System.ComponentModel.EventDescriptor>. Questo metodo viene chiamato immediatamente dopo <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>È possibile filtrare direttamente dizionario in cui è possibile accedere tramite il <paramref name="events" /> parametro oppure è possibile lasciarla invariata. Se si esegue l'override di questo metodo, chiamare l'implementazione di base dopo aver eseguito le operazioni di filtro.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> che rappresentano le proprietà della classe del componente. Le chiavi presenti nel dizionario delle proprietà sono i nomi delle proprietà.</param>
        <summary>Quando viene sottoposto a override in una classe derivata, consente a una finestra di progettazione di modificare o rimuovere elementi nell'insieme delle proprietà esposte tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo fornisce un modo per modificare o rimuovere elementi all'interno del dizionario delle proprietà esposte tramite un <xref:System.ComponentModel.TypeDescriptor>.  
  
 Le chiavi nel dizionario delle proprietà sono i nomi delle proprietà. Gli oggetti sono di tipo <xref:System.ComponentModel.PropertyDescriptor>. Questo metodo viene chiamato immediatamente dopo <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>È possibile filtrare direttamente dizionario in cui è possibile accedere tramite il <paramref name="properties" /> parametro oppure è possibile lasciarla invariata. Se si esegue l'override di questo metodo, chiamare l'implementazione di base dopo aver eseguito le operazioni di filtro.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">Oggetti <see cref="T:System.Attribute" /> relativi alla classe del componente. Le chiavi presenti nel dizionario degli attributi sono i valori <see cref="P:System.Attribute.TypeId" /> degli attributi.</param>
        <summary>Quando viene sottoposto a override in una classe derivata, consente di aggiungere, mediante una finestra di progettazione, elementi all'insieme di attributi esposti tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente di aggiungere elementi al dizionario di attributi esposti tramite il componente associato della finestra di progettazione che implementa questa interfaccia un <xref:System.ComponentModel.TypeDescriptor>.  
  
 Le chiavi nel dizionario degli attributi sono di tipo ID degli attributi. Gli oggetti sono di tipo <xref:System.Attribute>. Questo metodo viene chiamato immediatamente prima <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.  
  
 L'ID del tipo di un attributo può essere qualsiasi oggetto. Per impostazione predefinita <xref:System.Attribute> restituisce relativi <xref:System.Type> come valore del relativo <xref:System.Attribute.TypeId%2A> proprietà. È possibile controllare la <xref:System.Attribute.TypeId%2A> di un attributo nel dizionario per l'equivalenza con un noto <xref:System.Attribute.TypeId%2A> per un attributo per facilitarne l'identificazione o usare <xref:System.Reflection> per identificare l'oggetto attributo stesso.  
  
 Quando un attributo con lo stesso <xref:System.Attribute.TypeId%2A> come un attributo esistente o ereditato viene aggiunto a un componente, il nuovo attributo sostituirà quello precedente. Per molti attributi, un nuovo attributo dello stesso tipo sostituirà qualsiasi tipo di attributo precedente. Tuttavia, alcuni tipi di attributo restituiscono un <xref:System.Attribute.TypeId%2A> che distingue in modo selettivo l'attributo. Ad esempio, per fornire tipi diversi di finestre di progettazione simultaneamente attive per un tipo, ad esempio un <xref:System.ComponentModel.Design.IRootDesigner> e un' <xref:System.ComponentModel.Design.IDesigner>, il <xref:System.ComponentModel.DesignerAttribute> classe restituisce un <xref:System.Attribute.TypeId%2A> che identifica in modo univoco l'attributo sia la finestra di progettazione di base tipo. Il <xref:System.ComponentModel.DesignerAttribute> costruttore consente di specificare il tipo di base della finestra di progettazione della finestra di progettazione oltre il tipo specifico, e <xref:System.ComponentModel.DesignerAttribute> restituisce un <xref:System.Attribute.TypeId%2A> che riflette ciò. Pertanto quando si aggiunge un nuovo <xref:System.ComponentModel.DesignerAttribute> con un tipo di progettazione dello stesso tipo come tipo di finestra di progettazione di base di un oggetto esistente <xref:System.ComponentModel.DesignerAttribute>, l'attributo precedente viene sostituita con il nuovo attributo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>È possibile filtrare direttamente dizionario in cui è possibile accedere tramite il <paramref name="attributes" /> parametro oppure è possibile lasciarla invariata. Se si esegue l'override di questo metodo, chiamare l'implementazione di base dopo aver eseguito le operazioni di filtro.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">Oggetti <see cref="T:System.ComponentModel.EventDescriptor" /> che rappresentano gli eventi della classe del componente. Le chiavi presenti nel dizionario degli eventi sono i nomi degli eventi.</param>
        <summary>Quando viene sottoposto a override in una classe derivata, consente di aggiungere elementi, mediante la finestra di progettazione, all'insieme di eventi esposti tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente di aggiungere elementi al dizionario di eventi esposti tramite una finestra di progettazione una <xref:System.ComponentModel.TypeDescriptor>.  
  
 Le chiavi nel dizionario degli eventi sono i nomi degli eventi. Gli oggetti sono di tipo <xref:System.ComponentModel.EventDescriptor>. Questo metodo viene chiamato immediatamente prima <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>È possibile modificare direttamente il dizionario che è accessibile tramite il <paramref name="events" /> parametro oppure è possibile lasciarla invariata. Se si esegue l'override di questo metodo, chiamare l'implementazione di base prima di eseguire le operazioni di filtro.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> che rappresentano le proprietà della classe del componente. Le chiavi presenti nel dizionario delle proprietà sono i nomi delle proprietà.</param>
        <summary>Quando viene sottoposto a override in una classe derivata, consente di aggiungere elementi, mediante la finestra di progettazione, all'insieme di proprietà esposte tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente di aggiungere elementi al dizionario di proprietà esposti tramite una finestra di progettazione una <xref:System.ComponentModel.TypeDescriptor>.  
  
 Le chiavi nel dizionario delle proprietà sono i nomi delle proprietà. Gli oggetti sono di tipo <xref:System.ComponentModel.PropertyDescriptor>. Questo metodo viene chiamato immediatamente prima <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>È possibile modificare direttamente il dizionario che è accessibile tramite il <paramref name="properties" /> parametro oppure è possibile lasciarla invariata. Se si esegue l'override di questo metodo, chiamare l'implementazione di base prima di eseguire le operazioni di filtro.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>