<Type Name="UndoEngine+UndoUnit" FullName="System.ComponentModel.Design.UndoEngine+UndoUnit">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f80023ac208a19b0b27f80c38cc3d9c4ef78e14c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37694993" />
  </Metadata>
  <TypeSignature Language="C#" Value="protected class UndoEngine.UndoUnit" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi beforefieldinit UndoEngine/UndoUnit extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
  <TypeSignature Language="VB.NET" Value="Protected Class UndoEngine.UndoUnit" />
  <TypeSignature Language="C++ CLI" Value="protected: ref class UndoEngine::UndoUnit" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Incapsula un'unità di lavoro annullabile da un utente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> è una classe annidata all'interno di <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> che incapsula un'azione che un utente può annullare. Il valore predefinito <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> implementazione consente di monitorare le notifiche di modifica e compila un elenco di eventi per ogni modifica. Salva questi eventi tramite <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>. Un' <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> riceve le notifiche degli eventi per le modifiche direttamente dal <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> tramite vari `public virtual` metodi. È possibile derivare da <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> ed eseguire qualsiasi logica aggiuntiva. Se si desidera, è possibile ignorare completamente il valore predefinito <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> implementazione.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UndoUnit (System.ComponentModel.Design.UndoEngine engine, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.UndoEngine engine, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (engine As UndoEngine, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UndoUnit(System::ComponentModel::Design::UndoEngine ^ engine, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.UndoEngine.UndoUnit : System.ComponentModel.Design.UndoEngine * string -&gt; System.ComponentModel.Design.UndoEngine.UndoUnit" Usage="new System.ComponentModel.Design.UndoEngine.UndoUnit (engine, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="engine" Type="System.ComponentModel.Design.UndoEngine" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="engine">Il motore di annullamento proprietario di questa unità di annullamento.</param>
        <param name="name">Nome dell'unità di annullamento.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="engine" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="undoUnit.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Riceve una chiamata dal motore di annullamento per chiudere l'unità.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene chiusa un'unità, nessun altro evento può entrare nei vari metodi di eventi. Il <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> stesso potrebbe richiedere di queste operazioni per assicurare che gli eventi aperti vengono chiusi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentAdded">
      <MemberSignature Language="C#" Value="public virtual void ComponentAdded (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentAdded(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentAdded (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentAdded(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentAdded : System.ComponentModel.Design.ComponentEventArgs -&gt; unit&#xA;override this.ComponentAdded : System.ComponentModel.Design.ComponentEventArgs -&gt; unit" Usage="undoUnit.ComponentAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Riceve una chiamata da <see cref="T:System.ComponentModel.Design.UndoEngine" /> in risposta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentAdding">
      <MemberSignature Language="C#" Value="public virtual void ComponentAdding (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentAdding(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentAdding (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentAdding(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentAdding : System.ComponentModel.Design.ComponentEventArgs -&gt; unit&#xA;override this.ComponentAdding : System.ComponentModel.Design.ComponentEventArgs -&gt; unit" Usage="undoUnit.ComponentAdding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Riceve una chiamata da <see cref="T:System.ComponentModel.Design.UndoEngine" /> in risposta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanged">
      <MemberSignature Language="C#" Value="public virtual void ComponentChanged (System.ComponentModel.Design.ComponentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentChanged(class System.ComponentModel.Design.ComponentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentChanged (e As ComponentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentChanged(System::ComponentModel::Design::ComponentChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentChanged : System.ComponentModel.Design.ComponentChangedEventArgs -&gt; unit&#xA;override this.ComponentChanged : System.ComponentModel.Design.ComponentChangedEventArgs -&gt; unit" Usage="undoUnit.ComponentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Riceve una chiamata da <see cref="T:System.ComponentModel.Design.UndoEngine" /> in risposta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanging">
      <MemberSignature Language="C#" Value="public virtual void ComponentChanging (System.ComponentModel.Design.ComponentChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentChanging(class System.ComponentModel.Design.ComponentChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentChanging (e As ComponentChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentChanging(System::ComponentModel::Design::ComponentChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentChanging : System.ComponentModel.Design.ComponentChangingEventArgs -&gt; unit&#xA;override this.ComponentChanging : System.ComponentModel.Design.ComponentChangingEventArgs -&gt; unit" Usage="undoUnit.ComponentChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Riceve una chiamata da <see cref="T:System.ComponentModel.Design.UndoEngine" /> in risposta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoved">
      <MemberSignature Language="C#" Value="public virtual void ComponentRemoved (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRemoved(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRemoved (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRemoved(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentRemoved : System.ComponentModel.Design.ComponentEventArgs -&gt; unit&#xA;override this.ComponentRemoved : System.ComponentModel.Design.ComponentEventArgs -&gt; unit" Usage="undoUnit.ComponentRemoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Riceve una chiamata da <see cref="T:System.ComponentModel.Design.UndoEngine" /> in risposta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoving">
      <MemberSignature Language="C#" Value="public virtual void ComponentRemoving (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRemoving(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRemoving (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRemoving(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentRemoving : System.ComponentModel.Design.ComponentEventArgs -&gt; unit&#xA;override this.ComponentRemoving : System.ComponentModel.Design.ComponentEventArgs -&gt; unit" Usage="undoUnit.ComponentRemoving e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Riceve una chiamata da <see cref="T:System.ComponentModel.Design.UndoEngine" /> in risposta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRename">
      <MemberSignature Language="C#" Value="public virtual void ComponentRename (System.ComponentModel.Design.ComponentRenameEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRename(class System.ComponentModel.Design.ComponentRenameEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRename (e As ComponentRenameEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRename(System::ComponentModel::Design::ComponentRenameEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentRename : System.ComponentModel.Design.ComponentRenameEventArgs -&gt; unit&#xA;override this.ComponentRename : System.ComponentModel.Design.ComponentRenameEventArgs -&gt; unit" Usage="undoUnit.ComponentRename e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentRenameEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Riceve una chiamata da <see cref="T:System.ComponentModel.Design.UndoEngine" /> in risposta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="undoUnit.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Tipo di servizio da recuperare.</param>
        <summary>Ottiene un'istanza del servizio richiesto.</summary>
        <returns>Un'istanza del servizio specificato oppure <see langword="null" /> se non è possibile risolvere il servizio.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public virtual bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se in <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> non sono contenuti eventi.</summary>
        <value>
          <see langword="true" /> se <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> non contiene oggetti, <see langword="false" /> in caso contrario.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il motore di annullamento può eliminare le unità vuote.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.ComponentModel.Design.UndoEngine.UndoUnit.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome dell'oggetto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
        <value>Nome di <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="undoUnit.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.String" /> che rappresenta il nome corrente dell'unità.</summary>
        <returns>Oggetto <see cref="T:System.String" /> che rappresenta il nome corrente dell'unità.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberSignature Language="F#" Value="member this.Undo : unit -&gt; unit" Usage="undoUnit.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue un'azione di annullamento o ripetizione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Azioni di rollback di ripetizione, quindi la chiamata e annullamento <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> imposta due volte l'oggetto allo stato originale.  
  
 Il <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> classe inizialmente si presuppone che l'attività annullabile è già stata eseguita, in modo che la prima chiamata a <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> Annulla le operazioni eseguite. La chiamata successiva consente di annullare l'operazione di annullamento precedente, eseguire una fase di rollforward.  
  
 Il <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> chiamate al metodo il <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> metodo per eseguire un'operazione di annullamento. Il <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> metodo opera per mantenere uno stato coerente all'interno di <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, anche in caso di un'eccezione generata da <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Non chiamare il <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> metodo direttamente; sostituirlo se desidera, ma chiamare sempre il <see langword="public" /><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> metodo per eseguire attività di annullamento. Il <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> metodo notifica al motore di annullamento per sospendere fino al completamento dell'operazione di annullamento correnti di raccolta dati di annullamento. Ciò impedisce che nuove unità di annullamento viene creato in risposta a questa unità di lavoro.</para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="UndoCore">
      <MemberSignature Language="C#" Value="protected virtual void UndoCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UndoCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UndoCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void UndoCore();" />
      <MemberSignature Language="F#" Value="abstract member UndoCore : unit -&gt; unit&#xA;override this.UndoCore : unit -&gt; unit" Usage="undoUnit.UndoCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chiamato dal metodo <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> per eseguire un'azione di annullamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> chiamate al metodo il <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> metodo per eseguire un'operazione di annullamento. Il <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> metodo opera per mantenere uno stato coerente all'interno di <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, anche in caso di un'eccezione generata da <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Non chiamare il <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> metodo direttamente; sostituirlo se desidera, ma chiamare sempre il <see langword="public" /><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> metodo per eseguire attività di annullamento. Il <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> metodo notifica al motore di annullamento per sospendere l'operazione di annullamento-la raccolta dei dati fino al completamento dell'operazione di annullamento correnti. Ciò impedisce che nuove unità di annullamento viene creato in risposta a questa unità di lavoro.</para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="UndoEngine">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.UndoEngine UndoEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.UndoEngine UndoEngine" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property UndoEngine As UndoEngine" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::UndoEngine ^ UndoEngine { System::ComponentModel::Design::UndoEngine ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UndoEngine : System.ComponentModel.Design.UndoEngine" Usage="System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.UndoEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> padre.</summary>
        <value>Oggetto <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> a cui è associato <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>