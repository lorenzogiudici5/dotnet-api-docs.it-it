<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ITypeResolutionService.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5260d223ba4dd43e7b087938e5acd002d75d466c8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">260d223ba4dd43e7b087938e5acd002d75d466c8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.ITypeResolutionService">
          <source>Provides an interface to retrieve an assembly or type by name.</source>
          <target state="translated">Fornisce un'interfaccia per recuperare un assembly o un tipo in base al nome.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeResolutionService">
          <source>This service is used to load types at design time.</source>
          <target state="translated">Questo servizio viene utilizzato per caricare i tipi in fase di progettazione.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeResolutionService">
          <source>The following example control provides an interface to call methods of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt;</ph> from design mode.</source>
          <target state="translated">Controllo di esempio seguente fornisce un'interfaccia per chiamare i metodi del <ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt;</ph> dalla modalità progettazione.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.ITypeResolutionService">
          <source>Gets the requested assembly.</source>
          <target state="translated">Ottiene l'assembly richiesto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)">
          <source>The name of the assembly to retrieve.</source>
          <target state="translated">Nome dell'assembly da recuperare.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)">
          <source>Gets the requested assembly.</source>
          <target state="translated">Ottiene l'assembly richiesto.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)">
          <source>An instance of the requested assembly, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no assembly can be located.</source>
          <target state="translated">Istanza dell'assembly richiesto o <ph id="ph1">&lt;see langword="null" /&gt;</ph> se non è possibile trovare alcun assembly.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)">
          <source>The name of the assembly to retrieve.</source>
          <target state="translated">Nome dell'assembly da recuperare.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method should throw an exception if the assembly cannot be located; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, and this method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the assembly cannot be located.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se questo metodo deve generare un'eccezione quando non è possibile trovare l'assembly. <ph id="ph2">&lt;see langword="false" /&gt;</ph> in caso contrario. Se, il metodo restituirà <ph id="ph3">&lt;see langword="null" /&gt;</ph> se non è possibile trovare l'assembly.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)">
          <source>Gets the requested assembly.</source>
          <target state="translated">Ottiene l'assembly richiesto.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)">
          <source>An instance of the requested assembly, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no assembly can be located.</source>
          <target state="translated">Istanza dell'assembly richiesto o <ph id="ph1">&lt;see langword="null" /&gt;</ph> se non è possibile trovare alcun assembly.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)">
          <source>The name of the assembly.</source>
          <target state="translated">Nome dell'assembly.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)">
          <source>Gets the path to the file from which the assembly was loaded.</source>
          <target state="translated">Ottiene il percorso del file dal quale è stato caricato l'assembly.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)">
          <source>The path to the file from which the assembly was loaded.</source>
          <target state="translated">Percorso del file dal quale è stato caricato l'assembly.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.ITypeResolutionService">
          <source>Loads a type with the specified name.</source>
          <target state="translated">Carica un tipo con il nome specificato.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)">
          <source>The name of the type.</source>
          <target state="translated">Nome del tipo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)">
          <source>If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</source>
          <target state="translated">Se il nome del tipo non è un nome completo che indica un assembly, verrà effettuata la ricerca nel gruppo interno di assembly a cui si fa riferimento.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)">
          <source>Loads a type with the specified name.</source>
          <target state="translated">Carica un tipo con il nome specificato.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that corresponds to the specified name, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no type can be found.</source>
          <target state="translated">Istanza di <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> che corrisponde al nome specificato o <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non è possibile trovare alcun tipo.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)">
          <source>The name of the type.</source>
          <target state="translated">Nome del tipo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)">
          <source>If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</source>
          <target state="translated">Se il nome del tipo non è un nome completo che indica un assembly, verrà effettuata la ricerca nel gruppo interno di assembly a cui si fa riferimento.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method should throw an exception if the assembly cannot be located; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, and this method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the assembly cannot be located.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se questo metodo deve generare un'eccezione quando non è possibile trovare l'assembly. <ph id="ph2">&lt;see langword="false" /&gt;</ph> in caso contrario. Se, il metodo restituirà <ph id="ph3">&lt;see langword="null" /&gt;</ph> se non è possibile trovare l'assembly.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)">
          <source>Loads a type with the specified name.</source>
          <target state="translated">Carica un tipo con il nome specificato.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that corresponds to the specified name, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no type can be found.</source>
          <target state="translated">Istanza di <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> che corrisponde al nome specificato o <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non è possibile trovare alcun tipo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)">
          <source>If the type cannot be loaded and the <ph id="ph1">`throwOnError`</ph> parameter is <ph id="ph2">`true`</ph>, this will throw an exception.</source>
          <target state="translated">Se non è possibile caricare il tipo e il <ph id="ph1">`throwOnError`</ph> parametro <ph id="ph2">`true`</ph>, verrà generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
          <source>The name of the type.</source>
          <target state="translated">Nome del tipo.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
          <source>If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</source>
          <target state="translated">Se il nome del tipo non è un nome completo che indica un assembly, verrà effettuata la ricerca nel gruppo interno di assembly a cui si fa riferimento.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method should throw an exception if the assembly cannot be located; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, and this method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the assembly cannot be located.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se questo metodo deve generare un'eccezione quando non è possibile trovare l'assembly. <ph id="ph2">&lt;see langword="false" /&gt;</ph> in caso contrario. Se, il metodo restituirà <ph id="ph3">&lt;see langword="null" /&gt;</ph> se non è possibile trovare l'assembly.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore case when searching for types; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per ignorare la distinzione tra maiuscole e minuscole nella ricerca dei tipi. <ph id="ph2">&lt;see langword="false" /&gt;</ph> in caso contrario.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
          <source>Loads a type with the specified name.</source>
          <target state="translated">Carica un tipo con il nome specificato.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that corresponds to the specified name, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no type can be found.</source>
          <target state="translated">Istanza di <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> che corrisponde al nome specificato o <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non è possibile trovare alcun tipo.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
          <source>If the type cannot be loaded and the <ph id="ph1">`throwOnError`</ph> parameter is <ph id="ph2">`true`</ph>, this will throw an exception.</source>
          <target state="translated">Se non è possibile caricare il tipo e il <ph id="ph1">`throwOnError`</ph> parametro <ph id="ph2">`true`</ph>, verrà generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> that indicates the assembly to reference.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> che indica l'assembly a cui fare riferimento.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)">
          <source>Adds a reference to the specified assembly.</source>
          <target state="translated">Aggiunge un riferimento all'assembly specificato.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)">
          <source>Once a reference to an assembly has been added to this service, this service can load types from names that do not specify an assembly.</source>
          <target state="translated">Dopo aver aggiunto un riferimento a un assembly per questo servizio, questo servizio è possibile caricare tipi da nomi che non si specificano un assembly.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>