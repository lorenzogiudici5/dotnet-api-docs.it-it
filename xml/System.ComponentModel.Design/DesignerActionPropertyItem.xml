<Type Name="DesignerActionPropertyItem" FullName="System.ComponentModel.Design.DesignerActionPropertyItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="53c95ca8b8f21d169f985d0a2677c965301c2a12" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39951873" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DesignerActionPropertyItem : System.ComponentModel.Design.DesignerActionItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DesignerActionPropertyItem extends System.ComponentModel.Design.DesignerActionItem" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerActionPropertyItem" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DesignerActionPropertyItem&#xA;Inherits DesignerActionItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerActionPropertyItem sealed : System::ComponentModel::Design::DesignerActionItem" />
  <TypeSignature Language="F#" Value="type DesignerActionPropertyItem = class&#xA;    inherit DesignerActionItem" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.DesignerActionItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta un elemento pannello associato a una proprietà in una classe derivata da <see cref="T:System.ComponentModel.Design.DesignerActionList" />. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.DesignerActionPropertyItem> classe rappresenta singoli elementi in un pannello smart tag. Ogni elemento è in genere associato a una proprietà in una classe derivata dal <xref:System.ComponentModel.Design.DesignerActionList> classe e forniti dall'autore del componente. L'associazione viene gestita tramite il nome della proprietà, come archiviati nel <xref:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName%2A> proprietà.  
  
 Singoli elementi del pannello sono associati tra loro per formare un pannello da una chiamata ai <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> metodo del <xref:System.ComponentModel.Design.DesignerActionList> classe.  
  
 Per visualizzare il valore della proprietà associata, tale proprietà deve avere una `get` metodo della funzione di accesso; per consentire la modifica, la proprietà deve avere un `set` metodo della funzione. Il modo in cui il pannello consente la modifica diretta di un elemento di proprietà dell'utente dipende dal supporto informazioni sul tipo presenti per il tipo di dati della proprietà associata. La tabella seguente illustra lo schema di probabilità.  
  
|Informazioni sul tipo di proprietà|Elemento di proprietà dell'interfaccia utente (UI) di modifica|  
|-------------------------------|-------------------------------------------------|  
|Dispone di un editor di tipo associato (<xref:System.Drawing.Design.UITypeEditor>)|Per modificare il valore della proprietà viene visualizzato l'editor di tipi associato alla proprietà sottostante.|  
|Ha un convertitore di tipi associato a un tipo noto (<xref:System.ComponentModel.TypeConverter>)|L'editor di tipo per il tipo conosciuto viene visualizzato per la modifica del valore della proprietà. Ad esempio, un convertitore di tipi <xref:System.String> verrà probabilmente visualizzato un <xref:System.Windows.Forms.TextBox>.|  
|Valore booleano|La voce viene visualizzata usando un'interfaccia utente binaria, ad esempio un segno di spunta.|  
|Nessuna delle precedenti.|L'elemento viene visualizzato come una stringa di testo non modificabile usando il tipo di dati <xref:System.Object.ToString%2A> (metodo).|  
  
 Tutti i tipi fondamentali, ad esempio <xref:System.Boolean?displayProperty=nameWithType>e comune [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] tipi di dati, ad esempio <xref:System.String?displayProperty=nameWithType>, fornire editor e convertitori di tipi standard. Per altre informazioni sui convertitori, vedere [procedura: implementare un convertitore](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) oppure [conversione di tipi generalizzata](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada). Per altre informazioni sull'editor di tipi, vedere [procedura: implementare un Editor di tipo UI](http://msdn.microsoft.com/library/ed961fb9-ee02-4666-b511-05f3204bb75c).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare una raccolta di <xref:System.ComponentModel.Design.DesignerActionItem> oggetti. Per un esempio completo dell'implementazione degli smart tag, vedere [procedura: collegare Smart tag per un componente di Windows Form](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
    <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionPropertyItem (string memberName, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string memberName, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberName As String, displayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionPropertyItem(System::String ^ memberName, System::String ^ displayName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionPropertyItem : string * string -&gt; System.ComponentModel.Design.DesignerActionPropertyItem" Usage="new System.ComponentModel.Design.DesignerActionPropertyItem (memberName, displayName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="memberName">Nome della proprietà con distinzione tra maiuscole e minuscole associato all'elemento del pannello.</param>
        <param name="displayName">Testo del pannello per l'elemento.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> con i nomi di proprietà e i nomi visualizzati specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.DesignerActionPropertyItem.%23ctor%28System.String%2CSystem.String%29> costruttore imposta la <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> e <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> delle proprietà per `null`.  
  
 Il `memberName` parametro fa riferimento al nome della proprietà associata che è un membro della classe derivata da forniti dal programmatore di <xref:System.ComponentModel.Design.DesignerActionList> classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionPropertyItem (string memberName, string displayName, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string memberName, string displayName, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberName As String, displayName As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionPropertyItem(System::String ^ memberName, System::String ^ displayName, System::String ^ category);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionPropertyItem : string * string * string -&gt; System.ComponentModel.Design.DesignerActionPropertyItem" Usage="new System.ComponentModel.Design.DesignerActionPropertyItem (memberName, displayName, category)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="memberName">Nome della proprietà con distinzione tra maiuscole e minuscole associato all'elemento del pannello.</param>
        <param name="displayName">Testo del pannello per l'elemento.</param>
        <param name="category">L'oggetto <see cref="T:System.String" /> con distinzione tra maiuscole e minuscole utilizzato per raggruppare elementi analoghi nel pannello.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />, con i nomi di proprietà, di categoria e il testo visualizzato specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.DesignerActionPropertyItem.%23ctor%28System.String%2CSystem.String%2CSystem.String%29> costruttore imposta la <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> proprietà `null`.  
  
 Per altre informazioni sul modo in cui `category` parametro viene usato per raggruppare gli elementi in un pannello, vedere il <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> (metodo).  
  
 Il `memberName` parametro fa riferimento al nome della proprietà associata che è un membro della classe derivata da forniti dal programmatore <xref:System.ComponentModel.Design.DesignerActionList>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionPropertyItem (string memberName, string displayName, string category, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string memberName, string displayName, string category, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberName As String, displayName As String, category As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionPropertyItem(System::String ^ memberName, System::String ^ displayName, System::String ^ category, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionPropertyItem : string * string * string * string -&gt; System.ComponentModel.Design.DesignerActionPropertyItem" Usage="new System.ComponentModel.Design.DesignerActionPropertyItem (memberName, displayName, category, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="memberName">Nome della proprietà con distinzione tra maiuscole e minuscole associato all'elemento del pannello.</param>
        <param name="displayName">Testo del pannello per l'elemento.</param>
        <param name="category">L'oggetto <see cref="T:System.String" /> con distinzione tra maiuscole e minuscole utilizzato per raggruppare elementi analoghi nel pannello.</param>
        <param name="description">Testo aggiuntivo per questo elemento, utilizzato nelle descrizioni comandi o nella barra di stato.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />, con i nomi di proprietà e di categoria specificati, nonché il testo della descrizione e quello visualizzato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sul modo in cui `category` parametro viene usato per raggruppare gli elementi in un pannello, vedere il <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> (metodo).  
  
 Il `memberName` parametro fa riferimento al nome della proprietà associata che è un membro della classe derivata da forniti dal programmatore di <xref:System.ComponentModel.Design.DesignerActionList> classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare una raccolta di <xref:System.ComponentModel.Design.DesignerActionItem> oggetti. Per un esempio completo dell'implementazione degli smart tag, vedere [procedura: collegare Smart tag per un componente di Windows Form](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public string MemberName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MemberName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberName : string" Usage="System.ComponentModel.Design.DesignerActionPropertyItem.MemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome della proprietà a cui è associato l'elemento.</summary>
        <value>Oggetto <see cref="T:System.String" /> contenente il nome della proprietà associata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName%2A> proprietà specifica la proprietà, ovvero nella classe derivata dal <xref:System.ComponentModel.Design.DesignerActionList> classe, ovvero l'elemento deve essere associato a. Quando il programmatore interagisce con l'elemento del pannello tramite l'interfaccia utente (UI), sarà impostata questa proprietà associata.  
  
 <xref:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName%2A> viene impostato nel costruttore. Il valore è tra maiuscole e minuscole.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName="RelatedComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent RelatedComponent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent RelatedComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent" />
      <MemberSignature Language="VB.NET" Value="Public Property RelatedComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ RelatedComponent { System::ComponentModel::IComponent ^ get(); void set(System::ComponentModel::IComponent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelatedComponent : System.ComponentModel.IComponent with get, set" Usage="System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un componente che rende disponibili i propri elementi al pannello corrente.</summary>
        <value>Il componente stesso, che deve disporre di una finestra di progettazione associata che fornisce oggetti <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Con il <xref:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent%2A> proprietà, un altro componente può rendere disponibili i relativi elementi del pannello del modello pull per l'elenco corrente. Ad esempio, un controllo utente potrebbe aggregare il <xref:System.ComponentModel.Design.DesignerActionItem> oggetti da una o più dei relativi controlli costitutivi.  
  
 Questa proprietà viene utilizzata in combinazione con il <xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A?displayProperty=nameWithType> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
      </Docs>
    </Member>
  </Members>
</Type>