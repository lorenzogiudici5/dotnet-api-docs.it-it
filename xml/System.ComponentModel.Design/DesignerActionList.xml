<Type Name="DesignerActionList" FullName="System.ComponentModel.Design.DesignerActionList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="05622b9de5742e191e6dbac33792fd52b9e69434" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30368755" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignerActionList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerActionList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerActionList" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerActionList" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerActionList" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce la classe di base per i tipi che definiscono un elenco di elementi utilizzati per creare un pannello smart tag.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `DesignerAction` funzionalità attiva componenti e controlli per visualizzare informazioni sensibili al contesto e i comandi. Il `DesignerAction` funzionalità può essere considerato come una sostituzione per i verbi di progettazione, poiché un <xref:System.ComponentModel.Design.DesignerActionItem> può essere visualizzato nel pannello smart tag e anche nel menu di scelta rapida associato a un componente o controllo. La <xref:System.ComponentModel.Design.DesignerActionList> classe rappresenta il principale punto di interazione per supportano gli sviluppatori che desiderano aggiungere smart tag per i componenti e controlli personalizzati.  
  
 <xref:System.ComponentModel.Design.DesignerActionList> è la classe base, derivata dagli sviluppatori di componenti per popolare un pannello smart tag. Un pannello smart tag rappresenta l'interfaccia di menu utente (UI) per gli smart tag.  
  
 Questa classe derivata può implementare il `virtual` <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> per restituire una raccolta di oggetti derivati da <xref:System.ComponentModel.Design.DesignerActionItem>. Questi oggetti rappresentano gli elementi del pannello smart tag. Ogni elemento viene visualizzato nel pannello in base al relativo tipo. Ad esempio, un <xref:System.ComponentModel.Design.DesignerActionTextItem> viene visualizzato come un'etichetta di testo statico. Gli elementi del pannello attivo, rappresentati dal <xref:System.ComponentModel.Design.DesignerActionPropertyItem> e <xref:System.ComponentModel.Design.DesignerActionMethodItem> tipi, hanno una proprietà accessibile pubblicamente o un metodo, rispettivamente, che implementa la funzionalità per l'elemento.  
  
 Per ulteriori informazioni su come aggiungere elementi al pannello smart tag, vedere il <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> metodo.  
  
> [!NOTE]
>  Moduli e finestre di dialogo possono essere visualizzate dai membri della classe derivata da <xref:System.ComponentModel.Design.DesignerActionList>. Per impostazione predefinita, l'elemento padre di queste finestre sarà la finestra del contenitore per il pannello smart tag. In modo esplicito può essere padre di queste finestre figlio a un altro servizio o finestra potrebbe smart tag visualizzare in modo non corretto.  
>   
>  Pannelli smart tag non supportano lo scorrimento o di paging, prestare attenzione a non popolare i pannelli con molti elementi smart tag. Troppi elementi potrebbero causare il pannello smart tag che si estende oltre i limiti dello schermo.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come creare una raccolta di <xref:System.ComponentModel.Design.DesignerActionItem> oggetti.  
  
 Per una spiegazione completa di questo esempio di codice, vedere [procedura: collegare Smart tag in un componente di Windows Form](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#2)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
    <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionList (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionList(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Un componente correlato a <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.Design.DesignerActionList> costruttore imposta la <xref:System.ComponentModel.Design.DesignerActionList.AutoShow%2A> proprietà `false`.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come creare una raccolta di <xref:System.ComponentModel.Design.DesignerActionItem> oggetti.  
  
 Per una spiegazione completa di questo esempio di codice, vedere [procedura: collegare Smart tag in un componente di Windows Form](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#4)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShow">
      <MemberSignature Language="C#" Value="public virtual bool AutoShow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoShow" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionList.AutoShow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoShow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoShow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il pannello smart tag verrà visualizzato automaticamente alla sua creazione.</summary>
        <value>
          <see langword="true" /> se il pannello deve essere visualizzato alla creazione del relativo componente proprietario; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il valore della proprietà è impostato su `true`, il componente a cui questa <xref:System.ComponentModel.Design.DesignerActionList> è automaticamente associato verrà espandere e visualizzare il pannello smart tag quando viene creato il componente.  
  
 È possibile rifiutare esplicitamente questo comportamento impostando la <xref:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow%2A?displayProperty=nameWithType> proprietà `false`.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come creare una raccolta di <xref:System.ComponentModel.Design.DesignerActionItem> oggetti.  
  
 Per una spiegazione completa di questo esempio di codice, vedere [procedura: collegare Smart tag in un componente di Windows Form](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerOptionService" />
      </Docs>
    </Member>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Component" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionList.Component" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Component As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il componente correlato a <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
        <value>Un componente correlato a <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Servizio fornito da <see cref="T:System.ComponentModel.Component" />.</param>
        <summary>Restituisce un oggetto che rappresenta un servizio fornito dal componente associato all'oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
        <returns>Oggetto <see cref="T:System.Object" /> che rappresenta un servizio fornito da <see cref="T:System.ComponentModel.Component" />. Questo valore restituisce <see langword="null" /> se da <see cref="T:System.ComponentModel.Component" /> non viene fornito il servizio specificato.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSortedActionItems">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerActionItemCollection GetSortedActionItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerActionItemCollection GetSortedActionItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortedActionItems () As DesignerActionItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::DesignerActionItemCollection ^ GetSortedActionItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionItemCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'insieme di oggetti <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> contenuti nell'elenco.</summary>
        <returns>Una matrice <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> contenente gli elementi nell'elenco.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `virtual` <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> metodo viene implementato per restituire, ordine di visualizzazione in quella prevista, una raccolta di oggetti derivati dalla <xref:System.ComponentModel.Design.DesignerActionItem> classe. Questi elementi possono essere dei seguenti tipi specifici.  
  
|Tipo|Descrizione|  
|----------|-----------------|  
|<xref:System.ComponentModel.Design.DesignerActionHeaderItem>|L'etichetta del gruppo, visualizzata in grassetto.|  
|<xref:System.ComponentModel.Design.DesignerActionTextItem>|Un'etichetta, visualizzata in caratteri normali.|  
|<xref:System.ComponentModel.Design.DesignerActionPropertyItem>|Un elemento del pannello associato una proprietà. Possono anche visualizzare un editor di proprietà associato alla proprietà sottostante o il segno di spunta.|  
|<xref:System.ComponentModel.Design.DesignerActionMethodItem>|Un elemento del pannello visualizzato come collegamento ipertestuale e associata a un metodo.|  
  
 Per ogni <xref:System.ComponentModel.Design.DesignerActionMethodItem> e <xref:System.ComponentModel.Design.DesignerActionPropertyItem>, una proprietà o metodo corrispondente deve essere aggiunto alla classe fornita dal programmatore derivata dalla <xref:System.ComponentModel.Design.DesignerActionList> classe. Ogni metodo e proprietà di elemento viene visualizzato come voce attiva. interagire con essi tramite l'interfaccia utente (UI) richiama il metodo corrispondente o proprietà, rispettivamente.  
  
 Gli elementi di proprietà hanno un'interfaccia pannello speciale che consente la visualizzazione e modifica dei valori di proprietà corrispondente. Per altre informazioni, vedere la classe <xref:System.ComponentModel.Design.DesignerActionPropertyItem>.  
  
 L'ordine degli elementi nella matrice restituita corrisponde all'ordine in cui sono visualizzati nel pannello. Gli elementi sono raggruppati in base al <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> proprietà, utilizzando le regole seguenti:  
  
-   La categoria del primo elemento rilevato indica l'inizio del primo gruppo. Che continua fino a quando ogni elemento successivo è della stessa categoria. Quando viene incontrato un elemento di una categoria diversa, viene creato un nuovo gruppo e in cui viene inserito l'elemento.  
  
-   Se un tipo diverso da quello del gruppo corrente di un elemento, ma tale categoria è già stata utilizzata, l'elemento viene inserito in una categoria esistente corrispondente.  
  
-   Se un elemento non dispone di una categoria, questo viene inserito in un gruppo esterno alla fine del pannello. Questo gruppo include anche gli elementi il cui <xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A> è impostata su `false`.  
  
 Il <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> metodo viene chiamato quando viene creato il pannello. È necessario chiamare il <xref:System.ComponentModel.Design.DesignerActionUIService.Refresh%2A> metodo per aggiornare l'elenco di elementi visualizzati nel pannello.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come creare una raccolta di <xref:System.ComponentModel.Design.DesignerActionItem> oggetti.  
  
 Per una spiegazione completa di questo esempio di codice, vedere [procedura: collegare Smart tag in un componente di Windows Form](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.Category" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>