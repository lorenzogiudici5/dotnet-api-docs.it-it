<Type Name="SafeHandleMinusOneIsInvalid" FullName="Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid">
  <TypeSignature Language="C#" Value="public abstract class SafeHandleMinusOneIsInvalid : System.Runtime.InteropServices.SafeHandle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SafeHandleMinusOneIsInvalid extends System.Runtime.InteropServices.SafeHandle" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SafeHandleMinusOneIsInvalid&#xA;Inherits SafeHandle" />
  <TypeSignature Language="C++ CLI" Value="public ref class SafeHandleMinusOneIsInvalid abstract : System::Runtime::InteropServices::SafeHandle" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.SafeHandle</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e58a1-101">Fornisce una classe base per implementazioni di handle protetti Win32 in cui il valore di -1 indica un handle non valido.</span><span class="sxs-lookup"><span data-stu-id="e58a1-101">Provides a base class for Win32 safe handle implementations in which the value of -1 indicates an invalid handle.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e58a1-102">Tale classe deriva dalla classe <xref:System.Runtime.InteropServices.SafeHandle?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e58a1-102">This class derives from the <xref:System.Runtime.InteropServices.SafeHandle?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="e58a1-103">Descrive il formato di un handle non valido che utilizza il valore-1.</span><span class="sxs-lookup"><span data-stu-id="e58a1-103">It describes the format of an invalid handle that uses a value of -1.</span></span> <span data-ttu-id="e58a1-104">Ulteriori derivazioni di questa classe, ad esempio, file o del Registro di sistema handle, possano specializzare ulteriormente questo concetto.</span><span class="sxs-lookup"><span data-stu-id="e58a1-104">Further derivations of this class (for example, file or registry handles) can specialize this further.</span></span> <span data-ttu-id="e58a1-105">Vedere il <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> per un esempio di una classe che deriva dalla classe <xref:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid>.</span><span class="sxs-lookup"><span data-stu-id="e58a1-105">See the <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> class for an example of a class that derives from <xref:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid>.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="e58a1-106">Questo tipo implementa il <xref:System.IDisposable> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="e58a1-106">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="e58a1-107">Dopo aver utilizzato il tipo, è necessario eliminarlo direttamente o indirettamente.</span><span class="sxs-lookup"><span data-stu-id="e58a1-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="e58a1-108">Per eliminare direttamente il tipo, chiamare il relativo <xref:System.IDisposable.Dispose%2A> metodo in un `try` - `catch` blocco.</span><span class="sxs-lookup"><span data-stu-id="e58a1-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`-`catch` block.</span></span> <span data-ttu-id="e58a1-109">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio `using` in C# o `Using` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="e58a1-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="e58a1-110">Per ulteriori informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <xref:System.IDisposable> argomento relativo all'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="e58a1-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="e58a1-111">per l'attendibilità totale per gli eredi.</span><span class="sxs-lookup"><span data-stu-id="e58a1-111">for full trust for inheritors.</span></span> <span data-ttu-id="e58a1-112">Questo membro non può essere ereditato da codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="e58a1-112">This member cannot be inherited by partially trusted code.</span></span></permission>
    <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="e58a1-113">richiede l'attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="e58a1-113">requires full trust for the immediate caller.</span></span> <span data-ttu-id="e58a1-114">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span><span class="sxs-lookup"><span data-stu-id="e58a1-114">This member cannot be used by partially trusted or transparent code.</span></span></permission>
    <altmember cref="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
    <altmember cref="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid" />
    <altmember cref="T:System.Runtime.InteropServices.CriticalHandle" />
    <altmember cref="T:System.Runtime.InteropServices.SafeHandle" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SafeHandleMinusOneIsInvalid (bool ownsHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool ownsHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (ownsHandle As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SafeHandleMinusOneIsInvalid(bool ownsHandle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="ownsHandle" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ownsHandle">
          <span data-ttu-id="e58a1-115"><see langword="true" /> per rilasciare in modo affidabile l'handle durante la fase di finalizzazione; <see langword="false" /> per impedire il rilascio affidabile (opzione non consigliata).</span><span class="sxs-lookup"><span data-stu-id="e58a1-115"><see langword="true" /> to reliably release the handle during the finalization phase; <see langword="false" /> to prevent reliable release (not recommended).</span></span></param>
        <summary><span data-ttu-id="e58a1-116">Inizializza una nuova istanza della classe <see cref="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" />, specificando se l'handle deve essere rilasciato in modo affidabile.</span><span class="sxs-lookup"><span data-stu-id="e58a1-116">Initializes a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" /> class, specifying whether the handle is to be reliably released.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="e58a1-117">per l'attendibilità totale per gli eredi.</span><span class="sxs-lookup"><span data-stu-id="e58a1-117">for full trust for inheritors.</span></span> <span data-ttu-id="e58a1-118">Questo membro non può essere ereditato da codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="e58a1-118">This member cannot be inherited by partially trusted code.</span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="e58a1-119">richiede l'attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="e58a1-119">requires full trust for the immediate caller.</span></span> <span data-ttu-id="e58a1-120">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span><span class="sxs-lookup"><span data-stu-id="e58a1-120">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.SafeHandle" />
      </Docs>
    </Member>
    <Member MemberName="IsInvalid">
      <MemberSignature Language="C#" Value="public override bool IsInvalid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvalid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsInvalid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsInvalid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e58a1-121">Ottiene un valore che indica se l'handle non è valido.</span><span class="sxs-lookup"><span data-stu-id="e58a1-121">Gets a value that indicates whether the handle is invalid.</span></span></summary>
        <value>
          <span data-ttu-id="e58a1-122"><see langword="true" /> se l'handle non è valido; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e58a1-122"><see langword="true" /> if the handle is not valid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e58a1-123">Common language runtime utilizza questa proprietà per determinare se è necessaria la finalizzazione critica.</span><span class="sxs-lookup"><span data-stu-id="e58a1-123">The common language runtime uses this property to determine whether critical finalization is required.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.InteropServices.SafeHandle.IsInvalid" />
        <altmember cref="T:System.Runtime.InteropServices.SafeHandle" />
      </Docs>
    </Member>
  </Members>
</Type>