<Type Name="CriticalHandleMinusOneIsInvalid" FullName="Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid">
  <TypeSignature Language="C#" Value="public abstract class CriticalHandleMinusOneIsInvalid : System.Runtime.InteropServices.CriticalHandle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CriticalHandleMinusOneIsInvalid extends System.Runtime.InteropServices.CriticalHandle" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CriticalHandleMinusOneIsInvalid&#xA;Inherits CriticalHandle" />
  <TypeSignature Language="C++ CLI" Value="public ref class CriticalHandleMinusOneIsInvalid abstract : System::Runtime::InteropServices::CriticalHandle" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.CriticalHandle</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="008ae-101">Fornisce una classe base per implementazioni di handle critici Win32 in cui il valore di -1 indica un handle non valido.</span><span class="sxs-lookup"><span data-stu-id="008ae-101">Provides a base class for Win32 critical handle implementations in which the value of -1 indicates an invalid handle.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="008ae-102">Tale classe deriva dalla classe <xref:System.Runtime.InteropServices.CriticalHandle?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="008ae-102">This class derives from the <xref:System.Runtime.InteropServices.CriticalHandle?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="008ae-103">Descrive il formato di un handle non valido che utilizza il valore-1.</span><span class="sxs-lookup"><span data-stu-id="008ae-103">It describes the format of an invalid handle that uses a value of -1.</span></span> <span data-ttu-id="008ae-104">Ulteriori derivazioni di questa classe, ad esempio, file o del Registro di sistema handle, possano specializzare ulteriormente questo concetto.</span><span class="sxs-lookup"><span data-stu-id="008ae-104">Further derivations of this class (for example, file or registry handles) can specialize this further.</span></span>  
  
 <span data-ttu-id="008ae-105">Questo tipo implementa il <xref:System.IDisposable> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="008ae-105">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="008ae-106">Dopo aver utilizzato il tipo, è necessario eliminarlo direttamente o indirettamente.</span><span class="sxs-lookup"><span data-stu-id="008ae-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="008ae-107">Per eliminare direttamente il tipo, chiamare il relativo <xref:System.IDisposable.Dispose%2A> metodo in un `try` / `catch` blocco.</span><span class="sxs-lookup"><span data-stu-id="008ae-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="008ae-108">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio `using` in C# o `Using` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="008ae-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="008ae-109">Per ulteriori informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <xref:System.IDisposable> argomento relativo all'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="008ae-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="008ae-110">Vedere la <xref:System.Runtime.InteropServices.CriticalHandle> classe per informazioni importanti sulla sicurezza di sicurezza e thread handle critical.</span><span class="sxs-lookup"><span data-stu-id="008ae-110">See the <xref:System.Runtime.InteropServices.CriticalHandle> class for important information on critical handle security and thread safety.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="008ae-111">per l'attendibilità totale per gli eredi.</span><span class="sxs-lookup"><span data-stu-id="008ae-111">for full trust for inheritors.</span></span> <span data-ttu-id="008ae-112">Questo membro non può essere ereditato da codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="008ae-112">This member cannot be inherited by partially trusted code.</span></span></permission>
    <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="008ae-113">richiede l'attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="008ae-113">requires full trust for the immediate caller.</span></span> <span data-ttu-id="008ae-114">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span><span class="sxs-lookup"><span data-stu-id="008ae-114">This member cannot be used by partially trusted or transparent code.</span></span></permission>
    <altmember cref="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid" />
    <altmember cref="T:System.Runtime.InteropServices.CriticalHandle" />
    <altmember cref="T:System.Runtime.InteropServices.SafeHandle" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CriticalHandleMinusOneIsInvalid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CriticalHandleMinusOneIsInvalid();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="008ae-115">Inizializza una nuova istanza della classe <see cref="T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid" />.</span><span class="sxs-lookup"><span data-stu-id="008ae-115">Initializes a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="008ae-116">per l'attendibilità totale per gli eredi.</span><span class="sxs-lookup"><span data-stu-id="008ae-116">for full trust for inheritors.</span></span> <span data-ttu-id="008ae-117">Questo membro non può essere ereditato da codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="008ae-117">This member cannot be inherited by partially trusted code.</span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="008ae-118">richiede l'attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="008ae-118">requires full trust for the immediate caller.</span></span> <span data-ttu-id="008ae-119">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span><span class="sxs-lookup"><span data-stu-id="008ae-119">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.CriticalHandle" />
      </Docs>
    </Member>
    <Member MemberName="IsInvalid">
      <MemberSignature Language="C#" Value="public override bool IsInvalid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvalid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.IsInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsInvalid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsInvalid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="008ae-120">Ottiene un valore che indica se l'handle non è valido.</span><span class="sxs-lookup"><span data-stu-id="008ae-120">Gets a value that indicates whether the handle is invalid.</span></span></summary>
        <value>
          <span data-ttu-id="008ae-121"><see langword="true" /> se l'handle non è valido; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="008ae-121"><see langword="true" /> if the handle is not valid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="008ae-122">Common language runtime utilizza questa proprietà per determinare se è necessaria la finalizzazione critica.</span><span class="sxs-lookup"><span data-stu-id="008ae-122">The common language runtime uses this property to determine whether critical finalization is required.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.CriticalHandle" />
        <altmember cref="P:System.Runtime.InteropServices.CriticalHandle.IsInvalid" />
      </Docs>
    </Member>
  </Members>
</Type>