<Type Name="EncoderFallbackBuffer" FullName="System.Text.EncoderFallbackBuffer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a1db99dfdff0b87f276d144f15d72d2729b0e691" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37548799" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallbackBuffer abstract" />
  <TypeSignature Language="F#" Value="type EncoderFallbackBuffer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce un buffer che consente a un gestore di fallback di restituire una stringa alternativa a un codificatore quando non è in grado di codificare un carattere di input.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una codifica definisce un mapping tra un carattere Unicode e una sequenza di byte codificata. Un'operazione di codifica, che converte un carattere di input in una sequenza di byte di output, non riesce se è definito alcun mapping di un determinato carattere.  
  
 .NET Framework fornisce un meccanismo, denominato fallback, se non è possibile eseguire una conversione di gestione degli errori. Tutti i gestori di fallback del codificatore devono implementare quanto segue:  
  
-   Un fallback del codificatore, che è rappresentata da una classe derivata dal <xref:System.Text.EncoderFallback> classe.  
  
-   Un buffer di fallback del codificatore, che è rappresentato da un tipo derivato dal <xref:System.Text.EncoderFallbackBuffer> classe che può restituire una stringa per l'operazione di conversione.  
  
 I fallback è possono usare tre strategie per gestire gli errori di conversione:  
  
-   Mapping più appropriato. Il buffer di fallback del codificatore può restituire una stringa che rappresenta un'approssimazione molto vicina al carattere di input. .NET Framework non è incluso un pubblico più appropriato <xref:System.Text.EncoderFallbackBuffer> implementazione.  
  
-   Sostituzione. Il buffer di fallback del codificatore può restituire una stringa, ad esempio un punto interrogativo ("?"), che indica che un carattere non può essere codificato. In .NET Framework, il <xref:System.Text.EncoderReplacementFallback> e <xref:System.Text.EncoderReplacementFallbackBuffer> classi forniscono un'implementazione di buffer di fallback di sostituzione pubblico. Il costruttore del <xref:System.Text.EncoderReplacementFallback> classe consente di definire la stringa di sostituzione.  
  
-   Eccezione. Il <xref:System.Text.EncoderFallbackBuffer> implementazione genera un'eccezione che indica che un carattere non può essere codificato e termina l'operazione di codifica. In questo caso, il gestore di fallback è necessario fornire un <xref:System.Text.EncoderFallbackBuffer> implementazione, anche se non restituisce una stringa al codificatore. In .NET Framework, il <xref:System.Text.EncoderExceptionFallback> e <xref:System.Text.EncoderExceptionFallbackBuffer> classi forniscono un'implementazione del fallback di eccezione pubblica che genera un <xref:System.Text.EncoderFallbackException> quando un carattere non può essere codificato.  
  
 Buffer in un <xref:System.Text.EncoderFallbackBuffer> implementazione rappresenta l'intera stringa deve essere restituito al codificatore in risposta a un codificatore di fallback. In genere, le implementazioni includono anche informazioni sullo stato, ad esempio l'indice del carattere successivo da restituire per il codificatore e il numero di caratteri rimanenti da restituire. Poiché <xref:System.Text.EncoderFallbackBuffer> è una classe astratta, richiede alle classi derivate di implementare i membri seguenti come minimo:  
  
-   L'overload <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> metodo, che viene chiamato dal codificatore quando non può codificare un carattere. Il codificatore passa due tipi di informazioni per l'implementazione del buffer di fallback: il carattere o coppia di surrogati che non può essere codificato e l'indice del carattere di input. In un gestore di eccezioni di fallback del codificatore, in questo metodo viene generata l'eccezione. In caso contrario, il metodo restituisce `true` se fornisce un fallback o `false` se non esiste.  
  
-   Il <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> metodo, che viene chiamato ripetutamente dal codificatore se il <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> restituzione del metodo `true`. Nelle chiamate successive, il gestore deve restituire ogni carattere nel buffer. Se ha restituito tutti i caratteri, deve restituire u+0000. Un gestore di eccezioni restituisce sempre u+0000.  
  
-   Il <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> metodo, che tenta di spostare il puntatore alla posizione precedente nel buffer e indica se lo spostamento è riuscito. Restituisce sempre un gestore di eccezioni `false`.  
  
-   Il <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> proprietà, che indica il numero di caratteri rimanenti devono essere restituiti al codificatore. Un gestore di fallback di eccezione restituisce sempre zero.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.EncoderFallbackBuffer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Indica se è disponibile una stringa sostitutiva per i casi in cui l'input originale non viene codificato oppure se l'input originale deve essere ignorato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown">Carattere di input.</param>
        <param name="index">Posizione di indice del carattere nel buffer di input.</param>
        <summary>Quando sottoposto a override in una classe derivata, prepara il buffer di fallback per la gestione del carattere di input specificato.</summary>
        <returns>
          <see langword="true" /> se il buffer di fallback è in grado di elaborare <paramref name="charUnknown" />. <see langword="false" /> se il buffer di fallback ignora <paramref name="charUnknown" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> e <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> chiamata di metodi <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> se riscontrano un carattere di input sconosciuto che non può essere codificato. Un valore restituito pari `true` indica che il buffer di fallback può elaborare il carattere di input, che determina la chiamata al metodo da chiamare il <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> per ottenere ogni carattere nel buffer di fallback. Poiché non elabora i singoli caratteri, di <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> metodo in un gestore di fallback di eccezioni genera un'eccezione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh">Surrogato alto della coppia di input.</param>
        <param name="charUnknownLow">Surrogato basso della coppia di input.</param>
        <param name="index">Posizione di indice della coppia di surrogati nel buffer di input.</param>
        <summary>Quando sottoposto a override in una classe derivata, prepara il buffer di fallback per la gestione della coppia di surrogati specificata.</summary>
        <returns>
          <see langword="true" /> se il buffer di fallback può elaborare <paramref name="charUnknownHigh" /> e <paramref name="charUnknownLow" />; <see langword="false" /> se il buffer di fallback ignora la coppia di surrogati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> e <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> chiamata di metodi <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> se riscontrano una coppia di surrogati nell'input. Un valore restituito pari `true` indica che il buffer di fallback può elaborare la coppia di surrogati, che determina la chiamata al metodo da chiamare il <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> per ottenere ogni carattere nel buffer di fallback.  Poiché non elabora i singoli caratteri, di <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> metodo in un gestore di fallback di eccezioni genera un'eccezione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberSignature Language="F#" Value="abstract member GetNextChar : unit -&gt; char" Usage="encoderFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando sottoposto a override in una classe derivata, recupera il carattere successivo nel buffer di fallback.</summary>
        <returns>Carattere successivo nel buffer di fallback.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiama un'operazione di codifica di <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> metodo, se l'operazione rileva un carattere sconosciuto o una coppia di surrogati nell'input. Ad esempio, nel caso di una se fallback di sostituzione il <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> restituzione del metodo `true`, una stringa sostitutiva possono essere codificati anziché l'input sconosciuto. Le chiamate di operazioni di codifica di <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> metodo ripetutamente e ottiene la stringa di sostituzione di un carattere alla volta. Quando sono stati restituiti tutti i caratteri nel buffer di fallback per il codificatore di <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> metodo dovrebbe restituire u+0000.  
  
 Per un gestore di fallback di eccezione, il <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> metodo dovrebbe restituire u+0000.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberSignature Language="F#" Value="abstract member MovePrevious : unit -&gt; bool" Usage="encoderFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando sottoposto a override in una classe derivata, genera la chiamata successiva al metodo <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> per accedere alla posizione del carattere del buffer di dati precedente al carattere corrente.</summary>
        <returns>
          <see langword="true" /> se l'operazione <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> ha esito positivo; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Deve restituire un gestore di fallback di eccezione `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando sottoposto a override in una classe derivata, ottiene il numero di caratteri nell'oggetto <see cref="T:System.Text.EncoderFallbackBuffer" /> corrente ancora da elaborare.</summary>
        <value>Numero dei caratteri nel buffer di fallback corrente ancora da elaborare.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> restituzione del metodo `true` se <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> è un valore diverso da zero.  
  
 Per un gestore di fallback di eccezione, il <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> metodo dovrebbe restituire zero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="encoderFallbackBuffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inizializza tutti i dati e le informazioni sullo stato relativamente a questo buffer di fallback.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Dopo la chiamata di <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> metodo, il <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> proprietà deve restituire 0, il <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> metodo dovrebbe restituire u+0000 e il <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> metodo deve restituire <see langword="false" />.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>