<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UTF7Encoding.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac540f36be3d79f3c461e6cad74d571b93712f0f577.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40f36be3d79f3c461e6cad74d571b93712f0f577</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.UTF7Encoding">
          <source>Represents a UTF-7 encoding of Unicode characters.</source>
          <target state="translated">Rappresenta una codifica UTF-7 dei caratteri Unicode.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF7Encoding">
          <source>Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</source>
          <target state="translated">La codifica è il processo di trasformazione di un insieme di caratteri Unicode in una sequenza di byte.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF7Encoding">
          <source>Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</source>
          <target state="translated">La decodifica è il processo di trasformazione di una sequenza di byte codificati in un set di caratteri Unicode.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF7Encoding">
          <source>The UTF-7 encoding represents Unicode characters as sequences of 7-bit ASCII characters.</source>
          <target state="translated">La codifica UTF-7 rappresenta i caratteri Unicode come sequenze di caratteri ASCII a 7 bit.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF7Encoding">
          <source>This encoding supports certain protocols for which it is required, most often email or newsgroup protocols.</source>
          <target state="translated">Questa codifica supporta alcuni protocolli per cui è necessaria, più protocolli di posta elettronica o newsgroup.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF7Encoding">
          <source>Since UTF-7 is not particularly secure or robust, and most modern systems allow 8-bit encodings, UTF-8 should normally be preferred to UTF-7.</source>
          <target state="translated">Poiché UTF-7 non è particolarmente sicura o affidabile e più recenti sistemi consentono codifiche a 8 bit, UTF-8 in genere deve essere preferito a UTF-7.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF7Encoding">
          <source><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> non fornisce il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF7Encoding">
          <source>For security reasons, the application should use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">Per motivi di sicurezza, l'applicazione deve utilizzare <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, o <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> e attivare il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF7Encoding">
          <source>For more information about the UTFs and other encodings supported by <ph id="ph1">&lt;xref:System.Text&gt;</ph>, see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sui formati UTF e altre codifiche supportate da <ph id="ph1">&lt;xref:System.Text&gt;</ph>, vedere <bpt id="p1">[</bpt>codifica dei caratteri in .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF7Encoding">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> method determines how many bytes result in encoding a set of Unicode characters, and the <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> method performs the actual encoding.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> metodo determina il numero di byte risultanti dalla codifica di un set di caratteri Unicode e <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> metodo esegue l'effettiva codifica.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF7Encoding">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph> method determines how many characters result in decoding a sequence of bytes, and the <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.UTF7Encoding.GetString%2A&gt;</ph> methods perform the actual decoding.</source>
          <target state="translated">Analogamente, il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph> metodo determina il numero di caratteri risultanti dalla decodifica di una sequenza di byte e <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Text.UTF7Encoding.GetString%2A&gt;</ph> i metodi eseguono la decodifica effettiva.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF7Encoding">
          <source><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> corresponds to the Windows code page 65000.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> corrisponde alla tabella codici Windows 65000.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF7Encoding">
          <source>The state of a UTF-7 encoded object is not preserved if the object is serialized and deserialized using different .NET Framework versions.</source>
          <target state="translated">Se l'oggetto viene serializzato e deserializzato con diverse versioni di .NET Framework, lo stato di un oggetto con codificata UTF-7 non viene mantenuto.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF7Encoding">
          <source>The following code example demonstrates how to use a <ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> to encode a string of Unicode characters and store them in a byte array.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare un <ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> per codificare una stringa di caratteri Unicode e archiviarli in una matrice di byte.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF7Encoding">
          <source>Notice that when the byte array is decoded back to a string, no data is lost.</source>
          <target state="translated">Si noti che quando la matrice di byte viene decodificata in una stringa, nessun dato venga perso.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Text.UTF7Encoding">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.UTF7Encoding" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Text.UTF7Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.UTF7Encoding" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Text.UTF7Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.#ctor">
          <source>This constructor creates an instance that does not allow optional characters.</source>
          <target state="translated">Questo costruttore crea un'istanza che non consente caratteri facoltativi.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.#ctor">
          <source>Calling the <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.%23ctor%2A&gt;</ph> constructor is equivalent to calling the <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.%23ctor%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> constructor that takes an <ph id="ph3">`allowOptionals`</ph> parameter and specifying <ph id="ph4">`false`</ph> for that parameter.</source>
          <target state="translated">La chiamata di <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.%23ctor%2A&gt;</ph> equivale alla chiamata al costruttore il <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.%23ctor%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> costruttore che accetta un <ph id="ph3">`allowOptionals`</ph> parametro e specificare <ph id="ph4">`false`</ph> per tale parametro.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.#ctor">
          <source>If an instance allows optional characters, Unicode code points are encoded with a corresponding optional character instead of a modified base 64 character.</source>
          <target state="translated">Se un'istanza consente caratteri facoltativi, i punti di codice Unicode vengono codificati con il carattere facoltativo corrispondente anziché un carattere in base 64 modificato.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.#ctor">
          <source>The optional characters are exclamation point ("!"), backward slash ("<ph id="ph1">\\</ph>"), vertical line ("&amp;#124;"), double quote ("""), number sign ("#"), dollar sign ("$"), percent sign ("%"), ampersand ("&amp;"), asterisk ("*"), semicolon (";"), left angle bracket ("<ph id="ph2">\&lt;</ph>"), right angle bracket ("&gt;"), left curly bracket ("{"), right curly bracket ("}"), left square bracket ("["), right square bracket ("]"), equal sign ("="), at sign ("@"), circumflex accent ("^"), underscore ("_"), and grave accent ("`").</source>
          <target state="translated">I caratteri facoltativi sono punto esclamativo ("!"), barra rovesciata ("<ph id="ph1">\\</ph>"), riga verticale ("&amp;#124;"), virgolette doppie ("" "), cancelletto ("#"), segno di dollaro ("$"), percentuale del numero segno ("%"), e commerciale ("&amp; "), asterisco (" * "), punto e virgola (";"), a sinistra parentesi angolare ("<ph id="ph2">\&lt;</ph>"), parentesi uncinate chiuse ("&gt;"), parentesi graffa aperta ("{"), parentesi graffa chiusa ("}"), parentesi quadra sinistra ("["), parentesi quadra chiusa ("]"), segno di uguale ("="), simbolo di chiocciola ("@"), accento circonflesso ("^"), un carattere di sottolineatura ("_") e accento grave distinzione tra caratteri accentati ("" ").</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.#ctor">
          <source><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> non fornisce il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.#ctor">
          <source>For security reasons, your applications are recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">Per motivi di sicurezza, si consiglia di utilizzare <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, o <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> e attivare il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.#ctor">
          <source>The following code example demonstrates how to create a new <ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> instance and display the name of the encoding.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come creare un nuovo <ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> istanza e visualizzare il nome della codifica.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that optional characters are allowed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per specificare che i caratteri facoltativi sono consentiti; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.UTF7Encoding" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Text.UTF7Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.#ctor(System.Boolean)">
          <source>A parameter specifies whether to allow optional characters.</source>
          <target state="translated">Un parametro specifica se consentire caratteri facoltativi.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.#ctor(System.Boolean)">
          <source>If an instance allows optional characters, Unicode code points are encoded with a corresponding optional character instead of a modified base 64 character.</source>
          <target state="translated">Se un'istanza consente caratteri facoltativi, i punti di codice Unicode vengono codificati con il carattere facoltativo corrispondente anziché un carattere in base 64 modificato.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.#ctor(System.Boolean)">
          <source>The optional characters are exclamation point ("!"), backward slash ("<ph id="ph1">\\</ph>"), vertical line ("&amp;#124;"), double quote ("""), number sign ("#"), dollar sign ("$"), percent sign ("%"), ampersand ("&amp;"), asterisk ("*"), semicolon (";"), left angle bracket ("<ph id="ph2">\&lt;</ph>"), right angle bracket ("&gt;"), left curly bracket ("{"), right curly bracket ("}"), left square bracket ("["), right square bracket ("]"), equal sign ("="), at sign ("@"), circumflex accent ("^"), underscore ("_"), and grave accent ("`").</source>
          <target state="translated">I caratteri facoltativi sono punto esclamativo ("!"), barra rovesciata ("<ph id="ph1">\\</ph>"), riga verticale ("&amp;#124;"), virgolette doppie ("" "), cancelletto ("#"), segno di dollaro ("$"), percentuale del numero segno ("%"), e commerciale ("&amp; "), asterisco (" * "), punto e virgola (";"), a sinistra parentesi angolare ("<ph id="ph2">\&lt;</ph>"), parentesi uncinate chiuse ("&gt;"), parentesi graffa aperta ("{"), parentesi graffa chiusa ("}"), parentesi quadra sinistra ("["), parentesi quadra chiusa ("]"), segno di uguale ("="), simbolo di chiocciola ("@"), accento circonflesso ("^"), un carattere di sottolineatura ("_") e accento grave distinzione tra caratteri accentati ("" ").</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> non fornisce il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.#ctor(System.Boolean)">
          <source>For security reasons, your applications are recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">Per motivi di sicurezza, si consiglia di utilizzare <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, o <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> e attivare il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.#ctor(System.Boolean)">
          <source>The following code example demonstrates how to create a new <ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> instance that allows optional characters.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come creare un nuovo <ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> istanza che consente caratteri facoltativi.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.Equals(System.Object)">
          <source>An object to compare to the current <ph id="ph1">&lt;see cref="T:System.Text.UTF7Encoding" /&gt;</ph> object.</source>
          <target state="translated">Oggetto da confrontare con l'oggetto <ph id="ph1">&lt;see cref="T:System.Text.UTF7Encoding" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.Equals(System.Object)">
          <source>Gets a value indicating whether the specified object is equal to the current <ph id="ph1">&lt;see cref="T:System.Text.UTF7Encoding" /&gt;</ph> object.</source>
          <target state="translated">Ottiene un valore che indica se l'oggetto specificato è uguale all'oggetto <ph id="ph1">&lt;see cref="T:System.Text.UTF7Encoding" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Text.UTF7Encoding" /&gt;</ph> object and is equal to the current <ph id="ph4">&lt;see cref="T:System.Text.UTF7Encoding" /&gt;</ph> object; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="value" /&gt;</ph> è un oggetto <ph id="ph3">&lt;see cref="T:System.Text.UTF7Encoding" /&gt;</ph> ed è uguale all'oggetto <ph id="ph4">&lt;see cref="T:System.Text.UTF7Encoding" /&gt;</ph> corrente; in caso contrario, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.Equals(System.Object)">
          <source>Two <ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> objects are equal if they both either allow or disallow optional characters, and if their underlying <ph id="ph2">&lt;xref:System.Text.Encoding.EncoderFallback%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.Encoding.DecoderFallback%2A&gt;</ph> properties are equal.</source>
          <target state="translated">Due <ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> oggetti sono uguali se entrambi consentono o meno caratteri facoltativi e, se i sottostanti <ph id="ph2">&lt;xref:System.Text.Encoding.EncoderFallback%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Text.Encoding.DecoderFallback%2A&gt;</ph> le proprietà sono uguali.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Text.UTF7Encoding">
          <source>Calculates the number of bytes produced by encoding a set of characters.</source>
          <target state="translated">Calcola il numero di byte prodotti dalla codifica di un set di caratteri.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object containing the set of characters to encode.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> contenente il set di caratteri da codificare.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.String)">
          <source>Calculates the number of bytes produced by encoding the characters in the specified <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">Calcola il numero di byte prodotti dalla codifica dei caratteri nell'oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.String)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">Numero di byte prodotti dalla codifica dei caratteri specificati.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetByteCount(System.String)">
          <source>To calculate the exact array size that <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> requires to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare la dimensione esatta della matrice che <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> per archiviare i byte risultanti, l'applicazione utilizza <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetByteCount(System.String)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare la dimensione massima della matrice, l'applicazione deve utilizzare <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetByteCount(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> metodo consente in genere l'allocazione di memoria inferiore, mentre il <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> metodo in genere viene eseguito più velocemente.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetByteCount(System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> method to return the number of bytes required to encode a character array.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> per restituire il numero di byte necessari per codificare una matrice di caratteri.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.String)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an int.</source>
          <target state="translated">Il numero di byte ottenuto è maggiore del numero massimo che può essere restituito come valore int.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.String)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">Si è verificato un fallback. Per una spiegazione completa, vedere <bpt id="p1">[</bpt>Codifica di caratteri in .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.String)">
          <source>-and-</source>
          <target state="translated">-e-</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.String)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>A pointer to the first character to encode.</source>
          <target state="translated">Puntatore al primo carattere da codificare.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">Numero di caratteri da codificare.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</source>
          <target state="translated">Calcola il numero di byte prodotti dalla codifica di un set di caratteri a partire dal puntatore ai caratteri specificato.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">Numero di byte prodotti dalla codifica dei caratteri specificati.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>To calculate the exact array size that <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> requires to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare la dimensione esatta della matrice che <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> per archiviare i byte risultanti, l'applicazione utilizza <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare la dimensione massima della matrice, l'applicazione deve utilizzare <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> metodo consente in genere l'allocazione di memoria inferiore, mentre il <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> metodo in genere viene eseguito più velocemente.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic .NET).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic .NET).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an int.</source>
          <target state="translated">Il numero di byte ottenuto è maggiore del numero massimo che può essere restituito come valore int.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Si è verificato un fallback. Per una spiegazione completa, vedere <bpt id="p1">[</bpt>Codifica dei caratteri in .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>-and-</source>
          <target state="translated">-e-</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">richiede l'attendibilità totale per il chiamante immediato.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The character array containing the set of characters to encode.</source>
          <target state="translated">Matrice di caratteri contenente il set di caratteri da codificare.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">Indice del primo carattere da codificare.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">Numero di caratteri da codificare.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>Calculates the number of bytes produced by encoding a set of characters from the specified character array.</source>
          <target state="translated">Calcola il numero di byte prodotti dalla codifica di un set di caratteri dalla matrice di caratteri specificata.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">Numero di byte prodotti dalla codifica dei caratteri specificati.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare le dimensioni della matrice esatta richiesta dal <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> per archiviare i byte risultanti, l'applicazione utilizza <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare la dimensione massima della matrice, l'applicazione deve utilizzare <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> metodo consente in genere l'allocazione di memoria inferiore, mentre il <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> metodo in genere viene eseguito più velocemente.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> method to return the number of bytes required to encode an array of Unicode characters.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> per restituire il numero di byte necessari per codificare una matrice di caratteri Unicode.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> o <ph id="ph2">&lt;paramref name="count" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> e <ph id="ph2">&lt;paramref name="count" /&gt;</ph> non identificano un intervallo valido in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an int.</source>
          <target state="translated">Il numero di byte ottenuto è maggiore del numero massimo che può essere restituito come valore int.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Si è verificato un fallback. Per una spiegazione completa, vedere <bpt id="p1">[</bpt>Codifica dei caratteri in .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept></target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">-e-</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="T:System.Text.UTF7Encoding">
          <source>Encodes a set of characters into a sequence of bytes.</source>
          <target state="translated">Codifica un set di caratteri in una sequenza di byte.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A pointer to the first character to encode.</source>
          <target state="translated">Puntatore al primo carattere da codificare.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">Numero di caratteri da codificare.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A pointer to the location at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">Puntatore alla posizione in cui iniziare a scrivere la sequenza di byte risultante.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">Numero massimo di byte da scrivere.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</source>
          <target state="translated">Codifica un set di caratteri a partire dal puntatore ai caratteri specificato in una sequenza di byte archiviati a partire dal puntatore ai byte specificato.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The actual number of bytes written at the location indicated by <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">Numero effettivo di byte scritti nella posizione indicata da <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare le dimensioni della matrice esatta richiesta dal <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> per archiviare i byte risultanti, l'applicazione utilizza <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare la dimensione massima della matrice, l'applicazione deve utilizzare <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> metodo consente in genere l'allocazione di memoria inferiore, mentre il <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> metodo in genere viene eseguito più velocemente.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">Dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">In questo caso, se la quantità di dati è talmente grande che deve essere la suddivisione in blocchi più piccoli, l'applicazione deve utilizzare il <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> o <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> fornito dal <ph id="ph3">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> (metodo) o <ph id="ph4">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> (metodo), rispettivamente.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> non fornisce il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Invalid characters are encoded as a modified base 64 character.</source>
          <target state="translated">Caratteri non validi vengono codificati come un carattere in base 64 modificato.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>For security reasons, your applications are recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">Per motivi di sicurezza, si consiglia di utilizzare <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, o <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> e attivare il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> o <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> is less than the resulting number of bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> è minore del numero di byte risultante.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">Si è verificato un fallback. Per una spiegazione completa, vedere <bpt id="p1">[</bpt>Codifica di caratteri in .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept></target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>-and-</source>
          <target state="translated">-e-</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">richiede l'attendibilità totale per il chiamante immediato.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The character array containing the set of characters to encode.</source>
          <target state="translated">Matrice di caratteri contenente il set di caratteri da codificare.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">Indice del primo carattere da codificare.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">Numero di caratteri da codificare.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The byte array to contain the resulting sequence of bytes.</source>
          <target state="translated">Matrice di byte che deve contenere la sequenza di byte risultante.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">Indice in corrispondenza del quale iniziare a scrivere la sequenza di byte risultante.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Encodes a set of characters from the specified character array into the specified byte array.</source>
          <target state="translated">Codifica un set di caratteri dalla matrice di caratteri specificata nella matrice di byte specificata.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The actual number of bytes written into <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">Numero effettivo di byte scritti in <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare le dimensioni della matrice esatta richiesta dal <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> per archiviare i byte risultanti, l'applicazione utilizza <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare la dimensione massima della matrice, l'applicazione deve utilizzare <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> metodo consente in genere l'allocazione di memoria inferiore, mentre il <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> metodo in genere viene eseguito più velocemente.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">Dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">In questo caso, se la quantità di dati è talmente grande che deve essere la suddivisione in blocchi più piccoli, l'applicazione deve utilizzare il <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> o <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> fornito dal <ph id="ph3">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> (metodo) o <ph id="ph4">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> (metodo), rispettivamente.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> non fornisce il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Invalid characters are encoded as a modified base 64 character.</source>
          <target state="translated">Caratteri non validi vengono codificati come un carattere in base 64 modificato.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>For security reasons, your applications are recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">Per motivi di sicurezza, si consiglia di utilizzare <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, o <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> e attivare il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> method to encode a range of characters from a <ph id="ph2">&lt;xref:System.String&gt;</ph> and store the encoded bytes in a range of elements in a byte array.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> metodo per un intervallo di caratteri da codificare un <ph id="ph2">&lt;xref:System.String&gt;</ph> e archiviare i byte codificati in un intervallo di elementi in una matrice di byte.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> o <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> o <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> e <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> non identificano un intervallo valido in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> non è un indice valido in <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> to the end of the array to accommodate the resulting bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> non dispone di sufficiente capacità da <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> alla fine della matrice per contenere i byte risultanti.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">Si è verificato un fallback. Per una spiegazione completa, vedere <bpt id="p1">[</bpt>Codifica di caratteri in .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept></target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-and-</source>
          <target state="translated">-e-</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the set of characters to encode.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> contenente il set di caratteri da codificare.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">Indice del primo carattere da codificare.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">Numero di caratteri da codificare.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The byte array to contain the resulting sequence of bytes.</source>
          <target state="translated">Matrice di byte che deve contenere la sequenza di byte risultante.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">Indice in corrispondenza del quale iniziare a scrivere la sequenza di byte risultante.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Encodes a set of characters from the specified <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> into the specified byte array.</source>
          <target state="translated">Codifica un set di caratteri dall'oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> specificato nella matrice di byte specificata.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The actual number of bytes written into <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">Numero effettivo di byte scritti in <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare le dimensioni della matrice esatta richiesta dal <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> per archiviare i byte risultanti, l'applicazione utilizza <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare la dimensione massima della matrice, l'applicazione deve utilizzare <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> metodo consente in genere l'allocazione di memoria inferiore, mentre il <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> metodo in genere viene eseguito più velocemente.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">Dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">In questo caso, se la quantità di dati è talmente grande che deve essere la suddivisione in blocchi più piccoli, l'applicazione deve utilizzare il <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> o <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> fornito dal <ph id="ph3">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> (metodo) o <ph id="ph4">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> (metodo), rispettivamente.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> non fornisce il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Invalid characters are encoded as a modified base 64 character.</source>
          <target state="translated">Caratteri non validi vengono codificati come un carattere in base 64 modificato.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>For security reasons, your applications are recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">Per motivi di sicurezza, si consiglia di utilizzare <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, o <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> e attivare il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> method to encode a range of elements from a Unicode character array, and store the encoded bytes in a range of elements in a byte array.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> per codificare un intervallo di elementi da una matrice di caratteri Unicode e archiviare i byte codificati in un intervallo di elementi in una matrice di byte.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> o <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> o <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> e <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> non identificano un intervallo valido in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> non è un indice valido in <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> to the end of the array to accommodate the resulting bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> non dispone di sufficiente capacità da <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> alla fine della matrice per contenere i byte risultanti.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">Si è verificato un fallback. Per una spiegazione completa, vedere <bpt id="p1">[</bpt>Codifica di caratteri in .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept></target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-and-</source>
          <target state="translated">-e-</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="T:System.Text.UTF7Encoding">
          <source>Calculates the number of characters produced by decoding a sequence of bytes.</source>
          <target state="translated">Calcola il numero di caratteri prodotti dalla decodifica di una sequenza di byte.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>A pointer to the first byte to decode.</source>
          <target state="translated">Puntatore al primo byte da decodificare.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Numero di byte da decodificare.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</source>
          <target state="translated">Calcola il numero di caratteri prodotti dalla decodifica di una sequenza di byte a partire dal puntatore ai byte specificato.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The number of characters produced by decoding the specified sequence of bytes.</source>
          <target state="translated">Numero di caratteri prodotti dalla decodifica della sequenza di byte specificata.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> to store the resulting characters, use <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare le dimensioni della matrice esatta richiesta dal <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> per archiviare i caratteri risultanti, utilizzare <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare la dimensione massima della matrice, l'applicazione deve utilizzare <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph> metodo consente in genere l'allocazione di memoria inferiore, mentre il <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> metodo in genere viene eseguito più velocemente.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The resulting number of characters is greater than the maximum number that can be returned as an int.</source>
          <target state="translated">Il numero di caratteri ottenuto è maggiore del numero massimo che può essere restituito come valore int.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">Si è verificato un fallback. Per una spiegazione completa, vedere <bpt id="p1">[</bpt>Codifica di caratteri in .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept></target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>-and-</source>
          <target state="translated">-e-</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">richiede l'attendibilità totale per il chiamante immediato.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">Matrice di byte contenente la sequenza di byte da decodificare.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">Indice del primo byte da decodificare.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Numero di byte da decodificare.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</source>
          <target state="translated">Calcola il numero di caratteri prodotti dalla decodifica di una sequenza di byte dalla matrice di byte specificata.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The number of characters produced by decoding the specified sequence of bytes.</source>
          <target state="translated">Numero di caratteri prodotti dalla decodifica della sequenza di byte specificata.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> to store the resulting characters, use <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare le dimensioni della matrice esatta richiesta dal <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> per archiviare i caratteri risultanti, utilizzare <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare la dimensione massima della matrice, l'applicazione deve utilizzare <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph> metodo consente in genere l'allocazione di memoria inferiore, mentre il <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> metodo in genere viene eseguito più velocemente.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph> method to return the number of characters produced by decoding a range of elements in a byte array.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph> per restituire il numero di caratteri prodotti dalla decodifica di un intervallo di elementi in una matrice di byte.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> o <ph id="ph2">&lt;paramref name="count" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> e <ph id="ph2">&lt;paramref name="count" /&gt;</ph> non identificano un intervallo valido in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The resulting number of characters is greater than the maximum number that can be returned as an int.</source>
          <target state="translated">Il numero di caratteri ottenuto è maggiore del numero massimo che può essere restituito come valore int.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Si è verificato un fallback. Per una spiegazione completa, vedere <bpt id="p1">[</bpt>Codifica dei caratteri in .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept></target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">-e-</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="T:System.Text.UTF7Encoding">
          <source>Decodes a sequence of bytes into a set of characters.</source>
          <target state="translated">Decodifica una sequenza di byte in un set di caratteri.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A pointer to the first byte to decode.</source>
          <target state="translated">Puntatore al primo byte da decodificare.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Numero di byte da decodificare.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A pointer to the location at which to start writing the resulting set of characters.</source>
          <target state="translated">Puntatore alla posizione in cui iniziare a scrivere il set di caratteri risultante.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">Numero massimo di caratteri da scrivere.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</source>
          <target state="translated">Decodifica una sequenza di byte a partire dal puntatore ai byte specificato in un set di caratteri archiviati a partire dal puntatore ai caratteri specificato.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The actual number of characters written at the location indicated by <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated">Numero effettivo di caratteri scritti nella posizione indicata da <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> to store the resulting characters, use <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare le dimensioni della matrice esatta richiesta dal <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> per archiviare i caratteri risultanti, utilizzare <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare la dimensione massima della matrice, l'applicazione deve utilizzare <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph> metodo consente in genere l'allocazione di memoria inferiore, mentre il <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> metodo in genere viene eseguito più velocemente.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">Dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">In questo caso, se la quantità di dati è talmente grande che deve essere la suddivisione in blocchi più piccoli, l'applicazione deve utilizzare il <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> o <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> fornito dal <ph id="ph3">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> (metodo) o <ph id="ph4">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> (metodo), rispettivamente.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> non fornisce il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>When invalid bytes are encountered, <ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> generally emits the invalid bytes.</source>
          <target state="translated">Quando vengono rilevati i byte non validi, <ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> generalmente emette i byte non validi.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>If a byte is larger than hexadecimal 0x7F, the byte value is zero-extended into a Unicode character, the result is stored in the <ph id="ph1">`chars`</ph> array, and any shift sequence is terminated.</source>
          <target state="translated">Se un byte è maggiore di 0x7F esadecimale, il valore di byte è esteso in base zero in un carattere Unicode, il risultato viene archiviato nel <ph id="ph1">`chars`</ph> matrice e da qualsiasi sequenza MAIUSC viene terminata.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>For example, if the byte to encode is hexadecimal 0x81, the resulting character is U+0081.</source>
          <target state="translated">Ad esempio, se il byte da codificare è l'esadecimale 0x81, il carattere risulta è U + 0081.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>For security reasons, your applications are recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">Per motivi di sicurezza, si consiglia di utilizzare <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, o <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> e attivare il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> o <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> is less than the resulting number of characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> è minore del numero di caratteri risultante.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Si è verificato un fallback. Per una spiegazione completa, vedere <bpt id="p1">[</bpt>Codifica dei caratteri in .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept></target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>-and-</source>
          <target state="translated">-e-</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">richiede l'attendibilità totale per il chiamante immediato.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">Matrice di byte contenente la sequenza di byte da decodificare.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">Indice del primo byte da decodificare.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Numero di byte da decodificare.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The character array to contain the resulting set of characters.</source>
          <target state="translated">Matrice di caratteri che deve contenere il set di caratteri risultante.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The index at which to start writing the resulting set of characters.</source>
          <target state="translated">Indice in corrispondenza del quale iniziare a scrivere il set di caratteri risultante.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Decodes a sequence of bytes from the specified byte array into the specified character array.</source>
          <target state="translated">Decodifica una sequenza di byte dalla matrice di byte specificata nella matrice di caratteri specificata.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The actual number of characters written into <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated">Numero effettivo di caratteri scritti in <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> to store the resulting characters, use <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare le dimensioni della matrice esatta richiesta dal <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> per archiviare i caratteri risultanti, utilizzare <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare la dimensione massima della matrice, l'applicazione deve utilizzare <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph> metodo consente in genere l'allocazione di memoria inferiore, mentre il <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> metodo in genere viene eseguito più velocemente.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">Dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">In questo caso, se la quantità di dati è talmente grande che deve essere la suddivisione in blocchi più piccoli, l'applicazione deve utilizzare il <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> o <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> fornito dal <ph id="ph3">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> (metodo) o <ph id="ph4">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> (metodo), rispettivamente.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> non fornisce il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>When invalid bytes are encountered, <ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> generally emits the invalid bytes.</source>
          <target state="translated">Quando vengono rilevati i byte non validi, <ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> generalmente emette i byte non validi.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>If a byte is larger than hexadecimal 0x7F, the byte value is zero-extended into a Unicode character, the result is stored in the <ph id="ph1">`chars`</ph> array, and any shift sequence is terminated.</source>
          <target state="translated">Se un byte è maggiore di 0x7F esadecimale, il valore di byte è esteso in base zero in un carattere Unicode, il risultato viene archiviato nel <ph id="ph1">`chars`</ph> matrice e da qualsiasi sequenza MAIUSC viene terminata.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>For example, if the byte to encode is hexadecimal 0x81, the resulting character is U+0081.</source>
          <target state="translated">Ad esempio, se il byte da codificare è l'esadecimale 0x81, il carattere risulta è U + 0081.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>For security reasons, your applications are recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">Per motivi di sicurezza, si consiglia di utilizzare <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, o <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> e attivare il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> method to decode a range of elements in a byte array and store the result in a character array.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> per decodificare un intervallo di elementi in una matrice di byte e archivia il risultato in una matrice di caratteri.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> o <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> o <ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteindex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteindex" /&gt;</ph> e <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> non identificano un intervallo valido in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> non è un indice valido in <ph id="ph2">&lt;paramref name="chars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="charIndex" /&gt;</ph> to the end of the array to accommodate the resulting characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> non dispone di sufficiente capacità da <ph id="ph2">&lt;paramref name="charIndex" /&gt;</ph> alla fine della matrice per contenere i caratteri risultanti.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Si è verificato un fallback. Per una spiegazione completa, vedere <bpt id="p1">[</bpt>Codifica dei caratteri in .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept></target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-and-</source>
          <target state="translated">-e-</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetDecoder">
          <source>Obtains a decoder that converts a UTF-7 encoded sequence of bytes into a sequence of Unicode characters.</source>
          <target state="translated">Ottiene un decodificatore in grado di convertire una sequenza di byte codificati UTF-7 in una sequenza di caratteri Unicode.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetDecoder">
          <source>A <ph id="ph1">&lt;see cref="T:System.Text.Decoder" /&gt;</ph> that converts a UTF-7 encoded sequence of bytes into a sequence of Unicode characters.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Decoder" /&gt;</ph> che converte una sequenza di byte codificati UTF-7 in una sequenza di caratteri Unicode.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetDecoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType&gt;</ph> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> method of this class.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType&gt;</ph> metodo converte blocchi sequenziali di byte in blocchi sequenziali di caratteri, in modo simile al <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> metodo di questa classe.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetDecoder">
          <source>However, a <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> maintains state information between calls so it can correctly decode byte sequences that span blocks.</source>
          <target state="translated">Tuttavia, un <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> mantiene informazioni sullo stato tra le chiamate in modo da poter decodificare correttamente le sequenze di byte che includono i blocchi.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetDecoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> anche mantiene i byte finali alla fine di blocchi di dati e i byte finali nella successiva operazione di decodifica.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetDecoder">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</source>
          <target state="translated">Pertanto, <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> sono utili per la trasmissione di rete e le operazioni di file, perché queste operazioni utilizzano spesso blocchi di dati anziché un flusso di dati completo.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetDecoder">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> method to obtain a decoder to convert the UTF-7 encoded bytes into a sequence of characters.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> per ottenere un decodificatore per la conversione di UTF-7 byte codificati in una sequenza di caratteri.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetEncoder">
          <source>Obtains an encoder that converts a sequence of Unicode characters into a UTF-7 encoded sequence of bytes.</source>
          <target state="translated">Ottiene un codificatore che riesce a convertire una sequenza di caratteri Unicode in una sequenza di byte codificati UTF-7.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetEncoder">
          <source>A <ph id="ph1">&lt;see cref="T:System.Text.Encoder" /&gt;</ph> that converts a sequence of Unicode characters into a UTF-7 encoded sequence of bytes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoder" /&gt;</ph> che converte una sequenza di byte codificati UTF-7 in una sequenza di caratteri Unicode.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetEncoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType&gt;</ph> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType&gt;</ph> metodo converte blocchi sequenziali di byte in blocchi sequenziali di caratteri, in modo simile al <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetEncoder">
          <source>However, a <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> maintains state information between calls so it can correctly decode byte sequences that span blocks.</source>
          <target state="translated">Tuttavia, un <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> mantiene informazioni sullo stato tra le chiamate in modo da poter decodificare correttamente le sequenze di byte che includono i blocchi.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetEncoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> anche mantiene i byte finali alla fine di blocchi di dati e i byte finali nella successiva operazione di decodifica.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetEncoder">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</source>
          <target state="translated">Pertanto, <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> sono utili per la trasmissione di rete e le operazioni di file, perché queste operazioni utilizzano spesso blocchi di dati anziché un flusso di dati completo.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetEncoder">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> method to obtain an encoder to convert a sequence of characters into a UTF-7 encoded sequence of bytes.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> sequenza di byte codificati per ottenere un codificatore per convertire una sequenza di caratteri in un UTF-7.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Text.UTF7Encoding" /&gt;</ph> object.</source>
          <target state="translated">Restituisce il codice hash per l'oggetto <ph id="ph1">&lt;see cref="T:System.Text.UTF7Encoding" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Codice hash di un intero con segno a 32 bit.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetHashCode">
          <source>The value returned by the <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetHashCode%2A&gt;</ph> method is not suitable for distinguishing one <ph id="ph2">&lt;xref:System.Text.UTF7Encoding&gt;</ph> object from another.</source>
          <target state="translated">Il valore restituito dal <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetHashCode%2A&gt;</ph> metodo non è adatto per distinguere un <ph id="ph2">&lt;xref:System.Text.UTF7Encoding&gt;</ph> oggetto da un altro.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetHashCode">
          <source>If your application needs a unique hash code, it should override the <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetHashCode%2A&gt;</ph> method.</source>
          <target state="translated">Se l'applicazione necessita di un codice hash univoco, è necessario eseguire l'override di <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetHashCode%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">Numero di caratteri da codificare.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>Calculates the maximum number of bytes produced by encoding the specified number of characters.</source>
          <target state="translated">Calcola il numero massimo di byte prodotti dalla codifica del numero di caratteri specificato.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>The maximum number of bytes produced by encoding the specified number of characters.</source>
          <target state="translated">Numero massimo di byte prodotti dalla codifica del numero di caratteri specificato.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare le dimensioni della matrice esatta richiesta dal <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph> per archiviare i byte risultanti, l'applicazione utilizza <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare la dimensione massima della matrice, l'applicazione deve utilizzare <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> metodo consente in genere l'allocazione di memoria inferiore, mentre il <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> metodo in genere viene eseguito più velocemente.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> is a worst-case number, including the worst case for the currently selected <ph id="ph2">&lt;xref:System.Text.EncoderFallback&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> è un numero caso peggiore, incluso il caso peggiore per l'oggetto attualmente selezionato <ph id="ph2">&lt;xref:System.Text.EncoderFallback&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>If a fallback is chosen with a potentially large string, <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> can return large values.</source>
          <target state="translated">Se si sceglie un fallback con una stringa potenzialmente grande, <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> può restituire valori di grandi dimensioni.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>In most cases, this method returns reasonable numbers for small strings.</source>
          <target state="translated">Nella maggior parte dei casi, questo metodo restituisce numeri opportuni per stringhe di piccole dimensioni.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</source>
          <target state="translated">Per le stringhe di grandi dimensioni, potrebbe essere necessario scegliere tra l'utilizzo di buffer molto grandi e rilevamento di errori nel raro caso che un buffer più ragionevole è stato superato.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>You might also want to consider a different approach using <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">È inoltre possibile utilizzare un approccio diverso <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetByteCount%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>While UTF-7 is very efficient at encoding ASCII data, one byte per character, it is extremely inefficient for other data.</source>
          <target state="translated">UTF-7 è molto efficiente per la codifica di dati ASCII, un byte per carattere, ma è poco efficiente per altri dati.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>As remarked above, <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> deals with a worst case.</source>
          <target state="translated">Come sottolineato in precedenza, <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> gestisce un caso peggiore.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>If the data to be encoded is largely ASCII, and especially if the ASCII characters cluster together, UTF-7 is significantly more efficient than the number returned by this method suggests.</source>
          <target state="translated">Se i dati da codificare in gran parte ASCII, e in particolare se raggruppati i caratteri ASCII, UTF-7 è significativamente più suggerisce efficiente rispetto al numero restituito da questo metodo.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> has no relation to <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> non ha alcuna relazione di <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>If your application needs a similar function to use with <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph>, it should use <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">Se l'applicazione necessita di una funzione simile da utilizzare con <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph>, è necessario utilizzare <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">`GetMaxByteCount(N)`</ph> is not necessarily the same value as <ph id="ph2">`N* GetMaxByteCount(1)`</ph>.</source>
          <target state="translated"><ph id="ph1">`GetMaxByteCount(N)`</ph> non è necessariamente lo stesso valore di <ph id="ph2">`N* GetMaxByteCount(1)`</ph>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> method to return the maximum number of bytes required to encode a specified number of characters.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph> per restituire il numero massimo di byte necessari per codificare un numero specificato di caratteri.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an int.</source>
          <target state="translated">Il numero di byte ottenuto è maggiore del numero massimo che può essere restituito come valore int.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Si è verificato un fallback. Per una spiegazione completa, vedere <bpt id="p1">[</bpt>Codifica dei caratteri in .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept></target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source>-and-</source>
          <target state="translated">-e-</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Numero di byte da decodificare.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source>Calculates the maximum number of characters produced by decoding the specified number of bytes.</source>
          <target state="translated">Calcola il numero massimo di caratteri prodotti dalla decodifica del numero di byte specificato.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source>The maximum number of characters produced by decoding the specified number of bytes.</source>
          <target state="translated">Numero massimo di caratteri prodotti dalla decodifica del numero di byte specificato.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> to store the resulting characters, the application uses <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare le dimensioni della matrice esatta richiesta dal <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetChars%2A&gt;</ph> per archiviare i caratteri risultanti, l'applicazione utilizza <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">Per calcolare la dimensione massima della matrice, l'applicazione deve utilizzare <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph> metodo consente in genere l'allocazione di memoria inferiore, mentre il <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> metodo in genere viene eseguito più velocemente.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> is a worst-case number, including the worst case for the currently selected <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> è un numero caso peggiore, incluso il caso peggiore per l'oggetto attualmente selezionato <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source>If a fallback is chosen with a potentially large string, <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> can return large values.</source>
          <target state="translated">Se si sceglie un fallback con una stringa potenzialmente grande, <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> può restituire valori di grandi dimensioni.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source>In most cases, this method returns reasonable numbers for small strings.</source>
          <target state="translated">Nella maggior parte dei casi, questo metodo restituisce numeri opportuni per stringhe di piccole dimensioni.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source>For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</source>
          <target state="translated">Per le stringhe di grandi dimensioni, potrebbe essere necessario scegliere tra l'utilizzo di buffer molto grandi e rilevamento di errori nel raro caso che un buffer più ragionevole è stato superato.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source>You might also want to consider a different approach using <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">È inoltre possibile utilizzare un approccio diverso <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetCharCount%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> has no relation to <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> non ha alcuna relazione di <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source>If your application needs a similar function to use with <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph>, it should use <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">Se l'applicazione necessita di una funzione simile da utilizzare con <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetBytes%2A&gt;</ph>, è necessario utilizzare <ph id="ph2">&lt;xref:System.Text.UTF7Encoding.GetMaxByteCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">`GetMaxCharCount(N)`</ph> is not necessarily the same value as <ph id="ph2">`N* GetMaxCharCount(1)`</ph>.</source>
          <target state="translated"><ph id="ph1">`GetMaxCharCount(N)`</ph> non è necessariamente lo stesso valore di <ph id="ph2">`N* GetMaxCharCount(1)`</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> method to return the maximum number of characters produced by decoding a specified number of bytes.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Text.UTF7Encoding.GetMaxCharCount%2A&gt;</ph> per restituire il numero massimo di caratteri prodotti dalla decodifica di un numero specificato di byte.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source>The resulting number of characters is greater than the maximum number that can be returned as an int.</source>
          <target state="translated">Il numero di caratteri ottenuto è maggiore del numero massimo che può essere restituito come valore int.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Si è verificato un fallback. Per una spiegazione completa, vedere <bpt id="p1">[</bpt>Codifica dei caratteri in .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept></target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source>-and-</source>
          <target state="translated">-e-</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">Matrice di byte contenente la sequenza di byte da decodificare.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">Indice del primo byte da decodificare.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Numero di byte da decodificare.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Decodes a range of bytes from a byte array into a string.</source>
          <target state="translated">Decodifica un intervallo di byte da una matrice di byte in una stringa.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the results of decoding the specified sequence of bytes.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> contenente i risultati di decodifica della sequenza di byte specificata.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">Dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">In questo caso, se la quantità di dati è talmente grande che deve essere la suddivisione in blocchi più piccoli, l'applicazione deve utilizzare il <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> o <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> fornito dal <ph id="ph3">&lt;xref:System.Text.UTF7Encoding.GetDecoder%2A&gt;</ph> (metodo) o <ph id="ph4">&lt;xref:System.Text.UTF7Encoding.GetEncoder%2A&gt;</ph> (metodo), rispettivamente.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> non fornisce il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>When invalid bytes are encountered, <ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> generally emits the invalid bytes.</source>
          <target state="translated">Quando vengono rilevati i byte non validi, <ph id="ph1">&lt;xref:System.Text.UTF7Encoding&gt;</ph> generalmente emette i byte non validi.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>If a byte is larger than hexadecimal 0x7F, the byte value is zero-extended into a Unicode character, the result is stored in the <ph id="ph1">`chars`</ph> array, and any shift sequence is terminated.</source>
          <target state="translated">Se un byte è maggiore di 0x7F esadecimale, il valore di byte è esteso in base zero in un carattere Unicode, il risultato viene archiviato nel <ph id="ph1">`chars`</ph> matrice e da qualsiasi sequenza MAIUSC viene terminata.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>For example, if the byte to encode is hexadecimal 0x81, the resulting character is U+0081.</source>
          <target state="translated">Ad esempio, se il byte da codificare è l'esadecimale 0x81, il carattere risulta è U + 0081.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>For security reasons, your applications are recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">Per motivi di sicurezza, si consiglia di utilizzare <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, o <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> e attivare il rilevamento errori.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The following code example encodes a string into an array of bytes, and then decodes the bytes back into a string.</source>
          <target state="translated">Esempio di codice seguente consente di codificare una stringa in una matrice di byte e quindi decodifica i byte in una stringa.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> o <ph id="ph2">&lt;paramref name="count" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> e <ph id="ph2">&lt;paramref name="count" /&gt;</ph> non indicano un intervallo valido in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">Si è verificato un fallback. Per una spiegazione completa, vedere <bpt id="p1">[</bpt>Codifica di caratteri in .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept></target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">-e-</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>