<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DecoderFallbackBuffer.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5334e4a94e0c09dca04227f373df6acb3a69c9b91.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">334e4a94e0c09dca04227f373df6acb3a69c9b91</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Provides a buffer that allows a fallback handler to return an alternate string to a decoder when it cannot decode an input byte sequence.</source>
          <target state="translated">Fornisce un buffer che consente a un gestore di fallback di restituire una stringa alternativa a un decodificatore quando non è in grado di decodificare una sequenza di byte di input.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</source>
          <target state="translated">Una codifica definisce un mapping tra un carattere Unicode e una sequenza di byte codificata.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>A decoding operation, which converts an input byte sequence to an output character, fails if no mapping is defined for a particular byte sequence.</source>
          <target state="translated">Un'operazione di decodifica, che converte una sequenza di byte di input in un carattere di output, non riesce se è definito alcun mapping per una sequenza di byte specifico.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</source>
          <target state="translated">.NET Framework fornisce un meccanismo, denominato fallback, se non è possibile eseguire una conversione di gestione degli errori.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>All decoder fallback handlers must implement the following:</source>
          <target state="translated">Tutti i gestori di fallback del decodificatore devono implementare le operazioni seguenti:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>A decoder fallback, which is represented by a class derived from the <ph id="ph1">&lt;xref:System.Text.DecoderFallback&gt;</ph> class.</source>
          <target state="translated">Un fallback del decodificatore, rappresentato da una classe derivata dalla <ph id="ph1">&lt;xref:System.Text.DecoderFallback&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>A decoder fallback buffer, which is represented by a type derived from the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> class that can return a string to the conversion operation.</source>
          <target state="translated">Un buffer di fallback del decodificatore, è rappresentato da un tipo derivato dalla <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> classe che può restituire una stringa per l'operazione di conversione.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Fallbacks can use three strategies to handle conversion failures:</source>
          <target state="translated">Fallback è possono utilizzare tre strategie per gestire gli errori di conversione:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Best-fit mapping.</source>
          <target state="translated">Fallback con mapping.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The decoder fallback buffer can return a string that represents a close approximation to the input byte sequence.</source>
          <target state="translated">Il buffer di fallback del decodificatore può restituire una stringa che rappresenta un'approssimazione molto vicina alla sequenza di byte di input.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The .NET Framework does not provide a public best-fit <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> implementation.</source>
          <target state="translated">.NET Framework non fornisce un mapping più appropriato pubblico <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> implementazione.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Replacement.</source>
          <target state="translated">Sostituzione.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The decoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a byte sequence could not be decoded.</source>
          <target state="translated">Il buffer di fallback del decodificatore può restituire una stringa, ad esempio un punto interrogativo ("?"), che indica che non è stato possibile decodificare una sequenza di byte.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>In the .NET Framework, the <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallbackBuffer&gt;</ph> classes provide a public replacement fallback buffer implementation.</source>
          <target state="translated">In .NET Framework, il <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> e <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallbackBuffer&gt;</ph> classi forniscono un'implementazione di buffer di fallback di sostituzione pubblica.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The constructor of the <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> class enables you to define the replacement string.</source>
          <target state="translated">Il costruttore del <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> classe consente di definire la stringa di sostituzione.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Exception.</source>
          <target state="translated">Eccezione.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> implementation throws an exception, which indicates that a byte sequence cannot be decoded, and terminates the decoding operation.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> implementazione genera un'eccezione, che indica che una sequenza di byte non può essere decodificata e termina l'operazione di decodifica.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>In this case, the fallback handler must provide a <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> implementation, although it does not return a string to the decoder.</source>
          <target state="translated">In questo caso, il gestore di fallback è necessario fornire un <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> implementazione, anche se non restituisce una stringa al decodificatore.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>In the .NET Framework, the <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> classes provide a public exception fallback implementation that throws a <ph id="ph3">&lt;xref:System.Text.DecoderFallbackException&gt;</ph> when a byte sequence cannot be decoded.</source>
          <target state="translated">In .NET Framework, il <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph> e <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> classi forniscono un'implementazione del fallback di eccezione pubblica che genera un <ph id="ph3">&lt;xref:System.Text.DecoderFallbackException&gt;</ph> quando una sequenza di byte non può essere decodificata.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The buffer in a <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> implementation represents the entire string to be returned to the decoder in response to a decoder fallback.</source>
          <target state="translated">Buffer in un <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> implementazione rappresenta l'intera stringa da restituire al decodificatore in risposta a un decodificatore fallback.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Generally, implementations also include state information, such as the index of the next character to return to the decoder and the number of remaining characters to be returned.</source>
          <target state="translated">In genere, le implementazioni includono anche le informazioni sullo stato, ad esempio l'indice del carattere successivo da restituire al decodificatore e il numero di caratteri rimanenti da restituire.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Because <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> is an abstract class, it requires derived classes to implement the following members at a minimum:</source>
          <target state="translated">Poiché <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> è una classe astratta, richiede alle classi derivate di implementare i membri seguenti almeno:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method, which is called by the decoder when it cannot decode a byte sequence.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> metodo, che viene chiamato dal decodificatore quando non può decodificare una sequenza di byte.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The decoder passes two pieces of information to the fallback buffer implementation: an array containing the bytes that could not be decoded and the index of the first byte in the input byte array.</source>
          <target state="translated">Il decodificatore passa due tipi di informazioni per l'implementazione del buffer di fallback: una matrice contenente i byte che non è stato possibile decodificare e l'indice del primo byte nella matrice di byte di input.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>In a decoder fallback exception handler, the exception is thrown in this method.</source>
          <target state="translated">In un gestore di fallback di eccezione del decodificatore, viene generata l'eccezione in questo metodo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Otherwise, the method returns <ph id="ph1">`true`</ph> if it provides a fallback, or <ph id="ph2">`false`</ph> if it does not.</source>
          <target state="translated">In caso contrario, il metodo restituisce <ph id="ph1">`true`</ph> se contiene un fallback, o <ph id="ph2">`false`</ph> in caso contrario.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> method, which is called repeatedly by the decoder if the <ph id="ph2">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> (metodo), che viene chiamato ripetutamente dal decodificatore se il <ph id="ph2">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> restituisce <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>In successive calls, the handler should return each character in its buffer.</source>
          <target state="translated">Nelle chiamate successive, il gestore deve restituire ogni carattere nel buffer.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>When it has returned all characters, it should return U+0000.</source>
          <target state="translated">Se ha restituito tutti i caratteri, deve restituire U + 0000.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>An exception fallback handler always returns U+0000.</source>
          <target state="translated">Un gestore di fallback di eccezione restituisce sempre U + 0000.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.MovePrevious%2A&gt;</ph> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.MovePrevious%2A&gt;</ph> metodo che tenta di spostare il puntatore alla posizione precedente nel buffer e indica se lo spostamento è riuscito.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>An exception handler always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Restituisce sempre un gestore di eccezioni <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> property, which indicates the number of remaining characters to be returned to the decoder.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> proprietà, che indica il numero di caratteri rimanenti da restituire al decodificatore.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>An exception fallback handler always returns zero.</source>
          <target state="translated">Un gestore di fallback di eccezione restituisce sempre zero.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>An input array of bytes.</source>
          <target state="translated">Matrice di byte di input.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>The index position of a byte in <bpt id="p1">&lt;c&gt;</bpt>bytesUnknown<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Posizione di indice di un byte in <bpt id="p1">&lt;c&gt;</bpt>bytesUnknown<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>When overridden in a derived class, prepares the fallback buffer to handle the specified input byte sequence.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, prepara il buffer di fallback alla gestione della sequenza di byte di input specificata.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the fallback buffer can process <ph id="ph2">&lt;paramref name="bytesUnknown" /&gt;</ph>; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the fallback buffer ignores <ph id="ph4">&lt;paramref name="bytesUnknown" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il buffer di fallback è in grado di elaborare <ph id="ph2">&lt;paramref name="bytesUnknown" /&gt;</ph>. <ph id="ph3">&lt;see langword="false" /&gt;</ph> se il buffer di fallback ignora <ph id="ph4">&lt;paramref name="bytesUnknown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType&gt;</ph> methods call <ph id="ph4">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> if they encounter an unknown input byte sequence that cannot be decoded.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType&gt;</ph>, e <ph id="ph3">&lt;xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType&gt;</ph> chiamata di metodi <ph id="ph4">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> se viene rilevata una sequenza di byte di input sconosciuto che non può essere decodificata.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>A return value of <ph id="ph1">`true`</ph> indicates that the fallback buffer can process the input byte sequence, which causes the calling method to call the <ph id="ph2">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> method to obtain each character of the fallback buffer.</source>
          <target state="translated">Valore restituito di <ph id="ph1">`true`</ph> indica che il buffer di fallback può elaborare la sequenza di byte di input, che determina la chiamata al metodo chiamare il <ph id="ph2">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> per ottenere ogni carattere nel buffer di fallback.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>Because it does not process individual bytes, the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method in an exception fallback handler throws an exception.</source>
          <target state="translated">Poiché non elabora i singoli byte, di <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> metodo in un gestore di fallback di eccezione viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>When overridden in a derived class, retrieves the next character in the fallback buffer.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, recupera il carattere successivo nel buffer di fallback.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>The next character in the fallback buffer.</source>
          <target state="translated">Carattere successivo nel buffer di fallback.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>A decoding operation calls the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method if the operation encounters an unknown byte sequence in the input.</source>
          <target state="translated">Chiama un'operazione di decodifica il <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> metodo se l'operazione rileva una sequenza di byte sconosciuta nell'input.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>If the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, a substitute string exists that can be inserted in the output instead of decoding the unknown input.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> restituisce <ph id="ph2">`true`</ph>, esiste una stringa di sostituzione che possono essere inseriti nell'output dell'input sconosciuto.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>The decoding operation calls the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> method repeatedly and obtains the substitute string one character at a time.</source>
          <target state="translated">Operazione di decodifica chiama il <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> metodo ripetutamente e ottiene la stringa di sostituzione di un carattere alla volta.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>When all characters in the fallback buffer have been returned to the decoder, the method should return U+0000.</source>
          <target state="translated">Quando tutti i caratteri nel buffer di fallback sono stati restituiti al decodificatore, il metodo deve restituire U + 0000.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>For an exception fallback handler, the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> method should return U+0000.</source>
          <target state="translated">Per un gestore di fallback di eccezione, il <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> metodo dovrebbe restituire U + 0000.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.MovePrevious">
          <source>When overridden in a derived class, causes the next call to the <ph id="ph1">&lt;see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /&gt;</ph> method to access the data buffer character position that is prior to the current character position.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, genera la chiamata successiva al metodo <ph id="ph1">&lt;see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /&gt;</ph> per accedere alla posizione del carattere del buffer di dati precedente al carattere corrente.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.MovePrevious">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /&gt;</ph> operation was successful; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'operazione <ph id="ph2">&lt;see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /&gt;</ph> ha esito positivo; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.MovePrevious">
          <source>An exception fallback handler should return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Deve restituire un gestore di fallback di eccezione <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Text.DecoderFallbackBuffer.Remaining">
          <source>When overridden in a derived class, gets the number of characters in the current <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph> object that remain to be processed.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, ottiene il numero di caratteri nell'oggetto <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph> corrente ancora da elaborare.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.DecoderFallbackBuffer.Remaining">
          <source>The number of characters in the current fallback buffer that have not yet been processed.</source>
          <target state="translated">Numero dei caratteri nel buffer di fallback corrente ancora da elaborare.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.DecoderFallbackBuffer.Remaining">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> if <ph id="ph3">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> is a nonzero value.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> restituisce <ph id="ph2">`true`</ph> se <ph id="ph3">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> è un valore diverso da zero.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.DecoderFallbackBuffer.Remaining">
          <source>For an exception fallback handler, the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> method should return zero.</source>
          <target state="translated">Per un gestore di fallback di eccezione, il <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> metodo deve restituire zero.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.Reset">
          <source>Initializes all data and state information pertaining to this fallback buffer.</source>
          <target state="translated">Inizializza tutti i dati e le informazioni sullo stato relativamente a questo buffer di fallback.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.Reset">
          <source>After calling the <ph id="ph1">&lt;see cref="M:System.Text.DecoderFallbackBuffer.Reset" /&gt;</ph> method, the <ph id="ph2">&lt;see cref="P:System.Text.DecoderFallbackBuffer.Remaining" /&gt;</ph> property should return 0, the <ph id="ph3">&lt;see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /&gt;</ph> method should return U+0000, and the <ph id="ph4">&lt;see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /&gt;</ph> method should return <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Dopo la chiamata di <ph id="ph1">&lt;see cref="M:System.Text.DecoderFallbackBuffer.Reset" /&gt;</ph> (metodo), il <ph id="ph2">&lt;see cref="P:System.Text.DecoderFallbackBuffer.Remaining" /&gt;</ph> proprietà deve restituire 0, il <ph id="ph3">&lt;see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /&gt;</ph> metodo dovrebbe restituire U + 0000 e <ph id="ph4">&lt;see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /&gt;</ph> metodo deve restituire <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>