<Type Name="EncoderReplacementFallbackBuffer" FullName="System.Text.EncoderReplacementFallbackBuffer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="75106d49060d3f91b490ff316e59ae15d3428149" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49147046" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EncoderReplacementFallbackBuffer : System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncoderReplacementFallbackBuffer extends System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderReplacementFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncoderReplacementFallbackBuffer&#xA;Inherits EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderReplacementFallbackBuffer sealed : System::Text::EncoderFallbackBuffer" />
  <TypeSignature Language="F#" Value="type EncoderReplacementFallbackBuffer = class&#xA;    inherit EncoderFallbackBuffer" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.EncoderFallbackBuffer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta una stringa di input sostitutiva utilizzata quando il carattere di input originale non può essere codificato. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Potrebbe non essere possibile convertire un carattere in una sequenza di byte codificata equivalenti se è presente alcuna codifica appropriato. Un motivo comune per una codifica per avere esito negativo è se l'operazione di conversione utilizza una tabella codici che non può rappresentare il carattere da codificare.  
  
 Se il carattere di input non può essere convertito in una sequenza di byte di output, un <xref:System.Text.EncoderReplacementFallback?displayProperty=nameWithType> oggetto fornisce una stringa di sostituzione che verrà sostituito con il carattere di input originale. La stringa di sostituzione inizializza il valore della <xref:System.Text.EncoderReplacementFallback> oggetto e il valore del <xref:System.Text.EncoderReplacementFallback> oggetto inizializza il valore di un <xref:System.Text.EncoderReplacementFallbackBuffer> oggetto. Il valore di un <xref:System.Text.EncoderReplacementFallbackBuffer> oggetto viene chiamato il buffer di fallback di sostituzione. L'operazione di conversione consente di codificare il buffer di fallback di sostituzione anziché il carattere di input originale, quindi continua a elaborare il resto dell'input.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderReplacementFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderReplacementFallbackBuffer (System.Text.EncoderReplacementFallback fallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.EncoderReplacementFallback fallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.#ctor(System.Text.EncoderReplacementFallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fallback As EncoderReplacementFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderReplacementFallbackBuffer(System::Text::EncoderReplacementFallback ^ fallback);" />
      <MemberSignature Language="F#" Value="new System.Text.EncoderReplacementFallbackBuffer : System.Text.EncoderReplacementFallback -&gt; System.Text.EncoderReplacementFallbackBuffer" Usage="new System.Text.EncoderReplacementFallbackBuffer fallback" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fallback" Type="System.Text.EncoderReplacementFallback" />
      </Parameters>
      <Docs>
        <param name="fallback">Un oggetto <see cref="T:System.Text.EncoderReplacementFallback" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.EncoderReplacementFallbackBuffer" /> utilizzando il valore di un oggetto <see cref="T:System.Text.EncoderReplacementFallback" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Prepara il buffer del fallback di sostituzione in modo da utilizzare la stringa di sostituzione corrente.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="override this.Fallback : char * int -&gt; bool" Usage="encoderReplacementFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown">Carattere di input. Questo parametro viene ignorato in questa operazione a meno che non venga generata un'eccezione.</param>
        <param name="index">Posizione di indice del carattere nel buffer di input. Il parametro viene ignorato in questa operazione.</param>
        <summary>Prepara il buffer del fallback di sostituzione in modo da utilizzare la stringa di sostituzione corrente.</summary>
        <returns>
          <see langword="true" /> se la stringa di sostituzione non è vuota. <see langword="false" /> se la stringa di sostituzione è vuota.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.Encoding.GetBytes%2A> e <xref:System.Text.Encoder.Convert%2A> chiamata di metodi <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> se riscontrano un carattere sconosciuto nell'input. Se il valore restituito di <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> viene `true`, il metodo chiamante può richiamare il <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A> per ottenere ogni carattere nel buffer del fallback di sostituzione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Questo metodo viene chiamato nuovamente prima che tutti i caratteri nel buffer del fallback di sostituzione vengano letti dal metodo <see cref="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="override this.Fallback : char * char * int -&gt; bool" Usage="encoderReplacementFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh">Surrogato alto della coppia di input.</param>
        <param name="charUnknownLow">Surrogato basso della coppia di input.</param>
        <param name="index">Posizione di indice della coppia di surrogati nel buffer di input.</param>
        <summary>Indica se utilizzare una stringa di sostituzione o ignorare la coppia di surrogati quando una coppia di surrogati di input non può essere codificata. I parametri specificano la coppia di surrogati e la posizione di indice della coppia di surrogati nell'input.</summary>
        <returns>
          <see langword="true" /> se la stringa di sostituzione non è vuota. <see langword="false" /> se la stringa di sostituzione è vuota.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.Encoding.GetBytes%2A> e <xref:System.Text.Encoder.Convert%2A> chiamata di metodi <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> se riscontrano un carattere sconosciuto nell'input. Se il valore restituito di <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> viene `true`, il metodo chiamante può richiamare il <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A> per ottenere ogni carattere nel buffer del fallback di sostituzione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Questo metodo viene chiamato prima che il metodo <see cref="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" /> completi la lettura di tutti caratteri della stringa di sostituzione.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore di <paramref name="charUnknownHigh" /> è minore di U+D800 o maggiore di U+D8FF.  
  
oppure 
Il valore di <paramref name="charUnknownLow" /> è minore di U+DC00 o maggiore di U+DFFF.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public override char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetNextChar();" />
      <MemberSignature Language="F#" Value="override this.GetNextChar : unit -&gt; char" Usage="encoderReplacementFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera il carattere successivo nel buffer del fallback di sostituzione.</summary>
        <returns>Carattere Unicode successivo nel buffer di fallback di sostituzione che può essere codificato dall'applicazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.Encoding.GetBytes%2A> e <xref:System.Text.Encoder.Convert%2A> chiamata di metodi <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> se riscontrano la coppia di surrogati sconosciuti o di un carattere nel relativo input. Se il valore restituito di <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> viene `true`, il metodo chiamante può richiamare <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A> per ottenere ogni carattere nel buffer del fallback di sostituzione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public override bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MovePrevious();" />
      <MemberSignature Language="F#" Value="override this.MovePrevious : unit -&gt; bool" Usage="encoderReplacementFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Genera la chiamata successiva al metodo <see cref="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" /> per accedere alla posizione del carattere nel buffer del fallback di sostituzione precedente alla posizione del carattere corrente.</summary>
        <returns>
          <see langword="true" /> se l'operazione <see cref="M:System.Text.EncoderReplacementFallbackBuffer.MovePrevious" /> ha esito positivo; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public override int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderReplacementFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderReplacementFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di caratteri ancora da elaborare nel buffer del fallback di sostituzione.</summary>
        <value>Numero dei caratteri nel buffer del fallback di sostituzione che non sono ancora stati elaborati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> restituzione del metodo `true` se il <xref:System.Text.EncoderReplacementFallbackBuffer.Remaining%2A> proprietà è diverso da zero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="encoderReplacementFallbackBuffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inizializza tutte le informazioni sullo stato interno e i dati in questa istanza di <see cref="T:System.Text.EncoderReplacementFallbackBuffer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Text.EncoderReplacementFallbackBuffer.Reset%2A> metodo ignora qualsiasi informazioni persistenti sullo stato e i dati che regolano la creazione di una stringa di sostituzione. Si verificano risultati imprevisti se l'operazione di codifica continua dopo il <xref:System.Text.EncoderReplacementFallbackBuffer.Reset%2A> metodo viene richiamato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>