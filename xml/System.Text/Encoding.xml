<Type Name="Encoding" FullName="System.Text.Encoding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fc6c88231eb62b9546d10e0ac34250b51c4b7e10" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Encoding : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Encoding extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Text.Encoding" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Encoding&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Encoding abstract : ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="190f2-101">Represents a character encoding.</span>
      <span class="sxs-lookup">
        <span data-stu-id="190f2-101">Represents a character encoding.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-102">La codifica è il processo di trasformazione di un insieme di caratteri Unicode in una sequenza di byte.</span><span class="sxs-lookup"><span data-stu-id="190f2-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="190f2-103">Al contrario, la decodifica è il processo di trasformazione di una sequenza di byte codificati in un set di caratteri Unicode.</span><span class="sxs-lookup"><span data-stu-id="190f2-103">In contrast, decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span> <span data-ttu-id="190f2-104">Per informazioni sui formati di trasformazione Unicode (UTF) e altre codifiche supportate da <xref:System.Text.Encoding>, vedere [codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="190f2-104">For information about the Unicode Transformation Formats (UTFs) and other encodings supported by <xref:System.Text.Encoding>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="190f2-105">Si noti che <xref:System.Text.Encoding> deve operare su caratteri Unicode anziché i dati binari arbitrari, ad esempio matrici di byte.</span><span class="sxs-lookup"><span data-stu-id="190f2-105">Note that <xref:System.Text.Encoding> is intended to operate on Unicode characters instead of arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="190f2-106">Se è necessario codificare dati binari arbitrari in testo, è necessario utilizzare un protocollo, ad esempio uuencode, verrà implementate da metodi quali <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="190f2-106">If you must encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="190f2-107">.NET Framework fornisce le implementazioni seguenti del <xref:System.Text.Encoding> classe per supportare le codifiche Unicode corrente e altre codifiche:</span><span class="sxs-lookup"><span data-stu-id="190f2-107">The .NET Framework provides the following implementations of the <xref:System.Text.Encoding> class to support current Unicode encodings and other encodings:</span></span>  
  
-   <span data-ttu-id="190f2-108"><xref:System.Text.ASCIIEncoding> codifica i caratteri Unicode come singoli caratteri ASCII a 7 bit.</span><span class="sxs-lookup"><span data-stu-id="190f2-108"><xref:System.Text.ASCIIEncoding> encodes Unicode characters as single 7-bit ASCII characters.</span></span> <span data-ttu-id="190f2-109">Questa codifica supporta solo valori dei caratteri compresi tra U + 0000 e U + 007F.</span><span class="sxs-lookup"><span data-stu-id="190f2-109">This encoding only supports character values between U+0000 and U+007F.</span></span> <span data-ttu-id="190f2-110">Tabella codici 20127.</span><span class="sxs-lookup"><span data-stu-id="190f2-110">Code page 20127.</span></span> <span data-ttu-id="190f2-111">Disponibile anche tramite il <xref:System.Text.Encoding.ASCII%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="190f2-111">Also available through the <xref:System.Text.Encoding.ASCII%2A> property.</span></span>  
  
-   <span data-ttu-id="190f2-112"><xref:System.Text.UTF7Encoding> codifica i caratteri Unicode utilizzando la codifica UTF-7.</span><span class="sxs-lookup"><span data-stu-id="190f2-112"><xref:System.Text.UTF7Encoding> encodes Unicode characters using the UTF-7 encoding.</span></span> <span data-ttu-id="190f2-113">Questa codifica supporta tutti i valori dei caratteri Unicode.</span><span class="sxs-lookup"><span data-stu-id="190f2-113">This encoding supports all Unicode character values.</span></span> <span data-ttu-id="190f2-114">Tabella codici 65000.</span><span class="sxs-lookup"><span data-stu-id="190f2-114">Code page 65000.</span></span> <span data-ttu-id="190f2-115">Disponibile anche tramite il <xref:System.Text.Encoding.UTF7%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="190f2-115">Also available through the <xref:System.Text.Encoding.UTF7%2A> property.</span></span>  
  
-   <span data-ttu-id="190f2-116"><xref:System.Text.UTF8Encoding> codifica i caratteri Unicode utilizzando la codifica UTF-8.</span><span class="sxs-lookup"><span data-stu-id="190f2-116"><xref:System.Text.UTF8Encoding> encodes Unicode characters using the UTF-8 encoding.</span></span> <span data-ttu-id="190f2-117">Questa codifica supporta tutti i valori dei caratteri Unicode.</span><span class="sxs-lookup"><span data-stu-id="190f2-117">This encoding supports all Unicode character values.</span></span> <span data-ttu-id="190f2-118">Tabella codici 65001.</span><span class="sxs-lookup"><span data-stu-id="190f2-118">Code page 65001.</span></span> <span data-ttu-id="190f2-119">Disponibile anche tramite il <xref:System.Text.Encoding.UTF8%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="190f2-119">Also available through the <xref:System.Text.Encoding.UTF8%2A> property.</span></span>  
  
-   <span data-ttu-id="190f2-120"><xref:System.Text.UnicodeEncoding> codifica i caratteri Unicode utilizzando la codifica UTF-16.</span><span class="sxs-lookup"><span data-stu-id="190f2-120"><xref:System.Text.UnicodeEncoding> encodes Unicode characters using the UTF-16 encoding.</span></span> <span data-ttu-id="190f2-121">Sono supportati sia ordini little-endian che big-endian byte.</span><span class="sxs-lookup"><span data-stu-id="190f2-121">Both little endian and big endian byte orders are supported.</span></span> <span data-ttu-id="190f2-122">Disponibile anche tramite il <xref:System.Text.Encoding.Unicode%2A> proprietà e <xref:System.Text.Encoding.BigEndianUnicode%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="190f2-122">Also available through the <xref:System.Text.Encoding.Unicode%2A> property and the <xref:System.Text.Encoding.BigEndianUnicode%2A> property.</span></span>  
  
-   <span data-ttu-id="190f2-123"><xref:System.Text.UTF32Encoding> codifica i caratteri Unicode utilizzando la codifica UTF-32.</span><span class="sxs-lookup"><span data-stu-id="190f2-123"><xref:System.Text.UTF32Encoding> encodes Unicode characters using the UTF-32 encoding.</span></span> <span data-ttu-id="190f2-124">Little endian (tabella codici 12000) sia dei byte big endian (tabella codici 12001) sono supportati gli ordini.</span><span class="sxs-lookup"><span data-stu-id="190f2-124">Both little endian (code page 12000) and big endian (code page 12001) byte orders are supported.</span></span> <span data-ttu-id="190f2-125">Disponibile anche tramite il <xref:System.Text.Encoding.UTF32%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="190f2-125">Also available through the <xref:System.Text.Encoding.UTF32%2A> property.</span></span>  
  
 <span data-ttu-id="190f2-126">La <xref:System.Text.Encoding> classe viene usata principalmente per la conversione tra codifiche diverse e Unicode.</span><span class="sxs-lookup"><span data-stu-id="190f2-126">The <xref:System.Text.Encoding> class is primarily intended to convert between different encodings and Unicode.</span></span> <span data-ttu-id="190f2-127">Spesso una delle classi derivate Unicode è la scelta corretta per l'app.</span><span class="sxs-lookup"><span data-stu-id="190f2-127">Often one of the derived Unicode classes is the correct choice for your app.</span></span>  
  
 <span data-ttu-id="190f2-128">Utilizzare il <xref:System.Text.Encoding.GetEncoding%2A> metodo per ottenere altre codifiche e chiamare il <xref:System.Text.Encoding.GetEncodings%2A> metodo per ottenere un elenco di tutte le codifiche.</span><span class="sxs-lookup"><span data-stu-id="190f2-128">Use the <xref:System.Text.Encoding.GetEncoding%2A> method to obtain other encodings, and call the <xref:System.Text.Encoding.GetEncodings%2A> method to get a list of all encodings.</span></span>  
  
 <span data-ttu-id="190f2-129">La tabella seguente elenca le codifiche supportate da .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="190f2-129">The following table lists the encodings supported by the .NET Framework.</span></span> <span data-ttu-id="190f2-130">Elenca numero di tabella codici del ogni codifica e i valori della codifica <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> e <xref:System.Text.EncodingInfo.DisplayName%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="190f2-130">It lists each encoding's code page number and the values of the encoding's <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> and <xref:System.Text.EncodingInfo.DisplayName%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="190f2-131">Un asterisco nell'ultima colonna indica che la tabella codici in modo nativo è supportata da .NET Framework, indipendentemente dalla piattaforma sottostante.</span><span class="sxs-lookup"><span data-stu-id="190f2-131">An asterisk in the last column indicates that the code page is natively supported by the .NET Framework, regardless of the underlying platform.</span></span> <span data-ttu-id="190f2-132">Si noti che le pagine il cui codice <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> proprietà corrisponde a uno standard internazionale non sono necessariamente conformi completamente con tale standard.</span><span class="sxs-lookup"><span data-stu-id="190f2-132">Note that code pages whose <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> property corresponds to an international standard do not necessarily comply in full with that standard.</span></span>  
  
|<span data-ttu-id="190f2-133">Tabella codici</span><span class="sxs-lookup"><span data-stu-id="190f2-133">Code page</span></span>|<span data-ttu-id="190f2-134">nome</span><span class="sxs-lookup"><span data-stu-id="190f2-134">Name</span></span>|<span data-ttu-id="190f2-135">Nome visualizzato</span><span class="sxs-lookup"><span data-stu-id="190f2-135">Display name</span></span>|<span data-ttu-id="190f2-136">Supporto di .NET framework</span><span class="sxs-lookup"><span data-stu-id="190f2-136">.NET Framework support</span></span>|  
|---------------|----------|------------------|----------------------------|  
|<span data-ttu-id="190f2-137">37</span><span class="sxs-lookup"><span data-stu-id="190f2-137">37</span></span>|<span data-ttu-id="190f2-138">IBM037</span><span class="sxs-lookup"><span data-stu-id="190f2-138">IBM037</span></span>|<span data-ttu-id="190f2-139">IBM EBCDIC (US-Canada)</span><span class="sxs-lookup"><span data-stu-id="190f2-139">IBM EBCDIC (US-Canada)</span></span>||  
|<span data-ttu-id="190f2-140">437</span><span class="sxs-lookup"><span data-stu-id="190f2-140">437</span></span>|<span data-ttu-id="190f2-141">IBM437</span><span class="sxs-lookup"><span data-stu-id="190f2-141">IBM437</span></span>|<span data-ttu-id="190f2-142">Stati Uniti OEM</span><span class="sxs-lookup"><span data-stu-id="190f2-142">OEM United States</span></span>||  
|<span data-ttu-id="190f2-143">500</span><span class="sxs-lookup"><span data-stu-id="190f2-143">500</span></span>|<span data-ttu-id="190f2-144">IBM500</span><span class="sxs-lookup"><span data-stu-id="190f2-144">IBM500</span></span>|<span data-ttu-id="190f2-145">IBM EBCDIC (internazionale)</span><span class="sxs-lookup"><span data-stu-id="190f2-145">IBM EBCDIC (International)</span></span>||  
|<span data-ttu-id="190f2-146">708</span><span class="sxs-lookup"><span data-stu-id="190f2-146">708</span></span>|<span data-ttu-id="190f2-147">ASMO-708</span><span class="sxs-lookup"><span data-stu-id="190f2-147">ASMO-708</span></span>|<span data-ttu-id="190f2-148">Arabo (ASMO 708)</span><span class="sxs-lookup"><span data-stu-id="190f2-148">Arabic (ASMO 708)</span></span>||  
|<span data-ttu-id="190f2-149">720</span><span class="sxs-lookup"><span data-stu-id="190f2-149">720</span></span>|<span data-ttu-id="190f2-150">DOS-720</span><span class="sxs-lookup"><span data-stu-id="190f2-150">DOS-720</span></span>|<span data-ttu-id="190f2-151">Arabo (DOS)</span><span class="sxs-lookup"><span data-stu-id="190f2-151">Arabic (DOS)</span></span>||  
|<span data-ttu-id="190f2-152">737</span><span class="sxs-lookup"><span data-stu-id="190f2-152">737</span></span>|<span data-ttu-id="190f2-153">ibm737</span><span class="sxs-lookup"><span data-stu-id="190f2-153">ibm737</span></span>|<span data-ttu-id="190f2-154">Greco (DOS)</span><span class="sxs-lookup"><span data-stu-id="190f2-154">Greek (DOS)</span></span>||  
|<span data-ttu-id="190f2-155">775</span><span class="sxs-lookup"><span data-stu-id="190f2-155">775</span></span>|<span data-ttu-id="190f2-156">ibm775</span><span class="sxs-lookup"><span data-stu-id="190f2-156">ibm775</span></span>|<span data-ttu-id="190f2-157">Baltic (DOS)</span><span class="sxs-lookup"><span data-stu-id="190f2-157">Baltic (DOS)</span></span>||  
|<span data-ttu-id="190f2-158">850</span><span class="sxs-lookup"><span data-stu-id="190f2-158">850</span></span>|<span data-ttu-id="190f2-159">ibm850</span><span class="sxs-lookup"><span data-stu-id="190f2-159">ibm850</span></span>|<span data-ttu-id="190f2-160">Europa occidentale (DOS)</span><span class="sxs-lookup"><span data-stu-id="190f2-160">Western European (DOS)</span></span>||  
|<span data-ttu-id="190f2-161">852</span><span class="sxs-lookup"><span data-stu-id="190f2-161">852</span></span>|<span data-ttu-id="190f2-162">ibm852</span><span class="sxs-lookup"><span data-stu-id="190f2-162">ibm852</span></span>|<span data-ttu-id="190f2-163">Europa centrale (DOS)</span><span class="sxs-lookup"><span data-stu-id="190f2-163">Central European (DOS)</span></span>||  
|<span data-ttu-id="190f2-164">855</span><span class="sxs-lookup"><span data-stu-id="190f2-164">855</span></span>|<span data-ttu-id="190f2-165">IBM855</span><span class="sxs-lookup"><span data-stu-id="190f2-165">IBM855</span></span>|<span data-ttu-id="190f2-166">OEM Cirillico</span><span class="sxs-lookup"><span data-stu-id="190f2-166">OEM Cyrillic</span></span>||  
|<span data-ttu-id="190f2-167">857</span><span class="sxs-lookup"><span data-stu-id="190f2-167">857</span></span>|<span data-ttu-id="190f2-168">ibm857</span><span class="sxs-lookup"><span data-stu-id="190f2-168">ibm857</span></span>|<span data-ttu-id="190f2-169">Turco (DOS)</span><span class="sxs-lookup"><span data-stu-id="190f2-169">Turkish (DOS)</span></span>||  
|<span data-ttu-id="190f2-170">858</span><span class="sxs-lookup"><span data-stu-id="190f2-170">858</span></span>|<span data-ttu-id="190f2-171">IBM00858</span><span class="sxs-lookup"><span data-stu-id="190f2-171">IBM00858</span></span>|<span data-ttu-id="190f2-172">OEM latino multilingue I</span><span class="sxs-lookup"><span data-stu-id="190f2-172">OEM Multilingual Latin I</span></span>||  
|<span data-ttu-id="190f2-173">860</span><span class="sxs-lookup"><span data-stu-id="190f2-173">860</span></span>|<span data-ttu-id="190f2-174">IBM860</span><span class="sxs-lookup"><span data-stu-id="190f2-174">IBM860</span></span>|<span data-ttu-id="190f2-175">Portoghese (DOS)</span><span class="sxs-lookup"><span data-stu-id="190f2-175">Portuguese (DOS)</span></span>||  
|<span data-ttu-id="190f2-176">861</span><span class="sxs-lookup"><span data-stu-id="190f2-176">861</span></span>|<span data-ttu-id="190f2-177">ibm861</span><span class="sxs-lookup"><span data-stu-id="190f2-177">ibm861</span></span>|<span data-ttu-id="190f2-178">Islandese (DOS)</span><span class="sxs-lookup"><span data-stu-id="190f2-178">Icelandic (DOS)</span></span>||  
|<span data-ttu-id="190f2-179">862</span><span class="sxs-lookup"><span data-stu-id="190f2-179">862</span></span>|<span data-ttu-id="190f2-180">DOS-862</span><span class="sxs-lookup"><span data-stu-id="190f2-180">DOS-862</span></span>|<span data-ttu-id="190f2-181">Ebraico (DOS)</span><span class="sxs-lookup"><span data-stu-id="190f2-181">Hebrew (DOS)</span></span>||  
|<span data-ttu-id="190f2-182">863</span><span class="sxs-lookup"><span data-stu-id="190f2-182">863</span></span>|<span data-ttu-id="190f2-183">IBM863</span><span class="sxs-lookup"><span data-stu-id="190f2-183">IBM863</span></span>|<span data-ttu-id="190f2-184">Francese canadese (DOS)</span><span class="sxs-lookup"><span data-stu-id="190f2-184">French Canadian (DOS)</span></span>||  
|<span data-ttu-id="190f2-185">864</span><span class="sxs-lookup"><span data-stu-id="190f2-185">864</span></span>|<span data-ttu-id="190f2-186">IBM864</span><span class="sxs-lookup"><span data-stu-id="190f2-186">IBM864</span></span>|<span data-ttu-id="190f2-187">Arabic (864)</span><span class="sxs-lookup"><span data-stu-id="190f2-187">Arabic (864)</span></span>||  
|<span data-ttu-id="190f2-188">865</span><span class="sxs-lookup"><span data-stu-id="190f2-188">865</span></span>|<span data-ttu-id="190f2-189">IBM865</span><span class="sxs-lookup"><span data-stu-id="190f2-189">IBM865</span></span>|<span data-ttu-id="190f2-190">Nordici (DOS)</span><span class="sxs-lookup"><span data-stu-id="190f2-190">Nordic (DOS)</span></span>||  
|<span data-ttu-id="190f2-191">866</span><span class="sxs-lookup"><span data-stu-id="190f2-191">866</span></span>|<span data-ttu-id="190f2-192">cp866</span><span class="sxs-lookup"><span data-stu-id="190f2-192">cp866</span></span>|<span data-ttu-id="190f2-193">Cirillico (DOS)</span><span class="sxs-lookup"><span data-stu-id="190f2-193">Cyrillic (DOS)</span></span>||  
|<span data-ttu-id="190f2-194">869</span><span class="sxs-lookup"><span data-stu-id="190f2-194">869</span></span>|<span data-ttu-id="190f2-195">ibm869</span><span class="sxs-lookup"><span data-stu-id="190f2-195">ibm869</span></span>|<span data-ttu-id="190f2-196">Greco, moderno (DOS)</span><span class="sxs-lookup"><span data-stu-id="190f2-196">Greek, Modern (DOS)</span></span>||  
|<span data-ttu-id="190f2-197">870</span><span class="sxs-lookup"><span data-stu-id="190f2-197">870</span></span>|<span data-ttu-id="190f2-198">IBM870</span><span class="sxs-lookup"><span data-stu-id="190f2-198">IBM870</span></span>|<span data-ttu-id="190f2-199">IBM EBCDIC (alfabeto latino multilingue-2)</span><span class="sxs-lookup"><span data-stu-id="190f2-199">IBM EBCDIC (Multilingual Latin-2)</span></span>||  
|<span data-ttu-id="190f2-200">874</span><span class="sxs-lookup"><span data-stu-id="190f2-200">874</span></span>|<span data-ttu-id="190f2-201">windows-874</span><span class="sxs-lookup"><span data-stu-id="190f2-201">windows-874</span></span>|<span data-ttu-id="190f2-202">Thai (Windows)</span><span class="sxs-lookup"><span data-stu-id="190f2-202">Thai (Windows)</span></span>||  
|<span data-ttu-id="190f2-203">875</span><span class="sxs-lookup"><span data-stu-id="190f2-203">875</span></span>|<span data-ttu-id="190f2-204">cp875</span><span class="sxs-lookup"><span data-stu-id="190f2-204">cp875</span></span>|<span data-ttu-id="190f2-205">IBM EBCDIC (Greco moderno)</span><span class="sxs-lookup"><span data-stu-id="190f2-205">IBM EBCDIC (Greek Modern)</span></span>||  
|<span data-ttu-id="190f2-206">932</span><span class="sxs-lookup"><span data-stu-id="190f2-206">932</span></span>|<span data-ttu-id="190f2-207">shift_jis</span><span class="sxs-lookup"><span data-stu-id="190f2-207">shift_jis</span></span>|<span data-ttu-id="190f2-208">Giapponese Shift-JIS)</span><span class="sxs-lookup"><span data-stu-id="190f2-208">Japanese (Shift-JIS)</span></span>||  
|<span data-ttu-id="190f2-209">936</span><span class="sxs-lookup"><span data-stu-id="190f2-209">936</span></span>|<span data-ttu-id="190f2-210">gb2312</span><span class="sxs-lookup"><span data-stu-id="190f2-210">gb2312</span></span>|<span data-ttu-id="190f2-211">Cinese semplificato (GB2312)</span><span class="sxs-lookup"><span data-stu-id="190f2-211">Chinese Simplified (GB2312)</span></span>|<span data-ttu-id="190f2-212">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-212">✓</span></span>|  
|<span data-ttu-id="190f2-213">949</span><span class="sxs-lookup"><span data-stu-id="190f2-213">949</span></span>|<span data-ttu-id="190f2-214">ks_c_5601-1987</span><span class="sxs-lookup"><span data-stu-id="190f2-214">ks_c_5601-1987</span></span>|<span data-ttu-id="190f2-215">Coreano</span><span class="sxs-lookup"><span data-stu-id="190f2-215">Korean</span></span>||  
|<span data-ttu-id="190f2-216">950</span><span class="sxs-lookup"><span data-stu-id="190f2-216">950</span></span>|<span data-ttu-id="190f2-217">big5</span><span class="sxs-lookup"><span data-stu-id="190f2-217">big5</span></span>|<span data-ttu-id="190f2-218">Cinese tradizionale (Big5)</span><span class="sxs-lookup"><span data-stu-id="190f2-218">Chinese Traditional (Big5)</span></span>||  
|<span data-ttu-id="190f2-219">1026</span><span class="sxs-lookup"><span data-stu-id="190f2-219">1026</span></span>|<span data-ttu-id="190f2-220">IBM1026</span><span class="sxs-lookup"><span data-stu-id="190f2-220">IBM1026</span></span>|<span data-ttu-id="190f2-221">IBM EBCDIC (turco Latin-5)</span><span class="sxs-lookup"><span data-stu-id="190f2-221">IBM EBCDIC (Turkish Latin-5)</span></span>||  
|<span data-ttu-id="190f2-222">1047</span><span class="sxs-lookup"><span data-stu-id="190f2-222">1047</span></span>|<span data-ttu-id="190f2-223">IBM01047</span><span class="sxs-lookup"><span data-stu-id="190f2-223">IBM01047</span></span>|<span data-ttu-id="190f2-224">IBM latino 1</span><span class="sxs-lookup"><span data-stu-id="190f2-224">IBM Latin-1</span></span>||  
|<span data-ttu-id="190f2-225">1140</span><span class="sxs-lookup"><span data-stu-id="190f2-225">1140</span></span>|<span data-ttu-id="190f2-226">IBM01140</span><span class="sxs-lookup"><span data-stu-id="190f2-226">IBM01140</span></span>|<span data-ttu-id="190f2-227">IBM EBCDIC (US-Canada-Euro)</span><span class="sxs-lookup"><span data-stu-id="190f2-227">IBM EBCDIC (US-Canada-Euro)</span></span>||  
|<span data-ttu-id="190f2-228">1141</span><span class="sxs-lookup"><span data-stu-id="190f2-228">1141</span></span>|<span data-ttu-id="190f2-229">IBM01141</span><span class="sxs-lookup"><span data-stu-id="190f2-229">IBM01141</span></span>|<span data-ttu-id="190f2-230">IBM EBCDIC (Germania-Euro)</span><span class="sxs-lookup"><span data-stu-id="190f2-230">IBM EBCDIC (Germany-Euro)</span></span>||  
|<span data-ttu-id="190f2-231">1142</span><span class="sxs-lookup"><span data-stu-id="190f2-231">1142</span></span>|<span data-ttu-id="190f2-232">IBM01142</span><span class="sxs-lookup"><span data-stu-id="190f2-232">IBM01142</span></span>|<span data-ttu-id="190f2-233">IBM EBCDIC (Danimarca-Norvegia-Euro)</span><span class="sxs-lookup"><span data-stu-id="190f2-233">IBM EBCDIC (Denmark-Norway-Euro)</span></span>||  
|<span data-ttu-id="190f2-234">1143</span><span class="sxs-lookup"><span data-stu-id="190f2-234">1143</span></span>|<span data-ttu-id="190f2-235">IBM01143</span><span class="sxs-lookup"><span data-stu-id="190f2-235">IBM01143</span></span>|<span data-ttu-id="190f2-236">IBM EBCDIC (Finlandia-Svezia-Euro)</span><span class="sxs-lookup"><span data-stu-id="190f2-236">IBM EBCDIC (Finland-Sweden-Euro)</span></span>||  
|<span data-ttu-id="190f2-237">1144</span><span class="sxs-lookup"><span data-stu-id="190f2-237">1144</span></span>|<span data-ttu-id="190f2-238">IBM01144</span><span class="sxs-lookup"><span data-stu-id="190f2-238">IBM01144</span></span>|<span data-ttu-id="190f2-239">IBM EBCDIC (Euro Italia)</span><span class="sxs-lookup"><span data-stu-id="190f2-239">IBM EBCDIC (Italy-Euro)</span></span>||  
|<span data-ttu-id="190f2-240">1145</span><span class="sxs-lookup"><span data-stu-id="190f2-240">1145</span></span>|<span data-ttu-id="190f2-241">IBM01145</span><span class="sxs-lookup"><span data-stu-id="190f2-241">IBM01145</span></span>|<span data-ttu-id="190f2-242">IBM EBCDIC (Spagna-Euro)</span><span class="sxs-lookup"><span data-stu-id="190f2-242">IBM EBCDIC (Spain-Euro)</span></span>||  
|<span data-ttu-id="190f2-243">1146</span><span class="sxs-lookup"><span data-stu-id="190f2-243">1146</span></span>|<span data-ttu-id="190f2-244">IBM01146</span><span class="sxs-lookup"><span data-stu-id="190f2-244">IBM01146</span></span>|<span data-ttu-id="190f2-245">IBM EBCDIC (Regno Unito-Euro)</span><span class="sxs-lookup"><span data-stu-id="190f2-245">IBM EBCDIC (UK-Euro)</span></span>||  
|<span data-ttu-id="190f2-246">1147</span><span class="sxs-lookup"><span data-stu-id="190f2-246">1147</span></span>|<span data-ttu-id="190f2-247">IBM01147</span><span class="sxs-lookup"><span data-stu-id="190f2-247">IBM01147</span></span>|<span data-ttu-id="190f2-248">IBM EBCDIC (Francia Euro)</span><span class="sxs-lookup"><span data-stu-id="190f2-248">IBM EBCDIC (France-Euro)</span></span>||  
|<span data-ttu-id="190f2-249">1148</span><span class="sxs-lookup"><span data-stu-id="190f2-249">1148</span></span>|<span data-ttu-id="190f2-250">IBM01148</span><span class="sxs-lookup"><span data-stu-id="190f2-250">IBM01148</span></span>|<span data-ttu-id="190f2-251">IBM EBCDIC (International Euro)</span><span class="sxs-lookup"><span data-stu-id="190f2-251">IBM EBCDIC (International-Euro)</span></span>||  
|<span data-ttu-id="190f2-252">1149</span><span class="sxs-lookup"><span data-stu-id="190f2-252">1149</span></span>|<span data-ttu-id="190f2-253">IBM01149</span><span class="sxs-lookup"><span data-stu-id="190f2-253">IBM01149</span></span>|<span data-ttu-id="190f2-254">IBM EBCDIC (Islandese-Euro)</span><span class="sxs-lookup"><span data-stu-id="190f2-254">IBM EBCDIC (Icelandic-Euro)</span></span>||  
|<span data-ttu-id="190f2-255">1200</span><span class="sxs-lookup"><span data-stu-id="190f2-255">1200</span></span>|<span data-ttu-id="190f2-256">UTF-16</span><span class="sxs-lookup"><span data-stu-id="190f2-256">utf-16</span></span>|<span data-ttu-id="190f2-257">Unicode</span><span class="sxs-lookup"><span data-stu-id="190f2-257">Unicode</span></span>|<span data-ttu-id="190f2-258">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-258">✓</span></span>|  
|<span data-ttu-id="190f2-259">1201</span><span class="sxs-lookup"><span data-stu-id="190f2-259">1201</span></span>|<span data-ttu-id="190f2-260">unicodeFFFE</span><span class="sxs-lookup"><span data-stu-id="190f2-260">unicodeFFFE</span></span>|<span data-ttu-id="190f2-261">Unicode (Big endian)</span><span class="sxs-lookup"><span data-stu-id="190f2-261">Unicode (Big endian)</span></span>|<span data-ttu-id="190f2-262">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-262">✓</span></span>|  
|<span data-ttu-id="190f2-263">1250</span><span class="sxs-lookup"><span data-stu-id="190f2-263">1250</span></span>|<span data-ttu-id="190f2-264">windows-1250</span><span class="sxs-lookup"><span data-stu-id="190f2-264">windows-1250</span></span>|<span data-ttu-id="190f2-265">Europa centrale (Windows)</span><span class="sxs-lookup"><span data-stu-id="190f2-265">Central European (Windows)</span></span>||  
|<span data-ttu-id="190f2-266">1251</span><span class="sxs-lookup"><span data-stu-id="190f2-266">1251</span></span>|<span data-ttu-id="190f2-267">windows-1251</span><span class="sxs-lookup"><span data-stu-id="190f2-267">windows-1251</span></span>|<span data-ttu-id="190f2-268">Cirillico (Windows)</span><span class="sxs-lookup"><span data-stu-id="190f2-268">Cyrillic (Windows)</span></span>||  
|<span data-ttu-id="190f2-269">1252</span><span class="sxs-lookup"><span data-stu-id="190f2-269">1252</span></span>|<span data-ttu-id="190f2-270">Windows-1252</span><span class="sxs-lookup"><span data-stu-id="190f2-270">Windows-1252</span></span>|<span data-ttu-id="190f2-271">Europa occidentale (Windows)</span><span class="sxs-lookup"><span data-stu-id="190f2-271">Western European (Windows)</span></span>|<span data-ttu-id="190f2-272">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-272">✓</span></span>|  
|<span data-ttu-id="190f2-273">1253</span><span class="sxs-lookup"><span data-stu-id="190f2-273">1253</span></span>|<span data-ttu-id="190f2-274">windows-1253</span><span class="sxs-lookup"><span data-stu-id="190f2-274">windows-1253</span></span>|<span data-ttu-id="190f2-275">Greco (Windows)</span><span class="sxs-lookup"><span data-stu-id="190f2-275">Greek (Windows)</span></span>||  
|<span data-ttu-id="190f2-276">1254</span><span class="sxs-lookup"><span data-stu-id="190f2-276">1254</span></span>|<span data-ttu-id="190f2-277">windows-1254</span><span class="sxs-lookup"><span data-stu-id="190f2-277">windows-1254</span></span>|<span data-ttu-id="190f2-278">Turco (Windows)</span><span class="sxs-lookup"><span data-stu-id="190f2-278">Turkish (Windows)</span></span>||  
|<span data-ttu-id="190f2-279">1255</span><span class="sxs-lookup"><span data-stu-id="190f2-279">1255</span></span>|<span data-ttu-id="190f2-280">windows-1255</span><span class="sxs-lookup"><span data-stu-id="190f2-280">windows-1255</span></span>|<span data-ttu-id="190f2-281">Ebraico (Windows)</span><span class="sxs-lookup"><span data-stu-id="190f2-281">Hebrew (Windows)</span></span>||  
|<span data-ttu-id="190f2-282">1256</span><span class="sxs-lookup"><span data-stu-id="190f2-282">1256</span></span>|<span data-ttu-id="190f2-283">windows-1256</span><span class="sxs-lookup"><span data-stu-id="190f2-283">windows-1256</span></span>|<span data-ttu-id="190f2-284">Arabo (Windows)</span><span class="sxs-lookup"><span data-stu-id="190f2-284">Arabic (Windows)</span></span>||  
|<span data-ttu-id="190f2-285">1257</span><span class="sxs-lookup"><span data-stu-id="190f2-285">1257</span></span>|<span data-ttu-id="190f2-286">windows-1257</span><span class="sxs-lookup"><span data-stu-id="190f2-286">windows-1257</span></span>|<span data-ttu-id="190f2-287">Baltico (Windows)</span><span class="sxs-lookup"><span data-stu-id="190f2-287">Baltic (Windows)</span></span>||  
|<span data-ttu-id="190f2-288">1258</span><span class="sxs-lookup"><span data-stu-id="190f2-288">1258</span></span>|<span data-ttu-id="190f2-289">windows-1258</span><span class="sxs-lookup"><span data-stu-id="190f2-289">windows-1258</span></span>|<span data-ttu-id="190f2-290">Vietnamita (Windows)</span><span class="sxs-lookup"><span data-stu-id="190f2-290">Vietnamese (Windows)</span></span>||  
|<span data-ttu-id="190f2-291">1361</span><span class="sxs-lookup"><span data-stu-id="190f2-291">1361</span></span>|<span data-ttu-id="190f2-292">Johab</span><span class="sxs-lookup"><span data-stu-id="190f2-292">Johab</span></span>|<span data-ttu-id="190f2-293">Coreano (Johab)</span><span class="sxs-lookup"><span data-stu-id="190f2-293">Korean (Johab)</span></span>||  
|<span data-ttu-id="190f2-294">10000</span><span class="sxs-lookup"><span data-stu-id="190f2-294">10000</span></span>|<span data-ttu-id="190f2-295">Macintosh</span><span class="sxs-lookup"><span data-stu-id="190f2-295">macintosh</span></span>|<span data-ttu-id="190f2-296">Europa occidentale (Mac)</span><span class="sxs-lookup"><span data-stu-id="190f2-296">Western European (Mac)</span></span>||  
|<span data-ttu-id="190f2-297">10001</span><span class="sxs-lookup"><span data-stu-id="190f2-297">10001</span></span>|<span data-ttu-id="190f2-298">x-mac-giapponese</span><span class="sxs-lookup"><span data-stu-id="190f2-298">x-mac-japanese</span></span>|<span data-ttu-id="190f2-299">Giapponese (Mac)</span><span class="sxs-lookup"><span data-stu-id="190f2-299">Japanese (Mac)</span></span>||  
|<span data-ttu-id="190f2-300">10002</span><span class="sxs-lookup"><span data-stu-id="190f2-300">10002</span></span>|<span data-ttu-id="190f2-301">x-mac-chinesetrad</span><span class="sxs-lookup"><span data-stu-id="190f2-301">x-mac-chinesetrad</span></span>|<span data-ttu-id="190f2-302">Cinese tradizionale (Mac)</span><span class="sxs-lookup"><span data-stu-id="190f2-302">Chinese Traditional (Mac)</span></span>||  
|<span data-ttu-id="190f2-303">10003</span><span class="sxs-lookup"><span data-stu-id="190f2-303">10003</span></span>|<span data-ttu-id="190f2-304">mac-x-coreano</span><span class="sxs-lookup"><span data-stu-id="190f2-304">x-mac-korean</span></span>|<span data-ttu-id="190f2-305">Coreano (Mac)</span><span class="sxs-lookup"><span data-stu-id="190f2-305">Korean (Mac)</span></span>|<span data-ttu-id="190f2-306">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-306">✓</span></span>|  
|<span data-ttu-id="190f2-307">10004</span><span class="sxs-lookup"><span data-stu-id="190f2-307">10004</span></span>|<span data-ttu-id="190f2-308">x-mac-arabo</span><span class="sxs-lookup"><span data-stu-id="190f2-308">x-mac-arabic</span></span>|<span data-ttu-id="190f2-309">Arabo (Mac)</span><span class="sxs-lookup"><span data-stu-id="190f2-309">Arabic (Mac)</span></span>||  
|<span data-ttu-id="190f2-310">10005</span><span class="sxs-lookup"><span data-stu-id="190f2-310">10005</span></span>|<span data-ttu-id="190f2-311">x-mac-ebraico</span><span class="sxs-lookup"><span data-stu-id="190f2-311">x-mac-hebrew</span></span>|<span data-ttu-id="190f2-312">Ebraico (Mac)</span><span class="sxs-lookup"><span data-stu-id="190f2-312">Hebrew (Mac)</span></span>||  
|<span data-ttu-id="190f2-313">10006</span><span class="sxs-lookup"><span data-stu-id="190f2-313">10006</span></span>|<span data-ttu-id="190f2-314">Greco-x-mac</span><span class="sxs-lookup"><span data-stu-id="190f2-314">x-mac-greek</span></span>|<span data-ttu-id="190f2-315">Greco (Mac)</span><span class="sxs-lookup"><span data-stu-id="190f2-315">Greek (Mac)</span></span>||  
|<span data-ttu-id="190f2-316">10007</span><span class="sxs-lookup"><span data-stu-id="190f2-316">10007</span></span>|<span data-ttu-id="190f2-317">x-mac-alfabeto cirillico</span><span class="sxs-lookup"><span data-stu-id="190f2-317">x-mac-cyrillic</span></span>|<span data-ttu-id="190f2-318">Cirillico (Mac)</span><span class="sxs-lookup"><span data-stu-id="190f2-318">Cyrillic (Mac)</span></span>||  
|<span data-ttu-id="190f2-319">10008</span><span class="sxs-lookup"><span data-stu-id="190f2-319">10008</span></span>|<span data-ttu-id="190f2-320">mac-x-chinesesimp</span><span class="sxs-lookup"><span data-stu-id="190f2-320">x-mac-chinesesimp</span></span>|<span data-ttu-id="190f2-321">Cinese semplificato (Mac)</span><span class="sxs-lookup"><span data-stu-id="190f2-321">Chinese Simplified (Mac)</span></span>|<span data-ttu-id="190f2-322">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-322">✓</span></span>|  
|<span data-ttu-id="190f2-323">10010</span><span class="sxs-lookup"><span data-stu-id="190f2-323">10010</span></span>|<span data-ttu-id="190f2-324">x-mac-rumeno</span><span class="sxs-lookup"><span data-stu-id="190f2-324">x-mac-romanian</span></span>|<span data-ttu-id="190f2-325">Romanian (Mac)</span><span class="sxs-lookup"><span data-stu-id="190f2-325">Romanian (Mac)</span></span>||  
|<span data-ttu-id="190f2-326">10017</span><span class="sxs-lookup"><span data-stu-id="190f2-326">10017</span></span>|<span data-ttu-id="190f2-327">x-mac-ucraino</span><span class="sxs-lookup"><span data-stu-id="190f2-327">x-mac-ukrainian</span></span>|<span data-ttu-id="190f2-328">Ucraino (Mac)</span><span class="sxs-lookup"><span data-stu-id="190f2-328">Ukrainian (Mac)</span></span>||  
|<span data-ttu-id="190f2-329">10021</span><span class="sxs-lookup"><span data-stu-id="190f2-329">10021</span></span>|<span data-ttu-id="190f2-330">x-mac-thai</span><span class="sxs-lookup"><span data-stu-id="190f2-330">x-mac-thai</span></span>|<span data-ttu-id="190f2-331">Thai (Mac)</span><span class="sxs-lookup"><span data-stu-id="190f2-331">Thai (Mac)</span></span>||  
|<span data-ttu-id="190f2-332">10029</span><span class="sxs-lookup"><span data-stu-id="190f2-332">10029</span></span>|<span data-ttu-id="190f2-333">mac-x-ce</span><span class="sxs-lookup"><span data-stu-id="190f2-333">x-mac-ce</span></span>|<span data-ttu-id="190f2-334">Europa centrale (Mac)</span><span class="sxs-lookup"><span data-stu-id="190f2-334">Central European (Mac)</span></span>||  
|<span data-ttu-id="190f2-335">10079</span><span class="sxs-lookup"><span data-stu-id="190f2-335">10079</span></span>|<span data-ttu-id="190f2-336">x-mac-islandese</span><span class="sxs-lookup"><span data-stu-id="190f2-336">x-mac-icelandic</span></span>|<span data-ttu-id="190f2-337">Islandese (Mac)</span><span class="sxs-lookup"><span data-stu-id="190f2-337">Icelandic (Mac)</span></span>||  
|<span data-ttu-id="190f2-338">10081</span><span class="sxs-lookup"><span data-stu-id="190f2-338">10081</span></span>|<span data-ttu-id="190f2-339">x-mac-turco</span><span class="sxs-lookup"><span data-stu-id="190f2-339">x-mac-turkish</span></span>|<span data-ttu-id="190f2-340">Turco (Mac)</span><span class="sxs-lookup"><span data-stu-id="190f2-340">Turkish (Mac)</span></span>||  
|<span data-ttu-id="190f2-341">10082</span><span class="sxs-lookup"><span data-stu-id="190f2-341">10082</span></span>|<span data-ttu-id="190f2-342">mac-x-croato</span><span class="sxs-lookup"><span data-stu-id="190f2-342">x-mac-croatian</span></span>|<span data-ttu-id="190f2-343">Croato (Mac)</span><span class="sxs-lookup"><span data-stu-id="190f2-343">Croatian (Mac)</span></span>||  
|<span data-ttu-id="190f2-344">12000</span><span class="sxs-lookup"><span data-stu-id="190f2-344">12000</span></span>|<span data-ttu-id="190f2-345">utf-32</span><span class="sxs-lookup"><span data-stu-id="190f2-345">utf-32</span></span>|<span data-ttu-id="190f2-346">Unicode (UTF-32)</span><span class="sxs-lookup"><span data-stu-id="190f2-346">Unicode (UTF-32)</span></span>|<span data-ttu-id="190f2-347">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-347">✓</span></span>|  
|<span data-ttu-id="190f2-348">12001</span><span class="sxs-lookup"><span data-stu-id="190f2-348">12001</span></span>|<span data-ttu-id="190f2-349">utf-32BE</span><span class="sxs-lookup"><span data-stu-id="190f2-349">utf-32BE</span></span>|<span data-ttu-id="190f2-350">Unicode (UTF-32 Big endian)</span><span class="sxs-lookup"><span data-stu-id="190f2-350">Unicode (UTF-32 Big endian)</span></span>|<span data-ttu-id="190f2-351">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-351">✓</span></span>|  
|<span data-ttu-id="190f2-352">20000</span><span class="sxs-lookup"><span data-stu-id="190f2-352">20000</span></span>|<span data-ttu-id="190f2-353">x-Chinese-CNS</span><span class="sxs-lookup"><span data-stu-id="190f2-353">x-Chinese-CNS</span></span>|<span data-ttu-id="190f2-354">Cinese tradizionale (CN)</span><span class="sxs-lookup"><span data-stu-id="190f2-354">Chinese Traditional (CNS)</span></span>||  
|<span data-ttu-id="190f2-355">20001</span><span class="sxs-lookup"><span data-stu-id="190f2-355">20001</span></span>|<span data-ttu-id="190f2-356">x-cp20001</span><span class="sxs-lookup"><span data-stu-id="190f2-356">x-cp20001</span></span>|<span data-ttu-id="190f2-357">TCA Taiwan</span><span class="sxs-lookup"><span data-stu-id="190f2-357">TCA Taiwan</span></span>||  
|<span data-ttu-id="190f2-358">20002</span><span class="sxs-lookup"><span data-stu-id="190f2-358">20002</span></span>|<span data-ttu-id="190f2-359">x-cinese-Eten</span><span class="sxs-lookup"><span data-stu-id="190f2-359">x-Chinese-Eten</span></span>|<span data-ttu-id="190f2-360">Cinese tradizionale (Eten)</span><span class="sxs-lookup"><span data-stu-id="190f2-360">Chinese Traditional (Eten)</span></span>||  
|<span data-ttu-id="190f2-361">20003</span><span class="sxs-lookup"><span data-stu-id="190f2-361">20003</span></span>|<span data-ttu-id="190f2-362">x-cp20003</span><span class="sxs-lookup"><span data-stu-id="190f2-362">x-cp20003</span></span>|<span data-ttu-id="190f2-363">IBM5550 Taiwan</span><span class="sxs-lookup"><span data-stu-id="190f2-363">IBM5550 Taiwan</span></span>||  
|<span data-ttu-id="190f2-364">20004</span><span class="sxs-lookup"><span data-stu-id="190f2-364">20004</span></span>|<span data-ttu-id="190f2-365">x-cp20004</span><span class="sxs-lookup"><span data-stu-id="190f2-365">x-cp20004</span></span>|<span data-ttu-id="190f2-366">TeleText Taiwan</span><span class="sxs-lookup"><span data-stu-id="190f2-366">TeleText Taiwan</span></span>||  
|<span data-ttu-id="190f2-367">20005</span><span class="sxs-lookup"><span data-stu-id="190f2-367">20005</span></span>|<span data-ttu-id="190f2-368">x-cp20005</span><span class="sxs-lookup"><span data-stu-id="190f2-368">x-cp20005</span></span>|<span data-ttu-id="190f2-369">Wang Taiwan</span><span class="sxs-lookup"><span data-stu-id="190f2-369">Wang Taiwan</span></span>||  
|<span data-ttu-id="190f2-370">20105</span><span class="sxs-lookup"><span data-stu-id="190f2-370">20105</span></span>|<span data-ttu-id="190f2-371">x-IA5</span><span class="sxs-lookup"><span data-stu-id="190f2-371">x-IA5</span></span>|<span data-ttu-id="190f2-372">Europa occidentale (IA5)</span><span class="sxs-lookup"><span data-stu-id="190f2-372">Western European (IA5)</span></span>||  
|<span data-ttu-id="190f2-373">20106</span><span class="sxs-lookup"><span data-stu-id="190f2-373">20106</span></span>|<span data-ttu-id="190f2-374">x-IA5-Tedesco</span><span class="sxs-lookup"><span data-stu-id="190f2-374">x-IA5-German</span></span>|<span data-ttu-id="190f2-375">German (IA5)</span><span class="sxs-lookup"><span data-stu-id="190f2-375">German (IA5)</span></span>||  
|<span data-ttu-id="190f2-376">20107</span><span class="sxs-lookup"><span data-stu-id="190f2-376">20107</span></span>|<span data-ttu-id="190f2-377">x-IA5-svedese</span><span class="sxs-lookup"><span data-stu-id="190f2-377">x-IA5-Swedish</span></span>|<span data-ttu-id="190f2-378">Svedese (IA5)</span><span class="sxs-lookup"><span data-stu-id="190f2-378">Swedish (IA5)</span></span>||  
|<span data-ttu-id="190f2-379">20108</span><span class="sxs-lookup"><span data-stu-id="190f2-379">20108</span></span>|<span data-ttu-id="190f2-380">x-IA5-Norwegian</span><span class="sxs-lookup"><span data-stu-id="190f2-380">x-IA5-Norwegian</span></span>|<span data-ttu-id="190f2-381">Norvegese (IA5)</span><span class="sxs-lookup"><span data-stu-id="190f2-381">Norwegian (IA5)</span></span>||  
|<span data-ttu-id="190f2-382">20127</span><span class="sxs-lookup"><span data-stu-id="190f2-382">20127</span></span>|<span data-ttu-id="190f2-383">us-ascii</span><span class="sxs-lookup"><span data-stu-id="190f2-383">us-ascii</span></span>|<span data-ttu-id="190f2-384">US-ASCII</span><span class="sxs-lookup"><span data-stu-id="190f2-384">US-ASCII</span></span>|<span data-ttu-id="190f2-385">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-385">✓</span></span>|  
|<span data-ttu-id="190f2-386">20261</span><span class="sxs-lookup"><span data-stu-id="190f2-386">20261</span></span>|<span data-ttu-id="190f2-387">x-cp20261</span><span class="sxs-lookup"><span data-stu-id="190f2-387">x-cp20261</span></span>|<span data-ttu-id="190f2-388">T.61</span><span class="sxs-lookup"><span data-stu-id="190f2-388">T.61</span></span>||  
|<span data-ttu-id="190f2-389">20269</span><span class="sxs-lookup"><span data-stu-id="190f2-389">20269</span></span>|<span data-ttu-id="190f2-390">x-cp20269</span><span class="sxs-lookup"><span data-stu-id="190f2-390">x-cp20269</span></span>|<span data-ttu-id="190f2-391">ISO-6937</span><span class="sxs-lookup"><span data-stu-id="190f2-391">ISO-6937</span></span>||  
|<span data-ttu-id="190f2-392">20273</span><span class="sxs-lookup"><span data-stu-id="190f2-392">20273</span></span>|<span data-ttu-id="190f2-393">IBM273</span><span class="sxs-lookup"><span data-stu-id="190f2-393">IBM273</span></span>|<span data-ttu-id="190f2-394">IBM EBCDIC (Germania)</span><span class="sxs-lookup"><span data-stu-id="190f2-394">IBM EBCDIC (Germany)</span></span>||  
|<span data-ttu-id="190f2-395">20277</span><span class="sxs-lookup"><span data-stu-id="190f2-395">20277</span></span>|<span data-ttu-id="190f2-396">IBM277</span><span class="sxs-lookup"><span data-stu-id="190f2-396">IBM277</span></span>|<span data-ttu-id="190f2-397">IBM EBCDIC (Danimarca-Norvegia)</span><span class="sxs-lookup"><span data-stu-id="190f2-397">IBM EBCDIC (Denmark-Norway)</span></span>||  
|<span data-ttu-id="190f2-398">20278</span><span class="sxs-lookup"><span data-stu-id="190f2-398">20278</span></span>|<span data-ttu-id="190f2-399">IBM278</span><span class="sxs-lookup"><span data-stu-id="190f2-399">IBM278</span></span>|<span data-ttu-id="190f2-400">IBM EBCDIC (Finlandia Svezia)</span><span class="sxs-lookup"><span data-stu-id="190f2-400">IBM EBCDIC (Finland-Sweden)</span></span>||  
|<span data-ttu-id="190f2-401">20280</span><span class="sxs-lookup"><span data-stu-id="190f2-401">20280</span></span>|<span data-ttu-id="190f2-402">IBM280</span><span class="sxs-lookup"><span data-stu-id="190f2-402">IBM280</span></span>|<span data-ttu-id="190f2-403">IBM EBCDIC (Italia)</span><span class="sxs-lookup"><span data-stu-id="190f2-403">IBM EBCDIC (Italy)</span></span>||  
|<span data-ttu-id="190f2-404">20284</span><span class="sxs-lookup"><span data-stu-id="190f2-404">20284</span></span>|<span data-ttu-id="190f2-405">IBM284</span><span class="sxs-lookup"><span data-stu-id="190f2-405">IBM284</span></span>|<span data-ttu-id="190f2-406">IBM EBCDIC (Spagna)</span><span class="sxs-lookup"><span data-stu-id="190f2-406">IBM EBCDIC (Spain)</span></span>||  
|<span data-ttu-id="190f2-407">20285</span><span class="sxs-lookup"><span data-stu-id="190f2-407">20285</span></span>|<span data-ttu-id="190f2-408">IBM285</span><span class="sxs-lookup"><span data-stu-id="190f2-408">IBM285</span></span>|<span data-ttu-id="190f2-409">IBM EBCDIC (UK)</span><span class="sxs-lookup"><span data-stu-id="190f2-409">IBM EBCDIC (UK)</span></span>||  
|<span data-ttu-id="190f2-410">20290</span><span class="sxs-lookup"><span data-stu-id="190f2-410">20290</span></span>|<span data-ttu-id="190f2-411">IBM290</span><span class="sxs-lookup"><span data-stu-id="190f2-411">IBM290</span></span>|<span data-ttu-id="190f2-412">IBM EBCDIC (giapponese katakana)</span><span class="sxs-lookup"><span data-stu-id="190f2-412">IBM EBCDIC (Japanese katakana)</span></span>||  
|<span data-ttu-id="190f2-413">20297</span><span class="sxs-lookup"><span data-stu-id="190f2-413">20297</span></span>|<span data-ttu-id="190f2-414">IBM297</span><span class="sxs-lookup"><span data-stu-id="190f2-414">IBM297</span></span>|<span data-ttu-id="190f2-415">IBM EBCDIC (Francia)</span><span class="sxs-lookup"><span data-stu-id="190f2-415">IBM EBCDIC (France)</span></span>||  
|<span data-ttu-id="190f2-416">20420</span><span class="sxs-lookup"><span data-stu-id="190f2-416">20420</span></span>|<span data-ttu-id="190f2-417">IBM420</span><span class="sxs-lookup"><span data-stu-id="190f2-417">IBM420</span></span>|<span data-ttu-id="190f2-418">IBM EBCDIC (arabo)</span><span class="sxs-lookup"><span data-stu-id="190f2-418">IBM EBCDIC (Arabic)</span></span>||  
|<span data-ttu-id="190f2-419">20423</span><span class="sxs-lookup"><span data-stu-id="190f2-419">20423</span></span>|<span data-ttu-id="190f2-420">IBM423</span><span class="sxs-lookup"><span data-stu-id="190f2-420">IBM423</span></span>|<span data-ttu-id="190f2-421">IBM EBCDIC (greco)</span><span class="sxs-lookup"><span data-stu-id="190f2-421">IBM EBCDIC (Greek)</span></span>||  
|<span data-ttu-id="190f2-422">20424</span><span class="sxs-lookup"><span data-stu-id="190f2-422">20424</span></span>|<span data-ttu-id="190f2-423">IBM424</span><span class="sxs-lookup"><span data-stu-id="190f2-423">IBM424</span></span>|<span data-ttu-id="190f2-424">IBM EBCDIC (ebraico)</span><span class="sxs-lookup"><span data-stu-id="190f2-424">IBM EBCDIC (Hebrew)</span></span>||  
|<span data-ttu-id="190f2-425">20833</span><span class="sxs-lookup"><span data-stu-id="190f2-425">20833</span></span>|<span data-ttu-id="190f2-426">x-EBCDIC-KoreanExtended</span><span class="sxs-lookup"><span data-stu-id="190f2-426">x-EBCDIC-KoreanExtended</span></span>|<span data-ttu-id="190f2-427">IBM EBCDIC (coreano esteso)</span><span class="sxs-lookup"><span data-stu-id="190f2-427">IBM EBCDIC (Korean Extended)</span></span>||  
|<span data-ttu-id="190f2-428">20838</span><span class="sxs-lookup"><span data-stu-id="190f2-428">20838</span></span>|<span data-ttu-id="190f2-429">IBM-Thai</span><span class="sxs-lookup"><span data-stu-id="190f2-429">IBM-Thai</span></span>|<span data-ttu-id="190f2-430">IBM EBCDIC (Thai)</span><span class="sxs-lookup"><span data-stu-id="190f2-430">IBM EBCDIC (Thai)</span></span>||  
|<span data-ttu-id="190f2-431">20866</span><span class="sxs-lookup"><span data-stu-id="190f2-431">20866</span></span>|<span data-ttu-id="190f2-432">koi8-r</span><span class="sxs-lookup"><span data-stu-id="190f2-432">koi8-r</span></span>|<span data-ttu-id="190f2-433">Cirillico (KOI8-R)</span><span class="sxs-lookup"><span data-stu-id="190f2-433">Cyrillic (KOI8-R)</span></span>||  
|<span data-ttu-id="190f2-434">20871</span><span class="sxs-lookup"><span data-stu-id="190f2-434">20871</span></span>|<span data-ttu-id="190f2-435">IBM871</span><span class="sxs-lookup"><span data-stu-id="190f2-435">IBM871</span></span>|<span data-ttu-id="190f2-436">IBM EBCDIC (Islandese)</span><span class="sxs-lookup"><span data-stu-id="190f2-436">IBM EBCDIC (Icelandic)</span></span>||  
|<span data-ttu-id="190f2-437">20880</span><span class="sxs-lookup"><span data-stu-id="190f2-437">20880</span></span>|<span data-ttu-id="190f2-438">IBM880</span><span class="sxs-lookup"><span data-stu-id="190f2-438">IBM880</span></span>|<span data-ttu-id="190f2-439">IBM EBCDIC (russo cirillico)</span><span class="sxs-lookup"><span data-stu-id="190f2-439">IBM EBCDIC (Cyrillic Russian)</span></span>||  
|<span data-ttu-id="190f2-440">20905</span><span class="sxs-lookup"><span data-stu-id="190f2-440">20905</span></span>|<span data-ttu-id="190f2-441">IBM905</span><span class="sxs-lookup"><span data-stu-id="190f2-441">IBM905</span></span>|<span data-ttu-id="190f2-442">IBM EBCDIC (Turco)</span><span class="sxs-lookup"><span data-stu-id="190f2-442">IBM EBCDIC (Turkish)</span></span>||  
|<span data-ttu-id="190f2-443">20924</span><span class="sxs-lookup"><span data-stu-id="190f2-443">20924</span></span>|<span data-ttu-id="190f2-444">IBM00924</span><span class="sxs-lookup"><span data-stu-id="190f2-444">IBM00924</span></span>|<span data-ttu-id="190f2-445">IBM latino 1</span><span class="sxs-lookup"><span data-stu-id="190f2-445">IBM Latin-1</span></span>||  
|<span data-ttu-id="190f2-446">20932</span><span class="sxs-lookup"><span data-stu-id="190f2-446">20932</span></span>|<span data-ttu-id="190f2-447">EUC-JP</span><span class="sxs-lookup"><span data-stu-id="190f2-447">EUC-JP</span></span>|<span data-ttu-id="190f2-448">Giapponese (JIS 0208-1990 e 0212-1990)</span><span class="sxs-lookup"><span data-stu-id="190f2-448">Japanese (JIS 0208-1990 and 0212-1990)</span></span>||  
|<span data-ttu-id="190f2-449">20936</span><span class="sxs-lookup"><span data-stu-id="190f2-449">20936</span></span>|<span data-ttu-id="190f2-450">x-cp20936</span><span class="sxs-lookup"><span data-stu-id="190f2-450">x-cp20936</span></span>|<span data-ttu-id="190f2-451">Cinese semplificato (GB2312-80)</span><span class="sxs-lookup"><span data-stu-id="190f2-451">Chinese Simplified (GB2312-80)</span></span>|<span data-ttu-id="190f2-452">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-452">✓</span></span>|  
|<span data-ttu-id="190f2-453">20949</span><span class="sxs-lookup"><span data-stu-id="190f2-453">20949</span></span>|<span data-ttu-id="190f2-454">x-cp20949</span><span class="sxs-lookup"><span data-stu-id="190f2-454">x-cp20949</span></span>|<span data-ttu-id="190f2-455">Coreano Wansung</span><span class="sxs-lookup"><span data-stu-id="190f2-455">Korean Wansung</span></span>|<span data-ttu-id="190f2-456">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-456">✓</span></span>|  
|<span data-ttu-id="190f2-457">21025</span><span class="sxs-lookup"><span data-stu-id="190f2-457">21025</span></span>|<span data-ttu-id="190f2-458">cp1025</span><span class="sxs-lookup"><span data-stu-id="190f2-458">cp1025</span></span>|<span data-ttu-id="190f2-459">IBM EBCDIC (Serbo-bulgaro cirillico)</span><span class="sxs-lookup"><span data-stu-id="190f2-459">IBM EBCDIC (Cyrillic Serbian-Bulgarian)</span></span>||  
|<span data-ttu-id="190f2-460">21866</span><span class="sxs-lookup"><span data-stu-id="190f2-460">21866</span></span>|<span data-ttu-id="190f2-461">koi8-u</span><span class="sxs-lookup"><span data-stu-id="190f2-461">koi8-u</span></span>|<span data-ttu-id="190f2-462">Cirillico (KOI8-U)</span><span class="sxs-lookup"><span data-stu-id="190f2-462">Cyrillic (KOI8-U)</span></span>||  
|<span data-ttu-id="190f2-463">28591</span><span class="sxs-lookup"><span data-stu-id="190f2-463">28591</span></span>|<span data-ttu-id="190f2-464">iso-8859-1</span><span class="sxs-lookup"><span data-stu-id="190f2-464">iso-8859-1</span></span>|<span data-ttu-id="190f2-465">Europa occidentale (ISO)</span><span class="sxs-lookup"><span data-stu-id="190f2-465">Western European (ISO)</span></span>|<span data-ttu-id="190f2-466">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-466">✓</span></span>|  
|<span data-ttu-id="190f2-467">28592</span><span class="sxs-lookup"><span data-stu-id="190f2-467">28592</span></span>|<span data-ttu-id="190f2-468">iso-8859-2</span><span class="sxs-lookup"><span data-stu-id="190f2-468">iso-8859-2</span></span>|<span data-ttu-id="190f2-469">Europa centrale (ISO)</span><span class="sxs-lookup"><span data-stu-id="190f2-469">Central European (ISO)</span></span>||  
|<span data-ttu-id="190f2-470">28593</span><span class="sxs-lookup"><span data-stu-id="190f2-470">28593</span></span>|<span data-ttu-id="190f2-471">iso-8859-3</span><span class="sxs-lookup"><span data-stu-id="190f2-471">iso-8859-3</span></span>|<span data-ttu-id="190f2-472">Latin 3 (ISO)</span><span class="sxs-lookup"><span data-stu-id="190f2-472">Latin 3 (ISO)</span></span>||  
|<span data-ttu-id="190f2-473">28594</span><span class="sxs-lookup"><span data-stu-id="190f2-473">28594</span></span>|<span data-ttu-id="190f2-474">iso-8859-4</span><span class="sxs-lookup"><span data-stu-id="190f2-474">iso-8859-4</span></span>|<span data-ttu-id="190f2-475">Baltic (ISO)</span><span class="sxs-lookup"><span data-stu-id="190f2-475">Baltic (ISO)</span></span>||  
|<span data-ttu-id="190f2-476">28595</span><span class="sxs-lookup"><span data-stu-id="190f2-476">28595</span></span>|<span data-ttu-id="190f2-477">iso-8859-5</span><span class="sxs-lookup"><span data-stu-id="190f2-477">iso-8859-5</span></span>|<span data-ttu-id="190f2-478">Cirillico (ISO)</span><span class="sxs-lookup"><span data-stu-id="190f2-478">Cyrillic (ISO)</span></span>||  
|<span data-ttu-id="190f2-479">28596</span><span class="sxs-lookup"><span data-stu-id="190f2-479">28596</span></span>|<span data-ttu-id="190f2-480">iso-8859-6</span><span class="sxs-lookup"><span data-stu-id="190f2-480">iso-8859-6</span></span>|<span data-ttu-id="190f2-481">Arabo (ISO)</span><span class="sxs-lookup"><span data-stu-id="190f2-481">Arabic (ISO)</span></span>||  
|<span data-ttu-id="190f2-482">28597</span><span class="sxs-lookup"><span data-stu-id="190f2-482">28597</span></span>|<span data-ttu-id="190f2-483">iso-8859-7</span><span class="sxs-lookup"><span data-stu-id="190f2-483">iso-8859-7</span></span>|<span data-ttu-id="190f2-484">Greco (ISO)</span><span class="sxs-lookup"><span data-stu-id="190f2-484">Greek (ISO)</span></span>||  
|<span data-ttu-id="190f2-485">28598</span><span class="sxs-lookup"><span data-stu-id="190f2-485">28598</span></span>|<span data-ttu-id="190f2-486">iso-8859-8</span><span class="sxs-lookup"><span data-stu-id="190f2-486">iso-8859-8</span></span>|<span data-ttu-id="190f2-487">Ebraico (ISO-Visual)</span><span class="sxs-lookup"><span data-stu-id="190f2-487">Hebrew (ISO-Visual)</span></span>|<span data-ttu-id="190f2-488">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-488">✓</span></span>|  
|<span data-ttu-id="190f2-489">28599</span><span class="sxs-lookup"><span data-stu-id="190f2-489">28599</span></span>|<span data-ttu-id="190f2-490">iso-8859-9</span><span class="sxs-lookup"><span data-stu-id="190f2-490">iso-8859-9</span></span>|<span data-ttu-id="190f2-491">Turco (ISO)</span><span class="sxs-lookup"><span data-stu-id="190f2-491">Turkish (ISO)</span></span>||  
|<span data-ttu-id="190f2-492">28603</span><span class="sxs-lookup"><span data-stu-id="190f2-492">28603</span></span>|<span data-ttu-id="190f2-493">iso-8859-13</span><span class="sxs-lookup"><span data-stu-id="190f2-493">iso-8859-13</span></span>|<span data-ttu-id="190f2-494">Estone (ISO)</span><span class="sxs-lookup"><span data-stu-id="190f2-494">Estonian (ISO)</span></span>||  
|<span data-ttu-id="190f2-495">28605</span><span class="sxs-lookup"><span data-stu-id="190f2-495">28605</span></span>|<span data-ttu-id="190f2-496">iso-8859-15</span><span class="sxs-lookup"><span data-stu-id="190f2-496">iso-8859-15</span></span>|<span data-ttu-id="190f2-497">Latino 9 (ISO)</span><span class="sxs-lookup"><span data-stu-id="190f2-497">Latin 9 (ISO)</span></span>||  
|<span data-ttu-id="190f2-498">29001</span><span class="sxs-lookup"><span data-stu-id="190f2-498">29001</span></span>|<span data-ttu-id="190f2-499">x-Europa</span><span class="sxs-lookup"><span data-stu-id="190f2-499">x-Europa</span></span>|<span data-ttu-id="190f2-500">Europa</span><span class="sxs-lookup"><span data-stu-id="190f2-500">Europa</span></span>||  
|<span data-ttu-id="190f2-501">38598</span><span class="sxs-lookup"><span data-stu-id="190f2-501">38598</span></span>|<span data-ttu-id="190f2-502">iso-8859-8-i</span><span class="sxs-lookup"><span data-stu-id="190f2-502">iso-8859-8-i</span></span>|<span data-ttu-id="190f2-503">Ebraico (ISO-logico)</span><span class="sxs-lookup"><span data-stu-id="190f2-503">Hebrew (ISO-Logical)</span></span>|<span data-ttu-id="190f2-504">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-504">✓</span></span>|  
|<span data-ttu-id="190f2-505">50220</span><span class="sxs-lookup"><span data-stu-id="190f2-505">50220</span></span>|<span data-ttu-id="190f2-506">iso-2022-jp</span><span class="sxs-lookup"><span data-stu-id="190f2-506">iso-2022-jp</span></span>|<span data-ttu-id="190f2-507">Giapponese (JIS)</span><span class="sxs-lookup"><span data-stu-id="190f2-507">Japanese (JIS)</span></span>|<span data-ttu-id="190f2-508">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-508">✓</span></span>|  
|<span data-ttu-id="190f2-509">50221</span><span class="sxs-lookup"><span data-stu-id="190f2-509">50221</span></span>|<span data-ttu-id="190f2-510">csISO2022JP</span><span class="sxs-lookup"><span data-stu-id="190f2-510">csISO2022JP</span></span>|<span data-ttu-id="190f2-511">Giapponese (JIS-consente Kana a 1 byte)</span><span class="sxs-lookup"><span data-stu-id="190f2-511">Japanese (JIS-Allow 1 byte Kana)</span></span>|<span data-ttu-id="190f2-512">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-512">✓</span></span>|  
|<span data-ttu-id="190f2-513">50222</span><span class="sxs-lookup"><span data-stu-id="190f2-513">50222</span></span>|<span data-ttu-id="190f2-514">iso-2022-jp</span><span class="sxs-lookup"><span data-stu-id="190f2-514">iso-2022-jp</span></span>|<span data-ttu-id="190f2-515">Giapponese (JIS-consente di 1 byte Kana - così / SI)</span><span class="sxs-lookup"><span data-stu-id="190f2-515">Japanese (JIS-Allow 1 byte Kana - SO/SI)</span></span>|<span data-ttu-id="190f2-516">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-516">✓</span></span>|  
|<span data-ttu-id="190f2-517">50225</span><span class="sxs-lookup"><span data-stu-id="190f2-517">50225</span></span>|<span data-ttu-id="190f2-518">iso-2022-kr</span><span class="sxs-lookup"><span data-stu-id="190f2-518">iso-2022-kr</span></span>|<span data-ttu-id="190f2-519">Coreano (ISO)</span><span class="sxs-lookup"><span data-stu-id="190f2-519">Korean (ISO)</span></span>|<span data-ttu-id="190f2-520">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-520">✓</span></span>|  
|<span data-ttu-id="190f2-521">50227</span><span class="sxs-lookup"><span data-stu-id="190f2-521">50227</span></span>|<span data-ttu-id="190f2-522">x-cp50227</span><span class="sxs-lookup"><span data-stu-id="190f2-522">x-cp50227</span></span>|<span data-ttu-id="190f2-523">Cinese semplificato (ISO-2022)</span><span class="sxs-lookup"><span data-stu-id="190f2-523">Chinese Simplified (ISO-2022)</span></span>|<span data-ttu-id="190f2-524">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-524">✓</span></span>|  
|<span data-ttu-id="190f2-525">51932</span><span class="sxs-lookup"><span data-stu-id="190f2-525">51932</span></span>|<span data-ttu-id="190f2-526">euc-jp</span><span class="sxs-lookup"><span data-stu-id="190f2-526">euc-jp</span></span>|<span data-ttu-id="190f2-527">Giapponese (EUC)</span><span class="sxs-lookup"><span data-stu-id="190f2-527">Japanese (EUC)</span></span>|<span data-ttu-id="190f2-528">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-528">✓</span></span>|  
|<span data-ttu-id="190f2-529">51936</span><span class="sxs-lookup"><span data-stu-id="190f2-529">51936</span></span>|<span data-ttu-id="190f2-530">EUC-CN</span><span class="sxs-lookup"><span data-stu-id="190f2-530">EUC-CN</span></span>|<span data-ttu-id="190f2-531">Cinese semplificato (EUC)</span><span class="sxs-lookup"><span data-stu-id="190f2-531">Chinese Simplified (EUC)</span></span>|<span data-ttu-id="190f2-532">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-532">✓</span></span>|  
|<span data-ttu-id="190f2-533">51949</span><span class="sxs-lookup"><span data-stu-id="190f2-533">51949</span></span>|<span data-ttu-id="190f2-534">euc-kr</span><span class="sxs-lookup"><span data-stu-id="190f2-534">euc-kr</span></span>|<span data-ttu-id="190f2-535">Korean (EUC)</span><span class="sxs-lookup"><span data-stu-id="190f2-535">Korean (EUC)</span></span>|<span data-ttu-id="190f2-536">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-536">✓</span></span>|  
|<span data-ttu-id="190f2-537">52936</span><span class="sxs-lookup"><span data-stu-id="190f2-537">52936</span></span>|<span data-ttu-id="190f2-538">hz-gb-2312</span><span class="sxs-lookup"><span data-stu-id="190f2-538">hz-gb-2312</span></span>|<span data-ttu-id="190f2-539">Cinese semplificato (HZ)</span><span class="sxs-lookup"><span data-stu-id="190f2-539">Chinese Simplified (HZ)</span></span>|<span data-ttu-id="190f2-540">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-540">✓</span></span>|  
|<span data-ttu-id="190f2-541">54936</span><span class="sxs-lookup"><span data-stu-id="190f2-541">54936</span></span>|<span data-ttu-id="190f2-542">GB18030</span><span class="sxs-lookup"><span data-stu-id="190f2-542">GB18030</span></span>|<span data-ttu-id="190f2-543">Cinese semplificato (GB18030)</span><span class="sxs-lookup"><span data-stu-id="190f2-543">Chinese Simplified (GB18030)</span></span>|<span data-ttu-id="190f2-544">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-544">✓</span></span>|  
|<span data-ttu-id="190f2-545">57002</span><span class="sxs-lookup"><span data-stu-id="190f2-545">57002</span></span>|<span data-ttu-id="190f2-546">x-iscii-de</span><span class="sxs-lookup"><span data-stu-id="190f2-546">x-iscii-de</span></span>|<span data-ttu-id="190f2-547">ISCII Devanagari</span><span class="sxs-lookup"><span data-stu-id="190f2-547">ISCII Devanagari</span></span>|<span data-ttu-id="190f2-548">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-548">✓</span></span>|  
|<span data-ttu-id="190f2-549">57003</span><span class="sxs-lookup"><span data-stu-id="190f2-549">57003</span></span>|<span data-ttu-id="190f2-550">x-iscii-be</span><span class="sxs-lookup"><span data-stu-id="190f2-550">x-iscii-be</span></span>|<span data-ttu-id="190f2-551">ISCII bengalese</span><span class="sxs-lookup"><span data-stu-id="190f2-551">ISCII Bengali</span></span>|<span data-ttu-id="190f2-552">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-552">✓</span></span>|  
|<span data-ttu-id="190f2-553">57004</span><span class="sxs-lookup"><span data-stu-id="190f2-553">57004</span></span>|<span data-ttu-id="190f2-554">x-iscii-ta</span><span class="sxs-lookup"><span data-stu-id="190f2-554">x-iscii-ta</span></span>|<span data-ttu-id="190f2-555">ISCII Tamil</span><span class="sxs-lookup"><span data-stu-id="190f2-555">ISCII Tamil</span></span>|<span data-ttu-id="190f2-556">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-556">✓</span></span>|  
|<span data-ttu-id="190f2-557">57005</span><span class="sxs-lookup"><span data-stu-id="190f2-557">57005</span></span>|<span data-ttu-id="190f2-558">x-iscii-te</span><span class="sxs-lookup"><span data-stu-id="190f2-558">x-iscii-te</span></span>|<span data-ttu-id="190f2-559">ISCII Telugu</span><span class="sxs-lookup"><span data-stu-id="190f2-559">ISCII Telugu</span></span>|<span data-ttu-id="190f2-560">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-560">✓</span></span>|  
|<span data-ttu-id="190f2-561">57006</span><span class="sxs-lookup"><span data-stu-id="190f2-561">57006</span></span>|<span data-ttu-id="190f2-562">x-iscii-as</span><span class="sxs-lookup"><span data-stu-id="190f2-562">x-iscii-as</span></span>|<span data-ttu-id="190f2-563">ISCII Assamese</span><span class="sxs-lookup"><span data-stu-id="190f2-563">ISCII Assamese</span></span>|<span data-ttu-id="190f2-564">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-564">✓</span></span>|  
|<span data-ttu-id="190f2-565">57007</span><span class="sxs-lookup"><span data-stu-id="190f2-565">57007</span></span>|<span data-ttu-id="190f2-566">x-iscii-or</span><span class="sxs-lookup"><span data-stu-id="190f2-566">x-iscii-or</span></span>|<span data-ttu-id="190f2-567">Carattere ISCII</span><span class="sxs-lookup"><span data-stu-id="190f2-567">ISCII Oriya</span></span>|<span data-ttu-id="190f2-568">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-568">✓</span></span>|  
|<span data-ttu-id="190f2-569">57008</span><span class="sxs-lookup"><span data-stu-id="190f2-569">57008</span></span>|<span data-ttu-id="190f2-570">x-iscii-ka</span><span class="sxs-lookup"><span data-stu-id="190f2-570">x-iscii-ka</span></span>|<span data-ttu-id="190f2-571">ISCII Kannada</span><span class="sxs-lookup"><span data-stu-id="190f2-571">ISCII Kannada</span></span>|<span data-ttu-id="190f2-572">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-572">✓</span></span>|  
|<span data-ttu-id="190f2-573">57009</span><span class="sxs-lookup"><span data-stu-id="190f2-573">57009</span></span>|<span data-ttu-id="190f2-574">x-iscii-ma</span><span class="sxs-lookup"><span data-stu-id="190f2-574">x-iscii-ma</span></span>|<span data-ttu-id="190f2-575">Carattere ISCII</span><span class="sxs-lookup"><span data-stu-id="190f2-575">ISCII Malayalam</span></span>|<span data-ttu-id="190f2-576">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-576">✓</span></span>|  
|<span data-ttu-id="190f2-577">57010</span><span class="sxs-lookup"><span data-stu-id="190f2-577">57010</span></span>|<span data-ttu-id="190f2-578">x-iscii-gu</span><span class="sxs-lookup"><span data-stu-id="190f2-578">x-iscii-gu</span></span>|<span data-ttu-id="190f2-579">Carattere ISCII</span><span class="sxs-lookup"><span data-stu-id="190f2-579">ISCII Gujarati</span></span>|<span data-ttu-id="190f2-580">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-580">✓</span></span>|  
|<span data-ttu-id="190f2-581">57011</span><span class="sxs-lookup"><span data-stu-id="190f2-581">57011</span></span>|<span data-ttu-id="190f2-582">x-iscii-pa</span><span class="sxs-lookup"><span data-stu-id="190f2-582">x-iscii-pa</span></span>|<span data-ttu-id="190f2-583">ISCII Punjabi</span><span class="sxs-lookup"><span data-stu-id="190f2-583">ISCII Punjabi</span></span>|<span data-ttu-id="190f2-584">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-584">✓</span></span>|  
|<span data-ttu-id="190f2-585">65000</span><span class="sxs-lookup"><span data-stu-id="190f2-585">65000</span></span>|<span data-ttu-id="190f2-586">UTF-7</span><span class="sxs-lookup"><span data-stu-id="190f2-586">utf-7</span></span>|<span data-ttu-id="190f2-587">Unicode (UTF-7)</span><span class="sxs-lookup"><span data-stu-id="190f2-587">Unicode (UTF-7)</span></span>|<span data-ttu-id="190f2-588">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-588">✓</span></span>|  
|<span data-ttu-id="190f2-589">65001</span><span class="sxs-lookup"><span data-stu-id="190f2-589">65001</span></span>|<span data-ttu-id="190f2-590">utf-8</span><span class="sxs-lookup"><span data-stu-id="190f2-590">utf-8</span></span>|<span data-ttu-id="190f2-591">Unicode (UTF-8)</span><span class="sxs-lookup"><span data-stu-id="190f2-591">Unicode (UTF-8)</span></span>|<span data-ttu-id="190f2-592">✓</span><span class="sxs-lookup"><span data-stu-id="190f2-592">✓</span></span>|  
  
 <span data-ttu-id="190f2-593">L'esempio seguente chiama il <xref:System.Text.Encoding.GetEncoding%28System.Int32%29> e <xref:System.Text.Encoding.GetEncoding%28System.String%29> metodi per ottenere il greco (Windows) codifica del codice.</span><span class="sxs-lookup"><span data-stu-id="190f2-593">The following example calls the <xref:System.Text.Encoding.GetEncoding%28System.Int32%29> and <xref:System.Text.Encoding.GetEncoding%28System.String%29> methods to get the Greek (Windows) code page encoding.</span></span> <span data-ttu-id="190f2-594">Confronta il <xref:System.Text.Encoding> gli oggetti restituiti dalle chiamate di metodo per mostrare che sono uguali, e quindi esegue il mapping viene visualizzato il punto di codice Unicode e il valore di tabella codici corrispondente per ogni carattere dell'alfabeto greco.</span><span class="sxs-lookup"><span data-stu-id="190f2-594">It compares the <xref:System.Text.Encoding> objects returned by the method calls to show that they are equal, and then maps displays the Unicode code point and the corresponding code page value for each character in the Greek alphabet.</span></span>  
  
 [!code-csharp[System.Text.Encoding#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding/cs/getencoding1.cs#1)]
 [!code-vb[System.Text.Encoding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding/vb/getencoding1.vb#1)]  
  
 <span data-ttu-id="190f2-595">Se il conversione dei dati sono disponibili solo in blocchi sequenziali (ad esempio i dati letti da un flusso) o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, è necessario utilizzare il <xref:System.Text.Decoder> o <xref:System.Text.Encoder> fornito dal <xref:System.Text.Encoding.GetDecoder%2A> metodo o <xref:System.Text.Encoding.GetEncoder%2A> (metodo), rispettivamente, di una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="190f2-595">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="190f2-596">UTF-16 e UTF-32 codificatori possono utilizzare l'ordine dei byte big-endian (byte più significativo primo) o il little endian (byte meno significativo prima).</span><span class="sxs-lookup"><span data-stu-id="190f2-596">The UTF-16 and the UTF-32 encoders can use the big endian byte order (most significant byte first) or the little endian byte order (least significant byte first).</span></span> <span data-ttu-id="190f2-597">Ad esempio, l'alfabeto latino (U + 0041) viene serializzato come segue (in esadecimale):</span><span class="sxs-lookup"><span data-stu-id="190f2-597">For example, the Latin Capital Letter A (U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="190f2-598">Ordine dei byte big endian UTF-16: 00 41</span><span class="sxs-lookup"><span data-stu-id="190f2-598">UTF-16 big endian byte order: 00 41</span></span>  
  
-   <span data-ttu-id="190f2-599">Ordine dei byte little-endian UTF-16 little: 41 00</span><span class="sxs-lookup"><span data-stu-id="190f2-599">UTF-16 little endian byte order: 41 00</span></span>  
  
-   <span data-ttu-id="190f2-600">Ordine dei byte big endian UTF-32: 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="190f2-600">UTF-32 big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="190f2-601">Ordine dei byte little-endian little UTF-32: 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="190f2-601">UTF-32 little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="190f2-602">È in genere più efficiente per archiviare i caratteri Unicode utilizzando l'ordine dei byte nativo.</span><span class="sxs-lookup"><span data-stu-id="190f2-602">It is generally more efficient to store Unicode characters using the native byte order.</span></span> <span data-ttu-id="190f2-603">Ad esempio, è preferibile utilizzare l'ordine dei byte little-endian little su piattaforme little-endian, ad esempio computer Intel.</span><span class="sxs-lookup"><span data-stu-id="190f2-603">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span>  
  
 <span data-ttu-id="190f2-604">Il <xref:System.Text.Encoding.GetPreamble%2A> metodo recupera una matrice di byte contenente il byte order mark (BOM).</span><span class="sxs-lookup"><span data-stu-id="190f2-604">The <xref:System.Text.Encoding.GetPreamble%2A> method retrieves an array of bytes that includes the byte order mark (BOM).</span></span> <span data-ttu-id="190f2-605">Se questa matrice di byte è preceduta da un flusso codificato, consente al decodificatore per identificare il formato di codifica utilizzato.</span><span class="sxs-lookup"><span data-stu-id="190f2-605">If this byte array is prefixed to an encoded stream, it helps the decoder to identify the encoding format used.</span></span>  
  
 <span data-ttu-id="190f2-606">Per ulteriori informazioni sull'ordine dei byte e il byte order mark, vedere lo Unicode Standard nella [home page di Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="190f2-606">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
 <span data-ttu-id="190f2-607">Si noti che le classi di codifica consentono agli errori di:</span><span class="sxs-lookup"><span data-stu-id="190f2-607">Note that the encoding classes allow errors to:</span></span>  
  
-   <span data-ttu-id="190f2-608">Cambiare automaticamente a un "?" caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-608">Silently change to a "?" character.</span></span>  
  
-   <span data-ttu-id="190f2-609">Utilizzare un carattere "adatta".</span><span class="sxs-lookup"><span data-stu-id="190f2-609">Use a "best fit" character.</span></span>  
  
-   <span data-ttu-id="190f2-610">Passare a un comportamento specifico dell'applicazione tramite l'utilizzo del <xref:System.Text.EncoderFallback> e <xref:System.Text.DecoderFallback> classi con il carattere di sostituzione Unicode U + FFFD.</span><span class="sxs-lookup"><span data-stu-id="190f2-610">Change to an application-specific behavior through use of the <xref:System.Text.EncoderFallback> and <xref:System.Text.DecoderFallback> classes with the U+FFFD Unicode replacement character.</span></span>  
  
 <span data-ttu-id="190f2-611">Per qualsiasi errore di flusso di dati, è necessario generare un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="190f2-611">You should throw an exception on any data stream error.</span></span> <span data-ttu-id="190f2-612">Un'applicazione utilizza un flag "throwonerror" quando applicabile o utilizza il <xref:System.Text.EncoderExceptionFallback> e <xref:System.Text.DecoderExceptionFallback> classi.</span><span class="sxs-lookup"><span data-stu-id="190f2-612">An app either uses a "throwonerror" flag when applicable or uses the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.DecoderExceptionFallback> classes.</span></span> <span data-ttu-id="190f2-613">Il fallback più appropriato spesso non è consigliabile perché può causare la perdita di dati o confusione ed è più lenta rispetto al sostituzioni di caratteri semplice.</span><span class="sxs-lookup"><span data-stu-id="190f2-613">Best fit fallback is often not recommended because it can cause data loss or confusion and is slower than simple character replacements.</span></span> <span data-ttu-id="190f2-614">Per le codifiche ANSI, il comportamento più appropriato è il valore predefinito.</span><span class="sxs-lookup"><span data-stu-id="190f2-614">For ANSI encodings, the best fit behavior is the default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-615">Nell'esempio seguente converte una stringa da una codifica a altra.</span><span class="sxs-lookup"><span data-stu-id="190f2-615">The following example converts a string from one encoding to another.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="190f2-616">La matrice di byte [] è l'unico tipo in questo esempio che contiene i dati codificati.</span><span class="sxs-lookup"><span data-stu-id="190f2-616">The byte[] array is the only type in this example that contains the encoded data.</span></span> <span data-ttu-id="190f2-617">I tipi .NET Char e String sono Unicode, pertanto la <xref:System.Text.Encoding.GetChars%2A> chiamata decodifica i dati Unicode.</span><span class="sxs-lookup"><span data-stu-id="190f2-617">The .NET Char and String types are themselves Unicode, so the <xref:System.Text.Encoding.GetChars%2A> call decodes the data back to Unicode.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-618">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-618">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="190f2-619">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-619">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-620">Le classi derivate eseguire l'override di questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="190f2-620">Derived classes override this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding (int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (codePage As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding(int codePage);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePage">
          <span data-ttu-id="190f2-621">The code page identifier of the preferred encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-621">The code page identifier of the preferred encoding.</span>
          </span>
          <span data-ttu-id="190f2-622">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-622">-or-</span>
          </span>
          <span data-ttu-id="190f2-623">0, to use the default encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-623">0, to use the default encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-624">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class that corresponds to the specified code page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-624">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class that corresponds to the specified code page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-625">Le classi derivate eseguire l'override di questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="190f2-625">Derived classes override this constructor.</span></span>  
  
 <span data-ttu-id="190f2-626">Le chiamate a questo costruttore da una classe derivata di creare un <xref:System.Text.Encoding> oggetto che usa il fallback con mapping più appropriato per la codifica e le operazioni di decodifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-626">Calls to this constructor from a derived class create an <xref:System.Text.Encoding> object that uses best-fit fallback for both encoding and decoding operations.</span></span> <span data-ttu-id="190f2-627">Sia il <xref:System.Text.Encoding.DecoderFallback%2A> e <xref:System.Text.Encoding.EncoderFallback%2A> proprietà sono di sola lettura e non può essere modificata.</span><span class="sxs-lookup"><span data-stu-id="190f2-627">Both the <xref:System.Text.Encoding.DecoderFallback%2A> and <xref:System.Text.Encoding.EncoderFallback%2A> properties are read-only and cannot be modified.</span></span> <span data-ttu-id="190f2-628">Per controllare la strategia di fallback per una classe derivata da <xref:System.Text.Encoding>, chiamare il <xref:System.Text.Encoding.%23ctor%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="190f2-628">To control the fallback strategy for a class derived from <xref:System.Text.Encoding>, call the <xref:System.Text.Encoding.%23ctor%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-629">
            <paramref name="codePage" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-629">
              <paramref name="codePage" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding (int codePage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 codePage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding(int codePage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codePage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codePage">
          <span data-ttu-id="190f2-630">The encoding code page identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-630">The encoding code page identifier.</span>
          </span>
        </param>
        <param name="encoderFallback">
          <span data-ttu-id="190f2-631">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-631">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span>
          </span>
        </param>
        <param name="decoderFallback">
          <span data-ttu-id="190f2-632">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-632">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-633">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class that corresponds to the specified code page with the specified encoder and decoder fallback strategies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-633">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class that corresponds to the specified code page with the specified encoder and decoder fallback strategies.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-634">Questo costruttore è `protected`; derivata classi eseguirne l'override.</span><span class="sxs-lookup"><span data-stu-id="190f2-634">This constructor is `protected`; derived classes override it.</span></span>  
  
 <span data-ttu-id="190f2-635">Chiamare questo costruttore da una classe derivata per controllare il fallback di codifica e decodifica strategie.</span><span class="sxs-lookup"><span data-stu-id="190f2-635">You call this constructor from a derived class to control the fallback encoding and decoding strategies.</span></span> <span data-ttu-id="190f2-636">Il <xref:System.Text.Encoding> costruttori della classe creano oggetti codifica di sola lettura che non consentono al codificatore o fallback del decodificatore da impostare dopo la creazione dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="190f2-636">The <xref:System.Text.Encoding> class constructors create read-only encoding objects that don't allow encoder or decoder fallback to be set after the object is created.</span></span>  
  
 <span data-ttu-id="190f2-637">Se il valore `encoderFallback` o `decoderFallback` è null, il fallback con mapping più appropriato viene utilizzato come la relativa strategia di fallback.</span><span class="sxs-lookup"><span data-stu-id="190f2-637">If either `encoderFallback` or `decoderFallback` is null, best-fit fallback is used as the corresponding fallback strategy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-638">
            <paramref name="codePage" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-638">
              <paramref name="codePage" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ASCII">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding ASCII { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding ASCII" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.ASCII" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ASCII As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ ASCII { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-639">Gets an encoding for the ASCII (7-bit) character set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-639">Gets an encoding for the ASCII (7-bit) character set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-640">Codifica per il set di caratteri ASCII (7 bit).</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-640">An  encoding for the ASCII (7-bit) character set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-641">Caratteri ASCII sono limitati ai primi 128 caratteri Unicode, da U + 0000 a U + 007F.</span><span class="sxs-lookup"><span data-stu-id="190f2-641">ASCII characters are limited to the lowest 128 Unicode characters, from U+0000 to U+007F.</span></span>  
  
 <span data-ttu-id="190f2-642">Quando si seleziona la codifica ASCII per l'app, considerare quanto segue:</span><span class="sxs-lookup"><span data-stu-id="190f2-642">When selecting the ASCII encoding for your app, consider the following:</span></span>  
  
-   <span data-ttu-id="190f2-643">La codifica ASCII è in genere appropriata per i protocolli che richiedono ASCII.</span><span class="sxs-lookup"><span data-stu-id="190f2-643">The ASCII encoding is usually appropriate for protocols that require ASCII.</span></span>  
  
-   <span data-ttu-id="190f2-644">Se si richiede la codifica a 8 bit (definito a volte in modo non corretto per "ASCII"), la codifica UTF-8 è preferibile ASCII codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-644">If you requires 8-bit encoding (which is sometimes incorrectly referred to as "ASCII"), the UTF-8 encoding is recommended over the ASCII encoding.</span></span> <span data-ttu-id="190f2-645">Per i caratteri 0-7F, i risultati sono identici, ma utilizzo UTF-8 consente di evitare la perdita di dati, consentendo la rappresentazione di tutti i caratteri Unicode rappresentabile.</span><span class="sxs-lookup"><span data-stu-id="190f2-645">For the characters 0-7F, the results are identical, but use of UTF-8 avoids data loss by allowing representation of all Unicode characters that are representable.</span></span> <span data-ttu-id="190f2-646">Si noti che la codifica ASCII è un 8 bit ambiguità che può consentire l'uso dannoso, ma la codifica UTF-8 rimuove ambiguità di 8 bit.</span><span class="sxs-lookup"><span data-stu-id="190f2-646">Note that the ASCII encoding has an 8th bit ambiguity that can allow malicious use, but the UTF-8 encoding removes ambiguity about the 8th bit.</span></span>  
  
-   <span data-ttu-id="190f2-647">Prima di .NET Framework versione 2.0, .NET Framework consentono lo spoofing ignorando l'8 bit.</span><span class="sxs-lookup"><span data-stu-id="190f2-647">Prior to the .NET Framework version 2.0, the .NET Framework allowed spoofing by ignoring the 8th bit.</span></span> <span data-ttu-id="190f2-648">A partire da .NET Framework 2.0, i punti di codice non ASCII fallback durante la decodifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-648">Beginning with the .NET Framework 2.0, non-ASCII code points fall back during decoding.</span></span>  
  
 <span data-ttu-id="190f2-649">Il <xref:System.Text.ASCIIEncoding> oggetto restituito da questa proprietà potrebbe non essere il comportamento appropriato per l'app.</span><span class="sxs-lookup"><span data-stu-id="190f2-649">The <xref:System.Text.ASCIIEncoding> object that is returned by this property might not have the appropriate behavior for your app.</span></span> <span data-ttu-id="190f2-650">Usa il fallback di sostituzione per sostituire ogni stringa che non può codificare e ogni byte che non può decodificare con un punto interrogativo ("?") caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-650">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="190f2-651">In alternativa, è possibile chiamare il <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> metodo per creare un'istanza di un <xref:System.Text.ASCIIEncoding> oggetto il cui fallback è un <xref:System.Text.EncoderFallbackException> o un <xref:System.Text.DecoderFallbackException>, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="190f2-651">Instead, you can call the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> method to instantiate an <xref:System.Text.ASCIIEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.ASCII#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.ascii/cs/encoding.ascii2.cs#1)]
 [!code-vb[System.Text.Encoding.ASCII#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.ascii/vb/encoding.ascii2.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="190f2-652">Nell'esempio seguente viene illustrato l'effetto della codifica ASCII sui caratteri che non rientrano nell'intervallo ASCII.</span><span class="sxs-lookup"><span data-stu-id="190f2-652">The following example demonstrates the effect of the ASCII encoding on characters that are outside the ASCII range.</span></span>  
  
 [!code-cpp[System.Text.Encoding.ASCII Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/CPP/ascii.cpp#1)]
 [!code-csharp[System.Text.Encoding.ASCII Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/CS/ascii.cs#1)]
 [!code-vb[System.Text.Encoding.ASCII Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/VB/ascii.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.ASCIIEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
      </Docs>
    </Member>
    <Member MemberName="BigEndianUnicode">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding BigEndianUnicode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding BigEndianUnicode" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.BigEndianUnicode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BigEndianUnicode As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ BigEndianUnicode { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-653">Gets an encoding for the UTF-16 format that uses the big endian byte order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-653">Gets an encoding for the UTF-16 format that uses the big endian byte order.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-654">Oggetto di codifica per il formato UTF-16 che usa l'ordine dei byte big endian.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-654">An encoding object for the UTF-16 format that uses the big endian byte order.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-655">Il <xref:System.Text.UnicodeEncoding> oggetto restituito da questa proprietà potrebbe non essere il comportamento appropriato per l'app.</span><span class="sxs-lookup"><span data-stu-id="190f2-655">The <xref:System.Text.UnicodeEncoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="190f2-656">Usa il fallback di sostituzione per sostituire ogni stringa che non può codificare e ogni byte che non può decodificare con un punto interrogativo ("?") caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-656">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="190f2-657">In alternativa, è possibile chiamare il <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> costruttore per creare un'istanza di un big endian <xref:System.Text.UnicodeEncoding> oggetto il cui fallback è un <xref:System.Text.EncoderFallbackException> o <xref:System.Text.DecoderFallbackException>, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="190f2-657">Instead, you can call the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a big endian <xref:System.Text.UnicodeEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.BigEndianUnicode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CS/bigendianunicode1.cs#2)]
 [!code-vb[System.Text.Encoding.BigEndianUnicode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/VB/bigendianunicode1.vb#2)]  
  
 <span data-ttu-id="190f2-658">L'oggetto restituito <xref:System.Text.UnicodeEncoding> oggetto ha <xref:System.Text.Encoding.BodyName%2A>, <xref:System.Text.Encoding.HeaderName%2A>, e <xref:System.Text.Encoding.WebName%2A> proprietà, vale a dire il nome "unicodeFFFE".</span><span class="sxs-lookup"><span data-stu-id="190f2-658">The returned <xref:System.Text.UnicodeEncoding> object has <xref:System.Text.Encoding.BodyName%2A>, <xref:System.Text.Encoding.HeaderName%2A>, and <xref:System.Text.Encoding.WebName%2A> properties, which yield the name "unicodeFFFE".</span></span> <span data-ttu-id="190f2-659">Anche se il contrassegno di ordine dei byte big endian UTF-16 è il valore esadecimale FEFF, il nome "unicodeFFFE" è stato scelto perché l'ordine dei byte viene visualizzato come indicatore nel computer Windows little endian.</span><span class="sxs-lookup"><span data-stu-id="190f2-659">Although the UTF-16 big endian byte order mark is hexadecimal FEFF, the name "unicodeFFFE" was chosen because the byte order mark appears as hexadecimal FFFE on little endian Windows computers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-660">Nell'esempio seguente viene letto un file di testo con una codifica UTF-16 Usa l'ordine dei byte big-endian.</span><span class="sxs-lookup"><span data-stu-id="190f2-660">The following example reads a text file with a UTF-16 encoding using the big endian byte order.</span></span>  
  
 [!code-cpp[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CPP/bigendianunicode.cpp#1)]
 [!code-csharp[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CS/bigendianunicode.cs#1)]
 [!code-vb[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/VB/bigendianunicode.vb#1)]  
  
 <span data-ttu-id="190f2-661">Nell'esempio seguente determina il numero di byte necessari per codificare una matrice di caratteri, codifica i caratteri e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="190f2-661">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UnicodeEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
      </Docs>
    </Member>
    <Member MemberName="BodyName">
      <MemberSignature Language="C#" Value="public virtual string BodyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BodyName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.BodyName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BodyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BodyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-662">When overridden in a derived class, gets a name for the current encoding that can be used with mail agent body tags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-662">When overridden in a derived class, gets a name for the current encoding that can be used with mail agent body tags.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-663">Nome dell'oggetto <see cref="T:System.Text.Encoding" /> corrente che può essere usato con i tag body degli agenti di posta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-663">A name for the current <see cref="T:System.Text.Encoding" /> that can be used with mail agent body tags.</span>
          </span>
          <span data-ttu-id="190f2-664">-oppure-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-664">-or-</span>
          </span>
          <span data-ttu-id="190f2-665">Stringa vuota (""), se non è possibile usare l'oggetto <see cref="T:System.Text.Encoding" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-665">An empty string (""), if the current <see cref="T:System.Text.Encoding" /> cannot be used.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-666">Se è necessaria una codifica per un nome del corpo, è necessario chiamare <xref:System.Text.Encoding.GetEncoding%2A> con il <xref:System.Text.Encoding.BodyName%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="190f2-666">If you need an encoding for a body name, you should call <xref:System.Text.Encoding.GetEncoding%2A> with the <xref:System.Text.Encoding.BodyName%2A> property.</span></span> <span data-ttu-id="190f2-667">Spesso il metodo recupera una codifica diversa dalla codifica di test specificati nella chiamata.</span><span class="sxs-lookup"><span data-stu-id="190f2-667">Often the method retrieves a different encoding from the test encoding furnished in the call.</span></span> <span data-ttu-id="190f2-668">In genere necessario recuperare tale codifica; solo le applicazioni di posta elettronica la maggior parte delle altre applicazioni che è necessario descrivere una codifica devono utilizzare il relativo <xref:System.Text.Encoding.WebName%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-668">Generally only email applications need to retrieve such an encoding; most other applications that need to describe an encoding should use its <xref:System.Text.Encoding.WebName%2A>.</span></span>  
  
 <span data-ttu-id="190f2-669">In alcuni casi, il valore di <xref:System.Text.Encoding.BodyName%2A> proprietà corrisponde allo standard internazionale che definisce tale codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-669">In some cases, the value of the <xref:System.Text.Encoding.BodyName%2A> property corresponds to the international standard that defines that encoding.</span></span> <span data-ttu-id="190f2-670">Questo non significa che l'implementazione sia conforme in modo completo con tale standard.</span><span class="sxs-lookup"><span data-stu-id="190f2-670">This doesn't mean that the implementation complies in full with that standard.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-671">Nell'esempio seguente recupera i nomi diversi per ogni tipo di codifica e visualizza le codifiche con uno o più nomi diversi da <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="190f2-671">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="190f2-672">Visualizza <xref:System.Text.Encoding.EncodingName%2A> ma non compare su di essa.</span><span class="sxs-lookup"><span data-stu-id="190f2-672">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="190f2-673">When overridden in a derived class, creates a shallow copy of the current <see cref="T:System.Text.Encoding" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-673">When overridden in a derived class, creates a shallow copy of the current <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-674">A copy of the current <see cref="T:System.Text.Encoding" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-674">A copy of the current <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-675">La copia è modificabile anche se originale <xref:System.Text.Encoding> oggetto è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="190f2-675">The clone is writable even if the original <xref:System.Text.Encoding> object is read-only.</span></span> <span data-ttu-id="190f2-676">Di conseguenza, le proprietà del clone possono essere modificate.</span><span class="sxs-lookup"><span data-stu-id="190f2-676">Therefore, the properties of the clone can be modified.</span></span>  
  
 <span data-ttu-id="190f2-677">Una copia superficiale di un oggetto è una copia del solo oggetto.</span><span class="sxs-lookup"><span data-stu-id="190f2-677">A shallow copy of an object is a copy of the object only.</span></span> <span data-ttu-id="190f2-678">Se l'oggetto contiene riferimenti ad altri oggetti, il duplicato superficiale non crea copie degli oggetti cui viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="190f2-678">If the object contains references to other objects, the shallow copy does not create copies of the referred objects.</span></span> <span data-ttu-id="190f2-679">Fa riferimento all'oggetto originale invece.</span><span class="sxs-lookup"><span data-stu-id="190f2-679">It refers to the original objects instead.</span></span> <span data-ttu-id="190f2-680">Al contrario, una copia completa di un oggetto crea una copia dell'oggetto e una copia di tutti gli elementi direttamente o indirettamente a cui fa riferimento l'oggetto.</span><span class="sxs-lookup"><span data-stu-id="190f2-680">In contrast, a deep copy of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public virtual int CodePage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CodePage { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-681">When overridden in a derived class, gets the code page identifier of the current <see cref="T:System.Text.Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-681">When overridden in a derived class, gets the code page identifier of the current <see cref="T:System.Text.Encoding" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-682">Identificatore della tabella codici dell'oggetto <see cref="T:System.Text.Encoding" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-682">The code page identifier of the current <see cref="T:System.Text.Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="190f2-683">Nell'esempio seguente recupera i nomi diversi per ogni tipo di codifica e visualizza le codifiche con uno o più nomi diversi da <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="190f2-683">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="190f2-684">Visualizza <xref:System.Text.Encoding.EncodingName%2A> ma non compare su di essa.</span><span class="sxs-lookup"><span data-stu-id="190f2-684">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.CodePage" />
        <altmember cref="P:System.Text.Encoding.WindowsCodePage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-685">Converts a byte array from one encoding to another.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-685">Converts a byte array from one encoding to another.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static byte[] Convert (System.Text.Encoding srcEncoding, System.Text.Encoding dstEncoding, byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Convert(class System.Text.Encoding srcEncoding, class System.Text.Encoding dstEncoding, unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Convert (srcEncoding As Encoding, dstEncoding As Encoding, bytes As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Convert(System::Text::Encoding ^ srcEncoding, System::Text::Encoding ^ dstEncoding, cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcEncoding" Type="System.Text.Encoding" />
        <Parameter Name="dstEncoding" Type="System.Text.Encoding" />
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="srcEncoding">
          <span data-ttu-id="190f2-686">The encoding format of <c>bytes</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-686">The encoding format of <c>bytes</c>.</span>
          </span>
        </param>
        <param name="dstEncoding">
          <span data-ttu-id="190f2-687">The target encoding format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-687">The target encoding format.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="190f2-688">The bytes to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-688">The bytes to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-689">Converts an entire byte array from one encoding to another.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-689">Converts an entire byte array from one encoding to another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-690">An array of type <see cref="T:System.Byte" /> containing the results of converting <paramref name="bytes" /> from <paramref name="srcEncoding" /> to <paramref name="dstEncoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-690">An array of type <see cref="T:System.Byte" /> containing the results of converting <paramref name="bytes" /> from <paramref name="srcEncoding" /> to <paramref name="dstEncoding" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="190f2-691">Nell'esempio seguente converte una stringa codificata in formato Unicode in una stringa con codifica ASCII.</span><span class="sxs-lookup"><span data-stu-id="190f2-691">The following example converts a Unicode-encoded string to an ASCII-encoded string.</span></span> <span data-ttu-id="190f2-692">Poiché l'oggetto di codifica ASCII restituito dal <xref:System.Text.Encoding.ASCII%2A> proprietà Usa il fallback di sostituzione e il carattere di Pi non fa parte del set di caratteri ASCII, il carattere di pi greco viene sostituito con un punto interrogativo, come illustrato nell'esempio di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-692">Because the ASCII encoding object returned by the <xref:System.Text.Encoding.ASCII%2A> property uses replacement fallback and the Pi character is not part of the ASCII character set, the Pi character is replaced with a question mark, as the output from the example shows.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-693">
            <paramref name="srcEncoding" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-693">
              <paramref name="srcEncoding" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="190f2-694">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-694">-or-</span>
          </span>
          <span data-ttu-id="190f2-695">
            <paramref name="dstEncoding" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-695">
              <paramref name="dstEncoding" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="190f2-696">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-696">-or-</span>
          </span>
          <span data-ttu-id="190f2-697">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-697">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="190f2-698">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-698">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-699">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-699">-and-</span>
          </span>
          <span data-ttu-id="190f2-700">**srcEncoding.**</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-700">**srcEncoding.**</span>
          </span>
          <span data-ttu-id="190f2-701">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-701">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="190f2-702">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-702">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-703">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-703">-and-</span>
          </span>
          <span data-ttu-id="190f2-704">**dstEncoding.**</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-704">**dstEncoding.**</span>
          </span>
          <span data-ttu-id="190f2-705">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-705">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static byte[] Convert (System.Text.Encoding srcEncoding, System.Text.Encoding dstEncoding, byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Convert(class System.Text.Encoding srcEncoding, class System.Text.Encoding dstEncoding, unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Convert (srcEncoding As Encoding, dstEncoding As Encoding, bytes As Byte(), index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Convert(System::Text::Encoding ^ srcEncoding, System::Text::Encoding ^ dstEncoding, cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcEncoding" Type="System.Text.Encoding" />
        <Parameter Name="dstEncoding" Type="System.Text.Encoding" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="srcEncoding">
          <span data-ttu-id="190f2-706">The encoding of the source array, <c>bytes</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-706">The encoding of the source array, <c>bytes</c>.</span>
          </span>
        </param>
        <param name="dstEncoding">
          <span data-ttu-id="190f2-707">The encoding of the output array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-707">The encoding of the output array.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="190f2-708">The array of bytes to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-708">The array of bytes to convert.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="190f2-709">The index of the first element of <c>bytes</c> to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-709">The index of the first element of <c>bytes</c> to convert.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="190f2-710">The number of bytes to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-710">The number of bytes to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-711">Converts a range of bytes in a byte array from one encoding to another.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-711">Converts a range of bytes in a byte array from one encoding to another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-712">An array of type <see cref="T:System.Byte" /> containing the result of converting a range of bytes in <paramref name="bytes" /> from <paramref name="srcEncoding" /> to <paramref name="dstEncoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-712">An array of type <see cref="T:System.Byte" /> containing the result of converting a range of bytes in <paramref name="bytes" /> from <paramref name="srcEncoding" /> to <paramref name="dstEncoding" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-713">
            <paramref name="srcEncoding" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-713">
              <paramref name="srcEncoding" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="190f2-714">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-714">-or-</span>
          </span>
          <span data-ttu-id="190f2-715">
            <paramref name="dstEncoding" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-715">
              <paramref name="dstEncoding" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="190f2-716">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-716">-or-</span>
          </span>
          <span data-ttu-id="190f2-717">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-717">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-718">
            <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-718">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the byte array.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="190f2-719">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-719">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-720">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-720">-and-</span>
          </span>
          <span data-ttu-id="190f2-721">**srcEncoding.**</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-721">**srcEncoding.**</span>
          </span>
          <span data-ttu-id="190f2-722">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-722">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="190f2-723">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-723">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-724">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-724">-and-</span>
          </span>
          <span data-ttu-id="190f2-725">**dstEncoding.**</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-725">**dstEncoding.**</span>
          </span>
          <span data-ttu-id="190f2-726">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-726">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecoderFallback">
      <MemberSignature Language="C#" Value="public System.Text.DecoderFallback DecoderFallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.DecoderFallback DecoderFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.DecoderFallback" />
      <MemberSignature Language="VB.NET" Value="Public Property DecoderFallback As DecoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::DecoderFallback ^ DecoderFallback { System::Text::DecoderFallback ^ get(); void set(System::Text::DecoderFallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-727">Gets or sets the <see cref="T:System.Text.DecoderFallback" /> object for the current <see cref="T:System.Text.Encoding" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-727">Gets or sets the <see cref="T:System.Text.DecoderFallback" /> object for the current <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-728">Oggetto di fallback del decodificatore per l'oggetto <see cref="T:System.Text.Encoding" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-728">The decoder fallback object for the current <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-729">Il <xref:System.Text.DecoderFallback> oggetto rappresenta un gestore degli errori che viene richiamato quando una sequenza di byte codificata non può essere decodificata da un carattere.</span><span class="sxs-lookup"><span data-stu-id="190f2-729">The <xref:System.Text.DecoderFallback> object represents an error handler that is invoked when an encoded byte sequence cannot be decoded into a character.</span></span> <span data-ttu-id="190f2-730">Uno dei seguenti tipi di gestore è supportato:</span><span class="sxs-lookup"><span data-stu-id="190f2-730">Any one of the following handler types is supported:</span></span>  
  
-   <span data-ttu-id="190f2-731">Gestore di fallback con mapping più appropriato, che sostituisce i byte che non possono essere decodificati con un carattere di sostituzione appropriato.</span><span class="sxs-lookup"><span data-stu-id="190f2-731">A best-fit fallback handler, which replaces bytes that cannot be decoded with some suitable replacement character.</span></span>  
  
-   <span data-ttu-id="190f2-732">Gestore di fallback di sostituzione, che sostituisce i byte che non possono essere decodificati con un carattere di sostituzione arbitrari.</span><span class="sxs-lookup"><span data-stu-id="190f2-732">A replacement fallback handler, which replaces bytes that cannot be decoded with some arbitrary replacement character.</span></span> <span data-ttu-id="190f2-733">.NET Framework include un gestore di fallback di sostituzione, <xref:System.Text.DecoderFallback>, che per impostazione predefinita sostituisce i byte che non possono essere decodificati con un punto interrogativo ("?") caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-733">The .NET Framework includes one replacement fallback handler, <xref:System.Text.DecoderFallback>, which by default replaces bytes that cannot be decoded with a question mark ("?") character.</span></span>  
  
-   <span data-ttu-id="190f2-734">Un gestore di fallback di eccezione che genera un'eccezione quando non possono essere decodificati byte.</span><span class="sxs-lookup"><span data-stu-id="190f2-734">An exception fallback handler, which throws an exception when bytes cannot be decoded.</span></span> <span data-ttu-id="190f2-735">.NET Framework include un gestore di fallback di eccezione, <xref:System.Text.DecoderExceptionFallback>, che genera un <xref:System.Text.DecoderFallbackException> quando byte non possono essere decodificati.</span><span class="sxs-lookup"><span data-stu-id="190f2-735">The .NET Framework includes one exception fallback handler, <xref:System.Text.DecoderExceptionFallback>, which throws a <xref:System.Text.DecoderFallbackException> when bytes cannot be decoded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-736">The value in a set operation is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-736">The value in a set operation is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="190f2-737">A value cannot be assigned in a set operation because the current <see cref="T:System.Text.Encoding" /> object is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-737">A value cannot be assigned in a set operation because the current <see cref="T:System.Text.Encoding" /> object is read-only.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.DecoderFallback" />
        <altmember cref="T:System.Text.DecoderFallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding Default" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ Default { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-738">Gets the default encoding for this .NET implementation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-738">Gets the default encoding for this .NET implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-739">La codifica predefinita per questa implementazione di .NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-739">The default encoding for this .NET implementation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="190f2-740">Computer diversi è possibile utilizzare codifiche differenti come impostazione predefinita e la codifica predefinita è possibile modificare in un singolo computer.</span><span class="sxs-lookup"><span data-stu-id="190f2-740">Different computers can use different encodings as the default, and the default encoding can change on a single computer.</span></span> <span data-ttu-id="190f2-741">Se si utilizza il <xref:System.Text.Encoding.Default%2A> codifica per codificare e decodificare i dati trasmessi tra computer o recuperati in momenti diversi nello stesso computer, può convertire i dati in modo non corretto.</span><span class="sxs-lookup"><span data-stu-id="190f2-741">If you use the <xref:System.Text.Encoding.Default%2A> encoding to encode and decode data streamed between computers or retrieved at different times on the same computer, it may translate that data incorrectly.</span></span> <span data-ttu-id="190f2-742">Inoltre, la codifica restituito dal <xref:System.Text.Encoding.Default%2A> proprietà Usa il fallback con mapping più appropriato per caratteri non supportati vengono mappati a caratteri supportati dalla tabella codici.</span><span class="sxs-lookup"><span data-stu-id="190f2-742">In addition, the encoding returned by the <xref:System.Text.Encoding.Default%2A> property uses best-fit fallback to map unsupported characters to characters supported by the code page.</span></span> <span data-ttu-id="190f2-743">Per questi motivi, si consiglia di non utilizzando la codifica predefinita.</span><span class="sxs-lookup"><span data-stu-id="190f2-743">For these reasons, using the default encoding is not recommended.</span></span> <span data-ttu-id="190f2-744">Per garantire che i byte codificati vengano decodificati correttamente, è consigliabile utilizzare una codifica Unicode, ad esempio <xref:System.Text.UTF8Encoding> o <xref:System.Text.UnicodeEncoding>.</span><span class="sxs-lookup"><span data-stu-id="190f2-744">To ensure that encoded bytes are decoded properly, you should use a Unicode encoding, such as <xref:System.Text.UTF8Encoding> or <xref:System.Text.UnicodeEncoding>.</span></span> <span data-ttu-id="190f2-745">È inoltre possibile utilizzare un protocollo di livello superiore per venga utilizzato lo stesso formato di codifica e decodifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-745">You could also use a higher-level protocol to ensure that the same format is used for encoding and decoding.</span></span>  

### <a name="the-default-property-in-the-net-framework"></a><span data-ttu-id="190f2-746">La proprietà predefinita in .NET Framework</span><span class="sxs-lookup"><span data-stu-id="190f2-746">The Default property in the .NET Framework</span></span>

<span data-ttu-id="190f2-747">In .NET Framework sul desktop di Windows, il <xref:System.Text.Encoding.Default%2A> proprietà sempre Ottiene code attive del sistema e crea un <xref:System.Text.Encoding> oggetto che corrisponde a esso.</span><span class="sxs-lookup"><span data-stu-id="190f2-747">In the .NET Framework on the Windows desktop, the <xref:System.Text.Encoding.Default%2A> property always gets the system's active code page and creates a <xref:System.Text.Encoding> object that corresponds to it.</span></span> <span data-ttu-id="190f2-748">La pagina di codice attivo può essere una tabella codici ANSI, che include caratteri del set con caratteri aggiuntivi che variano in base alla tabella codici ASCII.</span><span class="sxs-lookup"><span data-stu-id="190f2-748">The active code page may be an ANSI code page, which includes the ASCII character set along with additional characters that vary by code page.</span></span> <span data-ttu-id="190f2-749">Poiché tutti <xref:System.Text.Encoding.Default%2A> codifiche basate su tabelle codici ANSI perdita di dati, è possibile utilizzare il <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> invece di codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-749">Because all <xref:System.Text.Encoding.Default%2A> encodings based on ANSI code pages lose data, consider using the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> encoding instead.</span></span> <span data-ttu-id="190f2-750">UTF-8 è spesso identica U + 00 a U + 7F intervallo, ma è possibile codificare i caratteri di fuori dell'intervallo ASCII senza perdita.</span><span class="sxs-lookup"><span data-stu-id="190f2-750">UTF-8 is often identical in the U+00 to U+7F range, but can encode characters outside the ASCII range without loss.</span></span>

## <a name="the-default-property-on-net-core"></a><span data-ttu-id="190f2-751">La proprietà predefinita su .NET Core</span><span class="sxs-lookup"><span data-stu-id="190f2-751">The Default property on .NET Core</span></span>

<span data-ttu-id="190f2-752">In .NET Core, il <xref:System.Text.Encoding.Default%2A> proprietà restituisce sempre il <xref:System.Text.UTF8Encoding>.</span><span class="sxs-lookup"><span data-stu-id="190f2-752">On .NET Core, the <xref:System.Text.Encoding.Default%2A> property always returns the <xref:System.Text.UTF8Encoding>.</span></span> <span data-ttu-id="190f2-753">UTF-8 è supportata in tutti i sistemi operativi (Max OS X, Windows e Linux) in esecuzione delle applicazioni .NET Core.</span><span class="sxs-lookup"><span data-stu-id="190f2-753">UTF-8 is supported on all the operating systems (Windows, Linux, and Max OS X) on which .NET Core applications run.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncoderFallback">
      <MemberSignature Language="C#" Value="public System.Text.EncoderFallback EncoderFallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.EncoderFallback EncoderFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.EncoderFallback" />
      <MemberSignature Language="VB.NET" Value="Public Property EncoderFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::EncoderFallback ^ EncoderFallback { System::Text::EncoderFallback ^ get(); void set(System::Text::EncoderFallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-754">Gets or sets the <see cref="T:System.Text.EncoderFallback" /> object for the current <see cref="T:System.Text.Encoding" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-754">Gets or sets the <see cref="T:System.Text.EncoderFallback" /> object for the current <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-755">Oggetto di fallback del codificatore per l'oggetto <see cref="T:System.Text.Encoding" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-755">The encoder fallback object for the current <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-756">Il <xref:System.Text.EncoderFallback> oggetto rappresenta un gestore degli errori che viene richiamato quando un carattere non può essere convertito in una sequenza di byte codificata.</span><span class="sxs-lookup"><span data-stu-id="190f2-756">The <xref:System.Text.EncoderFallback> object represents an error handler that is invoked when a character cannot be converted into an encoded byte sequence.</span></span> <span data-ttu-id="190f2-757">Uno dei seguenti tipi di gestore è supportato:</span><span class="sxs-lookup"><span data-stu-id="190f2-757">Any one of the following handler types is supported:</span></span>  
  
-   <span data-ttu-id="190f2-758">Gestore di fallback con mapping più appropriato, che sostituisce i caratteri che non possono essere codificati con un carattere di sostituzione appropriato.</span><span class="sxs-lookup"><span data-stu-id="190f2-758">A best-fit fallback handler, which replaces characters that cannot be encoded with some suitable replacement character.</span></span>  
  
-   <span data-ttu-id="190f2-759">Gestore di fallback di sostituzione, che sostituisce i caratteri che non possono essere codificati con un carattere di sostituzione arbitrari.</span><span class="sxs-lookup"><span data-stu-id="190f2-759">A replacement fallback handler, which replaces characters that cannot be encoded with some arbitrary replacement character.</span></span> <span data-ttu-id="190f2-760">.NET Framework include un gestore di fallback di sostituzione, <xref:System.Text.EncoderFallback>, che per impostazione predefinita sostituisce i caratteri che non possono essere codificati con un punto interrogativo ("?") caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-760">The .NET Framework includes one replacement fallback handler, <xref:System.Text.EncoderFallback>, which by default replaces characters that cannot be encoded with a question mark ("?") character.</span></span>  
  
-   <span data-ttu-id="190f2-761">Un gestore di fallback di eccezione che genera un'eccezione quando non è possibile codificare i caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-761">An exception fallback handler, which throws an exception when characters cannot be encoded.</span></span> <span data-ttu-id="190f2-762">.NET Framework include un gestore di fallback di eccezione, <xref:System.Text.EncoderExceptionFallback>, che genera un <xref:System.Text.EncoderFallbackException> quando non possono essere decodificati caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-762">The .NET Framework includes one exception fallback handler, <xref:System.Text.EncoderExceptionFallback>, which throws an <xref:System.Text.EncoderFallbackException> when characters cannot be decoded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-763">The value in a set operation is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-763">The value in a set operation is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="190f2-764">A value cannot be assigned in a set operation because the current <see cref="T:System.Text.Encoding" /> object is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-764">A value cannot be assigned in a set operation because the current <see cref="T:System.Text.Encoding" /> object is read-only.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="EncodingName">
      <MemberSignature Language="C#" Value="public virtual string EncodingName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodingName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.EncodingName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EncodingName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EncodingName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-765">When overridden in a derived class, gets the human-readable description of the current encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-765">When overridden in a derived class, gets the human-readable description of the current encoding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-766">Descrizione leggibile dell'oggetto <see cref="T:System.Text.Encoding" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-766">The human-readable description of the current <see cref="T:System.Text.Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-767">Il <xref:System.Text.Encoding.EncodingName%2A> proprietà è destinata alla visualizzazione.</span><span class="sxs-lookup"><span data-stu-id="190f2-767">The <xref:System.Text.Encoding.EncodingName%2A> property is intended for display.</span></span> <span data-ttu-id="190f2-768">Per trovare un nome che può essere passato al <xref:System.Text.Encoding.GetEncoding%2A> metodo, utilizzare il <xref:System.Text.Encoding.WebName%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="190f2-768">To find a name that can be passed to the <xref:System.Text.Encoding.GetEncoding%2A> method, use the <xref:System.Text.Encoding.WebName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-769">Nell'esempio seguente recupera i nomi diversi per ogni tipo di codifica e visualizza le codifiche con uno o più nomi diversi da <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="190f2-769">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="190f2-770">Visualizza <xref:System.Text.Encoding.EncodingName%2A> ma non compare su di essa.</span><span class="sxs-lookup"><span data-stu-id="190f2-770">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.DisplayName" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="190f2-771">The <see cref="T:System.Object" /> to compare with the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-771">The <see cref="T:System.Object" /> to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-772">Determines whether the specified <see cref="T:System.Object" /> is equal to the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-772">Determines whether the specified <see cref="T:System.Object" /> is equal to the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-773">
            <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.Encoding" /> and is equal to the current instance; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-773">
              <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.Encoding" /> and is equal to the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-774">Due istanze di <xref:System.Text.Encoding> sono considerate uguali se corrispondono alla stessa tabella codici e i relativi `EncoderFallback` e `DecoderFallback` oggetti sono uguali.</span><span class="sxs-lookup"><span data-stu-id="190f2-774">Two instances of <xref:System.Text.Encoding> are considered equal if they correspond to the same code page and their `EncoderFallback` and `DecoderFallback` objects are equal.</span></span> <span data-ttu-id="190f2-775">In particolare, tutte le tabelle codici derivate hanno una tabella codici pari a 0 e il fallback di norma sono `null` (`Nothing` in Visual Basic .NET).</span><span class="sxs-lookup"><span data-stu-id="190f2-775">In particular, derived code pages all have a code page of 0 and their fallbacks are normally `null` (`Nothing` in Visual Basic .NET).</span></span> <span data-ttu-id="190f2-776">In questo modo sono tutti considerati uguali uno a altro.</span><span class="sxs-lookup"><span data-stu-id="190f2-776">Thus they are all considered equal to one another.</span></span> <span data-ttu-id="190f2-777">Di conseguenza è che quando <xref:System.Text.Encoding.Equals%2A> viene utilizzato per popolare una tabella hash, tutte le codifiche derivate risulteranno uguali e rientrano nello stesso slot della tabella hash.</span><span class="sxs-lookup"><span data-stu-id="190f2-777">One consequence is that when <xref:System.Text.Encoding.Equals%2A> is used to populate a hash table, all derived encodings compare equal and fall into the same hash table slot.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-778">Nell'esempio seguente ottiene due istanze della stessa codifica (uno dalla tabella codici) e un altro in base al nome e viene verificata l'eguaglianza.</span><span class="sxs-lookup"><span data-stu-id="190f2-778">The following example gets two instances of the same encoding (one by codepage and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Text.Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-779">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-779">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (chars As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(cli::array &lt;char&gt; ^ chars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="190f2-780">The character array containing the characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-780">The character array containing the characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-781">When overridden in a derived class, calculates the number of bytes produced by encoding all the characters in the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-781">When overridden in a derived class, calculates the number of bytes produced by encoding all the characters in the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-782">The number of bytes produced by encoding all the characters in the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-782">The number of bytes produced by encoding all the characters in the specified character array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-783">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.Encoding.GetBytes%2A> per archiviare i byte risultanti, chiamare il <xref:System.Text.Encoding.GetByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-783">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="190f2-784">Per calcolare la dimensione massima della matrice, chiamare il <xref:System.Text.Encoding.GetMaxByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-784">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="190f2-785">Il <xref:System.Text.Encoding.GetByteCount%2A> metodo consente in genere l'allocazione di memoria inferiore, mentre il <xref:System.Text.Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="190f2-785">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="190f2-786">Il <xref:System.Text.Encoding.GetByteCount%2A> metodo determina il numero di byte risultanti dalla codifica di un set di caratteri Unicode e <xref:System.Text.Encoding.GetBytes%2A> metodo esegue l'effettiva codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-786">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="190f2-787">Il <xref:System.Text.Encoding.GetBytes%2A> metodo prevede conversioni discrete, a differenza di <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metodo che gestisce più conversioni su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-787">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-788">Versioni diverse di <xref:System.Text.Encoding.GetByteCount%2A> e <xref:System.Text.Encoding.GetBytes%2A> sono supportati.</span><span class="sxs-lookup"><span data-stu-id="190f2-788">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="190f2-789">Di seguito sono alcune considerazioni di programmazione per l'utilizzo di questi metodi:</span><span class="sxs-lookup"><span data-stu-id="190f2-789">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="190f2-790">L'app potrebbe essere necessario codificare molti caratteri di input a una tabella codici ed elaborare i caratteri utilizzando più chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-790">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="190f2-791">In questo caso, è probabilmente necessario mantenere lo stato tra chiamate, prendendo in considerazione lo stato in modo permanente dal <xref:System.Text.Encoder> dell'oggetto in uso.</span><span class="sxs-lookup"><span data-stu-id="190f2-791">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="190f2-792">Se l'applicazione gestisce gli input di stringa, è necessario utilizzare le versioni della stringa del <xref:System.Text.Encoding.GetBytes%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-792">If your app handles string inputs, you should use the string versions of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="190f2-793">La versione di buffer di caratteri Unicode di <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> consente alcune tecniche veloci, in particolare con più chiamate utilizzando il <xref:System.Text.Encoder> oggetto o l'inserimento nel buffer esistenti.</span><span class="sxs-lookup"><span data-stu-id="190f2-793">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="190f2-794">Tenere presente, tuttavia, questa versione del metodo è talvolta sicuro, poiché sono richiesti i puntatori.</span><span class="sxs-lookup"><span data-stu-id="190f2-794">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="190f2-795">Se l'app è necessario convertire una grande quantità di dati, è necessario riutilizzare il buffer di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-795">If your app must convert a large amount of data, you should reuse the output buffer.</span></span> <span data-ttu-id="190f2-796">In questo caso, il <xref:System.Text.Encoding.GetBytes%2A> versione che supporta le matrici di byte è la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-796">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="190f2-797">È consigliabile utilizzare il <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> anziché <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-797">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="190f2-798">Il metodo di conversione converte tutti i dati possibili e viene generata un'eccezione se il buffer di output è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-798">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="190f2-799">Per la codifica continua di un flusso, questo metodo è spesso la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-799">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-800">Nell'esempio seguente determina il numero di byte necessari per codificare una matrice di caratteri, codifica i caratteri e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="190f2-800">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-801">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-801">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="190f2-802">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-802">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-803">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-803">-and-</span>
          </span>
          <span data-ttu-id="190f2-804">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-804">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(valuetype System.ReadOnlySpan`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (chars As ReadOnlySpan(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(ReadOnlySpan&lt;char&gt; chars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="190f2-805">The string containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-805">The string containing the set of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-806">When overridden in a derived class, calculates the number of bytes produced by encoding the characters in the specified string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-806">When overridden in a derived class, calculates the number of bytes produced by encoding the characters in the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-807">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-807">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-808">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.Encoding.GetBytes%2A> per archiviare i byte risultanti, chiamare il <xref:System.Text.Encoding.GetByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-808">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="190f2-809">Per calcolare la dimensione massima della matrice, chiamare il <xref:System.Text.Encoding.GetMaxByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-809">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="190f2-810">Il <xref:System.Text.Encoding.GetByteCount%2A> metodo consente in genere l'allocazione di memoria inferiore, mentre il <xref:System.Text.Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="190f2-810">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="190f2-811">Il <xref:System.Text.Encoding.GetByteCount%2A> metodo determina il numero di byte risultanti dalla codifica di un set di caratteri Unicode e <xref:System.Text.Encoding.GetBytes%2A> metodo esegue l'effettiva codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-811">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="190f2-812">Il <xref:System.Text.Encoding.GetBytes%2A> metodo prevede conversioni discrete, a differenza di <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metodo che gestisce più conversioni su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-812">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-813">Versioni diverse di <xref:System.Text.Encoding.GetByteCount%2A> e <xref:System.Text.Encoding.GetBytes%2A> sono supportati.</span><span class="sxs-lookup"><span data-stu-id="190f2-813">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="190f2-814">Di seguito sono alcune considerazioni di programmazione per l'utilizzo di questi metodi:</span><span class="sxs-lookup"><span data-stu-id="190f2-814">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="190f2-815">L'app potrebbe essere necessario codificare molti caratteri di input a una tabella codici ed elaborare i caratteri utilizzando più chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-815">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="190f2-816">In questo caso, è probabilmente necessario mantenere lo stato tra chiamate, prendendo in considerazione lo stato in modo permanente dal <xref:System.Text.Encoder> dell'oggetto in uso.</span><span class="sxs-lookup"><span data-stu-id="190f2-816">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="190f2-817">Se l'applicazione gestisce l'input di stringa, la versione della stringa <xref:System.Text.Encoding.GetBytes%2A> è consigliato.</span><span class="sxs-lookup"><span data-stu-id="190f2-817">If your app handles string inputs, the string version of <xref:System.Text.Encoding.GetBytes%2A> is recommended.</span></span>  
  
-   <span data-ttu-id="190f2-818">La versione di buffer di caratteri Unicode di <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> consente alcune tecniche veloci, in particolare con più chiamate utilizzando il <xref:System.Text.Encoder> oggetto o l'inserimento nel buffer esistenti.</span><span class="sxs-lookup"><span data-stu-id="190f2-818">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="190f2-819">Tenere presente, tuttavia, questa versione del metodo è talvolta sicuro, poiché sono richiesti i puntatori.</span><span class="sxs-lookup"><span data-stu-id="190f2-819">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="190f2-820">Se l'app è necessario convertire una grande quantità di dati, riutilizzare il buffer di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-820">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="190f2-821">In questo caso, il <xref:System.Text.Encoding.GetBytes%2A> versione che supporta le matrici di byte è la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-821">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="190f2-822">È consigliabile utilizzare il <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> anziché <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-822">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="190f2-823">Il metodo di conversione converte tutti i dati possibili e viene generata un'eccezione se il buffer di output è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-823">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="190f2-824">Per la codifica continua di un flusso, questo metodo è spesso la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-824">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-825">Nell'esempio seguente determina il numero di byte necessari per codificare una stringa o un intervallo nella stringa di codifica i caratteri e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="190f2-825">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-826">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-826">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="190f2-827">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-827">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-828">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-828">-and-</span>
          </span>
          <span data-ttu-id="190f2-829">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-829">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(char* chars, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="190f2-830">A pointer to the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-830">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="190f2-831">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-831">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-832">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-832">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-833">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-833">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-834">Per calcolare la dimensione esatta della matrice che <xref:System.Text.Encoding.GetBytes%2A> richiede per archiviare i byte risultanti, è necessario chiamare il <xref:System.Text.Encoding.GetByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-834">To calculate the exact array size that <xref:System.Text.Encoding.GetBytes%2A> requires to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="190f2-835">Per calcolare la dimensione massima della matrice, chiamare il <xref:System.Text.Encoding.GetMaxByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-835">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="190f2-836">Il <xref:System.Text.Encoding.GetByteCount%2A> metodo consente in genere l'allocazione di memoria inferiore, mentre il <xref:System.Text.Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="190f2-836">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="190f2-837">Il <xref:System.Text.Encoding.GetByteCount%28System.Char%2A%2CSystem.Int32%29> metodo determina il numero di byte risultanti dalla codifica di un set di caratteri Unicode e <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> metodo esegue l'effettiva codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-837">The <xref:System.Text.Encoding.GetByteCount%28System.Char%2A%2CSystem.Int32%29> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> method performs the actual encoding.</span></span> <span data-ttu-id="190f2-838">Il <xref:System.Text.Encoding.GetBytes%2A> metodo prevede conversioni discrete, a differenza di <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metodo che gestisce più conversioni su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-838">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-839">Versioni diverse di <xref:System.Text.Encoding.GetByteCount%2A> e <xref:System.Text.Encoding.GetBytes%2A> sono supportati.</span><span class="sxs-lookup"><span data-stu-id="190f2-839">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="190f2-840">Di seguito sono riportate alcune considerazioni per l'utilizzo di questi metodi:</span><span class="sxs-lookup"><span data-stu-id="190f2-840">The following are some considerations for using these methods:</span></span>  
  
-   <span data-ttu-id="190f2-841">L'app potrebbe essere necessario codificare molti caratteri di input a una tabella codici ed elaborare i caratteri utilizzando più chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-841">Your app may need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="190f2-842">In questo caso, è probabilmente necessario mantenere lo stato tra chiamate, prendendo in considerazione lo stato in modo permanente dal <xref:System.Text.Encoder> dell'oggetto in uso.</span><span class="sxs-lookup"><span data-stu-id="190f2-842">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="190f2-843">Se l'applicazione gestisce gli input di stringa, utilizzare la versione della stringa di <xref:System.Text.Encoding.GetBytes%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-843">If your app handles string inputs, you should use the string version of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="190f2-844">La versione di buffer di caratteri Unicode di <xref:System.Text.Encoding.GetBytes%2A> consente alcune tecniche veloci, in particolare con più chiamate utilizzando il <xref:System.Text.Encoder> oggetto o l'inserimento nel buffer esistenti.</span><span class="sxs-lookup"><span data-stu-id="190f2-844">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%2A> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="190f2-845">Tenere presente, tuttavia, questa versione del metodo è talvolta sicuro, poiché sono richiesti i puntatori.</span><span class="sxs-lookup"><span data-stu-id="190f2-845">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="190f2-846">Se l'app è necessario convertire una grande quantità di dati, riutilizzare il buffer di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-846">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="190f2-847">In questo caso, il <xref:System.Text.Encoding.GetBytes%2A> versione che supporta le matrici di byte è la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-847">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="190f2-848">È consigliabile utilizzare il <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> anziché <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-848">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="190f2-849">Il metodo di conversione converte tutti i dati possibili e viene generata un'eccezione se il buffer di output è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-849">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="190f2-850">Per la codifica continua di un flusso, questo metodo è spesso la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-850">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-851">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-851">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-852">
            <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-852">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="190f2-853">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-853">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-854">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-854">-and-</span>
          </span>
          <span data-ttu-id="190f2-855">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-855">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="190f2-856">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-856">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="190f2-857">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-857">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public abstract int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="190f2-858">The character array containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-858">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="190f2-859">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-859">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="190f2-860">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-860">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-861">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-861">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-862">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-862">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-863">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.Encoding.GetBytes%2A> per archiviare i byte risultanti, chiamare il <xref:System.Text.Encoding.GetByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-863">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="190f2-864">Per calcolare la dimensione massima della matrice, chiamare il <xref:System.Text.Encoding.GetMaxByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-864">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="190f2-865">Il <xref:System.Text.Encoding.GetByteCount%2A> metodo consente in genere l'allocazione di memoria inferiore, mentre il <xref:System.Text.Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="190f2-865">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="190f2-866">Il <xref:System.Text.Encoding.GetByteCount%2A> metodo determina il numero di byte risultanti dalla codifica di un set di caratteri Unicode e <xref:System.Text.Encoding.GetBytes%2A> metodo esegue l'effettiva codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-866">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="190f2-867">Il <xref:System.Text.Encoding.GetBytes%2A> metodo prevede conversioni discrete, a differenza di <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metodo che gestisce più conversioni su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-867">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-868">Versioni diverse di <xref:System.Text.Encoding.GetByteCount%2A> e <xref:System.Text.Encoding.GetBytes%2A> sono supportati.</span><span class="sxs-lookup"><span data-stu-id="190f2-868">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="190f2-869">Di seguito sono alcune considerazioni di programmazione per l'utilizzo di questi metodi:</span><span class="sxs-lookup"><span data-stu-id="190f2-869">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="190f2-870">L'app potrebbe essere necessario codificare molti caratteri di input a una tabella codici ed elaborare i caratteri utilizzando più chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-870">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="190f2-871">In questo caso, è probabilmente necessario mantenere lo stato tra chiamate, prendendo in considerazione lo stato in modo permanente dal <xref:System.Text.Encoder> dell'oggetto in uso.</span><span class="sxs-lookup"><span data-stu-id="190f2-871">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="190f2-872">Se l'applicazione gestisce l'input di stringa, la versione della stringa <xref:System.Text.Encoding.GetBytes%2A> è consigliato.</span><span class="sxs-lookup"><span data-stu-id="190f2-872">If your app handles string inputs, the string version of <xref:System.Text.Encoding.GetBytes%2A> is recommended.</span></span>  
  
-   <span data-ttu-id="190f2-873">La versione di buffer di caratteri Unicode di <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> consente alcune tecniche veloci, in particolare con più chiamate utilizzando il <xref:System.Text.Encoder> oggetto o l'inserimento nel buffer esistenti.</span><span class="sxs-lookup"><span data-stu-id="190f2-873">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="190f2-874">Tenere presente, tuttavia, questa versione del metodo è talvolta sicuro, poiché sono richiesti i puntatori.</span><span class="sxs-lookup"><span data-stu-id="190f2-874">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="190f2-875">Se l'app è necessario convertire una grande quantità di dati, riutilizzare il buffer di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-875">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="190f2-876">In questo caso, il <xref:System.Text.Encoding.GetBytes%2A> versione che supporta le matrici di byte è la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-876">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="190f2-877">È consigliabile utilizzare il <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> anziché <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-877">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="190f2-878">Il metodo di conversione converte tutti i dati possibili e viene generata un'eccezione se il buffer di output è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-878">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="190f2-879">Per la codifica continua di un flusso, questo metodo è spesso la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-879">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-880">Nell'esempio seguente determina il numero di byte necessari per codificare una matrice di caratteri di tre caratteri, codifica i caratteri e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="190f2-880">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-881">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-881">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-882">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-882">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="190f2-883">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-883">-or-</span>
          </span>
          <span data-ttu-id="190f2-884">
            <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-884">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="190f2-885">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-885">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-886">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-886">-and-</span>
          </span>
          <span data-ttu-id="190f2-887">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-887">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public int GetByteCount (string s, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetByteCount(string s, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteCount (s As String, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetByteCount(System::String ^ s, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="index">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-888">When overridden in a derived class, encodes a set of characters into a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-888">When overridden in a derived class, encodes a set of characters into a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As Char()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(cli::array &lt;char&gt; ^ chars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="190f2-889">The character array containing the characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-889">The character array containing the characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-890">When overridden in a derived class, encodes all the characters in the specified character array into a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-890">When overridden in a derived class, encodes all the characters in the specified character array into a sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-891">A byte array containing the results of encoding the specified set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-891">A byte array containing the results of encoding the specified set of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-892">Se il conversione dei dati sono disponibili solo in blocchi sequenziali (ad esempio i dati letti da un flusso) o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, è necessario utilizzare il <xref:System.Text.Decoder> o <xref:System.Text.Encoder> fornito dal <xref:System.Text.Encoding.GetDecoder%2A> metodo o <xref:System.Text.Encoding.GetEncoder%2A> (metodo), rispettivamente, di una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="190f2-892">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="190f2-893">Il <xref:System.Text.Encoding.GetByteCount%2A> metodo determina il numero di byte risultanti dalla codifica di un set di caratteri Unicode e <xref:System.Text.Encoding.GetBytes%2A> metodo esegue l'effettiva codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-893">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="190f2-894">Il <xref:System.Text.Encoding.GetBytes%2A> metodo prevede conversioni discrete, a differenza di <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metodo che gestisce più conversioni su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-894">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-895">Versioni diverse di <xref:System.Text.Encoding.GetByteCount%2A> e <xref:System.Text.Encoding.GetBytes%2A> sono supportati.</span><span class="sxs-lookup"><span data-stu-id="190f2-895">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="190f2-896">Di seguito sono alcune considerazioni di programmazione per l'utilizzo di questi metodi:</span><span class="sxs-lookup"><span data-stu-id="190f2-896">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="190f2-897">L'app potrebbe essere necessario codificare molti caratteri di input a una tabella codici ed elaborare i caratteri utilizzando più chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-897">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="190f2-898">In questo caso, è probabilmente necessario mantenere lo stato tra chiamate, prendendo in considerazione lo stato in modo permanente dal <xref:System.Text.Encoder> dell'oggetto in uso.</span><span class="sxs-lookup"><span data-stu-id="190f2-898">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="190f2-899">(Ad esempio, una sequenza di caratteri che include coppie di surrogati potrebbe terminare con un carattere surrogato alto.</span><span class="sxs-lookup"><span data-stu-id="190f2-899">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="190f2-900">Il <xref:System.Text.Encoder> ricorderà tale surrogato alto in modo che può essere combinato con un surrogato basso all'inizio di una chiamata successiva.</span><span class="sxs-lookup"><span data-stu-id="190f2-900">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="190f2-901"><xref:System.Text.Encoding> non sarà in grado di gestire lo stato, il carattere verrà quindi inviata per la <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="190f2-901"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="190f2-902">Se l'applicazione gestisce gli input di stringa, è necessario chiamare la versione della stringa di <xref:System.Text.Encoding.GetBytes%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-902">If your app handles string inputs, you should call the string version of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="190f2-903">La versione di buffer di caratteri Unicode di <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> consente alcune tecniche veloci, in particolare con più chiamate utilizzando il <xref:System.Text.Encoder> oggetto o l'inserimento nel buffer esistenti.</span><span class="sxs-lookup"><span data-stu-id="190f2-903">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="190f2-904">Tenere presente, tuttavia, questa versione del metodo è talvolta sicuro, poiché sono richiesti i puntatori.</span><span class="sxs-lookup"><span data-stu-id="190f2-904">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="190f2-905">Se l'app è necessario convertire una grande quantità di dati, riutilizzare il buffer di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-905">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="190f2-906">In questo caso, il <xref:System.Text.Encoding.GetBytes%2A> versione che supporta le matrici di byte è la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-906">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="190f2-907">È consigliabile utilizzare il <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> anziché <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-907">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="190f2-908">Il metodo di conversione converte tutti i dati possibili e viene generata un'eccezione se il buffer di output è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-908">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="190f2-909">Per la codifica continua di un flusso, questo metodo è spesso la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-909">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-910">Nell'esempio seguente determina il numero di byte necessari per codificare una matrice di caratteri, codifica i caratteri e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="190f2-910">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-911">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-911">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="190f2-912">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-912">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-913">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-913">-and-</span>
          </span>
          <span data-ttu-id="190f2-914">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-914">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="190f2-915">The string containing the characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-915">The string containing the characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-916">When overridden in a derived class, encodes all the characters in the specified string into a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-916">When overridden in a derived class, encodes all the characters in the specified string into a sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-917">A byte array containing the results of encoding the specified set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-917">A byte array containing the results of encoding the specified set of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-918">Se il conversione dei dati sono disponibili solo in blocchi sequenziali (ad esempio i dati letti da un flusso) o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, è necessario utilizzare il <xref:System.Text.Decoder> o <xref:System.Text.Encoder> fornito dal <xref:System.Text.Encoding.GetDecoder%2A> metodo o <xref:System.Text.Encoding.GetEncoder%2A> (metodo), rispettivamente, di una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="190f2-918">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="190f2-919">Il <xref:System.Text.Encoding.GetByteCount%2A> metodo determina il numero di byte risultanti dalla codifica di un set di caratteri Unicode e <xref:System.Text.Encoding.GetBytes%2A> metodo esegue l'effettiva codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-919">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="190f2-920">Il <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> metodo prevede conversioni discrete, a differenza di <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metodo che gestisce più conversioni su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-920">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-921">Versioni diverse di <xref:System.Text.Encoding.GetByteCount%2A> e <xref:System.Text.Encoding.GetBytes%2A> sono supportati.</span><span class="sxs-lookup"><span data-stu-id="190f2-921">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="190f2-922">Di seguito sono alcune considerazioni di programmazione per l'utilizzo di questi metodi:</span><span class="sxs-lookup"><span data-stu-id="190f2-922">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="190f2-923">L'app potrebbe essere necessario codificare molti caratteri di input a una tabella codici ed elaborare i caratteri utilizzando più chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-923">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="190f2-924">In questo caso, è probabilmente necessario mantenere lo stato tra chiamate, prendendo in considerazione lo stato in modo permanente dal <xref:System.Text.Encoder> dell'oggetto in uso.</span><span class="sxs-lookup"><span data-stu-id="190f2-924">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="190f2-925">(Ad esempio, una sequenza di caratteri che include coppie di surrogati potrebbe terminare con un carattere surrogato alto.</span><span class="sxs-lookup"><span data-stu-id="190f2-925">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="190f2-926">Il <xref:System.Text.Encoder> ricorderà tale surrogato alto in modo che può essere combinato con un surrogato basso all'inizio di una chiamata successiva.</span><span class="sxs-lookup"><span data-stu-id="190f2-926">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="190f2-927"><xref:System.Text.Encoding> non sarà in grado di gestire lo stato, il carattere verrà quindi inviata per la <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="190f2-927"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="190f2-928">Se l'applicazione gestisce gli input di stringa, utilizzare la versione della stringa <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-928">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="190f2-929">La versione di buffer di caratteri Unicode di <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> consente alcune tecniche veloci, in particolare con più chiamate utilizzando il <xref:System.Text.Encoder> oggetto o l'inserimento nel buffer esistenti.</span><span class="sxs-lookup"><span data-stu-id="190f2-929">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="190f2-930">Tenere presente, tuttavia, questa versione del metodo è talvolta sicuro, poiché sono richiesti i puntatori.</span><span class="sxs-lookup"><span data-stu-id="190f2-930">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="190f2-931">Se l'app è necessario convertire una grande quantità di dati, riutilizzare il buffer di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-931">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="190f2-932">In questo caso, il <xref:System.Text.Encoding.GetBytes%2A> versione che supporta le matrici di byte è la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-932">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="190f2-933">È consigliabile utilizzare il <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> anziché <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-933">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="190f2-934">Il metodo di conversione converte tutti i dati possibili e viene generata un'eccezione se il buffer di output è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-934">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="190f2-935">Per la codifica continua di un flusso, questo metodo è spesso la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-935">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-936">Nell'esempio seguente determina il numero di byte necessari per codificare una stringa o un intervallo nella stringa di codifica i caratteri e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="190f2-936">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-937">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-937">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="190f2-938">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-938">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-939">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-939">-and-</span>
          </span>
          <span data-ttu-id="190f2-940">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-940">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As Char(), index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="190f2-941">The character array containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-941">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="190f2-942">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-942">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="190f2-943">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-943">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-944">When overridden in a derived class, encodes a set of characters from the specified character array into a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-944">When overridden in a derived class, encodes a set of characters from the specified character array into a sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-945">A byte array containing the results of encoding the specified set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-945">A byte array containing the results of encoding the specified set of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-946">Se il conversione dei dati sono disponibili solo in blocchi sequenziali (ad esempio i dati letti da un flusso) o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, è necessario utilizzare il <xref:System.Text.Decoder> o <xref:System.Text.Encoder> fornito dal <xref:System.Text.Encoding.GetDecoder%2A> metodo o <xref:System.Text.Encoding.GetEncoder%2A> (metodo), rispettivamente, di una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="190f2-946">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="190f2-947">Il <xref:System.Text.Encoding.GetByteCount%2A> metodo determina il numero di byte risultanti dalla codifica di un set di caratteri Unicode e <xref:System.Text.Encoding.GetBytes%2A> metodo esegue l'effettiva codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-947">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="190f2-948">Il <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> metodo prevede conversioni discrete, a differenza di <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metodo che gestisce più conversioni su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-948">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-949">Versioni diverse di <xref:System.Text.Encoding.GetByteCount%2A> e <xref:System.Text.Encoding.GetBytes%2A> sono supportati.</span><span class="sxs-lookup"><span data-stu-id="190f2-949">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="190f2-950">Di seguito sono alcune considerazioni di programmazione per l'utilizzo di questi metodi:</span><span class="sxs-lookup"><span data-stu-id="190f2-950">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="190f2-951">L'app potrebbe essere necessario codificare molti caratteri di input a una tabella codici ed elaborare i caratteri utilizzando più chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-951">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="190f2-952">In questo caso, è probabilmente necessario mantenere lo stato tra chiamate, prendendo in considerazione lo stato in modo permanente dal <xref:System.Text.Encoder> dell'oggetto in uso.</span><span class="sxs-lookup"><span data-stu-id="190f2-952">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="190f2-953">(Ad esempio, una sequenza di caratteri che include coppie di surrogati potrebbe terminare con un carattere surrogato alto.</span><span class="sxs-lookup"><span data-stu-id="190f2-953">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="190f2-954">Il <xref:System.Text.Encoder> ricorderà tale surrogato alto in modo che può essere combinato con un surrogato basso all'inizio di una chiamata successiva.</span><span class="sxs-lookup"><span data-stu-id="190f2-954">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="190f2-955"><xref:System.Text.Encoding> non sarà in grado di gestire lo stato, il carattere verrà quindi inviata per la <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="190f2-955"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="190f2-956">Se l'applicazione gestisce gli input di stringa, utilizzare la versione della stringa <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-956">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="190f2-957">La versione di buffer di caratteri Unicode di <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> consente alcune tecniche veloci, in particolare con più chiamate utilizzando il <xref:System.Text.Encoder> oggetto o l'inserimento nel buffer esistenti.</span><span class="sxs-lookup"><span data-stu-id="190f2-957">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="190f2-958">Tenere presente, tuttavia, questa versione del metodo è talvolta sicuro, poiché sono richiesti i puntatori.</span><span class="sxs-lookup"><span data-stu-id="190f2-958">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="190f2-959">Se l'app è necessario convertire una grande quantità di dati, riutilizzare il buffer di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-959">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="190f2-960">In questo caso, il <xref:System.Text.Encoding.GetBytes%2A> versione che supporta le matrici di byte è la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-960">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="190f2-961">È consigliabile utilizzare il <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> anziché <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-961">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="190f2-962">Il metodo di conversione converte tutti i dati possibili e viene generata un'eccezione se il buffer di output è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-962">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="190f2-963">Per la codifica continua di un flusso, questo metodo è spesso la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-963">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-964">Nell'esempio seguente determina il numero di byte necessari per codificare una matrice di caratteri di tre caratteri, codifica i caratteri e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="190f2-964">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-965">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-965">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-966">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-966">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="190f2-967">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-967">-or-</span>
          </span>
          <span data-ttu-id="190f2-968">
            <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-968">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="190f2-969">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-969">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-970">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-970">-and-</span>
          </span>
          <span data-ttu-id="190f2-971">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-971">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public byte[] GetBytes (string s, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetBytes(string s, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBytes (s As String, index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="index">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="190f2-972">A pointer to the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-972">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="190f2-973">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-973">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="190f2-974">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-974">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="190f2-975">The maximum number of bytes to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-975">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-976">When overridden in a derived class, encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-976">When overridden in a derived class, encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-977">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-977">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-978">Per calcolare la dimensione esatta della matrice che <xref:System.Text.Encoding.GetBytes%2A> è necessario per archiviare i byte risultanti, chiamare il metodo di <xref:System.Text.Encoding.GetByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-978">To calculate the exact array size that <xref:System.Text.Encoding.GetBytes%2A> requires to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="190f2-979">Per calcolare la dimensione massima della matrice, chiamare il <xref:System.Text.Encoding.GetMaxByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-979">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="190f2-980">Il <xref:System.Text.Encoding.GetByteCount%2A> metodo consente in genere l'allocazione di memoria inferiore, mentre il <xref:System.Text.Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="190f2-980">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="190f2-981">Se il conversione dei dati sono disponibili solo in blocchi sequenziali (ad esempio i dati letti da un flusso) o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, è necessario utilizzare il <xref:System.Text.Decoder> o <xref:System.Text.Encoder> oggetto fornito dal <c5/> o <xref:System.Text.Encoding.GetEncoder%2A> (metodo), rispettivamente, di una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="190f2-981">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.Encoding.GetDecoder%2A> or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="190f2-982">Il <xref:System.Text.Encoding.GetByteCount%2A> metodo determina il numero di byte risultanti dalla codifica di un set di caratteri Unicode e <xref:System.Text.Encoding.GetBytes%2A> metodo esegue l'effettiva codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-982">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="190f2-983">Il <xref:System.Text.Encoding.GetBytes%2A> metodo prevede conversioni discrete, a differenza di <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metodo che gestisce più conversioni su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-983">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-984">Versioni diverse di <xref:System.Text.Encoding.GetByteCount%2A> e <xref:System.Text.Encoding.GetBytes%2A> sono supportati.</span><span class="sxs-lookup"><span data-stu-id="190f2-984">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="190f2-985">Di seguito sono alcune considerazioni di programmazione per l'utilizzo di questi metodi:</span><span class="sxs-lookup"><span data-stu-id="190f2-985">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="190f2-986">L'app potrebbe essere necessario codificare molti caratteri di input a una tabella codici ed elaborare i caratteri utilizzando più chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-986">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="190f2-987">In questo caso, è probabilmente necessario mantenere lo stato tra chiamate, prendendo in considerazione lo stato in modo permanente dal <xref:System.Text.Encoder> dell'oggetto in uso.</span><span class="sxs-lookup"><span data-stu-id="190f2-987">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="190f2-988">(Ad esempio, una sequenza di caratteri che include coppie di surrogati potrebbe terminare con un carattere surrogato alto.</span><span class="sxs-lookup"><span data-stu-id="190f2-988">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="190f2-989">Il <xref:System.Text.Encoder> ricorderà tale surrogato alto in modo che può essere combinato con un surrogato basso all'inizio di una chiamata successiva.</span><span class="sxs-lookup"><span data-stu-id="190f2-989">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="190f2-990"><xref:System.Text.Encoding> non sarà in grado di gestire lo stato, il carattere verrà quindi inviata per la <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="190f2-990"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="190f2-991">Se l'applicazione gestisce gli input di stringa, utilizzare la versione della stringa <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-991">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="190f2-992">La versione di buffer di caratteri Unicode di <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> consente alcune tecniche veloci, in particolare con più chiamate utilizzando il <xref:System.Text.Encoder> oggetto o l'inserimento nel buffer esistenti.</span><span class="sxs-lookup"><span data-stu-id="190f2-992">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="190f2-993">Tenere presente, tuttavia, questa versione del metodo è talvolta sicuro, poiché sono richiesti i puntatori.</span><span class="sxs-lookup"><span data-stu-id="190f2-993">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="190f2-994">Se l'app è necessario convertire una grande quantità di dati, riutilizzare il buffer di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-994">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="190f2-995">In questo caso, il <xref:System.Text.Encoding.GetBytes%2A> versione che supporta le matrici di byte è la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-995">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="190f2-996">È consigliabile utilizzare il <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> anziché <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-996">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="190f2-997">Il metodo di conversione converte tutti i dati possibili e viene generata un'eccezione se il buffer di output è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-997">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="190f2-998">Per la codifica continua di un flusso, questo metodo è spesso la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-998">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-999">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-999">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="190f2-1000">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1000">-or-</span>
          </span>
          <span data-ttu-id="190f2-1001">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1001">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-1002">
            <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1002">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="190f2-1003">
            <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1003">
              <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="190f2-1004">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1004">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-1005">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1005">-and-</span>
          </span>
          <span data-ttu-id="190f2-1006">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1006">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="190f2-1007">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1007">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="190f2-1008">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1008">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public abstract int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="190f2-1009">The character array containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1009">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="190f2-1010">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1010">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="190f2-1011">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1011">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="190f2-1012">The byte array to contain the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1012">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="190f2-1013">The index at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1013">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1014">When overridden in a derived class, encodes a set of characters from the specified character array into the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1014">When overridden in a derived class, encodes a set of characters from the specified character array into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1015">The actual number of bytes written into <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1015">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1016">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.Encoding.GetBytes%2A> per archiviare i byte risultanti, è necessario chiamare il <xref:System.Text.Encoding.GetByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1016">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="190f2-1017">Per calcolare la dimensione massima della matrice, chiamare il <xref:System.Text.Encoding.GetMaxByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1017">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="190f2-1018">Il <xref:System.Text.Encoding.GetByteCount%2A> metodo consente in genere l'allocazione di memoria inferiore, mentre il <xref:System.Text.Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="190f2-1018">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="190f2-1019">Se il conversione dei dati sono disponibili solo in blocchi sequenziali (ad esempio i dati letti da un flusso) o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, è necessario utilizzare il <xref:System.Text.Decoder> o <xref:System.Text.Encoder> fornito dal <xref:System.Text.Encoding.GetDecoder%2A> metodo o <xref:System.Text.Encoding.GetEncoder%2A> (metodo), rispettivamente, di una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="190f2-1019">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="190f2-1020">Il <xref:System.Text.Encoding.GetByteCount%2A> metodo determina il numero di byte risultanti dalla codifica di un set di caratteri Unicode e <xref:System.Text.Encoding.GetBytes%2A> metodo esegue l'effettiva codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1020">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="190f2-1021">Il <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> metodo prevede conversioni discrete, a differenza di <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metodo che gestisce più conversioni su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1021">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-1022">Versioni diverse di <xref:System.Text.Encoding.GetByteCount%2A> e <xref:System.Text.Encoding.GetBytes%2A> sono supportati.</span><span class="sxs-lookup"><span data-stu-id="190f2-1022">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="190f2-1023">Di seguito sono alcune considerazioni di programmazione per l'utilizzo di questi metodi:</span><span class="sxs-lookup"><span data-stu-id="190f2-1023">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="190f2-1024">L'app potrebbe essere necessario codificare molti caratteri di input a una tabella codici ed elaborare i caratteri utilizzando più chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-1024">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="190f2-1025">In questo caso, è probabilmente necessario mantenere lo stato tra chiamate, prendendo in considerazione lo stato in modo permanente dal <xref:System.Text.Encoder> dell'oggetto in uso.</span><span class="sxs-lookup"><span data-stu-id="190f2-1025">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="190f2-1026">(Ad esempio, una sequenza di caratteri che include coppie di surrogati potrebbe terminare con un carattere surrogato alto.</span><span class="sxs-lookup"><span data-stu-id="190f2-1026">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="190f2-1027">Il <xref:System.Text.Encoder> ricorderà tale surrogato alto in modo che può essere combinato con un surrogato basso all'inizio di una chiamata successiva.</span><span class="sxs-lookup"><span data-stu-id="190f2-1027">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="190f2-1028"><xref:System.Text.Encoding> non sarà in grado di gestire lo stato, il carattere verrà quindi inviata per la <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="190f2-1028"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="190f2-1029">Se l'applicazione gestisce gli input di stringa, utilizzare la versione della stringa <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1029">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="190f2-1030">La versione di buffer di caratteri Unicode di <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> consente alcune tecniche veloci, in particolare con più chiamate utilizzando il <xref:System.Text.Encoder> oggetto o l'inserimento nel buffer esistenti.</span><span class="sxs-lookup"><span data-stu-id="190f2-1030">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="190f2-1031">Tenere presente, tuttavia, questa versione del metodo è talvolta sicuro, poiché sono richiesti i puntatori.</span><span class="sxs-lookup"><span data-stu-id="190f2-1031">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="190f2-1032">Se l'app è necessario convertire una grande quantità di dati, riutilizzare il buffer di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-1032">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="190f2-1033">In questo caso, il <xref:System.Text.Encoding.GetBytes%2A> versione che supporta le matrici di byte è la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1033">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="190f2-1034">È consigliabile utilizzare il <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> anziché <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1034">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="190f2-1035">Il metodo di conversione converte tutti i dati possibili e viene generata un'eccezione se il buffer di output è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1035">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="190f2-1036">Per la codifica continua di un flusso, questo metodo è spesso la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1036">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1037">Nell'esempio seguente determina il numero di byte necessari per codificare una matrice di caratteri di tre caratteri, codifica i caratteri e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="190f2-1037">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-1038">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1038">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="190f2-1039">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1039">-or-</span>
          </span>
          <span data-ttu-id="190f2-1040">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1040">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-1041">
            <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1041">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="190f2-1042">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1042">-or-</span>
          </span>
          <span data-ttu-id="190f2-1043">
            <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1043">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="190f2-1044">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1044">-or-</span>
          </span>
          <span data-ttu-id="190f2-1045">
            <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1045">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="190f2-1046">
            <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1046">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="190f2-1047">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1047">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-1048">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1048">-and-</span>
          </span>
          <span data-ttu-id="190f2-1049">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1049">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="190f2-1050">The string containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1050">The string containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="190f2-1051">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1051">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="190f2-1052">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1052">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="190f2-1053">The byte array to contain the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1053">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="190f2-1054">The index at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1054">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1055">When overridden in a derived class, encodes a set of characters from the specified string into the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1055">When overridden in a derived class, encodes a set of characters from the specified string into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1056">The actual number of bytes written into <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1056">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1057">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.Encoding.GetBytes%2A> per archiviare i byte risultanti, è necessario chiamare il <xref:System.Text.Encoding.GetByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1057">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="190f2-1058">Per calcolare la dimensione massima della matrice, chiamare il <xref:System.Text.Encoding.GetMaxByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1058">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="190f2-1059">Il <xref:System.Text.Encoding.GetByteCount%2A> metodo consente in genere l'allocazione di memoria inferiore, mentre il <xref:System.Text.Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="190f2-1059">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="190f2-1060">Se il conversione dei dati sono disponibili solo in blocchi sequenziali (ad esempio i dati letti da un flusso) o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, è necessario utilizzare il <xref:System.Text.Decoder> o <xref:System.Text.Encoder> fornito dal <xref:System.Text.Encoding.GetDecoder%2A> metodo o <xref:System.Text.Encoding.GetEncoder%2A> (metodo), rispettivamente, di una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="190f2-1060">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="190f2-1061">Il <xref:System.Text.Encoding.GetByteCount%2A> metodo determina il numero di byte risultanti dalla codifica di un set di caratteri Unicode e <xref:System.Text.Encoding.GetBytes%2A> metodo esegue l'effettiva codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1061">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="190f2-1062">Il <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> metodo prevede conversioni discrete, a differenza di <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metodo che gestisce più conversioni su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1062">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-1063">Versioni diverse di <xref:System.Text.Encoding.GetByteCount%2A> e <xref:System.Text.Encoding.GetBytes%2A> sono supportati.</span><span class="sxs-lookup"><span data-stu-id="190f2-1063">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="190f2-1064">Di seguito sono alcune considerazioni di programmazione per l'utilizzo di questi metodi:</span><span class="sxs-lookup"><span data-stu-id="190f2-1064">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="190f2-1065">L'app potrebbe essere necessario codificare molti caratteri di input a una tabella codici ed elaborare i caratteri utilizzando più chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-1065">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="190f2-1066">In questo caso, è probabilmente necessario mantenere lo stato tra chiamate, prendendo in considerazione lo stato in modo permanente dal <xref:System.Text.Encoder> dell'oggetto in uso.</span><span class="sxs-lookup"><span data-stu-id="190f2-1066">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="190f2-1067">(Ad esempio, una sequenza di caratteri che include coppie di surrogati potrebbe terminare con un carattere surrogato alto.</span><span class="sxs-lookup"><span data-stu-id="190f2-1067">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="190f2-1068">Il <xref:System.Text.Encoder> ricorderà tale surrogato alto in modo che può essere combinato con un surrogato basso all'inizio di una chiamata successiva.</span><span class="sxs-lookup"><span data-stu-id="190f2-1068">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="190f2-1069"><xref:System.Text.Encoding> non sarà in grado di gestire lo stato, il carattere verrà quindi inviata per la <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="190f2-1069"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="190f2-1070">Se l'applicazione gestisce gli input di stringa, utilizzare la versione della stringa <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1070">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="190f2-1071">La versione di buffer di caratteri Unicode di <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> consente alcune tecniche veloci, in particolare con più chiamate utilizzando il <xref:System.Text.Encoder> oggetto o l'inserimento nel buffer esistenti.</span><span class="sxs-lookup"><span data-stu-id="190f2-1071">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="190f2-1072">Tenere presente, tuttavia, questa versione del metodo è talvolta sicuro, poiché sono richiesti i puntatori.</span><span class="sxs-lookup"><span data-stu-id="190f2-1072">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="190f2-1073">Se l'app è necessario convertire una grande quantità di dati, riutilizzare il buffer di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-1073">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="190f2-1074">In questo caso, il <xref:System.Text.Encoding.GetBytes%2A> versione che supporta le matrici di byte è la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1074">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="190f2-1075">È consigliabile utilizzare il <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> anziché <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1075">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="190f2-1076">Il metodo di conversione converte tutti i dati possibili e viene generata un'eccezione se il buffer di output è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1076">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="190f2-1077">Per la codifica continua di un flusso, questo metodo è spesso la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1077">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1078">Nell'esempio seguente determina il numero di byte necessari per codificare una stringa o un intervallo nella stringa di codifica i caratteri e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="190f2-1078">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-1079">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1079">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="190f2-1080">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1080">-or-</span>
          </span>
          <span data-ttu-id="190f2-1081">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1081">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-1082">
            <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1082">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="190f2-1083">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1083">-or-</span>
          </span>
          <span data-ttu-id="190f2-1084">
            <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1084">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="190f2-1085">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1085">-or-</span>
          </span>
          <span data-ttu-id="190f2-1086">
            <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1086">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="190f2-1087">
            <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1087">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="190f2-1088">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1088">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-1089">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1089">-and-</span>
          </span>
          <span data-ttu-id="190f2-1090">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1090">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1091">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1091">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="190f2-1092">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1092">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1093">When overridden in a derived class, calculates the number of characters produced by decoding all the bytes in the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1093">When overridden in a derived class, calculates the number of characters produced by decoding all the bytes in the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1094">The number of characters produced by decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1094">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1095">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> per archiviare i caratteri risultanti, è consigliabile utilizzare il <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1095">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method.</span></span> <span data-ttu-id="190f2-1096">Per calcolare la dimensione massima della matrice, è consigliabile utilizzare il <xref:System.Text.Encoding.GetMaxCharCount%28System.Int32%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1096">To calculate the maximum array size, you should use the <xref:System.Text.Encoding.GetMaxCharCount%28System.Int32%29> method.</span></span> <span data-ttu-id="190f2-1097">Il <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> metodo consente in genere l'allocazione di memoria inferiore, mentre il <xref:System.Text.Encoding.GetMaxCharCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="190f2-1097">The <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="190f2-1098">Il <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> metodo determina il numero di caratteri risultanti dalla decodifica di una sequenza di byte e <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> metodo esegue la decodifica effettiva.</span><span class="sxs-lookup"><span data-stu-id="190f2-1098">The <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method determines how many characters result in decoding a sequence of bytes, and the  <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> method performs the actual decoding.</span></span> <span data-ttu-id="190f2-1099">Il <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> metodo prevede conversioni discrete, a differenza di <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> metodo che gestisce più passaggi su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1099">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-1100">Versioni diverse di <xref:System.Text.Encoding.GetCharCount%2A> e <xref:System.Text.Encoding.GetChars%2A> sono supportati.</span><span class="sxs-lookup"><span data-stu-id="190f2-1100">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="190f2-1101">Di seguito sono alcune considerazioni di programmazione per l'utilizzo di questi metodi:</span><span class="sxs-lookup"><span data-stu-id="190f2-1101">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="190f2-1102">L'app potrebbe essere necessario decodificare più byte di input da una tabella codici ed elaborare i byte utilizzando più chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-1102">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="190f2-1103">In questo caso, è probabilmente necessario mantenere lo stato tra le chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-1103">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="190f2-1104">Se l'applicazione gestisce gli output di stringa, è necessario utilizzare il <xref:System.Text.Encoding.GetString%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1104">If your app handles string outputs, you should use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="190f2-1105">Poiché questo metodo deve controllare la lunghezza della stringa e allocare un buffer, è leggermente più lento, ma il valore risultante <xref:System.String> tipo è preferibile.</span><span class="sxs-lookup"><span data-stu-id="190f2-1105">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="190f2-1106">La versione byte di <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> consente alcune tecniche veloci, in particolare con più chiamate al buffer di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="190f2-1106">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="190f2-1107">Tenere presente, tuttavia, questa versione del metodo è talvolta sicuro, poiché sono richiesti i puntatori.</span><span class="sxs-lookup"><span data-stu-id="190f2-1107">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="190f2-1108">Se l'app è necessario convertire una grande quantità di dati, riutilizzare il buffer di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-1108">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="190f2-1109">In questo caso, il [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > versione che supporta i caratteri di output buffer è la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1109">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="190f2-1110">È consigliabile utilizzare il <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> anziché <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1110">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="190f2-1111">Il metodo di conversione converte tutti i dati possibili e genera un'eccezione se il buffer di output è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1111">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="190f2-1112">Per la decodifica continua di un flusso, questo metodo è spesso la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1112">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1113">Nell'esempio seguente consente di codificare una stringa in una matrice di byte e quindi decodifica i byte in una matrice di caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-1113">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-1114">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1114">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="190f2-1115">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1115">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-1116">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1116">-and-</span>
          </span>
          <span data-ttu-id="190f2-1117">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1117">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(System::Byte* bytes, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="190f2-1118">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1118">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="190f2-1119">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1119">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1120">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1120">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1121">The number of characters produced by decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1121">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1122">Per calcolare la dimensione esatta della matrice che <xref:System.Text.Encoding.GetChars%2A> richiede per archiviare i caratteri risultanti, è consigliabile utilizzare il <xref:System.Text.Encoding.GetCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1122">To calculate the exact array size that <xref:System.Text.Encoding.GetChars%2A> requires to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="190f2-1123">Per calcolare la dimensione massima della matrice, utilizzare il <xref:System.Text.Encoding.GetMaxCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1123">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="190f2-1124">Il <xref:System.Text.Encoding.GetCharCount%2A> metodo consente in genere l'allocazione di memoria inferiore, mentre il <xref:System.Text.Encoding.GetMaxCharCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="190f2-1124">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="190f2-1125">Il <xref:System.Text.Encoding.GetCharCount%2A> metodo determina il numero di caratteri risultanti dalla decodifica di una sequenza di byte e <xref:System.Text.Encoding.GetChars%2A> metodo esegue la decodifica effettiva.</span><span class="sxs-lookup"><span data-stu-id="190f2-1125">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="190f2-1126">Il <xref:System.Text.Encoding.GetChars%2A> metodo prevede conversioni discrete, a differenza di <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> metodo che gestisce più passaggi su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1126">The <xref:System.Text.Encoding.GetChars%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-1127">Versioni diverse di <xref:System.Text.Encoding.GetCharCount%2A> e <xref:System.Text.Encoding.GetChars%2A> sono supportati.</span><span class="sxs-lookup"><span data-stu-id="190f2-1127">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="190f2-1128">Di seguito sono alcune considerazioni di programmazione per l'utilizzo di questi metodi:</span><span class="sxs-lookup"><span data-stu-id="190f2-1128">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="190f2-1129">L'app potrebbe essere necessario decodificare più byte di input da una tabella codici ed elaborare i byte utilizzando più chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-1129">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="190f2-1130">In questo caso, è probabilmente necessario mantenere lo stato tra le chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-1130">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="190f2-1131">Se l'applicazione gestisce gli output di stringa, è consigliabile utilizzare il <xref:System.Text.Encoding.GetString%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1131">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="190f2-1132">Poiché questo metodo deve controllare la lunghezza della stringa e allocare un buffer, è leggermente più lento, ma il valore risultante <xref:System.String> tipo è preferibile.</span><span class="sxs-lookup"><span data-stu-id="190f2-1132">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="190f2-1133">La versione byte di <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> consente alcune tecniche veloci, in particolare con più chiamate al buffer di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="190f2-1133">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="190f2-1134">Tenere presente, tuttavia, questa versione del metodo è talvolta sicuro, poiché sono richiesti i puntatori.</span><span class="sxs-lookup"><span data-stu-id="190f2-1134">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="190f2-1135">Se l'app è necessario convertire una grande quantità di dati, riutilizzare il buffer di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-1135">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="190f2-1136">In questo caso, il [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > versione che supporta i caratteri di output buffer è la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1136">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="190f2-1137">È consigliabile utilizzare il <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> anziché <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1137">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="190f2-1138">Il metodo di conversione converte tutti i dati possibili e genera un'eccezione se il buffer di output è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1138">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="190f2-1139">Per la decodifica continua di un flusso, questo metodo è spesso la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1139">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-1140">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1140">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-1141">
            <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1141">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="190f2-1142">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1142">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-1143">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1143">-and-</span>
          </span>
          <span data-ttu-id="190f2-1144">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1144">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="190f2-1145">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1145">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="190f2-1146">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1146">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public abstract int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="190f2-1147">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1147">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="190f2-1148">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1148">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="190f2-1149">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1149">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1150">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1150">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1151">The number of characters produced by decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1151">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1152">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.Encoding.GetChars%2A> per archiviare i caratteri risultanti, è consigliabile utilizzare il <xref:System.Text.Encoding.GetCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1152">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="190f2-1153">Per calcolare la dimensione massima della matrice, utilizzare il <xref:System.Text.Encoding.GetMaxCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1153">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="190f2-1154">Il <xref:System.Text.Encoding.GetCharCount%2A> metodo consente in genere l'allocazione di memoria inferiore, mentre il <xref:System.Text.Encoding.GetMaxCharCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="190f2-1154">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="190f2-1155">Il <xref:System.Text.Encoding.GetCharCount%2A> metodo determina il numero di caratteri risultanti dalla decodifica di una sequenza di byte e <xref:System.Text.Encoding.GetChars%2A> metodo esegue la decodifica effettiva.</span><span class="sxs-lookup"><span data-stu-id="190f2-1155">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="190f2-1156">Il <xref:System.Text.Encoding.GetChars%2A> metodo prevede conversioni discrete, a differenza di <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> metodo che gestisce più passaggi su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1156">The <xref:System.Text.Encoding.GetChars%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-1157">Versioni diverse di <xref:System.Text.Encoding.GetCharCount%2A> e <xref:System.Text.Encoding.GetChars%2A> sono supportati.</span><span class="sxs-lookup"><span data-stu-id="190f2-1157">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="190f2-1158">Di seguito sono alcune considerazioni di programmazione per l'utilizzo di questi metodi:</span><span class="sxs-lookup"><span data-stu-id="190f2-1158">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="190f2-1159">L'app potrebbe essere necessario decodificare più byte di input da una tabella codici ed elaborare i byte utilizzando più chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-1159">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="190f2-1160">In questo caso, è probabilmente necessario mantenere lo stato tra le chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-1160">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="190f2-1161">Se l'applicazione gestisce gli output di stringa, è consigliabile utilizzare il <xref:System.Text.Encoding.GetString%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1161">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="190f2-1162">Poiché questo metodo deve controllare la lunghezza della stringa e allocare un buffer, è leggermente più lento, ma il valore risultante <xref:System.String> tipo è preferibile.</span><span class="sxs-lookup"><span data-stu-id="190f2-1162">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="190f2-1163">La versione byte di <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> consente alcune tecniche veloci, in particolare con più chiamate al buffer di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="190f2-1163">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="190f2-1164">Tenere presente, tuttavia, questa versione del metodo è talvolta sicuro, poiché sono richiesti i puntatori.</span><span class="sxs-lookup"><span data-stu-id="190f2-1164">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="190f2-1165">Se l'app è necessario convertire una grande quantità di dati, riutilizzare il buffer di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-1165">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="190f2-1166">In questo caso, il [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > versione che supporta i caratteri di output buffer è la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1166">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="190f2-1167">È consigliabile utilizzare il <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> anziché <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1167">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="190f2-1168">Il metodo di conversione converte tutti i dati possibili e genera un'eccezione se il buffer di output è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1168">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="190f2-1169">Per la decodifica continua di un flusso, questo metodo è spesso la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1169">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1170">Nell'esempio seguente converte una stringa da una codifica a altra.</span><span class="sxs-lookup"><span data-stu-id="190f2-1170">The following example converts a string from one encoding to another.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 <span data-ttu-id="190f2-1171">Nell'esempio seguente consente di codificare una stringa in una matrice di byte e quindi decodifica un intervallo di byte in una matrice di caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-1171">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-1172">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1172">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-1173">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1173">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="190f2-1174">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1174">-or-</span>
          </span>
          <span data-ttu-id="190f2-1175">
            <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1175">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="190f2-1176">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1176">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-1177">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1177">-and-</span>
          </span>
          <span data-ttu-id="190f2-1178">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1178">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1179">When overridden in a derived class, decodes a sequence of bytes into a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1179">When overridden in a derived class, decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual char[] GetChars (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char[] GetChars(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As Byte()) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;char&gt; ^ GetChars(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="190f2-1180">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1180">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1181">When overridden in a derived class, decodes all the bytes in the specified byte array into a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1181">When overridden in a derived class, decodes all the bytes in the specified byte array into a set of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1182">A character array containing the results of decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1182">A character array containing the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1183"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Ottiene i caratteri da una sequenza di byte di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1183"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="190f2-1184"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> è diverso da quello <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> perché <xref:System.Text.Encoding> prevede conversioni discrete, mentre <xref:System.Text.Decoder> è destinato a più passaggi su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1184"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-1185">Se il conversione dei dati sono disponibili solo in blocchi sequenziali (ad esempio i dati letti da un flusso) o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, è necessario utilizzare il <xref:System.Text.Decoder> o <xref:System.Text.Encoder> fornito dal <xref:System.Text.Encoding.GetDecoder%2A> metodo o <xref:System.Text.Encoding.GetEncoder%2A> (metodo), rispettivamente, di una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="190f2-1185">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="190f2-1186">**Nota** questo metodo è destinato a operare su caratteri Unicode e non su dati binari arbitrari, ad esempio matrici di byte.</span><span class="sxs-lookup"><span data-stu-id="190f2-1186">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="190f2-1187">Se è necessario codificare dati binari arbitrari in testo, è necessario utilizzare un protocollo, ad esempio uuencode, verrà implementate da metodi quali <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1187">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="190f2-1188">Il <xref:System.Text.Encoding.GetCharCount%2A> metodo determina il numero di caratteri risultanti dalla decodifica di una sequenza di byte e <xref:System.Text.Encoding.GetChars%2A> metodo esegue la decodifica effettiva.</span><span class="sxs-lookup"><span data-stu-id="190f2-1188">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="190f2-1189">Il <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> metodo prevede conversioni discrete, a differenza di <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> metodo che gestisce più passaggi su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1189">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-1190">Versioni diverse di <xref:System.Text.Encoding.GetCharCount%2A> e <xref:System.Text.Encoding.GetChars%2A> sono supportati.</span><span class="sxs-lookup"><span data-stu-id="190f2-1190">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="190f2-1191">Di seguito sono alcune considerazioni di programmazione per l'utilizzo di questi metodi:</span><span class="sxs-lookup"><span data-stu-id="190f2-1191">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="190f2-1192">L'app potrebbe essere necessario decodificare più byte di input da una tabella codici ed elaborare i byte utilizzando più chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-1192">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="190f2-1193">In questo caso, è probabilmente necessario mantenere lo stato tra chiamate, perché le sequenze di byte possono essere interrotta durante l'elaborazione in batch.</span><span class="sxs-lookup"><span data-stu-id="190f2-1193">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="190f2-1194">(Ad esempio, può terminare una parte di una sequenza shift ISO-2022 <xref:System.Text.Encoding.GetChars%2A> chiamare e continuare all'inizio del successivo <xref:System.Text.Encoding.GetChars%2A> chiamare.</span><span class="sxs-lookup"><span data-stu-id="190f2-1194">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="190f2-1195"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> chiamerà il fallback per le sequenze incomplete, ma <xref:System.Text.Decoder> verranno memorizzate le sequenze per la chiamata successiva.)</span><span class="sxs-lookup"><span data-stu-id="190f2-1195"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="190f2-1196">Se l'applicazione gestisce gli output di stringa, è consigliabile utilizzare il <xref:System.Text.Encoding.GetString%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1196">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="190f2-1197">Poiché questo metodo deve controllare la lunghezza della stringa e allocare un buffer, è leggermente più lento, ma il valore risultante <xref:System.String> tipo è preferibile.</span><span class="sxs-lookup"><span data-stu-id="190f2-1197">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="190f2-1198">La versione byte di <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> consente alcune tecniche veloci, in particolare con più chiamate al buffer di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="190f2-1198">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="190f2-1199">Tenere presente, tuttavia, questa versione del metodo è talvolta sicuro, poiché sono richiesti i puntatori.</span><span class="sxs-lookup"><span data-stu-id="190f2-1199">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="190f2-1200">Se l'app è necessario convertire una grande quantità di dati, riutilizzare il buffer di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-1200">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="190f2-1201">In questo caso, il [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > versione che supporta i caratteri di output buffer è la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1201">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="190f2-1202">È consigliabile utilizzare il <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> anziché <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1202">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="190f2-1203">Il metodo di conversione converte tutti i dati possibili e genera un'eccezione se il buffer di output è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1203">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="190f2-1204">Per la decodifica continua di un flusso, questo metodo è spesso la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1204">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1205">Nell'esempio seguente consente di codificare una stringa in una matrice di byte e quindi decodifica i byte in una matrice di caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-1205">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-1206">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1206">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="190f2-1207">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1207">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-1208">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1208">-and-</span>
          </span>
          <span data-ttu-id="190f2-1209">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1209">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual char[] GetChars (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char[] GetChars(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As Byte(), index As Integer, count As Integer) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;char&gt; ^ GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="190f2-1210">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1210">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="190f2-1211">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1211">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="190f2-1212">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1212">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1213">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1213">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a set of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1214">A character array containing the results of decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1214">A character array containing the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1215"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Ottiene i caratteri da una sequenza di byte di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1215"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="190f2-1216"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> è diverso da quello <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> perché <xref:System.Text.Encoding> prevede conversioni discrete, mentre <xref:System.Text.Decoder> è destinato a più passaggi su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1216"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-1217">Se il conversione dei dati sono disponibili solo in blocchi sequenziali (ad esempio i dati letti da un flusso) o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, è necessario utilizzare il <xref:System.Text.Decoder> o <xref:System.Text.Encoder> fornito dal <xref:System.Text.Encoding.GetDecoder%2A> metodo o <xref:System.Text.Encoding.GetEncoder%2A> (metodo), rispettivamente, di una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="190f2-1217">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="190f2-1218">**Nota** questo metodo è destinato a operare su caratteri Unicode e non su dati binari arbitrari, ad esempio matrici di byte.</span><span class="sxs-lookup"><span data-stu-id="190f2-1218">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="190f2-1219">Se è necessario codificare dati binari arbitrari in testo, è necessario utilizzare un protocollo, ad esempio uuencode, verrà implementate da metodi quali <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1219">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="190f2-1220">Il <xref:System.Text.Encoding.GetCharCount%2A> metodo determina il numero di caratteri risultanti dalla decodifica di una sequenza di byte e <xref:System.Text.Encoding.GetChars%2A> metodo esegue la decodifica effettiva.</span><span class="sxs-lookup"><span data-stu-id="190f2-1220">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="190f2-1221">Il <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> metodo prevede conversioni discrete, a differenza di <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> metodo che gestisce più passaggi su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1221">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-1222">Versioni diverse di <xref:System.Text.Encoding.GetCharCount%2A> e <xref:System.Text.Encoding.GetChars%2A> sono supportati.</span><span class="sxs-lookup"><span data-stu-id="190f2-1222">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="190f2-1223">Di seguito sono alcune considerazioni di programmazione per l'utilizzo di questi metodi:</span><span class="sxs-lookup"><span data-stu-id="190f2-1223">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="190f2-1224">L'app potrebbe essere necessario decodificare più byte di input da una tabella codici ed elaborare i byte utilizzando più chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-1224">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="190f2-1225">In questo caso, è probabilmente necessario mantenere lo stato tra chiamate, perché le sequenze di byte possono essere interrotta durante l'elaborazione in batch.</span><span class="sxs-lookup"><span data-stu-id="190f2-1225">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="190f2-1226">(Ad esempio, può terminare una parte di una sequenza shift ISO-2022 <xref:System.Text.Encoding.GetChars%2A> chiamare e continuare all'inizio del successivo <xref:System.Text.Encoding.GetChars%2A> chiamare.</span><span class="sxs-lookup"><span data-stu-id="190f2-1226">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="190f2-1227"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> chiamerà il fallback per le sequenze incomplete, ma <xref:System.Text.Decoder> verranno memorizzate le sequenze per la chiamata successiva.)</span><span class="sxs-lookup"><span data-stu-id="190f2-1227"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="190f2-1228">Se l'applicazione gestisce gli output di stringa, è consigliabile utilizzare il <xref:System.Text.Encoding.GetString%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1228">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="190f2-1229">Poiché questo metodo deve controllare la lunghezza della stringa e allocare un buffer, è leggermente più lento, ma il valore risultante <xref:System.String> tipo è preferibile.</span><span class="sxs-lookup"><span data-stu-id="190f2-1229">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="190f2-1230">La versione byte di <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> consente alcune tecniche veloci, in particolare con più chiamate al buffer di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="190f2-1230">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="190f2-1231">Tenere presente, tuttavia, questa versione del metodo è talvolta sicuro, poiché sono richiesti i puntatori.</span><span class="sxs-lookup"><span data-stu-id="190f2-1231">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="190f2-1232">Se l'app è necessario convertire una grande quantità di dati, riutilizzare il buffer di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-1232">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="190f2-1233">In questo caso, il [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > versione che supporta i caratteri di output buffer è la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1233">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="190f2-1234">È consigliabile utilizzare il <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> anziché <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1234">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="190f2-1235">Il metodo di conversione converte tutti i dati possibili e genera un'eccezione se il buffer di output è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1235">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="190f2-1236">Per la decodifica continua di un flusso, questo metodo è spesso la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1236">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1237">Nell'esempio seguente consente di codificare una stringa in una matrice di byte e quindi decodifica un intervallo di byte in una matrice di caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-1237">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-1238">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1238">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-1239">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1239">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="190f2-1240">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1240">-or-</span>
          </span>
          <span data-ttu-id="190f2-1241">
            <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1241">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="190f2-1242">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1242">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-1243">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1243">-and-</span>
          </span>
          <span data-ttu-id="190f2-1244">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1244">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="190f2-1245">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1245">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="190f2-1246">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1246">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="190f2-1247">A pointer to the location at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1247">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="190f2-1248">The maximum number of characters to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1248">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1249">When overridden in a derived class, decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1249">When overridden in a derived class, decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1250">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1250">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1251">Per calcolare la dimensione esatta della matrice che <xref:System.Text.Encoding.GetChars%2A> richiede per archiviare i caratteri risultanti, è consigliabile utilizzare il <xref:System.Text.Encoding.GetCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1251">To calculate the exact array size that <xref:System.Text.Encoding.GetChars%2A> requires to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="190f2-1252">Per calcolare la dimensione massima della matrice, utilizzare il <xref:System.Text.Encoding.GetMaxCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1252">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="190f2-1253">Il <xref:System.Text.Encoding.GetCharCount%2A> metodo consente in genere l'allocazione di memoria inferiore, mentre il <xref:System.Text.Encoding.GetMaxCharCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="190f2-1253">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="190f2-1254"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Ottiene i caratteri da una sequenza di byte di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1254"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="190f2-1255"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> è diverso da quello <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> perché <xref:System.Text.Encoding> prevede conversioni discrete, mentre <xref:System.Text.Decoder> è destinato a più passaggi su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1255"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-1256">Se il conversione dei dati sono disponibili solo in blocchi sequenziali (ad esempio i dati letti da un flusso) o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, è necessario utilizzare il <xref:System.Text.Decoder> o <xref:System.Text.Encoder> oggetto fornito dal <c5/> o <xref:System.Text.Encoding.GetEncoder%2A> (metodo), rispettivamente, di una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="190f2-1256">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.Encoding.GetDecoder%2A> or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="190f2-1257">**Nota** questo metodo è destinato a operare su caratteri Unicode e non su dati binari arbitrari, ad esempio matrici di byte.</span><span class="sxs-lookup"><span data-stu-id="190f2-1257">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="190f2-1258">Se è necessario codificare dati binari arbitrari in testo, è necessario utilizzare un protocollo, ad esempio uuencode, verrà implementate da metodi quali <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1258">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="190f2-1259">Il <xref:System.Text.Encoding.GetCharCount%2A> metodo determina il numero di caratteri risultanti dalla decodifica di una sequenza di byte e <xref:System.Text.Encoding.GetChars%2A> metodo esegue la decodifica effettiva.</span><span class="sxs-lookup"><span data-stu-id="190f2-1259">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="190f2-1260">Il <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> metodo prevede conversioni discrete, a differenza di <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> metodo che gestisce più passaggi su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1260">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-1261">Versioni diverse di <xref:System.Text.Encoding.GetCharCount%2A> e <xref:System.Text.Encoding.GetChars%2A> sono supportati.</span><span class="sxs-lookup"><span data-stu-id="190f2-1261">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="190f2-1262">Di seguito sono alcune considerazioni di programmazione per l'utilizzo di questi metodi:</span><span class="sxs-lookup"><span data-stu-id="190f2-1262">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="190f2-1263">L'app potrebbe essere necessario decodificare più byte di input da una tabella codici ed elaborare i byte utilizzando più chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-1263">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="190f2-1264">In questo caso, è probabilmente necessario mantenere lo stato tra chiamate, perché le sequenze di byte possono essere interrotta durante l'elaborazione in batch.</span><span class="sxs-lookup"><span data-stu-id="190f2-1264">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="190f2-1265">(Ad esempio, può terminare una parte di una sequenza shift ISO-2022 <xref:System.Text.Encoding.GetChars%2A> chiamare e continuare all'inizio del successivo <xref:System.Text.Encoding.GetChars%2A> chiamare.</span><span class="sxs-lookup"><span data-stu-id="190f2-1265">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="190f2-1266"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> chiamerà il fallback per le sequenze incomplete, ma <xref:System.Text.Decoder> verranno memorizzate le sequenze per la chiamata successiva.)</span><span class="sxs-lookup"><span data-stu-id="190f2-1266"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="190f2-1267">Se l'applicazione gestisce l'output delle stringhe, il <xref:System.Text.Encoding.GetString%2A> metodo consigliato.</span><span class="sxs-lookup"><span data-stu-id="190f2-1267">If your app handles string outputs, the <xref:System.Text.Encoding.GetString%2A> method is recommended.</span></span> <span data-ttu-id="190f2-1268">Poiché questo metodo deve controllare la lunghezza della stringa e allocare un buffer, è leggermente più lento, ma il valore risultante <xref:System.String> tipo è preferibile.</span><span class="sxs-lookup"><span data-stu-id="190f2-1268">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="190f2-1269">La versione byte di <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> consente alcune tecniche veloci, in particolare con più chiamate al buffer di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="190f2-1269">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="190f2-1270">Tenere presente, tuttavia, questa versione del metodo è talvolta sicuro, poiché sono richiesti i puntatori.</span><span class="sxs-lookup"><span data-stu-id="190f2-1270">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="190f2-1271">Se l'app è necessario convertire una grande quantità di dati, riutilizzare il buffer di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-1271">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="190f2-1272">In questo caso, il [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > versione che supporta i caratteri di output buffer è la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1272">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="190f2-1273">È consigliabile utilizzare il <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> anziché <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1273">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="190f2-1274">Il metodo di conversione converte tutti i dati possibili e genera un'eccezione se il buffer di output è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1274">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="190f2-1275">Per la decodifica continua di un flusso, questo metodo è spesso la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1275">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-1276">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1276">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="190f2-1277">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1277">-or-</span>
          </span>
          <span data-ttu-id="190f2-1278">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1278">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-1279">
            <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1279">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="190f2-1280">
            <paramref name="charCount" /> is less than the resulting number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1280">
              <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="190f2-1281">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1281">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-1282">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1282">-and-</span>
          </span>
          <span data-ttu-id="190f2-1283">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1283">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="190f2-1284">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1284">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="190f2-1285">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1285">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public abstract int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="190f2-1286">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1286">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="190f2-1287">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1287">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="190f2-1288">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1288">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="190f2-1289">The character array to contain the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1289">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="190f2-1290">The index at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1290">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1291">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1291">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1292">The actual number of characters written into <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1292">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1293">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.Encoding.GetChars%2A> per archiviare i caratteri risultanti, è consigliabile utilizzare il <xref:System.Text.Encoding.GetCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1293">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="190f2-1294">Per calcolare la dimensione massima della matrice, utilizzare il <xref:System.Text.Encoding.GetMaxCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1294">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="190f2-1295">Il <xref:System.Text.Encoding.GetCharCount%2A> metodo consente in genere l'allocazione di memoria inferiore, mentre il <xref:System.Text.Encoding.GetMaxCharCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="190f2-1295">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="190f2-1296">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > Ottiene caratteri da una sequenza di byte di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1296">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="190f2-1297">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > è diverso da quello <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> perché <xref:System.Text.Encoding> prevede conversioni discrete, mentre <xref:System.Text.Decoder> è progettato per più passaggi su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1297">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-1298">Se il conversione dei dati sono disponibili solo in blocchi sequenziali (ad esempio i dati letti da un flusso) o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, è necessario utilizzare il <xref:System.Text.Decoder> o <xref:System.Text.Encoder> fornito dal <xref:System.Text.Encoding.GetDecoder%2A> metodo o <xref:System.Text.Encoding.GetEncoder%2A> (metodo), rispettivamente, di una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="190f2-1298">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="190f2-1299">**Nota** questo metodo è destinato a operare su caratteri Unicode e non su dati binari arbitrari, ad esempio matrici di byte.</span><span class="sxs-lookup"><span data-stu-id="190f2-1299">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="190f2-1300">Se è necessario codificare dati binari arbitrari in testo, è necessario utilizzare un protocollo, ad esempio uuencode, verrà implementate da metodi quali <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1300">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="190f2-1301">Il <xref:System.Text.Encoding.GetCharCount%2A> metodo determina il numero di caratteri risultanti dalla decodifica di una sequenza di byte e <xref:System.Text.Encoding.GetChars%2A> metodo esegue la decodifica effettiva.</span><span class="sxs-lookup"><span data-stu-id="190f2-1301">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="190f2-1302">Il <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> metodo prevede conversioni discrete, a differenza di <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> metodo che gestisce più passaggi su un singolo flusso di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1302">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="190f2-1303">Versioni diverse di <xref:System.Text.Encoding.GetCharCount%2A> e <xref:System.Text.Encoding.GetChars%2A> sono supportati.</span><span class="sxs-lookup"><span data-stu-id="190f2-1303">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="190f2-1304">Di seguito sono alcune considerazioni di programmazione per l'utilizzo di questi metodi:</span><span class="sxs-lookup"><span data-stu-id="190f2-1304">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="190f2-1305">L'app potrebbe essere necessario decodificare più byte di input da una tabella codici ed elaborare i byte utilizzando più chiamate.</span><span class="sxs-lookup"><span data-stu-id="190f2-1305">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="190f2-1306">In questo caso, è probabilmente necessario mantenere lo stato tra chiamate, perché le sequenze di byte possono essere interrotta durante l'elaborazione in batch.</span><span class="sxs-lookup"><span data-stu-id="190f2-1306">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="190f2-1307">(Ad esempio, può terminare una parte di una sequenza shift ISO-2022 [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A > chiamare e continuare all'inizio del successivo [\], Int32, Int32, Char\<xref : System.Text.Encoding.GetChars%2A > chiamare.</span><span class="sxs-lookup"><span data-stu-id="190f2-1307">(For example, part of an ISO-2022 shift sequence may end one [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="190f2-1308">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > chiamerà il fallback per le sequenze incomplete, ma <xref:System.Text.Decoder> verranno memorizzate le sequenze per la chiamata successiva.)</span><span class="sxs-lookup"><span data-stu-id="190f2-1308">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="190f2-1309">Se l'applicazione gestisce l'output delle stringhe, il <xref:System.Text.Encoding.GetString%2A> metodo consigliato.</span><span class="sxs-lookup"><span data-stu-id="190f2-1309">If your app handles string outputs, the <xref:System.Text.Encoding.GetString%2A> method is recommended.</span></span> <span data-ttu-id="190f2-1310">Poiché questo metodo deve controllare la lunghezza della stringa e allocare un buffer, è leggermente più lento, ma il valore risultante <xref:System.String> tipo è preferibile.</span><span class="sxs-lookup"><span data-stu-id="190f2-1310">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="190f2-1311">La versione byte di <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> consente alcune tecniche veloci, in particolare con più chiamate al buffer di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="190f2-1311">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="190f2-1312">Tenere presente, tuttavia, questa versione del metodo è talvolta sicuro, poiché sono richiesti i puntatori.</span><span class="sxs-lookup"><span data-stu-id="190f2-1312">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="190f2-1313">Se l'app è necessario convertire una grande quantità di dati, riutilizzare il buffer di output.</span><span class="sxs-lookup"><span data-stu-id="190f2-1313">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="190f2-1314">In questo caso, il [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > versione che supporta i caratteri di output buffer è la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1314">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="190f2-1315">È consigliabile utilizzare il <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> anziché <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1315">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="190f2-1316">Il metodo di conversione converte tutti i dati possibili e genera un'eccezione se il buffer di output è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1316">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="190f2-1317">Per la decodifica continua di un flusso, questo metodo è spesso la scelta migliore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1317">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1318">Nell'esempio seguente converte una stringa da una codifica a altra.</span><span class="sxs-lookup"><span data-stu-id="190f2-1318">The following example converts a string from one encoding to another.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 <span data-ttu-id="190f2-1319">Nell'esempio seguente consente di codificare una stringa in una matrice di byte e quindi decodifica un intervallo di byte in una matrice di caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-1319">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-1320">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1320">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="190f2-1321">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1321">-or-</span>
          </span>
          <span data-ttu-id="190f2-1322">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1322">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-1323">
            <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1323">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="190f2-1324">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1324">-or-</span>
          </span>
          <span data-ttu-id="190f2-1325">
            <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1325">
              <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="190f2-1326">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1326">-or-</span>
          </span>
          <span data-ttu-id="190f2-1327">
            <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1327">
              <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="190f2-1328">
            <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1328">
              <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="190f2-1329">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1329">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-1330">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1330">-and-</span>
          </span>
          <span data-ttu-id="190f2-1331">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1331">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public virtual System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Decoder ^ GetDecoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1332">When overridden in a derived class, obtains a decoder that converts an encoded sequence of bytes into a sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1332">When overridden in a derived class, obtains a decoder that converts an encoded sequence of bytes into a sequence of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1333">A <see cref="T:System.Text.Decoder" /> that converts an encoded sequence of bytes into a sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1333">A <see cref="T:System.Text.Decoder" /> that converts an encoded sequence of bytes into a sequence of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1334">Il <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> metodo converte blocchi sequenziali di byte in blocchi sequenziali di caratteri, in modo simile al <xref:System.Text.Encoding.GetChars%2A> metodo di questa classe.</span><span class="sxs-lookup"><span data-stu-id="190f2-1334">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.Encoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="190f2-1335">Tuttavia, un <xref:System.Text.Decoder> le informazioni sullo stato tra le chiamate in modo da poter decodificare correttamente le sequenze di byte che includono i blocchi.</span><span class="sxs-lookup"><span data-stu-id="190f2-1335">However, a <xref:System.Text.Decoder> maintains state information between calls so it correctly decodes byte sequences that span blocks.</span></span> <span data-ttu-id="190f2-1336">Il <xref:System.Text.Decoder> anche mantiene i byte finali alla fine di blocchi di dati e i byte finali nella successiva operazione di decodifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1336">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="190f2-1337">Pertanto, <xref:System.Text.Encoding.GetDecoder%2A> e <xref:System.Text.Encoding.GetEncoder%2A> sono utili per la trasmissione di rete e le operazioni di file, perché queste operazioni utilizzano spesso blocchi di dati anziché un flusso di dati completo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1337">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="190f2-1338">L'implementazione predefinita restituisce un <see cref="T:System.Text.Decoder" /> che chiama il <see cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" /> e <see cref="M:System.Text.Encoding.GetChars(System.Byte[])" /> metodi dell'oggetto corrente <see cref="T:System.Text.Encoding" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="190f2-1338">The default implementation returns a <see cref="T:System.Text.Decoder" /> that calls the <see cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" /> and <see cref="M:System.Text.Encoding.GetChars(System.Byte[])" /> methods of the current <see cref="T:System.Text.Encoding" />.</span>
            </span>
            <span data-ttu-id="190f2-1339">È necessario eseguire l'override di questo metodo per restituire un <see cref="T:System.Text.Decoder" /> che gestisce lo stato tra le chiamate.</span>
            <span class="sxs-lookup">
              <span data-stu-id="190f2-1339">You must override this method to return a <see cref="T:System.Text.Decoder" /> that maintains its state between calls.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoder ^ GetEncoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1340">When overridden in a derived class, obtains an encoder that converts a sequence of Unicode characters into an encoded sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1340">When overridden in a derived class, obtains an encoder that converts a sequence of Unicode characters into an encoded sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1341">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into an encoded sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1341">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into an encoded sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1342">Il <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metodo converte blocchi sequenziali di caratteri in blocchi sequenziali di byte, una procedura simile a quella di <xref:System.Text.Encoding.GetBytes%2A> metodo della classe.</span><span class="sxs-lookup"><span data-stu-id="190f2-1342">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.Encoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="190f2-1343">Tuttavia, un <xref:System.Text.Encoder> mantiene informazioni sullo stato tra le chiamate in modo la codifica corretta delle sequenze di caratteri che includono i blocchi.</span><span class="sxs-lookup"><span data-stu-id="190f2-1343">However, a <xref:System.Text.Encoder> maintains state information between calls so it correctly encodes character sequences that span blocks.</span></span> <span data-ttu-id="190f2-1344">Il <xref:System.Text.Encoder> anche mantiene finali caratteri alla fine di blocchi di dati e i caratteri finali nella successiva operazione di codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1344">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="190f2-1345">Ad esempio, un blocco di dati potrebbe terminare con un surrogato alto senza corrispondenza e il surrogato basso corrispondente potrebbe essere in blocco di dati successivo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1345">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="190f2-1346">Pertanto, <xref:System.Text.Encoding.GetDecoder%2A> e <xref:System.Text.Encoding.GetEncoder%2A> sono utili per la trasmissione di rete e le operazioni di file, perché queste operazioni utilizzano spesso blocchi di dati anziché un flusso di dati completo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1346">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="190f2-1347">L'implementazione predefinita restituisce un <see cref="T:System.Text.Encoder" /> che chiama il <see cref="M:System.Text.Encoding.GetByteCount(System.Char[])" /> e <see cref="M:System.Text.Encoding.GetBytes(System.Char[])" /> metodi dell'oggetto corrente <see cref="T:System.Text.Encoding" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="190f2-1347">The default implementation returns a <see cref="T:System.Text.Encoder" /> that calls the <see cref="M:System.Text.Encoding.GetByteCount(System.Char[])" /> and <see cref="M:System.Text.Encoding.GetBytes(System.Char[])" /> methods of the current <see cref="T:System.Text.Encoding" />.</span>
            </span>
            <span data-ttu-id="190f2-1348">È necessario eseguire l'override di questo metodo per restituire un <see cref="T:System.Text.Encoder" /> che gestisce lo stato tra le chiamate.</span>
            <span class="sxs-lookup">
              <span data-stu-id="190f2-1348">You must override this method to return a <see cref="T:System.Text.Encoder" /> that maintains its state between calls.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1349">Returns an encoding for the specified code page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1349">Returns an encoding for the specified code page.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage">
          <span data-ttu-id="190f2-1350">The code page identifier of the preferred encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1350">The code page identifier of the preferred encoding.</span>
          </span>
          <span data-ttu-id="190f2-1351">Possible values are listed in the Code Page column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1351">Possible values are listed in the Code Page column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span>
          </span>
          <span data-ttu-id="190f2-1352">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1352">-or-</span>
          </span>
          <span data-ttu-id="190f2-1353">0 (zero), to use the default encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1353">0 (zero), to use the default encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1354">Returns the encoding associated with the specified code page identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1354">Returns the encoding associated with the specified code page identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1355">The encoding that is associated with the specified code page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1355">The encoding that is associated with the specified code page.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1356">Il gestore di fallback dipende dal tipo di codifica `codepage`.</span><span class="sxs-lookup"><span data-stu-id="190f2-1356">The fallback handler depends on the encoding type of `codepage`.</span></span> <span data-ttu-id="190f2-1357">Se `codepage` è un carattere di pagina o a byte doppio (DBCS) codifica del set, viene utilizzato un gestore di fallback con mapping più appropriato.</span><span class="sxs-lookup"><span data-stu-id="190f2-1357">If `codepage` is a code page or double-byte character set (DBCS) encoding, a best-fit fallback handler is used.</span></span> <span data-ttu-id="190f2-1358">In caso contrario, viene utilizzato un gestore di fallback di sostituzione.</span><span class="sxs-lookup"><span data-stu-id="190f2-1358">Otherwise, a replacement fallback handler is used.</span></span> <span data-ttu-id="190f2-1359">Questi gestori fallback potrebbero non essere appropriati per l'app.</span><span class="sxs-lookup"><span data-stu-id="190f2-1359">These fallback handlers may not be appropriate for your app.</span></span> <span data-ttu-id="190f2-1360">Per specificare il gestore di fallback usato per la codifica specificata da `codepage`, è possibile chiamare il <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="190f2-1360">To specify the fallback handler used by the encoding specified by `codepage`, you can call the <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> overload.</span></span>  
  
 <span data-ttu-id="190f2-1361">Il <xref:System.Text.Encoding.GetEncoding%2A> metodo si basa sulla piattaforma sottostante per supportare la maggior parte delle tabelle codici.</span><span class="sxs-lookup"><span data-stu-id="190f2-1361">The <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="190f2-1362">Tuttavia, .NET Framework supporta in modo nativo alcune codifiche.</span><span class="sxs-lookup"><span data-stu-id="190f2-1362">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="190f2-1363">Per un elenco di tabelle codici, vedere il <xref:System.Text.Encoding> argomento relativo alla classe.</span><span class="sxs-lookup"><span data-stu-id="190f2-1363">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="190f2-1364">In alternativa, è possibile chiamare il <xref:System.Text.Encoding.GetEncodings%2A> metodo per ottenere una matrice di <xref:System.Text.EncodingInfo> gli oggetti che contiene informazioni su tutte le codifiche.</span><span class="sxs-lookup"><span data-stu-id="190f2-1364">Alternatively, you can call the <xref:System.Text.Encoding.GetEncodings%2A> method to get an array of <xref:System.Text.EncodingInfo> objects that contains information about all encodings.</span></span>  
  
 <span data-ttu-id="190f2-1365">Oltre alle codifiche supportate in una versione della piattaforma specifica di .NET Framework, in modo intrinseco il <xref:System.Text.Encoding.GetEncoding%2A> il metodo restituisce le codifiche delle tabelle aggiuntive che vengono resi disponibili tramite la registrazione di un <xref:System.Text.EncodingProvider> oggetto.</span><span class="sxs-lookup"><span data-stu-id="190f2-1365">In addition to the encodings that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="190f2-1366">Se la stessa codifica è stata registrata da più <xref:System.Text.EncodingProvider> oggetti, questo metodo restituisce l'ultimo registrato.</span><span class="sxs-lookup"><span data-stu-id="190f2-1366">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  

<span data-ttu-id="190f2-1367">È inoltre possibile fornire un valore pari a 0 per il `codepage` argomento.</span><span class="sxs-lookup"><span data-stu-id="190f2-1367">You can also supply a value of 0 for the `codepage` argument.</span></span> <span data-ttu-id="190f2-1368">Il comportamento preciso dipende se le codifiche delle tabelle sono state rese disponibili tramite la registrazione di un <xref:System.Text.EncodingProvider> oggetto:</span><span class="sxs-lookup"><span data-stu-id="190f2-1368">Its precise behavior depends on whether any encodings have been made available by registering an <xref:System.Text.EncodingProvider> object:</span></span>

- <span data-ttu-id="190f2-1369">Se sono stati registrati uno o più provider di codifica, restituisce la codifica dell'ultimo provider registrato che ha scelto di restituire una codifica quando il <xref:System.Text.Encoding.GetEncoding%2A> viene passato un `codepage` argomento 0.</span><span class="sxs-lookup"><span data-stu-id="190f2-1369">If one or more encoding providers have been registered, it returns the encoding of the last registered provider that has chosen to return a encoding when the <xref:System.Text.Encoding.GetEncoding%2A> method is passed a `codepage` argument of 0.</span></span>     

- <span data-ttu-id="190f2-1370">In .NET Framework, se nessuna codifica provider è stato registrato, se il <xref:System.Text.CodePagesEncodingProvider> è il provider di codifica registrato, o se nessun provider di codifica registrato gestisce un `codepage` valore pari a 0, restituisce codici attiva del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1370">On the .NET Framework, if no encoding provider has been registered, if the <xref:System.Text.CodePagesEncodingProvider> is the registered encoding provider, or if no registered encoding provider handles a `codepage` value of 0, it returns the operating system's active code page.</span></span> <span data-ttu-id="190f2-1371">Per determinare la tabella codici active nei sistemi Windows, chiamare il Windows [GetACP](http://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) funzione da .NET Framework sul desktop di Windows.</span><span class="sxs-lookup"><span data-stu-id="190f2-1371">To determine the active code page on Windows systems, call the Windows [GetACP](http://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) function from the .NET Framework on the Windows desktop.</span></span>

- <span data-ttu-id="190f2-1372">In .NET Core, se non è stato registrato il provider di codifica o se nessun provider di codifica registrato gestisce un `codepage` valore pari a 0, restituisce il <xref:System.Text.UTF8Encoding>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1372">On .NET Core, if no encoding provider has been registered or if no registered encoding provider handles a `codepage` value of 0, it returns the <xref:System.Text.UTF8Encoding>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="190f2-1373">Alcuni codici non supportate pagine causa un <xref:System.ArgumentException> generata, mentre altre causano un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1373">Some unsupported code pages cause an <xref:System.ArgumentException> to be thrown, whereas others cause a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="190f2-1374">Pertanto, il codice deve rilevare tutte le eccezioni indicate nella sezione eccezioni.</span><span class="sxs-lookup"><span data-stu-id="190f2-1374">Therefore, your code must catch all exceptions indicated in the Exceptions section.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="190f2-1375">Le tabelle codici ANSI possono essere diverse su computer diversi e possono modificare in un singolo computer, causando il danneggiamento dei dati.</span><span class="sxs-lookup"><span data-stu-id="190f2-1375">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="190f2-1376">Per questo motivo, se la tabella codici attiva è una tabella codici ANSI, codifica e decodifica dei dati utilizzando la tabella codici predefinita restituita da `Encoding.GetEncoding(0)` non è consigliata.</span><span class="sxs-lookup"><span data-stu-id="190f2-1376">For this reason, if the active code page is an ANSI code page, encoding and decoding data using the default code page returned by `Encoding.GetEncoding(0)` is not recommended.</span></span> <span data-ttu-id="190f2-1377">Per ottenere risultati più coerenti, è necessario utilizzare una codifica Unicode, ad esempio UTF-8 (tabella codici 65001) o UTF-16, anziché una tabella codici specifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1377">For the most consistent results, you should use a Unicode encoding, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
  
 <span data-ttu-id="190f2-1378"><xref:System.Text.Encoding.GetEncoding%2A> Restituisce un'istanza memorizzata nella cache con le impostazioni predefinite.</span><span class="sxs-lookup"><span data-stu-id="190f2-1378"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="190f2-1379">Utilizzare i costruttori delle classi derivate per ottenere un'istanza con impostazioni diverse.</span><span class="sxs-lookup"><span data-stu-id="190f2-1379">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="190f2-1380">Ad esempio, la <xref:System.Text.UTF32Encoding> classe fornisce un costruttore che consente di abilitare il rilevamento errori.</span><span class="sxs-lookup"><span data-stu-id="190f2-1380">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  

   
  
## Examples  
 <span data-ttu-id="190f2-1381">Nell'esempio seguente ottiene due istanze della stessa codifica (uno dalla tabella codici) e un altro in base al nome e viene verificata l'eguaglianza.</span><span class="sxs-lookup"><span data-stu-id="190f2-1381">The following example gets two instances of the same encoding (one by code page and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-1382">
            <paramref name="codepage" /> is less than zero or greater than 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1382">
              <paramref name="codepage" /> is less than zero or greater than 65535.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="190f2-1383">
            <paramref name="codepage" /> is not supported by the underlying platform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1383">
              <paramref name="codepage" /> is not supported by the underlying platform.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="190f2-1384">
            <paramref name="codepage" /> is not supported by the underlying platform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1384">
              <paramref name="codepage" /> is not supported by the underlying platform.</span>
          </span>
        </exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="190f2-1385">The code page name of the preferred encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1385">The code page name of the preferred encoding.</span>
          </span>
          <span data-ttu-id="190f2-1386">Any value returned by the <see cref="P:System.Text.Encoding.WebName" /> property is valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1386">Any value returned by the <see cref="P:System.Text.Encoding.WebName" /> property is valid.</span>
          </span>
          <span data-ttu-id="190f2-1387">Possible values are listed in the Name column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1387">Possible values are listed in the Name column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1388">Returns the encoding associated with the specified code page name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1388">Returns the encoding associated with the specified code page name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1389">The encoding  associated with the specified code page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1389">The encoding  associated with the specified code page.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1390">Il gestore di fallback dipende dal tipo di codifica `name`.</span><span class="sxs-lookup"><span data-stu-id="190f2-1390">The fallback handler depends on the encoding type of `name`.</span></span> <span data-ttu-id="190f2-1391">Se `name` è un carattere di pagina o a byte doppio (DBCS) codifica del set, viene utilizzato un gestore di fallback con mapping più appropriato.</span><span class="sxs-lookup"><span data-stu-id="190f2-1391">If `name` is a code page or double-byte character set (DBCS) encoding, a best-fit fallback handler is used.</span></span> <span data-ttu-id="190f2-1392">In caso contrario, viene utilizzato un gestore di fallback di sostituzione.</span><span class="sxs-lookup"><span data-stu-id="190f2-1392">Otherwise, a replacement fallback handler is used.</span></span> <span data-ttu-id="190f2-1393">Questi gestori fallback potrebbero non essere appropriati per l'app.</span><span class="sxs-lookup"><span data-stu-id="190f2-1393">These fallback handlers may not be appropriate for your app.</span></span> <span data-ttu-id="190f2-1394">Per specificare il gestore di fallback usato per la codifica specificata da `name`, è possibile chiamare il <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="190f2-1394">To specify the fallback handler used by the encoding specified by `name`, you can call the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> overload.</span></span>  
  
 <span data-ttu-id="190f2-1395">Il <xref:System.Text.Encoding.GetEncoding%2A> metodo si basa sulla piattaforma sottostante per supportare la maggior parte delle tabelle codici.</span><span class="sxs-lookup"><span data-stu-id="190f2-1395">The <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="190f2-1396">Tuttavia, .NET Framework supporta in modo nativo alcune codifiche.</span><span class="sxs-lookup"><span data-stu-id="190f2-1396">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="190f2-1397">Per un elenco di tabelle codici, vedere il <xref:System.Text.Encoding> argomento relativo alla classe.</span><span class="sxs-lookup"><span data-stu-id="190f2-1397">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="190f2-1398">In alternativa, è possibile chiamare il <xref:System.Text.Encoding.GetEncodings%2A> metodo per ottenere una matrice di <xref:System.Text.EncodingInfo> gli oggetti che contiene informazioni su tutte le codifiche.</span><span class="sxs-lookup"><span data-stu-id="190f2-1398">Alternatively, you can call the <xref:System.Text.Encoding.GetEncodings%2A> method to get an array of <xref:System.Text.EncodingInfo> objects that contains information about all encodings.</span></span> 
  
 <span data-ttu-id="190f2-1399">Oltre alle codifiche supportate in una versione della piattaforma specifica di .NET Framework, in modo intrinseco il <xref:System.Text.Encoding.GetEncoding%2A> il metodo restituisce le codifiche delle tabelle aggiuntive che vengono resi disponibili tramite la registrazione di un <xref:System.Text.EncodingProvider> oggetto.</span><span class="sxs-lookup"><span data-stu-id="190f2-1399">In addition to the encodings that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="190f2-1400">Se la stessa codifica è stata registrata da più <xref:System.Text.EncodingProvider> oggetti, questo metodo restituisce l'ultimo registrato.</span><span class="sxs-lookup"><span data-stu-id="190f2-1400">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  
   
> [!NOTE]
>  <span data-ttu-id="190f2-1401">Le tabelle codici ANSI possono essere diverse su computer diversi o possono essere modificate per un singolo computer, causando il danneggiamento dei dati.</span><span class="sxs-lookup"><span data-stu-id="190f2-1401">The ANSI code pages can be different on different computers, or can be changed for a single computer, leading to data corruption.</span></span> <span data-ttu-id="190f2-1402">Per ottenere risultati più coerenti, è necessario utilizzare Unicode, ad esempio UTF-8 (tabella codici 65001) o UTF-16, anziché una tabella codici specifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1402">For the most consistent results, you should use Unicode, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
 
  
 <span data-ttu-id="190f2-1403"><xref:System.Text.Encoding.GetEncoding%2A> Restituisce un'istanza memorizzata nella cache con le impostazioni predefinite.</span><span class="sxs-lookup"><span data-stu-id="190f2-1403"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="190f2-1404">Utilizzare i costruttori delle classi derivate per ottenere un'istanza con impostazioni diverse.</span><span class="sxs-lookup"><span data-stu-id="190f2-1404">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="190f2-1405">Ad esempio, la <xref:System.Text.UTF32Encoding> classe fornisce un costruttore che consente di abilitare il rilevamento errori.</span><span class="sxs-lookup"><span data-stu-id="190f2-1405">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
## Examples  
 <span data-ttu-id="190f2-1406">Nell'esempio seguente ottiene due istanze della stessa codifica (uno dalla tabella codici) e un altro in base al nome e viene verificata l'eguaglianza.</span><span class="sxs-lookup"><span data-stu-id="190f2-1406">The following example gets two instances of the same encoding (one by code page and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="190f2-1407">
            <paramref name="name" /> is not a valid code page name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1407">
              <paramref name="name" /> is not a valid code page name.</span>
          </span>
          <span data-ttu-id="190f2-1408">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1408">-or-</span>
          </span>
          <span data-ttu-id="190f2-1409">The code page indicated by <paramref name="name" /> is not supported by the underlying platform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1409">The code page indicated by <paramref name="name" /> is not supported by the underlying platform.</span>
          </span>
        </exception>
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(int32 codepage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(int codepage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codepage">
          <span data-ttu-id="190f2-1410">The code page identifier of the preferred encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1410">The code page identifier of the preferred encoding.</span>
          </span>
          <span data-ttu-id="190f2-1411">Possible values are listed in the Code Page column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1411">Possible values are listed in the Code Page column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span>
          </span>
          <span data-ttu-id="190f2-1412">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1412">-or-</span>
          </span>
          <span data-ttu-id="190f2-1413">0 (zero), to use the default encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1413">0 (zero), to use the default encoding.</span>
          </span>
        </param>
        <param name="encoderFallback">
          <span data-ttu-id="190f2-1414">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1414">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span>
          </span>
        </param>
        <param name="decoderFallback">
          <span data-ttu-id="190f2-1415">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1415">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1416">Returns the encoding associated with the specified code page identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1416">Returns the encoding associated with the specified code page identifier.</span>
          </span>
          <span data-ttu-id="190f2-1417">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1417">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1418">The encoding that is associated with the specified code page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1418">The encoding that is associated with the specified code page.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="190f2-1419">Alcune tabelle codici non supportata di generare l'eccezione <xref:System.ArgumentException> generata, mentre altre causano <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1419">Some unsupported code pages cause the exception <xref:System.ArgumentException> to be thrown, whereas others cause <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="190f2-1420">Pertanto, il codice deve rilevare tutte le eccezioni indicate nella sezione eccezioni.</span><span class="sxs-lookup"><span data-stu-id="190f2-1420">Therefore, your code must catch all exceptions indicated in the Exceptions section.</span></span>  
  
 <span data-ttu-id="190f2-1421">Il <xref:System.Text.Encoding.GetEncoding%2A> metodo si basa sulla piattaforma sottostante per supportare la maggior parte delle tabelle codici.</span><span class="sxs-lookup"><span data-stu-id="190f2-1421">The <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="190f2-1422">Tuttavia, .NET Framework supporta in modo nativo alcune codifiche.</span><span class="sxs-lookup"><span data-stu-id="190f2-1422">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="190f2-1423">Per un elenco di tabelle codici, vedere il <xref:System.Text.Encoding> argomento relativo alla classe.</span><span class="sxs-lookup"><span data-stu-id="190f2-1423">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="190f2-1424">È possibile chiamare il <xref:System.Text.Encoding.GetEncodings%2A> metodo in .NET Framework completo sul desktop di Windows per ottenere un elenco di tutte le codifiche.</span><span class="sxs-lookup"><span data-stu-id="190f2-1424">You can call the <xref:System.Text.Encoding.GetEncodings%2A> method in the full .NET Framework on the Windows desktop to get a list of all encodings.</span></span>   
  
 <span data-ttu-id="190f2-1425">Oltre alle codifiche supportate in una versione della piattaforma specifica di .NET Framework, in modo intrinseco il <xref:System.Text.Encoding.GetEncoding%2A> il metodo restituisce le codifiche delle tabelle aggiuntive che vengono resi disponibili tramite la registrazione di un <xref:System.Text.EncodingProvider> oggetto.</span><span class="sxs-lookup"><span data-stu-id="190f2-1425">In addition to the encodings that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span>  <span data-ttu-id="190f2-1426">Se la stessa codifica è stata registrata da più <xref:System.Text.EncodingProvider> oggetti, questo metodo restituisce l'ultimo registrato.</span><span class="sxs-lookup"><span data-stu-id="190f2-1426">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  

<span data-ttu-id="190f2-1427">È inoltre possibile fornire un valore pari a 0 per il `codepage` argomento.</span><span class="sxs-lookup"><span data-stu-id="190f2-1427">You can also supply a value of 0 for the `codepage` argument.</span></span> <span data-ttu-id="190f2-1428">Il comportamento preciso dipende se le codifiche delle tabelle sono state rese disponibili tramite la registrazione di un <xref:System.Text.EncodingProvider> oggetto:</span><span class="sxs-lookup"><span data-stu-id="190f2-1428">Its precise behavior depends on whether any encodings have been made available by registering an <xref:System.Text.EncodingProvider> object:</span></span>

- <span data-ttu-id="190f2-1429">Se sono stati registrati uno o più provider di codifica, restituisce la codifica dell'ultimo provider registrato che ha scelto di restituire una codifica quando il <xref:System.Text.Encoding.GetEncoding%2A> viene passato un `codepage` argomento 0.</span><span class="sxs-lookup"><span data-stu-id="190f2-1429">If one or more encoding providers have been registered, it returns the encoding of the last registered provider that has chosen to return a encoding when the <xref:System.Text.Encoding.GetEncoding%2A> method is passed a `codepage` argument of 0.</span></span>     

- <span data-ttu-id="190f2-1430">In .NET Framework, se nessuna codifica provider è stato registrato, se il <xref:System.Text.CodePagesEncodingProvider> è il provider di codifica registrato, o se nessun provider di codifica registrato gestisce un `codepage` valore pari a 0, restituisce la tabella codici attiva.</span><span class="sxs-lookup"><span data-stu-id="190f2-1430">On the .NET Framework, if no encoding provider has been registered, if the <xref:System.Text.CodePagesEncodingProvider> is the registered encoding provider, or if no registered encoding provider handles a `codepage` value of 0, it returns the active code page.</span></span>

- <span data-ttu-id="190f2-1431">In .NET Core, se non è stato registrato il provider di codifica o se nessun provider di codifica registrato gestisce un `codepage` valore pari a 0, restituisce il <xref:System.Text.UTF8Encoding> codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1431">On .NET Core, if no encoding provider has been registered or if no registered encoding provider handles a `codepage` value of 0, it returns the <xref:System.Text.UTF8Encoding> encoding.</span></span>

> [!NOTE]
>  <span data-ttu-id="190f2-1432">Le tabelle codici ANSI possono essere diverse su computer diversi e possono modificare in un singolo computer, causando il danneggiamento dei dati.</span><span class="sxs-lookup"><span data-stu-id="190f2-1432">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="190f2-1433">Per questo motivo, se la tabella codici attiva è una tabella codici ANSI, codifica e decodifica dei dati utilizzando la tabella codici predefinita restituita da `Encoding.GetEncoding(0)` non è consigliata.</span><span class="sxs-lookup"><span data-stu-id="190f2-1433">For this reason, if the active code page is an ANSI code page, encoding and decoding data using the default code page returned by `Encoding.GetEncoding(0)` is not recommended.</span></span> <span data-ttu-id="190f2-1434">Per ottenere risultati più coerenti, è necessario utilizzare Unicode, ad esempio UTF-8 (tabella codici 65001) o UTF-16, anziché una tabella codici specifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1434">For the most consistent results, you should use Unicode, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span> 
  
 <span data-ttu-id="190f2-1435">Per ottenere la codifica associata alla tabella codici attiva, ovvero è possibile fornire un valore pari a 0 per il `codepage` argomento o, se il codice è in esecuzione in .NET Framework sul desktop di Windows, recuperare il valore della <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="190f2-1435">To get the encoding associated with the active code page, you can either supply a value of 0 for the `codepage` argument or, if your code is running on the full .NET Framework on the Windows desktop, retrieve the value of the <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="190f2-1436">Per determinare la tabella codici attiva corrente, chiamare il Windows [GetACP](http://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) funzione da .NET Framework sul desktop di Windows.</span><span class="sxs-lookup"><span data-stu-id="190f2-1436">To determine the current active code page, call the Windows [GetACP](http://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) function from the .NET Framework on the Windows desktop.</span></span>  
  
 <span data-ttu-id="190f2-1437"><xref:System.Text.Encoding.GetEncoding%2A> Restituisce un'istanza memorizzata nella cache con le impostazioni predefinite.</span><span class="sxs-lookup"><span data-stu-id="190f2-1437"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="190f2-1438">Utilizzare i costruttori delle classi derivate per ottenere un'istanza con impostazioni diverse.</span><span class="sxs-lookup"><span data-stu-id="190f2-1438">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="190f2-1439">Ad esempio, la <xref:System.Text.UTF32Encoding> classe fornisce un costruttore che consente di abilitare il rilevamento errori.</span><span class="sxs-lookup"><span data-stu-id="190f2-1439">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1440">Nell'esempio seguente viene illustrato il <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1440">The following example demonstrates the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[sys.txt.fallbackEncRpl#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cpp/fallEncRpl.cpp#1)]
 [!code-csharp[sys.txt.fallbackEncRpl#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cs/fallEncRpl.cs#1)]
 [!code-vb[sys.txt.fallbackEncRpl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackEncRpl/vb/fallEncRpl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-1441">
            <paramref name="codepage" /> is less than zero or greater than 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1441">
              <paramref name="codepage" /> is less than zero or greater than 65535.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="190f2-1442">
            <paramref name="codepage" /> is not supported by the underlying platform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1442">
              <paramref name="codepage" /> is not supported by the underlying platform.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="190f2-1443">
            <paramref name="codepage" /> is not supported by the underlying platform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1443">
              <paramref name="codepage" /> is not supported by the underlying platform.</span>
          </span>
        </exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(string name, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(System::String ^ name, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="190f2-1444">The code page name of the preferred encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1444">The code page name of the preferred encoding.</span>
          </span>
          <span data-ttu-id="190f2-1445">Any value returned by the <see cref="P:System.Text.Encoding.WebName" /> property is valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1445">Any value returned by the <see cref="P:System.Text.Encoding.WebName" /> property is valid.</span>
          </span>
          <span data-ttu-id="190f2-1446">Possible values are listed in the Name column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1446">Possible values are listed in the Name column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span>
          </span>
        </param>
        <param name="encoderFallback">
          <span data-ttu-id="190f2-1447">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1447">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span>
          </span>
        </param>
        <param name="decoderFallback">
          <span data-ttu-id="190f2-1448">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1448">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1449">Returns the encoding associated with the specified code page name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1449">Returns the encoding associated with the specified code page name.</span>
          </span>
          <span data-ttu-id="190f2-1450">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1450">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1451">The encoding that is associated with the specified code page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1451">The encoding that is associated with the specified code page.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1452">Il <xref:System.Text.Encoding.GetEncoding%2A> metodo si basa sulla piattaforma sottostante per supportare la maggior parte delle tabelle codici.</span><span class="sxs-lookup"><span data-stu-id="190f2-1452">The <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="190f2-1453">Tuttavia, .NET Framework supporta in modo nativo alcune codifiche.</span><span class="sxs-lookup"><span data-stu-id="190f2-1453">However, the .NET Framework natively supports some encodings.</span></span>  
  
 <span data-ttu-id="190f2-1454">Oltre alle codifiche supportate in una versione della piattaforma specifica di .NET Framework, in modo intrinseco il <xref:System.Text.Encoding.GetEncoding%2A> il metodo restituisce le codifiche delle tabelle aggiuntive che vengono resi disponibili tramite la registrazione di un <xref:System.Text.EncodingProvider> oggetto.</span><span class="sxs-lookup"><span data-stu-id="190f2-1454">In addition to the encodings that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="190f2-1455">Se la stessa codifica è stata registrata da più <xref:System.Text.EncodingProvider> oggetti, questo metodo restituisce l'ultimo registrato.</span><span class="sxs-lookup"><span data-stu-id="190f2-1455">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span> 
  
> [!NOTE]
>  <span data-ttu-id="190f2-1456">Le tabelle codici ANSI possono essere diverse su computer diversi e possono modificare in un singolo computer, causando il danneggiamento dei dati.</span><span class="sxs-lookup"><span data-stu-id="190f2-1456">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="190f2-1457">Per ottenere risultati più coerenti, è necessario utilizzare una codifica Unicode, ad esempio UTF-8 (tabella codici 65001) o UTF-16, anziché una tabella codici specifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1457">For the most consistent results, you should use a Unicode encoding, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
  
 <span data-ttu-id="190f2-1458">Per un elenco di tabelle codici, vedere il <xref:System.Text.Encoding> argomento relativo alla classe.</span><span class="sxs-lookup"><span data-stu-id="190f2-1458">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="190f2-1459">È possibile chiamare il <xref:System.Text.Encoding.GetEncodings%2A> metodo in .NET Framework sul desktop di Windows per ottenere un elenco di tutte le codifiche.</span><span class="sxs-lookup"><span data-stu-id="190f2-1459">You can call the <xref:System.Text.Encoding.GetEncodings%2A> method on the full .NET Framework on the Windows desktop to get a list of all encodings.</span></span>  
  
 <span data-ttu-id="190f2-1460"><xref:System.Text.Encoding.GetEncoding%2A> Restituisce un'istanza memorizzata nella cache con le impostazioni predefinite.</span><span class="sxs-lookup"><span data-stu-id="190f2-1460"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="190f2-1461">Utilizzare i costruttori delle classi derivate per ottenere un'istanza con impostazioni diverse.</span><span class="sxs-lookup"><span data-stu-id="190f2-1461">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="190f2-1462">Ad esempio, la <xref:System.Text.UTF32Encoding> classe fornisce un costruttore che consente di abilitare il rilevamento errori.</span><span class="sxs-lookup"><span data-stu-id="190f2-1462">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1463">Nell'esempio seguente viene illustrato il <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1463">The following example demonstrates the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[sys.txt.fallbackEncRpl#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cpp/fallEncRpl.cpp#1)]
 [!code-csharp[sys.txt.fallbackEncRpl#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cs/fallEncRpl.cs#1)]
 [!code-vb[sys.txt.fallbackEncRpl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackEncRpl/vb/fallEncRpl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="190f2-1464">
            <paramref name="name" /> is not a valid code page name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1464">
              <paramref name="name" /> is not a valid code page name.</span>
          </span>
          <span data-ttu-id="190f2-1465">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1465">-or-</span>
          </span>
          <span data-ttu-id="190f2-1466">The code page indicated by <paramref name="name" /> is not supported by the underlying platform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1466">The code page indicated by <paramref name="name" /> is not supported by the underlying platform.</span>
          </span>
        </exception>
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
      </Docs>
    </Member>
    <Member MemberName="GetEncodings">
      <MemberSignature Language="C#" Value="public static System.Text.EncodingInfo[] GetEncodings ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.EncodingInfo[] GetEncodings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncodings" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncodings () As EncodingInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Text::EncodingInfo ^&gt; ^ GetEncodings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncodingInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1467">Returns an array that contains all encodings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1467">Returns an array that contains all encodings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1468">An array that contains all encodings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1468">An array that contains all encodings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1469">Questo metodo restituisce un elenco di codifiche supportate, in modo univoco distinte dalla tabella codici.</span><span class="sxs-lookup"><span data-stu-id="190f2-1469">This method returns a list of supported encodings, uniquely distinguished by code page.</span></span> <span data-ttu-id="190f2-1470">Per una tabella che elenca le codifiche supportate, vedere il <xref:System.Text.Encoding> argomento relativo alla classe.</span><span class="sxs-lookup"><span data-stu-id="190f2-1470">For a table that lists the supported encodings, see the <xref:System.Text.Encoding> class topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="190f2-1471">L'elenco di codifiche supportate restituite dal <xref:System.Text.Encoding.GetEncodings%2A> metodo non include le codifiche delle tabelle aggiuntive rese disponibili da qualsiasi <xref:System.Text.EncodingProvider> implementazioni che sono state registrate mediante chiamate al <xref:System.Text.Encoding.RegisterProvider%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1471">The list of supported encodings returned by the <xref:System.Text.Encoding.GetEncodings%2A> method does not include any additional encodings made available by any <xref:System.Text.EncodingProvider> implementations that were registered by calls to the <xref:System.Text.Encoding.RegisterProvider%2A> method.</span></span>  
  
 <span data-ttu-id="190f2-1472">Le codifiche 50220 e 50222 sono entrambe associate al nome "iso-2022-jp", ma non sono identici.</span><span class="sxs-lookup"><span data-stu-id="190f2-1472">Encodings 50220 and 50222 are both associated with the name "iso-2022-jp", but they are not identical.</span></span> <span data-ttu-id="190f2-1473">La codifica 50220 converte i caratteri Katakana a metà larghezza in caratteri Katakana a larghezza intera, mentre la codifica 50222 utilizza una sequenza di MAIUSC-in/MAIUSC-out per codificare i caratteri Katakana a metà larghezza.</span><span class="sxs-lookup"><span data-stu-id="190f2-1473">Encoding 50220 converts half-width Katakana characters to full-width Katakana characters, whereas encoding 50222 uses a shift-in/shift-out sequence to encode half-width Katakana characters.</span></span> <span data-ttu-id="190f2-1474">Il nome visualizzato per la codifica 50222 è "giapponese (JIS-consente Kana - a 1 byte così / SI)" per distinguerla dalla codifica 50220, la visualizzazione con nome "giapponese (JIS)".</span><span class="sxs-lookup"><span data-stu-id="190f2-1474">The display name for encoding 50222 is "Japanese (JIS-Allow 1 byte Kana - SO/SI)" to distinguish it from encoding 50220, which has the display name "Japanese (JIS)".</span></span>  
  
 <span data-ttu-id="190f2-1475">Se si richiede il nome di codifica "iso-2022-jp", .NET Framework restituisce la codifica 50220.</span><span class="sxs-lookup"><span data-stu-id="190f2-1475">If you request the encoding name "iso-2022-jp", the .NET Framework returns encoding 50220.</span></span> <span data-ttu-id="190f2-1476">La codifica appropriata per l'applicazione dipende tuttavia la modalità di gestione Preferiti, i caratteri Katakana a metà larghezza.</span><span class="sxs-lookup"><span data-stu-id="190f2-1476">However, the encoding that is appropriate for your app depends on the preferred treatment of the half-width Katakana characters.</span></span>  
  
 <span data-ttu-id="190f2-1477">Per ottenere una codifica specifica, è consigliabile utilizzare il <xref:System.Text.Encoding.GetEncoding%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1477">To get a specific encoding, you should use the <xref:System.Text.Encoding.GetEncoding%2A> method.</span></span>  
  
 <span data-ttu-id="190f2-1478"><xref:System.Text.Encoding.GetEncodings%2A> a volte viene utilizzato per presentare all'utente un elenco di codifiche in un File **salvare come** la finestra di dialogo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1478"><xref:System.Text.Encoding.GetEncodings%2A> is sometimes used to present the user with a list of encodings in a File **Save as** dialog box.</span></span> <span data-ttu-id="190f2-1479">Tuttavia, molte codifiche non Unicode sono incompleti e numero di caratteri da convertire "?", o hanno un comportamento leggermente diverso su piattaforme diverse.</span><span class="sxs-lookup"><span data-stu-id="190f2-1479">However, many non-Unicode encodings are either incomplete and translate many characters to "?", or have subtly different behavior on different platforms.</span></span> <span data-ttu-id="190f2-1480">Considerare l'uso di UTF-8 o UTF-16 come il valore predefinito.</span><span class="sxs-lookup"><span data-stu-id="190f2-1480">Consider using UTF-8 or UTF-16 as the default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1481">L'esempio seguente verifica i valori delle proprietà booleana di ogni tipo di codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1481">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1482">Returns the hash code for the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1482">Returns the hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1483">The hash code for the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1483">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public abstract int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMaxByteCount(int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount">
          <span data-ttu-id="190f2-1484">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1484">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1485">When overridden in a derived class, calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1485">When overridden in a derived class, calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1486">The maximum number of bytes produced by encoding the specified number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1486">The maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1487">Il `charCount` parametro effettivamente specifica il numero di <xref:System.Char> gli oggetti che rappresentano i caratteri Unicode da codificare, poiché .NET Framework, UTF-16 viene utilizzata internamente per rappresentare caratteri Unicode.</span><span class="sxs-lookup"><span data-stu-id="190f2-1487">The `charCount` parameter actually specifies the number of <xref:System.Char> objects that represent the Unicode characters to encode, because the .NET Framework internally uses UTF-16 to represent Unicode characters.</span></span> <span data-ttu-id="190f2-1488">Di conseguenza, la maggior parte dei caratteri Unicode possono essere rappresentati da uno <xref:System.Char> oggetto, ma un carattere Unicode rappresentato da una coppia di surrogati, ad esempio, richiede due <xref:System.Char> oggetti.</span><span class="sxs-lookup"><span data-stu-id="190f2-1488">Consequently, most Unicode characters can be represented by one <xref:System.Char> object, but a Unicode character represented by a surrogate pair, for example, requires two <xref:System.Char> objects.</span></span>  
  
 <span data-ttu-id="190f2-1489">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.Encoding.GetBytes%2A> per archiviare i byte risultanti, è consigliabile utilizzare il <xref:System.Text.Encoding.GetByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1489">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should use the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="190f2-1490">Per calcolare la dimensione massima della matrice, utilizzare il <xref:System.Text.Encoding.GetMaxByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1490">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="190f2-1491">Il <xref:System.Text.Encoding.GetByteCount%2A> metodo consente in genere l'allocazione di memoria inferiore, mentre il <xref:System.Text.Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="190f2-1491">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="190f2-1492"><xref:System.Text.Encoding.GetMaxByteCount%2A> Recupera un numero caso peggiore, incluso il caso peggiore per l'oggetto attualmente selezionato <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1492"><xref:System.Text.Encoding.GetMaxByteCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="190f2-1493">Se si sceglie un fallback con una stringa potenzialmente grande, <xref:System.Text.Encoding.GetMaxByteCount%2A> recupera i valori di grandi dimensioni, in particolare nei casi in cui il caso peggiore per la codifica implica cambiare modalità per ogni carattere.</span><span class="sxs-lookup"><span data-stu-id="190f2-1493">If a fallback is chosen with a potentially large string, <xref:System.Text.Encoding.GetMaxByteCount%2A> retrieves large values, particularly in cases where the worst case for the encoding involves switching modes for every character.</span></span> <span data-ttu-id="190f2-1494">Ad esempio, può verificarsi per ISO-2022-JP.</span><span class="sxs-lookup"><span data-stu-id="190f2-1494">For example, this can happen for ISO-2022-JP.</span></span> <span data-ttu-id="190f2-1495">Per ulteriori informazioni, vedere il post di blog "[novità con Encoding.GetMaxByteCount() ed Encoding.GetMaxCharCount()?](http://go.microsoft.com/fwlink/?LinkId=153702)"</span><span class="sxs-lookup"><span data-stu-id="190f2-1495">For more information, see the blog entry "[What's with Encoding.GetMaxByteCount() and Encoding.GetMaxCharCount()?](http://go.microsoft.com/fwlink/?LinkId=153702)"</span></span> <span data-ttu-id="190f2-1496">(http://blogs.msdn.com/shawnste/archive/2005/03/02/383903.aspx).</span><span class="sxs-lookup"><span data-stu-id="190f2-1496">(http://blogs.msdn.com/shawnste/archive/2005/03/02/383903.aspx).</span></span>  
  
 <span data-ttu-id="190f2-1497">Nella maggior parte dei casi, questo metodo recupera i valori accettabili per stringhe di piccole dimensioni.</span><span class="sxs-lookup"><span data-stu-id="190f2-1497">In most cases, this method retrieves reasonable values for small strings.</span></span> <span data-ttu-id="190f2-1498">Per le stringhe di grandi dimensioni, potrebbe essere necessario scegliere tra l'utilizzo di buffer molto grandi e rilevamento di errori nel raro caso quando un buffer più ragionevole è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1498">For large strings, you might have to choose between using very large buffers and catching errors in the rare case when a more reasonable buffer is too small.</span></span> <span data-ttu-id="190f2-1499">È inoltre possibile utilizzare un approccio diverso <xref:System.Text.Encoding.GetByteCount%2A> o <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1499">You might also want to consider a different approach using <xref:System.Text.Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="190f2-1500">Quando si utilizza <xref:System.Text.Encoding.GetMaxByteCount%2A>, è consigliabile allocare il buffer di output in base alla dimensione massima del buffer di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1500">When using <xref:System.Text.Encoding.GetMaxByteCount%2A>, you should allocate the output buffer based on the maximum size of the input buffer.</span></span> <span data-ttu-id="190f2-1501">Se il buffer di output è vincolato nelle dimensioni, è possibile utilizzare il <xref:System.Text.Encoding.Convert%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1501">If the output buffer is constrained in size, you might use the <xref:System.Text.Encoding.Convert%2A> method.</span></span>  
  
 <span data-ttu-id="190f2-1502">Si noti che <xref:System.Text.Encoding.GetMaxByteCount%2A> prende in considerazione potenziali surrogati residui di un'operazione precedente del decodificatore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1502">Note that <xref:System.Text.Encoding.GetMaxByteCount%2A> considers potential leftover surrogates from a previous decoder operation.</span></span> <span data-ttu-id="190f2-1503">A causa del decodificatore, passando il valore 1 per il metodo recupera 2 per una codifica a byte singolo, ad esempio ASCII.</span><span class="sxs-lookup"><span data-stu-id="190f2-1503">Because of the decoder, passing a value of 1 to the method retrieves 2 for a single-byte encoding, such as ASCII.</span></span> <span data-ttu-id="190f2-1504">È consigliabile utilizzare il <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> proprietà se queste informazioni sono necessarie.</span><span class="sxs-lookup"><span data-stu-id="190f2-1504">You should use the <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> property if this information is necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="190f2-1505">`GetMaxByteCount(N)` non è necessariamente lo stesso valore di `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="190f2-1505">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1506">Nell'esempio seguente determina il numero di byte necessari per codificare una matrice di caratteri, codifica i caratteri e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="190f2-1506">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-1507">
            <paramref name="charCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1507">
              <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="190f2-1508">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1508">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-1509">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1509">-and-</span>
          </span>
          <span data-ttu-id="190f2-1510">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1510">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="190f2-1511">Tutti <see cref="T:System.Text.Encoding" /> implementazioni devono garantire che nessun eccezioni di overflow del buffer viene eseguito se i buffer vengono ridimensionati in base ai risultati dei calcoli di questo metodo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="190f2-1511">All <see cref="T:System.Text.Encoding" /> implementations must guarantee that no buffer overflow exceptions occur if buffers are sized according to the results of this method's calculations.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public abstract int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMaxCharCount(int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount">
          <span data-ttu-id="190f2-1512">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1512">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1513">When overridden in a derived class, calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1513">When overridden in a derived class, calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1514">The maximum number of characters produced by decoding the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1514">The maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1515">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.Encoding.GetChars%2A> per archiviare i caratteri risultanti, è consigliabile utilizzare il <xref:System.Text.Encoding.GetCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1515">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="190f2-1516">Per calcolare la dimensione massima della matrice, utilizzare il <xref:System.Text.Encoding.GetMaxCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1516">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="190f2-1517">Il <xref:System.Text.Encoding.GetCharCount%2A> metodo consente in genere l'allocazione di memoria inferiore, mentre il <xref:System.Text.Encoding.GetMaxCharCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="190f2-1517">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="190f2-1518"><xref:System.Text.Encoding.GetMaxCharCount%2A> Recupera un numero caso peggiore, incluso il caso peggiore per l'oggetto attualmente selezionato <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1518"><xref:System.Text.Encoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="190f2-1519">Se si sceglie un fallback con una stringa potenzialmente grande, <xref:System.Text.Encoding.GetMaxCharCount%2A> recupera i valori di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="190f2-1519">If a fallback is chosen with a potentially large string, <xref:System.Text.Encoding.GetMaxCharCount%2A> retrieves large values.</span></span>  
  
 <span data-ttu-id="190f2-1520">Nella maggior parte dei casi, questo metodo recupera ragionevole per stringhe di piccole dimensioni.</span><span class="sxs-lookup"><span data-stu-id="190f2-1520">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="190f2-1521">Per le stringhe di grandi dimensioni, potrebbe essere necessario scegliere tra l'utilizzo di buffer molto grandi e rilevamento di errori nel raro caso che un buffer più ragionevole è troppo piccolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1521">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is too small.</span></span> <span data-ttu-id="190f2-1522">È inoltre possibile utilizzare un approccio diverso <xref:System.Text.Encoding.GetCharCount%2A> o <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1522">You might also want to consider a different approach using <xref:System.Text.Encoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="190f2-1523"><xref:System.Text.Encoding.GetMaxCharCount%2A> non ha alcuna relazione di <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1523"><xref:System.Text.Encoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="190f2-1524">Se si necessita di una funzione simile da utilizzare con <xref:System.Text.Encoding.GetBytes%2A>, si consiglia di utilizzare <xref:System.Text.Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1524">If you needs a similar function to use with <xref:System.Text.Encoding.GetBytes%2A>, you should use <xref:System.Text.Encoding.GetMaxByteCount%2A>.</span></span>  
  
 <span data-ttu-id="190f2-1525">Quando si utilizza <xref:System.Text.Encoding.GetMaxCharCount%2A>, è consigliabile allocare il buffer di output in base alla dimensione massima del buffer di input.</span><span class="sxs-lookup"><span data-stu-id="190f2-1525">When using <xref:System.Text.Encoding.GetMaxCharCount%2A>, you should allocate the output buffer based on the maximum size of the input buffer.</span></span> <span data-ttu-id="190f2-1526">Se il buffer di output è vincolato nelle dimensioni, è possibile utilizzare il <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1526">If the output buffer is constrained in size, you might use the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="190f2-1527">Si noti che <xref:System.Text.Encoding.GetMaxCharCount%2A> considera il caso peggiore per byte residui restituiti da una precedente operazione del codificatore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1527">Note that <xref:System.Text.Encoding.GetMaxCharCount%2A> considers the worst case for leftover bytes from a previous encoder operation.</span></span> <span data-ttu-id="190f2-1528">Per la maggior parte delle tabelle codici, passando un valore pari a 0 a questo metodo recupera i valori maggiori o uguali a 1.</span><span class="sxs-lookup"><span data-stu-id="190f2-1528">For most code pages, passing a value of 0 to this method retrieves values greater than or equal to 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="190f2-1529">`GetMaxCharCount(N)` non è necessariamente lo stesso valore di `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="190f2-1529">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1530">Nell'esempio seguente consente di codificare una stringa in una matrice di byte e quindi decodifica i byte in una matrice di caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-1530">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-1531">
            <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1531">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="190f2-1532">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1532">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-1533">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1533">-and-</span>
          </span>
          <span data-ttu-id="190f2-1534">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1534">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="190f2-1535">Tutti <see cref="T:System.Text.Encoding" /> implementazioni devono garantire che nessun eccezioni di overflow del buffer viene eseguito se i buffer vengono ridimensionati in base ai risultati dei calcoli di questo metodo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="190f2-1535">All <see cref="T:System.Text.Encoding" /> implementations must guarantee that no buffer overflow exceptions occur if buffers are sized according to the results of this method's calculations.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public virtual byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1536">When overridden in a derived class, returns a sequence of bytes that specifies the encoding used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1536">When overridden in a derived class, returns a sequence of bytes that specifies the encoding used.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1537">A byte array containing a sequence of bytes that specifies the encoding used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1537">A byte array containing a sequence of bytes that specifies the encoding used.</span>
          </span>
          <span data-ttu-id="190f2-1538">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1538">-or-</span>
          </span>
          <span data-ttu-id="190f2-1539">A byte array of length zero, if a preamble is not required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1539">A byte array of length zero, if a preamble is not required.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1540">Facoltativamente, il <xref:System.Text.Encoding> oggetto fornisce un preambolo che è una matrice di byte che possono essere preceduti della sequenza di byte risultante dal processo di codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1540">Optionally, the <xref:System.Text.Encoding> object provides a preamble that is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="190f2-1541">Se il preambolo contiene un byte order mark (in Unicode, il punto di codice U + FEFF), consente il decodificatore di determinare l'ordine dei byte e il formato di trasformazione o UTF.</span><span class="sxs-lookup"><span data-stu-id="190f2-1541">If the preamble contains a byte order mark (in Unicode, code point U+FEFF), it helps the decoder determine the byte order and the transformation format or UTF.</span></span>  
  
 <span data-ttu-id="190f2-1542">Il byte order mark (BOM) Unicode viene serializzato nel modo seguente (in esadecimale):</span><span class="sxs-lookup"><span data-stu-id="190f2-1542">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="190f2-1543">UTF-8: EF BB BF</span><span class="sxs-lookup"><span data-stu-id="190f2-1543">UTF-8: EF BB BF</span></span>  
  
-   <span data-ttu-id="190f2-1544">Ordine dei byte UTF-16 big endian: FF FE</span><span class="sxs-lookup"><span data-stu-id="190f2-1544">UTF-16 big endian byte order: FE FF</span></span>  
  
-   <span data-ttu-id="190f2-1545">Ordine dei byte little-endian UTF-16 little: FF FE</span><span class="sxs-lookup"><span data-stu-id="190f2-1545">UTF-16 little endian byte order: FF FE</span></span>  
  
-   <span data-ttu-id="190f2-1546">Ordine dei byte big endian UTF-32: 00 00 FF FE</span><span class="sxs-lookup"><span data-stu-id="190f2-1546">UTF-32 big endian byte order: 00 00 FE FF</span></span>  
  
-   <span data-ttu-id="190f2-1547">Ordine dei byte little-endian little UTF-32: FF FE 00 00</span><span class="sxs-lookup"><span data-stu-id="190f2-1547">UTF-32 little endian byte order: FF FE 00 00</span></span>  
  
 <span data-ttu-id="190f2-1548">È consigliabile utilizzare il BOM, poiché fornisce alcuni identificazione di una codifica per i file che non hanno più riferimento a quasi il <xref:System.Text.Encoding> oggetto, ad esempio, o senza dati web o file di testo casuali archiviati quando una società non hanno internazionali problemi o altri dati.</span><span class="sxs-lookup"><span data-stu-id="190f2-1548">You should use the BOM, because it provides nearly certain identification of an encoding for files that otherwise have lost reference to the <xref:System.Text.Encoding> object, for example, untagged or improperly tagged web data or random text files stored when a business did not have international concerns or other data.</span></span> <span data-ttu-id="190f2-1549">Spesso i problemi dell'utente potrebbero essere evitati se i dati in modo coerente e corretta tag, preferibilmente in UTF-8 o UTF-16.</span><span class="sxs-lookup"><span data-stu-id="190f2-1549">Often user problems might be avoided if data is consistently and properly tagged, preferably in UTF-8 or UTF-16.</span></span>  
  
 <span data-ttu-id="190f2-1550">Per gli standard che forniscono un tipo di codifica, un BOM risulta piuttosto ridondante.</span><span class="sxs-lookup"><span data-stu-id="190f2-1550">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="190f2-1551">Tuttavia, può essere utilizzato per consentire a un server di inviare l'intestazione di codifica corretta.</span><span class="sxs-lookup"><span data-stu-id="190f2-1551">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="190f2-1552">In alternativa, può essere utilizzato come fallback nel caso in cui la codifica in caso contrario viene persa.</span><span class="sxs-lookup"><span data-stu-id="190f2-1552">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="190f2-1553">Esistono alcuni svantaggi dell'utilizzo di una distinta base.</span><span class="sxs-lookup"><span data-stu-id="190f2-1553">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="190f2-1554">Ad esempio, può essere difficile sapere come limitare i campi del database che utilizzano una distinta base.</span><span class="sxs-lookup"><span data-stu-id="190f2-1554">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="190f2-1555">La concatenazione di file può rappresentare un problema, inoltre, ad esempio, quando i file vengono uniti in tale modo un carattere non necessario può finire al centro dati.</span><span class="sxs-lookup"><span data-stu-id="190f2-1555">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="190f2-1556">Nonostante alcuni svantaggi, tuttavia, l'utilizzo di un indicatore ordine byte è consigliabile.</span><span class="sxs-lookup"><span data-stu-id="190f2-1556">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="190f2-1557">Per ulteriori informazioni sull'ordine dei byte e il byte order mark, vedere lo Unicode Standard nella [home page di Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="190f2-1557">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="190f2-1558">Per garantire che i byte codificati vengano decodificati correttamente, si deve aggiungere byte codificati con un preambolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1558">To ensure that the encoded bytes are decoded properly, you should prefix encoded bytes with a preamble.</span></span> <span data-ttu-id="190f2-1559">Tuttavia, la maggior parte delle codifiche non forniscono un preambolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1559">However, most encodings do not provide a preamble.</span></span> <span data-ttu-id="190f2-1560">Per garantire che i byte codificati vengano decodificati correttamente, è consigliabile utilizzare una codifica Unicode, vale a dire <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, o <xref:System.Text.UTF32Encoding>, con un preambolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1560">To ensure that the encoded bytes are decoded properly, you should use a Unicode encoding, that is, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding>, with a preamble.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1561">Nell'esempio seguente determina l'ordine dei byte della codifica in base al preambolo.</span><span class="sxs-lookup"><span data-stu-id="190f2-1561">The following example determines the byte order of the encoding based on the preamble.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/CPP/preamble.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/CS/preamble.cs#1)]
 [!code-vb[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/VB/preamble.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetString">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1562">When overridden in a derived class, decodes a sequence of bytes into a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1562">When overridden in a derived class, decodes a sequence of bytes into a string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (bytes As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="190f2-1563">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1563">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1564">When overridden in a derived class, decodes all the bytes in the specified byte array into a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1564">When overridden in a derived class, decodes all the bytes in the specified byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1565">A string that contains the results of decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1565">A string that contains the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1566">Se il conversione dei dati sono disponibili solo in blocchi sequenziali (ad esempio i dati letti da un flusso) o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, è necessario utilizzare il <xref:System.Text.Decoder> oggetto restituito dal <xref:System.Text.Encoding.GetDecoder%2A> di un deri (metodo) classe Consenti.</span><span class="sxs-lookup"><span data-stu-id="190f2-1566">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> object returned by the <xref:System.Text.Encoding.GetDecoder%2A> method of a derived class.</span></span>  
  
 <span data-ttu-id="190f2-1567">Vedere la sezione Note del <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> argomento di riferimento per una descrizione delle considerazioni e le tecniche di decodifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1567">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
 <span data-ttu-id="190f2-1568">Si noti che il comportamento del preciso di <xref:System.Text.Encoding.GetString%2A> metodo per un particolare <xref:System.Text.Encoding> implementazione dipende la strategia di fallback definita per tale <xref:System.Text.Encoding> oggetto.</span><span class="sxs-lookup"><span data-stu-id="190f2-1568">Note that the precise behavior of the <xref:System.Text.Encoding.GetString%2A> method for a particular <xref:System.Text.Encoding> implementation depends on the fallback strategy defined for that <xref:System.Text.Encoding> object.</span></span> <span data-ttu-id="190f2-1569">Per ulteriori informazioni, vedere la sezione "Scelta di una strategia di Fallback" del [codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md) argomento.</span><span class="sxs-lookup"><span data-stu-id="190f2-1569">For more information, see the "Choosing a Fallback Strategy" section of the [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1570">Nell'esempio seguente legge una stringa con codificata UTF-8 da un file binario rappresentato da un <xref:System.IO.FileStream> oggetto.</span><span class="sxs-lookup"><span data-stu-id="190f2-1570">The following example reads a UTF-8 encoded string from a binary file represented by a <xref:System.IO.FileStream> object.</span></span> <span data-ttu-id="190f2-1571">Per i file più piccoli di 2.048 byte, legge il contenuto dell'intero file in una matrice di byte e chiama il <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%29> metodo per eseguire la decodifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1571">For files that are smaller than 2,048 bytes, it reads the contents of the entire file into a byte array and calls the <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%29> method to perform the decoding.</span></span> <span data-ttu-id="190f2-1572">Per i file più grandi, legge 2.048 byte alla volta in una matrice di byte, le chiamate di <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metodo per determinare il numero di caratteri contenuti nella matrice e chiama quindi il <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> metodo per eseguire la decodifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1572">For larger files, it reads 2,048 bytes at a time into a byte array, calls the <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to determine how many characters are contained in the array, and then calls the <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method to perform the decoding.</span></span>  
  
 [!code-csharp[System.Text.Encoding.GetString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetString/CS/getstring1.cs#2)]
 [!code-vb[System.Text.Encoding.GetString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetString/VB/getstring1.vb#2)]  
  
 <span data-ttu-id="190f2-1573">Nell'esempio viene utilizzato il testo seguente, che deve essere salvato in un file con codificata UTF-8 denominato Utf8Example.txt.</span><span class="sxs-lookup"><span data-stu-id="190f2-1573">The example uses the following text, which should be saved to a UTF-8 encoded file named Utf8Example.txt.</span></span>  
  
```  
  
This is a UTF-8-encoded file that contains primarily Latin text, although it   
does list the first twelve letters of the Russian (Cyrillic) alphabet:  
  
А б в г д е ё ж з и й к  
  
The goal is to save this file, then open and decode it as a binary stream.  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="190f2-1574">The byte array contains invalid Unicode code points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1574">The byte array contains invalid Unicode code points.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-1575">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1575">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="190f2-1576">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1576">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-1577">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1577">-and-</span>
          </span>
          <span data-ttu-id="190f2-1578">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1578">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString (bytes As ReadOnlySpan(Of Byte)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(System::Byte* bytes, int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="190f2-1579">A pointer to a byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1579">A pointer to a byte array.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="190f2-1580">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1580">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1581">When overridden in a derived class, decodes a specified number of bytes starting at a specified address into a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1581">When overridden in a derived class, decodes a specified number of bytes starting at a specified address into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1582">A string that contains the results of decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1582">A string that contains the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1583">Il <xref:System.Text.Encoding.GetString%2A> metodo consente di ottimizzare le prestazioni quando si dispone di un puntatore nativo in una matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="190f2-1583">The <xref:System.Text.Encoding.GetString%2A> method is designed to optimize performance when you have a native pointer to a byte array.</span></span> <span data-ttu-id="190f2-1584">Invece di creare una matrice di byte gestita e averlo decodificato, è invece possibile chiamare questo metodo senza dover creare eventuali oggetti intermedi.</span><span class="sxs-lookup"><span data-stu-id="190f2-1584">Instead of creating a managed byte array and then decoding it, you can instead call this method without having to create any intermediate objects.</span></span>  
  
 <span data-ttu-id="190f2-1585">Se il conversione dei dati sono disponibili solo in blocchi sequenziali (ad esempio i dati letti da un flusso) o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, è necessario utilizzare il <xref:System.Text.Decoder> oggetto restituito dal <xref:System.Text.Encoding.GetDecoder%2A> di un deri (metodo) classe Consenti.</span><span class="sxs-lookup"><span data-stu-id="190f2-1585">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> object returned by the <xref:System.Text.Encoding.GetDecoder%2A> method of a derived class.</span></span>  
  
 <span data-ttu-id="190f2-1586">Vedere la sezione Note del <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> argomento di riferimento per una descrizione delle considerazioni e le tecniche di decodifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1586">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
 <span data-ttu-id="190f2-1587">Si noti che il comportamento del preciso di <xref:System.Text.Encoding.GetString%2A> metodo per un particolare <xref:System.Text.Encoding> implementazione dipende la strategia di fallback definita per tale <xref:System.Text.Encoding> oggetto.</span><span class="sxs-lookup"><span data-stu-id="190f2-1587">Note that the precise behavior of the <xref:System.Text.Encoding.GetString%2A> method for a particular <xref:System.Text.Encoding> implementation depends on the fallback strategy defined for that <xref:System.Text.Encoding> object.</span></span> <span data-ttu-id="190f2-1588">Per ulteriori informazioni, vedere la sezione "Scelta di una strategia di Fallback" del [codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md) argomento.</span><span class="sxs-lookup"><span data-stu-id="190f2-1588">For more information, see the "Choosing a Fallback Strategy" section of the [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-1589">
            <paramref name="bytes" /> is a null pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1589">
              <paramref name="bytes" /> is a null pointer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-1590">
            <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1590">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="190f2-1591">A   fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1591">A   fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-1592">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1592">-and-</span>
          </span>
          <span data-ttu-id="190f2-1593">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1593">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="190f2-1594">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1594">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="190f2-1595">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1595">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="190f2-1596">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1596">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1597">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1597">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1598">A string that contains the results of decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1598">A string that contains the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1599">Se il conversione dei dati sono disponibili solo in blocchi sequenziali (ad esempio i dati letti da un flusso) o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, è necessario utilizzare il <xref:System.Text.Decoder> o <xref:System.Text.Encoder> fornito dal <xref:System.Text.Encoding.GetDecoder%2A> metodo o <xref:System.Text.Encoding.GetEncoder%2A> (metodo), rispettivamente, di una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="190f2-1599">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="190f2-1600">Vedere la sezione Note del <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> argomento di riferimento per una descrizione delle considerazioni e le tecniche di decodifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1600">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1601">Nell'esempio seguente legge una stringa con codificata UTF-8 da un file binario è rappresentato da un <xref:System.IO.FileStream> oggetto.</span><span class="sxs-lookup"><span data-stu-id="190f2-1601">The following example reads a UTF-8 encoded string from a binary file that is represented by a <xref:System.IO.FileStream> object.</span></span> <span data-ttu-id="190f2-1602">Per i file più piccoli di 2.048 byte, legge il contenuto dell'intero file in una matrice di byte e chiama il <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> metodo per eseguire la decodifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1602">For files that are smaller than 2,048 bytes, it reads the contents of the entire file into a byte array and calls the <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to perform the decoding.</span></span> <span data-ttu-id="190f2-1603">Per i file più grandi, legge 2.048 byte alla volta in una matrice di byte, le chiamate di <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metodo per determinare il numero di caratteri contenuti nella matrice e chiama quindi il <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> metodo per eseguire la decodifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1603">For larger files, it reads 2,048 bytes at a time into a byte array, calls the <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to determine how many characters are contained in the array, and then calls the <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method to perform the decoding.</span></span>  
  
 [!code-csharp[System.Text.Encoding.GetString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetString/CS/getstring2.cs#3)]
 [!code-vb[System.Text.Encoding.GetString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetString/VB/getstring2.vb#3)]  
  
 <span data-ttu-id="190f2-1604">Nell'esempio viene utilizzato il testo seguente, che deve essere salvato in un file con codificata UTF-8 denominato Utf8Example.txt.</span><span class="sxs-lookup"><span data-stu-id="190f2-1604">The example uses the following text, which should be saved to a UTF-8 encoded file named Utf8Example.txt.</span></span>  
  
```  
  
This is a UTF-8-encoded file that contains primarily Latin text, although it   
does list the first twelve letters of the Russian (Cyrillic) alphabet:  
  
А б в г д е ё ж з и й к  
  
The goal is to save this file, then open and decode it as a binary stream.  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="190f2-1605">The byte array contains invalid Unicode code points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1605">The byte array contains invalid Unicode code points.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-1606">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1606">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="190f2-1607">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1607">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="190f2-1608">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1608">-or-</span>
          </span>
          <span data-ttu-id="190f2-1609">
            <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1609">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="190f2-1610">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1610">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="190f2-1611">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1611">-and-</span>
          </span>
          <span data-ttu-id="190f2-1612">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1612">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HeaderName">
      <MemberSignature Language="C#" Value="public virtual string HeaderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.HeaderName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1613">When overridden in a derived class, gets a name for the current encoding that can be used with mail agent header tags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1613">When overridden in a derived class, gets a name for the current encoding that can be used with mail agent header tags.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-1614">Nome dell'oggetto <see cref="T:System.Text.Encoding" /> corrente da usare con i tag di intestazione degli agenti di posta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1614">A name for the current <see cref="T:System.Text.Encoding" /> to use with mail agent header tags.</span>
          </span>
          <span data-ttu-id="190f2-1615">-oppure-</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1615">-or-</span>
          </span>
          <span data-ttu-id="190f2-1616">Stringa vuota (""), se non è possibile usare l'oggetto <see cref="T:System.Text.Encoding" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1616">An empty string (""), if the current <see cref="T:System.Text.Encoding" /> cannot be used.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1617">Se è necessaria una codifica per un nome di intestazione, è necessario chiamare il <xref:System.Text.Encoding.GetEncoding%2A> metodo con il <xref:System.Text.Encoding.HeaderName%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="190f2-1617">If you need an encoding for a header name, you should call the <xref:System.Text.Encoding.GetEncoding%2A> method with the <xref:System.Text.Encoding.HeaderName%2A> property.</span></span> <span data-ttu-id="190f2-1618">Spesso il metodo recupera una codifica diversa dalla codifica di test specificati nella chiamata.</span><span class="sxs-lookup"><span data-stu-id="190f2-1618">Often the method retrieves a different encoding from the test encoding furnished in the call.</span></span> <span data-ttu-id="190f2-1619">Solo le applicazioni di posta elettronica in genere necessario recuperare tale codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1619">Generally only email applications need to retrieve such an encoding.</span></span>  
  
 <span data-ttu-id="190f2-1620">In alcuni casi, il valore di <xref:System.Text.Encoding.BodyName%2A> proprietà corrisponde allo standard internazionale che definisce tale codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1620">In some cases, the value of the <xref:System.Text.Encoding.BodyName%2A> property corresponds to the international standard that defines that encoding.</span></span> <span data-ttu-id="190f2-1621">Questo non significa che l'implementazione sia conforme in modo completo con tale standard.</span><span class="sxs-lookup"><span data-stu-id="190f2-1621">This doesn't mean that the implementation complies in full with that standard.</span></span>  
  
 <span data-ttu-id="190f2-1622">Si noti che <xref:System.Text.Encoding.WebName%2A> restituisce il nome da utilizzare per descrivere una codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1622">Note that <xref:System.Text.Encoding.WebName%2A> returns the name to use to describe an encoding.</span></span> <span data-ttu-id="190f2-1623">Il <xref:System.Text.Encoding.HeaderName%2A> proprietà definisce che potrebbe essere adatti per un'applicazione di posta elettronica, ad esempio una codifica diversa.</span><span class="sxs-lookup"><span data-stu-id="190f2-1623">The <xref:System.Text.Encoding.HeaderName%2A> property defines a different encoding that might work better for an email application, for example.</span></span> <span data-ttu-id="190f2-1624">Tuttavia, non è consigliabile usare la proprietà per definire la codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1624">However, use of the property to define the encoding is not recommended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1625">Nell'esempio seguente recupera i nomi diversi per ogni tipo di codifica e visualizza le codifiche con uno o più nomi diversi da <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1625">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="190f2-1626">Visualizza <xref:System.Text.Encoding.EncodingName%2A> ma non compare su di essa.</span><span class="sxs-lookup"><span data-stu-id="190f2-1626">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAlwaysNormalized">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1627">Gets a value indicating whether the current encoding is always normalized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1627">Gets a value indicating whether the current encoding is always normalized.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAlwaysNormalized">
      <MemberSignature Language="C#" Value="public bool IsAlwaysNormalized ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAlwaysNormalized() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.IsAlwaysNormalized" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAlwaysNormalized () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAlwaysNormalized();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1628">Gets a value indicating whether the current encoding is always normalized, using the default normalization form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1628">Gets a value indicating whether the current encoding is always normalized, using the default normalization form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1629">
            <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> is always normalized; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1629">
              <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> is always normalized; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="190f2-1630">The default is <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1630">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1631">Il formato di normalizzazione predefinito è <xref:System.Text.NormalizationForm.FormC>, che utilizza la scomposizione canonica completa, seguita dalla sostituzione delle sequenze con i relativi componenti primari, se possibile.</span><span class="sxs-lookup"><span data-stu-id="190f2-1631">The default normalization form is <xref:System.Text.NormalizationForm.FormC>, which uses full canonical decomposition, followed by the replacement of sequences with their primary composites, if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.NormalizationForm" />
      </Docs>
    </Member>
    <Member MemberName="IsAlwaysNormalized">
      <MemberSignature Language="C#" Value="public virtual bool IsAlwaysNormalized (System.Text.NormalizationForm form);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAlwaysNormalized(valuetype System.Text.NormalizationForm form) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAlwaysNormalized (form As NormalizationForm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAlwaysNormalized(System::Text::NormalizationForm form);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="form" Type="System.Text.NormalizationForm" />
      </Parameters>
      <Docs>
        <param name="form">
          <span data-ttu-id="190f2-1632">One of the <see cref="T:System.Text.NormalizationForm" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1632">One of the <see cref="T:System.Text.NormalizationForm" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1633">When overridden in a derived class, gets a value indicating whether the current encoding is always normalized, using the specified normalization form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1633">When overridden in a derived class, gets a value indicating whether the current encoding is always normalized, using the specified normalization form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="190f2-1634">
            <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> object is always normalized using the specified <see cref="T:System.Text.NormalizationForm" /> value; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1634">
              <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> object is always normalized using the specified <see cref="T:System.Text.NormalizationForm" /> value; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="190f2-1635">The default is <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1635">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1636">Il formato di normalizzazione predefinito è <xref:System.Text.NormalizationForm.FormC>, che utilizza la scomposizione canonica completa, seguita dalla sostituzione delle sequenze con i relativi componenti primari, se possibile.</span><span class="sxs-lookup"><span data-stu-id="190f2-1636">The default normalization form is <xref:System.Text.NormalizationForm.FormC>, which uses full canonical decomposition, followed by the replacement of sequences with their primary composites, if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.NormalizationForm" />
      </Docs>
    </Member>
    <Member MemberName="IsBrowserDisplay">
      <MemberSignature Language="C#" Value="public virtual bool IsBrowserDisplay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowserDisplay" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsBrowserDisplay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsBrowserDisplay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBrowserDisplay { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1637">When overridden in a derived class, gets a value indicating whether the current encoding can be used by browser clients for displaying content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1637">When overridden in a derived class, gets a value indicating whether the current encoding can be used by browser clients for displaying content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-1638">
            <see langword="true" /> se l'oggetto <see cref="T:System.Text.Encoding" /> corrente può essere usato dai browser client per visualizzare il contenuto; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1638">
              <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by browser clients for displaying content; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="190f2-1639">L'esempio seguente verifica i valori delle proprietà booleana di ogni tipo di codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1639">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsBrowserSave" />
      </Docs>
    </Member>
    <Member MemberName="IsBrowserSave">
      <MemberSignature Language="C#" Value="public virtual bool IsBrowserSave { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowserSave" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsBrowserSave" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsBrowserSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBrowserSave { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1640">When overridden in a derived class, gets a value indicating whether the current encoding can be used by browser clients for saving content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1640">When overridden in a derived class, gets a value indicating whether the current encoding can be used by browser clients for saving content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-1641">
            <see langword="true" /> se l'oggetto <see cref="T:System.Text.Encoding" /> corrente può essere usato dai browser client per salvare il contenuto; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1641">
              <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by browser clients for saving content; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="190f2-1642">L'esempio seguente verifica i valori delle proprietà booleana di ogni tipo di codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1642">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsBrowserDisplay" />
      </Docs>
    </Member>
    <Member MemberName="IsMailNewsDisplay">
      <MemberSignature Language="C#" Value="public virtual bool IsMailNewsDisplay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMailNewsDisplay" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsMailNewsDisplay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMailNewsDisplay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMailNewsDisplay { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1643">When overridden in a derived class, gets a value indicating whether the current encoding can be used by mail and news clients for displaying content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1643">When overridden in a derived class, gets a value indicating whether the current encoding can be used by mail and news clients for displaying content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-1644">
            <see langword="true" /> se l'oggetto <see cref="T:System.Text.Encoding" /> corrente può essere usato dai client di posta e dai client delle news per visualizzare il contenuto; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1644">
              <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by mail and news clients for displaying content; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="190f2-1645">L'esempio seguente verifica i valori delle proprietà booleana di ogni tipo di codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1645">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsMailNewsDisplay" />
      </Docs>
    </Member>
    <Member MemberName="IsMailNewsSave">
      <MemberSignature Language="C#" Value="public virtual bool IsMailNewsSave { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMailNewsSave" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsMailNewsSave" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMailNewsSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMailNewsSave { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1646">When overridden in a derived class, gets a value indicating whether the current encoding can be used by mail and news clients for saving content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1646">When overridden in a derived class, gets a value indicating whether the current encoding can be used by mail and news clients for saving content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-1647">
            <see langword="true" /> se l'oggetto <see cref="T:System.Text.Encoding" /> corrente può essere usato dai client di posta e dai client delle news per salvare il contenuto; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1647">
              <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by mail and news clients for saving content; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="190f2-1648">L'esempio seguente verifica i valori delle proprietà booleana di ogni tipo di codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1648">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsMailNewsSave" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1649">When overridden in a derived class, gets a value indicating whether the current encoding is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1649">When overridden in a derived class, gets a value indicating whether the current encoding is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-1650">
            <see langword="true" /> se l'oggetto <see cref="T:System.Text.Encoding" /> corrente è di sola lettura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1650">
              <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="190f2-1651">Il valore predefinito è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1651">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSingleByte">
      <MemberSignature Language="C#" Value="public virtual bool IsSingleByte { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleByte" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsSingleByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSingleByte As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSingleByte { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1652">When overridden in a derived class, gets a value indicating whether the current encoding uses single-byte code points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1652">When overridden in a derived class, gets a value indicating whether the current encoding uses single-byte code points.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-1653">
            <see langword="true" /> se l'oggetto <see cref="T:System.Text.Encoding" /> corrente usa punti di codice a un byte; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1653">
              <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> uses single-byte code points; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1654">Per un singolo byte di codifica, ad esempio, <xref:System.Text.ASCIIEncoding>, questa proprietà recupera `true`.</span><span class="sxs-lookup"><span data-stu-id="190f2-1654">For a single-byte encoding, for example, <xref:System.Text.ASCIIEncoding>, this property retrieves `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="190f2-1655">È necessario prestare attenzione nella funzione con il valore per l'applicazione <xref:System.Text.Encoding.IsSingleByte%2A>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1655">You should be careful in what your application does with the value for <xref:System.Text.Encoding.IsSingleByte%2A>.</span></span> <span data-ttu-id="190f2-1656">Un presupposto di come sarà possibile proseguire una codifica potrebbe essere errato.</span><span class="sxs-lookup"><span data-stu-id="190f2-1656">An assumption of how an Encoding will proceed may still be wrong.</span></span> <span data-ttu-id="190f2-1657">Ad esempio, Windows-1252 ha un valore di `true` per <xref:System.Text.Encoding.IsSingleByte%2A?displayProperty=nameWithType>, ma Encoding.GetMaxByteCount(1) restituisce 2.</span><span class="sxs-lookup"><span data-stu-id="190f2-1657">For example, Windows-1252 has a value of `true` for <xref:System.Text.Encoding.IsSingleByte%2A?displayProperty=nameWithType>, but Encoding.GetMaxByteCount(1) returns 2.</span></span> <span data-ttu-id="190f2-1658">Questo avviene perché il metodo prende in considerazione potenziali surrogati residui di un'operazione precedente del decodificatore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1658">This is because the method considers potential leftover surrogates from a previous decoder operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1659">L'esempio seguente verifica i valori delle proprietà booleana di ogni tipo di codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1659">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Preamble">
      <MemberSignature Language="C#" Value="public virtual ReadOnlySpan&lt;byte&gt; Preamble { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; Preamble" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Preamble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Preamble As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property ReadOnlySpan&lt;System::Byte&gt; Preamble { ReadOnlySpan&lt;System::Byte&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterProvider">
      <MemberSignature Language="C#" Value="public static void RegisterProvider (System.Text.EncodingProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterProvider(class System.Text.EncodingProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterProvider (provider As EncodingProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterProvider(System::Text::EncodingProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Text.EncodingProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="190f2-1660">A subclass of <see cref="T:System.Text.EncodingProvider" /> that provides access to additional character encodings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1660">A subclass of <see cref="T:System.Text.EncodingProvider" /> that provides access to additional character encodings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="190f2-1661">Registers an encoding provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1661">Registers an encoding provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1662">Il <xref:System.Text.Encoding.RegisterProvider%2A> metodo consente di registrare una classe derivata da <xref:System.Text.EncodingProvider> che rende disponibili su una piattaforma non supportati in caso contrario le codifiche di caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-1662">The <xref:System.Text.Encoding.RegisterProvider%2A> method allows you to register a class derived from <xref:System.Text.EncodingProvider> that makes character encodings available on a platform that does not otherwise support them.</span></span> <span data-ttu-id="190f2-1663">Una volta registrato il provider di codifica, supporta le codifiche possono essere recuperate chiamando uno <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="190f2-1663">Once the encoding provider is registered, the encodings that it supports can be retrieved by calling any <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="190f2-1664">Se sono presenti più provider di codifica, il <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> metodo tenta di recuperare una codifica specificata da ogni provider a partire da quello registrato più di recente.</span><span class="sxs-lookup"><span data-stu-id="190f2-1664">If there are multiple encoding providers, the <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> method attempts to retrieve a specified encoding from each provider starting with the one most recently registered.</span></span>

<span data-ttu-id="190f2-1665">La registrazione di un provider di codifica usando il <xref:System.Text.Encoding.RegisterProvider%2A> metodo modifica anche il comportamento del [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) e [EncodingProvider.GetEncoding (Int32, EncoderFallback, DecoderFallback )](xref:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)) metodi quando viene passato un argomento di `0`:</span><span class="sxs-lookup"><span data-stu-id="190f2-1665">Registering an encoding provider by using the <xref:System.Text.Encoding.RegisterProvider%2A> method also modifies the behavior of the [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) and [EncodingProvider.GetEncoding(Int32, EncoderFallback, DecoderFallback)](xref:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)) methods when passed an argument of `0`:</span></span>

- <span data-ttu-id="190f2-1666">Se il provider registrato il <xref:System.Text.CodePagesEncodingProvider>, il metodo restituisce la codifica che corrisponde a codici attivo del sistema durante l'esecuzione nel sistema operativo Windows.</span><span class="sxs-lookup"><span data-stu-id="190f2-1666">If the registered provider is the <xref:System.Text.CodePagesEncodingProvider>, the method returns the encoding that matches the system active code page when running on the Windows operating system.</span></span>

- <span data-ttu-id="190f2-1667">Un provider di codifica personalizzato è possibile scegliere la codifica da restituire quando uno di questi <xref:System.Text.Encoding.GetEncoding%2A> overload del metodo è stato passato un argomento di `0`.</span><span class="sxs-lookup"><span data-stu-id="190f2-1667">A custom encoding provider can choose which encoding to return when either of these <xref:System.Text.Encoding.GetEncoding%2A> method overloads is passed an argument of `0`.</span></span> <span data-ttu-id="190f2-1668">Il provider può anche scegliere di non restituire una codifica con il <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> metodo `null`.</span><span class="sxs-lookup"><span data-stu-id="190f2-1668">The provider can also choose to not return an encoding by having the <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> method return `null`.</span></span> 
  
 [!INCLUDE[net_v46](~/includes/net-v46-md.md)]<span data-ttu-id="190f2-1669"> include un provider di codifica <xref:System.Text.CodePagesEncodingProvider>, che rende disponibili le codifiche sono presenti in .NET Framework completo, ma non disponibili in [!INCLUDE[net_v46](~/includes/net-v46-md.md)].</span><span class="sxs-lookup"><span data-stu-id="190f2-1669"> includes one encoding provider, <xref:System.Text.CodePagesEncodingProvider>, that makes the encodings available that are present in the full .NET Framework but are not available in [!INCLUDE[net_v46](~/includes/net-v46-md.md)].</span></span> <span data-ttu-id="190f2-1670">Per impostazione predefinita, [!INCLUDE[net_v46](~/includes/net-v46-md.md)] supporta solo le codifiche Unicode, ASCII e tabella codice 28591.</span><span class="sxs-lookup"><span data-stu-id="190f2-1670">By default, [!INCLUDE[net_v46](~/includes/net-v46-md.md)] only supports the Unicode encodings, ASCII, and code page 28591.</span></span>  
  
 <span data-ttu-id="190f2-1671">Se lo stesso provider di codifica viene utilizzato in più chiamate al <xref:System.Text.Encoding.RegisterProvider%2A> (metodo), solo la prima chiamata al metodo registra il provider.</span><span class="sxs-lookup"><span data-stu-id="190f2-1671">If the same encoding provider is used in multiple calls to the <xref:System.Text.Encoding.RegisterProvider%2A> method, only the first method call registers the provider.</span></span> <span data-ttu-id="190f2-1672">Le chiamate successive vengono ignorate.</span><span class="sxs-lookup"><span data-stu-id="190f2-1672">Subsequent calls are ignored.</span></span>  
  
 <span data-ttu-id="190f2-1673">Se il <xref:System.Text.Encoding.RegisterProvider%2A> metodo viene chiamato per registrare più provider che gestiscono la stessa codifica, l'ultimo provider registrato è l'oggetto utilizzato per tutte la codifica e le operazioni di decodifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1673">If the <xref:System.Text.Encoding.RegisterProvider%2A> method is called to register multiple providers that handle the same encoding, the last registered provider is the used for all encoding and decoding operations.</span></span> <span data-ttu-id="190f2-1674">Tutti i provider registrati in precedenza vengono ignorati.</span><span class="sxs-lookup"><span data-stu-id="190f2-1674">Any previously registered providers are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="190f2-1675">
            <paramref name="provider" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1675">
              <paramref name="provider" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.CodePagesEncodingProvider" />
        <altmember cref="T:System.Text.EncodingProvider" />
      </Docs>
    </Member>
    <Member MemberName="Unicode">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding Unicode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding Unicode" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Unicode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Unicode As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ Unicode { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1676">Gets an encoding for the UTF-16 format using the little endian byte order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1676">Gets an encoding for the UTF-16 format using the little endian byte order.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-1677">Codifica per il formato UTF-16 che usa l'ordine dei byte little-endian.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1677">An encoding for the UTF-16 format using the little endian byte order.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1678">Per informazioni sulle codifiche supportate da .NET Framework e una descrizione della codifica per l'utilizzo di Unicode, vedere [codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="190f2-1678">For information about the encodings supported by the .NET Framework and a discussion of which Unicode encoding to use, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="190f2-1679">Il <xref:System.Text.UnicodeEncoding> oggetto restituito da questa proprietà potrebbe non essere il comportamento appropriato per l'app.</span><span class="sxs-lookup"><span data-stu-id="190f2-1679">The <xref:System.Text.UnicodeEncoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="190f2-1680">Usa il fallback di sostituzione per sostituire ogni stringa che non può codificare e ogni byte che non può decodificare con un punto interrogativo ("?") caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-1680">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="190f2-1681">In alternativa, è possibile chiamare il <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> costruttore per creare un'istanza di un little endian <xref:System.Text.UnicodeEncoding> oggetto il cui fallback è un <xref:System.Text.EncoderFallbackException> o <xref:System.Text.DecoderFallbackException>, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="190f2-1681">Instead, you can call the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a little endian <xref:System.Text.UnicodeEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.Unicode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.unicode/cs/unicode1.cs#2)]
 [!code-vb[System.Text.Encoding.Unicode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.unicode/vb/unicode1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1682">Nell'esempio seguente determina il numero di byte necessari per codificare una matrice di caratteri, codifica i caratteri e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="190f2-1682">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UnicodeEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.BigEndianUnicode" />
      </Docs>
    </Member>
    <Member MemberName="UTF32">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF32" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF32" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF32 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF32 { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1683">Gets an encoding for the UTF-32 format using the little endian byte order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1683">Gets an encoding for the UTF-32 format using the little endian byte order.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-1684">Oggetto codifica per il formato UTF-32 che usa l'ordine dei byte little-endian.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1684">An  encoding object for the UTF-32 format using the little endian byte order.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1685">Il <xref:System.Text.UTF32Encoding> oggetto restituito da questa proprietà potrebbe non essere il comportamento appropriato per l'app.</span><span class="sxs-lookup"><span data-stu-id="190f2-1685">The <xref:System.Text.UTF32Encoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="190f2-1686">Usa il fallback di sostituzione per sostituire ogni stringa che non può codificare e ogni byte che non può decodificare con il carattere Unicode REPLACEMENT CHARACTER (U + FFFE).</span><span class="sxs-lookup"><span data-stu-id="190f2-1686">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with the Unicode REPLACEMENT CHARACTER (U+FFFE).</span></span> <span data-ttu-id="190f2-1687">In alternativa, è possibile chiamare il <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> costruttore per creare un'istanza di un <xref:System.Text.UTF32Encoding> oggetto il cui fallback è un <xref:System.Text.EncoderFallbackException> o un <xref:System.Text.DecoderFallbackException>, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="190f2-1687">Instead, you can call the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a <xref:System.Text.UTF32Encoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.UTF32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf32/cs/encoding.utf32.1.cs#1)]
 [!code-vb[System.Text.Encoding.UTF32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf32/vb/encoding.utf32.1.vb#1)]  
  
 <span data-ttu-id="190f2-1688">Per una discussione sull'ordine dei byte little-endian little, vedere il <xref:System.Text.Encoding> argomento relativo alla classe.</span><span class="sxs-lookup"><span data-stu-id="190f2-1688">For a discussion of little endian byte order, see the <xref:System.Text.Encoding> class topic.</span></span>  
  
 <span data-ttu-id="190f2-1689">Per informazioni sulle codifiche supportate da .NET Framework e una descrizione della codifica per l'utilizzo di Unicode, vedere [codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="190f2-1689">For information about the encodings supported by the .NET Framework and a discussion of which Unicode encoding to use, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1690">Nell'esempio seguente determina il numero di byte necessari per codificare una matrice di caratteri, codifica i caratteri e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="190f2-1690">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF32Encoding" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
        <altmember cref="P:System.Text.Encoding.BigEndianUnicode" />
      </Docs>
    </Member>
    <Member MemberName="UTF7">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF7 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF7" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF7" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF7 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF7 { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1691">Gets an encoding for the UTF-7 format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1691">Gets an encoding for the UTF-7 format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-1692">Codifica per il formato UTF-7.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1692">An encoding for the UTF-7 format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1693">La codifica UTF-7 viene utilizzata principalmente in ambienti che sono stati storicamente a 7 bit, ad esempio NNTP e alcune applicazioni di posta elettronica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1693">UTF-7 encoding is used primarily in environments that historically have been restricted to 7 bits, such as NNTP and some email applications.</span></span> <span data-ttu-id="190f2-1694">A causa di problemi con affidabilità e sicurezza, è consigliabile non utilizzare UTF7 codifica negli ambienti a 8 bit in cui la codifica UTF-8 è invece possibile usare.</span><span class="sxs-lookup"><span data-stu-id="190f2-1694">Because of issues with robustness and security, you should not use UTF7 encoding in 8-bit environments where UTF-8 encoding can be used instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1695">Nell'esempio seguente determina il numero di byte necessari per codificare una matrice di caratteri, codifica i caratteri e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="190f2-1695">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF7Encoding" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
      </Docs>
    </Member>
    <Member MemberName="UTF8">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF8 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF8" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF8" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF8 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF8 { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1696">Gets an encoding for the UTF-8 format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1696">Gets an encoding for the UTF-8 format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-1697">Codifica per il formato UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1697">An encoding for the UTF-8 format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1698">Questa proprietà restituisce un <xref:System.Text.UTF8Encoding> oggetto che consente di codificare i caratteri Unicode (codifica UTF-16) in una sequenza di uno a quattro byte per carattere, e che consente di decodificare una matrice di byte con codifica UTF-8 per i caratteri Unicode (codifica UTF-16).</span><span class="sxs-lookup"><span data-stu-id="190f2-1698">This property returns a <xref:System.Text.UTF8Encoding> object that encodes Unicode (UTF-16-encoded) characters into a sequence of one to four bytes per character, and that decodes a UTF-8-encoded byte array to Unicode (UTF-16-encoded) characters.</span></span> <span data-ttu-id="190f2-1699">Per informazioni sulle codifiche di caratteri supportate da .NET Framework e una descrizione della codifica per l'utilizzo di Unicode, vedere [codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="190f2-1699">For information about the character encodings supported by the .NET Framework and a discussion of which Unicode encoding to use, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="190f2-1700">Il <xref:System.Text.UTF8Encoding> oggetto restituito da questa proprietà potrebbe non essere il comportamento appropriato per l'app.</span><span class="sxs-lookup"><span data-stu-id="190f2-1700">The <xref:System.Text.UTF8Encoding> object that is returned by this property might not have the appropriate behavior for your app.</span></span>  
  
-   <span data-ttu-id="190f2-1701">Restituisce un <xref:System.Text.UTF8Encoding> oggetto che fornisce un byte order mark (BOM) di Unicode.</span><span class="sxs-lookup"><span data-stu-id="190f2-1701">It returns a <xref:System.Text.UTF8Encoding> object that provides a Unicode byte order mark (BOM).</span></span> <span data-ttu-id="190f2-1702">Per creare un'istanza di una codifica UTF8, che non forniscono un indicatore ordine byte, chiamare un overload del <xref:System.Text.UTF8Encoding.%23ctor%2A> costruttore.</span><span class="sxs-lookup"><span data-stu-id="190f2-1702">To instantiate a UTF8 encoding that doesn't provide a BOM, call any overload of the <xref:System.Text.UTF8Encoding.%23ctor%2A> constructor.</span></span>  
  
-   <span data-ttu-id="190f2-1703">Restituisce un <xref:System.Text.UTF8Encoding> oggetto che usa il fallback di sostituzione per sostituire ogni stringa che non può codificare e ogni byte che non può decodificare con un punto interrogativo ("?") caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-1703">It returns a <xref:System.Text.UTF8Encoding> object that uses replacement fallback to replace each string that it can't encode and each byte that it can't decode with a question mark ("?") character.</span></span> <span data-ttu-id="190f2-1704">In alternativa, è possibile chiamare il <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> costruttore per creare un'istanza di un <xref:System.Text.UTF8Encoding> oggetto il cui fallback è un <xref:System.Text.EncoderFallbackException> o un <xref:System.Text.DecoderFallbackException>, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="190f2-1704">Instead, you can call the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a <xref:System.Text.UTF8Encoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
     [!code-csharp[System.Text.Encoding.UTF8#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf8/cs/encoding.utf8.1.cs#1)]
     [!code-vb[System.Text.Encoding.UTF8#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf8/vb/encoding.utf8.1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1705">L'esempio seguente definisce una matrice che include i seguenti caratteri:</span><span class="sxs-lookup"><span data-stu-id="190f2-1705">The following example defines an array that consists of the following characters:</span></span>  
  
-   <span data-ttu-id="190f2-1706">LATINO Z (U + 007A)</span><span class="sxs-lookup"><span data-stu-id="190f2-1706">LATIN SMALL LETTER Z (U+007A)</span></span>  
  
-   <span data-ttu-id="190f2-1707">CARATTERE ALFABETO LATINO (U + 0061)</span><span class="sxs-lookup"><span data-stu-id="190f2-1707">LATIN SMALL LETTER A (U+0061)</span></span>  
  
-   <span data-ttu-id="190f2-1708">COMBINAZIONE LATINO (U + 0306)</span><span class="sxs-lookup"><span data-stu-id="190f2-1708">COMBINING BREVE (U+0306)</span></span>  
  
-   <span data-ttu-id="190f2-1709">CARATTERE ALFABETO LATINO CON ACUTI (U + 01FD)</span><span class="sxs-lookup"><span data-stu-id="190f2-1709">LATIN SMALL LETTER AE WITH ACUTE (U+01FD)</span></span>  
  
-   <span data-ttu-id="190f2-1710">LETTERA GRECA BETA (U + 03B2)</span><span class="sxs-lookup"><span data-stu-id="190f2-1710">GREEK SMALL LETTER BETA (U+03B2)</span></span>  
  
-   <span data-ttu-id="190f2-1711">Una coppia di surrogati (U + D800 U + DD54) che costituisce greco ACROPHONIC ATTIC uno MIGLIAIA STATERS (U + 10154).</span><span class="sxs-lookup"><span data-stu-id="190f2-1711">A surrogate pair (U+D800 U+DD54) that forms GREEK ACROPHONIC ATTIC ONE THOUSAND STATERS (U+10154).</span></span>  
  
 <span data-ttu-id="190f2-1712">Visualizza le unità di codice UTF-16 di ciascun carattere e determina il numero di byte necessari da un codificatore UTF-8 per codificare la matrice di caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-1712">It displays the UTF-16 code units of each character and determines the number of bytes required by a UTF-8 encoder to encode the character array.</span></span> <span data-ttu-id="190f2-1713">Quindi, vengono codificati i caratteri e visualizza i byte con codifica UTF-8 risultanti.</span><span class="sxs-lookup"><span data-stu-id="190f2-1713">It then encodes the characters and displays the resulting UTF-8-encoded bytes.</span></span>  
  
 [!code-csharp[System.Text.Encoding.UTF8#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf8/cs/example1.cs#2)]
 [!code-vb[System.Text.Encoding.UTF8#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf8/vb/example1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF8Encoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WebName">
      <MemberSignature Language="C#" Value="public virtual string WebName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.WebName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ WebName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1714">When overridden in a derived class, gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1714">When overridden in a derived class, gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-1715">Nome IANA per l'oggetto <see cref="T:System.Text.Encoding" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1715">The IANA name for the current <see cref="T:System.Text.Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1716">Il <xref:System.Text.Encoding.WebName%2A> proprietà è lo stesso come il <xref:System.Text.EncodingInfo.Name%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="190f2-1716">The <xref:System.Text.Encoding.WebName%2A> property is the same as the <xref:System.Text.EncodingInfo.Name%2A> property.</span></span>  
  
 <span data-ttu-id="190f2-1717">Si noti che <xref:System.Text.Encoding.WebName%2A> restituisce un nome registrato con IANA per la codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1717">Note that <xref:System.Text.Encoding.WebName%2A> returns an IANA-registered name for the encoding.</span></span> <span data-ttu-id="190f2-1718">Quando il relativo valore è il nome di uno standard, l'implementazione della codifica potrebbe non essere conforme in modo completo a tale standard.</span><span class="sxs-lookup"><span data-stu-id="190f2-1718">When its value is the name of a standard, the implementation of the encoding might not conform in full to that standard.</span></span> <span data-ttu-id="190f2-1719">Il <xref:System.Text.Encoding.HeaderName%2A> proprietà definisce una codifica diversa che potrebbe funzionare in modo migliore per le intestazioni di messaggio di posta elettronica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1719">The <xref:System.Text.Encoding.HeaderName%2A> property defines a different encoding that might work better for email headers.</span></span> <span data-ttu-id="190f2-1720">Tuttavia, è consigliabile utilizzare la maggior parte delle app <xref:System.Text.Encoding.WebName%2A> invece.</span><span class="sxs-lookup"><span data-stu-id="190f2-1720">However, most apps should use <xref:System.Text.Encoding.WebName%2A> instead.</span></span>  
  
 <span data-ttu-id="190f2-1721">Per ulteriori informazioni sull'autorità IANA, visitare [www.iana.org](http://www.iana.org/).</span><span class="sxs-lookup"><span data-stu-id="190f2-1721">For more information on the IANA, go to [www.iana.org](http://www.iana.org/).</span></span>  
  
 <span data-ttu-id="190f2-1722">Il <xref:System.Text.Encoding.WebName%2A?displayProperty=nameWithType> è lo stesso come il <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> restituito da <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1722">The <xref:System.Text.Encoding.WebName%2A?displayProperty=nameWithType> is the same as the <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> returned by <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="190f2-1723">Alcuni nomi web sono duplicati. vedere la sezione Osservazioni per <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> per ulteriori informazioni.</span><span class="sxs-lookup"><span data-stu-id="190f2-1723">Some of the web names are duplicates; see the remarks for <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1724">L'esempio seguente include il <xref:System.Text.Encoding.WebName%2A> in un'intestazione HTML.</span><span class="sxs-lookup"><span data-stu-id="190f2-1724">The following example includes the <xref:System.Text.Encoding.WebName%2A> in an HTML header.</span></span>  
  
 [!code-cpp[System.Text.Encoding.WebName#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.WebName/CPP/webname.cpp#1)]
 [!code-csharp[System.Text.Encoding.WebName#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.WebName/CS/webname.cs#1)]
 [!code-vb[System.Text.Encoding.WebName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.WebName/VB/webname.vb#1)]  
  
 <span data-ttu-id="190f2-1725">Nell'esempio seguente recupera i nomi diversi per ogni tipo di codifica e visualizza le codifiche con uno o più nomi diversi da <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="190f2-1725">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="190f2-1726">Visualizza <xref:System.Text.Encoding.EncodingName%2A> ma non compare su di essa.</span><span class="sxs-lookup"><span data-stu-id="190f2-1726">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
      </Docs>
    </Member>
    <Member MemberName="WindowsCodePage">
      <MemberSignature Language="C#" Value="public virtual int WindowsCodePage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowsCodePage" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.WindowsCodePage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WindowsCodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WindowsCodePage { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="190f2-1727">When overridden in a derived class, gets the Windows operating system code page that most closely corresponds to the current encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1727">When overridden in a derived class, gets the Windows operating system code page that most closely corresponds to the current encoding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="190f2-1728">Tabella codici del sistema operativo Windows che meglio corrisponde all'oggetto <see cref="T:System.Text.Encoding" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="190f2-1728">The Windows operating system code page that most closely corresponds to the current <see cref="T:System.Text.Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="190f2-1729">Questa proprietà viene fornita per compatibilità con le multilingue di Windows (MLang) API, ad esempio, per determinare le famiglie di caratteri.</span><span class="sxs-lookup"><span data-stu-id="190f2-1729">This property is provided for compatibility with the Windows MultiLanguage (MLang) APIs, for example, in determining font families.</span></span> <span data-ttu-id="190f2-1730">Per la globalizzazione, utilizzando una delle codifiche Unicode è consigliato.</span><span class="sxs-lookup"><span data-stu-id="190f2-1730">For globalization, using one of the Unicode encodings is recommended instead.</span></span> <span data-ttu-id="190f2-1731">È inoltre consigliabile utilizzare <xref:System.Text.Encoding.WebName%2A> anziché <xref:System.Text.Encoding.WindowsCodePage%2A> per identificare la tabella codici.</span><span class="sxs-lookup"><span data-stu-id="190f2-1731">It is also recommended to use <xref:System.Text.Encoding.WebName%2A> instead of <xref:System.Text.Encoding.WindowsCodePage%2A> to identify the code page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="190f2-1732">Nell'esempio seguente determina i codici di Windows che meglio corrisponde a ogni tipo di codifica.</span><span class="sxs-lookup"><span data-stu-id="190f2-1732">The following example determines the Windows code page that most closely corresponds to each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.CodePage#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/CPP/codepage.cpp#1)]
 [!code-csharp[System.Text.Encoding.CodePage#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/CS/codepage.cs#1)]
 [!code-vb[System.Text.Encoding.CodePage#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/VB/codepage.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.EncodingInfo.CodePage" />
      </Docs>
    </Member>
  </Members>
</Type>