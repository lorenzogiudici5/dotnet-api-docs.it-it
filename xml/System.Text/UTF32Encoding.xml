<Type Name="UTF32Encoding" FullName="System.Text.UTF32Encoding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="44cdc9308d3592a03e4e502e4a5a15d8db64a9eb" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36607300" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UTF32Encoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UTF32Encoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UTF32Encoding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UTF32Encoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UTF32Encoding sealed : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type UTF32Encoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2c346-101">Represents a UTF-32 encoding of Unicode characters.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c346-101">Represents a UTF-32 encoding of Unicode characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-102">La codifica è il processo di trasformazione di un insieme di caratteri Unicode in una sequenza di byte.</span><span class="sxs-lookup"><span data-stu-id="2c346-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="2c346-103">La decodifica è il processo di trasformazione di una sequenza di byte codificati in un set di caratteri Unicode.</span><span class="sxs-lookup"><span data-stu-id="2c346-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="2c346-104">Il [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) assegna un punto di codice (un numero) a ogni carattere in ogni script supportato.</span><span class="sxs-lookup"><span data-stu-id="2c346-104">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) assigns a code point (a number) to each character in every supported script.</span></span> <span data-ttu-id="2c346-105">Unicode Transformation Format (UTF) è un modo per codificare quel punto di codice.</span><span class="sxs-lookup"><span data-stu-id="2c346-105">A Unicode Transformation Format (UTF) is a way to encode that code point.</span></span> <span data-ttu-id="2c346-106">Il [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) utilizza i seguenti UTF:</span><span class="sxs-lookup"><span data-stu-id="2c346-106">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) uses the following UTFs:</span></span>  
  
-   <span data-ttu-id="2c346-107">UTF-8, che rappresenta ogni punto di codice come una sequenza di uno a quattro byte.</span><span class="sxs-lookup"><span data-stu-id="2c346-107">UTF-8, which represents each code point as a sequence of one to four bytes.</span></span>  
  
-   <span data-ttu-id="2c346-108">UTF-16, che rappresenta ogni punto di codice come una sequenza di uno o due integer a 16 bit.</span><span class="sxs-lookup"><span data-stu-id="2c346-108">UTF-16, which represents each code point as a sequence of one to two 16-bit integers.</span></span>  
  
-   <span data-ttu-id="2c346-109">UTF-32, che rappresenta ogni punto di codice come valore intero a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="2c346-109">UTF-32, which represents each code point as a 32-bit integer.</span></span>  
  
 <span data-ttu-id="2c346-110">Per ulteriori informazioni sui formati UTF e altre codifiche supportate da <xref:System.Text>, vedere.</span><span class="sxs-lookup"><span data-stu-id="2c346-110">For more information about the UTFs and other encodings supported by <xref:System.Text>, see .</span></span>  
  
 <span data-ttu-id="2c346-111">Il <xref:System.Text.UTF32Encoding> classe rappresenta una codifica UTF-32.</span><span class="sxs-lookup"><span data-stu-id="2c346-111">The <xref:System.Text.UTF32Encoding> class represents a UTF-32 encoding.</span></span> <span data-ttu-id="2c346-112">Il codificatore può usare l'ordine dei byte big-endian (byte più significativo primo) o il little endian (byte meno significativo prima).</span><span class="sxs-lookup"><span data-stu-id="2c346-112">The encoder can use the big endian byte order (most significant byte first) or the little endian byte order (least significant byte first).</span></span> <span data-ttu-id="2c346-113">Ad esempio, alfabeto latino dalla lettera maiuscola (punto di codice u+0041) viene serializzato come segue (in esadecimale):</span><span class="sxs-lookup"><span data-stu-id="2c346-113">For example, the Latin Capital Letter A (code point U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="2c346-114">Ordine dei byte big-endian: 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="2c346-114">Big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="2c346-115">Ordine dei byte little-endian little: 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="2c346-115">Little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="2c346-116">È in genere più efficiente per archiviare i caratteri Unicode utilizzando l'ordine dei byte nativo.</span><span class="sxs-lookup"><span data-stu-id="2c346-116">It is generally more efficient to store Unicode characters using the native byte order.</span></span> <span data-ttu-id="2c346-117">Ad esempio, è preferibile utilizzare l'ordine dei byte little-endian little su piattaforme little-endian, ad esempio computer Intel.</span><span class="sxs-lookup"><span data-stu-id="2c346-117">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span> <span data-ttu-id="2c346-118"><xref:System.Text.UTF32Encoding> corrisponde alle tabelle di codici di Windows 12000 (ordine dei byte little-endian little) e 12001 (ordine dei byte big-endian).</span><span class="sxs-lookup"><span data-stu-id="2c346-118"><xref:System.Text.UTF32Encoding> corresponds to the Windows code pages 12000 (little endian byte order) and 12001 (big endian byte order).</span></span> <span data-ttu-id="2c346-119">È possibile determinare il "ordine dei byte" di una particolare architettura chiamando il <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-119">You can determine the "endianness" of a particular architecture by calling the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2c346-120">Facoltativamente, il <xref:System.Text.UTF32Encoding> oggetto fornisce un byte order mark (BOM), ovvero una matrice di byte che possono essere preceduti della sequenza di byte risultante dal processo di codifica.</span><span class="sxs-lookup"><span data-stu-id="2c346-120">Optionally, the <xref:System.Text.UTF32Encoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="2c346-121">Se il preambolo contiene un byte order mark (BOM), consente il decodificatore di determinare l'ordine dei byte e il formato di trasformazione o UTF di una matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="2c346-121">If the preamble contains a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF of a byte array.</span></span>  
  
 <span data-ttu-id="2c346-122">Se il <xref:System.Text.UTF32Encoding> istanza è configurata per fornire un indicatore ordine byte, è possibile recuperare tramite una chiamata di <xref:System.Text.UTF32Encoding.GetPreamble%2A> metodo; in caso contrario, il metodo restituisce una matrice vuota.</span><span class="sxs-lookup"><span data-stu-id="2c346-122">If the <xref:System.Text.UTF32Encoding> instance is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="2c346-123">Si noti che, anche se un <xref:System.Text.UTF32Encoding> oggetto è configurato per supportare DBA, è necessario includere il BOM all'inizio del flusso di byte codificata come appropriato; i metodi di codifica del <xref:System.Text.UTF32Encoding> classe non eseguire questa operazione automaticamente.</span><span class="sxs-lookup"><span data-stu-id="2c346-123">Note that, even if a <xref:System.Text.UTF32Encoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UTF32Encoding> class do not do this automatically.</span></span>  
  
 <span data-ttu-id="2c346-124">Per attivare il rilevamento errori e rendere più sicura dell'istanza di classe, è consigliabile creare una <xref:System.Text.UTF32Encoding> oggetto chiamando il <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> costruttore e l'impostazione relativa `throwOnInvalidBytes` argomento `true`.</span><span class="sxs-lookup"><span data-stu-id="2c346-124">To enable error detection and to make the class instance more secure, you should instantiate a <xref:System.Text.UTF32Encoding> object by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span> <span data-ttu-id="2c346-125">Con il rilevamento di errori, genera un metodo che rileva una sequenza di caratteri o byte non valida un' <xref:System.ArgumentException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="2c346-125">With error detection, a method that detects an invalid sequence of characters or bytes throws an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="2c346-126">Senza il rilevamento di errori, viene generata alcuna eccezione e la sequenza non valida in genere viene ignorata.</span><span class="sxs-lookup"><span data-stu-id="2c346-126">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
 <span data-ttu-id="2c346-127">È possibile creare un'istanza di un <xref:System.Text.UTF32Encoding> oggetto in diversi modi, a seconda se si desidera per fornire un byte order mark (BOM), se si desidera che la codifica big-endian o little-endian e se si desidera attivare il rilevamento errori.</span><span class="sxs-lookup"><span data-stu-id="2c346-127">You can instantiate a <xref:System.Text.UTF32Encoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM), whether you want big-endian or little-endian encoding, and whether you want to enable error detection.</span></span> <span data-ttu-id="2c346-128">La tabella seguente elenca le <xref:System.Text.UTF32Encoding> costruttori e i <xref:System.Text.Encoding> le proprietà che restituiscono un <xref:System.Text.UnicodeEncoding> oggetto.</span><span class="sxs-lookup"><span data-stu-id="2c346-128">The following table lists the <xref:System.Text.UTF32Encoding> constructors and the <xref:System.Text.Encoding> properties that return a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
|<span data-ttu-id="2c346-129">Member</span><span class="sxs-lookup"><span data-stu-id="2c346-129">Member</span></span>|<span data-ttu-id="2c346-130">Ordine dei byte</span><span class="sxs-lookup"><span data-stu-id="2c346-130">Endianness</span></span>|<span data-ttu-id="2c346-131">INDICATORE ORDINE BYTE</span><span class="sxs-lookup"><span data-stu-id="2c346-131">BOM</span></span>|<span data-ttu-id="2c346-132">Rilevamento degli errori</span><span class="sxs-lookup"><span data-stu-id="2c346-132">Error detection</span></span>|  
|------------|----------------|---------|---------------------|  
|<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>|<span data-ttu-id="2c346-133">Little-endian</span><span class="sxs-lookup"><span data-stu-id="2c346-133">Little-endian</span></span>|<span data-ttu-id="2c346-134">Yes</span><span class="sxs-lookup"><span data-stu-id="2c346-134">Yes</span></span>|<span data-ttu-id="2c346-135">Nessuna (fallback di sostituzione)</span><span class="sxs-lookup"><span data-stu-id="2c346-135">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="2c346-136">Little-endian</span><span class="sxs-lookup"><span data-stu-id="2c346-136">Little-endian</span></span>|<span data-ttu-id="2c346-137">Yes</span><span class="sxs-lookup"><span data-stu-id="2c346-137">Yes</span></span>|<span data-ttu-id="2c346-138">Nessuna (fallback di sostituzione)</span><span class="sxs-lookup"><span data-stu-id="2c346-138">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="2c346-139">Configurabile</span><span class="sxs-lookup"><span data-stu-id="2c346-139">Configurable</span></span>|<span data-ttu-id="2c346-140">Configurabile</span><span class="sxs-lookup"><span data-stu-id="2c346-140">Configurable</span></span>|<span data-ttu-id="2c346-141">Nessuna (fallback di sostituzione)</span><span class="sxs-lookup"><span data-stu-id="2c346-141">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="2c346-142">Configurabile</span><span class="sxs-lookup"><span data-stu-id="2c346-142">Configurable</span></span>|<span data-ttu-id="2c346-143">Configurabile</span><span class="sxs-lookup"><span data-stu-id="2c346-143">Configurable</span></span>|<span data-ttu-id="2c346-144">Configurabile</span><span class="sxs-lookup"><span data-stu-id="2c346-144">Configurable</span></span>|  
  
 <span data-ttu-id="2c346-145">Il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo determina il numero di byte comportare la codifica di un set di caratteri Unicode e il <xref:System.Text.UTF32Encoding.GetBytes%2A> metodo esegue l'effettiva codifica.</span><span class="sxs-lookup"><span data-stu-id="2c346-145">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UTF32Encoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="2c346-146">Analogamente, il <xref:System.Text.UTF32Encoding.GetCharCount%2A> metodo determina il numero di caratteri risultanti dalla decodifica di una sequenza di byte e il <xref:System.Text.UTF32Encoding.GetChars%2A> e <xref:System.Text.UTF32Encoding.GetString%2A> i metodi eseguono la decodifica effettiva.</span><span class="sxs-lookup"><span data-stu-id="2c346-146">Likewise, the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UTF32Encoding.GetChars%2A> and <xref:System.Text.UTF32Encoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="2c346-147">Per un codificatore o un decodificatore in grado di salvare le informazioni sullo stato durante la codifica o decodifica dei dati che si estende su più blocchi (ad esempio stringhe di caratteri pari a 1 milione è codificato nei segmenti di caratteri di 100.000), usare il <xref:System.Text.UTF32Encoding.GetEncoder%2A> e <xref:System.Text.UTF32Encoding.GetDecoder%2A> proprietà, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="2c346-147">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UTF32Encoding.GetEncoder%2A> and <xref:System.Text.UTF32Encoding.GetDecoder%2A> properties, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c346-148">Nell'esempio seguente viene illustrato il comportamento di <xref:System.Text.UTF32Encoding> oggetti con e senza il rilevamento di errori abilitata.</span><span class="sxs-lookup"><span data-stu-id="2c346-148">The following example demonstrates the behavior of <xref:System.Text.UTF32Encoding> objects with and without error detection enabled.</span></span> <span data-ttu-id="2c346-149">Crea una matrice di byte cui ultimi quattro byte rappresentano una coppia di surrogati non valida; surrogato alto U + D8FF è seguito da un U + 01FF, che è compreso nell'intervallo di surrogati bassi (0xDC00 e 0xDFFF).</span><span class="sxs-lookup"><span data-stu-id="2c346-149">It creates a byte array whose last four bytes represent an invalid surrogate pair; the high surrogate U+D8FF is followed by an U+01FF, which is outside the range of low surrogates (0xDC00 through 0xDFFF).</span></span> <span data-ttu-id="2c346-150">Senza il rilevamento di errori, il decodificatore UTF32 Usa il fallback di sostituzione per sostituire la coppia di surrogati non valida con REPLACEMENT CHARACTER (U + FFFD).</span><span class="sxs-lookup"><span data-stu-id="2c346-150">Without error detection, the UTF32 decoder uses replacement fallback to replace the invalid surrogate pair with REPLACEMENT CHARACTER (U+FFFD).</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/VB/ErrorDetection.vb#1)]  
  
 <span data-ttu-id="2c346-151">Nell'esempio seguente codifica una stringa di caratteri Unicode in una matrice di byte usando un <xref:System.Text.UTF32Encoding> oggetto.</span><span class="sxs-lookup"><span data-stu-id="2c346-151">The following example encodes a string of Unicode characters into a byte array by using a <xref:System.Text.UTF32Encoding> object.</span></span> <span data-ttu-id="2c346-152">Quindi, la matrice di byte viene decodificata in una stringa per illustrare che non vi sia alcuna perdita di dati.</span><span class="sxs-lookup"><span data-stu-id="2c346-152">The byte array is then decoded into a string to demonstrate that there is no loss of data.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.class/cs/snippet.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.class/vb/snippet.vb#1)]  
  
 <span data-ttu-id="2c346-153">L'esempio seguente usa la stessa stringa come quello precedente, ad eccezione del fatto che scrive i byte codificati in un file e dei relativi prefissi, il flusso di byte con un byte order mark (BOM).</span><span class="sxs-lookup"><span data-stu-id="2c346-153">The following example uses the same string as the previous one, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="2c346-154">Quindi legge il file in due modi diversi: come file di testo usando un <xref:System.IO.StreamReader> ; dell'oggetto e come un file binario.</span><span class="sxs-lookup"><span data-stu-id="2c346-154">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="2c346-155">Come si può immaginare, in entrambi i casi è il BOM incluso nella stringa di appena lettura.</span><span class="sxs-lookup"><span data-stu-id="2c346-155">As you would expect, in neither case is the BOM included in the newly read string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.class/cs/bom1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.class/vb/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.UTF8Encoding" />
    <altmember cref="T:System.Text.ASCIIEncoding" />
    <altmember cref="T:System.Text.UnicodeEncoding" />
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="T:System.Globalization.CharUnicodeInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2c346-156">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-156">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2c346-157">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-157">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-158">Questo costruttore crea un'istanza che utilizza l'ordine dei byte little-endian little, fornisce un byte order mark Unicode e non genera un'eccezione quando viene rilevata una codifica non valida.</span><span class="sxs-lookup"><span data-stu-id="2c346-158">This constructor creates an instance that uses the little endian byte order, provides a Unicode byte order mark, and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2c346-159">Per motivi di sicurezza, è necessario abilitare il rilevamento errori chiamando il <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> costruttore e l'impostazione relativa `throwOnInvalidCharacters` argomento `true`.</span><span class="sxs-lookup"><span data-stu-id="2c346-159">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c346-160">Il seguente esempio recupera e visualizza l'ordine dei byte contrassegna per differente <xref:System.Text.UTF32Encoding> istanze.</span><span class="sxs-lookup"><span data-stu-id="2c346-160">The following example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding (bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding(bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF32Encoding : bool * bool -&gt; System.Text.UTF32Encoding" Usage="new System.Text.UTF32Encoding (bigEndian, byteOrderMark)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="2c346-161">
            <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-161">
              <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          </span>
        </param>
        <param name="byteOrderMark">
          <span data-ttu-id="2c346-162">
            <see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-162">
              <see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c346-163">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-163">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
          <span data-ttu-id="2c346-164">Parameters specify whether to use the big endian byte order and whether the <see cref="M:System.Text.UTF32Encoding.GetPreamble" /> method returns a Unicode Unicode byte order mark.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-164">Parameters specify whether to use the big endian byte order and whether the <see cref="M:System.Text.UTF32Encoding.GetPreamble" /> method returns a Unicode Unicode byte order mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-165">Questo costruttore crea un'istanza che non genera un'eccezione quando viene rilevata una codifica non valida.</span><span class="sxs-lookup"><span data-stu-id="2c346-165">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2c346-166">Per motivi di sicurezza, è necessario abilitare il rilevamento errori chiamando il <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> costruttore e l'impostazione relativa `throwOnInvalidCharacters` argomento `true`.</span><span class="sxs-lookup"><span data-stu-id="2c346-166">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c346-167">Il seguente esempio recupera e visualizza l'ordine dei byte contrassegna per differente <xref:System.Text.UTF32Encoding> istanze.</span><span class="sxs-lookup"><span data-stu-id="2c346-167">The following example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding (bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean, throwOnInvalidCharacters As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding(bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF32Encoding : bool * bool * bool -&gt; System.Text.UTF32Encoding" Usage="new System.Text.UTF32Encoding (bigEndian, byteOrderMark, throwOnInvalidCharacters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidCharacters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="2c346-168">
            <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-168">
              <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          </span>
        </param>
        <param name="byteOrderMark">
          <span data-ttu-id="2c346-169">
            <see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-169">
              <see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="throwOnInvalidCharacters">
          <span data-ttu-id="2c346-170">
            <see langword="true" /> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-170">
              <see langword="true" /> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c346-171">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-171">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
          <span data-ttu-id="2c346-172">Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-172">Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-173">Se `throwOnInvalidCharacters` viene `true`, un metodo che rileva una sequenza di byte non valido genera <xref:System.ArgumentException?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2c346-173">If `throwOnInvalidCharacters` is `true`, a method that detects an invalid byte sequence throws <xref:System.ArgumentException?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2c346-174">In caso contrario, il metodo non viene generata un'eccezione e la sequenza non valida verrà ignorata.</span><span class="sxs-lookup"><span data-stu-id="2c346-174">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2c346-175">Per motivi di sicurezza, è necessario abilitare il rilevamento errori chiamando il <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> costruttore e l'impostazione relativa `throwOnInvalidCharacters` argomento `true`.</span><span class="sxs-lookup"><span data-stu-id="2c346-175">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c346-176">Nell'esempio seguente viene illustrato il comportamento di <xref:System.Text.UTF32Encoding>, con il rilevamento di errori abilitata e senza.</span><span class="sxs-lookup"><span data-stu-id="2c346-176">The following example demonstrates the behavior of <xref:System.Text.UTF32Encoding>, both with error detection enabled and without.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/VB/ErrorDetection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uTF32Encoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2c346-177">The <see cref="T:System.Object" /> to compare with the current object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-177">The <see cref="T:System.Object" /> to compare with the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c346-178">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Text.UTF32Encoding" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-178">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Text.UTF32Encoding" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-179">
            <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF32Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-179">
              <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF32Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-180">Due <xref:System.Text.UTF32Encoding> oggetti sono considerati uguali se sono vere tutte le condizioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="2c346-180">Two <xref:System.Text.UTF32Encoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="2c346-181">Entrambi gli oggetti utilizzano lo stesso ordine di byte.</span><span class="sxs-lookup"><span data-stu-id="2c346-181">Both objects use the same byte order.</span></span>  
  
-   <span data-ttu-id="2c346-182">Entrambi gli oggetti forniscono il byte order mark, o entrambi non lo sono.</span><span class="sxs-lookup"><span data-stu-id="2c346-182">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="2c346-183">Entrambi gli oggetti utilizzano lo stesso codificatore fallback.</span><span class="sxs-lookup"><span data-stu-id="2c346-183">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="2c346-184">Entrambi gli oggetti utilizzano lo stesso di fallback del decodificatore.</span><span class="sxs-lookup"><span data-stu-id="2c346-184">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c346-185">L'esempio seguente crea <xref:System.Text.UTF32Encoding> gli oggetti usando parametri diversi valori e quindi ne viene verificata l'uguaglianza.</span><span class="sxs-lookup"><span data-stu-id="2c346-185">The following example creates <xref:System.Text.UTF32Encoding> objects using different parameter values and then checks them for equality.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2c346-186">Calculates the number of bytes produced by encoding a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-186">Calculates the number of bytes produced by encoding a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="uTF32Encoding.GetByteCount s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2c346-187">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-187">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c346-188">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-188">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-189">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-189">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-190">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetBytes%2A> per archiviare i byte risultanti, si chiama il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-190">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2c346-191">Per calcolare la dimensione massima della matrice, si chiama il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-191">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2c346-192">Il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="2c346-192">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2c346-193">Con il rilevamento di errori, una sequenza non valida fa sì che questo metodo generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2c346-193">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="2c346-194">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="2c346-194">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2c346-195">Per garantire che i byte codificati vengano decodificati correttamente quando vengono salvati come un file o un flusso, è possibile anteporre un flusso di byte codificati con un preambolo.</span><span class="sxs-lookup"><span data-stu-id="2c346-195">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="2c346-196">Inserire il preambolo all'inizio di un flusso di byte (ad esempio all'inizio di una serie di byte da scrivere in un file) è responsabilità dello sviluppatore e il numero di byte del preambolo non viene aggiornato nel valore restituito dal <xref:System.Text.UTF32Encoding.GetByteCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="2c346-196">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c346-197">L'esempio seguente chiama il <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> e <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> metodi per calcolare il numero massimo ed effettivo di byte necessari per codificare una stringa.</span><span class="sxs-lookup"><span data-stu-id="2c346-197">The following example calls the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> and <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="2c346-198">Visualizza anche il numero effettivo di byte necessari per archiviare un flusso di byte con un byte order mark.</span><span class="sxs-lookup"><span data-stu-id="2c346-198">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.Utf32Encoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.Utf32Encoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2c346-199">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-199">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2c346-200">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-200">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2c346-201">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-201">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="2c346-202">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-202">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF32Encoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="2c346-203">A pointer to the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-203">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2c346-204">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-204">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c346-205">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-205">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-206">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-206">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-207">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetBytes%2A> per archiviare i byte risultanti, si chiama il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-207">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2c346-208">Per calcolare la dimensione massima della matrice, si chiama il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2c346-208">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="2c346-209">Il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="2c346-209">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2c346-210">Con il rilevamento di errori, una sequenza non valida fa sì che questo metodo generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2c346-210">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="2c346-211">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="2c346-211">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2c346-212">Per garantire che i byte codificati vengano decodificati correttamente quando vengono salvati come un file o un flusso, è possibile anteporre un flusso di byte codificati con un preambolo.</span><span class="sxs-lookup"><span data-stu-id="2c346-212">To ensure that the encoded bytes are decoded properly when they are saved as a file or a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="2c346-213">Inserimento di un preambolo all'inizio di un flusso di byte (ad esempio all'inizio di una serie di byte da scrivere in un file) è responsabilità dello sviluppatore e il numero di byte del preambolo non viene aggiornato nel valore restituito dal <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-213">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2c346-214">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-214">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2c346-215">
            <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-215">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2c346-216">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-216">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2c346-217">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-217">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="2c346-218">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-218">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2c346-219">Esempio di codice seguente viene illustrato come utilizzare un handle di attesa per mantenere un processo da terminare mentre è in attesa per un thread in background terminare l'esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-219">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2c346-220">L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-220">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="uTF32Encoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="2c346-221">The character array containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-221">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2c346-222">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-222">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2c346-223">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-223">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c346-224">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-224">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-225">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-225">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-226">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetBytes%2A> per archiviare i byte risultanti, si chiama il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-226">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2c346-227">Per calcolare la dimensione massima della matrice, si chiama il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-227">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2c346-228">Il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="2c346-228">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2c346-229">Con il rilevamento di errori, una sequenza non valida fa sì che questo metodo generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2c346-229">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="2c346-230">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="2c346-230">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2c346-231">Per garantire che i byte codificati vengano decodificati correttamente quando vengono salvati come un file o un flusso, è possibile anteporre un flusso di byte codificati con un preambolo.</span><span class="sxs-lookup"><span data-stu-id="2c346-231">To ensure that the encoded bytes are decoded properly when they are saved as a file or a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="2c346-232">Inserimento di un preambolo all'inizio di un flusso di byte (ad esempio all'inizio di una serie di byte da scrivere in un file) è responsabilità dello sviluppatore e il numero di byte del preambolo non viene aggiornato nel valore restituito dal <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-232">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c346-233">Nell'esempio seguente consente di popolare una matrice con un alfabeto latino di lettere maiuscole e minuscole e viene chiamato il <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> metodo per determinare il numero di byte necessari per codificare i caratteri minuscoli latini.</span><span class="sxs-lookup"><span data-stu-id="2c346-233">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="2c346-234">Visualizza quindi queste informazioni insieme al numero totale di byte necessari se viene aggiunto un byte order mark.</span><span class="sxs-lookup"><span data-stu-id="2c346-234">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="2c346-235">Questo numero viene confrontato con il valore restituito dal <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metodo, che indica il numero massimo di byte necessari per codificare i caratteri minuscoli latini.</span><span class="sxs-lookup"><span data-stu-id="2c346-235">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="2c346-236">Nell'esempio seguente inserisce in una matrice con una combinazione di caratteri greco e per il cirillico e chiamate di <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> metodo per determinare il numero di byte necessari per codificare i caratteri cirillici.</span><span class="sxs-lookup"><span data-stu-id="2c346-236">The following example populates an array with a combination of Greek and Cyrillic characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Cyrillic characters.</span></span> <span data-ttu-id="2c346-237">Visualizza quindi queste informazioni insieme al numero totale di byte necessari se viene aggiunto un byte order mark.</span><span class="sxs-lookup"><span data-stu-id="2c346-237">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="2c346-238">Questo numero viene confrontato con il valore restituito dal <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metodo, che indica il numero massimo di byte necessari per codificare i caratteri cirillici.</span><span class="sxs-lookup"><span data-stu-id="2c346-238">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Cyrillic characters.</span></span>  
  
 [!code-csharp[System.Text.Utf32Encoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.Utf32Encoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2c346-239">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-239">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2c346-240">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-240">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2c346-241">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-241">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="2c346-242">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-242">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2c346-243">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-243">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="2c346-244">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-244">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2c346-245">Encodes a set of characters into a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-245">Encodes a set of characters into a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF32Encoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="2c346-246">A pointer to the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-246">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="2c346-247">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-247">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="2c346-248">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-248">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="2c346-249">The maximum number of bytes to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-249">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c346-250">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-250">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-251">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-251">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-252">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetBytes%2A> per archiviare i byte risultanti, si chiama il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-252">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2c346-253">Per calcolare la dimensione massima della matrice, si chiama il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-253">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2c346-254">Il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="2c346-254">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2c346-255">Con il rilevamento di errori, una sequenza non valida fa sì che questo metodo generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2c346-255">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="2c346-256">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="2c346-256">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2c346-257">Dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</span><span class="sxs-lookup"><span data-stu-id="2c346-257">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="2c346-258">In questo caso, o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, l'applicazione utilizza il <xref:System.Text.Decoder> o il <xref:System.Text.Encoder> fornito dal <xref:System.Text.UTF32Encoding.GetDecoder%2A> metodo o il <xref:System.Text.UTF32Encoding.GetEncoder%2A> metodo, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="2c346-258">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2c346-259">Per garantire che i byte codificati vengano decodificati correttamente quando vengono salvati come un file o un flusso, è possibile anteporre un flusso di byte codificati con un preambolo.</span><span class="sxs-lookup"><span data-stu-id="2c346-259">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="2c346-260">Inserimento di un preambolo all'inizio di un flusso di byte (ad esempio all'inizio di una serie di byte da scrivere in un file) è responsabilità dello sviluppatore.</span><span class="sxs-lookup"><span data-stu-id="2c346-260">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="2c346-261">Il <xref:System.Text.UTF32Encoding.GetBytes%2A> metodo non anteporre un preambolo all'inizio di una sequenza di byte codificati.</span><span class="sxs-lookup"><span data-stu-id="2c346-261">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2c346-262">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-262">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2c346-263">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-263">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2c346-264">
            <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-264">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2c346-265">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-265">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="2c346-266">-or-  <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-266">-or-  <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="2c346-267">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-267">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2c346-268">Esempio di codice seguente viene illustrato come utilizzare un handle di attesa per mantenere un processo da terminare mentre è in attesa per un thread in background terminare l'esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-268">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2c346-269">L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-269">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="uTF32Encoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="2c346-270">The character array containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-270">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="2c346-271">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-271">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="2c346-272">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-272">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="2c346-273">The byte array to contain the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-273">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="2c346-274">The index at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-274">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c346-275">Encodes a set of characters from the specified character array into the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-275">Encodes a set of characters from the specified character array into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-276">The actual number of bytes written into <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-276">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-277">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetBytes%2A> per archiviare i byte risultanti, si chiama il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-277">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2c346-278">Per calcolare la dimensione massima della matrice, si chiama il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-278">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2c346-279">Il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="2c346-279">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2c346-280">Con il rilevamento di errori, una sequenza non valida fa sì che questo metodo generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2c346-280">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="2c346-281">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="2c346-281">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2c346-282">Dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</span><span class="sxs-lookup"><span data-stu-id="2c346-282">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="2c346-283">In questo caso, o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, l'applicazione utilizza il <xref:System.Text.Decoder> o il <xref:System.Text.Encoder> fornito dal <xref:System.Text.UTF32Encoding.GetDecoder%2A> metodo o il <xref:System.Text.UTF32Encoding.GetEncoder%2A> metodo, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="2c346-283">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2c346-284">Per garantire che i byte codificati vengano decodificati correttamente quando vengono salvati come un file o un flusso, è possibile anteporre un flusso di byte codificati con un preambolo.</span><span class="sxs-lookup"><span data-stu-id="2c346-284">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="2c346-285">Inserimento di un preambolo all'inizio di un flusso di byte (ad esempio all'inizio di una serie di byte da scrivere in un file) è responsabilità dello sviluppatore.</span><span class="sxs-lookup"><span data-stu-id="2c346-285">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="2c346-286">Il <xref:System.Text.UTF32Encoding.GetBytes%2A> metodo non anteporre un preambolo all'inizio di una sequenza di byte codificati.</span><span class="sxs-lookup"><span data-stu-id="2c346-286">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c346-287">Nell'esempio seguente determina il numero di byte necessari per codificare i tre caratteri da una matrice di caratteri, quindi vengono codificati i caratteri e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="2c346-287">The following example determines the number of bytes required to encode three characters from a character array, then encodes the characters and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/VB/GetBytes_CharArr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2c346-288">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-288">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2c346-289">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-289">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2c346-290">
            <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-290">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2c346-291">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-291">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="2c346-292">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-292">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2c346-293">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-293">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="2c346-294">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-294">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="2c346-295">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-295">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="uTF32Encoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2c346-296">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-296">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="2c346-297">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-297">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="2c346-298">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-298">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="2c346-299">The byte array to contain the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-299">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="2c346-300">The index at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-300">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c346-301">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-301">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-302">The actual number of bytes written into <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-302">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-303">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetBytes%2A> per archiviare i byte risultanti, si chiama il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-303">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2c346-304">Per calcolare la dimensione massima della matrice, si chiama il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-304">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2c346-305">Il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="2c346-305">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2c346-306">Con il rilevamento di errori, una sequenza non valida fa sì che questo metodo generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2c346-306">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="2c346-307">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="2c346-307">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2c346-308">Dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</span><span class="sxs-lookup"><span data-stu-id="2c346-308">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="2c346-309">In questo caso, o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, l'applicazione utilizza il <xref:System.Text.Decoder> o il <xref:System.Text.Encoder> fornito dal <xref:System.Text.UTF32Encoding.GetDecoder%2A> metodo o il <xref:System.Text.UTF32Encoding.GetEncoder%2A> metodo, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="2c346-309">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2c346-310">Per garantire che i byte codificati vengano decodificati correttamente quando vengono salvati come un file o un flusso, è possibile anteporre un flusso di byte codificati con un preambolo.</span><span class="sxs-lookup"><span data-stu-id="2c346-310">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="2c346-311">Inserimento di un preambolo all'inizio di un flusso di byte (ad esempio all'inizio di una serie di byte da scrivere in un file) è responsabilità dello sviluppatore.</span><span class="sxs-lookup"><span data-stu-id="2c346-311">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="2c346-312">Il <xref:System.Text.UTF32Encoding.GetBytes%2A> metodo non anteporre un preambolo all'inizio di una sequenza di byte codificati.</span><span class="sxs-lookup"><span data-stu-id="2c346-312">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c346-313">Nell'esempio seguente determina il numero di byte necessari per codificare una stringa, quindi codifica la stringa e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="2c346-313">The following example determines the number of bytes required to encode a string, then encodes the string and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/VB/GetBytes_String.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2c346-314">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-314">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2c346-315">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-315">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2c346-316">
            <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-316">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2c346-317">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-317">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="2c346-318">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-318">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2c346-319">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-319">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="2c346-320">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-320">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="2c346-321">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-321">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2c346-322">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-322">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF32Encoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="2c346-323">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-323">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2c346-324">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-324">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c346-325">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-325">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-326">The number of characters produced by decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-326">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-327"><xref:System.Text.UTF32Encoding.GetCharCount%2A> Calcola le dimensioni della matrice esatti necessari per il <xref:System.Text.UTF32Encoding.GetChars%2A> metodo per archiviare i caratteri risultanti.</span><span class="sxs-lookup"><span data-stu-id="2c346-327"><xref:System.Text.UTF32Encoding.GetCharCount%2A> calculates the exact array size required by the <xref:System.Text.UTF32Encoding.GetChars%2A> method to store the resulting characters.</span></span> <span data-ttu-id="2c346-328">Per calcolare la dimensione massima della matrice, chiamare il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-328">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="2c346-329">Il <xref:System.Text.UTF32Encoding.GetCharCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="2c346-329">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2c346-330">Con il rilevamento di errori, una sequenza non valida fa sì che questo metodo generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2c346-330">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="2c346-331">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="2c346-331">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2c346-332">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-332">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2c346-333">
            <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-333">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2c346-334">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-334">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2c346-335">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-335">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="2c346-336">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-336">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2c346-337">Esempio di codice seguente viene illustrato come utilizzare un handle di attesa per mantenere un processo da terminare mentre è in attesa per un thread in background terminare l'esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-337">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2c346-338">L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-338">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Text.UTF32Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="uTF32Encoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="2c346-339">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-339">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2c346-340">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-340">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2c346-341">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-341">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c346-342">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-342">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-343">The number of characters produced by decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-343">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-344">Il <xref:System.Text.UTF32Encoding.GetCharCount%2A> metodo calcola le dimensioni della matrice esatti necessari per il <xref:System.Text.UTF32Encoding.GetChars%2A> metodo per archiviare i caratteri risultanti.</span><span class="sxs-lookup"><span data-stu-id="2c346-344">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method calculates the exact array size required by the <xref:System.Text.UTF32Encoding.GetChars%2A> method to store the resulting characters.</span></span> <span data-ttu-id="2c346-345">Per calcolare la dimensione massima della matrice, chiamare il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-345">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="2c346-346">Il <xref:System.Text.UTF32Encoding.GetCharCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="2c346-346">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2c346-347">Con il rilevamento di errori, una sequenza non valida fa sì che questo metodo generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2c346-347">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="2c346-348">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="2c346-348">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c346-349">Nell'esempio seguente codifica una stringa in una matrice di byte e quindi decodifica byte in una matrice di caratteri.</span><span class="sxs-lookup"><span data-stu-id="2c346-349">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2c346-350">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-350">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2c346-351">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-351">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2c346-352">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-352">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="2c346-353">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-353">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2c346-354">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-354">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="2c346-355">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-355">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.UTF32Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2c346-356">Decodes a sequence of bytes into a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-356">Decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF32Encoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="2c346-357">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-357">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="2c346-358">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-358">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="2c346-359">A pointer to the location at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-359">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="2c346-360">The maximum number of characters to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-360">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c346-361">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-361">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-362">The actual number of characters written at the location indicated by <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-362">The actual number of characters written at the location indicated by <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-363">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetChars%2A> per archiviare i caratteri risultanti, chiamare il <xref:System.Text.UTF32Encoding.GetCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-363">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="2c346-364">Per calcolare la dimensione massima della matrice, chiamare il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-364">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="2c346-365">Il <xref:System.Text.UTF32Encoding.GetCharCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="2c346-365">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2c346-366">Con il rilevamento di errori, una sequenza non valida fa sì che questo metodo generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2c346-366">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="2c346-367">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="2c346-367">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2c346-368">Se l'intervallo di byte da decodificare include il byte order mark (BOM) e la matrice di byte è stata restituita da un metodo di un tipo compatibile con non DBA, il carattere di U + FFFE è incluso nella matrice di caratteri restituita da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-368">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="2c346-369">È possibile rimuoverlo chiamando il <xref:System.String.TrimStart%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-369">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2c346-370">Dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</span><span class="sxs-lookup"><span data-stu-id="2c346-370">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="2c346-371">In questo caso, o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, l'applicazione utilizza il <xref:System.Text.Decoder> o il <xref:System.Text.Encoder> fornito dal <xref:System.Text.UTF32Encoding.GetDecoder%2A> metodo o il <xref:System.Text.UTF32Encoding.GetEncoder%2A> metodo, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="2c346-371">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2c346-372">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-372">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2c346-373">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-373">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2c346-374">
            <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-374">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2c346-375">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-375">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="2c346-376">-or-  <paramref name="charCount" /> is less than the resulting number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-376">-or-  <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="2c346-377">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-377">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2c346-378">Esempio di codice seguente viene illustrato come utilizzare un handle di attesa per mantenere un processo da terminare mentre è in attesa per un thread in background terminare l'esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-378">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2c346-379">L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-379">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="uTF32Encoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="2c346-380">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-380">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="2c346-381">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-381">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="2c346-382">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-382">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="2c346-383">The character array to contain the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-383">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="2c346-384">The index at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-384">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c346-385">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-385">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-386">The actual number of characters written into <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-386">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-387">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetChars%2A> per archiviare i caratteri risultanti, chiamare il <xref:System.Text.UTF32Encoding.GetCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-387">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="2c346-388">Per calcolare la dimensione massima della matrice, chiamare il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-388">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="2c346-389">Il <xref:System.Text.UTF32Encoding.GetCharCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="2c346-389">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2c346-390">Con il rilevamento di errori, una sequenza non valida fa sì che questo metodo generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2c346-390">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="2c346-391">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="2c346-391">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2c346-392">Se l'intervallo di byte da decodificare include il byte order mark (BOM) e la matrice di byte è stata restituita da un metodo di un tipo compatibile con non DBA, il carattere di U + FFFE è incluso nella matrice di caratteri restituita da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-392">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="2c346-393">È possibile rimuoverlo chiamando il <xref:System.String.TrimStart%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-393">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2c346-394">Dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</span><span class="sxs-lookup"><span data-stu-id="2c346-394">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="2c346-395">In questo caso, o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, l'applicazione utilizza il <xref:System.Text.Decoder> o il <xref:System.Text.Encoder> fornito dal <xref:System.Text.UTF32Encoding.GetDecoder%2A> metodo o il <xref:System.Text.UTF32Encoding.GetEncoder%2A> metodo, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="2c346-395">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c346-396">Nell'esempio seguente codifica una stringa in una matrice di byte e quindi decodifica byte in una matrice di caratteri.</span><span class="sxs-lookup"><span data-stu-id="2c346-396">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2c346-397">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-397">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2c346-398">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-398">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2c346-399">
            <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-399">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2c346-400">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-400">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="2c346-401">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-401">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2c346-402">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-402">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="2c346-403">-or-  <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-403">-or-  <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="2c346-404">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-404">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="uTF32Encoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2c346-405">Obtains a decoder that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-405">Obtains a decoder that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-406">A <see cref="T:System.Text.Decoder" /> that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-406">A <see cref="T:System.Text.Decoder" /> that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-407">Il <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> metodo converte blocchi sequenziali di byte in blocchi sequenziali di caratteri, in modo analogo al <xref:System.Text.UTF32Encoding.GetChars%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-407">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF32Encoding.GetChars%2A> method.</span></span> <span data-ttu-id="2c346-408">Tuttavia, un <xref:System.Text.Decoder> mantiene informazioni sullo stato tra le chiamate in modo da poter decodificare correttamente le sequenze di byte che si estendono su blocchi.</span><span class="sxs-lookup"><span data-stu-id="2c346-408">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="2c346-409">Il <xref:System.Text.Decoder> anche mantiene i byte finali alla fine di blocchi di dati e i byte finali nella successiva operazione di decodifica.</span><span class="sxs-lookup"><span data-stu-id="2c346-409">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="2c346-410">Pertanto, <xref:System.Text.UTF32Encoding.GetDecoder%2A> e <xref:System.Text.UTF32Encoding.GetEncoder%2A> sono utili per la trasmissione di rete e ai file, perché queste operazioni spesso con blocchi di dati invece di un flusso di dati completo.</span><span class="sxs-lookup"><span data-stu-id="2c346-410">Therefore, <xref:System.Text.UTF32Encoding.GetDecoder%2A> and <xref:System.Text.UTF32Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="2c346-411">Se è attivato, ovvero il `throwOnInvalidCharacters` parametro del costruttore è stato impostato su `true`, il rilevamento errori è abilitato anche nel <xref:System.Text.Decoder> restituito da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-411">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor was set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="2c346-412">Se è abilitato il rilevamento errori e viene rilevata una sequenza non valida, lo stato del decodificatore non è definito e deve arrestare l'elaborazione.</span><span class="sxs-lookup"><span data-stu-id="2c346-412">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c346-413">L'esempio seguente usa un codificatore e un decodificatore per codificare una stringa in una matrice di byte e quindi decodificare i byte in una matrice di caratteri.</span><span class="sxs-lookup"><span data-stu-id="2c346-413">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/VB/EncDec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="uTF32Encoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2c346-414">Obtains an encoder that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-414">Obtains an encoder that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-415">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-415">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-416">Il <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metodo converte blocchi sequenziali di caratteri in blocchi sequenziali di byte, in modo analogo al <xref:System.Text.UTF32Encoding.GetBytes%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-416">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.UTF32Encoding.GetBytes%2A> method.</span></span> <span data-ttu-id="2c346-417">Tuttavia, un <xref:System.Text.Encoder> mantiene informazioni sullo stato tra le chiamate in modo può codificare correttamente le sequenze di caratteri che si estendono su blocchi.</span><span class="sxs-lookup"><span data-stu-id="2c346-417">However, a <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="2c346-418">Il <xref:System.Text.Encoder> anche mantiene finali caratteri alla fine di blocchi di dati e i caratteri finali nella successiva operazione di codifica.</span><span class="sxs-lookup"><span data-stu-id="2c346-418">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="2c346-419">Ad esempio, un blocco di dati potrebbe terminare con un surrogato alto senza corrispondenza e il surrogato corrispondente potrebbe essere in blocco di dati successivo.</span><span class="sxs-lookup"><span data-stu-id="2c346-419">For example, a data block might end with an unmatched high-surrogate, and the matching low-surrogate might be in the next data block.</span></span> <span data-ttu-id="2c346-420">Pertanto, <xref:System.Text.UTF32Encoding.GetDecoder%2A> e <xref:System.Text.UTF32Encoding.GetEncoder%2A> sono utili per la trasmissione di rete e ai file, perché queste operazioni spesso con blocchi di dati invece di un flusso di dati completo.</span><span class="sxs-lookup"><span data-stu-id="2c346-420">Therefore, <xref:System.Text.UTF32Encoding.GetDecoder%2A> and <xref:System.Text.UTF32Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="2c346-421">Se è attivato, ovvero il `throwOnInvalidCharacters` parametro del costruttore è stato impostato su `true`, il rilevamento errori è abilitato anche nel <xref:System.Text.Encoder> restituito da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-421">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor was set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> returned by this method.</span></span> <span data-ttu-id="2c346-422">Se è abilitato il rilevamento errori e viene rilevata una sequenza non valida, lo stato del codificatore non è definito e deve arrestare l'elaborazione.</span><span class="sxs-lookup"><span data-stu-id="2c346-422">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c346-423">L'esempio seguente usa un codificatore e un decodificatore per codificare una stringa in una matrice di byte e quindi decodificare i byte in una matrice di caratteri.</span><span class="sxs-lookup"><span data-stu-id="2c346-423">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/VB/EncDec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uTF32Encoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2c346-424">Returns the hash code for the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-424">Returns the hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-425">The hash code for the current <see cref="T:System.Text.UTF32Encoding" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-425">The hash code for the current <see cref="T:System.Text.UTF32Encoding" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="uTF32Encoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount">
          <span data-ttu-id="2c346-426">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-426">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c346-427">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-427">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-428">The maximum number of bytes produced by encoding the specified number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-428">The maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-429">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetBytes%2A> per archiviare i byte risultanti, si chiama il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-429">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2c346-430">Per calcolare la dimensione massima della matrice, si chiama il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-430">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2c346-431">Il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="2c346-431">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2c346-432"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> è un numero caso peggiore, incluso il caso peggiore per l'oggetto attualmente selezionato <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="2c346-432"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="2c346-433">Se si sceglie un fallback con una stringa di grandi dimensioni, <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> può restituire valori di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="2c346-433">If a fallback is chosen with a potentially large string,  <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="2c346-434">Nella maggior parte dei casi, questo metodo restituisce ragionevole per stringhe di piccole dimensioni.</span><span class="sxs-lookup"><span data-stu-id="2c346-434">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="2c346-435">Per le stringhe di grandi dimensioni, potrebbe essere necessario effettuare una scelta tra l'utilizzo di buffer molto grandi o rilevare errori nel raro caso che un buffer più ragionevole è stato superato.</span><span class="sxs-lookup"><span data-stu-id="2c346-435">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="2c346-436">È inoltre possibile prendere in considerazione un approccio diverso e usare <xref:System.Text.UTF32Encoding.GetByteCount%2A> o <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2c346-436">You might also want to consider a different approach and use <xref:System.Text.UTF32Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2c346-437"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> non ha alcuna relazione con <xref:System.Text.UTF32Encoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="2c346-437"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> has no relationship to <xref:System.Text.UTF32Encoding.GetChars%2A>.</span></span> <span data-ttu-id="2c346-438">Se è necessaria una funzione simile da utilizzare con <xref:System.Text.UTF32Encoding.GetChars%2A>, utilizzare <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2c346-438">If you need a similar function to use with <xref:System.Text.UTF32Encoding.GetChars%2A>, use <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2c346-439">`GetMaxByteCount(N)` non è necessariamente lo stesso valore di `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="2c346-439">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c346-440">Nell'esempio seguente determina il numero di byte necessari per codificare una stringa, quindi codifica la stringa e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="2c346-440">The following example determines the number of bytes required to encode a string, then encodes the string and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/VB/GetBytes_String.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2c346-441">
            <paramref name="charCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-441">
              <paramref name="charCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2c346-442">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-442">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="2c346-443">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-443">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="uTF32Encoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount">
          <span data-ttu-id="2c346-444">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-444">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c346-445">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-445">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-446">The maximum number of characters produced by decoding the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-446">The maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-447">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetChars%2A> per archiviare i caratteri risultanti, si chiama il <xref:System.Text.UTF32Encoding.GetCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-447">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, you call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="2c346-448">Per calcolare la dimensione massima della matrice, si chiama il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-448">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="2c346-449">Il <xref:System.Text.UTF32Encoding.GetCharCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="2c346-449">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2c346-450"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> è un numero caso peggiore, incluso il caso peggiore per l'oggetto attualmente selezionato <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="2c346-450"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="2c346-451">Se si sceglie un fallback con una stringa di grandi dimensioni, <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> può restituire valori di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="2c346-451">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="2c346-452">Nella maggior parte dei casi, questo metodo restituisce ragionevole per stringhe di piccole dimensioni.</span><span class="sxs-lookup"><span data-stu-id="2c346-452">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="2c346-453">Per le stringhe di grandi dimensioni, potrebbe essere necessario effettuare una scelta tra l'utilizzo di buffer molto grandi o rilevare errori nel raro caso che un buffer più ragionevole è stato superato.</span><span class="sxs-lookup"><span data-stu-id="2c346-453">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="2c346-454">È inoltre possibile prendere in considerazione un approccio diverso e usare <xref:System.Text.UTF32Encoding.GetCharCount%2A> o <xref:System.Text.Decoder.Convert%2A>.</span><span class="sxs-lookup"><span data-stu-id="2c346-454">You might also want to consider a different approach and use <xref:System.Text.UTF32Encoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A>.</span></span>  
  
 <span data-ttu-id="2c346-455"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> non ha alcuna relazione con <xref:System.Text.UTF32Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="2c346-455"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> has no relationship to <xref:System.Text.UTF32Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="2c346-456">Se è necessaria una funzione simile da utilizzare con <xref:System.Text.UTF32Encoding.GetBytes%2A>, utilizzare <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2c346-456">If you need a similar function to use with <xref:System.Text.UTF32Encoding.GetBytes%2A>, use <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2c346-457">`GetMaxCharCount(N)` non è necessariamente lo stesso valore di `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="2c346-457">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c346-458">Nell'esempio seguente codifica una stringa in una matrice di byte e quindi decodifica byte in una matrice di caratteri.</span><span class="sxs-lookup"><span data-stu-id="2c346-458">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2c346-459">
            <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-459">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2c346-460">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-460">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="2c346-461">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-461">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="override this.GetPreamble : unit -&gt; byte[]" Usage="uTF32Encoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2c346-462">Returns a Unicode byte order mark encoded in UTF-32 format, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-462">Returns a Unicode byte order mark encoded in UTF-32 format, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-463">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-463">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span>
          </span>
          <span data-ttu-id="2c346-464">Otherwise, this method returns a zero-length byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-464">Otherwise, this method returns a zero-length byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-465">Il <xref:System.Text.UTF32Encoding> oggetto può fornire un preambolo, ovvero una matrice di byte che possono essere preceduti della sequenza di byte risultante dal processo di codifica.</span><span class="sxs-lookup"><span data-stu-id="2c346-465">The <xref:System.Text.UTF32Encoding> object can provide a preamble, which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="2c346-466">Prima di una sequenza di byte codificati con un byte order mark (punti di codice U + 0000 U + FEFF) consente il decodificatore di determinare l'ordine dei byte e il formato di trasformazione o UTF.</span><span class="sxs-lookup"><span data-stu-id="2c346-466">Prefacing a sequence of encoded bytes with a byte order mark (code points U+0000 U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</span></span> <span data-ttu-id="2c346-467">Il byte order mark (BOM) Unicode viene serializzato nel modo seguente (in esadecimale):</span><span class="sxs-lookup"><span data-stu-id="2c346-467">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="2c346-468">Ordine dei byte big-endian: 00 00 FF FE</span><span class="sxs-lookup"><span data-stu-id="2c346-468">Big endian byte order: 00 00 FE FF</span></span>  
  
-   <span data-ttu-id="2c346-469">Ordine dei byte little-endian little: FF FE 00 00</span><span class="sxs-lookup"><span data-stu-id="2c346-469">Little endian byte order: FF FE 00 00</span></span>  
  
 <span data-ttu-id="2c346-470">È possibile creare un'istanza di un <xref:System.Text.UTF32Encoding> il cui <xref:System.Text.UTF32Encoding.GetPreamble%2A> metodo restituisce un valido indicatore ordine byte nei modi seguenti:</span><span class="sxs-lookup"><span data-stu-id="2c346-470">You can instantiate a <xref:System.Text.UTF32Encoding> object whose <xref:System.Text.UTF32Encoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="2c346-471">Recuperando il <xref:System.Text.UTF32Encoding> oggetto restituito dal <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="2c346-471">By retrieving the <xref:System.Text.UTF32Encoding> object returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="2c346-472">Tramite la chiamata senza parametri <xref:System.Text.UTF32Encoding.%23ctor> costruttore per creare un'istanza di un <xref:System.Text.UTF32Encoding> oggetto.</span><span class="sxs-lookup"><span data-stu-id="2c346-472">By calling the parameterless <xref:System.Text.UTF32Encoding.%23ctor> constructor to instantiate a <xref:System.Text.UTF32Encoding> object.</span></span>  
  
-   <span data-ttu-id="2c346-473">Fornendo `true` come valore della `byteOrderMark` argomento per il <xref:System.Text.UTF32Encoding.%23ctor%2A> e <xref:System.Text.UTF32Encoding.%23ctor%2A> costruttori.</span><span class="sxs-lookup"><span data-stu-id="2c346-473">By supplying `true` as the value of the `byteOrderMark` argument to the <xref:System.Text.UTF32Encoding.%23ctor%2A> and <xref:System.Text.UTF32Encoding.%23ctor%2A> constructors.</span></span>  
  
 <span data-ttu-id="2c346-474">È consigliabile utilizzare il BOM, in quanto fornisce determinati identificazione di una codifica per i file che non hanno più riferimento a quasi il <xref:System.Text.UTF32Encoding> oggetto, ad esempio, con o senza in modo non corretto tag dati web o archiviati i file di testo casuale quando un non dispone di business internazionale per dubbi o altri dati.</span><span class="sxs-lookup"><span data-stu-id="2c346-474">We recommend that you use the BOM, since it provides nearly certain identification of an encoding for files that otherwise have lost reference to the <xref:System.Text.UTF32Encoding> object, for example, untagged or improperly tagged web data, or random text files stored when a business did not have international concerns or other data.</span></span> <span data-ttu-id="2c346-475">Spesso, i problemi dell'utente potrebbero essere evitati dati vengono contrassegnati in modo coerente e configurata correttamente.</span><span class="sxs-lookup"><span data-stu-id="2c346-475">Often, user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="2c346-476">Per gli standard che forniscono un tipo di codifica, un indicatore ordine byte è piuttosto ridondante.</span><span class="sxs-lookup"><span data-stu-id="2c346-476">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="2c346-477">Tuttavia, può essere utilizzato per consentire a un server di inviare l'intestazione di codifica corretta.</span><span class="sxs-lookup"><span data-stu-id="2c346-477">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="2c346-478">In alternativa, è possibile utilizzarlo come fallback nel caso in cui la codifica in caso contrario, viene persa.</span><span class="sxs-lookup"><span data-stu-id="2c346-478">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="2c346-479">Esistono alcuni svantaggi dell'utilizzo di un indicatore ordine byte.</span><span class="sxs-lookup"><span data-stu-id="2c346-479">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="2c346-480">Ad esempio, può essere difficile sapere come limitare i campi del database che utilizzano una distinta base.</span><span class="sxs-lookup"><span data-stu-id="2c346-480">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="2c346-481">Concatenazione dei file può rappresentare un problema, inoltre, ad esempio, quando i file vengono uniti in tale modo può terminare con un carattere non necessario al centro dati.</span><span class="sxs-lookup"><span data-stu-id="2c346-481">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="2c346-482">Nonostante alcuni svantaggi, tuttavia, l'utilizzo di un indicatore ordine byte è consigliabile.</span><span class="sxs-lookup"><span data-stu-id="2c346-482">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="2c346-483">Per ulteriori informazioni sull'ordine dei byte e il byte order mark, vedere lo Unicode Standard nella [home page di Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="2c346-483">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2c346-484">Per garantire che i byte codificati vengano decodificati correttamente, è necessario anteporre byte codificati con un preambolo.</span><span class="sxs-lookup"><span data-stu-id="2c346-484">To ensure that the encoded bytes are decoded properly, you should prefix encoded bytes with a preamble.</span></span> <span data-ttu-id="2c346-485">Si noti che il <xref:System.Text.UTF32Encoding.GetBytes%2A> metodo non anteporre una distinta base in una sequenza di byte codificati; fornendo un BOM all'inizio di un flusso di byte appropriato è responsabilità dello sviluppatore.</span><span class="sxs-lookup"><span data-stu-id="2c346-485">Note that the <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c346-486">Il seguente codice di esempio recupera e Visualizza e contrassegna l'ordine dei byte per differente <xref:System.Text.UTF32Encoding> istanze.</span><span class="sxs-lookup"><span data-stu-id="2c346-486">The following code example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 <span data-ttu-id="2c346-487">Nell'esempio seguente viene creata un'istanza di due <xref:System.Text.UTF32Encoding> oggetti, la prima delle quali non si fornisce un BOM e il secondo di cui non.</span><span class="sxs-lookup"><span data-stu-id="2c346-487">The following example instantiates two <xref:System.Text.UTF32Encoding> objects, the first of which does not provide a BOM and the second of which does.</span></span> <span data-ttu-id="2c346-488">Chiama quindi il <xref:System.Text.UTF32Encoding.GetPreamble%2A> metodo per scrivere il BOM in un file prima di scrivere una stringa con codifica UTF-32.</span><span class="sxs-lookup"><span data-stu-id="2c346-488">It then calls the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method to write the BOM to a file before writing a UTF-32-encoded string.</span></span> <span data-ttu-id="2c346-489">Come illustrato nell'output dell'esempio, il file che salva i byte dal codificatore secondo dispone di quattro byte che il primo.</span><span class="sxs-lookup"><span data-stu-id="2c346-489">As the output from the example shows, the file that saves the bytes from the second encoder has four more bytes that the first.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/getpreamble1.vb#2)]  
  
 <span data-ttu-id="2c346-490">È anche possibile confrontare i file utilizzando il `fc` comando in una finestra della console, oppure è possibile esaminare i file in un editor di testo che include una modalità di visualizzazione esadecimale.</span><span class="sxs-lookup"><span data-stu-id="2c346-490">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="2c346-491">Si noti che quando il file viene aperto in un editor che supporta UTF-32, il BOM non è visualizzato.</span><span class="sxs-lookup"><span data-stu-id="2c346-491">Note that when the file is opened in an editor that supports UTF-32, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="uTF32Encoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="2c346-492">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-492">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2c346-493">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-493">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2c346-494">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-494">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c346-495">Decodes a range of bytes from a byte array into a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-495">Decodes a range of bytes from a byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c346-496">A string that contains the results of decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-496">A string that contains the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c346-497">Con il rilevamento di errori, una sequenza non valida fa sì che questo metodo generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2c346-497">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="2c346-498">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="2c346-498">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2c346-499">Se l'intervallo di byte da decodificare include il byte order mark (BOM) e la matrice di byte è stata restituita da un metodo di un tipo compatibile con non DBA, il carattere di U + FFFE è incluso nella matrice di caratteri restituita da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-499">If the range of bytes to be decoded includes the byte order mark (BOM), and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="2c346-500">È possibile rimuoverlo chiamando il <xref:System.String.TrimStart%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="2c346-500">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2c346-501">Dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</span><span class="sxs-lookup"><span data-stu-id="2c346-501">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="2c346-502">In questo caso, o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, l'applicazione deve utilizzare il <xref:System.Text.Decoder> o il <xref:System.Text.Encoder> fornito dal <xref:System.Text.UTF32Encoding.GetDecoder%2A> metodo o il <xref:System.Text.UTF32Encoding.GetEncoder%2A> metodo, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="2c346-502">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c346-503">Nell'esempio seguente codifica una stringa in due matrici di matrici di byte, una in ordine little-endian e l'altra in ordine big-endian.</span><span class="sxs-lookup"><span data-stu-id="2c346-503">The following example encodes a string into two arrays arrays of bytes, one in little-endian order and the other in big-endian order.</span></span> <span data-ttu-id="2c346-504">Quindi decodifica byte in una stringa.</span><span class="sxs-lookup"><span data-stu-id="2c346-504">It then decodes the bytes back into a string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/CS/getstring.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/VB/GetString.vb#1)]  
  
 <span data-ttu-id="2c346-505">Nell'esempio seguente consente di inizializzare una matrice chiamando il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo per determinare esattamente il numero di byte è necessario per una stringa codificata, quindi aggiungere le dimensioni del byte order mark (BOM).</span><span class="sxs-lookup"><span data-stu-id="2c346-505">The following example initializes an array by calling the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="2c346-506">Nell'esempio viene quindi chiamato il <xref:System.Text.UTF32Encoding.GetPreamble%2A> metodo per archiviare il BOM nella matrice prima di chiamare il <xref:System.Text.UTF32Encoding.GetBytes%2A> metodo per archiviare i byte con codificati nella matrice.</span><span class="sxs-lookup"><span data-stu-id="2c346-506">The example then calls the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.UTF32Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="2c346-507">Nell'esempio viene quindi chiamato il <xref:System.Text.UTF32Encoding.GetString%2A> metodo per decodificare la stringa.</span><span class="sxs-lookup"><span data-stu-id="2c346-507">The example then calls the <xref:System.Text.UTF32Encoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/CS/GetString1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.GetString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/VB/GetString1.vb#2)]  
  
 <span data-ttu-id="2c346-508">Si noti che in questo caso la stringa decodificata è diverso dalla stringa originale, poiché inizia con un bit 32 byte order mark U + FFFE u+0000.</span><span class="sxs-lookup"><span data-stu-id="2c346-508">Note that in this case the decoded string differs from the original string, since it begins with a 32-bit byte order mark U+FFFE U+0000.</span></span> <span data-ttu-id="2c346-509">Ciò significa che le due stringhe confronterà contenendo e che, se la stringa di output, il DBA verrà visualizzata come il carattere di sostituzione "?".</span><span class="sxs-lookup"><span data-stu-id="2c346-509">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2c346-510">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-510">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2c346-511">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-511">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2c346-512">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-512">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2c346-513">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-513">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="2c346-514">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c346-514">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>