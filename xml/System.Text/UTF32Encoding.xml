<Type Name="UTF32Encoding" FullName="System.Text.UTF32Encoding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4aa3d8e8c1000eea746a1d29bcbf63f70f091d35" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52384718" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UTF32Encoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UTF32Encoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UTF32Encoding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UTF32Encoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UTF32Encoding sealed : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type UTF32Encoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ed911-101">Rappresenta una codifica UTF-32 dei caratteri Unicode.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed911-101">Represents a UTF-32 encoding of Unicode characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-102">La codifica è il processo di trasformazione di un insieme di caratteri Unicode in una sequenza di byte.</span><span class="sxs-lookup"><span data-stu-id="ed911-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="ed911-103">La decodifica è il processo di trasformazione di una sequenza di byte codificati in un set di caratteri Unicode.</span><span class="sxs-lookup"><span data-stu-id="ed911-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="ed911-104">Il [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) assegna un punto di codice (un numero) per ogni carattere in ogni script supportato.</span><span class="sxs-lookup"><span data-stu-id="ed911-104">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) assigns a code point (a number) to each character in every supported script.</span></span> <span data-ttu-id="ed911-105">Un formato di trasformazione Unicode (UTF) è un modo per codificare quel punto di codice.</span><span class="sxs-lookup"><span data-stu-id="ed911-105">A Unicode Transformation Format (UTF) is a way to encode that code point.</span></span> <span data-ttu-id="ed911-106">Il [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) utilizza i seguenti UTF:</span><span class="sxs-lookup"><span data-stu-id="ed911-106">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) uses the following UTFs:</span></span>  
  
-   <span data-ttu-id="ed911-107">UTF-8, che rappresenta ogni punto di codice come una sequenza di uno a quattro byte.</span><span class="sxs-lookup"><span data-stu-id="ed911-107">UTF-8, which represents each code point as a sequence of one to four bytes.</span></span>  
  
-   <span data-ttu-id="ed911-108">UTF-16, che rappresenta ogni punto di codice come una sequenza di numeri interi a 16 bit di uno o due.</span><span class="sxs-lookup"><span data-stu-id="ed911-108">UTF-16, which represents each code point as a sequence of one to two 16-bit integers.</span></span>  
  
-   <span data-ttu-id="ed911-109">UTF-32, che rappresenta ogni punto di codice come valore intero a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="ed911-109">UTF-32, which represents each code point as a 32-bit integer.</span></span>  
  
 <span data-ttu-id="ed911-110">Per altre informazioni sui formati UTF e altre codifiche supportati da <xref:System.Text>, vedere [codifica dei caratteri in .NET](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="ed911-110">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md).</span></span>
  
 <span data-ttu-id="ed911-111">Il <xref:System.Text.UTF32Encoding> classe rappresenta una codifica UTF-32.</span><span class="sxs-lookup"><span data-stu-id="ed911-111">The <xref:System.Text.UTF32Encoding> class represents a UTF-32 encoding.</span></span> <span data-ttu-id="ed911-112">Il codificatore può utilizzare l'ordine dei byte big-endian (byte più significativo primo) o il little endian (byte meno significativo prima).</span><span class="sxs-lookup"><span data-stu-id="ed911-112">The encoder can use the big endian byte order (most significant byte first) or the little endian byte order (least significant byte first).</span></span> <span data-ttu-id="ed911-113">Ad esempio, l'alfabeto latino (punto di codice u+0041) viene serializzato come segue (in esadecimale):</span><span class="sxs-lookup"><span data-stu-id="ed911-113">For example, the Latin Capital Letter A (code point U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="ed911-114">Ordine dei byte big-endian: 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="ed911-114">Big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="ed911-115">Ordine dei byte little-endian little: 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="ed911-115">Little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="ed911-116">È in genere più efficiente per archiviare i caratteri Unicode utilizzando l'ordine dei byte nativa.</span><span class="sxs-lookup"><span data-stu-id="ed911-116">It is generally more efficient to store Unicode characters using the native byte order.</span></span> <span data-ttu-id="ed911-117">Ad esempio, è preferibile usare l'ordine dei byte little-endian little su piattaforme little-endian, ad esempio computer con processori Intel.</span><span class="sxs-lookup"><span data-stu-id="ed911-117">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span> <span data-ttu-id="ed911-118"><xref:System.Text.UTF32Encoding> corrisponde alle tabelle di codici di Windows (ordine dei byte little-endian little) 12000 e 12001 (nell'ordine dei byte big endian).</span><span class="sxs-lookup"><span data-stu-id="ed911-118"><xref:System.Text.UTF32Encoding> corresponds to the Windows code pages 12000 (little endian byte order) and 12001 (big endian byte order).</span></span> <span data-ttu-id="ed911-119">È possibile determinare il "architettura endian" di una particolare architettura chiamando il <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-119">You can determine the "endianness" of a particular architecture by calling the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ed911-120">Facoltativamente, il <xref:System.Text.UTF32Encoding> oggetto fornisce un byte order mark (BOM), ovvero una matrice di byte che può essere anteposto alla sequenza di byte risultante dal processo di codifica.</span><span class="sxs-lookup"><span data-stu-id="ed911-120">Optionally, the <xref:System.Text.UTF32Encoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="ed911-121">Se il preambolo contiene un byte order mark (BOM), consente il decodificatore di determinare l'ordine dei byte e il formato di trasformazione o UTF di una matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="ed911-121">If the preamble contains a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF of a byte array.</span></span>  
  
 <span data-ttu-id="ed911-122">Se il <xref:System.Text.UTF32Encoding> istanza è configurata per fornire un indicatore ordine byte, è possibile recuperarla chiamando il <xref:System.Text.UTF32Encoding.GetPreamble%2A> metodo; in caso contrario, il metodo restituisce una matrice vuota.</span><span class="sxs-lookup"><span data-stu-id="ed911-122">If the <xref:System.Text.UTF32Encoding> instance is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="ed911-123">Si noti che, anche se un <xref:System.Text.UTF32Encoding> oggetto è configurato per il supporto della distinta base, è necessario includere il carattere BOM all'inizio del flusso di byte codificato come appropriato; i metodi di codifica del <xref:System.Text.UTF32Encoding> classe non eseguire questa operazione automaticamente.</span><span class="sxs-lookup"><span data-stu-id="ed911-123">Note that, even if a <xref:System.Text.UTF32Encoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UTF32Encoding> class do not do this automatically.</span></span>  
  
 <span data-ttu-id="ed911-124">Per abilitare il rilevamento di errore e rendere più sicuro l'istanza della classe, è consigliabile creare un <xref:System.Text.UTF32Encoding> chiamando il <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> costruttore e l'impostazione relativo `throwOnInvalidBytes` argomento `true`.</span><span class="sxs-lookup"><span data-stu-id="ed911-124">To enable error detection and to make the class instance more secure, you should instantiate a <xref:System.Text.UTF32Encoding> object by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span> <span data-ttu-id="ed911-125">Con il rilevamento di errori, un metodo che rileva una sequenza di caratteri o byte non valida genera un <xref:System.ArgumentException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="ed911-125">With error detection, a method that detects an invalid sequence of characters or bytes throws an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="ed911-126">Senza il rilevamento di errori, viene generata alcuna eccezione e la sequenza non valida in genere viene ignorata.</span><span class="sxs-lookup"><span data-stu-id="ed911-126">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
 <span data-ttu-id="ed911-127">È possibile creare un'istanza di un <xref:System.Text.UTF32Encoding> oggetti in diversi modi, a seconda del fatto che si desidera per fornire un byte order mark (BOM), se si desidera che la codifica big-endian o little-endian e se si desidera abilitare il rilevamento errori.</span><span class="sxs-lookup"><span data-stu-id="ed911-127">You can instantiate a <xref:System.Text.UTF32Encoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM), whether you want big-endian or little-endian encoding, and whether you want to enable error detection.</span></span> <span data-ttu-id="ed911-128">La tabella seguente elenca i <xref:System.Text.UTF32Encoding> costruttori e i <xref:System.Text.Encoding> le proprietà che restituiscono un <xref:System.Text.UnicodeEncoding> oggetto.</span><span class="sxs-lookup"><span data-stu-id="ed911-128">The following table lists the <xref:System.Text.UTF32Encoding> constructors and the <xref:System.Text.Encoding> properties that return a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
|<span data-ttu-id="ed911-129">Member</span><span class="sxs-lookup"><span data-stu-id="ed911-129">Member</span></span>|<span data-ttu-id="ed911-130">Ordine dei byte</span><span class="sxs-lookup"><span data-stu-id="ed911-130">Endianness</span></span>|<span data-ttu-id="ed911-131">INDICATORE ORDINE BYTE</span><span class="sxs-lookup"><span data-stu-id="ed911-131">BOM</span></span>|<span data-ttu-id="ed911-132">Rilevamento degli errori</span><span class="sxs-lookup"><span data-stu-id="ed911-132">Error detection</span></span>|  
|------------|----------------|---------|---------------------|  
|<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>|<span data-ttu-id="ed911-133">Little-endian</span><span class="sxs-lookup"><span data-stu-id="ed911-133">Little-endian</span></span>|<span data-ttu-id="ed911-134">Yes</span><span class="sxs-lookup"><span data-stu-id="ed911-134">Yes</span></span>|<span data-ttu-id="ed911-135">Nessuna (fallback di sostituzione)</span><span class="sxs-lookup"><span data-stu-id="ed911-135">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="ed911-136">Little-endian</span><span class="sxs-lookup"><span data-stu-id="ed911-136">Little-endian</span></span>|<span data-ttu-id="ed911-137">Yes</span><span class="sxs-lookup"><span data-stu-id="ed911-137">Yes</span></span>|<span data-ttu-id="ed911-138">Nessuna (fallback di sostituzione)</span><span class="sxs-lookup"><span data-stu-id="ed911-138">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="ed911-139">Configurabile</span><span class="sxs-lookup"><span data-stu-id="ed911-139">Configurable</span></span>|<span data-ttu-id="ed911-140">Configurabile</span><span class="sxs-lookup"><span data-stu-id="ed911-140">Configurable</span></span>|<span data-ttu-id="ed911-141">Nessuna (fallback di sostituzione)</span><span class="sxs-lookup"><span data-stu-id="ed911-141">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="ed911-142">Configurabile</span><span class="sxs-lookup"><span data-stu-id="ed911-142">Configurable</span></span>|<span data-ttu-id="ed911-143">Configurabile</span><span class="sxs-lookup"><span data-stu-id="ed911-143">Configurable</span></span>|<span data-ttu-id="ed911-144">Configurabile</span><span class="sxs-lookup"><span data-stu-id="ed911-144">Configurable</span></span>|  
  
 <span data-ttu-id="ed911-145">Il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo determina il numero di byte risultanti dalla codifica di un set di caratteri Unicode e il <xref:System.Text.UTF32Encoding.GetBytes%2A> metodo esegue l'effettiva codifica.</span><span class="sxs-lookup"><span data-stu-id="ed911-145">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UTF32Encoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="ed911-146">Allo stesso modo, il <xref:System.Text.UTF32Encoding.GetCharCount%2A> metodo determina il numero di caratteri risultanti dalla decodifica una sequenza di byte e il <xref:System.Text.UTF32Encoding.GetChars%2A> e <xref:System.Text.UTF32Encoding.GetString%2A> metodi eseguono la decodifica effettivo.</span><span class="sxs-lookup"><span data-stu-id="ed911-146">Likewise, the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UTF32Encoding.GetChars%2A> and <xref:System.Text.UTF32Encoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="ed911-147">Per un codificatore o un decodificatore che è in grado di salvare le informazioni sullo stato codifica o decodifica i dati che si estende su più blocchi (ad esempio string di 1 milione di caratteri che vengono codificati in caratteri 100.000 segmenti), usare il <xref:System.Text.UTF32Encoding.GetEncoder%2A> e <xref:System.Text.UTF32Encoding.GetDecoder%2A> proprietà, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="ed911-147">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UTF32Encoding.GetEncoder%2A> and <xref:System.Text.UTF32Encoding.GetDecoder%2A> properties, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed911-148">L'esempio seguente illustra il comportamento di <xref:System.Text.UTF32Encoding> oggetti con e senza il rilevamento di errori abilitato.</span><span class="sxs-lookup"><span data-stu-id="ed911-148">The following example demonstrates the behavior of <xref:System.Text.UTF32Encoding> objects with and without error detection enabled.</span></span> <span data-ttu-id="ed911-149">Crea una matrice di byte il cui ultimo quattro byte rappresentano una coppia di surrogati non valida; surrogato alto U + D8FF è seguito da un 01FF U +, che è compreso nell'intervallo dei surrogati basso (0xDC00 e 0xDFFF).</span><span class="sxs-lookup"><span data-stu-id="ed911-149">It creates a byte array whose last four bytes represent an invalid surrogate pair; the high surrogate U+D8FF is followed by an U+01FF, which is outside the range of low surrogates (0xDC00 through 0xDFFF).</span></span> <span data-ttu-id="ed911-150">Senza il rilevamento di errori, il decodificatore UTF32 Usa il fallback di sostituzione per sostituire la coppia di surrogati non valida con REPLACEMENT CHARACTER (U + FFFD).</span><span class="sxs-lookup"><span data-stu-id="ed911-150">Without error detection, the UTF32 decoder uses replacement fallback to replace the invalid surrogate pair with REPLACEMENT CHARACTER (U+FFFD).</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/VB/ErrorDetection.vb#1)]  
  
 <span data-ttu-id="ed911-151">Nell'esempio seguente codifica una stringa di caratteri Unicode in una matrice di byte usando un <xref:System.Text.UTF32Encoding> oggetto.</span><span class="sxs-lookup"><span data-stu-id="ed911-151">The following example encodes a string of Unicode characters into a byte array by using a <xref:System.Text.UTF32Encoding> object.</span></span> <span data-ttu-id="ed911-152">Quindi, la matrice di byte viene decodificata in una stringa per illustrare che non vi sia alcuna perdita di dati.</span><span class="sxs-lookup"><span data-stu-id="ed911-152">The byte array is then decoded into a string to demonstrate that there is no loss of data.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.class/cs/snippet.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.class/vb/snippet.vb#1)]  
  
 <span data-ttu-id="ed911-153">L'esempio seguente usa la stessa stringa come quello precedente, ad eccezione del fatto che scrive i byte con codificati in un file e i prefissi il flusso di byte con un byte order mark (BOM).</span><span class="sxs-lookup"><span data-stu-id="ed911-153">The following example uses the same string as the previous one, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="ed911-154">Quindi legge il file in due modi diversi: come file di testo tramite un <xref:System.IO.StreamReader> ; dell'oggetto e come un file binario.</span><span class="sxs-lookup"><span data-stu-id="ed911-154">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="ed911-155">Come si può immaginare, nessuna delle due stringhe appena lettura include il carattere BOM.</span><span class="sxs-lookup"><span data-stu-id="ed911-155">As you would expect, neither newly-read string includes the BOM.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.class/cs/bom1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.class/vb/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.UTF8Encoding" />
    <altmember cref="T:System.Text.ASCIIEncoding" />
    <altmember cref="T:System.Text.UnicodeEncoding" />
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="T:System.Globalization.CharUnicodeInfo" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md">
      <span data-ttu-id="ed911-156">Informazioni sulle codifiche</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed911-156">Understanding Encodings</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ed911-157">Inizializza una nuova istanza della classe <see cref="T:System.Text.UTF32Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-157">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed911-158">Inizializza una nuova istanza della classe <see cref="T:System.Text.UTF32Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-158">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-159">Questo costruttore crea un'istanza che usa l'ordine dei byte little-endian little, fornisce un byte order mark Unicode e non genera un'eccezione quando viene rilevata una codifica non è valido.</span><span class="sxs-lookup"><span data-stu-id="ed911-159">This constructor creates an instance that uses the little endian byte order, provides a Unicode byte order mark, and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed911-160">Per motivi di sicurezza, è consigliabile abilitare il rilevamento errori chiamando il <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> costruttore e l'impostazione relativa `throwOnInvalidCharacters` argomento `true`.</span><span class="sxs-lookup"><span data-stu-id="ed911-160">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed911-161">Il seguente esempio recupera e Visualizza e contrassegna l'ordine dei byte per diversi <xref:System.Text.UTF32Encoding> istanze.</span><span class="sxs-lookup"><span data-stu-id="ed911-161">The following example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding (bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding(bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF32Encoding : bool * bool -&gt; System.Text.UTF32Encoding" Usage="new System.Text.UTF32Encoding (bigEndian, byteOrderMark)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="ed911-162">
            <see langword="true" /> per usare l'ordine dei byte big-endian (byte più significativo al primo posto) o <see langword="false" /> per usare l'ordine dei byte little-endian (byte meno significativo al primo posto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-162">
              <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          </span>
        </param>
        <param name="byteOrderMark">
          <span data-ttu-id="ed911-163">
            <see langword="true" /> per specificare che viene fornito un byte order mark Unicode; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-163">
              <see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed911-164">Inizializza una nuova istanza della classe <see cref="T:System.Text.UTF32Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-164">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
          <span data-ttu-id="ed911-165">I parametri specificano se usare l'ordine dei byte big-endian e se il metodo <see cref="M:System.Text.UTF32Encoding.GetPreamble" /> restituisce un byte order mark Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-165">Parameters specify whether to use the big endian byte order and whether the <see cref="M:System.Text.UTF32Encoding.GetPreamble" /> method returns a Unicode Unicode byte order mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-166">Questo costruttore crea un'istanza che non genera un'eccezione quando viene rilevata una codifica non è valido.</span><span class="sxs-lookup"><span data-stu-id="ed911-166">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed911-167">Per motivi di sicurezza, è consigliabile abilitare il rilevamento errori chiamando il <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> costruttore e l'impostazione relativa `throwOnInvalidCharacters` argomento `true`.</span><span class="sxs-lookup"><span data-stu-id="ed911-167">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed911-168">Il seguente esempio recupera e Visualizza e contrassegna l'ordine dei byte per diversi <xref:System.Text.UTF32Encoding> istanze.</span><span class="sxs-lookup"><span data-stu-id="ed911-168">The following example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding (bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean, throwOnInvalidCharacters As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding(bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF32Encoding : bool * bool * bool -&gt; System.Text.UTF32Encoding" Usage="new System.Text.UTF32Encoding (bigEndian, byteOrderMark, throwOnInvalidCharacters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidCharacters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="ed911-169">
            <see langword="true" /> per usare l'ordine dei byte big-endian (byte più significativo al primo posto) o <see langword="false" /> per usare l'ordine dei byte little-endian (byte meno significativo al primo posto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-169">
              <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          </span>
        </param>
        <param name="byteOrderMark">
          <span data-ttu-id="ed911-170">
            <see langword="true" /> per specificare che viene fornito un byte order mark Unicode; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-170">
              <see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="throwOnInvalidCharacters">
          <span data-ttu-id="ed911-171">
            <see langword="true" /> per specificare che viene generata un'eccezione quando viene rilevata una codifica non valida; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-171">
              <see langword="true" /> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed911-172">Inizializza una nuova istanza della classe <see cref="T:System.Text.UTF32Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-172">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
          <span data-ttu-id="ed911-173">I parametri specificano se usare l'ordine dei byte big-endian, se fornire un byte order mark Unicode e se generare un'eccezione quando viene rilevata una codifica non valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-173">Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-174">Se `throwOnInvalidCharacters` viene `true`, un metodo che rileva una sequenza di byte non validi genera <xref:System.ArgumentException?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ed911-174">If `throwOnInvalidCharacters` is `true`, a method that detects an invalid byte sequence throws <xref:System.ArgumentException?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ed911-175">In caso contrario, il metodo non genera un'eccezione e la sequenza non valida verrà ignorata.</span><span class="sxs-lookup"><span data-stu-id="ed911-175">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed911-176">Per motivi di sicurezza, è consigliabile abilitare il rilevamento errori chiamando il <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> costruttore e l'impostazione relativa `throwOnInvalidCharacters` argomento `true`.</span><span class="sxs-lookup"><span data-stu-id="ed911-176">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed911-177">L'esempio seguente illustra il comportamento di <xref:System.Text.UTF32Encoding>, con il rilevamento di errori abilitato e senza.</span><span class="sxs-lookup"><span data-stu-id="ed911-177">The following example demonstrates the behavior of <xref:System.Text.UTF32Encoding>, both with error detection enabled and without.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/VB/ErrorDetection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uTF32Encoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ed911-178">Classe <see cref="T:System.Object" /> da confrontare con l'oggetto corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-178">The <see cref="T:System.Object" /> to compare with the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed911-179">Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Text.UTF32Encoding" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-179">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Text.UTF32Encoding" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-180">
            <see langword="true" /> se <paramref name="value" /> è un'istanza di <see cref="T:System.Text.UTF32Encoding" /> ed è uguale all'oggetto corrente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-180">
              <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF32Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-181">Due <xref:System.Text.UTF32Encoding> gli oggetti sono considerati uguali se vengono soddisfatte tutte le condizioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="ed911-181">Two <xref:System.Text.UTF32Encoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="ed911-182">Entrambi gli oggetti utilizzano lo stesso ordine di byte.</span><span class="sxs-lookup"><span data-stu-id="ed911-182">Both objects use the same byte order.</span></span>  
  
-   <span data-ttu-id="ed911-183">Entrambi gli oggetti forniscono il byte order mark, o entrambi non lo sono.</span><span class="sxs-lookup"><span data-stu-id="ed911-183">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="ed911-184">Entrambi gli oggetti utilizzano lo stesso di fallback del codificatore.</span><span class="sxs-lookup"><span data-stu-id="ed911-184">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="ed911-185">Entrambi gli oggetti utilizzano lo stesso di fallback del decodificatore.</span><span class="sxs-lookup"><span data-stu-id="ed911-185">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed911-186">L'esempio seguente crea <xref:System.Text.UTF32Encoding> gli oggetti usando parametri diversi valori e li archivia per verificarne l'uguaglianza.</span><span class="sxs-lookup"><span data-stu-id="ed911-186">The following example creates <xref:System.Text.UTF32Encoding> objects using different parameter values and then checks them for equality.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ed911-187">Calcola il numero di byte prodotti dalla codifica di un set di caratteri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-187">Calculates the number of bytes produced by encoding a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="uTF32Encoding.GetByteCount s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="ed911-188">Oggetto <see cref="T:System.String" /> contenente il set di caratteri da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-188">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed911-189">Calcola il numero di byte prodotti dalla codifica dei caratteri nell'oggetto <see cref="T:System.String" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-189">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-190">Numero di byte prodotti dalla codifica dei caratteri specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-190">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-191">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetBytes%2A> per archiviare i byte risultanti, si chiama il <xref:System.Text.UTF32Encoding.GetByteCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-191">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="ed911-192">Per calcolare la dimensione massima della matrice, si chiama il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-192">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="ed911-193">Il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="ed911-193">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="ed911-194">Con il rilevamento di errori, una sequenza non valida fa in modo che questo metodo consente di generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="ed911-194">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="ed911-195">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="ed911-195">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="ed911-196">Per garantire che i byte con codificati vengono decodificati correttamente quando vengono salvati come un file o un flusso, è possibile anteporre un flusso di byte codificati con un preambolo.</span><span class="sxs-lookup"><span data-stu-id="ed911-196">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="ed911-197">Inserendo il preambolo all'inizio di un flusso di byte (ad esempio all'inizio di una serie di byte da scrivere in un file) è responsabilità dello sviluppatore e il numero di byte del preambolo non viene riflessa nel valore restituito dal <xref:System.Text.UTF32Encoding.GetByteCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-197">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed911-198">L'esempio seguente chiama il <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> e <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> metodi per la quale calcolare il numero massimo e quello effettivo di byte necessari per codificare una stringa.</span><span class="sxs-lookup"><span data-stu-id="ed911-198">The following example calls the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> and <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="ed911-199">Visualizza anche il numero effettivo di byte necessari per archiviare un flusso di byte con un byte order mark.</span><span class="sxs-lookup"><span data-stu-id="ed911-199">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.Utf32Encoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.Utf32Encoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ed911-200">
            <paramref name="s" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-200">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ed911-201">Il numero di byte ottenuto è maggiore del numero massimo che può essere restituito come numero intero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-201">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ed911-202">Il rilevamento errori è abilitato e <paramref name="s" /> contiene una sequenza di carattere non valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-202">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="ed911-203">Si è verificato un fallback. Per una spiegazione completa, vedere [Codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-203">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="ed911-204">-e-</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-204">-and-</span>
          </span>
          <span data-ttu-id="ed911-205">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> è impostato su <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-205">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF32Encoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="ed911-206">Puntatore al primo carattere da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-206">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ed911-207">Numero di caratteri da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-207">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed911-208">Calcola il numero di byte prodotti dalla codifica di un set di caratteri a partire dal puntatore ai caratteri specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-208">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-209">Numero di byte prodotti dalla codifica dei caratteri specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-209">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-210">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetBytes%2A> per archiviare i byte risultanti, si chiama il <xref:System.Text.UTF32Encoding.GetByteCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-210">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="ed911-211">Per calcolare la dimensione massima della matrice, si chiama il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="ed911-211">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="ed911-212">Il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="ed911-212">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="ed911-213">Con il rilevamento di errori, una sequenza non valida fa in modo che questo metodo consente di generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="ed911-213">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="ed911-214">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="ed911-214">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="ed911-215">Per garantire che i byte con codificati vengono decodificati correttamente quando vengono salvati come un file o un flusso, è possibile anteporre un flusso di byte codificati con un preambolo.</span><span class="sxs-lookup"><span data-stu-id="ed911-215">To ensure that the encoded bytes are decoded properly when they are saved as a file or a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="ed911-216">Inserimento di un preambolo all'inizio di un flusso di byte (ad esempio all'inizio di una serie di byte da scrivere in un file) è responsabilità dello sviluppatore e il numero di byte del preambolo non viene riflessa nel valore restituito dal <xref:System.Text.UTF32Encoding.GetByteCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-216">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ed911-217">
            <paramref name="chars" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-217">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ed911-218">
            <paramref name="count" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-218">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="ed911-219">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-219">-or-</span>
          </span>
          <span data-ttu-id="ed911-220">Il numero di byte ottenuto è maggiore del numero massimo che può essere restituito come numero intero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-220">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ed911-221">Il rilevamento errori è abilitato e <paramref name="chars" /> contiene una sequenza di carattere non valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-221">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="ed911-222">Si è verificato un fallback. Per una spiegazione completa, vedere [Codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-222">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="ed911-223">-e-</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-223">-and-</span>
          </span>
          <span data-ttu-id="ed911-224">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> è impostato su <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-224">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="ed911-225">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-225">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="ed911-226">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-226">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="uTF32Encoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="ed911-227">Matrice di caratteri contenente il set di caratteri da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-227">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="ed911-228">Indice del primo carattere da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-228">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ed911-229">Numero di caratteri da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-229">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed911-230">Calcola il numero di byte prodotti dalla codifica di un set di caratteri dalla matrice di caratteri specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-230">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-231">Numero di byte prodotti dalla codifica dei caratteri specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-231">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-232">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetBytes%2A> per archiviare i byte risultanti, si chiama il <xref:System.Text.UTF32Encoding.GetByteCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-232">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="ed911-233">Per calcolare la dimensione massima della matrice, si chiama il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-233">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="ed911-234">Il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="ed911-234">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="ed911-235">Con il rilevamento di errori, una sequenza non valida fa in modo che questo metodo consente di generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="ed911-235">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="ed911-236">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="ed911-236">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="ed911-237">Per garantire che i byte con codificati vengono decodificati correttamente quando vengono salvati come un file o un flusso, è possibile anteporre un flusso di byte codificati con un preambolo.</span><span class="sxs-lookup"><span data-stu-id="ed911-237">To ensure that the encoded bytes are decoded properly when they are saved as a file or a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="ed911-238">Inserimento di un preambolo all'inizio di un flusso di byte (ad esempio all'inizio di una serie di byte da scrivere in un file) è responsabilità dello sviluppatore e il numero di byte del preambolo non viene riflessa nel valore restituito dal <xref:System.Text.UTF32Encoding.GetByteCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-238">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed911-239">Nell'esempio seguente popola una matrice con un alfabeto latino maiuscolo e minuscoli e chiama il <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> metodo per determinare il numero di byte necessari per codificare i caratteri minuscoli latini.</span><span class="sxs-lookup"><span data-stu-id="ed911-239">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="ed911-240">Quindi visualizza tale informazione insieme il numero totale di byte necessari se viene aggiunto un byte order mark.</span><span class="sxs-lookup"><span data-stu-id="ed911-240">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="ed911-241">Confronta con il valore restituito da questo numero di <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metodo, che indica il numero massimo di byte necessari per codificare i caratteri minuscoli latini.</span><span class="sxs-lookup"><span data-stu-id="ed911-241">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="ed911-242">Nell'esempio seguente popola una matrice con una combinazione di caratteri greco e cirillico e le chiamate di <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> metodo per determinare il numero di byte necessari per codificare i caratteri cirillici.</span><span class="sxs-lookup"><span data-stu-id="ed911-242">The following example populates an array with a combination of Greek and Cyrillic characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Cyrillic characters.</span></span> <span data-ttu-id="ed911-243">Quindi visualizza tale informazione insieme il numero totale di byte necessari se viene aggiunto un byte order mark.</span><span class="sxs-lookup"><span data-stu-id="ed911-243">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="ed911-244">Confronta con il valore restituito da questo numero di <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metodo, che indica il numero massimo di byte necessari per codificare i caratteri cirillici.</span><span class="sxs-lookup"><span data-stu-id="ed911-244">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Cyrillic characters.</span></span>  
  
 [!code-csharp[System.Text.Utf32Encoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.Utf32Encoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ed911-245">
            <paramref name="chars" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-245">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ed911-246">
            <paramref name="index" /> o <paramref name="count" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-246">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="ed911-247">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-247">-or-</span>
          </span>
          <span data-ttu-id="ed911-248">
            <paramref name="index" /> e <paramref name="count" /> non identificano un intervallo valido in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-248">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="ed911-249">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-249">-or-</span>
          </span>
          <span data-ttu-id="ed911-250">Il numero di byte ottenuto è maggiore del numero massimo che può essere restituito come numero intero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-250">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ed911-251">Il rilevamento errori è abilitato e <paramref name="chars" /> contiene una sequenza di carattere non valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-251">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="ed911-252">Si è verificato un fallback. Per una spiegazione completa, vedere [Codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-252">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="ed911-253">-e-</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-253">-and-</span>
          </span>
          <span data-ttu-id="ed911-254">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> è impostato su <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-254">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ed911-255">Codifica un set di caratteri in una sequenza di byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-255">Encodes a set of characters into a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF32Encoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="ed911-256">Puntatore al primo carattere da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-256">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="ed911-257">Numero di caratteri da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-257">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="ed911-258">Puntatore alla posizione in cui iniziare a scrivere la sequenza di byte risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-258">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="ed911-259">Numero massimo di byte da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-259">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed911-260">Codifica un set di caratteri a partire dal puntatore ai caratteri specificato in una sequenza di byte archiviati a partire dal puntatore ai byte specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-260">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-261">Numero effettivo di byte scritti nella posizione indicata dal parametro <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-261">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-262">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetBytes%2A> per archiviare i byte risultanti, si chiama il <xref:System.Text.UTF32Encoding.GetByteCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-262">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="ed911-263">Per calcolare la dimensione massima della matrice, si chiama il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-263">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="ed911-264">Il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="ed911-264">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="ed911-265">Con il rilevamento di errori, una sequenza non valida fa in modo che questo metodo consente di generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="ed911-265">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="ed911-266">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="ed911-266">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="ed911-267">I dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</span><span class="sxs-lookup"><span data-stu-id="ed911-267">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="ed911-268">In questo caso, o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, l'applicazione usa il <xref:System.Text.Decoder> o il <xref:System.Text.Encoder> forniti dalle <xref:System.Text.UTF32Encoding.GetDecoder%2A> (metodo) o il <xref:System.Text.UTF32Encoding.GetEncoder%2A> metodo, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="ed911-268">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed911-269">Per garantire che i byte con codificati vengono decodificati correttamente quando vengono salvati come un file o un flusso, è possibile anteporre un flusso di byte codificati con un preambolo.</span><span class="sxs-lookup"><span data-stu-id="ed911-269">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="ed911-270">Inserimento di un preambolo all'inizio di un flusso di byte (ad esempio all'inizio di una serie di byte da scrivere in un file) è responsabilità dello sviluppatore.</span><span class="sxs-lookup"><span data-stu-id="ed911-270">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="ed911-271">Il <xref:System.Text.UTF32Encoding.GetBytes%2A> metodo non anteporre un preambolo all'inizio di una sequenza di byte codificati.</span><span class="sxs-lookup"><span data-stu-id="ed911-271">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ed911-272">
            <paramref name="chars" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-272">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ed911-273">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-273">-or-</span>
          </span>
          <span data-ttu-id="ed911-274">
            <paramref name="bytes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-274">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ed911-275">
            <paramref name="charCount" /> o <paramref name="byteCount" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-275">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ed911-276">Il rilevamento errori è abilitato e <paramref name="chars" /> contiene una sequenza di carattere non valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-276">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="ed911-277">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-277">-or-</span>
          </span>
          <span data-ttu-id="ed911-278">
            <paramref name="byteCount" /> è minore del numero di byte risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-278">
              <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="ed911-279">Si è verificato un fallback. Per una spiegazione completa, vedere [Codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-279">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="ed911-280">-e-</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-280">-and-</span>
          </span>
          <span data-ttu-id="ed911-281">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> è impostato su <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-281">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="ed911-282">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-282">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="ed911-283">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-283">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="uTF32Encoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="ed911-284">Matrice di caratteri contenente il set di caratteri da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-284">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="ed911-285">Indice del primo carattere da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-285">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="ed911-286">Numero di caratteri da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-286">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="ed911-287">Matrice di byte che deve contenere la sequenza di byte risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-287">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="ed911-288">Indice in corrispondenza del quale iniziare a scrivere la sequenza di byte risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-288">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed911-289">Codifica un set di caratteri dalla matrice di caratteri specificata nella matrice di byte specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-289">Encodes a set of characters from the specified character array into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-290">Numero effettivo di byte scritti in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-290">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-291">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetBytes%2A> per archiviare i byte risultanti, si chiama il <xref:System.Text.UTF32Encoding.GetByteCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-291">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="ed911-292">Per calcolare la dimensione massima della matrice, si chiama il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-292">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="ed911-293">Il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="ed911-293">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="ed911-294">Con il rilevamento di errori, una sequenza non valida fa in modo che questo metodo consente di generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="ed911-294">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="ed911-295">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="ed911-295">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="ed911-296">I dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</span><span class="sxs-lookup"><span data-stu-id="ed911-296">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="ed911-297">In questo caso, o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, l'applicazione usa il <xref:System.Text.Decoder> o il <xref:System.Text.Encoder> forniti dalle <xref:System.Text.UTF32Encoding.GetDecoder%2A> (metodo) o il <xref:System.Text.UTF32Encoding.GetEncoder%2A> metodo, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="ed911-297">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed911-298">Per garantire che i byte con codificati vengono decodificati correttamente quando vengono salvati come un file o un flusso, è possibile anteporre un flusso di byte codificati con un preambolo.</span><span class="sxs-lookup"><span data-stu-id="ed911-298">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="ed911-299">Inserimento di un preambolo all'inizio di un flusso di byte (ad esempio all'inizio di una serie di byte da scrivere in un file) è responsabilità dello sviluppatore.</span><span class="sxs-lookup"><span data-stu-id="ed911-299">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="ed911-300">Il <xref:System.Text.UTF32Encoding.GetBytes%2A> metodo non anteporre un preambolo all'inizio di una sequenza di byte codificati.</span><span class="sxs-lookup"><span data-stu-id="ed911-300">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed911-301">Nell'esempio seguente determina il numero di byte necessari per codificare i tre caratteri da una matrice di caratteri, quindi vengono codificati i caratteri e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="ed911-301">The following example determines the number of bytes required to encode three characters from a character array, then encodes the characters and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/VB/GetBytes_CharArr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ed911-302">
            <paramref name="chars" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-302">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ed911-303">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-303">-or-</span>
          </span>
          <span data-ttu-id="ed911-304">
            <paramref name="bytes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-304">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ed911-305">
            <paramref name="charIndex" /> o <paramref name="charCount" /> o <paramref name="byteIndex" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-305">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="ed911-306">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-306">-or-</span>
          </span>
          <span data-ttu-id="ed911-307">
            <paramref name="charIndex" /> e <paramref name="charCount" /> non identificano un intervallo valido in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-307">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="ed911-308">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-308">-or-</span>
          </span>
          <span data-ttu-id="ed911-309">
            <paramref name="byteIndex" /> non è un indice valido in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-309">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ed911-310">Il rilevamento errori è abilitato e <paramref name="chars" /> contiene una sequenza di carattere non valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-310">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="ed911-311">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-311">-or-</span>
          </span>
          <span data-ttu-id="ed911-312">
            <paramref name="bytes" /> non dispone di sufficiente capacità da <paramref name="byteIndex" /> alla fine della matrice per contenere i byte risultanti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-312">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="ed911-313">Si è verificato un fallback. Per una spiegazione completa, vedere [Codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-313">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="ed911-314">-e-</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-314">-and-</span>
          </span>
          <span data-ttu-id="ed911-315">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> è impostato su <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-315">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="uTF32Encoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="ed911-316">Oggetto <see cref="T:System.String" /> contenente il set di caratteri da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-316">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="ed911-317">Indice del primo carattere da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-317">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="ed911-318">Numero di caratteri da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-318">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="ed911-319">Matrice di byte che deve contenere la sequenza di byte risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-319">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="ed911-320">Indice in corrispondenza del quale iniziare a scrivere la sequenza di byte risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-320">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed911-321">Codifica un set di caratteri dall'oggetto <see cref="T:System.String" /> specificato nella matrice di byte specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-321">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-322">Numero effettivo di byte scritti in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-322">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-323">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetBytes%2A> per archiviare i byte risultanti, si chiama il <xref:System.Text.UTF32Encoding.GetByteCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-323">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="ed911-324">Per calcolare la dimensione massima della matrice, si chiama il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-324">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="ed911-325">Il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="ed911-325">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="ed911-326">Con il rilevamento di errori, una sequenza non valida fa in modo che questo metodo consente di generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="ed911-326">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="ed911-327">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="ed911-327">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="ed911-328">I dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</span><span class="sxs-lookup"><span data-stu-id="ed911-328">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="ed911-329">In questo caso, o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, l'applicazione usa il <xref:System.Text.Decoder> o il <xref:System.Text.Encoder> forniti dalle <xref:System.Text.UTF32Encoding.GetDecoder%2A> (metodo) o il <xref:System.Text.UTF32Encoding.GetEncoder%2A> metodo, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="ed911-329">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed911-330">Per garantire che i byte con codificati vengono decodificati correttamente quando vengono salvati come un file o un flusso, è possibile anteporre un flusso di byte codificati con un preambolo.</span><span class="sxs-lookup"><span data-stu-id="ed911-330">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="ed911-331">Inserimento di un preambolo all'inizio di un flusso di byte (ad esempio all'inizio di una serie di byte da scrivere in un file) è responsabilità dello sviluppatore.</span><span class="sxs-lookup"><span data-stu-id="ed911-331">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="ed911-332">Il <xref:System.Text.UTF32Encoding.GetBytes%2A> metodo non anteporre un preambolo all'inizio di una sequenza di byte codificati.</span><span class="sxs-lookup"><span data-stu-id="ed911-332">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed911-333">Nell'esempio seguente determina il numero di byte necessari per codificare una stringa, quindi codifica la stringa e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="ed911-333">The following example determines the number of bytes required to encode a string, then encodes the string and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/VB/GetBytes_String.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ed911-334">
            <paramref name="s" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-334">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ed911-335">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-335">-or-</span>
          </span>
          <span data-ttu-id="ed911-336">
            <paramref name="bytes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-336">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ed911-337">
            <paramref name="charIndex" /> o <paramref name="charCount" /> o <paramref name="byteIndex" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-337">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="ed911-338">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-338">-or-</span>
          </span>
          <span data-ttu-id="ed911-339">
            <paramref name="charIndex" /> e <paramref name="charCount" /> non identificano un intervallo valido in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-339">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="ed911-340">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-340">-or-</span>
          </span>
          <span data-ttu-id="ed911-341">
            <paramref name="byteIndex" /> non è un indice valido in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-341">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ed911-342">Il rilevamento errori è abilitato e <paramref name="s" /> contiene una sequenza di carattere non valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-342">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="ed911-343">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-343">-or-</span>
          </span>
          <span data-ttu-id="ed911-344">
            <paramref name="bytes" /> non dispone di sufficiente capacità da <paramref name="byteIndex" /> alla fine della matrice per contenere i byte risultanti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-344">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="ed911-345">Si è verificato un fallback. Per una spiegazione completa, vedere [Codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-345">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="ed911-346">-e-</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-346">-and-</span>
          </span>
          <span data-ttu-id="ed911-347">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> è impostato su <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-347">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ed911-348">Calcola il numero di caratteri prodotti dalla decodifica di una sequenza di byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-348">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF32Encoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="ed911-349">Puntatore al primo byte da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-349">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ed911-350">Numero di byte da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-350">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed911-351">Calcola il numero di caratteri prodotti dalla decodifica di una sequenza di byte a partire dal puntatore ai byte specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-351">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-352">Numero di caratteri prodotti dalla decodifica della sequenza di byte specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-352">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-353"><xref:System.Text.UTF32Encoding.GetCharCount%2A> Calcola la dimensione della matrice esatti necessaria per il <xref:System.Text.UTF32Encoding.GetChars%2A> metodo per archiviare i caratteri risultanti.</span><span class="sxs-lookup"><span data-stu-id="ed911-353"><xref:System.Text.UTF32Encoding.GetCharCount%2A> calculates the exact array size required by the <xref:System.Text.UTF32Encoding.GetChars%2A> method to store the resulting characters.</span></span> <span data-ttu-id="ed911-354">Per calcolare la dimensione massima della matrice, chiamare il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-354">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="ed911-355">Il <xref:System.Text.UTF32Encoding.GetCharCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="ed911-355">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="ed911-356">Con il rilevamento di errori, una sequenza non valida fa in modo che questo metodo consente di generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="ed911-356">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="ed911-357">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="ed911-357">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ed911-358">
            <paramref name="bytes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-358">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ed911-359">
            <paramref name="count" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-359">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="ed911-360">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-360">-or-</span>
          </span>
          <span data-ttu-id="ed911-361">Il numero di byte ottenuto è maggiore del numero massimo che può essere restituito come valore integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-361">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ed911-362">Il rilevamento degli errori è abilitato, e <paramref name="bytes" /> contiene una sequenza di byte non valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-362">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="ed911-363">Si è verificato un fallback. Per una spiegazione completa, vedere [Codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-363">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="ed911-364">-e-</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-364">-and-</span>
          </span>
          <span data-ttu-id="ed911-365">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> è impostato su <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-365">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="ed911-366">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-366">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="ed911-367">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-367">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Text.UTF32Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="uTF32Encoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="ed911-368">Matrice di byte contenente la sequenza di byte da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-368">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="ed911-369">Indice del primo byte da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-369">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ed911-370">Numero di byte da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-370">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed911-371">Calcola il numero di caratteri prodotti dalla decodifica di una sequenza di byte dalla matrice di byte specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-371">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-372">Numero di caratteri prodotti dalla decodifica della sequenza di byte specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-372">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-373">Il <xref:System.Text.UTF32Encoding.GetCharCount%2A> metodo calcola le dimensioni della matrice esatti necessari per il <xref:System.Text.UTF32Encoding.GetChars%2A> metodo per archiviare i caratteri risultanti.</span><span class="sxs-lookup"><span data-stu-id="ed911-373">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method calculates the exact array size required by the <xref:System.Text.UTF32Encoding.GetChars%2A> method to store the resulting characters.</span></span> <span data-ttu-id="ed911-374">Per calcolare la dimensione massima della matrice, chiamare il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-374">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="ed911-375">Il <xref:System.Text.UTF32Encoding.GetCharCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="ed911-375">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="ed911-376">Con il rilevamento di errori, una sequenza non valida fa in modo che questo metodo consente di generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="ed911-376">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="ed911-377">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="ed911-377">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed911-378">Nell'esempio seguente codifica una stringa in una matrice di byte e quindi le decodifica i byte in una matrice di caratteri.</span><span class="sxs-lookup"><span data-stu-id="ed911-378">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ed911-379">
            <paramref name="bytes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-379">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ed911-380">
            <paramref name="index" /> o <paramref name="count" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-380">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="ed911-381">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-381">-or-</span>
          </span>
          <span data-ttu-id="ed911-382">
            <paramref name="index" /> e <paramref name="count" /> non identificano un intervallo valido in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-382">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="ed911-383">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-383">-or-</span>
          </span>
          <span data-ttu-id="ed911-384">Il numero di byte ottenuto è maggiore del numero massimo che può essere restituito come valore integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-384">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ed911-385">Il rilevamento degli errori è abilitato, e <paramref name="bytes" /> contiene una sequenza di byte non valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-385">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="ed911-386">Si è verificato un fallback. Per una spiegazione completa, vedere [Codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-386">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="ed911-387">-e-</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-387">-and-</span>
          </span>
          <span data-ttu-id="ed911-388">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> è impostato su <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-388">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.UTF32Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ed911-389">Decodifica una sequenza di byte in un set di caratteri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-389">Decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF32Encoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="ed911-390">Puntatore al primo byte da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-390">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="ed911-391">Numero di byte da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-391">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="ed911-392">Puntatore alla posizione in cui iniziare a scrivere il set di caratteri risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-392">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="ed911-393">Numero massimo di caratteri da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-393">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed911-394">Decodifica una sequenza di byte a partire dal puntatore ai byte specificato in un set di caratteri archiviati a partire dal puntatore ai caratteri specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-394">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-395">Numero effettivo di caratteri scritti nella posizione indicata da <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-395">The actual number of characters written at the location indicated by <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-396">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetChars%2A> per archiviare i caratteri risultanti, chiamare il <xref:System.Text.UTF32Encoding.GetCharCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-396">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="ed911-397">Per calcolare la dimensione massima della matrice, chiamare il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-397">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="ed911-398">Il <xref:System.Text.UTF32Encoding.GetCharCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="ed911-398">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="ed911-399">Con il rilevamento di errori, una sequenza non valida fa in modo che questo metodo consente di generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="ed911-399">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="ed911-400">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="ed911-400">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="ed911-401">Se l'intervallo di byte da decodificare include i byte order mark (BOM) e la matrice di byte è stata restituita da un metodo di un tipo compatibile con non-BOM, il carattere di U + FFFE è incluso nella matrice di caratteri restituita da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="ed911-401">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="ed911-402">È possibile rimuoverla tramite la chiamata di <xref:System.String.TrimStart%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-402">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ed911-403">I dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</span><span class="sxs-lookup"><span data-stu-id="ed911-403">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="ed911-404">In questo caso, o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, l'applicazione usa il <xref:System.Text.Decoder> o il <xref:System.Text.Encoder> forniti dalle <xref:System.Text.UTF32Encoding.GetDecoder%2A> (metodo) o il <xref:System.Text.UTF32Encoding.GetEncoder%2A> metodo, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="ed911-404">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ed911-405">
            <paramref name="bytes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-405">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ed911-406">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-406">-or-</span>
          </span>
          <span data-ttu-id="ed911-407">
            <paramref name="chars" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-407">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ed911-408">
            <paramref name="byteCount" /> o <paramref name="charCount" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-408">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ed911-409">Il rilevamento degli errori è abilitato, e <paramref name="bytes" /> contiene una sequenza di byte non valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-409">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="ed911-410">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-410">-or-</span>
          </span>
          <span data-ttu-id="ed911-411">
            <paramref name="charCount" /> è minore del numero di caratteri risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-411">
              <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="ed911-412">Si è verificato un fallback. Per una spiegazione completa, vedere [Codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-412">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="ed911-413">-e-</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-413">-and-</span>
          </span>
          <span data-ttu-id="ed911-414">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> è impostato su <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-414">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="ed911-415">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-415">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="ed911-416">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-416">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="uTF32Encoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="ed911-417">Matrice di byte contenente la sequenza di byte da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-417">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="ed911-418">Indice del primo byte da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-418">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="ed911-419">Numero di byte da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-419">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="ed911-420">Matrice di caratteri che deve contenere il set di caratteri risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-420">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="ed911-421">Indice in corrispondenza del quale iniziare a scrivere il set di caratteri risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-421">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed911-422">Decodifica una sequenza di byte dalla matrice di byte specificata nella matrice di caratteri specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-422">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-423">Numero effettivo di caratteri scritti in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-423">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-424">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetChars%2A> per archiviare i caratteri risultanti, chiamare il <xref:System.Text.UTF32Encoding.GetCharCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-424">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="ed911-425">Per calcolare la dimensione massima della matrice, chiamare il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-425">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="ed911-426">Il <xref:System.Text.UTF32Encoding.GetCharCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="ed911-426">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="ed911-427">Con il rilevamento di errori, una sequenza non valida fa in modo che questo metodo consente di generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="ed911-427">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="ed911-428">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="ed911-428">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="ed911-429">Se l'intervallo di byte da decodificare include i byte order mark (BOM) e la matrice di byte è stata restituita da un metodo di un tipo compatibile con non-BOM, il carattere di U + FFFE è incluso nella matrice di caratteri restituita da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="ed911-429">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="ed911-430">È possibile rimuoverla tramite la chiamata di <xref:System.String.TrimStart%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-430">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ed911-431">I dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</span><span class="sxs-lookup"><span data-stu-id="ed911-431">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="ed911-432">In questo caso, o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, l'applicazione usa il <xref:System.Text.Decoder> o il <xref:System.Text.Encoder> forniti dalle <xref:System.Text.UTF32Encoding.GetDecoder%2A> (metodo) o il <xref:System.Text.UTF32Encoding.GetEncoder%2A> metodo, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="ed911-432">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed911-433">Nell'esempio seguente codifica una stringa in una matrice di byte e quindi le decodifica i byte in una matrice di caratteri.</span><span class="sxs-lookup"><span data-stu-id="ed911-433">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ed911-434">
            <paramref name="bytes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-434">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ed911-435">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-435">-or-</span>
          </span>
          <span data-ttu-id="ed911-436">
            <paramref name="chars" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-436">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ed911-437">
            <paramref name="byteIndex" /> o <paramref name="byteCount" /> o <paramref name="charIndex" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-437">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="ed911-438">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-438">-or-</span>
          </span>
          <span data-ttu-id="ed911-439">
            <paramref name="byteindex" /> e <paramref name="byteCount" /> non identificano un intervallo valido in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-439">
              <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="ed911-440">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-440">-or-</span>
          </span>
          <span data-ttu-id="ed911-441">
            <paramref name="charIndex" /> non è un indice valido in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-441">
              <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ed911-442">Il rilevamento degli errori è abilitato, e <paramref name="bytes" /> contiene una sequenza di byte non valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-442">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="ed911-443">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-443">-or-</span>
          </span>
          <span data-ttu-id="ed911-444">
            <paramref name="chars" /> non dispone di sufficiente capacità da <paramref name="charIndex" /> alla fine della matrice per contenere i caratteri risultanti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-444">
              <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="ed911-445">Si è verificato un fallback. Per una spiegazione completa, vedere [Codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-445">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="ed911-446">-e-</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-446">-and-</span>
          </span>
          <span data-ttu-id="ed911-447">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> è impostato su <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-447">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="uTF32Encoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed911-448">Ottiene un decodificatore in grado di convertire una sequenza di byte codificati UTF-32 in una sequenza di caratteri Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-448">Obtains a decoder that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-449">Oggetto <see cref="T:System.Text.Decoder" /> che converte una sequenza di byte codificati UTF-32 in una sequenza di caratteri Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-449">A <see cref="T:System.Text.Decoder" /> that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-450">Il <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> metodo converte sequenziali blocchi di byte in blocchi sequenziali di caratteri, in modo simile al <xref:System.Text.UTF32Encoding.GetChars%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-450">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF32Encoding.GetChars%2A> method.</span></span> <span data-ttu-id="ed911-451">Tuttavia, un <xref:System.Text.Decoder> mantiene informazioni sullo stato tra chiamate, in modo da poter decodificare correttamente le sequenze di byte che si estendono su blocchi.</span><span class="sxs-lookup"><span data-stu-id="ed911-451">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="ed911-452">Il <xref:System.Text.Decoder> anche mantiene byte finali alla fine di blocchi di dati e Usa i byte finali nella successiva operazione di decodifica.</span><span class="sxs-lookup"><span data-stu-id="ed911-452">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="ed911-453">Pertanto <xref:System.Text.UTF32Encoding.GetDecoder%2A> e <xref:System.Text.UTF32Encoding.GetEncoder%2A> sono utili per la trasmissione di rete e operazioni di file, perché queste operazioni utilizzano spesso i blocchi di dati anziché un flusso di dati completo.</span><span class="sxs-lookup"><span data-stu-id="ed911-453">Therefore, <xref:System.Text.UTF32Encoding.GetDecoder%2A> and <xref:System.Text.UTF32Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="ed911-454">Se il rilevamento errori è abilitato, vale a dire il `throwOnInvalidCharacters` parametro del costruttore è stato impostato su `true`, il rilevamento errori è abilitato anche nel <xref:System.Text.Decoder> restituito da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="ed911-454">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor was set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="ed911-455">Se è abilitato il rilevamento di errore e viene rilevata una sequenza non valida, lo stato del decodificatore non è definito e deve arrestare l'elaborazione.</span><span class="sxs-lookup"><span data-stu-id="ed911-455">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed911-456">Nell'esempio seguente usa un codificatore e un decodificatore per codificare una stringa in una matrice di byte e quindi decodificare i byte in una matrice di caratteri.</span><span class="sxs-lookup"><span data-stu-id="ed911-456">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/VB/EncDec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md">
          <span data-ttu-id="ed911-457">Informazioni sulle codifiche</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-457">Understanding Encodings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="uTF32Encoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed911-458">Ottiene un codificatore in grado di convertire una sequenza di caratteri Unicode in una sequenza di byte codificati UTF-32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-458">Obtains an encoder that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-459">Oggetto <see cref="T:System.Text.Encoder" /> che converte una sequenza di byte codificati UTF-32 in una sequenza di caratteri Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-459">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-460">Il <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metodo converte blocchi sequenziali di caratteri in blocchi sequenziali di byte, in modo simile al <xref:System.Text.UTF32Encoding.GetBytes%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-460">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.UTF32Encoding.GetBytes%2A> method.</span></span> <span data-ttu-id="ed911-461">Tuttavia, un <xref:System.Text.Encoder> mantiene informazioni sullo stato tra chiamate in modo che può codificare correttamente le sequenze di caratteri che si estendono su blocchi.</span><span class="sxs-lookup"><span data-stu-id="ed911-461">However, a <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="ed911-462">Il <xref:System.Text.Encoder> anche mantiene finali caratteri alla fine di blocchi di dati e i caratteri finali nella successiva operazione di codifica.</span><span class="sxs-lookup"><span data-stu-id="ed911-462">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="ed911-463">Ad esempio, un blocco di dati può terminare con un surrogato senza corrispondenza e potrebbe essere il surrogato corrisponda nel blocco di dati successivo.</span><span class="sxs-lookup"><span data-stu-id="ed911-463">For example, a data block might end with an unmatched high-surrogate, and the matching low-surrogate might be in the next data block.</span></span> <span data-ttu-id="ed911-464">Pertanto <xref:System.Text.UTF32Encoding.GetDecoder%2A> e <xref:System.Text.UTF32Encoding.GetEncoder%2A> sono utili per la trasmissione di rete e operazioni di file, perché queste operazioni utilizzano spesso i blocchi di dati anziché un flusso di dati completo.</span><span class="sxs-lookup"><span data-stu-id="ed911-464">Therefore, <xref:System.Text.UTF32Encoding.GetDecoder%2A> and <xref:System.Text.UTF32Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="ed911-465">Se il rilevamento errori è abilitato, vale a dire il `throwOnInvalidCharacters` parametro del costruttore è stato impostato su `true`, il rilevamento errori è abilitato anche nel <xref:System.Text.Encoder> restituito da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="ed911-465">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor was set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> returned by this method.</span></span> <span data-ttu-id="ed911-466">Se è abilitato il rilevamento di errore e viene rilevata una sequenza non valida, lo stato del codificatore della tabella è definito e deve arrestare l'elaborazione.</span><span class="sxs-lookup"><span data-stu-id="ed911-466">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed911-467">Nell'esempio seguente usa un codificatore e un decodificatore per codificare una stringa in una matrice di byte e quindi decodificare i byte in una matrice di caratteri.</span><span class="sxs-lookup"><span data-stu-id="ed911-467">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/VB/EncDec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md">
          <span data-ttu-id="ed911-468">Informazioni sulle codifiche</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-468">Understanding Encodings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uTF32Encoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed911-469">Restituisce il codice hash per l'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-469">Returns the hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-470">Codice hash per l'oggetto <see cref="T:System.Text.UTF32Encoding" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-470">The hash code for the current <see cref="T:System.Text.UTF32Encoding" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="uTF32Encoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount">
          <span data-ttu-id="ed911-471">Numero di caratteri da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-471">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed911-472">Calcola il numero massimo di byte prodotti dalla codifica del numero di caratteri specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-472">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-473">Numero massimo di byte prodotti dalla codifica del numero di caratteri specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-473">The maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-474">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetBytes%2A> per archiviare i byte risultanti, si chiama il <xref:System.Text.UTF32Encoding.GetByteCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-474">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="ed911-475">Per calcolare la dimensione massima della matrice, si chiama il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-475">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="ed911-476">Il <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="ed911-476">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="ed911-477"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> è un numero riflette il caso peggiore, incluso il caso peggiore per l'oggetto attualmente selezionato <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="ed911-477"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="ed911-478">Se si sceglie un fallback con una stringa di grandi dimensioni, <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> può restituire valori di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="ed911-478">If a fallback is chosen with a potentially large string,  <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="ed911-479">Nella maggior parte dei casi, questo metodo restituisce i numeri di ragionevoli per stringhe di piccole dimensioni.</span><span class="sxs-lookup"><span data-stu-id="ed911-479">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="ed911-480">Per le stringhe di grandi dimensioni, potrebbe essere necessario scegliere tra l'utilizzo di buffer molto grande e individuare gli errori nel raro caso che un buffer più ragionevole è stato superato.</span><span class="sxs-lookup"><span data-stu-id="ed911-480">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="ed911-481">È anche possibile prendere in considerazione un approccio diverso e usare <xref:System.Text.UTF32Encoding.GetByteCount%2A> o <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ed911-481">You might also want to consider a different approach and use <xref:System.Text.UTF32Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ed911-482"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> non ha alcuna relazione con <xref:System.Text.UTF32Encoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="ed911-482"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> has no relationship to <xref:System.Text.UTF32Encoding.GetChars%2A>.</span></span> <span data-ttu-id="ed911-483">Se è necessaria una funzione simile da utilizzare con <xref:System.Text.UTF32Encoding.GetChars%2A>, usare <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="ed911-483">If you need a similar function to use with <xref:System.Text.UTF32Encoding.GetChars%2A>, use <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed911-484">`GetMaxByteCount(N)` non è necessariamente lo stesso valore `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="ed911-484">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed911-485">Nell'esempio seguente determina il numero di byte necessari per codificare una stringa, quindi codifica la stringa e visualizza il numero di byte risultante.</span><span class="sxs-lookup"><span data-stu-id="ed911-485">The following example determines the number of bytes required to encode a string, then encodes the string and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/VB/GetBytes_String.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ed911-486">
            <paramref name="charCount" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-486">
              <paramref name="charCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="ed911-487">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-487">-or-</span>
          </span>
          <span data-ttu-id="ed911-488">Il numero di byte ottenuto è maggiore del numero massimo che può essere restituito come numero intero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-488">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="ed911-489">Si è verificato un fallback. Per una spiegazione completa, vedere [Codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-489">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="ed911-490">-e-</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-490">-and-</span>
          </span>
          <span data-ttu-id="ed911-491">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> è impostato su <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-491">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="uTF32Encoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount">
          <span data-ttu-id="ed911-492">Numero di byte da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-492">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed911-493">Calcola il numero massimo di caratteri prodotti dalla decodifica del numero di byte specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-493">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-494">Numero massimo di caratteri prodotti dalla decodifica del numero di byte specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-494">The maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-495">Per calcolare le dimensioni della matrice esatta richiesta dal <xref:System.Text.UTF32Encoding.GetChars%2A> per archiviare i caratteri risultanti, si chiama il <xref:System.Text.UTF32Encoding.GetCharCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-495">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, you call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="ed911-496">Per calcolare la dimensione massima della matrice, si chiama il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-496">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="ed911-497">Il <xref:System.Text.UTF32Encoding.GetCharCount%2A> metodo in genere alloca memoria inferiore, mentre il <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> metodo in genere viene eseguito più velocemente.</span><span class="sxs-lookup"><span data-stu-id="ed911-497">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="ed911-498"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> è un numero riflette il caso peggiore, incluso il caso peggiore per l'oggetto attualmente selezionato <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="ed911-498"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="ed911-499">Se si sceglie un fallback con una stringa di grandi dimensioni, <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> può restituire valori di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="ed911-499">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="ed911-500">Nella maggior parte dei casi, questo metodo restituisce i numeri di ragionevoli per stringhe di piccole dimensioni.</span><span class="sxs-lookup"><span data-stu-id="ed911-500">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="ed911-501">Per le stringhe di grandi dimensioni, potrebbe essere necessario scegliere tra l'utilizzo di buffer molto grande e individuare gli errori nel raro caso che un buffer più ragionevole è stato superato.</span><span class="sxs-lookup"><span data-stu-id="ed911-501">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="ed911-502">È anche possibile prendere in considerazione un approccio diverso e usare <xref:System.Text.UTF32Encoding.GetCharCount%2A> o <xref:System.Text.Decoder.Convert%2A>.</span><span class="sxs-lookup"><span data-stu-id="ed911-502">You might also want to consider a different approach and use <xref:System.Text.UTF32Encoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A>.</span></span>  
  
 <span data-ttu-id="ed911-503"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> non ha alcuna relazione con <xref:System.Text.UTF32Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="ed911-503"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> has no relationship to <xref:System.Text.UTF32Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="ed911-504">Se è necessaria una funzione simile da utilizzare con <xref:System.Text.UTF32Encoding.GetBytes%2A>, usare <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="ed911-504">If you need a similar function to use with <xref:System.Text.UTF32Encoding.GetBytes%2A>, use <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed911-505">`GetMaxCharCount(N)` non è necessariamente lo stesso valore `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="ed911-505">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed911-506">Nell'esempio seguente codifica una stringa in una matrice di byte e quindi le decodifica i byte in una matrice di caratteri.</span><span class="sxs-lookup"><span data-stu-id="ed911-506">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ed911-507">
            <paramref name="byteCount" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-507">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="ed911-508">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-508">-or-</span>
          </span>
          <span data-ttu-id="ed911-509">Il numero di byte ottenuto è maggiore del numero massimo che può essere restituito come numero intero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-509">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="ed911-510">Si è verificato un fallback. Per una spiegazione completa, vedere [Codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-510">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="ed911-511">-e-</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-511">-and-</span>
          </span>
          <span data-ttu-id="ed911-512">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> è impostato su <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-512">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="override this.GetPreamble : unit -&gt; byte[]" Usage="uTF32Encoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed911-513">Restituisce un byte order mark Unicode codificato in formato UTF-32, se l'oggetto di codifica <see cref="T:System.Text.UTF32Encoding" /> è configurato per fornirne uno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-513">Returns a Unicode byte order mark encoded in UTF-32 format, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-514">Matrice di byte contenente il byte order mark Unicode, se l'oggetto <see cref="T:System.Text.UTF32Encoding" /> è configurato per fornirne uno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-514">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span>
          </span>
          <span data-ttu-id="ed911-515">In caso contrario, questo metodo restituisce una matrice di byte di lunghezza zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-515">Otherwise, this method returns a zero-length byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-516">Il <xref:System.Text.UTF32Encoding> oggetto può fornire un preambolo, ovvero una matrice di byte che può essere anteposto alla sequenza di byte risultante dal processo di codifica.</span><span class="sxs-lookup"><span data-stu-id="ed911-516">The <xref:System.Text.UTF32Encoding> object can provide a preamble, which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="ed911-517">Prima di una sequenza di byte codificati con un byte order mark (punti di codice U + 0000 U + FEFF) consente il decodificatore di determinare l'ordine dei byte e il formato di trasformazione o UTF.</span><span class="sxs-lookup"><span data-stu-id="ed911-517">Prefacing a sequence of encoded bytes with a byte order mark (code points U+0000 U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</span></span> <span data-ttu-id="ed911-518">Il byte order mark Unicode (BOM) viene serializzato nel modo seguente (in esadecimale):</span><span class="sxs-lookup"><span data-stu-id="ed911-518">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="ed911-519">Ordine dei byte big-endian: 00 00 FF FE</span><span class="sxs-lookup"><span data-stu-id="ed911-519">Big endian byte order: 00 00 FE FF</span></span>  
  
-   <span data-ttu-id="ed911-520">Ordine dei byte little-endian little: FF FE 00 00</span><span class="sxs-lookup"><span data-stu-id="ed911-520">Little endian byte order: FF FE 00 00</span></span>  
  
 <span data-ttu-id="ed911-521">È possibile creare un'istanza di un <xref:System.Text.UTF32Encoding> il cui <xref:System.Text.UTF32Encoding.GetPreamble%2A> metodo restituisce un valido indicatore ordine byte nei modi seguenti:</span><span class="sxs-lookup"><span data-stu-id="ed911-521">You can instantiate a <xref:System.Text.UTF32Encoding> object whose <xref:System.Text.UTF32Encoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="ed911-522">Recuperando il <xref:System.Text.UTF32Encoding> oggetto restituito dal <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="ed911-522">By retrieving the <xref:System.Text.UTF32Encoding> object returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="ed911-523">Tramite la chiamata senza parametri <xref:System.Text.UTF32Encoding.%23ctor> costruttore per creare un'istanza di un <xref:System.Text.UTF32Encoding> oggetto.</span><span class="sxs-lookup"><span data-stu-id="ed911-523">By calling the parameterless <xref:System.Text.UTF32Encoding.%23ctor> constructor to instantiate a <xref:System.Text.UTF32Encoding> object.</span></span>  
  
-   <span data-ttu-id="ed911-524">Fornendo `true` come valore del `byteOrderMark` argomento per il <xref:System.Text.UTF32Encoding.%23ctor%2A> e <xref:System.Text.UTF32Encoding.%23ctor%2A> costruttori.</span><span class="sxs-lookup"><span data-stu-id="ed911-524">By supplying `true` as the value of the `byteOrderMark` argument to the <xref:System.Text.UTF32Encoding.%23ctor%2A> and <xref:System.Text.UTF32Encoding.%23ctor%2A> constructors.</span></span>  
  
 <span data-ttu-id="ed911-525">È consigliabile usare il carattere BOM, in quanto fornisce quasi determinati identificazione di una codifica per i file che non hanno più riferimento al <xref:System.Text.UTF32Encoding> oggetto, ad esempio, senza codifica o dati web, o i file di testo casuale archiviati quando un Business non aveva internazionale problemi o altri dati.</span><span class="sxs-lookup"><span data-stu-id="ed911-525">We recommend that you use the BOM, since it provides nearly certain identification of an encoding for files that otherwise have lost reference to the <xref:System.Text.UTF32Encoding> object, for example, untagged or improperly tagged web data, or random text files stored when a business did not have international concerns or other data.</span></span> <span data-ttu-id="ed911-526">Spesso, i problemi dell'utente potrebbero essere evitati se dati vengono contrassegnati in modo coerente e appropriato.</span><span class="sxs-lookup"><span data-stu-id="ed911-526">Often, user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="ed911-527">Per gli standard che forniscono un tipo di codifica, una distinta base è in parte ridondante.</span><span class="sxs-lookup"><span data-stu-id="ed911-527">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="ed911-528">Tuttavia, può essere utilizzato per consentire a un server di inviare l'intestazione di codifica corretta.</span><span class="sxs-lookup"><span data-stu-id="ed911-528">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="ed911-529">In alternativa, può essere utilizzato come fallback in caso contrario, la codifica viene perduta.</span><span class="sxs-lookup"><span data-stu-id="ed911-529">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="ed911-530">Esistono alcuni svantaggi dell'utilizzo di un carattere BOM.</span><span class="sxs-lookup"><span data-stu-id="ed911-530">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="ed911-531">Ad esempio, può essere difficile sapere come limitare i campi del database che usano un carattere BOM.</span><span class="sxs-lookup"><span data-stu-id="ed911-531">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="ed911-532">Concatenazione dei file può rappresentare un problema, inoltre, ad esempio, quando i file vengono uniti in tale modo un carattere non necessario può finire al centro dati.</span><span class="sxs-lookup"><span data-stu-id="ed911-532">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="ed911-533">Nonostante alcuni svantaggi, tuttavia, l'uso di un carattere BOM è consigliabile.</span><span class="sxs-lookup"><span data-stu-id="ed911-533">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="ed911-534">Per altre informazioni sull'ordine dei byte e il byte order mark, vedere lo Unicode Standard nella [home page di Unicode](https://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="ed911-534">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ed911-535">Per garantire che i byte con codificati vengono decodificati correttamente, si deve aggiungere byte codificati con un preambolo.</span><span class="sxs-lookup"><span data-stu-id="ed911-535">To ensure that the encoded bytes are decoded properly, you should prefix encoded bytes with a preamble.</span></span> <span data-ttu-id="ed911-536">Si noti che il <xref:System.Text.UTF32Encoding.GetBytes%2A> metodo anteporre non una DBA in una sequenza di byte codificati; fornisce un indicatore ordine byte all'inizio di un flusso di byte appropriato è responsabilità dello sviluppatore.</span><span class="sxs-lookup"><span data-stu-id="ed911-536">Note that the <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed911-537">Il seguente codice esempio recupera e Visualizza e contrassegna l'ordine dei byte per diversi <xref:System.Text.UTF32Encoding> istanze.</span><span class="sxs-lookup"><span data-stu-id="ed911-537">The following code example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 <span data-ttu-id="ed911-538">Nell'esempio seguente crea due <xref:System.Text.UTF32Encoding> oggetti, la prima delle quali non è incluso un carattere BOM e il secondo dei quali esegue.</span><span class="sxs-lookup"><span data-stu-id="ed911-538">The following example instantiates two <xref:System.Text.UTF32Encoding> objects, the first of which does not provide a BOM and the second of which does.</span></span> <span data-ttu-id="ed911-539">Chiama quindi il <xref:System.Text.UTF32Encoding.GetPreamble%2A> metodo per scrivere il BOM in un file prima di scrivere una stringa con codifica UTF-32.</span><span class="sxs-lookup"><span data-stu-id="ed911-539">It then calls the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method to write the BOM to a file before writing a UTF-32-encoded string.</span></span> <span data-ttu-id="ed911-540">Come illustrato nell'output dell'esempio, il file che salva i byte dal secondo codificatore ha quattro più byte che il primo.</span><span class="sxs-lookup"><span data-stu-id="ed911-540">As the output from the example shows, the file that saves the bytes from the second encoder has four more bytes that the first.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/getpreamble1.vb#2)]  
  
 <span data-ttu-id="ed911-541">È anche possibile confrontare i file usando il `fc` comando in una finestra della console, oppure è possibile esaminare i file in un editor di testo che include una modalità di visualizzazione esadecimale.</span><span class="sxs-lookup"><span data-stu-id="ed911-541">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="ed911-542">Si noti che quando il file viene aperto in un editor che supporta UTF-32, il carattere BOM non è visualizzato.</span><span class="sxs-lookup"><span data-stu-id="ed911-542">Note that when the file is opened in an editor that supports UTF-32, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="uTF32Encoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="ed911-543">Matrice di byte contenente la sequenza di byte da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-543">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="ed911-544">Indice del primo byte da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-544">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ed911-545">Numero di byte da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-545">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed911-546">Decodifica un intervallo di byte da una matrice di byte in una stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-546">Decodes a range of bytes from a byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed911-547">Stringa contenente i risultati di decodifica della sequenza di byte specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-547">A string that contains the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed911-548">Con il rilevamento di errori, una sequenza non valida fa in modo che questo metodo consente di generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="ed911-548">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="ed911-549">Senza il rilevamento di errori, le sequenze non valide vengono ignorate e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="ed911-549">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="ed911-550">Se l'intervallo di byte da decodificare include i byte order mark (BOM) e la matrice di byte è stata restituita da un metodo di un tipo compatibile con non-BOM, il carattere di U + FFFE è incluso nella matrice di caratteri restituita da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="ed911-550">If the range of bytes to be decoded includes the byte order mark (BOM), and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="ed911-551">È possibile rimuoverla tramite la chiamata di <xref:System.String.TrimStart%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ed911-551">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ed911-552">I dati da convertire, ad esempio i dati letti da un flusso, potrebbero essere disponibili solo in blocchi sequenziali.</span><span class="sxs-lookup"><span data-stu-id="ed911-552">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="ed911-553">In questo caso, o se la quantità di dati è talmente grande che deve essere suddiviso in blocchi più piccoli, l'applicazione deve utilizzare il <xref:System.Text.Decoder> o il <xref:System.Text.Encoder> forniti dalle <xref:System.Text.UTF32Encoding.GetDecoder%2A> (metodo) o il <xref:System.Text.UTF32Encoding.GetEncoder%2A> metodo, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="ed911-553">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed911-554">Nell'esempio seguente codifica una stringa in due matrici di matrici di byte, in ordine little-endian e l'altra nell'ordine big-endian.</span><span class="sxs-lookup"><span data-stu-id="ed911-554">The following example encodes a string into two arrays arrays of bytes, one in little-endian order and the other in big-endian order.</span></span> <span data-ttu-id="ed911-555">Quindi le decodifica i byte in una stringa.</span><span class="sxs-lookup"><span data-stu-id="ed911-555">It then decodes the bytes back into a string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/CS/getstring.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/VB/GetString.vb#1)]  
  
 <span data-ttu-id="ed911-556">Nell'esempio seguente consente di inizializzare una matrice mediante la chiamata di <xref:System.Text.UTF32Encoding.GetByteCount%2A> metodo per determinare esattamente quanti byte sono necessari per una stringa codificata e quindi aggiungere le dimensioni del contrassegno di ordine byte (BOM).</span><span class="sxs-lookup"><span data-stu-id="ed911-556">The following example initializes an array by calling the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="ed911-557">Nell'esempio viene quindi chiamato il <xref:System.Text.UTF32Encoding.GetPreamble%2A> metodo per archiviare il carattere BOM nella matrice prima di chiamare il <xref:System.Text.UTF32Encoding.GetBytes%2A> metodo per archiviare i byte nella matrice codificati.</span><span class="sxs-lookup"><span data-stu-id="ed911-557">The example then calls the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.UTF32Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="ed911-558">Nell'esempio viene quindi chiamato il <xref:System.Text.UTF32Encoding.GetString%2A> metodo da decodificare la stringa.</span><span class="sxs-lookup"><span data-stu-id="ed911-558">The example then calls the <xref:System.Text.UTF32Encoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/CS/GetString1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.GetString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/VB/GetString1.vb#2)]  
  
 <span data-ttu-id="ed911-559">Si noti che in questo caso la stringa decodificata è diversa dalla stringa originale, poiché inizia con un bit 32 byte order mark U + FFFE u+0000.</span><span class="sxs-lookup"><span data-stu-id="ed911-559">Note that in this case the decoded string differs from the original string, since it begins with a 32-bit byte order mark U+FFFE U+0000.</span></span> <span data-ttu-id="ed911-560">Ciò significa che le due stringhe confronterà contenendo e che, se la stringa di output, il carattere BOM verrà visualizzato come carattere di sostituzione "?".</span><span class="sxs-lookup"><span data-stu-id="ed911-560">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ed911-561">
            <paramref name="bytes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-561">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ed911-562">
            <paramref name="index" /> o <paramref name="count" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-562">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="ed911-563">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-563">-or-</span>
          </span>
          <span data-ttu-id="ed911-564">
            <paramref name="index" /> e <paramref name="count" /> non indicano un intervallo valido in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-564">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ed911-565">Il rilevamento degli errori è abilitato, e <paramref name="bytes" /> contiene una sequenza di byte non valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-565">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="ed911-566">Si è verificato un fallback. Per una spiegazione completa, vedere [Codifica dei caratteri in .NET Framework](~/docs/standard/base-types/character-encoding.md)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-566">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span>
          </span>
          <span data-ttu-id="ed911-567">-e-</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-567">-and-</span>
          </span>
          <span data-ttu-id="ed911-568">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> è impostato su <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed911-568">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>