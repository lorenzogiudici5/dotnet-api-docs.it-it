<Type Name="InPlaceHostingManager" FullName="System.Deployment.Application.InPlaceHostingManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="318b3adb922726e41d39a80b9e59598efbc9e92e" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32037170" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InPlaceHostingManager : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InPlaceHostingManager extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.InPlaceHostingManager" />
  <TypeSignature Language="VB.NET" Value="Public Class InPlaceHostingManager&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class InPlaceHostingManager : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Installa o aggiorna una distribuzione di ClickOnce in un computer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare <xref:System.Deployment.Application.InPlaceHostingManager> per scrivere programmi di installazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazioni a livello di codice. Ad esempio, è possibile utilizzare questa classe in un ambiente di sistema controllata gestione software (SMS) o in situazioni in cui necessaria un'installazione complessa che esegue un numero di operazioni di pre-installazione o post-installazione nel computer locale. In genere, è consigliabile usare i membri di questa classe in un ordine specifico:  
  
1.  Creare una nuova istanza della classe <xref:System.Deployment.Application.InPlaceHostingManager>.  
  
2.  Scaricare il manifesto di distribuzione utilizzando <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>.  
  
3.  Verificare che l'applicazione può essere eseguito con le autorizzazioni appropriate con <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.  
  
4.  Scaricare e installare l'applicazione utilizzando <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  
  
-   Se si chiama uno di questi parametri nell'ordine errato, verrà generata un'eccezione.  
  
 <xref:System.Deployment.Application.InPlaceHostingManager> installare un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione, ma non è possibile eseguirla. Alcuni metodi in questa classe, ad esempio <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>, sono riservati per l'utilizzo durante il download di un'applicazione basata su Windows Presentation Foundation eseguita all'interno di un Web browser.  
  
 Per utilizzare <xref:System.Deployment.Application.InPlaceHostingManager> per scaricare e installare applicazioni, è necessario assicurarsi che il certificato per la firma di [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazioni si intende installare è già installato nei computer client come server di pubblicazione trusted. Per ulteriori informazioni sugli autori attendibili, vedere [Cenni preliminari sulla distribuzione di applicazioni attendibili](http://msdn.microsoft.com/library/b24a1702-8fbe-45b1-87a0-9618a0708f1d).  
  
> [!NOTE]
>  È attualmente una limitazione di prodotto che impedisce <xref:System.Deployment.Application.InPlaceHostingManager> funzionino correttamente quando si esegue il debug del codice con Visual Studio. Se si esegue il debug dell'applicazione in Visual Studio usando il tasto F5, l'esempio genererà eccezioni insolite quando si chiama <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>. Per eseguire il debug con Visual Studio, avviare l'applicazione senza eseguire il debug e quindi collegare il debugger. In alternativa, è possibile utilizzare un altro debugger, ad esempio WinDbg.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare <xref:System.Deployment.Application.InPlaceHostingManager> per installare un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione a livello di codice in un computer client.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#1)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> per scaricare e installare l'applicazione specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deploymentManifest As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InPlaceHostingManager(Uri ^ deploymentManifest);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">URI (<see cref="T:System.Uri" />) del manifesto di distribuzione di un'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> per scaricare e installare l'applicazione ospitata dal browser specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore viene utilizzato quando si desidera scaricare un'applicazione basata su Windows Presentation Foundation che è ospitata in un Web browser. Per scaricare le applicazioni basate su Windows Form che vengono distribuite mediante [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)], utilizzare il <xref:System.Deployment.Application.InPlaceHostingManager.%23ctor%2A> costruttore con la `launchInHostProcess` parametro impostato su `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          La classe <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> può essere utilizzata solo in Windows XP o in versioni più recenti del sistema operativo Windows.</exception>
        <exception cref="T:System.ArgumentNullException">Non è possibile passare <see langword="null" /> come valore dell'argomento <paramref name="deploymentManifest" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentManifest" /> utilizza uno schema URI non è supportato da [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest, bool launchInHostProcess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest, bool launchInHostProcess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deploymentManifest As Uri, launchInHostProcess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InPlaceHostingManager(Uri ^ deploymentManifest, bool launchInHostProcess);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
        <Parameter Name="launchInHostProcess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">URI (Uniform Resource Identifier) del manifesto di distribuzione dell'applicazione che verrà installata.</param>
        <param name="launchInHostProcess">Determina se questa applicazione verrà eseguita in un host, ad esempio un browser. Per un'applicazione autonoma, impostare questo valore su <see langword="false" />.</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> per scaricare e installare l'applicazione specificata, che può essere un'applicazione Windows Form autonoma o un'applicazione ospitata in un browser.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come creare un'istanza di <xref:System.Deployment.Application.InPlaceHostingManager> che consente di scaricare le applicazioni basate su Windows Form distribuite mediante [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          La classe <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> può essere utilizzata solo in Windows XP o in versioni più recenti del sistema operativo Windows.</exception>
        <exception cref="T:System.ArgumentNullException">Non è possibile passare <see langword="null" /> come valore dell'argomento <paramref name="deploymentManifest" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentManifest" /> utilizza uno schema URI non è supportato da [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AssertApplicationRequirements">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se l'applicazione ClickOnce ha le autorizzazioni e le dipendenze di piattaforma appropriate per l'esecuzione nel computer locale.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertApplicationRequirements ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssertApplicationRequirements();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se l'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dispone delle autorizzazioni e delle dipendenze di piattaforma appropriate per l'esecuzione sul computer locale.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario chiamare <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> dopo <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> ha esito positivo. Non è necessario chiamare <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A> a meno che non si chiama <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>, e viene restituito senza errori.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>, che viene chiamato nel corpo di una corretta <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> gestore dell'evento.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Generata se questo metodo viene chiamato prima del metodo <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements (bool grantApplicationTrust);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements(bool grantApplicationTrust) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertApplicationRequirements (grantApplicationTrust As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssertApplicationRequirements(bool grantApplicationTrust);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grantApplicationTrust" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="grantApplicationTrust">Se <see langword="true" />, l'applicazione tenterà di elevare le autorizzazioni al livello richiesto.</param>
        <summary>Determina se l'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dispone delle autorizzazioni e delle dipendenze di piattaforma appropriate per l'esecuzione sul computer locale.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `grantApplicationTrust` è `true`, <xref:System.Deployment.Application.InPlaceHostingManager> concederà l'applicazione di autorizzazioni elevate se richieste. Ciò è possibile solo se <xref:System.Deployment.Application.InPlaceHostingManager> è in grado di concedere tali autorizzazioni. Ad esempio, se un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione viene installata come parte di un pacchetto di dimensioni maggiore e il programma di installazione è stata concessa l'attendibilità, <xref:System.Deployment.Application.InPlaceHostingManager> sarà in grado di concedere il [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione completamente attendibile. Se `grantApplicationTrust` è `false`, l'applicazione non verrà concessa alcuna autorizzazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annulla un'operazione di download asincrono.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia tutte le risorse usate da <see cref="T:System.Deployment.Application.InPlaceHostingManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare il metodo <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> dopo aver terminato di utilizzare l'oggetto <xref:System.Deployment.Application.InPlaceHostingManager>. Il metodo <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> lascia l'oggetto <xref:System.Deployment.Application.InPlaceHostingManager> in una condizione di inutilizzabilità. Dopo la chiamata <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A>, è necessario rilasciare tutti i riferimenti al <xref:System.Deployment.Application.InPlaceHostingManager> in modo che il garbage collector può recuperare la memoria che di <xref:System.Deployment.Application.InPlaceHostingManager> occupata. Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Chiamare sempre il metodo <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> prima di rilasciare l'ultimo riferimento a <xref:System.Deployment.Application.InPlaceHostingManager>. In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.Deployment.Application.InPlaceHostingManager> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationAsync">
      <MemberSignature Language="C#" Value="public void DownloadApplicationAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadApplicationAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadApplicationAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadApplicationAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Scarica un aggiornamento di applicazione in background.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario chiamare questo metodo dopo la chiamata <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>, che viene chiamato alla fine di una corretta <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> gestore dell'evento.  
  
 Gli esempi di codice seguente si supponga di aver definito e di aver creato un'istanza di <xref:System.Deployment.Application.InPlaceHostingManager> denominato `iphm`.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Generata se questo metodo viene chiamato prima dei metodi <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" /> e <see cref="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event DownloadApplicationCompleted As EventHandler(Of DownloadApplicationCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::DownloadApplicationCompletedEventArgs ^&gt; ^ DownloadApplicationCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica al termine del download dell'applicazione sul computer locale.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si sta installando un'applicazione basata su Windows Form, è necessario indicare agli utenti di avviare l'applicazione. non è possibile avviare applicazioni basate su Windows Form a livello di codice utilizzando il <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A> metodo.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato un gestore per il <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted> evento.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#7)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DownloadProgressChanged As EventHandler(Of DownloadProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::DownloadProgressChangedEventArgs ^&gt; ^ DownloadProgressChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica in corrispondenza alla modifica dello stato di download di un'applicazione o di un manifesto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un'applicazione console, gli eventi vengono assegnati ai thread da un pool di thread. Pertanto, è possibile ricevere lo stato di avanzamento gli eventi di aggiornamento nell'ordine errato, con un evento successivo che mostra una diminuzione rispetto a un evento precedente. È non verrà visualizzato tale comportamento in un'applicazione basata su Windows Form, perché vengono elaborati in sequenza gli eventi in Windows Form dalla coda di messaggi del thread dell'interfaccia utente.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come aggiornare un <xref:System.Windows.Forms.ToolStripProgressBar> contenuta all'interno di un <xref:System.Windows.Forms.StatusStrip>.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#6)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.Remoting.ObjectHandle Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute () As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ Execute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avvia l'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] solo se si tratta di un'applicazione Windows Presentation Foundation in esecuzione in un browser.</summary>
        <returns>Classe <see cref="T:System.Runtime.Remoting.ObjectHandle" /> corrispondente all'applicazione avviata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è valido solo per le applicazioni basate su Windows Presentation Foundation che possono essere ospitate in un Web browser (ovvero, di definire i relativi manifesti di distribuzione di `hostInBrowser` elemento XML).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestAsync">
      <MemberSignature Language="C#" Value="public void GetManifestAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetManifestAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetManifestAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetManifestAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Scarica in background il manifesto di distribuzione dell'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] e genera un evento al completamento dell'operazione o in caso di errore.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ricevere una notifica relativa al completamento di questo evento, creare un gestore eventi per il <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> evento. Se questo evento viene richiamato e nessun errore è indicato da <xref:System.Deployment.Application.GetManifestCompletedEventArgs>, sarà necessario chiamare <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> per verificare che l'applicazione disporrà dell'autorizzazione per l'esecuzione nel computer locale.  
  
   
  
## Examples  
 Gli esempi di codice seguente viene illustrato come chiamare il <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> metodo. Il gestore per il <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> evento callback verifica se il download del manifesto è stata completata e richiede all'utente con informazioni aggiuntive sull'applicazione. Se l'utente accetta di continuare l'installazione, il gestore chiama <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  
  
 Gli esempi di codice seguente si supponga di aver definito e di aver creato un'istanza di <xref:System.Deployment.Application.InPlaceHostingManager> denominato `iphm`.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event GetManifestCompleted As EventHandler(Of GetManifestCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::GetManifestCompletedEventArgs ^&gt; ^ GetManifestCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica al termine del download del manifesto di distribuzione sul computer locale.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> proprietà di <xref:System.Deployment.Application.GetManifestCompletedEventArgs> per verificare se <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> completata o ha restituito un errore. Se <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> è null, <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> completata ed è possibile chiamare <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.  
  
   
  
## Examples  
 Gli esempi di codice seguente viene illustrato come chiamare il <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> metodo. Il gestore per il <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> evento callback verifica se il download del manifesto è stata completata e richiede all'utente con informazioni aggiuntive sull'applicazione. Se l'utente accetta di continuare l'installazione, il gestore chiama <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  
  
 Gli esempi di codice seguente si supponga di aver definito e di aver creato un'istanza di <xref:System.Deployment.Application.InPlaceHostingManager> denominato `iphm`.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomAddIn">
      <MemberSignature Language="C#" Value="public static void UninstallCustomAddIn (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomAddIn(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallCustomAddIn (subscriptionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallCustomAddIn(System::String ^ subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">Stringa contenente un identificatore della sottoscrizione che indica il componente aggiuntivo da rimuovere.</param>
        <summary>Rimuove un componente di un’applicazione definito dall’utente installato precedentemente.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" /> non è un’identità della sottoscrizione valida o non contiene nome, token di chiave pubblica, architettura del processore e numero di versione.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionId" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomUXApplication">
      <MemberSignature Language="C#" Value="public static void UninstallCustomUXApplication (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomUXApplication(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallCustomUXApplication (subscriptionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallCustomUXApplication(System::String ^ subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">Stringa contenente un identificatore della sottoscrizione che indica l'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] da rimuovere.</param>
        <summary>Rimuove un'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] che include l'elemento &lt;customUX&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo disinstalla precedentemente installato [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione che utilizza il `<customUX>` elemento il [ &lt;entryPoint&gt; elemento](http://msdn.microsoft.com/library/10ad3083-10c1-4189-a870-9bba2eab244f).  
  
 Programmi di installazione personalizzati che si crea una voce in Installazione applicazioni per il [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione debba archiviare l'identificatore di sottoscrizione, vedere il <xref:System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity%2A> proprietà durante l'installazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>