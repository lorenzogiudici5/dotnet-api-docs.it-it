<Type Name="InPlaceHostingManager" FullName="System.Deployment.Application.InPlaceHostingManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37a2d5acb62923ae574d83fa0e8f1aa751bfbd07" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51866127" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InPlaceHostingManager : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InPlaceHostingManager extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.InPlaceHostingManager" />
  <TypeSignature Language="VB.NET" Value="Public Class InPlaceHostingManager&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class InPlaceHostingManager : IDisposable" />
  <TypeSignature Language="F#" Value="type InPlaceHostingManager = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Installa o aggiorna una distribuzione di ClickOnce in un computer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare <xref:System.Deployment.Application.InPlaceHostingManager> per scrivere programmi che tale istallazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazioni a livello di codice. Ad esempio, è possibile utilizzare questa classe in un ambiente di sistema controllata gestione software (SMS) o in situazioni in cui è necessaria un'installazione complessa che esegue una serie di operazioni di pre-installazione o post-installazione nel computer locale. In genere, si dovranno usare i membri di questa classe in un ordine specifico:  
  
1.  Creare una nuova istanza della classe <xref:System.Deployment.Application.InPlaceHostingManager>.  
  
2.  Scaricare il manifesto di distribuzione usando <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>.  
  
3.  Verificare che l'applicazione può essere eseguita con le autorizzazioni appropriate usando <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.  
  
4.  Scaricare e installare l'applicazione usando <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  
  
-   Se si chiama uno di questi parametri nell'ordine errato, si genererà un'eccezione.  
  
 <xref:System.Deployment.Application.InPlaceHostingManager> installare un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dell'applicazione, ma non è possibile eseguirlo. Alcuni metodi in questa classe, ad esempio <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>, sono riservati per uso durante il download di un'applicazione basata su Windows Presentation Foundation che viene eseguito all'interno di un Web browser.  
  
 Per usare <xref:System.Deployment.Application.InPlaceHostingManager> per scaricare e installare le applicazioni, è necessario assicurarsi che il certificato per la firma di [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazioni si intende installare è già installato nei computer client come server di pubblicazione trusted. Per altre informazioni sugli autori attendibili, vedere [Trusted Application Deployment Overview](https://msdn.microsoft.com/library/b24a1702-8fbe-45b1-87a0-9618a0708f1d).  
  
> [!NOTE]
>  È attualmente una limitazione del prodotto che impedisce <xref:System.Deployment.Application.InPlaceHostingManager> funzionino correttamente quando si esegue il debug di codice usando Visual Studio. Se si esegue il debug dell'applicazione in Visual Studio usando il tasto F5, il codice di esempio genererà eccezioni insolite, quando si chiama <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>. Per eseguire il debug usando Visual Studio avvia l'applicazione senza eseguire debug e quindi collegare il debugger. In alternativa, è possibile usare un altro debugger, ad esempio WinDbg.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare <xref:System.Deployment.Application.InPlaceHostingManager> per installare un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dell'applicazione a livello di codice in un computer client.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#1)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> per scaricare e installare l'applicazione specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deploymentManifest As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InPlaceHostingManager(Uri ^ deploymentManifest);" />
      <MemberSignature Language="F#" Value="new System.Deployment.Application.InPlaceHostingManager : Uri -&gt; System.Deployment.Application.InPlaceHostingManager" Usage="new System.Deployment.Application.InPlaceHostingManager deploymentManifest" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">URI (<see cref="T:System.Uri" />) del manifesto di distribuzione di un'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> per scaricare e installare l'applicazione ospitata dal browser specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore viene utilizzato quando si desidera scaricare un'applicazione basata su Windows Presentation Foundation che è ospitata in un Web browser. Per scaricare le applicazioni basate su Windows Form che vengono distribuite mediante [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)], usare il <xref:System.Deployment.Application.InPlaceHostingManager.%23ctor%2A> costruttore con la `launchInHostProcess` parametro impostato su `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">La classe <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> può essere utilizzata solo in Windows XP o in versioni più recenti del sistema operativo Windows.</exception>
        <exception cref="T:System.ArgumentNullException">Non è possibile passare <see langword="null" /> come valore dell'argomento <paramref name="deploymentManifest" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentManifest" /> utilizza uno schema URI non è supportato da [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest, bool launchInHostProcess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest, bool launchInHostProcess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deploymentManifest As Uri, launchInHostProcess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InPlaceHostingManager(Uri ^ deploymentManifest, bool launchInHostProcess);" />
      <MemberSignature Language="F#" Value="new System.Deployment.Application.InPlaceHostingManager : Uri * bool -&gt; System.Deployment.Application.InPlaceHostingManager" Usage="new System.Deployment.Application.InPlaceHostingManager (deploymentManifest, launchInHostProcess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
        <Parameter Name="launchInHostProcess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">URI (Uniform Resource Identifier) del manifesto di distribuzione dell'applicazione che verrà installata.</param>
        <param name="launchInHostProcess">Determina se questa applicazione verrà eseguita in un host, ad esempio un browser. Per un'applicazione autonoma, impostare questo valore su <see langword="false" />.</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> per scaricare e installare l'applicazione specificata, che può essere un'applicazione Windows Form autonoma o un'applicazione ospitata in un browser.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come creare un'istanza di <xref:System.Deployment.Application.InPlaceHostingManager> che consente di scaricare le applicazioni basate su Windows Form distribuite usando [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">La classe <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> può essere utilizzata solo in Windows XP o in versioni più recenti del sistema operativo Windows.</exception>
        <exception cref="T:System.ArgumentNullException">Non è possibile passare <see langword="null" /> come valore dell'argomento <paramref name="deploymentManifest" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentManifest" /> utilizza uno schema URI non è supportato da [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AssertApplicationRequirements">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se l'applicazione ClickOnce ha le autorizzazioni e le dipendenze di piattaforma appropriate per l'esecuzione nel computer locale.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertApplicationRequirements ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssertApplicationRequirements();" />
      <MemberSignature Language="F#" Value="member this.AssertApplicationRequirements : unit -&gt; unit" Usage="inPlaceHostingManager.AssertApplicationRequirements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se l'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dispone delle autorizzazioni e delle dipendenze di piattaforma appropriate per l'esecuzione sul computer locale.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario chiamare <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> dopo <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> ha esito positivo. Non è necessario chiamare <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A> salvo se si chiama <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>, e restituisce senza errori.  
  
   
  
## Examples  
 Esempio di codice seguente illustra l'uso del <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>, che viene chiamato nel corpo di una corretta <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> gestore dell'evento.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Generata se questo metodo viene chiamato prima del metodo <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements (bool grantApplicationTrust);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements(bool grantApplicationTrust) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertApplicationRequirements (grantApplicationTrust As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssertApplicationRequirements(bool grantApplicationTrust);" />
      <MemberSignature Language="F#" Value="member this.AssertApplicationRequirements : bool -&gt; unit" Usage="inPlaceHostingManager.AssertApplicationRequirements grantApplicationTrust" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grantApplicationTrust" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="grantApplicationTrust">Se <see langword="true" />, l'applicazione tenterà di elevare le autorizzazioni al livello richiesto.</param>
        <summary>Determina se l'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dispone delle autorizzazioni e delle dipendenze di piattaforma appropriate per l'esecuzione sul computer locale.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `grantApplicationTrust` viene `true`, <xref:System.Deployment.Application.InPlaceHostingManager> concederà l'applicazione di autorizzazioni elevate se li richiede. Ciò è possibile solo se <xref:System.Deployment.Application.InPlaceHostingManager> è in grado di concedere tali autorizzazioni. Ad esempio, se un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dell'applicazione viene installata come parte di un pacchetto più grande e il programma di installazione è stata concessa l'attendibilità, <xref:System.Deployment.Application.InPlaceHostingManager> saranno in grado di concedere il [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] attendibilità dell'applicazione. Se `grantApplicationTrust` è `false`, l'applicazione non verrà concessa alcuna autorizzazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="inPlaceHostingManager.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annulla un'operazione di download asincrono.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="inPlaceHostingManager.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia tutte le risorse usate da <see cref="T:System.Deployment.Application.InPlaceHostingManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare il metodo <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> dopo aver terminato di utilizzare l'oggetto <xref:System.Deployment.Application.InPlaceHostingManager>. Il metodo <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> lascia l'oggetto <xref:System.Deployment.Application.InPlaceHostingManager> in una condizione di inutilizzabilità. Dopo la chiamata <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A>, è necessario rilasciare tutti i riferimenti per il <xref:System.Deployment.Application.InPlaceHostingManager> in modo che il garbage collector di recuperare la memoria che il <xref:System.Deployment.Application.InPlaceHostingManager> occupata. Per altre informazioni, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementa un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Chiamare sempre il metodo <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> prima di rilasciare l'ultimo riferimento a <xref:System.Deployment.Application.InPlaceHostingManager>. In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.Deployment.Application.InPlaceHostingManager> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationAsync">
      <MemberSignature Language="C#" Value="public void DownloadApplicationAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadApplicationAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadApplicationAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadApplicationAsync();" />
      <MemberSignature Language="F#" Value="member this.DownloadApplicationAsync : unit -&gt; unit" Usage="inPlaceHostingManager.DownloadApplicationAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Scarica un aggiornamento di applicazione in background.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario chiamare questo metodo dopo la chiamata <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.  
  
   
  
## Examples  
 Esempio di codice seguente illustra l'uso del <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>, che viene chiamato alla fine di una corretta <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> gestore dell'evento.  
  
 Gli esempi di codice seguenti presuppongono che aver già definito e creato un'istanza di <xref:System.Deployment.Application.InPlaceHostingManager> denominato `iphm`.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Generata se questo metodo viene chiamato prima dei metodi <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" /> e <see cref="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event DownloadApplicationCompleted As EventHandler(Of DownloadApplicationCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::DownloadApplicationCompletedEventArgs ^&gt; ^ DownloadApplicationCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadApplicationCompleted : EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; " Usage="member this.DownloadApplicationCompleted : System.EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica al termine del download dell'applicazione sul computer locale.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si sta installando un'applicazione basata su Windows Form, sarà necessario indicare agli utenti di avviare l'applicazione autonomamente; non è possibile avviare applicazioni basate su Windows Form a livello di codice usando il <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A> (metodo).  
  
   
  
## Examples  
 L'esempio di codice seguente illustra un gestore per il <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted> evento.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#7)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DownloadProgressChanged As EventHandler(Of DownloadProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::DownloadProgressChangedEventArgs ^&gt; ^ DownloadProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadProgressChanged : EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; " Usage="member this.DownloadProgressChanged : System.EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica in corrispondenza alla modifica dello stato di download di un'applicazione o di un manifesto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un'applicazione console, gli eventi vengono assegnati ai thread da un pool di thread. Pertanto, si potrebbero ricevere lo stato di avanzamento aggiornamento gli eventi non in ordine, con un evento successivo che mostra una diminuzione rispetto a un evento precedente. È non verrà visualizzato tale comportamento in un'applicazione basata su moduli di Windows, perché gli eventi in Windows Form vengono elaborati in sequenza da coda di messaggi del thread dell'interfaccia utente.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come aggiornare una <xref:System.Windows.Forms.ToolStripProgressBar> contenuta all'interno di un <xref:System.Windows.Forms.StatusStrip>.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#6)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.Remoting.ObjectHandle Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute () As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ Execute();" />
      <MemberSignature Language="F#" Value="member this.Execute : unit -&gt; System.Runtime.Remoting.ObjectHandle" Usage="inPlaceHostingManager.Execute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avvia l'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] solo se si tratta di un'applicazione Windows Presentation Foundation in esecuzione in un browser.</summary>
        <returns>Classe <see cref="T:System.Runtime.Remoting.ObjectHandle" /> corrispondente all'applicazione avviata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è valido solo per le applicazioni basate su Windows Presentation Foundation che possono essere ospitate in un Web browser (vale a dire, definiscono manifesti di distribuzione di `hostInBrowser` elemento XML).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestAsync">
      <MemberSignature Language="C#" Value="public void GetManifestAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetManifestAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetManifestAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetManifestAsync();" />
      <MemberSignature Language="F#" Value="member this.GetManifestAsync : unit -&gt; unit" Usage="inPlaceHostingManager.GetManifestAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Scarica in background il manifesto di distribuzione dell'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] e genera un evento al completamento dell'operazione o in caso di errore.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ricevere una notifica relativa al completamento di questo evento, creare un gestore eventi per il <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> evento. Se questo evento viene chiamato e nessun errore è indicato da <xref:System.Deployment.Application.GetManifestCompletedEventArgs>, è necessario chiamare successivamente <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> per verificare che l'applicazione disporrà dell'autorizzazione per l'esecuzione nel computer locale.  
  
   
  
## Examples  
 Esempi di codice seguenti illustrano come chiamare il <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> (metodo). Il gestore per il <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> eventi callback verifica se il download del manifesto è stata completata correttamente e in questo caso, richiede all'utente con informazioni aggiuntive sull'applicazione. Se l'utente acconsente continuare l'installazione, il gestore chiama <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  
  
 Gli esempi di codice seguenti presuppongono che aver già definito e creato un'istanza di <xref:System.Deployment.Application.InPlaceHostingManager> denominato `iphm`.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event GetManifestCompleted As EventHandler(Of GetManifestCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::GetManifestCompletedEventArgs ^&gt; ^ GetManifestCompleted;" />
      <MemberSignature Language="F#" Value="member this.GetManifestCompleted : EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; " Usage="member this.GetManifestCompleted : System.EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica al termine del download del manifesto di distribuzione sul computer locale.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> proprietà di <xref:System.Deployment.Application.GetManifestCompletedEventArgs> per verificare se <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> completata o ha restituito un errore. Se <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> è null, <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> completata correttamente ed è possibile chiamare <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.  
  
   
  
## Examples  
 Esempi di codice seguenti illustrano come chiamare il <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> (metodo). Il gestore per il <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> eventi callback verifica se il download del manifesto è stata completata correttamente e in questo caso, richiede all'utente con informazioni aggiuntive sull'applicazione. Se l'utente acconsente continuare l'installazione, il gestore chiama <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  
  
 Gli esempi di codice seguenti presuppongono che aver già definito e creato un'istanza di <xref:System.Deployment.Application.InPlaceHostingManager> denominato `iphm`.  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomAddIn">
      <MemberSignature Language="C#" Value="public static void UninstallCustomAddIn (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomAddIn(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallCustomAddIn (subscriptionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallCustomAddIn(System::String ^ subscriptionId);" />
      <MemberSignature Language="F#" Value="static member UninstallCustomAddIn : string -&gt; unit" Usage="System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn subscriptionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">Stringa contenente un identificatore della sottoscrizione che indica il componente aggiuntivo da rimuovere.</param>
        <summary>Rimuove un componente di un’applicazione definito dall’utente installato precedentemente.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" /> non è un’identità della sottoscrizione valida o non contiene nome, token di chiave pubblica, architettura del processore e numero di versione.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionId" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomUXApplication">
      <MemberSignature Language="C#" Value="public static void UninstallCustomUXApplication (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomUXApplication(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallCustomUXApplication (subscriptionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallCustomUXApplication(System::String ^ subscriptionId);" />
      <MemberSignature Language="F#" Value="static member UninstallCustomUXApplication : string -&gt; unit" Usage="System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication subscriptionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">Stringa contenente un identificatore della sottoscrizione che indica l'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] da rimuovere.</param>
        <summary>Rimuove un'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] che include l'elemento &lt;customUX&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente di disinstallare un installati in precedenza [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dell'applicazione che usa il `<customUX>` elemento il [ &lt;entryPoint&gt; elemento](/visualstudio/deployment/entrypoint-element-clickonce-application).  
  
 Programmi di installazione personalizzati di non creare una voce in Installazione applicazioni per il [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione deve archiviare l'identificatore di sottoscrizione trovato nel <xref:System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity%2A> proprietà durante l'installazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>