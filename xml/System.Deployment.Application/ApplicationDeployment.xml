<Type Name="ApplicationDeployment" FullName="System.Deployment.Application.ApplicationDeployment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4376bd9a83f8a4474d5cb355beaf5e4fca865425" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36677650" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ApplicationDeployment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationDeployment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.ApplicationDeployment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationDeployment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationDeployment sealed" />
  <TypeSignature Language="F#" Value="type ApplicationDeployment = class" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Supports updates of the current deployment programmatically, and handles on-demand downloading of files. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile configurare le [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dell'applicazione per verificare la presenza di aggiornamenti e installarli automaticamente tramite il `subscription` elemento del manifesto della distribuzione. Alcune applicazioni, è tuttavia necessario un controllo più preciso gli aggiornamenti. È possibile installare gli aggiornamenti richiesti a livello di codice e richiedere agli utenti di installare gli aggiornamenti facoltativi in base alle esigenze. Disattivando aggiornamenti della sottoscrizione nel manifesto di distribuzione, è possibile assumere il controllo completo dei criteri di aggiornamento dell'applicazione. In alternativa, è possibile utilizzare la sottoscrizione automatica in combinazione con <xref:System.Deployment.Application.ApplicationDeployment>, che consente [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] per aggiornare l'applicazione periodicamente, ma utilizza <xref:System.Deployment.Application.ApplicationDeployment> per scaricare gli aggiornamenti critici subito dopo il rilascio.  
  
 È possibile testare la distribuzione è disponibile un aggiornamento tramite il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> o il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> metodo; il secondo metodo genera il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> evento di completamento. <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> Restituisce informazioni importanti sull'aggiornamento, ad esempio il numero di versione e se è un aggiornamento obbligatorio per gli utenti correnti. Se è disponibile un aggiornamento, è possibile installarlo tramite <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> oppure <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; il secondo metodo genera il <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> evento al termine dell'installazione dell'aggiornamento. Per aggiornamenti di grandi dimensioni, è possibile ricevere notifiche di stato di avanzamento tramite il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> e <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> degli eventi e utilizzare le informazioni contenute in <xref:System.ComponentModel.ProgressChangedEventArgs> per notificare all'utente dello stato del download.  
  
 È anche possibile usare <xref:System.Deployment.Application.ApplicationDeployment> scaricare il file di grandi dimensioni e gli assembly su richiesta. Questi file devono essere contrassegnati come "facoltativi" nel manifesto dell'applicazione di distribuzione in modo che vengano scaricati durante l'installazione. È possibile scaricare i file in qualsiasi momento durante la durata dell'applicazione utilizzando il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> metodo. È possibile scaricare gli assembly prima che vengano caricati in memoria fornendo un gestore eventi per il <xref:System.AppDomain.AssemblyResolve> evento sul <xref:System.AppDomain> classe. Per altre informazioni, vedere [Procedura dettagliata: Download di assembly su richiesta con l'API della distribuzione ClickOnce tramite la finestra di progettazione](http://msdn.microsoft.com/library/59a0dd5f-1cab-4f2f-b780-0ab7399905d5).  
  
> [!NOTE]
>  Se si aggiorna un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione mentre è in esecuzione l'applicazione, l'utente non il aggiornamenti verrà visualizzati finché non si chiama il <xref:System.Windows.Forms.Application.Restart%2A> metodo il <xref:System.Windows.Forms.Application>, che chiude l'istanza di esecuzione corrente dell'applicazione e riavviare immediatamente .  
  
 <xref:System.Deployment.Application.ApplicationDeployment> non dispone di alcun costruttore pubblico; Per ottenere istanze della classe all'interno di un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dell'applicazione tramite il <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> proprietà. Utilizzare la <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> per verificare che l'applicazione corrente è un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dell'applicazione.  
  
 <xref:System.Deployment.Application.ApplicationDeployment> supporta la verifica degli aggiornamenti e scaricare file aggiornati in modo asincrono utilizzando il nuovo [Panoramica del modello asincrono basato su eventi](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), che espone i callback di completamento come eventi di classe. <xref:System.Deployment.Application.ApplicationDeployment> Avvia e gestisce i thread per l'utente richiama l'applicazione nel thread dell'interfaccia utente corretto. Tramite questa classe, è possibile aggiornare senza bloccare l'applicazione, in modo che l'utente può continuare a lavorare durante l'installazione dell'aggiornamento. Se l'utente è necessario arrestare tutte le operazioni mentre un aggiornamento viene eseguita, provare a utilizzare i metodi sincroni.  
  
> [!NOTE]
>  Eseguire gli aggiornamenti asincroni è necessario che l'applicazione importarli entrambi il <xref:System.Deployment.Application> e <xref:System.ComponentModel> gli spazi dei nomi.  
  
   
  
## Examples  
 Esempio di codice seguente determina in fase di caricamento dell'applicazione se è disponibile un nuovo aggiornamento; Se è disponibile un aggiornamento obbligatorio, l'esempio di codice consente di installare l'aggiornamento in modo asincrono. Questo codice deve essere aggiunto a un modulo che contiene un <xref:System.Windows.Forms.TextBox> denominato `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivationUri">
      <MemberSignature Language="C#" Value="public Uri ActivationUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ActivationUri" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivationUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ActivationUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivationUri : Uri" Usage="System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the URL used to launch the deployment manifest of the application.</summary>
        <value>Stringa di lunghezza zero se la <c>TrustUrlParameters</c> proprietà nel manifesto di distribuzione è <see langword="false" />, o se l'utente ha fornito un percorso UNC per aprire la distribuzione oppure è stato aperto in locale. In caso contrario, il valore restituito è l'URL completo utilizzato per avviare l'applicazione, inclusi gli eventuali parametri.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà verrà visualizzata nelle applicazioni sia completamente o parzialmente attendibile.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come recuperare i parametri URL utilizzando <xref:System.Deployment.Application.ApplicationDeployment.ActivationUri%2A>e come utilizzare il <xref:System.Web.HttpUtility> (classe) per analizzare la stringa di query in modo sicuro. Più occorrenze della stessa variabile di stringa di query vengono consolidate in una voce dell'oggetto restituito <xref:System.Collections.Specialized.NameValueCollection>.  
  
 [!code-csharp[ClickOnceQueryString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceQueryString/CS/Form1.cs#1)]
 [!code-vb[ClickOnceQueryString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceQueryString/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForDetailedUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Performs the same operation as <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, but returns extended information about the available update.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate () As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : unit -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Performs the same operation as <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, but returns extended information about the available update.</summary>
        <returns>An <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> for the available update.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> consente di metodo sincrono ai chiamanti di ottenere le stesse informazioni estese ottenute dai chiamanti asincroni utilizzando il <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> classe.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> per recuperare le informazioni relative all'aggiornamento più recente. Se esiste un aggiornamento, viene installato automaticamente solo se si tratta di un aggiornamento obbligatorio; in caso contrario, verrà chiesto all'utente.  
  
 [!code-cpp[ClickOnceAPI#7](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#7)]
 [!code-csharp[ClickOnceAPI#7](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#7)]
 [!code-vb[ClickOnceAPI#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The current application is either not configured to support updates, or there is another update check operation already in progress.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">The deployment manifest cannot be downloaded. This exception will appear in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property of the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> event.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">The deployment manifest is corrupted. Regenerate the application's manifest before you attempt to deploy this application to users. This exception will appear in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property of the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> event.</exception>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate (persistUpdateCheckResult As Boolean) As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : bool -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult">If <see langword="false" />, the update will be applied silently and no dialog box will be displayed.</param>
        <summary>Performs the same operation as <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, but returns extended information about the available update.</summary>
        <returns>An <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> for the available update.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Checks <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> to determine whether a new update is available.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : unit -&gt; bool" Usage="applicationDeployment.CheckForUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Checks <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> to determine whether a new update is available.</summary>
        <returns>
          <see langword="true" /> if a new update is available; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> metodo confronta la versione della distribuzione attualmente installata con la versione specificata nel manifesto di distribuzione, vedere <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>. Se la versione nel server è diversa dalla versione installata, restituirà `true`.  
  
 Questo metodo verrà bloccata finché non viene completata la verifica. Per controllare in modo asincrono per un aggiornamento, utilizzare il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> metodo invece.  
  
> [!NOTE]
>  Se <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> individua che è disponibile un aggiornamento e l'utente sceglie di non installare, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] richiederà all'utente che è disponibile un aggiornamento alla successiva esecuzione dell'applicazione. Non è possibile disabilitare questa richiesta. (Se l'applicazione è un aggiornamento obbligatorio, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] il componente verrà installato senza chiedere conferma.)  
  
   
  
## Examples  
 Esempio di codice seguente controlla per un aggiornamento dell'applicazione; Se è disponibile, installato in modo sincrono.  
  
 [!code-cpp[ClickOnceAPI#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#5)]
 [!code-csharp[ClickOnceAPI#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#5)]
 [!code-vb[ClickOnceAPI#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] throws this exception immediately if you call the <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" /> method while an update is already in progress.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">The deployment manifest cannot be downloaded.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">The deployment manifest is corrupted. You will likely need to redeploy the application to fix this problem.</exception>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate (persistUpdateCheckResult As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : bool -&gt; bool" Usage="applicationDeployment.CheckForUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult">If <see langword="false" />, the update will be applied silently and no dialog box will be displayed.</param>
        <summary>Checks <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> to determine whether a new update is available.</summary>
        <returns>
          <see langword="true" /> if a new update is available; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsync">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsync : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Checks <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> asynchronously to determine whether a new update is available.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> restituisce immediatamente e avvia un thread separato per il download dell'applicazione aggiornata. Quando il metodo viene completata o viene annullato, viene generato il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> evento. È possibile utilizzare <xref:System.ComponentModel.AsyncCompletedEventArgs> in questo gestore eventi per determinare se l'operazione è stata annullata oppure se è stata generata un'eccezione durante l'aggiornamento.  
  
 È possibile annullare un aggiornamento asincrono chiamando <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>.  
  
> [!NOTE]
>  Se <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> individua che è disponibile un aggiornamento e l'utente sceglie di non installare, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] richiederà all'utente che è disponibile un aggiornamento alla successiva esecuzione dell'applicazione. Non è possibile disabilitare questa richiesta. (Se l'applicazione è un aggiornamento obbligatorio, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] il componente verrà installato senza chiedere conferma.)  
  
   
  
## Examples  
 Nell'esempio seguente controlla in modo asincrono per un aggiornamento e installa l'aggiornamento, se presente.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] throws this exception immediately if you call the <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> method while an update is already in progress.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">The deployment manifest cannot be downloaded. This exception appears in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property of the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> event.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">The deployment manifest is corrupted. You will likely need to redeploy the application to fix this problem. This exception appears in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property of the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> event.</exception>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels the asynchronous update check.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per annullare un controllo di aggiornamento avviato con il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> metodo.  
  
 Questo metodo non annullerà qualsiasi aggiornamento in background che potrebbe essere già in corso, ad esempio un aggiornamento avviato come parte di una sottoscrizione. Per ulteriori informazioni sulle sottoscrizioni, vedere [scelta di una strategia di aggiornamento ClickOnce](http://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateCompleted As CheckForUpdateCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::CheckForUpdateCompletedEventHandler ^ CheckForUpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " Usage="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.CheckForUpdateCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> has completed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> classe indica, tra le altre cose, la versione dell'aggiornamento, le dimensioni l'aggiornamento è e indica se l'aggiornamento disponibile è obbligatorio o facoltativo.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> per decidere se chiedere all'utente di installare l'aggiornamento dell'applicazione disponibili. Se l'aggiornamento è un aggiornamento obbligatorio, il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> gestore dell'evento non viene visualizzata una richiesta all'utente. Nell'esempio si presuppone che si distribuisce un'applicazione Windows Form che include un <xref:System.Windows.Forms.StatusStrip> controllo e che questo controllo contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> controllo denominato `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ CheckForUpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a progress update is available on a <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> call.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> report sullo stato download della distribuzione dell'applicazione del manifesto. Può trattarsi di informazioni importanti per gli utenti in corso il download della distribuzione su connessioni di rete lenta.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> evento per informare l'utente quanta parte del manifesto di distribuzione ancora da scaricare. Nell'esempio si presuppone che si distribuisce un'applicazione Windows Form che include un <xref:System.Windows.Forms.StatusStrip> controllo e che questo controllo contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> controllo denominato `downloadStatus`...  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDeployment">
      <MemberSignature Language="C#" Value="public static System.Deployment.Application.ApplicationDeployment CurrentDeployment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Deployment.Application.ApplicationDeployment CurrentDeployment" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentDeployment As ApplicationDeployment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Deployment::Application::ApplicationDeployment ^ CurrentDeployment { System::Deployment::Application::ApplicationDeployment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDeployment : System.Deployment.Application.ApplicationDeployment" Usage="System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.ApplicationDeployment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current <see cref="T:System.Deployment.Application.ApplicationDeployment" /> for this deployment.</summary>
        <value>La distribuzione corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è possibile creare istanze di <xref:System.Deployment.Application.ApplicationDeployment> direttamente nell'applicazione; è necessario recuperare un'istanza valida tramite il <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> proprietà.  
  
 Il <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> proprietà statica è valida solo all'interno di un'applicazione che è stata distribuita con [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. Tenta di chiamare questa proprietà da non -[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazioni verranno generata un'eccezione. Se si sta sviluppando un'applicazione che può o non può essere distribuita tramite [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)], usare il <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> proprietà per verificare se il programma corrente è un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dell'applicazione.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene recuperato <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> e controlli per determinare se l'applicazione è stata aggiornata negli ultimi tre giorni.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">You attempted to call this static property from a non-[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application.</exception>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentVersion">
      <MemberSignature Language="C#" Value="public Version CurrentVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version CurrentVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ CurrentVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the version of the deployment for the current running instance of the application.</summary>
        <value>La versione corrente di distribuzione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> è diverso da <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> se è stato installato un nuovo aggiornamento ma non ancora chiamato <xref:System.Windows.Forms.Application.Restart%2A>. Se il manifesto di distribuzione è configurato per eseguire aggiornamenti automatici, è possibile confrontare questi due valori per determinare se è necessario riavviare l'applicazione.  
  
   
  
## Examples  
 Esempio di codice seguente definisce un metodo che determina se [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] l'applicazione è stata aggiornata.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      </Docs>
    </Member>
    <Member MemberName="DataDirectory">
      <MemberSignature Language="C#" Value="public string DataDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataDirectory : string" Usage="System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the path to the [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] data directory.</summary>
        <value>Stringa contenente il percorso directory dei dati dell'applicazione sul disco locale.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroup">
      <MemberSignature Language="C#" Value="public void DownloadFileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroup (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroup : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">The named group of files to download. All files marked "optional" in a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application require a group name.</param>
        <summary>Downloads a set of optional files on demand.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dell'applicazione, i file contrassegnati come "facoltativi" nel manifesto dell'applicazione non vengono scaricati durante l'inizializzazione o l'aggiornamento. È possibile utilizzare il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> metodo per scaricare tutti i file che appartengono a un gruppo denominato su richiesta, in modo che non utilizzano risorse di rete e spazio su disco fino a quando non si è certi che l'utente li richiede. Ad esempio, alcuni utenti potrebbe essere necessario utilizzare un pacchetto di analisi dei dati incluso nell'applicazione su base giornaliera, mentre altri utenti possono non richiamare.  
  
 Per utilizzare un assembly è stato scaricato con <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>, si collega un listener di eventi per il <xref:System.AppDomain.AssemblyResolve> evento sul <xref:System.AppDomain.CurrentDomain%2A>. Per un esempio, vedere =[procedura dettagliata: download di assembly su richiesta con la distribuzione ClickOnce API tramite la finestra di progettazione](http://msdn.microsoft.com/library/59a0dd5f-1cab-4f2f-b780-0ab7399905d5).  
  
 Tutti i file vengono scaricati il [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] cache dell'applicazione e sono pertanto isolati alla versione corrente dell'applicazione. Si supponga che dopo il download di un gruppo di file, l'utente installa una nuova versione dell'applicazione, ma in un secondo momento verrà ripristinata la versione precedente dell'applicazione. In questo caso, la versione precedente sarà comunque necessario le copie dei file scaricati inizialmente. Per ulteriori informazioni sull'accesso ai file di dati, vedere [l'accesso ai dati locali e remoti in applicazioni ClickOnce](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> può essere utilizzato in applicazioni parzialmente attendibili, vale a dire, qualsiasi [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione in esecuzione con autorizzazioni limitate. Tuttavia, se si tenta di caricare gli assembly in modo dinamico, l'applicazione richiederà l'attendibilità totale.  
  
 Download su richiesta dei file di dati non è attualmente supportato.  
  
 L'applicazione non sarà risponde all'input dell'utente finché il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> metodo restituisce. Se è necessario scaricare i file senza interrompere il flusso di lavoro dell'utente, utilizzare il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> metodo invece.  
  
 È possibile scaricare un singolo file solo il nome di file. Per scaricare un singolo file, assegnare un nome di gruppo nel [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] distribuzione e scaricare il gruppo utilizzando questo metodo.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come caricare un assembly su richiesta in attesa per il <xref:System.AppDomain.AssemblyResolve> evento.  
  
 [!code-csharp[ClickOnceOnDemandCmdLine#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceOnDemandCmdLine/CS/Form1.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="groupName" /> parameter is null or zero-length.</exception>
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileGroupAsync">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Downloads, on demand, a set of optional files in the background.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">The named group of files to download. All files marked "optional" in a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application require a group name.</param>
        <summary>Downloads, on demand, a set of optional files in the background.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dell'applicazione, i file contrassegnati come "facoltativi" nel manifesto dell'applicazione non vengono scaricati durante l'inizializzazione o l'aggiornamento. È possibile utilizzare il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> metodo per scaricare tutti i file che appartengono a un gruppo denominato su richiesta, in modo che non utilizzano risorse di rete e spazio su disco fino a quando non si è certi che l'utente li richiede. Questo approccio funziona non solo per i file statici, ma anche per gli assembly che potrebbe non essere necessari da un'applicazione. Ad esempio, alcuni utenti potrebbe essere necessario utilizzare un pacchetto di analisi dei dati incluso nell'applicazione su base giornaliera, mentre altri utenti possono non richiamare.  
  
 Per scaricare assembly su richiesta, associare un listener di eventi per il <xref:System.AppDomain.AssemblyResolve> evento sul <xref:System.AppDomain.CurrentDomain%2A>. Per un esempio, vedere [procedura dettagliata: download di assembly su richiesta con l'API della distribuzione ClickOnce](http://msdn.microsoft.com/library/d20e2789-8621-4806-b5b7-841122da1456).  
  
 Tutti gli assembly vengono scaricati il [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] cache dell'applicazione.  
  
 Tutti i file statici vengono scaricati il [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] directory dei dati dell'applicazione e sono pertanto isolati alla versione corrente dell'applicazione. Si supponga che dopo il download di un gruppo di file, l'utente installa una nuova versione dell'applicazione, ma in un secondo momento verrà ripristinata la versione precedente dell'applicazione. In questo caso, la versione precedente sarà comunque necessario le copie dei file scaricati inizialmente. Per ulteriori informazioni sull'accesso a file statici, vedere [l'accesso ai dati locali e remoti in applicazioni ClickOnce](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).  
  
 È possibile scaricare più gruppi di file utilizzano contemporaneamente <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>. È possibile distinguere tra di esse utilizzando il <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> proprietà del <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> (classe), che viene passato per il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> evento. Se è necessario passare uno stato più complesso, è possibile utilizzare <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> per passare un `state` oggetto.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> può essere utilizzato in applicazioni parzialmente attendibili, vale a dire, qualsiasi [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione in esecuzione con autorizzazioni limitate. Tuttavia, se si sta tentando di caricare gli assembly in modo dinamico, l'applicazione richiederà l'attendibilità totale.  
  
 Download su richiesta dei file di dati non è attualmente supportato.  
  
 È possibile scaricare un singolo file solo il nome di file. Per scaricare un singolo file, assegnare un nome di gruppo nel [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] distribuzione e scaricare il gruppo utilizzando questo metodo.  
  
 Per annullare un download asincrono, chiamare il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="groupName" /> parameter is null or zero-length.</exception>
        <exception cref="T:System.InvalidOperationException">You cannot initiate more than one download of <paramref name="groupName" /> at a time.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string * obj -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync (groupName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="groupName">The named group of files to download. All files marked "optional" in a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application require a group name.</param>
        <param name="userState">An arbitrary object containing state information for the asynchronous operation.</param>
        <summary>Downloads, on demand, a set of optional files in the background, and passes a piece of application state to the event callbacks.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dell'applicazione, i file contrassegnati come "facoltativi" nel manifesto dell'applicazione non vengono scaricati durante l'inizializzazione o l'aggiornamento. È possibile utilizzare il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> metodo per scaricare tutti i file che appartengono a un gruppo denominato su richiesta, in modo che non utilizzano risorse di rete e spazio su disco fino a quando non si è certi che l'utente li richiede. Questo approccio funziona non solo per i file statici, ma anche per gli assembly che potrebbe non essere necessari da un'applicazione. Ad esempio, alcuni utenti potrebbe essere necessario utilizzare un pacchetto di analisi dei dati incluso nell'applicazione su base giornaliera, mentre altri utenti possono non richiamare. Per scaricare assembly su richiesta, associare un listener di eventi per il <xref:System.AppDomain.AssemblyResolve> evento sul <xref:System.AppDomain.CurrentDomain%2A>.  
  
 È possibile scaricare contemporaneamente più gruppi di file utilizzando il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> metodo. È possibile distinguere tra di esse utilizzando il <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> proprietà del <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> (classe), che viene passato per il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> evento. Se è necessario passare uno stato più complesso, è possibile usare  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> Per passare un `state` oggetto.  
  
 Tutti i file statici vengono scaricati il [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] directory dei dati dell'applicazione e sono pertanto isolati alla versione corrente dell'applicazione. Per ulteriori informazioni sull'accesso a file statici, vedere [l'accesso ai dati locali e remoti in applicazioni ClickOnce](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d). . Si supponga che dopo il download di un gruppo di file, l'utente installa una nuova versione dell'applicazione, ma un secondo momento verrà ripristinata la versione precedente dell'applicazione. In questo caso, la versione precedente sarà comunque necessario le copie dei file scaricati inizialmente.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> può essere utilizzato in applicazioni parzialmente attendibili, vale a dire, qualsiasi [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione in esecuzione con autorizzazioni limitate. Tuttavia, se si sta tentando di caricare gli assembly in modo dinamico, l'applicazione richiederà l'attendibilità totale.  
  
 Download su richiesta dei file di dati non è attualmente supportato.  
  
 Per annullare un download asincrono, chiamare il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="groupName" /> parameter is null or zero-length.</exception>
        <exception cref="T:System.InvalidOperationException">You cannot initiate more than one download of <paramref name="groupName" /> at a time.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsyncCancel">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsyncCancel (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsyncCancel(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsyncCancel (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsyncCancel(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsyncCancel : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsyncCancel groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">The named group of files to download. All files marked "optional" in a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application require a group name.</param>
        <summary>Cancels an asynchronous file download.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupName" /> cannot be <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupCompleted As DownloadFileGroupCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DownloadFileGroupCompletedEventHandler ^ DownloadFileGroupCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " Usage="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DownloadFileGroupCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs on the main application thread when a file download is complete.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted> eventi viene chiamato sul thread principale dell'applicazione. È thread-safe chiamare i controlli dell'applicazione Windows Form direttamente all'interno di questo callback.  
  
 Controllare la <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> proprietà del <xref:System.ComponentModel.AsyncCompletedEventArgs> fornito a questo callback. Se questa proprietà è `null`, il download ha avuto esito positivo; in caso contrario `null`, l'installazione non riuscita e che è possibile trovare ulteriori informazioni sull'errore di installazione tramite il <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente consente di scaricare un gruppo di file della Guida in background. Nell'esempio si presuppone che si distribuisce un'applicazione Windows Form che include un <xref:System.Windows.Forms.StatusStrip> controllo e che questo controllo contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> controllo denominato `downloadStatus`...  
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when status information is available on a file download operation initiated by a call to <see cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> eventi viene chiamato sul thread principale dell'applicazione. È thread-safe chiamare i controlli dell'applicazione Windows Form direttamente all'interno di questo callback.  
  
 Utilizzare le informazioni fornite <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> per comunicare le informazioni sullo stato per gli utenti.  
  
   
  
## Examples  
 Esempio di codice seguente consente di scaricare un gruppo di file della Guida in background. Nell'esempio si presuppone che si distribuisce un'applicazione Windows Form che include un <xref:System.Windows.Forms.StatusStrip> controllo e che questo controllo contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> controllo denominato `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFileGroupDownloaded">
      <MemberSignature Language="C#" Value="public bool IsFileGroupDownloaded (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFileGroupDownloaded(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFileGroupDownloaded (groupName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsFileGroupDownloaded(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.IsFileGroupDownloaded : string -&gt; bool" Usage="applicationDeployment.IsFileGroupDownloaded groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">The named group of files to download. All files marked "optional" in a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application require a group name.</param>
        <summary>Checks whether the named file group has already been downloaded to the client computer.</summary>
        <returns>
          <see langword="true" /> if the file group has already been downloaded for the current version of this application; otherwise, <see langword="false" />. If a new version of the application has been installed, and the new version has not added, removed, or altered files in the file group, <see cref="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" /> returns <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded%2A> funziona in un'applicazione parzialmente attendibile senza richieste di sicurezza.  
  
 Quando si aggiorna un'applicazione, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] copia i file di dati su richiesta dalla versione precedente nella directory dei dati della nuova versione. Se si scarica una nuova versione di questi file, è necessario rimuovere tutti i dati che si desidera evitare che la versione precedente e spostarlo nella nuova versione.  
  
   
  
## Examples  
 Esempio di codice seguente Scarica tutti i file nel `HelpFiles` gruppo su disco.  
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">
          <paramref name="groupName" /> is not a file group defined in the application manifest.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstRun">
      <MemberSignature Language="C#" Value="public bool IsFirstRun { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstRun" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstRun As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstRun { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstRun : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether this is the first time this application has run on the client computer.</summary>
        <value>
          <see langword="true" /> Se questa versione dell'applicazione non ha mai eseguito nel computer client prima; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> per determinare se è necessario eseguire altre operazioni di inizializzazione unica alla prima esecuzione dell'applicazione.  
  
 Non presupporre che un <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> impostazione di `true` indica che questa istanza di un'applicazione è il primo di essi per visualizzare la relativa interfaccia utente per l'utente. A causa della modalità il sistema pianifica i processi, un'istanza dell'applicazione potrebbe essere relativo <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> impostata su `true`, ma un'altra istanza può essere la prima di eseguire il rendering sullo schermo. Il valore di questa proprietà viene reimpostato ogni volta che l'utente viene aggiornato da una versione a quella successiva. Se si desidera eseguire un'operazione solo alla prima esecuzione di qualsiasi versione di esecuzione dell'applicazione, è necessario eseguire un test aggiuntivo, ad esempio la verifica dell'esistenza di un file creato per la prima volta, o l'archiviazione di un flag tramite **applicazione Impostazioni**.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> per decidere se verificare la presenza di un aggiornamento al gruppo di file `HelpFiles`. Se uno o più file sono stati aggiornati, chiama <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> per ottenere le nuove versioni.  
  
 [!code-csharp[ClickOnceAPI#9](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#9)]
 [!code-vb[ClickOnceAPI#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="IsNetworkDeployed">
      <MemberSignature Language="C#" Value="public static bool IsNetworkDeployed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsNetworkDeployed" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsNetworkDeployed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsNetworkDeployed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNetworkDeployed : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the current application is a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application.</summary>
        <value>
          <see langword="true" /> Se si tratta di un [! Applicazione include[ndptecclick](~/Includes/ndptecclick-MD.MD)]; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si desidera che l'applicazione per essere eseguite sia all'interno e all'esterno di un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] distribuzione (ad esempio, se è necessario per il debug dell'applicazione nel computer locale prima della distribuzione), testare <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> prima di accedere il <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> proprietà.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> restituirà `true` indipendentemente dall'applicazione viene installata ospitato online, e a prescindere se è stato installato da un sito Web, una condivisione file o un CD-ROM.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene recuperato <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> mediante <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> per verificare che il riferimento non `null`.  
  
 [!code-cpp[ClickOnceAPI#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#2)]
 [!code-csharp[ClickOnceAPI#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="TimeOfLastUpdateCheck">
      <MemberSignature Language="C#" Value="public DateTime TimeOfLastUpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeOfLastUpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfLastUpdateCheck As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeOfLastUpdateCheck { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfLastUpdateCheck : DateTime" Usage="System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the date and the time [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] last checked for an application update.</summary>
        <value>Il <see cref="T:System.DateTime" /> della verifica dell'ultimo aggiornamento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione può essere configurato per aggiornamenti della sottoscrizione. In questo scenario, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] esegue il polling del percorso dell'applicazione distribuzione automaticamente a intervalli definiti nel manifesto di distribuzione e determina se è disponibile un aggiornamento. <xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> Restituisce l'ora dell'ultimo controllo dell'aggiornamento è stata avviata da una sottoscrizione o mediante un controllo esplicito di <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>, o <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> metodo.  
  
 Se nessun controllo degli aggiornamenti è stata eseguita poiché l'applicazione è stato installato, <xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> restituisce l'ora di installazione.  
  
   
  
## Examples  
 Nell'esempio di codice viene controllato se un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione sia stato archiviato per gli aggiornamenti disponibili negli ultimi tre giorni.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public bool Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; bool" Usage="applicationDeployment.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts a synchronous download and installation of the latest version of this application.</summary>
        <returns>
          <see langword="true" /> if an application has been updated; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'applicazione è considerata aggiornata quando si pubblica una nuova versione dell'applicazione nel percorso specificato da <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, e il numero di versione nel manifesto di distribuzione dell'applicazione è maggiore del numero di versione dell'applicazione installato nel computer dell'utente.  
  
 Il <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> chiamata verrà bloccata finché l'aggiornamento è stato scaricato nel computer client e installato nel [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] memorizzare nella cache; durante questa fase, l'applicazione non sarà reattiva verso utente. Se si desidera mantenere la velocità di risposta dell'applicazione o visualizzare un report di stato durante il download, utilizzare il <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> metodo invece.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> Scarica tutti i file che non sono contrassegnati come "facoltativi" nel manifesto dell'applicazione. È possibile scaricare file facoltativi su richiesta utilizzando il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> metodo.  
  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] potrebbe già essere aggiornamento dell'applicazione automaticamente quando si chiama il <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> metodo; se in tal caso, la chiamata a questo metodo genererà un' <xref:System.InvalidOperationException>.  
  
 Se sono stati aggiornati uno o più file nella distribuzione, ma non è stato aggiornato il manifesto dell'applicazione, si riceverà un <xref:System.Deployment.Application.InvalidDeploymentException>. La maggior parte dei casi, ridistribuire il [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione risolve questo problema. Questa eccezione si riceverà anche se una firma a chiave pubblica in un manifesto di distribuzione o di un manifesto dell'applicazione non valido o mancante.  
  
 Un aggiornamento può richiedere un livello di attendibilità nel computer locale superiore rispetto alla versione precedente dell'applicazione. Se l'applicazione utilizza una distribuzione di applicazioni attendibili, il gestore di attendibilità di common language runtime (CLR) esamina il manifesto di distribuzione per determinare se contiene una licenza di attendibilità valida. Se il manifesto di distribuzione non contiene una licenza di attendibilità valida [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] interrompe l'installazione e genera un <xref:System.Deployment.Application.TrustNotGrantedException>. Il <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> metodo mai visualizzerà un messaggio che chiede all'utente se desidera concedere l'autorizzazione dell'applicazione per l'esecuzione.  
  
   
  
## Examples  
 Esempio di codice seguente controlla per un aggiornamento dell'applicazione; Se è disponibile un aggiornamento, installato in modo sincrono.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">The local computer did not grant the application the permission level it requested to execute.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Your [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] deployment is corrupted. For tips on how to diagnose and correct the problem, see [Troubleshooting ClickOnce Deployments](http://msdn.microsoft.com/library/58e90012-f68b-4852-8ae9-58e361cbcc32).</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">The new deployment could not be downloaded from its location on the network.</exception>
        <exception cref="T:System.InvalidOperationException">The application is currently being updated.</exception>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public void UpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsync : unit -&gt; unit" Usage="applicationDeployment.UpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts an asynchronous download and installation of the latest version of this application.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'applicazione è considerata aggiornata quando si pubblica una nuova versione dell'applicazione nel percorso specificato da <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, e il numero di versione nel manifesto di distribuzione dell'applicazione è maggiore del numero di versione dell'applicazione installato nel computer dell'utente.  
  
 Durante il download dell'aggiornamento [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] genererà il <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> gestore eventi sul thread principale dell'applicazione per informare l'utente lo stato del download. Quando l'aggiornamento asincrono viene completato o rileva un'eccezione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] genererà il <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> eventi sul thread principale dell'applicazione. Esaminare il <xref:System.ComponentModel.AsyncCompletedEventArgs> fornito a questo evento per determinare se l'aggiornamento ha avuto esito positivo.  
  
 Se <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> genera un'eccezione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] chiamate <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> e imposta il <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> proprietà di <xref:System.ComponentModel.AsyncCompletedEventArgs> all'eccezione che è stata generata.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> verranno scaricati tutti i file in una distribuzione non è contrassegnato come "facoltativi" nel manifesto dell'applicazione. È possibile scaricare file facoltativi su richiesta utilizzando il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> metodo.  
  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] potrebbe già essere aggiornamento dell'applicazione automaticamente quando si chiama il <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> metodo; se in tal caso, la chiamata a questo metodo genererà un' <xref:System.InvalidOperationException>.  
  
 Se sono stati aggiornati uno o più file nella distribuzione, ma non è stato aggiornato il manifesto dell'applicazione, si riceverà un <xref:System.Deployment.Application.InvalidDeploymentException>. La maggior parte dei casi, rigenerare il manifesto dell'applicazione risolve questo problema. Questa eccezione si riceverà anche se una firma a chiave pubblica in un manifesto di distribuzione o di un manifesto dell'applicazione non valido o mancante.  
  
 Un aggiornamento può richiedere un livello di attendibilità nel computer locale superiore rispetto alla versione precedente dell'applicazione. Se l'applicazione utilizza una distribuzione di applicazioni attendibili, il gestore di attendibilità di common language runtime (CLR) esamina il manifesto di distribuzione per determinare se contiene una licenza di attendibilità valida. Se il manifesto di distribuzione non contiene una licenza di attendibilità valida [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] interrompe l'installazione e genera un <xref:System.Deployment.Application.TrustNotGrantedException>. <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> non visualizzerà mai un messaggio che chiede all'utente se desidera concedere l'autorizzazione dell'applicazione per l'esecuzione.  
  
   
  
## Examples  
 Esempio di codice seguente determina se un nuovo aggiornamento è disponibile al momento del caricamento dell'applicazione Se è disponibile un aggiornamento obbligatorio, installa l'aggiornamento, in modo asincrono. Nell'esempio si presuppone che si distribuisce un'applicazione Windows Form che include un <xref:System.Windows.Forms.StatusStrip> controllo e che questo controllo contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> controllo denominato `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">The local computer did not grant this application the permission level it requested to execute.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Your [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] deployment is corrupted. For tips on how to diagnose and correct the problem, see [Troubleshooting ClickOnce Deployments](http://msdn.microsoft.com/library/58e90012-f68b-4852-8ae9-58e361cbcc32).</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">The new deployment could not be downloaded from its location on the network.</exception>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
      </Docs>
    </Member>
    <Member MemberName="UpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void UpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.UpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels an asynchronous update initiated by <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A> solo Annulla un aggiornamento avviato da una chiamata a <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; non annulla un aggiornamento avviato come parte di una sottoscrizione.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ UpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] has finished upgrading the application as the result of a call to <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> eventi viene chiamato sul thread principale dell'applicazione. È possibile chiamare i controlli dell'applicazione Windows Form direttamente all'interno di questo callback senza generare un'eccezione.  
  
 Controllare la <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> proprietà del <xref:System.ComponentModel.AsyncCompletedEventArgs> fornito a questo callback. Se questa proprietà è `null`, l'installazione sia stata eseguita correttamente; in caso contrario `null`, l'installazione non riuscita e che è possibile trovare altre informazioni su questo errore di installazione tramite il <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> proprietà. Dopo aver scaricato l'aggiornamento, è necessario chiamare il <xref:System.Windows.Forms.Application.Restart%2A> metodo sul <xref:System.Windows.Forms.Application> per usare la versione più recente dell'applicazione.  
  
 Se l'installazione dell'aggiornamento è stata annullata da una chiamata a <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>, il <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> proprietà del <xref:System.ComponentModel.AsyncCompletedEventArgs> corrisponderà alla classe `true`.  
  
 Per utilizzare questo gestore eventi, l'applicazione è necessario importarli entrambi il <xref:System.Deployment.Application> e <xref:System.ComponentModel> gli spazi dei nomi.  
  
   
  
## Examples  
 Esempio di codice seguente determina in fase di caricamento dell'applicazione se è disponibile un nuovo aggiornamento; Se è disponibile un aggiornamento obbligatorio, installa l'aggiornamento, in modo asincrono. Nell'esempio si presuppone che si distribuisce un'applicazione Windows Form che include un <xref:System.Windows.Forms.StatusStrip> controllo e che questo controllo contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> controllo denominato `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedApplicationFullName">
      <MemberSignature Language="C#" Value="public string UpdatedApplicationFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdatedApplicationFullName" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedApplicationFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdatedApplicationFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedApplicationFullName : string" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the full name of the application after it has been updated.</summary>
        <value>Oggetto <see cref="T:System.String" /> che contiene il nome completo dell'applicazione.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedVersion">
      <MemberSignature Language="C#" Value="public Version UpdatedVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version UpdatedVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ UpdatedVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the version of the update that was recently downloaded.</summary>
        <value>Il <see cref="T:System.Version" /> che descrive la versione dell'aggiornamento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> è diverso da <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> se è stato installato un nuovo aggiornamento ma non ancora chiamato <xref:System.Windows.Forms.Application.Restart%2A> sul <xref:System.Windows.Forms.Application>. Se il manifesto di distribuzione dell'applicazione è configurato per eseguire aggiornamenti automatici, è possibile confrontare questi due valori per determinare se è necessario riavviare l'applicazione.  
  
 Se l'applicazione non è stato aggiornato, <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> restituisce lo stesso valore di <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>.  
  
   
  
## Examples  
 Esempio di codice seguente definisce un metodo che determina se [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] l'applicazione è stata aggiornata.  
  
 [!code-cpp[ClickOnceAPI#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#4)]
 [!code-csharp[ClickOnceAPI#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#4)]
 [!code-vb[ClickOnceAPI#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocation">
      <MemberSignature Language="C#" Value="public Uri UpdateLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UpdateLocation" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateLocation As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UpdateLocation { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateLocation : Uri" Usage="System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Web site or file share from which this application updates itself.</summary>
        <value>Il percorso di aggiornamento, espresso mediante un HTTP, HTTPS o URL del file; o come di Windows di rete (UNC) percorso del file.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A> potrebbe essere diverso dal sito Web utilizzato per scaricare l'applicazione inizialmente se la distribuzione dell'applicazione è configurata per utilizzare il reindirizzamento degli aggiornamenti.  
  
 Questo valore può essere modificato solo nel manifesto di distribuzione dell'applicazione.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ UpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] has new status information for an update operation initiated by calling the <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" /> method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> eventi viene chiamato sul thread principale dell'applicazione. È possibile chiamare i controlli dell'applicazione Windows Form direttamente all'interno di questo callback senza generare un'eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente determina in fase di caricamento dell'applicazione se è disponibile un nuovo aggiornamento; Se è disponibile un aggiornamento obbligatorio, installa l'aggiornamento, in modo asincrono.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>