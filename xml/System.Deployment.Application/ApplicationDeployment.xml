<Type Name="ApplicationDeployment" FullName="System.Deployment.Application.ApplicationDeployment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bffa222f60e381bcefb2025bbb6831ba8a51ccd7" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51866739" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ApplicationDeployment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationDeployment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.ApplicationDeployment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationDeployment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationDeployment sealed" />
  <TypeSignature Language="F#" Value="type ApplicationDeployment = class" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Supporta gli aggiornamenti della distribuzione corrente a livello di codice e gestisce il download di file su richiesta. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile configurare le [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dell'applicazione per verificare la presenza di aggiornamenti e installarli automaticamente tramite la `subscription` elemento del manifesto della distribuzione. Alcune applicazioni, è tuttavia necessario un controllo più preciso gli aggiornamenti. È possibile installare gli aggiornamenti necessari a livello di codice e richiedere agli utenti di installare aggiornamenti facoltativi in base alle esigenze. Disattivando aggiornamenti sugli abbonamenti nel manifesto di distribuzione, è possibile assumere il controllo completo di criteri di aggiornamento dell'applicazione. In alternativa, è possibile usare la sottoscrizione automatica in combinazione con <xref:System.Deployment.Application.ApplicationDeployment>, che consente [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] per l'applicazione viene aggiornata periodicamente, ma utilizza <xref:System.Deployment.Application.ApplicationDeployment> per scaricare gli aggiornamenti critici poco dopo il rilascio.  
  
 È possibile verificare se la distribuzione, è disponibile un aggiornamento usando il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> o il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> metodo; il secondo metodo che genera il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> eventi al termine dell'esecuzione. <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> Restituisce informazioni importanti sull'aggiornamento, ad esempio il numero di versione e se è un aggiornamento obbligatorio per gli utenti correnti. Se è disponibile un aggiornamento, è possibile installarlo tramite <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> oppure <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; il secondo metodo genera il <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> eventi al termine dell'installazione dell'aggiornamento. Per gli aggiornamenti di grandi dimensioni, è possibile ricevere notifiche di stato di avanzamento tramite il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> e <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> eventi e usare le informazioni contenute in <xref:System.ComponentModel.ProgressChangedEventArgs> per notificare all'utente lo stato del download.  
  
 È anche possibile usare <xref:System.Deployment.Application.ApplicationDeployment> per scaricare i file di grandi dimensioni e gli assembly su richiesta. Questi file devono essere contrassegnati come "facoltativi" nel manifesto dell'applicazione di distribuzione in modo che vengano scaricati durante l'installazione. È possibile scaricare i file in qualsiasi momento durante la durata dell'applicazione tramite il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> o il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> (metodo). È possibile scaricare gli assembly prima che vengano caricati in memoria, fornendo un gestore eventi per il <xref:System.AppDomain.AssemblyResolve> evento sul <xref:System.AppDomain> classe. Per altre informazioni, vedere [Procedura dettagliata: Download di assembly su richiesta con l'API della distribuzione ClickOnce tramite la finestra di progettazione](https://msdn.microsoft.com/library/59a0dd5f-1cab-4f2f-b780-0ab7399905d5).  
  
> [!NOTE]
>  Se si aggiorna un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione mentre è in esecuzione l'applicazione, l'utente non vedrà gli aggiornamenti fino a quando non si chiama il <xref:System.Windows.Forms.Application.Restart%2A> metodo il <xref:System.Windows.Forms.Application>, che chiude l'istanza attualmente in esecuzione dell'applicazione e riavviare immediatamente si tratta.  
  
 <xref:System.Deployment.Application.ApplicationDeployment> non dispone di alcun costruttore pubblico. Per ottenere istanze della classe all'interno di un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dell'applicazione tramite il <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> proprietà. Si utilizza il <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> proprietà per verificare che l'applicazione corrente è un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dell'applicazione.  
  
 <xref:System.Deployment.Application.ApplicationDeployment> supporta controllo degli aggiornamenti e il download di file aggiornati in modo asincrono usando il nuovo [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), che espone i callback di completamento come eventi di classe. <xref:System.Deployment.Application.ApplicationDeployment> Avvia e gestisce i thread per l'utente richiama l'applicazione nel thread dell'interfaccia utente corretto. Tramite questa classe, è possibile aggiornare senza bloccare l'applicazione, in modo che l'utente può continuare a lavorare durante l'installazione dell'aggiornamento. Se l'utente deve arrestare tutte le operazioni mentre un aggiornamento viene eseguita, provare a utilizzare i metodi sincroni.  
  
> [!NOTE]
>  Eseguire gli aggiornamenti asincroni è necessario che l'applicazione importare entrambi i <xref:System.Deployment.Application> e <xref:System.ComponentModel> gli spazi dei nomi.  
  
   
  
## Examples  
 Esempio di codice seguente determina in fase di caricamento dell'applicazione se è disponibile un nuovo aggiornamento; Se è disponibile un aggiornamento obbligatorio, l'esempio di codice consente di installare l'aggiornamento in modo asincrono. Questo codice deve essere aggiunto a un modulo che contiene un <xref:System.Windows.Forms.TextBox> denominato `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/59a0dd5f-1cab-4f2f-b780-0ab7399905d5">Procedura dettagliata: Download di assembly su richiesta con l'API usando la finestra di progettazione della distribuzione ClickOnce</related>
  </Docs>
  <Members>
    <Member MemberName="ActivationUri">
      <MemberSignature Language="C#" Value="public Uri ActivationUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ActivationUri" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivationUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ActivationUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivationUri : Uri" Usage="System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'URL utilizzato per avviare il manifesto di distribuzione dell'applicazione.</summary>
        <value>Stringa di lunghezza zero se il <c>TrustUrlParameters</c> nel manifesto di distribuzione proprietà <see langword="false" />, o se l'utente ha specificato un percorso UNC per aprire la distribuzione o ha eseguito l'apertura localmente. In caso contrario, il valore restituito corrisponderà all'URL completo utilizzato per avviare l'applicazione, inclusi gli eventuali parametri.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà verrà visualizzata nelle applicazioni sia completamente o parzialmente attendibile.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come recuperare i parametri URL utilizzando <xref:System.Deployment.Application.ApplicationDeployment.ActivationUri%2A>e come usare il <xref:System.Web.HttpUtility> classe per analizzare la stringa di query in modo sicuro. Più occorrenze della stessa variabile di stringa di query vengono consolidate in un unico movimento del valore restituito <xref:System.Collections.Specialized.NameValueCollection>.  
  
 [!code-csharp[ClickOnceQueryString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceQueryString/CS/Form1.cs#1)]
 [!code-vb[ClickOnceQueryString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceQueryString/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForDetailedUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Esegue la stessa operazione del metodo <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, ma restituisce informazioni estese sull'aggiornamento disponibile.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate () As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : unit -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue la stessa operazione del metodo <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, ma restituisce informazioni estese sull'aggiornamento disponibile.</summary>
        <returns>Oggetto <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> per l'aggiornamento disponibile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> consente di metodo sincrono ai chiamanti di ottenere le stesse informazioni che chiamanti asincroni utilizzando estese di <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> classe.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> per recuperare le informazioni sull'aggiornamento più recente. Se non esiste un aggiornamento, viene installato automaticamente solo se è un aggiornamento obbligatorio. in caso contrario, verrà chiesto all'utente.  
  
 [!code-cpp[ClickOnceAPI#7](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#7)]
 [!code-csharp[ClickOnceAPI#7](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#7)]
 [!code-vb[ClickOnceAPI#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'applicazione corrente non è configurata per il supporto degli aggiornamenti oppure è in corso un'altra operazione di verifica della disponibilità di aggiornamenti.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Non è possibile scaricare il manifesto di distribuzione. Questa eccezione sarà visibile nella proprietà <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> dell'evento <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Il manifesto di distribuzione è danneggiato. Prima di provare a distribuire l'applicazione agli utenti è necessario rigenerare il manifesto dell'applicazione. Questa eccezione sarà visibile nella proprietà <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> dell'evento <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />.</exception>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate (persistUpdateCheckResult As Boolean) As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : bool -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult">Se restituisce <see langword="false" />, l'aggiornamento verrà applicato automaticamente e non verrà visualizzata alcuna finestra di dialogo.</param>
        <summary>Esegue la stessa operazione del metodo <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, ma restituisce informazioni estese sull'aggiornamento disponibile.</summary>
        <returns>Oggetto <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> per l'aggiornamento disponibile.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Controlla <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> per determinare se è disponibile un nuovo aggiornamento.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : unit -&gt; bool" Usage="applicationDeployment.CheckForUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Controlla <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> per determinare se è disponibile un nuovo aggiornamento.</summary>
        <returns>
          <see langword="true" /> se è disponibile un nuovo aggiornamento; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> metodo confronta la versione della distribuzione attualmente installata con la versione specificata nel manifesto di distribuzione, vedere <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>. Se la versione sul server è diversa da quella installata, verrà restituito `true`.  
  
 Questo metodo si blocca fino a quando non è stata completata la verifica. Per verificare in modo asincrono un aggiornamento, usare il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> metodo invece.  
  
> [!NOTE]
>  Se <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> rileva che è disponibile un aggiornamento e l'utente sceglie di non installarlo, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] richiederà all'utente che è disponibile un aggiornamento alla successiva esecuzione dell'applicazione. Non è possibile disabilitare questa richiesta di conferma. (Se l'applicazione è un aggiornamento obbligatorio, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] verrà installato senza chiedere conferma.)  
  
   
  
## Examples  
 L'esempio di codice seguente controlla per un aggiornamento dell'applicazione; Se disponibile, viene installata in modo sincrono.  
  
 [!code-cpp[ClickOnceAPI#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#5)]
 [!code-csharp[ClickOnceAPI#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#5)]
 [!code-vb[ClickOnceAPI#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] genera questa eccezione immediatamente se il metodo <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" /> viene chiamato mentre è già in corso un'operazione di aggiornamento.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Non è possibile scaricare il manifesto di distribuzione.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Il manifesto di distribuzione è danneggiato. Per risolvere il problema sarà probabilmente necessario ridistribuire l'applicazione.</exception>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate (persistUpdateCheckResult As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : bool -&gt; bool" Usage="applicationDeployment.CheckForUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult">Se restituisce <see langword="false" />, l'aggiornamento verrà applicato automaticamente e non verrà visualizzata alcuna finestra di dialogo.</param>
        <summary>Controlla <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> per determinare se è disponibile un nuovo aggiornamento.</summary>
        <returns>
          <see langword="true" /> se è disponibile un nuovo aggiornamento; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsync">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsync : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Controlla <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> in modo asincrono per determinare se è disponibile un nuovo aggiornamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> restituisce immediatamente e avvia un thread separato per il download dell'applicazione aggiornata. Quando il metodo viene completato o annullato, viene generata la <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> evento. È possibile usare <xref:System.ComponentModel.AsyncCompletedEventArgs> in questo gestore eventi per determinare se l'operazione è stata annullata oppure se è stata generata un'eccezione durante l'aggiornamento.  
  
 È possibile annullare un aggiornamento asincrono tramite una chiamata <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>.  
  
> [!NOTE]
>  Se <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> rileva che è disponibile un aggiornamento e l'utente sceglie di non installarlo, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] richiederà all'utente che è disponibile un aggiornamento alla successiva esecuzione dell'applicazione. Non è possibile disabilitare questa richiesta di conferma. (Se l'applicazione è un aggiornamento obbligatorio, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] verrà installato senza chiedere conferma.)  
  
   
  
## Examples  
 Nell'esempio seguente controlla in modo asincrono per un aggiornamento e installazione dell'aggiornamento, se presente.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] genera questa eccezione immediatamente se il metodo <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> viene chiamato mentre è già in corso un'operazione di aggiornamento.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Non è possibile scaricare il manifesto di distribuzione. Questa eccezione viene visualizzata nella proprietà <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> dell'evento <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Il manifesto di distribuzione è danneggiato. Per risolvere il problema sarà probabilmente necessario ridistribuire l'applicazione. Questa eccezione viene visualizzata nella proprietà <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> dell'evento <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />.</exception>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annulla la verifica asincrona della disponibilità di aggiornamenti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per annullare un controllo di aggiornamento avviato con il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> (metodo).  
  
 Questo metodo non annulla gli aggiornamenti in background che potrebbero essere già in corso, ad esempio un aggiornamento avviato come parte di una sottoscrizione. Per altre informazioni sulle sottoscrizioni, vedere [scelta di una strategia di aggiornamento ClickOnce](https://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateCompleted As CheckForUpdateCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::CheckForUpdateCompletedEventHandler ^ CheckForUpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " Usage="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.CheckForUpdateCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica al completamento di <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> classe indica, tra le altre cose, la versione dell'aggiornamento, l'aggiornamento è la grandezza e indica se l'aggiornamento disponibile è obbligatoria o facoltativa.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> per decidere se chiedere all'utente di installare l'aggiornamento dell'applicazione disponibili. Se l'aggiornamento è un aggiornamento obbligatorio, il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> gestore dell'evento non viene visualizzata una richiesta all'utente. L'esempio richiede la distribuzione di un'applicazione Windows Form che include un' <xref:System.Windows.Forms.StatusStrip> controllo e che questo controllo contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> controllo denominato `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ CheckForUpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando un aggiornamento dello stato è disponibile su una chiamata al metodo <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> report sullo stato della distribuzione dell'applicazione di download del manifesto. Può trattarsi di informazioni importanti per gli utenti che scaricano la distribuzione su connessioni di rete lenta.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> evento per segnalare all'utente di quanta parte del manifesto di distribuzione viene ancora da scaricare. L'esempio richiede la distribuzione di un'applicazione Windows Form che include un' <xref:System.Windows.Forms.StatusStrip> controllo e che questo controllo contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> controllo denominato `downloadStatus`...  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDeployment">
      <MemberSignature Language="C#" Value="public static System.Deployment.Application.ApplicationDeployment CurrentDeployment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Deployment.Application.ApplicationDeployment CurrentDeployment" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentDeployment As ApplicationDeployment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Deployment::Application::ApplicationDeployment ^ CurrentDeployment { System::Deployment::Application::ApplicationDeployment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDeployment : System.Deployment.Application.ApplicationDeployment" Usage="System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.ApplicationDeployment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Restituisce la classe <see cref="T:System.Deployment.Application.ApplicationDeployment" /> corrente per la distribuzione.</summary>
        <value>La distribuzione corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è possibile creare istanze di <xref:System.Deployment.Application.ApplicationDeployment> direttamente nell'applicazione; è necessario recuperare un'istanza valida tramite il <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> proprietà.  
  
 Il <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> proprietà statica è valida solo all'interno di un'applicazione che è stata distribuita usando [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. Tenta di chiamare questa proprietà da non[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazioni verranno generata un'eccezione. Se si sviluppa un'applicazione che possa o non può essere distribuita tramite [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)], usare il <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> proprietà per verificare se il programma corrente è un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] dell'applicazione.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene recuperato <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> e controlli per determinare se l'applicazione è stata aggiornata negli ultimi tre giorni.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Si è provato a chiamare questa proprietà statica da un'applicazione diversa da [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</exception>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentVersion">
      <MemberSignature Language="C#" Value="public Version CurrentVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version CurrentVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ CurrentVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la versione della distribuzione per l'istanza in esecuzione corrente dell'applicazione.</summary>
        <value>La versione di distribuzione corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> è diverso da <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> se un nuovo aggiornamento sia stato installato ma non è stato ancora chiamato <xref:System.Windows.Forms.Application.Restart%2A>. Se il manifesto di distribuzione è configurato per eseguire aggiornamenti automatici, è possibile confrontare questi due valori per determinare se è necessario riavviare l'applicazione.  
  
   
  
## Examples  
 L'esempio di codice seguente definisce un metodo che determina se [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] l'applicazione è stata aggiornata.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      </Docs>
    </Member>
    <Member MemberName="DataDirectory">
      <MemberSignature Language="C#" Value="public string DataDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataDirectory : string" Usage="System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il percorso della directory dei dati di [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</summary>
        <value>Stringa contenente il percorso della directory di dati dell'applicazione su disco locale.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroup">
      <MemberSignature Language="C#" Value="public void DownloadFileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroup (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroup : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Il nome del gruppo di file da scaricare. Tutti i file contrassegnati come facoltativi in un'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] devono avere un nome di gruppo.</param>
        <summary>Esegue il download su richiesta di un gruppo di file facoltativi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] un'applicazione, i file contrassegnati come "optional" nel manifesto dell'applicazione non vengono scaricati durante l'inizializzazione o l'aggiornamento. È possibile usare il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> metodo per scaricare tutti i file che appartengono a un gruppo denominato su richiesta, in modo che non userà le risorse di rete e spazio su disco fino a quando non si è certi richiede all'utente. Ad esempio, alcuni utenti potrebbero essere necessario utilizzare un pacchetto di analisi dei dati incluso nell'applicazione su base giornaliera, mentre possono non richiamare gli altri utenti.  
  
 Per usare un assembly è stato scaricato con <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>, si collega un listener di eventi per il <xref:System.AppDomain.AssemblyResolve> evento sul <xref:System.AppDomain.CurrentDomain%2A>. Per un esempio, vedere =[procedura dettagliata: download di assembly su richiesta con la distribuzione ClickOnce API tramite la finestra di progettazione](https://msdn.microsoft.com/library/59a0dd5f-1cab-4f2f-b780-0ab7399905d5).  
  
 Tutti i file vengono scaricati il [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] cache dell'applicazione e sono pertanto isolati per la versione corrente dell'applicazione. Si supponga che dopo il download di un gruppo di file, l'utente installa una nuova versione dell'applicazione, ma in un secondo momento verrà ripristinato alla versione precedente dell'applicazione. In questo caso, la versione precedente avrà comunque le copie dei file scaricati inizialmente. Per altre informazioni sull'accesso ai file di dati, vedere [l'accesso ai dati locali e remoti in applicazioni ClickOnce](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> può essere utilizzato in applicazioni parzialmente attendibili, vale a dire, qualsiasi [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione in esecuzione con autorizzazioni limitate. Tuttavia, se si tenta di caricare gli assembly in modo dinamico, l'applicazione richiederà l'attendibilità totale.  
  
 Download di file di dati su richiesta non è attualmente supportato.  
  
 L'applicazione non sarà reattiva all'input dell'utente finché il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> restituzione del metodo. Se è necessario scaricare i file senza interrompere il flusso di lavoro dell'utente, usare il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> metodo invece.  
  
 È possibile scaricare un singolo file in base al nome di file da solo. Per scaricare un singolo file, assegnare un nome di gruppo nel [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] distribuzione e il download il gruppo con questo metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come caricare un assembly su richiesta in ascolto per il <xref:System.AppDomain.AssemblyResolve> evento.  
  
 [!code-csharp[ClickOnceOnDemandCmdLine#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceOnDemandCmdLine/CS/Form1.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="groupName" /> è null o ha lunghezza zero.</exception>
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
        <related type="Article" href="https://msdn.microsoft.com/library/fdaa553f-a27e-44eb-a4e2-08c122105a87">Procedura dettagliata: download di assembly satellite su richiesta con l'API della distribuzione ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/29570cec-4e53-4660-a850-abc4fa150243">ClickOnce Application Manifest</related>
        <related type="Article" href="https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d">Accesso a dati locali e remoti in applicazioni ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/89ee46ef-bc8c-4ab0-a2ac-1220f9da06fc">Procedura: includere un file di dati in un'applicazione ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/e379921e-9ef1-4326-bbf3-53ba67925526">Architettura della cache di ClickOnce</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileGroupAsync">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Esegue in background il download su richiesta di un gruppo di file facoltativi.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Il nome del gruppo di file da scaricare. Tutti i file contrassegnati come facoltativi in un'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] devono avere un nome di gruppo.</param>
        <summary>Esegue in background il download su richiesta di un gruppo di file facoltativi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] un'applicazione, i file contrassegnati come "optional" nel manifesto dell'applicazione non vengono scaricati durante l'inizializzazione o l'aggiornamento. È possibile usare il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> metodo per scaricare tutti i file che appartengono a un gruppo denominato su richiesta, in modo che non userà le risorse di rete e spazio su disco fino a quando non si è certi richiede all'utente. Questo approccio funziona non solo per i file statici, ma anche per gli assembly che un'applicazione potrebbe essere necessario o meno. Ad esempio, alcuni utenti potrebbero essere necessario utilizzare un pacchetto di analisi dei dati incluso nell'applicazione su base giornaliera, mentre possono non richiamare gli altri utenti.  
  
 Per scaricare gli assembly su richiesta, collegare un listener di eventi per il <xref:System.AppDomain.AssemblyResolve> evento sul <xref:System.AppDomain.CurrentDomain%2A>. Per un esempio, vedere [procedura dettagliata: download di assembly su richiesta con l'API della distribuzione ClickOnce](https://msdn.microsoft.com/library/d20e2789-8621-4806-b5b7-841122da1456).  
  
 Tutti gli assembly vengono scaricati il [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] cache dell'applicazione.  
  
 Tutti i file statici vengono scaricati il [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] directory dei dati dell'applicazione e sono pertanto isolato per la versione corrente dell'applicazione. Si supponga che dopo il download di un gruppo di file, l'utente installa una nuova versione dell'applicazione, ma in un secondo momento verrà ripristinato alla versione precedente dell'applicazione. In questo caso, la versione precedente avrà comunque le copie dei file scaricati inizialmente. Per altre informazioni sull'accesso ai file statici, vedere [l'accesso ai dati locali e remoti in applicazioni ClickOnce](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).  
  
 È possibile scaricare più gruppi di file contemporaneamente tramite <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>. È possibile distinguere tra di essi utilizzando il <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> proprietà del <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> (classe), che viene passato al <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> evento. Se è necessario passare lo stato più complesso, è possibile usare <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> per passare un `state` oggetto.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> può essere utilizzato in applicazioni parzialmente attendibili, vale a dire, qualsiasi [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione in esecuzione con autorizzazioni limitate. Tuttavia, se si sta tentando di caricare gli assembly in modo dinamico, l'applicazione richiederà l'attendibilità totale.  
  
 Download di file di dati su richiesta non è attualmente supportato.  
  
 È possibile scaricare un singolo file in base al nome di file da solo. Per scaricare un singolo file, assegnare un nome di gruppo nel [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] distribuzione e il download il gruppo con questo metodo.  
  
 Per annullare un download asincrono, chiamare il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="groupName" /> è null o ha lunghezza zero.</exception>
        <exception cref="T:System.InvalidOperationException">Non è possibile avviare contemporaneamente più download del parametro <paramref name="groupName" />.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/fdaa553f-a27e-44eb-a4e2-08c122105a87">Procedura dettagliata: download di assembly satellite su richiesta con l'API della distribuzione ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/29570cec-4e53-4660-a850-abc4fa150243">ClickOnce Application Manifest</related>
        <related type="Article" href="https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d">Accesso a dati locali e remoti in applicazioni ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/89ee46ef-bc8c-4ab0-a2ac-1220f9da06fc">Procedura: includere un file di dati in un'applicazione ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/e379921e-9ef1-4326-bbf3-53ba67925526">Architettura della cache di ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string * obj -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync (groupName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="groupName">Il nome del gruppo di file da scaricare. Tutti i file contrassegnati come facoltativi in un'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] devono avere un nome di gruppo.</param>
        <param name="userState">Un oggetto arbitrario contenente le informazioni di stato per l'operazione asincrona.</param>
        <summary>Esegue in background il download su richiesta di un gruppo di file facoltativi e passa una parte dello stato dell'applicazione ai callback degli eventi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] un'applicazione, i file contrassegnati come "optional" nel manifesto dell'applicazione non vengono scaricati durante l'inizializzazione o l'aggiornamento. È possibile usare il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> metodo per scaricare tutti i file che appartengono a un gruppo denominato su richiesta, in modo che non userà le risorse di rete e spazio su disco fino a quando non si è certi richiede all'utente. Questo approccio funziona non solo per i file statici, ma anche per gli assembly che un'applicazione potrebbe essere necessario o meno. Ad esempio, alcuni utenti potrebbero essere necessario utilizzare un pacchetto di analisi dei dati incluso nell'applicazione su base giornaliera, mentre possono non richiamare gli altri utenti. Per scaricare gli assembly su richiesta, collegare un listener di eventi per il <xref:System.AppDomain.AssemblyResolve> evento sul <xref:System.AppDomain.CurrentDomain%2A>.  
  
 È possibile scaricare simultaneamente più gruppi di file usando il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> (metodo). È possibile distinguere tra di essi utilizzando il <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> proprietà del <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> (classe), che viene passato al <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> evento. Se è necessario passare uno stato più complesso, è possibile usare  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> Per passare un `state` oggetto.  
  
 Tutti i file statici vengono scaricati il [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] directory dei dati dell'applicazione e sono pertanto isolato per la versione corrente dell'applicazione. Per altre informazioni sull'accesso ai file statici, vedere [l'accesso ai dati locali e remoti in applicazioni ClickOnce](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d). . Si supponga che dopo il download di un gruppo di file, l'utente installa una nuova versione dell'applicazione, ma l'utente successivo viene ripristinato alla versione precedente dell'applicazione. In questo caso, la versione precedente avrà comunque le copie dei file scaricati inizialmente.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> può essere utilizzato in applicazioni parzialmente attendibili, vale a dire, qualsiasi [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione in esecuzione con autorizzazioni limitate. Tuttavia, se si sta tentando di caricare gli assembly in modo dinamico, l'applicazione richiederà l'attendibilità totale.  
  
 Download di file di dati su richiesta non è attualmente supportato.  
  
 Per annullare un download asincrono, chiamare il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="groupName" /> è null o ha lunghezza zero.</exception>
        <exception cref="T:System.InvalidOperationException">Non è possibile avviare contemporaneamente più download del parametro <paramref name="groupName" />.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/fdaa553f-a27e-44eb-a4e2-08c122105a87">Procedura dettagliata: download di assembly satellite su richiesta con l'API della distribuzione ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/29570cec-4e53-4660-a850-abc4fa150243">ClickOnce Application Manifest</related>
        <related type="Article" href="https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d">Accesso a dati locali e remoti in applicazioni ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/89ee46ef-bc8c-4ab0-a2ac-1220f9da06fc">Procedura: includere un file di dati in un'applicazione ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/e379921e-9ef1-4326-bbf3-53ba67925526">Architettura della cache di ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsyncCancel">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsyncCancel (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsyncCancel(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsyncCancel (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsyncCancel(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsyncCancel : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsyncCancel groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Il nome del gruppo di file da scaricare. Tutti i file contrassegnati come facoltativi in un'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] devono avere un nome di gruppo.</param>
        <summary>Annulla un download di file asincrono.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="groupName" /> non può essere <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupCompleted As DownloadFileGroupCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DownloadFileGroupCompletedEventHandler ^ DownloadFileGroupCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " Usage="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DownloadFileGroupCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica sul thread principale dell'applicazione al termine del download di un file.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted> eventi viene chiamato sul thread principale dell'applicazione. È thread-safe chiamare i controlli Windows Form dell'applicazione direttamente all'interno di questo callback.  
  
 Verificare i <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> proprietà del <xref:System.ComponentModel.AsyncCompletedEventArgs> fornito a questo callback. Se questa proprietà è `null`, il download è stata eseguita correttamente; in caso contrario `null`, l'installazione non è riuscito e si possono trovare altre informazioni sull'errore di installazione tramite il <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente scarica un gruppo di file della Guida in background. L'esempio richiede la distribuzione di un'applicazione Windows Form che include un' <xref:System.Windows.Forms.StatusStrip> controllo e che questo controllo contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> controllo denominato `downloadStatus`...  
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando sono disponibili informazioni sullo stato di un'operazione di download di file avviata da una chiamata a <see cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> eventi viene chiamato sul thread principale dell'applicazione. È thread-safe chiamare i controlli Windows Form dell'applicazione direttamente all'interno di questo callback.  
  
 Usare le informazioni fornite <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> comunicare informazioni relative all'avanzamento agli utenti.  
  
   
  
## Examples  
 Esempio di codice seguente scarica un gruppo di file della Guida in background. L'esempio richiede la distribuzione di un'applicazione Windows Form che include un' <xref:System.Windows.Forms.StatusStrip> controllo e che questo controllo contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> controllo denominato `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFileGroupDownloaded">
      <MemberSignature Language="C#" Value="public bool IsFileGroupDownloaded (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFileGroupDownloaded(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFileGroupDownloaded (groupName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsFileGroupDownloaded(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.IsFileGroupDownloaded : string -&gt; bool" Usage="applicationDeployment.IsFileGroupDownloaded groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Il nome del gruppo di file da scaricare. Tutti i file contrassegnati come facoltativi in un'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] devono avere un nome di gruppo.</param>
        <summary>Verifica se il gruppo di file denominato è già stato scaricato sul computer client.</summary>
        <returns>
          <see langword="true" /> se il gruppo di file è già stato scaricato per la versione corrente dell'applicazione; in caso contrario, <see langword="false" />. Se è stata installata una nuova versione dell'applicazione e non sono state eseguite aggiunte, rimozioni o modifiche dei file del gruppo di file, il metodo <see cref="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" /> restituirà il valore <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded%2A> funziona in un'applicazione parzialmente attendibile senza alcuna richiesta di sicurezza.  
  
 Quando si aggiorna un'applicazione, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] copia i file di dati su richiesta dalla versione precedente nella directory dei dati della nuova versione. Se si scarica una versione nuova di questi file, è necessario rimuovere tutti i dati che si desidera evitare che la versione precedente e spostarlo nella nuova versione.  
  
   
  
## Examples  
 L'esempio di codice seguente Scarica tutti i file nei `HelpFiles` gruppo su disco.  
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Il parametro <paramref name="groupName" /> non è un gruppo di file definito nel manifesto dell'applicazione.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstRun">
      <MemberSignature Language="C#" Value="public bool IsFirstRun { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstRun" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstRun As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstRun { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstRun : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se si tratta della prima volta che l'applicazione è stata eseguita sul computer client.</summary>
        <value>
          <see langword="true" /> se questa versione dell'applicazione non è mai stata eseguita sul computer client; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> per determinare se è necessario eseguire le operazioni di inizializzazione unica alla prima esecuzione dell'applicazione.  
  
 Non presupporre che un <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> impostazione di `true` indica che questa istanza di un'applicazione è la prima ad essere visualizzate all'utente la relativa interfaccia utente. A causa del modo il sistema pianifica i processi, un'istanza dell'applicazione potrebbe essere relativo <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> impostata su `true`, ma un'altra istanza può essere la prima per il rendering sullo schermo. Il valore di questa proprietà viene reimpostato ogni volta che l'utente effettua l'aggiornamento da una versione a quella successiva. Se si desidera eseguire un'operazione solo alla prima esecuzione di qualsiasi versione di viene eseguita l'applicazione, è necessario eseguire un test aggiuntivi, ad esempio verifica dell'esistenza di un file creato per la prima volta, o l'archiviazione tramite un flag **applicazione Impostazioni**.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> per decidere se selezionare un aggiornamento per il gruppo di file `HelpFiles`. Se uno o più file sono stati aggiornati, chiama il metodo <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> per ottenere le nuove versioni.  
  
 [!code-csharp[ClickOnceAPI#9](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#9)]
 [!code-vb[ClickOnceAPI#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="IsNetworkDeployed">
      <MemberSignature Language="C#" Value="public static bool IsNetworkDeployed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsNetworkDeployed" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsNetworkDeployed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsNetworkDeployed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNetworkDeployed : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'applicazione corrente è un'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</summary>
        <value>
          <see langword="true" /> se si tratta di un'applicazione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si vuole che l'applicazione per l'esecuzione sia all'interno e all'esterno di un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] distribuzione (ad esempio, se è necessario per il debug dell'applicazione nel computer locale prima della distribuzione), il test <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> prima di accedere al <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> proprietà.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> restituirà `true` indipendentemente dal fatto che l'applicazione viene installata o ospitato online e indipendentemente dal fatto che è stato installato da un sito Web, condivisione file o un CD-ROM.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene recuperato <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> usando <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> prima di tutto per assicurarsi che non sia il riferimento `null`.  
  
 [!code-cpp[ClickOnceAPI#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#2)]
 [!code-csharp[ClickOnceAPI#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="TimeOfLastUpdateCheck">
      <MemberSignature Language="C#" Value="public DateTime TimeOfLastUpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeOfLastUpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfLastUpdateCheck As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeOfLastUpdateCheck { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfLastUpdateCheck : DateTime" Usage="System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la data e l'ora in cui [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ha verificato la disponibilità di un aggiornamento dell'applicazione per l'ultima volta.</summary>
        <value>
          <see cref="T:System.DateTime" /> dell'ultima verifica della disponibilità di aggiornamenti.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione può essere configurata per gli aggiornamenti di sottoscrizione. In questo scenario, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] esegue il polling di un percorso di distribuzione applicazione automaticamente a intervalli definiti nel manifesto di distribuzione e determina se è disponibile un aggiornamento. <xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> Restituisce l'ora dell'ultima verifica indipendentemente dal fatto che sia stata avviata da una sottoscrizione usando un controllo esplicito di <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>, o <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> (metodo).  
  
 Se non è stata eseguita alcuna verifica di aggiornamento poiché l'applicazione è stata installata, <xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> restituisce l'ora di installazione.  
  
   
  
## Examples  
 Il codice seguente viene controllato se un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione è stata selezionata la disponibilità di aggiornamenti negli ultimi tre giorni.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <related type="Article" href="https://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc">Scelta di una strategia di aggiornamento ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public bool Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; bool" Usage="applicationDeployment.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avvia in modo sincrono il download e l'installazione dell'ultima versione dell'applicazione.</summary>
        <returns>
          <see langword="true" /> se l'applicazione è stata aggiornata; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'applicazione è considerata aggiornata quando si pubblica una nuova versione dell'applicazione nel percorso specificato da <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, e il numero di versione nel manifesto di distribuzione dell'applicazione è maggiore del numero di versione dell'applicazione attualmente installato nel computer dell'utente.  
  
 Il <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> chiamata non bloccherà fino a quando l'aggiornamento è stato scaricato nel computer client e installato nel [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] memorizzare nella cache; in questo periodo, l'applicazione non sarà reattiva verso utente. Se si desidera mantenere la velocità di risposta dell'applicazione o visualizzare un report di stato durante il download, usare il <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> metodo invece.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> Scarica tutti i file che non siano contrassegnati come "optional" nel manifesto dell'applicazione. È possibile scaricare file facoltativi su richiesta usando il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> o il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> (metodo).  
  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] potrebbe già essere aggiornando l'applicazione automaticamente quando si chiama il <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> metodo; se in questo caso, le chiamate a questo metodo genererà un' <xref:System.InvalidOperationException>.  
  
 Se sono stati aggiornati a uno o più file nella distribuzione, ma non è stato aggiornato il manifesto dell'applicazione, si riceverà un <xref:System.Deployment.Application.InvalidDeploymentException>. La maggior parte dei casi, ridistribuire il [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applicazione risolve questo problema. Si riceverà anche questa eccezione se una firma a chiave pubblica per un manifesto di distribuzione o un manifesto dell'applicazione non valido o mancante.  
  
 Un aggiornamento potrebbe richiedere un livello di attendibilità nel computer locale superiore rispetto alla versione precedente dell'applicazione. Se l'applicazione usa una distribuzione di applicazioni attendibili, il gestore di attendibilità di common language runtime (CLR) viene esaminato il manifesto di distribuzione per determinare se contiene una licenza di attendibilità valida. Se il manifesto di distribuzione non contiene una licenza di attendibilità valida [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] interrompe l'installazione e genera un <xref:System.Deployment.Application.TrustNotGrantedException>. Il <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> metodo mai visualizzerà un prompt dei comandi che chiede all'utente se desidera concedere l'autorizzazione dell'applicazione per l'esecuzione.  
  
   
  
## Examples  
 L'esempio di codice seguente controlla per un aggiornamento dell'applicazione; Se è disponibile un aggiornamento, viene installata in modo sincrono.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">Il computer locale non ha concesso all'applicazione il livello di autorizzazione necessario per l'esecuzione.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">La distribuzione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] è danneggiata. Per suggerimenti su come diagnosticare e correggere il problema, vedere [Risoluzione dei problemi relativi alle distribuzioni ClickOnce](https://msdn.microsoft.com/library/58e90012-f68b-4852-8ae9-58e361cbcc32).</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Non è stato possibile scaricare la nuova distribuzione dal percorso di rete.</exception>
        <exception cref="T:System.InvalidOperationException">È attualmente in corso l'aggiornamento dell'applicazione.</exception>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
        <related type="Article" href="https://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc">Scelta di una strategia di aggiornamento ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/a05b5f2f-d1f2-471a-8096-8b11f7554265">Protezione di applicazioni ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public void UpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsync : unit -&gt; unit" Usage="applicationDeployment.UpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avvia in modo asincrono il download e l'installazione dell'ultima versione dell'applicazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'applicazione è considerata aggiornata quando si pubblica una nuova versione dell'applicazione nel percorso specificato da <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, e il numero di versione nel manifesto di distribuzione dell'applicazione è maggiore del numero di versione dell'applicazione attualmente installato nel computer dell'utente.  
  
 Durante il download dell'aggiornamento [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] genereranno i <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> gestore eventi sul thread principale dell'applicazione per informare l'utente lo stato del download. Quando l'aggiornamento asincrono viene completato o viene rilevata un'eccezione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] genereranno i <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> eventi sul thread principale dell'applicazione. Esaminare il <xref:System.ComponentModel.AsyncCompletedEventArgs> fornito a questo evento per determinare se l'aggiornamento ha avuto esito positivo.  
  
 Se <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> genera un'eccezione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] chiamate <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> e imposta il <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> proprietà di <xref:System.ComponentModel.AsyncCompletedEventArgs> all'eccezione generata.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> Scarica tutti i file in una distribuzione non è contrassegnato come "optional" nel manifesto dell'applicazione. È possibile scaricare file facoltativi su richiesta usando il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> o il <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> (metodo).  
  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] potrebbe già essere aggiornando l'applicazione automaticamente quando si chiama il <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> metodo; se in questo caso, le chiamate a questo metodo genererà un' <xref:System.InvalidOperationException>.  
  
 Se sono stati aggiornati a uno o più file nella distribuzione, ma non è stato aggiornato il manifesto dell'applicazione, si riceverà un <xref:System.Deployment.Application.InvalidDeploymentException>. La maggior parte dei casi, rigenerare il manifesto dell'applicazione risolve questo problema. Si riceverà anche questa eccezione se una firma a chiave pubblica per un manifesto di distribuzione o un manifesto dell'applicazione non valido o mancante.  
  
 Un aggiornamento potrebbe richiedere un livello di attendibilità nel computer locale superiore rispetto alla versione precedente dell'applicazione. Se l'applicazione usa una distribuzione di applicazioni attendibili, il gestore di attendibilità di common language runtime (CLR) viene esaminato il manifesto di distribuzione per determinare se contiene una licenza di attendibilità valida. Se il manifesto di distribuzione non contiene una licenza di attendibilità valida [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] interrompe l'installazione e genera un <xref:System.Deployment.Application.TrustNotGrantedException>. <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> mai visualizzerà un prompt dei comandi in cui viene chiesto all'utente se vuole concedere l'autorizzazione dell'applicazione per l'esecuzione.  
  
   
  
## Examples  
 Esempio di codice seguente determina se un nuovo aggiornamento è disponibile al momento del caricamento dell'applicazione Se è disponibile un aggiornamento obbligatorio, installa l'aggiornamento, in modo asincrono. L'esempio richiede la distribuzione di un'applicazione Windows Form che include un' <xref:System.Windows.Forms.StatusStrip> controllo e che questo controllo contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> controllo denominato `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">Il computer locale non ha concesso all'applicazione il livello di autorizzazione necessario per l'esecuzione.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">La distribuzione [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] è danneggiata. Per suggerimenti su come diagnosticare e correggere il problema, vedere [Risoluzione dei problemi relativi alle distribuzioni ClickOnce](https://msdn.microsoft.com/library/58e90012-f68b-4852-8ae9-58e361cbcc32).</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Non è stato possibile scaricare la nuova distribuzione dal percorso di rete.</exception>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
        <related type="Article" href="https://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc">Scelta di una strategia di aggiornamento ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/a05b5f2f-d1f2-471a-8096-8b11f7554265">Protezione di applicazioni ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void UpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.UpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annulla un aggiornamento asincrono avviato dal metodo <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A> solo Annulla un aggiornamento avviato da una chiamata a <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; non annulla un aggiornamento avviato come parte di una sottoscrizione.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <related type="Article" href="https://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc">Scelta di una strategia di aggiornamento ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ UpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ha completato l'aggiornamento dell'applicazione in seguito a una chiamata al metodo <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> eventi viene chiamato sul thread principale dell'applicazione. È possibile chiamare i controlli Windows Form dell'applicazione direttamente all'interno di questo callback senza generare un'eccezione.  
  
 Verificare i <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> proprietà del <xref:System.ComponentModel.AsyncCompletedEventArgs> fornito a questo callback. Se questa proprietà è `null`, l'installazione sia stata eseguita correttamente; in caso contrario `null`, l'installazione non è riuscita e che è possibile trovare ulteriori informazioni su questo errore di installazione tramite il <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> proprietà. Dopo aver scaricato l'aggiornamento, si dovrà chiamare la <xref:System.Windows.Forms.Application.Restart%2A> metodo su di <xref:System.Windows.Forms.Application> per usare la versione più recente dell'applicazione.  
  
 Se l'installazione dell'aggiornamento è stata annullata da una chiamata a <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>, il <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> proprietà delle <xref:System.ComponentModel.AsyncCompletedEventArgs> corrisponderà alla classe `true`.  
  
 Per utilizzare questo gestore dell'evento, l'applicazione è necessario importare entrambi i <xref:System.Deployment.Application> e <xref:System.ComponentModel> gli spazi dei nomi.  
  
   
  
## Examples  
 Esempio di codice seguente determina in fase di caricamento dell'applicazione se è disponibile un nuovo aggiornamento; Se è disponibile un aggiornamento obbligatorio, installa l'aggiornamento, in modo asincrono. L'esempio richiede la distribuzione di un'applicazione Windows Form che include un' <xref:System.Windows.Forms.StatusStrip> controllo e che questo controllo contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> controllo denominato `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedApplicationFullName">
      <MemberSignature Language="C#" Value="public string UpdatedApplicationFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdatedApplicationFullName" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedApplicationFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdatedApplicationFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedApplicationFullName : string" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome completo dell'applicazione dopo l'aggiornamento.</summary>
        <value>
          <see cref="T:System.String" /> che contiene il nome completo dell'applicazione.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedVersion">
      <MemberSignature Language="C#" Value="public Version UpdatedVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version UpdatedVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ UpdatedVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la versione dell'aggiornamento scaricato di recente.</summary>
        <value>Oggetto <see cref="T:System.Version" /> che indica la versione dell'aggiornamento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> differisce da <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> se un nuovo aggiornamento sia stato installato ma non è stato ancora chiamato <xref:System.Windows.Forms.Application.Restart%2A> nel <xref:System.Windows.Forms.Application>. Se il manifesto di distribuzione dell'applicazione è configurato per eseguire gli aggiornamenti automatici, è possibile confrontare questi due valori per determinare se è necessario riavviare l'applicazione.  
  
 Se l'applicazione non è stata aggiornata, <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> restituisce lo stesso valore <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>.  
  
   
  
## Examples  
 L'esempio di codice seguente definisce un metodo che determina se [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] l'applicazione è stata aggiornata.  
  
 [!code-cpp[ClickOnceAPI#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#4)]
 [!code-csharp[ClickOnceAPI#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#4)]
 [!code-vb[ClickOnceAPI#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocation">
      <MemberSignature Language="C#" Value="public Uri UpdateLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UpdateLocation" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateLocation As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UpdateLocation { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateLocation : Uri" Usage="System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la condivisione file o il sito Web utilizzato per l'aggiornamento automatico da parte dell'applicazione.</summary>
        <value>Il percorso aggiornato, espresso come HTTP, HTTPS o URL di file oppure come percorso di file di rete Windows (UNC).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A> potrebbe essere diverso dal sito Web usato per scaricare l'applicazione inizialmente se la distribuzione dell'applicazione è configurata per usare il reindirizzamento degli aggiornamenti.  
  
 Questo valore può essere modificato solo nel manifesto di distribuzione dell'applicazione.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Per l'accesso completo al computer locale. Enumerazione associata: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <related type="Article" href="https://msdn.microsoft.com/library/7faacd35-2638-492d-80f6-6b57e5f820de">Procedura: specificare un percorso alternativo per gli aggiornamenti della distribuzione</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ UpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando in [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] sono disponibili nuove informazioni sullo stato per un'operazione di aggiornamento avviata mediante una chiamata al metodo <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> eventi viene chiamato sul thread principale dell'applicazione. È possibile chiamare i controlli Windows Form dell'applicazione direttamente all'interno di questo callback senza generare un'eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente determina in fase di caricamento dell'applicazione se è disponibile un nuovo aggiornamento; Se è disponibile un aggiornamento obbligatorio, installa l'aggiornamento, in modo asincrono.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>