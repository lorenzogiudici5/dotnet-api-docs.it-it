<Type Name="ExportLifetimeContext&lt;T&gt;" FullName="System.ComponentModel.Composition.ExportLifetimeContext&lt;T&gt;">
  <TypeSignature Language="C#" Value="public sealed class ExportLifetimeContext&lt;T&gt; : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExportLifetimeContext`1&lt;T&gt; extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ExportLifetimeContext`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExportLifetimeContext(Of T)&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ExportLifetimeContext sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="3ea9f-101">Tipo del valore esportato.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-101">The type of the exported value.</span></span></typeparam>
    <summary><span data-ttu-id="3ea9f-102">Contiene un valore esportato creato da un oggetto <see cref="T:System.ComponentModel.Composition.ExportFactory`1" /> e un riferimento a un metodo per rilasciare tale oggetto.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-102">Holds an exported value created by an <see cref="T:System.ComponentModel.Composition.ExportFactory`1" /> object and a reference to a method to release that object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3ea9f-103">Questo tipo implementa il <xref:System.IDisposable> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="3ea9f-104">Dopo aver utilizzato il tipo, è necessario eliminarlo direttamente o indirettamente.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="3ea9f-105">Per eliminare direttamente il tipo, chiamare il relativo <xref:System.IDisposable.Dispose%2A> metodo in un `try` / `catch` blocco.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="3ea9f-106">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio `using` in C# o `Using` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="3ea9f-107">Per ulteriori informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <xref:System.IDisposable> argomento relativo all'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportLifetimeContext (T value, Action disposeAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T value, class System.Action disposeAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportLifetimeContext`1.#ctor(`0,System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As T, disposeAction As Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportLifetimeContext(T value, Action ^ disposeAction);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="T" />
        <Parameter Name="disposeAction" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3ea9f-108">Valore esportato.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-108">The exported value.</span></span></param>
        <param name="disposeAction"><span data-ttu-id="3ea9f-109">Riferimento a un metodo per rilasciare l'oggetto.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-109">A reference to a method to release the object.</span></span></param>
        <summary><span data-ttu-id="3ea9f-110">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Composition.ExportLifetimeContext`1" />.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-110">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportLifetimeContext`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportLifetimeContext`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ea9f-111">Libera tutte le risorse utilizzate dall'istanza corrente della classe <see cref="T:System.ComponentModel.Composition.ExportLifetimeContext`1" />, inclusa la relativa esportazione associata.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-111">Releases all resources used by the current instance of the <see cref="T:System.ComponentModel.Composition.ExportLifetimeContext`1" /> class, including its associated export.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ea9f-112">La chiamata di `Dispose` metodo di un <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> oggetto chiama il metodo per rilasciare la sua esportazione associata a cui fa riferimento.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-112">Calling the `Dispose` method of a <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> object calls the referenced method to release its associated export.</span></span>  
  
 <span data-ttu-id="3ea9f-113">Chiamare il metodo `Dispose` dopo aver terminato di utilizzare l'oggetto <xref:System.ComponentModel.Composition.ExportLifetimeContext%601>.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-113">Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601>.</span></span> <span data-ttu-id="3ea9f-114">Il metodo `Dispose` lascia l'oggetto <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> in una condizione di inutilizzabilità.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-114">The `Dispose` method leaves the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> in an unusable state.</span></span> <span data-ttu-id="3ea9f-115">Dopo la chiamata `Dispose`, è necessario rilasciare tutti i riferimenti al <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> in modo che il garbage collector può recuperare la memoria che di <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> occupata.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-115">After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> was occupying.</span></span>  
  
 <span data-ttu-id="3ea9f-116">Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](http://go.microsoft.com/fwlink/?LinkId=187455) e [implementazione di un metodo Dispose](http://go.microsoft.com/fwlink/?LinkId=187456).</span><span class="sxs-lookup"><span data-stu-id="3ea9f-116">For more information, see [Cleaning Up Unmanaged Resources](http://go.microsoft.com/fwlink/?LinkId=187455) and [Implementing a Dispose Method](http://go.microsoft.com/fwlink/?LinkId=187456).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3ea9f-117">Chiamare sempre il metodo `Dispose` prima di rilasciare l'ultimo riferimento a <xref:System.ComponentModel.Composition.ExportLifetimeContext%601>.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-117">Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601>.</span></span> <span data-ttu-id="3ea9f-118">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-118">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportLifetimeContext`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ea9f-119">Ottiene il valore esportato di un oggetto <see cref="T:System.ComponentModel.Composition.ExportFactory`1" />.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-119">Gets the exported value of a <see cref="T:System.ComponentModel.Composition.ExportFactory`1" /> object.</span></span></summary>
        <value><span data-ttu-id="3ea9f-120">Valore esportato.</span><span class="sxs-lookup"><span data-stu-id="3ea9f-120">The exported value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>