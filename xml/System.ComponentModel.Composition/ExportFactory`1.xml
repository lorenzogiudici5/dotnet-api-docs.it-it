<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExportFactory`1.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54164bf327c35e9f5ec8f58dbd7a3a12e4108564a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4164bf327c35e9f5ec8f58dbd7a3a12e4108564a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ExportFactory`1">
          <source>The type of the export.</source>
          <target state="translated">Tipo dell'esportazione.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.ExportFactory`1">
          <source>A factory that creates new instances of a part that provides the specified export.</source>
          <target state="translated">Factory che crea nuove istanze di una parte che fornisce l'esportazione specificata.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ExportFactory`1">
          <source>When you refer indirectly to a part by using a <ph id="ph1">&lt;xref:System.Lazy%601&gt;</ph> object, the <ph id="ph2">&lt;xref:System.Lazy%601.Value%2A&gt;</ph> property always returns a reference to the same object.</source>
          <target state="translated">Quando si fa riferimento indirettamente a una parte utilizzando un oggetto <ph id="ph1">&lt;xref:System.Lazy%601&gt;</ph>, la proprietà <ph id="ph2">&lt;xref:System.Lazy%601.Value%2A&gt;</ph> restituisce sempre un riferimento allo stesso oggetto.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ExportFactory`1">
          <source>In some circumstances, you might want each reference to result in the creation of a new object.</source>
          <target state="translated">In alcune circostanze, potrebbe essere necessario che ogni riferimento compaia nella creazione di un nuovo oggetto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ExportFactory`1">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Composition.ExportFactory%601&gt;</ph> is designed for those scenarios.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Composition.ExportFactory%601&gt;</ph> è progettato per gli scenari.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ExportFactory`1">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Composition.ExportFactory%601&gt;</ph> can be used in a similar fashion to <ph id="ph2">&lt;xref:System.Lazy%601&gt;</ph> when creating attributed parts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Composition.ExportFactory%601&gt;</ph> può essere usato in modo simile ai <ph id="ph2">&lt;xref:System.Lazy%601&gt;</ph> quando la creazione con attributi le parti.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ExportFactory`1">
          <source>That is, an import contract that is defined on <ph id="ph1">&lt;xref:System.ComponentModel.Composition.ExportFactory%601&gt;</ph> with a generic parameter of <ph id="ph2">`T`</ph> will match an export that is defined on <ph id="ph3">`T`</ph>.</source>
          <target state="translated">Ciò significa che un contratto di importazione definito in <ph id="ph1">&lt;xref:System.ComponentModel.Composition.ExportFactory%601&gt;</ph> con un parametro generico di <ph id="ph2">`T`</ph> corrisponderà a un'esportazione definita in <ph id="ph3">`T`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ExportFactory`1">
          <source>For example, the follow export and import match:</source>
          <target state="translated">Ad esempio, attenersi alla esportare e importare corrispondenza:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ExportFactory`1">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Composition.ExportFactory%601.CreateExport%2A?displayProperty=nameWithType&gt;</ph> method returns an <ph id="ph2">&lt;xref:System.ComponentModel.Composition.ExportLifetimeContext%601&gt;</ph> object, which has two pieces.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.ComponentModel.Composition.ExportFactory%601.CreateExport%2A?displayProperty=nameWithType&gt;</ph> restituisce un oggetto <ph id="ph2">&lt;xref:System.ComponentModel.Composition.ExportLifetimeContext%601&gt;</ph>, che dispone di due parti.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ExportFactory`1">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Composition.ExportLifetimeContext%601.Value%2A?displayProperty=nameWithType&gt;</ph> property provides access to the created part.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.ComponentModel.Composition.ExportLifetimeContext%601.Value%2A?displayProperty=nameWithType&gt;</ph> consente di accedere alla parte creata.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ExportFactory`1">
          <source>Calling the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.ExportLifetimeContext%601.Dispose%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.ExportLifetimeContext%601&gt;</ph> object cleans up the created part and all of its dependencies, thereby allowing the part's lifetime to be managed without reference to the container that created it.</source>
          <target state="translated">La chiamata al metodo <ph id="ph1">&lt;xref:System.ComponentModel.Composition.ExportLifetimeContext%601.Dispose%2A&gt;</ph> dell'oggetto <ph id="ph2">&lt;xref:System.ComponentModel.Composition.ExportLifetimeContext%601&gt;</ph> pulisce la parte creata e tutte le relative dipendenze, consentendo così che la durata della parte venga gestita senza riferimento al contenitore che l'ha creata.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.ExportFactory`1.#ctor(System.Func{System.Tuple{`0,System.Action}})">
          <source>A function that returns the exported value and an <ph id="ph1">&lt;see cref="T:System.Action" /&gt;</ph> that releases it.</source>
          <target state="translated">Funzione che restituisce il valore esportato e un oggetto <ph id="ph1">&lt;see cref="T:System.Action" /&gt;</ph> che lo rilascia.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.ExportFactory`1.#ctor(System.Func{System.Tuple{`0,System.Action}})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.ExportFactory`1" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.ExportFactory`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.ExportFactory`1.CreateExport">
          <source>Creates an instance of the factory's export type.</source>
          <target state="translated">Crea un'istanza del tipo di esportazione della factory.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.ExportFactory`1.CreateExport">
          <source>A valid instance of the factory's exported type.</source>
          <target state="translated">Istanza valida del tipo esportato della factory.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>