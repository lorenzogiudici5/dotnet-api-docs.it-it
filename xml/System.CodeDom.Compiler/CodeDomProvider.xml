<Type Name="CodeDomProvider" FullName="System.CodeDom.Compiler.CodeDomProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6b363c079585f8a6b7ddeaeb04c81ee9d77dae6d" />
    <Meta Name="ms.sourcegitcommit" Value="69952c4c5555f8f4bed66798cdd71228d3a9eb98" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/18/2018" />
    <Meta Name="ms.locfileid" Value="39104847" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CodeDomProvider : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomProvider extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomProvider&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomProvider abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type CodeDomProvider = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="27f27-101">Fornisce una classe base per le implementazioni di <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27f27-101">Provides a base class for <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations.</span>
      </span>
      <span data-ttu-id="27f27-102">Questa classe è astratta.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27f27-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27f27-103">Oggetto <xref:System.CodeDom.Compiler.CodeDomProvider> può essere utilizzato per creare e recuperare le istanze di generatori di codice e compilatori di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-103">A <xref:System.CodeDom.Compiler.CodeDomProvider> can be used to create and retrieve instances of code generators and code compilers.</span></span> <span data-ttu-id="27f27-104">È possibile utilizzare i generatori di codice per generare codice in un linguaggio particolare e i compilatori di codice per compilare codice in assembly.</span><span class="sxs-lookup"><span data-stu-id="27f27-104">Code generators can be used to generate code in a particular language, and code compilers can be used to compile code into assemblies.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27f27-105">Nel [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], i metodi resi disponibili in Generatore di codice e il compilatore di codice sono disponibili direttamente dal provider di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-105">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the methods made available in the code generator and code compiler are available directly from the code provider.</span></span> <span data-ttu-id="27f27-106">Non è necessario chiamare <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> o <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> per accedere a metodi e i metodi sono contrassegnati come obsoleti.</span><span class="sxs-lookup"><span data-stu-id="27f27-106">You do not need to call <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> or <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> to access the methods, and those methods are marked as obsolete.</span></span> <span data-ttu-id="27f27-107">Questo vale per preesistente, nonché nuove implementazioni di provider di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-107">This applies to preexisting as well as new code provider implementations.</span></span>  
  
 <span data-ttu-id="27f27-108">Oggetto <xref:System.CodeDom.Compiler.CodeDomProvider> implementazione fornisce in genere codice interfacce di compilazione di codice e/o di generazione per la generazione di codice e la gestione della compilazione per un unico linguaggio di programmazione.</span><span class="sxs-lookup"><span data-stu-id="27f27-108">A <xref:System.CodeDom.Compiler.CodeDomProvider> implementation typically provides code generation and/or code compilation interfaces for generating code and managing compilation for a single programming language.</span></span> <span data-ttu-id="27f27-109">Alcuni linguaggi sono supportati da <xref:System.CodeDom.Compiler.CodeDomProvider> implementazioni fornite con il [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)].</span><span class="sxs-lookup"><span data-stu-id="27f27-109">Several languages are supported by <xref:System.CodeDom.Compiler.CodeDomProvider> implementations that ship with the [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)].</span></span> <span data-ttu-id="27f27-110">Questi linguaggi includono C#, Visual Basic, C++ e JScript.</span><span class="sxs-lookup"><span data-stu-id="27f27-110">These languages include C#, Visual Basic, C++, and JScript.</span></span> <span data-ttu-id="27f27-111">I produttori di compilatori o gli sviluppatori possono implementare il <xref:System.CodeDom.Compiler.ICodeGenerator> e <xref:System.CodeDom.Compiler.ICodeCompiler> interfacce e fornire un <xref:System.CodeDom.Compiler.CodeDomProvider> che estende il supporto CodeDOM per altri linguaggi di programmazione.</span><span class="sxs-lookup"><span data-stu-id="27f27-111">Developers or compiler vendors can implement the <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> interfaces and provide a <xref:System.CodeDom.Compiler.CodeDomProvider> that extends CodeDOM support to other programming languages.</span></span>  
  
 <span data-ttu-id="27f27-112">Il [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) nella configurazione del computer (Machine. config) fornisce un meccanismo per gli sviluppatori e i fornitori di compilatori aggiungere impostazioni di configurazione aggiuntive <xref:System.CodeDom.Compiler.CodeDomProvider>implementazioni.</span><span class="sxs-lookup"><span data-stu-id="27f27-112">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) provides a mechanism for developers and compiler vendors to add configuration settings for additional <xref:System.CodeDom.Compiler.CodeDomProvider> implementations.</span></span>  
  
 <span data-ttu-id="27f27-113">Il <xref:System.CodeDom.Compiler.CodeDomProvider> classe fornisce metodi statici per individuare ed enumerare i <xref:System.CodeDom.Compiler.CodeDomProvider> implementazioni in un computer.</span><span class="sxs-lookup"><span data-stu-id="27f27-113">The <xref:System.CodeDom.Compiler.CodeDomProvider> class provides static methods to discover and enumerate the <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer.</span></span> <span data-ttu-id="27f27-114">Il <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> metodo restituisce le impostazioni per tutti i <xref:System.CodeDom.Compiler.CodeDomProvider> implementazioni in un computer.</span><span class="sxs-lookup"><span data-stu-id="27f27-114">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method returns the settings for all <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer.</span></span> <span data-ttu-id="27f27-115">Il <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> metodo restituisce le impostazioni per uno specifico <xref:System.CodeDom.Compiler.CodeDomProvider> implementazione, in base al nome del linguaggio di programmazione.</span><span class="sxs-lookup"><span data-stu-id="27f27-115">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method returns the settings for a specific <xref:System.CodeDom.Compiler.CodeDomProvider> implementation, based on the programming language name.</span></span> <span data-ttu-id="27f27-116">Il <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> metodo restituisce un'istanza di un <xref:System.CodeDom.Compiler.CodeDomProvider> implementazione per una lingua specifica.</span><span class="sxs-lookup"><span data-stu-id="27f27-116">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns an instance of a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a specific language.</span></span>  
  
 <span data-ttu-id="27f27-117">Per altre informazioni dettagliate sulle impostazioni del provider del linguaggio nel file di configurazione, vedere [Schema delle impostazioni Provider di linguaggio e compilatore](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8).</span><span class="sxs-lookup"><span data-stu-id="27f27-117">For more details on language provider settings in the configuration file, see [Compiler and Language Provider Settings Schema](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27f27-118">Questa classe esegue una richiesta di collegamento e una richiesta di ereditarietà a livello di classe.</span><span class="sxs-lookup"><span data-stu-id="27f27-118">This class makes a link demand and an inheritance demand at the class level.</span></span> <span data-ttu-id="27f27-119">Oggetto <xref:System.Security.SecurityException> viene generata un'eccezione se il chiamante immediato o la classe derivata non dispone dell'autorizzazione di attendibilità.</span><span class="sxs-lookup"><span data-stu-id="27f27-119">A <xref:System.Security.SecurityException> is thrown if either the immediate caller or the derived class does not have full trust permission.</span></span> <span data-ttu-id="27f27-120">Per informazioni dettagliate sui requisiti di sicurezza, vedere [linking](~/docs/framework/misc/link-demands.md) e [richieste di ereditarietà](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span><span class="sxs-lookup"><span data-stu-id="27f27-120">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27f27-121">Il programma di esempio seguente può generare e compilare codice sorgente basato su un modello CodeDOM di un programma che visualizza "Hello World" utilizzando il <xref:System.Console> classe.</span><span class="sxs-lookup"><span data-stu-id="27f27-121">The following example program can generate and compile source code based on a CodeDOM model of a program that prints "Hello World" using the <xref:System.Console> class.</span></span> <span data-ttu-id="27f27-122">Viene fornita un'interfaccia utente di Windows Form.</span><span class="sxs-lookup"><span data-stu-id="27f27-122">A Windows Forms user interface is provided.</span></span> <span data-ttu-id="27f27-123">L'utente può selezionare la destinazione tra i diversi linguaggio di programmazione: c#, Visual Basic e JScript.</span><span class="sxs-lookup"><span data-stu-id="27f27-123">The user can select the target programming language from several selections: C#, Visual Basic, and JScript.</span></span>  
  
 [!code-cpp[CodeDomExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#1)]
 [!code-csharp[CodeDomExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#1)]
 [!code-vb[CodeDomExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <span data-ttu-id="27f27-124">per un'attendibilità totale per il chiamante immediato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27f27-124">for full trust for the immediate caller.</span>
      </span>
      <span data-ttu-id="27f27-125">Questa classe non può essere utilizzata da codice parzialmente attendibile.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27f27-125">This class cannot be used by partially trusted code.</span>
      </span>
    </permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="27f27-126">per un'attendibilità totale per gli eredi.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27f27-126">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="27f27-127">Questa classe non può essere ereditata da codice parzialmente attendibile.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27f27-127">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <span data-ttu-id="27f27-128">
        <para>Nelle versioni 1.0 e 1.1 di .NET Framework, i provider di codice sono costituiti da implementazioni di <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, <see cref="T:System.CodeDom.Compiler.ICodeParser" />, e <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />. Nel [! INCLUDE[dnprdnlong](~/Includes/dnprdnlong-MD.MD)], il <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />, <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />, e <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> metodi sono obsoleti e i metodi del <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> e <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> sono direttamente disponibili nel <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> classe. È necessario eseguire l'override di questi metodi nell'implementazione del provider di codice e non chiamare i metodi di base.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="27f27-128">
          <para>In the .NET Framework versions 1.0 and 1.1, code providers consist of implementations of <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, <see cref="T:System.CodeDom.Compiler.ICodeParser" />, and <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />. In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />, <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />, and <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> methods are obsolete, and the methods of <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> and <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> are directly available in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class. You should override those methods in your code provider implementation and not call the base methods.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
    <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
    <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
    <altmember cref="T:Microsoft.JScript.JScriptCodeProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeDomProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeDomProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27f27-129">Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-129">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="27f27-130">per un'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-130">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="27f27-131">Questa classe non può essere utilizzata da codice parzialmente attendibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-131">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromDom">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom (System.CodeDom.Compiler.CompilerParameters options, params System.CodeDom.CodeCompileUnit[] compilationUnits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit[] compilationUnits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromDom (options As CompilerParameters, ParamArray compilationUnits As CodeCompileUnit()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromDom(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::CodeDom::CodeCompileUnit ^&gt; ^ compilationUnits);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromDom : System.CodeDom.Compiler.CompilerParameters * System.CodeDom.CodeCompileUnit[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromDom : System.CodeDom.Compiler.CompilerParameters * System.CodeDom.CodeCompileUnit[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromDom (options, compilationUnits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="compilationUnits" Type="System.CodeDom.CodeCompileUnit[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="27f27-132">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le impostazioni per la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-132">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation.</span>
          </span>
        </param>
        <param name="compilationUnits">
          <span data-ttu-id="27f27-133">Matrice di tipo <see cref="T:System.CodeDom.CodeCompileUnit" /> che indica il codice da compilare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-133">An array of type <see cref="T:System.CodeDom.CodeCompileUnit" /> that indicates the code to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-134">Compila un assembly in base alle strutture ad albero <see cref="N:System.CodeDom" /> contenute nella matrice di oggetti <see cref="T:System.CodeDom.CodeCompileUnit" /> specificata utilizzando le impostazioni del compilatore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-134">Compiles an assembly based on the <see cref="N:System.CodeDom" /> trees contained in the specified array of <see cref="T:System.CodeDom.CodeCompileUnit" /> objects, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-135">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> che indica i risultati della compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-135">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of the compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="27f27-136">Nelle versioni 1.0 e 1.1 di .NET Framework, questo metodo viene fornito per il <xref:System.CodeDom.Compiler.ICodeCompiler> implementazione restituito dal <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> metodo del provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-136">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="27f27-137">Nella versione 2.0, questo metodo può essere chiamato direttamente sul provider di codice anche se non vengono sostituiti dal provider di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-137">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="27f27-138">Se il provider di codice non esegue l'override di questo metodo, il <xref:System.CodeDom.Compiler.ICodeCompiler> implementazione viene chiamata dalla classe di base.</span><span class="sxs-lookup"><span data-stu-id="27f27-138">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="27f27-139">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> vengono sottoposti a override in una classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-139">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="27f27-140">
            <para>Se si esegue l'override di questo metodo, è necessario non chiamare il metodo della classe di base corrispondente. Il metodo di classe di base crea un generatore di nella classe derivata utilizzando l'obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> metodo per la compatibilità con i provider preesistenti che utilizzano i compilatori di codice. Il metodo della classe base chiama quindi il metodo equivalente <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementazione per eseguire questa funzione. Si otterrà un <see cref="T:System.NotImplementedException" /> se si chiama il metodo di classe di base da un provider di codice che non utilizza un compilatore di codice.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-140">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromFile">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile (System.CodeDom.Compiler.CompilerParameters options, params string[] fileNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile(class System.CodeDom.Compiler.CompilerParameters options, string[] fileNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromFile (options As CompilerParameters, ParamArray fileNames As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromFile(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ fileNames);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromFile : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromFile : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromFile (options, fileNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="fileNames" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="27f27-141">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le impostazioni per la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-141">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation.</span>
          </span>
        </param>
        <param name="fileNames">
          <span data-ttu-id="27f27-142">Matrice dei nomi dei file da compilare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-142">An array of the names of the files to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-143">Compila un assembly dal codice sorgente contenuto nei file specificati, utilizzando le impostazioni del compilatore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-143">Compiles an assembly from the source code contained in the specified files, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-144">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> che indica i risultati della compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-144">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="27f27-145">Nelle versioni 1.0 e 1.1 di .NET Framework, questo metodo viene fornito per il <xref:System.CodeDom.Compiler.ICodeCompiler> implementazione restituito dal <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> metodo del provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-145">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="27f27-146">Nella versione 2.0, questo metodo può essere chiamato direttamente sul provider di codice anche se non vengono sostituiti dal provider di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-146">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="27f27-147">Se il provider di codice non esegue l'override di questo metodo, il <xref:System.CodeDom.Compiler.ICodeCompiler> implementazione viene chiamata dalla classe di base.</span><span class="sxs-lookup"><span data-stu-id="27f27-147">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="27f27-148">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> vengono sottoposti a override in una classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-148">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="27f27-149">
            <para>Se si esegue l'override di questo metodo, è necessario non chiamare il metodo della classe di base corrispondente. Il metodo di classe di base crea un generatore di nella classe derivata utilizzando l'obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> metodo per la compatibilità con i provider preesistenti che utilizzano i compilatori di codice. Il metodo della classe base chiama quindi il metodo equivalente <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementazione per eseguire questa funzione. Si otterrà un <see cref="T:System.NotImplementedException" /> se si chiama il metodo di classe di base da un provider di codice che non utilizza un compilatore di codice.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-149">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromSource">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource (System.CodeDom.Compiler.CompilerParameters options, params string[] sources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource(class System.CodeDom.Compiler.CompilerParameters options, string[] sources) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromSource (options As CompilerParameters, ParamArray sources As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromSource(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ sources);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromSource : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromSource : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromSource (options, sources)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="sources" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="27f27-150">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le impostazioni del compilatore per la compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-150">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler settings for this compilation.</span>
          </span>
        </param>
        <param name="sources">
          <span data-ttu-id="27f27-151">Matrice di stringhe del codice sorgente da compilare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-151">An array of source code strings to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-152">Compila un assembly dalla matrice di stringhe specificata contenente il codice sorgente utilizzando le impostazioni del compilatore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-152">Compiles an assembly from the specified array of strings containing source code, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-153">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> che indica i risultati della compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-153">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="27f27-154">Nelle versioni 1.0 e 1.1 di .NET Framework, questo metodo viene fornito per il <xref:System.CodeDom.Compiler.ICodeCompiler> implementazione restituito dal <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> metodo del provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-154">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="27f27-155">Nella versione 2.0, questo metodo può essere chiamato direttamente sul provider di codice anche se non vengono sostituiti dal provider di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-155">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="27f27-156">Se il provider di codice non esegue l'override di questo metodo, il <xref:System.CodeDom.Compiler.ICodeCompiler> implementazione viene chiamata dalla classe di base.</span><span class="sxs-lookup"><span data-stu-id="27f27-156">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="27f27-157">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> vengono sottoposti a override in una classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-157">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="27f27-158">
            <para>Se si esegue l'override di questo metodo, è necessario non chiamare il metodo della classe di base corrispondente. Il metodo di classe di base crea un generatore di nella classe derivata utilizzando l'obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> metodo per la compatibilità con i provider preesistenti che utilizzano i compilatori di codice. Il metodo della classe base chiama quindi il metodo equivalente <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementazione per eseguire questa funzione. Si otterrà un <see cref="T:System.NotImplementedException" /> se si chiama il metodo di classe di base da un provider di codice che non utilizza un compilatore di codice.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-158">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CreateCompiler">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeCompiler CreateCompiler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCompiler () As ICodeCompiler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeCompiler ^ CreateCompiler();" />
      <MemberSignature Language="F#" Value="abstract member CreateCompiler : unit -&gt; System.CodeDom.Compiler.ICodeCompiler" Usage="codeDomProvider.CreateCompiler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeCompiler is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeCompiler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27f27-159">Quando è sottoposto a override in una classe derivata, crea un nuovo compilatore di codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-159">When overridden in a derived class, creates a new code compiler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-160">Oggetto <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> che può essere utilizzato per compilare rappresentazioni del codice sorgente basate su <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-160">An <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> that can be used for compilation of <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27f27-161">Questo metodo è obsoleto nel [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span><span class="sxs-lookup"><span data-stu-id="27f27-161">This method is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="27f27-162">L'alternativa consigliata consiste nel chiamare il <xref:System.CodeDom.Compiler.ICodeCompiler> metodi che sono direttamente disponibili nel provider di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-162">The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeCompiler> methods that are directly available in the code provider.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="27f27-163">
            <para>Nel [! INCLUDE[dnprdnlong](~/Includes/dnprdnlong-MD.MD)], è necessario implementare il <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> i membri nel <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> classe e generano un <see cref="T:System.NotSupportedException" /> quando viene chiamato questo metodo.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-163">
              <para>In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], you should implement the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> members in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class and throw a <see cref="T:System.NotSupportedException" /> when this method is called.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateEscapedIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateEscapedIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateEscapedIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEscapedIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateEscapedIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateEscapedIdentifier : string -&gt; string&#xA;override this.CreateEscapedIdentifier : string -&gt; string" Usage="codeDomProvider.CreateEscapedIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="27f27-164">Stringa per la quale deve essere creato un identificatore di escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-164">The string for which to create an escaped identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-165">Crea un identificatore di escape per il valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-165">Creates an escaped identifier for the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-166">Identificatore di escape per il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-166">The escaped identifier for the value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27f27-167"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A> i test se l'identificatore in conflitto con riservate o parole chiave del linguaggio e in caso affermativo, restituisce un nome equivalente con la formattazione del codice di escape specifiche della lingua.</span><span class="sxs-lookup"><span data-stu-id="27f27-167"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A> tests whether the identifier conflicts with any reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting.</span></span> <span data-ttu-id="27f27-168">Si fa riferimento a un identificatore di escape.</span><span class="sxs-lookup"><span data-stu-id="27f27-168">This is referred to an escaped identifier.</span></span> <span data-ttu-id="27f27-169">Il carattere di escape contiene lo stesso `value` ma dispone di formattazione del codice di escape aggiunti per distinguere l'identificatore dalla parola chiave.</span><span class="sxs-lookup"><span data-stu-id="27f27-169">The escaped identifier contains the same `value` but has escape-code formatting added to differentiate the identifier from the keyword.</span></span> <span data-ttu-id="27f27-170">Nei due esempi di implementazione di `value` con "@" o che raggruppano i `value` con "[" e "]".</span><span class="sxs-lookup"><span data-stu-id="27f27-170">Two implementation examples are preceding the `value` with "@" or bracketing the `value` with "[" and "]".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27f27-171">Nelle versioni 1.0 e 1.1 di .NET Framework, questo metodo viene fornito per il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione restituito dal <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodo del provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-171">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="27f27-172">Nella versione 2.0, questo metodo può essere chiamato direttamente sul provider di codice anche se non vengono sostituiti dal provider di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-172">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="27f27-173">Se il provider di codice non esegue l'override di questo metodo, il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione viene chiamata dalla classe di base.</span><span class="sxs-lookup"><span data-stu-id="27f27-173">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="27f27-174">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-174">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="27f27-175">
            <para>Se si esegue l'override di questo metodo, è necessario non chiamare il metodo della classe di base corrispondente. Il metodo di classe di base crea un generatore di nella classe derivata utilizzando l'obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metodo per la compatibilità con i provider preesistenti che usano i generatori di codice. Il metodo della classe base chiama quindi il metodo equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementazione per eseguire questa funzione. Si otterrà un <see cref="T:System.NotImplementedException" /> se si chiama il metodo di classe di base da un provider di codice che non usa un generatore di codice.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-175">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateGenerator">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27f27-176">Quando è sottoposto a override in una classe derivata, crea un nuovo generatore di codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-176">When overridden in a derived class, creates a new code generator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateGenerator () As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator();" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : unit -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeGenerator is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27f27-177">Quando è sottoposto a override in una classe derivata, crea un nuovo generatore di codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-177">When overridden in a derived class, creates a new code generator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-178">Oggetto <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> che può essere utilizzato per generare rappresentazioni del codice sorgente basate su <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-178">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27f27-179">Questo metodo è obsoleto nel [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span><span class="sxs-lookup"><span data-stu-id="27f27-179">This method is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="27f27-180">L'alternativa consigliata consiste nel chiamare il <xref:System.CodeDom.Compiler.ICodeGenerator> metodi che sono direttamente disponibili nel <xref:System.CodeDom.Compiler.CodeDomProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="27f27-180">The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeGenerator> methods that are directly available in the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="27f27-181">
            <para>Nel [! INCLUDE[dnprdnlong](~/Includes/dnprdnlong-MD.MD)], è necessario implementare il <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> i membri nel <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> classe e generano un <see cref="T:System.NotSupportedException" /> quando viene chiamato questo metodo.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-181">
              <para>In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], you should implement the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> members in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class and throw a <see cref="T:System.NotSupportedException" /> when this method is called.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (output As TextWriter) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : System.IO.TextWriter -&gt; System.CodeDom.Compiler.ICodeGenerator&#xA;override this.CreateGenerator : System.IO.TextWriter -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="27f27-182">Oggetto <see cref="T:System.IO.TextWriter" /> da utilizzare per l'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-182">A <see cref="T:System.IO.TextWriter" /> to use to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-183">Quando è sottoposto a override in una classe derivata, crea un nuovo generatore di codice utilizzando per l'output l'oggetto <see cref="T:System.IO.TextWriter" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-183">When overridden in a derived class, creates a new code generator using the specified <see cref="T:System.IO.TextWriter" /> for output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-184">Oggetto <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> che può essere utilizzato per generare rappresentazioni del codice sorgente basate su <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-184">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27f27-185">Questo metodo Usa l'oggetto specificato <xref:System.IO.TextWriter> per l'output.</span><span class="sxs-lookup"><span data-stu-id="27f27-185">This method uses the specified <xref:System.IO.TextWriter> for output.</span></span> <span data-ttu-id="27f27-186">Questo metodo supporta più la generazione di codice ottimizzato in modo incrementale aggiorna il codice sorgente.</span><span class="sxs-lookup"><span data-stu-id="27f27-186">This method supports more optimized code generation that incrementally updates the source code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27f27-187">L'implementazione della classe base chiama il <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodo, che è obsoleto nel [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] e i risultati un <xref:System.NotSupportedException> se un <xref:System.CodeDom.Compiler.ICodeGenerator> oggetto non viene restituito.</span><span class="sxs-lookup"><span data-stu-id="27f27-187">The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (fileName As String) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : string -&gt; System.CodeDom.Compiler.ICodeGenerator&#xA;override this.CreateGenerator : string -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="27f27-188">Nome file da utilizzare per l'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-188">The file name to output to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-189">Quando è sottoposto a override in una classe derivata, crea un nuovo generatore di codice utilizzando per l'output il nome file specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-189">When overridden in a derived class, creates a new code generator using the specified file name for output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-190">Oggetto <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> che può essere utilizzato per generare rappresentazioni del codice sorgente basate su <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-190">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27f27-191">Questo metodo Usa il nome file specificato per l'output.</span><span class="sxs-lookup"><span data-stu-id="27f27-191">This method uses the specified file name for output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27f27-192">L'implementazione della classe base chiama il <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodo, che è obsoleto nel [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] e i risultati un <xref:System.NotSupportedException> se un <xref:System.CodeDom.Compiler.ICodeGenerator> oggetto non viene restituito.</span><span class="sxs-lookup"><span data-stu-id="27f27-192">The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParser">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeParser CreateParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeParser CreateParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParser () As ICodeParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeParser ^ CreateParser();" />
      <MemberSignature Language="F#" Value="abstract member CreateParser : unit -&gt; System.CodeDom.Compiler.ICodeParser&#xA;override this.CreateParser : unit -&gt; System.CodeDom.Compiler.ICodeParser" Usage="codeDomProvider.CreateParser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeParser is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27f27-193">Quando è sottoposto a override in una classe derivata, crea un nuovo parser di codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-193">When overridden in a derived class, creates a new code parser.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-194">Oggetto <see cref="T:System.CodeDom.Compiler.ICodeParser" /> che può essere utilizzato per analizzare il codice sorgente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-194">An <see cref="T:System.CodeDom.Compiler.ICodeParser" /> that can be used to parse source code.</span>
          </span>
          <span data-ttu-id="27f27-195">L'implementazione di base restituisce sempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-195">The base implementation always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProvider">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27f27-196">Ottiene un'istanza della classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> per il linguaggio specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-196">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member CreateProvider : string -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="System.CodeDom.Compiler.CodeDomProvider.CreateProvider language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="27f27-197">Nome di linguaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-197">The language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-198">Ottiene un'istanza della classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> per il linguaggio specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-198">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-199">Provider CodeDOM implementato per il nome di linguaggio specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-199">A CodeDOM provider that is implemented for the specified language name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="27f27-200">Questo metodo è più comunemente utilizzato per creare un'istanza di un provider di codice in un'applicazione in grado di utilizzare uno dei diversi provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-200">This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</span></span> <span data-ttu-id="27f27-201"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> Consente di specificare in fase di esecuzione il provider di codice che si desidera creare un'istanza.</span><span class="sxs-lookup"><span data-stu-id="27f27-201"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> allows you to specify at run time the code provider you wish to instantiate.</span></span> <span data-ttu-id="27f27-202">Se si conosce in fase di progettazione codice che deve essere utilizzato provider, è necessario creare un'istanza di tale provider di codice anziché utilizzare il <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="27f27-202">If you know at design time which code provider is to be used, you should create an instance of that code provider rather than use the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method.</span></span>  
  
 <span data-ttu-id="27f27-203">Il <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> metodo restituisce un <xref:System.CodeDom.Compiler.CodeDomProvider> istanza per un nome di linguaggio specifico di; è simile alla chiamata di <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> metodo con il tipo di provider del linguaggio.</span><span class="sxs-lookup"><span data-stu-id="27f27-203">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns a <xref:System.CodeDom.Compiler.CodeDomProvider> instance for a specific language name; it is similar to calling the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method with the language provider type.</span></span> <span data-ttu-id="27f27-204">Usare <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> quando si desidera individuare in modo dinamico un'implementazione di provider configurato per un nome di linguaggio.</span><span class="sxs-lookup"><span data-stu-id="27f27-204">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> when you want to dynamically find a configured provider implementation for a language name.</span></span>  
  
 <span data-ttu-id="27f27-205">Se più di un'implementazione di provider è configurata per il nome della lingua <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> restituisce un'istanza del provider per l'ultimo elemento di configurazione corrispondente.</span><span class="sxs-lookup"><span data-stu-id="27f27-205">If more than one provider implementation is configured for the language name, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> returns a provider instance for the last matching configuration element.</span></span>  
  
 <span data-ttu-id="27f27-206">Usare il <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> overload del metodo quando si desidera che un'implementazione del provider del linguaggio specifico.</span><span class="sxs-lookup"><span data-stu-id="27f27-206">Use the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> method overload when you want a specific language provider implementation.</span></span> <span data-ttu-id="27f27-207">Ad esempio, usare il <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> metodo per ottenere un'istanza del provider che supporta il nome della lingua `"CSharp"`; utilizzare il <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> overload del metodo per ottenere un'istanza del provider in modo specifico per il <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> implementazione.</span><span class="sxs-lookup"><span data-stu-id="27f27-207">For example, use the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method to get a provider instance that supports the language name `"CSharp"`; use the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> method overload to get a provider instance specifically for the <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="27f27-208">È consigliabile usare il [\], CultureInfo, oggetto\<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D% 2CSystem.Globalization.CultureInfo%2CSystem.Object%5b%5D%29?displayProperty=nameWithType > metodo se si dispone di più provider di codice per una lingua e si desidera creare un'istanza di un provider di codice specifici.</span><span class="sxs-lookup"><span data-stu-id="27f27-208">You should use the [\], CultureInfo, Object\<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method if you have multiple code providers for a language and you desire to instantiate a specific code provider.</span></span>  
  
 <span data-ttu-id="27f27-209">Il <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> metodo controlla se almeno un'implementazione del provider supporta un linguaggio specifico.</span><span class="sxs-lookup"><span data-stu-id="27f27-209">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language.</span></span> <span data-ttu-id="27f27-210">È possibile convalidare un nome di linguaggio usando <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> prima di passarlo a <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A>.</span><span class="sxs-lookup"><span data-stu-id="27f27-210">You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A>.</span></span> <span data-ttu-id="27f27-211">Se si passa un nome di lingua non supportata da <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> un <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="27f27-211">If you pass an unsupported language name to <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> is thrown.</span></span>  
  
 <span data-ttu-id="27f27-212">Il <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> metodo può essere utilizzato per determinare tutte <xref:System.CodeDom.Compiler.CodeDomProvider> implementazioni in un computer, incluse quelle aggiuntive fornite da sviluppatori e i fornitori di compilatori che sono identificati il [ &lt;System. CodeDom &gt; Elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) nel file di configurazione del computer (Machine. config).</span><span class="sxs-lookup"><span data-stu-id="27f27-212">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method can be used to determine all <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer, including additional implementations provided by developers and compiler vendors that are identified in the [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config).</span></span>  
  
 <span data-ttu-id="27f27-213">Il <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> metodo restituisce un'istanza di un <xref:System.CodeDom.Compiler.CodeDomProvider> implementazione per una lingua specifica.</span><span class="sxs-lookup"><span data-stu-id="27f27-213">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns an instance of a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a specific language.</span></span>  
  
 <span data-ttu-id="27f27-214">I nomi del linguaggio sono tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="27f27-214">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27f27-215">L'esempio di codice seguente determina il <xref:System.CodeDom.Compiler.CodeDomProvider> implementazione per una lingua di input e consente di visualizzare le impostazioni configurate per il provider del linguaggio.</span><span class="sxs-lookup"><span data-stu-id="27f27-215">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="27f27-216">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="27f27-216">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="27f27-217">
            <paramref name="language" /> non è associato a un provider configurato nel computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-217">The <paramref name="language" /> does not have a configured provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27f27-218">L'elemento <paramref name="language" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-218">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="27f27-219">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-219">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="27f27-220">per un'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-220">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="27f27-221">Impossibile usare questo membro in codice parzialmente attendibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-221">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language, System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String, providerOptions As IDictionary(Of String, String)) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberSignature Language="F#" Value="static member CreateProvider : string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="System.CodeDom.Compiler.CodeDomProvider.CreateProvider (language, providerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="27f27-222">Nome di linguaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-222">The language name.</span>
          </span>
        </param>
        <param name="providerOptions">
          <span data-ttu-id="27f27-223">Insieme di opzioni del provider del file di configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-223">A collection of provider options from the configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-224">Ottiene un'istanza di <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> per le opzioni della lingua e del provider specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-224">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language and provider options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-225">Provider CodeDOM implementato per il nome di linguaggio indicato e per le opzioni specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-225">A CodeDOM provider that is implemented for the specified language name and options.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="27f27-226">Questo metodo è più comunemente utilizzato per creare un'istanza di un provider di codice in un'applicazione in grado di utilizzare uno dei diversi provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-226">This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</span></span> <span data-ttu-id="27f27-227"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> Consente di specificare in fase di esecuzione la versione del provider di codice che si desidera creare un'istanza.</span><span class="sxs-lookup"><span data-stu-id="27f27-227"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> enables you to specify at run time the version of the code provider you want to instantiate.</span></span> <span data-ttu-id="27f27-228">Se si conosce in fase di progettazione codice che deve essere utilizzato provider, è necessario creare un'istanza di tale provider di codice invece di usare il <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="27f27-228">If you know at design time which code provider is to be used, you should create an instance of that code provider instead of using the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> method.</span></span>  
  
 <span data-ttu-id="27f27-229">Usare <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> quando si desidera trovare un'implementazione del provider configurato in modo dinamico per una lingua specifica e le opzioni.</span><span class="sxs-lookup"><span data-stu-id="27f27-229">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> when you want to dynamically find a configured provider implementation for a specific language and options.</span></span> <span data-ttu-id="27f27-230">I nomi del linguaggio sono tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="27f27-230">Language names are case-insensitive.</span></span> <span data-ttu-id="27f27-231">Per informazioni sulle opzioni di provider supportati, vedere la documentazione specifica del provider CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="27f27-231">For information about supported provider options, see the specific CodeDOM provider documentation.</span></span>  
  
 <span data-ttu-id="27f27-232">Per informazioni sulla convalida di un provider e la chiamata di un provider se più di un'implementazione di provider è configurata per il nome della lingua, vedere la sezione Osservazioni del <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="27f27-232">For information about validating a provider and calling a provider if more than one provider implementation is configured for the language name, see the Remarks section of the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27f27-233">Nell'esempio seguente viene illustrato come creare un'istanza di un provider tramite il `providerOptions` parametro.</span><span class="sxs-lookup"><span data-stu-id="27f27-233">The following example shows how to create an instance of a provider by using the `providerOptions` parameter.</span></span>  
  
 [!code-csharp[CodeDomProvider.ProviderOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR/codedomprovider.provideroptions/cs/program.cs#1)]
 [!code-vb[CodeDomProvider.ProviderOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/codedomprovider.provideroptions/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateValidIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateValidIdentifier : string -&gt; string&#xA;override this.CreateValidIdentifier : string -&gt; string" Usage="codeDomProvider.CreateValidIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="27f27-234">Stringa per la quale deve essere generato un identificatore valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-234">The string for which to generate a valid identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-235">Crea un identificatore valido per il valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-235">Creates a valid identifier for the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-236">Identificatore valido per il valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-236">A valid identifier for the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27f27-237"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A> verifica se l'identificatore in conflitto con riservate o parole chiave del linguaggio, e in tal caso, tenta di restituire un identificatore valido. nome che non sia in conflitto.</span><span class="sxs-lookup"><span data-stu-id="27f27-237"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A> tests whether the identifier conflicts with reserved or language keywords, and if so, attempts to return a valid identifier name that does not conflict.</span></span> <span data-ttu-id="27f27-238">In genere l'identificatore restituito sia solo lievemente modificato per contraddistinguere l'identificatore dalla parola chiave; ad esempio, il nome potrebbe essere preceduto dal carattere di sottolineatura ("_").</span><span class="sxs-lookup"><span data-stu-id="27f27-238">Usually the returned identifier is only slightly modified to differentiate the identifier from the keyword; for example, the name might be preceded by the underscore ("_") character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27f27-239">Nelle versioni 1.0 e 1.1 di .NET Framework, questo metodo viene fornito per il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione restituito dal <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodo del provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-239">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="27f27-240">Nella versione 2.0, questo metodo può essere chiamato direttamente sul provider di codice anche se non vengono sostituiti dal provider di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-240">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="27f27-241">Se il provider di codice non esegue l'override di questo metodo, il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione viene chiamata dalla classe di base.</span><span class="sxs-lookup"><span data-stu-id="27f27-241">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="27f27-242">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-242">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="27f27-243">
            <para>Se si esegue l'override di questo metodo, è necessario non chiamare il metodo della classe di base corrispondente. Il metodo di classe di base crea un generatore di nella classe derivata utilizzando l'obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metodo per la compatibilità con i provider preesistenti che usano i generatori di codice. Il metodo della classe base chiama quindi il metodo equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementazione per eseguire questa funzione. Si otterrà un <see cref="T:System.NotImplementedException" /> se si chiama il metodo di classe di base da un provider di codice che non usa un generatore di codice.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-243">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FileExtension">
      <MemberSignature Language="C#" Value="public virtual string FileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtension" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FileExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FileExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileExtension : string" Usage="System.CodeDom.Compiler.CodeDomProvider.FileExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27f27-244">Ottiene l'estensione del nome file predefinita da utilizzare per i file di origine nel linguaggio corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-244">Gets the default file name extension to use for source code files in the current language.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27f27-245">Estensione del nome file corrispondente all'estensione dei file di origine del linguaggio corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-245">A file name extension corresponding to the extension of the source files of the current language.</span>
          </span>
          <span data-ttu-id="27f27-246">L'implementazione di base restituisce sempre <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-246">The base implementation always returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27f27-247">Questa proprietà viene utilizzata per i generatori di codice e compilatori di codice per indicare quali estensioni di file devono essere generate o utilizzate.</span><span class="sxs-lookup"><span data-stu-id="27f27-247">This property is used by code generators and code compilers to indicate what file extensions should be generated or used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27f27-248">L'esempio di codice seguente crea un'istanza di <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="27f27-248">The following code example creates an instance of <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span></span> <span data-ttu-id="27f27-249">L'esempio visualizza il nome del provider, hash predefinito e codice di estensione di file per la nuova istanza del provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-249">The example displays the provider name, hash code and default file name extension for the new provider instance.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#3)]
 [!code-csharp[CodeDom_CompilerInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#3)]
 [!code-vb[CodeDom_CompilerInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromCompileUnit">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit compileUnit, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromCompileUnit(class System.CodeDom.CodeCompileUnit compileUnit, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromCompileUnit (compileUnit As CodeCompileUnit, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromCompileUnit(System::CodeDom::CodeCompileUnit ^ compileUnit, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromCompileUnit : System.CodeDom.CodeCompileUnit * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromCompileUnit : System.CodeDom.CodeCompileUnit * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromCompileUnit (compileUnit, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="compileUnit">
          <span data-ttu-id="27f27-250">Oggetto <see cref="T:System.CodeDom.CodeCompileUnit" /> per il quale deve essere generato il codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-250">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="27f27-251">Oggetto <see cref="T:System.IO.TextWriter" /> a cui viene inviato il codice di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-251">The <see cref="T:System.IO.TextWriter" /> to which the output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="27f27-252">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> che indica le opzioni da utilizzare per la generazione del codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-252">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-253">Genera il codice per l'unità di compilazione CodeDOM (Code Document Object Model) specificata e lo invia al writer di testo indicato utilizzando le opzioni selezionate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-253">Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="27f27-254">Nelle versioni 1.0 e 1.1 di .NET Framework, questo metodo viene fornito per il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione restituito dal <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodo del provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-254">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="27f27-255">Nella versione 2.0, questo metodo può essere chiamato direttamente sul provider di codice anche se non vengono sostituiti dal provider di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-255">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="27f27-256">Se il provider di codice non esegue l'override di questo metodo, il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione viene chiamata dalla classe di base.</span><span class="sxs-lookup"><span data-stu-id="27f27-256">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27f27-257">Esempio di codice seguente viene illustrato l'utilizzo dei <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A> metodo per generare codice per un'applicazione "Hello World" da un <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="27f27-257">The following code example shows the use of the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A> method to generate code for a "Hello World" application from a <xref:System.CodeDom.CodeCompileUnit>.</span></span> <span data-ttu-id="27f27-258">In questo esempio fa parte di un esempio più esaustivo disponibile per il <xref:System.CodeDom.Compiler.CodeDomProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="27f27-258">This example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 [!code-cpp[CodeDomExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#3)]
 [!code-csharp[CodeDomExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#3)]
 [!code-vb[CodeDomExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="27f27-259">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-259">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="27f27-260">
            <para>Se si esegue l'override di questo metodo, è necessario non chiamare il metodo della classe di base corrispondente. Il metodo di classe di base crea un generatore di nella classe derivata utilizzando l'obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metodo per la compatibilità con i provider preesistenti che usano i generatori di codice. Il metodo della classe base chiama quindi il metodo equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementazione per eseguire questa funzione. Si otterrà un <see cref="T:System.NotImplementedException" /> se si chiama il metodo di classe di base da un provider di codice che non usa un generatore di codice.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-260">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromExpression">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromExpression (System.CodeDom.CodeExpression expression, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromExpression(class System.CodeDom.CodeExpression expression, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromExpression (expression As CodeExpression, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromExpression(System::CodeDom::CodeExpression ^ expression, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromExpression : System.CodeDom.CodeExpression * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromExpression : System.CodeDom.CodeExpression * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromExpression (expression, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="27f27-261">Oggetto <see cref="T:System.CodeDom.CodeExpression" /> che indica l'espressione per la quale deve essere generato il codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-261">A <see cref="T:System.CodeDom.CodeExpression" /> object that indicates the expression for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="27f27-262">Oggetto <see cref="T:System.IO.TextWriter" /> a cui viene inviato il codice di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-262">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="27f27-263">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> che indica le opzioni da utilizzare per la generazione del codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-263">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-264">Genera il codice per l'espressione CodeDOM (Code Document Object Model) specificata e lo invia al writer di testo indicato utilizzando le opzioni selezionate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-264">Generates code for the specified Code Document Object Model (CodeDOM) expression and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="27f27-265">Nelle versioni 1.0 e 1.1 di .NET Framework, questo metodo viene fornito per il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione restituito dal <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodo del provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-265">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="27f27-266">Nella versione 2.0, questo metodo può essere chiamato direttamente sul provider di codice anche se non vengono sostituiti dal provider di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-266">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="27f27-267">Se il provider di codice non esegue l'override di questo metodo, il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione viene chiamata dalla classe di base.</span><span class="sxs-lookup"><span data-stu-id="27f27-267">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="27f27-268">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-268">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="27f27-269">
            <para>Se si esegue l'override di questo metodo, è necessario non chiamare il metodo della classe di base corrispondente. Il metodo di classe di base crea un generatore di nella classe derivata utilizzando l'obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metodo per la compatibilità con i provider preesistenti che usano i generatori di codice. Il metodo della classe base chiama quindi il metodo equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementazione per eseguire questa funzione. Si otterrà un <see cref="T:System.NotImplementedException" /> se si chiama il metodo di classe di base da un provider di codice che non usa un generatore di codice.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-269">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromMember">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromMember (member As CodeTypeMember, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromMember(System::CodeDom::CodeTypeMember ^ member, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromMember (member, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="27f27-270">Oggetto <see cref="T:System.CodeDom.CodeTypeMember" /> che indica il membro per il quale deve essere generato il codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-270">A <see cref="T:System.CodeDom.CodeTypeMember" /> object that indicates the member for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="27f27-271">Oggetto <see cref="T:System.IO.TextWriter" /> a cui viene inviato il codice di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-271">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="27f27-272">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> che indica le opzioni da utilizzare per la generazione del codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-272">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-273">Genera il codice per la dichiarazione di membro CodeDOM (Code Document Object Model) specificata e lo invia al writer di testo indicato utilizzando le opzioni selezionate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-273">Generates code for the specified Code Document Object Model (CodeDOM) member declaration and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27f27-274">Implementazione della classe base genera un <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="27f27-274">The base class implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="27f27-275">Vedere <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType> per la documentazione che descrive un'implementazione di questo metodo.</span><span class="sxs-lookup"><span data-stu-id="27f27-275">See <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType> for documentation describing an implementation of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27f27-276">Esempio di codice seguente viene illustrato l'utilizzo dei <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> metodo come implementato dal <xref:Microsoft.CSharp.CSharpCodeProvider> e <xref:Microsoft.VisualBasic.VBCodeProvider> classi.</span><span class="sxs-lookup"><span data-stu-id="27f27-276">The following code example shows the use of the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> method as implemented by the <xref:Microsoft.CSharp.CSharpCodeProvider> and <xref:Microsoft.VisualBasic.VBCodeProvider> classes.</span></span>  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#1)]
 [!code-vb[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="27f27-277">Il metodo non viene sottoposto a override in una classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-277">This method is not overridden in a derived class.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromNamespace">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromNamespace (System.CodeDom.CodeNamespace codeNamespace, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromNamespace(class System.CodeDom.CodeNamespace codeNamespace, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromNamespace(System::CodeDom::CodeNamespace ^ codeNamespace, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromNamespace : System.CodeDom.CodeNamespace * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromNamespace : System.CodeDom.CodeNamespace * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromNamespace (codeNamespace, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">
          <span data-ttu-id="27f27-278">Oggetto <see cref="T:System.CodeDom.CodeNamespace" /> che indica lo spazio dei nomi per il quale deve essere generato il codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-278">A <see cref="T:System.CodeDom.CodeNamespace" /> object that indicates the namespace for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="27f27-279">Oggetto <see cref="T:System.IO.TextWriter" /> a cui viene inviato il codice di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-279">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="27f27-280">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> che indica le opzioni da utilizzare per la generazione del codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-280">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-281">Genera il codice per lo spazio dei nomi CodeDOM (Code Document Object Model) specificato e lo invia al writer di testo indicato utilizzando le opzioni selezionate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-281">Generates code for the specified Code Document Object Model (CodeDOM) namespace and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="27f27-282">Nelle versioni 1.0 e 1.1 di .NET Framework, questo metodo viene fornito per il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione restituito dal <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodo del provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-282">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="27f27-283">Nella versione 2.0, questo metodo può essere chiamato direttamente sul provider di codice anche se non vengono sostituiti dal provider di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-283">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="27f27-284">Se il provider di codice non esegue l'override di questo metodo, il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione viene chiamata dalla classe di base.</span><span class="sxs-lookup"><span data-stu-id="27f27-284">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="27f27-285">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-285">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="27f27-286">
            <para>Se si esegue l'override di questo metodo, è necessario non chiamare il metodo della classe di base corrispondente. Il metodo di classe di base crea un generatore di nella classe derivata utilizzando l'obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metodo per la compatibilità con i provider preesistenti che usano i generatori di codice. Il metodo della classe base chiama quindi il metodo equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementazione per eseguire questa funzione. Si otterrà un <see cref="T:System.NotImplementedException" /> se si chiama il metodo di classe di base da un provider di codice che non usa un generatore di codice.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-286">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeNamespace" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromStatement">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromStatement (System.CodeDom.CodeStatement statement, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromStatement(class System.CodeDom.CodeStatement statement, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromStatement (statement As CodeStatement, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromStatement(System::CodeDom::CodeStatement ^ statement, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromStatement : System.CodeDom.CodeStatement * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromStatement : System.CodeDom.CodeStatement * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromStatement (statement, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="statement">
          <span data-ttu-id="27f27-287">Oggetto <see cref="T:System.CodeDom.CodeStatement" /> contenente gli elementi CodeDOM per i quali deve essere generato il codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-287">A <see cref="T:System.CodeDom.CodeStatement" /> containing the CodeDOM elements for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="27f27-288">Oggetto <see cref="T:System.IO.TextWriter" /> a cui viene inviato il codice di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-288">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="27f27-289">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> che indica le opzioni da utilizzare per la generazione del codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-289">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-290">Genera il codice per l'istruzione CodeDOM (Code Document Object Model) specificata e lo invia al writer di testo indicato utilizzando le opzioni selezionate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-290">Generates code for the specified Code Document Object Model (CodeDOM) statement and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="27f27-291">Nelle versioni 1.0 e 1.1 di .NET Framework, questo metodo viene fornito per il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione restituito dal <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodo del provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-291">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="27f27-292">Nella versione 2.0, questo metodo può essere chiamato direttamente sul provider di codice anche se non vengono sostituiti dal provider di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-292">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="27f27-293">Se il provider di codice non esegue l'override di questo metodo, il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione viene chiamata dalla classe di base.</span><span class="sxs-lookup"><span data-stu-id="27f27-293">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="27f27-294">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-294">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="27f27-295">
            <para>Se si esegue l'override di questo metodo, è necessario non chiamare il metodo della classe di base corrispondente. Il metodo di classe di base crea un generatore di nella classe derivata utilizzando l'obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metodo per la compatibilità con i provider preesistenti che usano i generatori di codice. Il metodo della classe base chiama quindi il metodo equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementazione per eseguire questa funzione. Si otterrà un <see cref="T:System.NotImplementedException" /> se si chiama il metodo di classe di base da un provider di codice che non usa un generatore di codice.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-295">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromType">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration codeType, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromType(class System.CodeDom.CodeTypeDeclaration codeType, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromType (codeType As CodeTypeDeclaration, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromType(System::CodeDom::CodeTypeDeclaration ^ codeType, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromType : System.CodeDom.CodeTypeDeclaration * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromType : System.CodeDom.CodeTypeDeclaration * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromType (codeType, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="codeType">
          <span data-ttu-id="27f27-296">Oggetto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> che indica il tipo per il quale deve essere generato il codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-296">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object that indicates the type for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="27f27-297">Oggetto <see cref="T:System.IO.TextWriter" /> a cui viene inviato il codice di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-297">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="27f27-298">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> che indica le opzioni da utilizzare per la generazione del codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-298">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-299">Genera il codice per la dichiarazione di tipo CodeDOM (Code Document Object Model) specificata e lo invia al writer di testo indicato utilizzando le opzioni selezionate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-299">Generates code for the specified Code Document Object Model (CodeDOM) type declaration and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="27f27-300">Nelle versioni 1.0 e 1.1 di .NET Framework, questo metodo viene fornito per il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione restituito dal <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodo del provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-300">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="27f27-301">Nella versione 2.0, questo metodo può essere chiamato direttamente sul provider di codice anche se non vengono sostituiti dal provider di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-301">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="27f27-302">Se il provider di codice non esegue l'override di questo metodo, il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione viene chiamata dalla classe di base.</span><span class="sxs-lookup"><span data-stu-id="27f27-302">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="27f27-303">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-303">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="27f27-304">
            <para>Se si esegue l'override di questo metodo, è necessario non chiamare il metodo della classe di base corrispondente. Il metodo di classe di base crea un generatore di nella classe derivata utilizzando l'obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metodo per la compatibilità con i provider preesistenti che usano i generatori di codice. Il metodo della classe base chiama quindi il metodo equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementazione per eseguire questa funzione. Si otterrà un <see cref="T:System.NotImplementedException" /> se si chiama il metodo di classe di base da un provider di codice che non usa un generatore di codice.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-304">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GetAllCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllCompilerInfo () As CompilerInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::CodeDom::Compiler::CompilerInfo ^&gt; ^ GetAllCompilerInfo();" />
      <MemberSignature Language="F#" Value="static member GetAllCompilerInfo : unit -&gt; System.CodeDom.Compiler.CompilerInfo[]" Usage="System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27f27-305">Restituisce le impostazioni di configurazione del compilatore e del provider del linguaggio per il computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-305">Returns the language provider and compiler configuration settings for this computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-306">Una matrice di tipo <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> che rappresenta le impostazioni di tutte le implementazioni di <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-306">An array of type <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> representing the settings of all configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27f27-307">Usare il <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> metodo per enumerare le impostazioni del provider del linguaggio in un computer.</span><span class="sxs-lookup"><span data-stu-id="27f27-307">Use the <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method to enumerate the language provider settings on a computer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27f27-308">Nel [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], il provider di linguaggi predefiniti forniti da .NET Framework non incluse nel [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) configurazione del compilatore sezione e non può essere rimosso, pertanto questo metodo restituisce informazioni sui provider predefiniti ed eventuali specificato nel file di configurazione.</span><span class="sxs-lookup"><span data-stu-id="27f27-308">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the default language providers supplied by the .NET Framework are not specified in the [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) compiler configuration section and cannot be removed, so this method returns information about the default providers and any specified in the configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27f27-309">Esempio di codice seguente enumera i provider del linguaggio nel computer e vengono visualizzate le impostazioni di configurazione e del compilatore per ogni provider del linguaggio.</span><span class="sxs-lookup"><span data-stu-id="27f27-309">The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider.</span></span> <span data-ttu-id="27f27-310">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="27f27-310">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="27f27-311">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-311">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="27f27-312">per un'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-312">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="27f27-313">Impossibile usare questo membro in codice parzialmente attendibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-313">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo GetCompilerInfo (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo GetCompilerInfo(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompilerInfo (language As String) As CompilerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CompilerInfo ^ GetCompilerInfo(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member GetCompilerInfo : string -&gt; System.CodeDom.Compiler.CompilerInfo" Usage="System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="27f27-314">Nome di linguaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-314">A language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-315">Restituisce le impostazioni di configurazione del compilatore e del provider del linguaggio per il linguaggio specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-315">Returns the language provider and compiler configuration settings for the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-316">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> in cui sono inserite le impostazioni dell'implementazione della classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-316">A <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> object populated with settings of the configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27f27-317">Il [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) nella configurazione della macchina file contiene le impostazioni di configurazione del compilatore e del provider del linguaggio per ogni <xref:System.CodeDom.Compiler.CodeDomProvider> implementazione nel computer.</span><span class="sxs-lookup"><span data-stu-id="27f27-317">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="27f27-318">Per informazioni sui file di configurazione di computer, vedere la sezione file di configurazione macchina in [configurazione delle app](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f).</span><span class="sxs-lookup"><span data-stu-id="27f27-318">For information about machine configuration files, see the Machine Configuration Files section in [Configuring Apps](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f).</span></span> <span data-ttu-id="27f27-319">Il <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> Cerca in ogni elemento di configurazione del provider per il nome della lingua specificata.</span><span class="sxs-lookup"><span data-stu-id="27f27-319">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method searches each provider configuration element for the specified language name.</span></span> <span data-ttu-id="27f27-320">L'oggetto restituito <xref:System.CodeDom.Compiler.CompilerInfo> istanza contiene le impostazioni di lingua configurate del provider e del compilatore.</span><span class="sxs-lookup"><span data-stu-id="27f27-320">The returned <xref:System.CodeDom.Compiler.CompilerInfo> instance contains the configured language provider and compiler settings.</span></span>  
  
 <span data-ttu-id="27f27-321">Il <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> metodo controlla se almeno un'implementazione del provider supporta un linguaggio specifico.</span><span class="sxs-lookup"><span data-stu-id="27f27-321">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language.</span></span> <span data-ttu-id="27f27-322">È possibile convalidare un nome di linguaggio usando <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> prima di passarlo a <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>.</span><span class="sxs-lookup"><span data-stu-id="27f27-322">You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>.</span></span> <span data-ttu-id="27f27-323">Ciò impedisce la generazione di un <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> quando si accede di <xref:System.CodeDom.Compiler.CompilerInfo> istanza per il nome di lingua non supportata.</span><span class="sxs-lookup"><span data-stu-id="27f27-323">This prevents throwing a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> when you access the <xref:System.CodeDom.Compiler.CompilerInfo> instance for an unsupported language name.</span></span>  
  
 <span data-ttu-id="27f27-324">Se più di un'implementazione di provider è configurata per il nome di lingua di input, <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> restituisce le impostazioni dal provider corrispondente ultimo elemento di configurazione.</span><span class="sxs-lookup"><span data-stu-id="27f27-324">If more than one provider implementation is configured for the input language name, <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> returns the settings from the last matching provider configuration element.</span></span>  
  
 <span data-ttu-id="27f27-325">I nomi del linguaggio sono tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="27f27-325">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27f27-326">L'esempio di codice seguente determina il <xref:System.CodeDom.Compiler.CodeDomProvider> implementazione per una lingua di input e consente di visualizzare le impostazioni configurate per il provider del linguaggio.</span><span class="sxs-lookup"><span data-stu-id="27f27-326">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="27f27-327">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="27f27-327">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">
          <span data-ttu-id="27f27-328">
            <paramref name="language" /> non è associato a un provider configurato nel computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-328">The <paramref name="language" /> does not have a configured provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="27f27-329">L'elemento <paramref name="language" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-329">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="27f27-330">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-330">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="27f27-331">per un'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-331">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="27f27-332">Impossibile usare questo membro in codice parzialmente attendibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-332">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetConverter : Type -&gt; System.ComponentModel.TypeConverter&#xA;override this.GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="codeDomProvider.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="27f27-333">Tipo di oggetto per il quale recuperare un convertitore di tipi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-333">The type of object to retrieve a type converter for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-334">Ottiene un <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo di dati specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-334">Gets a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-335">Un <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo specificato oppure <see langword="null" /> se non è possibile trovare un <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-335">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type, or <see langword="null" /> if a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27f27-336">Una classe derivata può eseguire l'override di questo metodo per fornire tipi di convertitori di tipi specifici per i tipi di dati specifico.</span><span class="sxs-lookup"><span data-stu-id="27f27-336">A derived class can override this method to provide specific types of type converters for specific data types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguageFromExtension">
      <MemberSignature Language="C#" Value="public static string GetLanguageFromExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLanguageFromExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLanguageFromExtension (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetLanguageFromExtension(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="static member GetLanguageFromExtension : string -&gt; string" Usage="System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="27f27-337">Estensione di file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-337">A file name extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-338">Restituisce un nome di linguaggio associato all'estensione di file specificata, in base alle impostazioni nella sezione di configurazione del compilatore <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-338">Returns a language name associated with the specified file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration section.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-339">Nome di linguaggio associato all'estensione di file, in base alle impostazioni di configurazione del compilatore <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-339">A language name associated with the file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration settings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27f27-340">Il [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) nella configurazione del computer (Machine. config) contiene le impostazioni di configurazione del compilatore e del provider del linguaggio per ogni <xref:System.CodeDom.Compiler.CodeDomProvider> implementazione di computer.</span><span class="sxs-lookup"><span data-stu-id="27f27-340">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="27f27-341">Il <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> Cerca in ogni elemento di configurazione del provider per l'estensione del nome file specificato.</span><span class="sxs-lookup"><span data-stu-id="27f27-341">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> method searches each provider configuration element for the specified file name extension.</span></span>  
  
 <span data-ttu-id="27f27-342">Il <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> metodo controlla se l'implementazione di almeno un provider supporta un'estensione di file specifico.</span><span class="sxs-lookup"><span data-stu-id="27f27-342">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> method checks whether at least one provider implementation supports a specific file name extension.</span></span> <span data-ttu-id="27f27-343">È possibile convalidare un'estensione di file mediante <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> prima di passarlo a <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="27f27-343">You can validate a file name extension using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A>.</span></span> <span data-ttu-id="27f27-344">Ciò impedisce <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> generi un <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> per un'estensione del nome file non è supportato.</span><span class="sxs-lookup"><span data-stu-id="27f27-344">This prevents <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> from throwing a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> for an unsupported file name extension.</span></span>  
  
 <span data-ttu-id="27f27-345">Se un'implementazione del provider supporta l'estensione del nome file di input e più linguaggi supportati sono configurate per i provider, quindi <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> restituisce il primo nome di linguaggio per tale provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-345">If a provider implementation supports the input file name extension, and there are multiple supported languages configured for that provider, then <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> returns the first language name for that provider.</span></span> <span data-ttu-id="27f27-346">Se più di un'implementazione di provider è configurata per l'estensione del nome file di input, <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> restituisce il nome della lingua dall'ultimo provider corrisponda elemento di configurazione.</span><span class="sxs-lookup"><span data-stu-id="27f27-346">If more than one provider implementation is configured for the input file name extension, <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> returns the language name from the last matching provider configuration element.</span></span>  
  
 <span data-ttu-id="27f27-347">I nomi di lingua e le estensioni di file sono tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="27f27-347">Language names and file name extensions are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27f27-348">L'esempio di codice seguente determina il <xref:System.CodeDom.Compiler.CodeDomProvider> implementazione per un'estensione del nome file di input e consente di visualizzare le impostazioni configurate per il provider del linguaggio.</span><span class="sxs-lookup"><span data-stu-id="27f27-348">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider.</span></span> <span data-ttu-id="27f27-349">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="27f27-349">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">
          <span data-ttu-id="27f27-350">
            <paramref name="extension" /> non è associato a un provider configurato nel computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-350">The <paramref name="extension" /> does not have a configured language provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="27f27-351">L'elemento <paramref name="extension" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-351">The <paramref name="extension" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="27f27-352">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-352">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="27f27-353">per un'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-353">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="27f27-354">Impossibile usare questo membro in codice parzialmente attendibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-354">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeOutput">
      <MemberSignature Language="C#" Value="public virtual string GetTypeOutput (System.CodeDom.CodeTypeReference type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTypeOutput(class System.CodeDom.CodeTypeReference type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeOutput (type As CodeTypeReference) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetTypeOutput(System::CodeDom::CodeTypeReference ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeOutput : System.CodeDom.CodeTypeReference -&gt; string&#xA;override this.GetTypeOutput : System.CodeDom.CodeTypeReference -&gt; string" Usage="codeDomProvider.GetTypeOutput type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="27f27-355">Oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-355">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-356">Ottiene il tipo indicato dall'oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-356">Gets the type indicated by the specified <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-357">Rappresentazione testo del tipo specificato, formattata per il linguaggio in cui viene generato il codice dal generatore di codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-357">A text representation of the specified type, formatted for the language in which code is generated by this code generator.</span>
          </span>
          <span data-ttu-id="27f27-358">In Visual Basic ad esempio se si passa un oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> per il tipo <see cref="T:System.Int32" /> viene restituito "Integer".</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-358">In Visual Basic, for example, passing in a <see cref="T:System.CodeDom.CodeTypeReference" /> for the <see cref="T:System.Int32" /> type will return "Integer".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="27f27-359">Nelle versioni 1.0 e 1.1 di .NET Framework, questo metodo viene fornito per il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione restituito dal <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodo del provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-359">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="27f27-360">Nella versione 2.0, questo metodo può essere chiamato direttamente sul provider di codice anche se non vengono sostituiti dal provider di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-360">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="27f27-361">Se il provider di codice non esegue l'override di questo metodo, il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione viene chiamata dalla classe di base.</span><span class="sxs-lookup"><span data-stu-id="27f27-361">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="27f27-362">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-362">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="27f27-363">
            <para>Se si esegue l'override di questo metodo, è necessario non chiamare il metodo della classe di base corrispondente. Il metodo di classe di base crea un generatore di nella classe derivata utilizzando l'obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metodo per la compatibilità con i provider preesistenti che usano i generatori di codice. Il metodo della classe base chiama quindi il metodo equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementazione per eseguire questa funzione. Si otterrà un <see cref="T:System.NotImplementedException" /> se si chiama il metodo di classe di base da un provider di codice che non usa un generatore di codice.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-363">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDefinedExtension">
      <MemberSignature Language="C#" Value="public static bool IsDefinedExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedExtension (extension As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedExtension(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="static member IsDefinedExtension : string -&gt; bool" Usage="System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="27f27-364">Estensione di file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-364">A file name extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-365">Verifica se un'estensione di file è associata a un'implementazione della classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurata nel computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-365">Tests whether a file name extension has an associated <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-366">
            <see langword="true" /> se un'implementazione di <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> è configurata per l'estensione di file specificata; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-366">
              <see langword="true" /> if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified file name extension; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27f27-367">Il [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) nella configurazione del computer (Machine. config) contiene le impostazioni di configurazione del compilatore e del provider del linguaggio per ogni <xref:System.CodeDom.Compiler.CodeDomProvider> implementazione di computer.</span><span class="sxs-lookup"><span data-stu-id="27f27-367">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="27f27-368">Il <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> Cerca in elementi di configurazione del provider per l'estensione del nome file specificato.</span><span class="sxs-lookup"><span data-stu-id="27f27-368">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> method searches the provider configuration elements for the specified file name extension.</span></span>  
  
 <span data-ttu-id="27f27-369">Estensioni di file sono tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="27f27-369">File name extensions are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27f27-370">L'esempio di codice seguente determina il <xref:System.CodeDom.Compiler.CodeDomProvider> implementazione per un'estensione del nome file di input e consente di visualizzare le impostazioni configurate per il provider del linguaggio.</span><span class="sxs-lookup"><span data-stu-id="27f27-370">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider.</span></span> <span data-ttu-id="27f27-371">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="27f27-371">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27f27-372">L'elemento <paramref name="extension" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-372">The <paramref name="extension" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="27f27-373">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-373">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="27f27-374">per un'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-374">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="27f27-375">Impossibile usare questo membro in codice parzialmente attendibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-375">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsDefinedLanguage">
      <MemberSignature Language="C#" Value="public static bool IsDefinedLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedLanguage (language As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member IsDefinedLanguage : string -&gt; bool" Usage="System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="27f27-376">Nome di linguaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-376">The language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-377">Verifica se per un linguaggio è configurata un'implementazione della classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> nel computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-377">Tests whether a language has a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-378">
            <see langword="true" /> se un'implementazione di <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> è configurata per il linguaggio specificato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-378">
              <see langword="true" /> if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified language; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27f27-379">Il [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) nella configurazione del computer (Machine. config) contiene le impostazioni di configurazione del compilatore e del provider del linguaggio per ogni <xref:System.CodeDom.Compiler.CodeDomProvider> implementazione di computer.</span><span class="sxs-lookup"><span data-stu-id="27f27-379">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="27f27-380">Il <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> Cerca in elementi di configurazione del provider per il nome della lingua specificata.</span><span class="sxs-lookup"><span data-stu-id="27f27-380">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method searches the provider configuration elements for the specified language name.</span></span>  
  
 <span data-ttu-id="27f27-381">I nomi del linguaggio sono tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="27f27-381">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27f27-382">L'esempio di codice seguente determina il <xref:System.CodeDom.Compiler.CodeDomProvider> implementazione per una lingua di input e consente di visualizzare le impostazioni configurate per il provider del linguaggio.</span><span class="sxs-lookup"><span data-stu-id="27f27-382">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="27f27-383">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="27f27-383">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27f27-384">L'elemento <paramref name="language" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-384">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="27f27-385">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-385">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="27f27-386">per un'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-386">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="27f27-387">Impossibile usare questo membro in codice parzialmente attendibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-387">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual bool IsValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidIdentifier (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValidIdentifier : string -&gt; bool&#xA;override this.IsValidIdentifier : string -&gt; bool" Usage="codeDomProvider.IsValidIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="27f27-388">Valore di cui verificare la validità come identificatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-388">The value to verify as a valid identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-389">Restituisce un valore che indica se il valore specificato rappresenta un identificatore valido per il linguaggio corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-389">Returns a value that indicates whether the specified value is a valid identifier for the current language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-390">
            <see langword="true" /> se il parametro <paramref name="value" /> è un identificatore valido, in caso contrario <see langword="false" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-390">
              <see langword="true" /> if the <paramref name="value" /> parameter is a valid identifier; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27f27-391">Questo metodo verifica se un identificatore è valido.</span><span class="sxs-lookup"><span data-stu-id="27f27-391">This method tests whether an identifier is valid.</span></span> <span data-ttu-id="27f27-392">Il <xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A> metodo è specifico del provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-392">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A> method is provider specific.</span></span> <span data-ttu-id="27f27-393">Gli identificatori che sono validi per un provider potrebbero non essere validi per gli altri provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-393">Identifiers that are valid for one provider might not be valid for other providers.</span></span> <span data-ttu-id="27f27-394">Se `value` contiene caratteri di fuori dell'intervallo di caratteri ASCII, controllare l'identificatore per tutte le lingue che può essere usato per compilare il codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-394">If `value` contains characters outside of the ASCII character range, check the identifier for all the languages that might be used to compile the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27f27-395">Nelle versioni 1.0 e 1.1 di .NET Framework, questo metodo viene fornito per il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione restituito dal <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodo del provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-395">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="27f27-396">Nella versione 2.0, questo metodo può essere chiamato direttamente sul provider di codice anche se non vengono sostituiti dal provider di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-396">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="27f27-397">Se il provider di codice non esegue l'override di questo metodo, il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione viene chiamata dalla classe di base.</span><span class="sxs-lookup"><span data-stu-id="27f27-397">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="27f27-398">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-398">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="27f27-399">
            <para>Quando si esegue l'override <see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /> in una classe derivata, il metodo restituisca la progettazione <see langword="true" /> solo se il valore conforme alle regole della lingua e non in conflitto con una parola chiave.  Se si esegue l'override di questo metodo, è necessario non chiamare il metodo della classe di base corrispondente. Il metodo di classe di base crea un generatore di nella classe derivata utilizzando l'obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metodo per la compatibilità con i provider preesistenti che usano i generatori di codice. Il metodo della classe base chiama quindi il metodo equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementazione per eseguire questa funzione. Si otterrà un <see cref="T:System.NotImplementedException" /> se si chiama il metodo di classe di base da un provider di codice che non usa un generatore di codice.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-399">
              <para>When overriding <see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /> in a derived class, design the method to return <see langword="true" /> only if the value fits the rules of the language and does not conflict with a keyword.  If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="LanguageOptions">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.LanguageOptions LanguageOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.Compiler.LanguageOptions LanguageOptions" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.LanguageOptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LanguageOptions As LanguageOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::CodeDom::Compiler::LanguageOptions LanguageOptions { System::CodeDom::Compiler::LanguageOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.LanguageOptions : System.CodeDom.Compiler.LanguageOptions" Usage="System.CodeDom.Compiler.CodeDomProvider.LanguageOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.LanguageOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27f27-400">Ottiene un identificatore delle funzionalità del linguaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-400">Gets a language features identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27f27-401">Oggetto <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> che indica speciali funzionalità del linguaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-401">A <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> that indicates special features of the language.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeCompileUnit Parse (System.IO.TextReader codeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit Parse(class System.IO.TextReader codeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Parse (codeStream As TextReader) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ Parse(System::IO::TextReader ^ codeStream);" />
      <MemberSignature Language="F#" Value="abstract member Parse : System.IO.TextReader -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.Parse : System.IO.TextReader -&gt; System.CodeDom.CodeCompileUnit" Usage="codeDomProvider.Parse codeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeStream" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="codeStream">
          <span data-ttu-id="27f27-402">Oggetto <see cref="T:System.IO.TextReader" /> utilizzato per leggere il codice da analizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-402">A <see cref="T:System.IO.TextReader" /> object that is used to read the code to be parsed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-403">Compila il codice letto dal flusso di testo specificato in un oggetto <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-403">Compiles the code read from the specified text stream into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-404">Oggetto <see cref="T:System.CodeDom.CodeCompileUnit" /> che contiene una rappresentazione del codice analizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-404">A <see cref="T:System.CodeDom.CodeCompileUnit" /> that contains a representation of the parsed code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="27f27-405">Nelle versioni 1.0 e 1.1 di .NET Framework, questo metodo viene fornito per il <xref:System.CodeDom.Compiler.ICodeParser> implementazione restituito dal <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> metodo del provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-405">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeParser> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> method of the provider.</span></span> <span data-ttu-id="27f27-406">Nella versione 2.0, questo metodo può essere chiamato direttamente sul provider di codice anche se non vengono sostituiti dal provider di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-406">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="27f27-407">Se il provider di codice non esegue l'override di questo metodo, il <xref:System.CodeDom.Compiler.ICodeParser> implementazione viene chiamata dalla classe di base.</span><span class="sxs-lookup"><span data-stu-id="27f27-407">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeParser> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="27f27-408">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-408">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="27f27-409">
            <para>Se si esegue l'override di questo metodo, è necessario non chiamare il metodo della classe di base corrispondente. Il metodo di classe di base crea un parser nella classe derivata utilizzando l'obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /> metodo per la compatibilità con i provider preesistenti che utilizzano i parser di codice. Il metodo della classe base chiama quindi il metodo equivalente <see cref="T:System.CodeDom.Compiler.ICodeParser" /> implementazione per eseguire questa funzione. Si otterrà un <see cref="T:System.NotImplementedException" /> se si chiama il metodo di classe di base da un provider di codice che non utilizza un parser di codice.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-409">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a parser in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /> method for compatibility with preexisting providers that use code parsers. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeParser" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code parser.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport generatorSupport) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport supports) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (supports As GeneratorSupport) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool&#xA;override this.Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool" Usage="codeDomProvider.Supports supports" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorSupport" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="supports" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="generatorSupport">
          <span data-ttu-id="27f27-410">Oggetto <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> che indica il tipo di supporto per la generazione di codice da verificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-410">A <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> object that indicates the type of code generation support to verify.</span>
          </span>
        </param>
        <param name="supports">
          <span data-ttu-id="27f27-411">Oggetto <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> che indica il tipo di supporto per la generazione di codice da verificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-411">A <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> object that indicates the type of code generation support to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27f27-412">Restituisce un valore che indica se viene fornito il supporto per la generazione di codice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-412">Returns a value indicating whether the specified code generation support is provided.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27f27-413">
            <see langword="true" /> se viene fornito il supporto specificato per la generazione di codice, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-413">
              <see langword="true" /> if the specified code generation support is provided; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27f27-414">Questo metodo può essere chiamato con numerosi <xref:System.CodeDom.Compiler.GeneratorSupport> flag in una sola volta da testare per una gamma di funzionalità a far parte di un set di flag di funzionalità appropriate insieme a un file binario `OR` operatore (&#124;).</span><span class="sxs-lookup"><span data-stu-id="27f27-414">This method can be called with a number of <xref:System.CodeDom.Compiler.GeneratorSupport> flags at once to test for a set of capabilities by joining a set of appropriate capability flags together with a binary `OR` operator (&#124;).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27f27-415">Nelle versioni 1.0 e 1.1 di .NET Framework, questo metodo viene fornito per il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione restituito dal <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodo del provider.</span><span class="sxs-lookup"><span data-stu-id="27f27-415">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="27f27-416">Nella versione 2.0, questo metodo può essere chiamato direttamente sul provider di codice anche se non vengono sostituiti dal provider di codice.</span><span class="sxs-lookup"><span data-stu-id="27f27-416">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="27f27-417">Se il provider di codice non esegue l'override di questo metodo, il <xref:System.CodeDom.Compiler.ICodeGenerator> implementazione viene chiamata dalla classe di base.</span><span class="sxs-lookup"><span data-stu-id="27f27-417">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="27f27-418">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-418">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="27f27-419">
            <para>Se si esegue l'override di questo metodo, è necessario non chiamare il metodo della classe di base corrispondente. Il metodo di classe di base crea un generatore di nella classe derivata utilizzando l'obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metodo per la compatibilità con i provider preesistenti che usano i generatori di codice. Il metodo della classe base chiama quindi il metodo equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementazione per eseguire questa funzione. Si otterrà un <see cref="T:System.NotImplementedException" /> se si chiama il metodo di classe di base da un provider di codice che non usa un generatore di codice.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="27f27-419">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
      </Docs>
    </Member>
  </Members>
</Type>