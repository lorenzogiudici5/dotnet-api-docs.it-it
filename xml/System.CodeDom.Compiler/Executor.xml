<Type Name="Executor" FullName="System.CodeDom.Compiler.Executor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54c2ea8150c58740f43956003530bafd79bb0e5b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30360705" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Executor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Executor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.Executor" />
  <TypeSignature Language="VB.NET" Value="Public Class Executor" />
  <TypeSignature Language="C++ CLI" Value="public ref class Executor abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce funzioni di esecuzione dei comandi per richiamare i compilatori. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe fornisce una raccolta di metodi che può essere usato per richiamare un compilatore, in genere da un <xref:System.CodeDom.Compiler.ICodeCompiler> implementazione.  
  
> [!NOTE]
>  Questa classe contiene una richiesta di collegamento a livello di classe che si applica a tutti i membri. Oggetto <xref:System.Security.SecurityException> viene generata quando il chiamante immediato non dispone dell'autorizzazione di attendibilità totale. Per ulteriori informazioni, vedere [le richieste di collegamento](~/docs/framework/misc/link-demands.md).  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Questa classe non può essere utilizzata da codice parzialmente attendibile.</permission>
  </Docs>
  <Members>
    <Member MemberName="ExecWait">
      <MemberSignature Language="C#" Value="public static void ExecWait (string cmd, System.CodeDom.Compiler.TempFileCollection tempFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExecWait(string cmd, class System.CodeDom.Compiler.TempFileCollection tempFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.Executor.ExecWait(System.String,System.CodeDom.Compiler.TempFileCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExecWait (cmd As String, tempFiles As TempFileCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExecWait(System::String ^ cmd, System::CodeDom::Compiler::TempFileCollection ^ tempFiles);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cmd" Type="System.String" />
        <Parameter Name="tempFiles" Type="System.CodeDom.Compiler.TempFileCollection" />
      </Parameters>
      <Docs>
        <param name="cmd">Comando da eseguire.</param>
        <param name="tempFiles">Oggetto <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> con cui gestire e archiviare i riferimenti a file intermedi generati durante la compilazione.</param>
        <summary>Esegue il comando usando i file temporanei specificati e attende la chiamata da restituire.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Questa classe non può essere utilizzata da codice parzialmente attendibile.</permission>
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecWaitWithCapture">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Esegue il comando specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecWaitWithCapture">
      <MemberSignature Language="C#" Value="public static int ExecWaitWithCapture (string cmd, System.CodeDom.Compiler.TempFileCollection tempFiles, ref string outputName, ref string errorName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ExecWaitWithCapture(string cmd, class System.CodeDom.Compiler.TempFileCollection tempFiles, string&amp; outputName, string&amp; errorName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExecWaitWithCapture (cmd As String, tempFiles As TempFileCollection, ByRef outputName As String, ByRef errorName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ExecWaitWithCapture(System::String ^ cmd, System::CodeDom::Compiler::TempFileCollection ^ tempFiles, System::String ^ % outputName, System::String ^ % errorName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cmd" Type="System.String" />
        <Parameter Name="tempFiles" Type="System.CodeDom.Compiler.TempFileCollection" />
        <Parameter Name="outputName" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="errorName" Type="System.String&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="cmd">Comando da eseguire.</param>
        <param name="tempFiles">Oggetto <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> con cui gestire e archiviare i riferimenti a file intermedi generati durante la compilazione.</param>
        <param name="outputName">Riferimento a una stringa in cui verrà memorizzato l'output di messaggi generato dal compilatore.</param>
        <param name="errorName">Riferimento a una stringa in cui verrà memorizzato il nome dell'errore o degli errori riscontrati.</param>
        <summary>Esegue il comando specificato utilizzando i file temporanei specificati e attende il risultato della chiamata, memorizzando le informazioni sugli errori e l'output generati dal compilatore nelle stringhe specificate.</summary>
        <returns>Valore restituito dal compilatore.</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Questa classe non può essere utilizzata da codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName="ExecWaitWithCapture">
      <MemberSignature Language="C#" Value="public static int ExecWaitWithCapture (IntPtr userToken, string cmd, System.CodeDom.Compiler.TempFileCollection tempFiles, ref string outputName, ref string errorName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ExecWaitWithCapture(native int userToken, string cmd, class System.CodeDom.Compiler.TempFileCollection tempFiles, string&amp; outputName, string&amp; errorName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExecWaitWithCapture (userToken As IntPtr, cmd As String, tempFiles As TempFileCollection, ByRef outputName As String, ByRef errorName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ExecWaitWithCapture(IntPtr userToken, System::String ^ cmd, System::CodeDom::Compiler::TempFileCollection ^ tempFiles, System::String ^ % outputName, System::String ^ % errorName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="cmd" Type="System.String" />
        <Parameter Name="tempFiles" Type="System.CodeDom.Compiler.TempFileCollection" />
        <Parameter Name="outputName" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="errorName" Type="System.String&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="userToken">Token con cui deve essere avviato il processo di compilazione.</param>
        <param name="cmd">Comando da eseguire.</param>
        <param name="tempFiles">Oggetto <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> con cui gestire e archiviare i riferimenti a file intermedi generati durante la compilazione.</param>
        <param name="outputName">Riferimento a una stringa in cui verrà memorizzato l'output di messaggi generato dal compilatore.</param>
        <param name="errorName">Riferimento a una stringa in cui verrà memorizzato il nome dell'errore o degli errori riscontrati.</param>
        <summary>Esegue il comando specificato utilizzando i file temporanei e il token utente specificati e attende il risultato della chiamata, memorizzando le informazioni sugli errori e l'output generati dal compilatore nelle stringhe specificate.</summary>
        <returns>Valore restituito dal compilatore.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `userToken` parametro accetta un token di accesso di sicurezza Win32 che indica il contesto di sicurezza per il processo da avviare. Per ulteriori informazioni, consultare Windows `CreateProcessAsUser` documentazione relativa al metodo nella documentazione di Platform SDK in MSDN.  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Questa classe non può essere utilizzata da codice parzialmente attendibile.</permission>
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
      </Docs>
    </Member>
    <Member MemberName="ExecWaitWithCapture">
      <MemberSignature Language="C#" Value="public static int ExecWaitWithCapture (string cmd, string currentDir, System.CodeDom.Compiler.TempFileCollection tempFiles, ref string outputName, ref string errorName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ExecWaitWithCapture(string cmd, string currentDir, class System.CodeDom.Compiler.TempFileCollection tempFiles, string&amp; outputName, string&amp; errorName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExecWaitWithCapture (cmd As String, currentDir As String, tempFiles As TempFileCollection, ByRef outputName As String, ByRef errorName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ExecWaitWithCapture(System::String ^ cmd, System::String ^ currentDir, System::CodeDom::Compiler::TempFileCollection ^ tempFiles, System::String ^ % outputName, System::String ^ % errorName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cmd" Type="System.String" />
        <Parameter Name="currentDir" Type="System.String" />
        <Parameter Name="tempFiles" Type="System.CodeDom.Compiler.TempFileCollection" />
        <Parameter Name="outputName" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="errorName" Type="System.String&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="cmd">Comando da eseguire.</param>
        <param name="currentDir">La directory corrente.</param>
        <param name="tempFiles">Oggetto <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> con cui gestire e archiviare i riferimenti a file intermedi generati durante la compilazione.</param>
        <param name="outputName">Riferimento a una stringa in cui verrà memorizzato l'output di messaggi generato dal compilatore.</param>
        <param name="errorName">Riferimento a una stringa in cui verrà memorizzato il nome dell'errore o degli errori riscontrati.</param>
        <summary>Esegue il comando specificato utilizzando i file temporanei e la directory corrente specificati e attende il risultato della chiamata, memorizzando le informazioni sugli errori e l'output generati dal compilatore nelle stringhe specificate.</summary>
        <returns>Valore restituito dal compilatore.</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Questa classe non può essere utilizzata da codice parzialmente attendibile.</permission>
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
      </Docs>
    </Member>
    <Member MemberName="ExecWaitWithCapture">
      <MemberSignature Language="C#" Value="public static int ExecWaitWithCapture (IntPtr userToken, string cmd, string currentDir, System.CodeDom.Compiler.TempFileCollection tempFiles, ref string outputName, ref string errorName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ExecWaitWithCapture(native int userToken, string cmd, string currentDir, class System.CodeDom.Compiler.TempFileCollection tempFiles, string&amp; outputName, string&amp; errorName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExecWaitWithCapture (userToken As IntPtr, cmd As String, currentDir As String, tempFiles As TempFileCollection, ByRef outputName As String, ByRef errorName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ExecWaitWithCapture(IntPtr userToken, System::String ^ cmd, System::String ^ currentDir, System::CodeDom::Compiler::TempFileCollection ^ tempFiles, System::String ^ % outputName, System::String ^ % errorName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="cmd" Type="System.String" />
        <Parameter Name="currentDir" Type="System.String" />
        <Parameter Name="tempFiles" Type="System.CodeDom.Compiler.TempFileCollection" />
        <Parameter Name="outputName" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="errorName" Type="System.String&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="userToken">Token con cui deve essere avviato il processo di compilazione.</param>
        <param name="cmd">Comando da eseguire.</param>
        <param name="currentDir">Directory in cui deve essere avviato il processo.</param>
        <param name="tempFiles">Oggetto <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> con cui gestire e archiviare i riferimenti a file intermedi generati durante la compilazione.</param>
        <param name="outputName">Riferimento a una stringa in cui verrà memorizzato l'output di messaggi generato dal compilatore.</param>
        <param name="errorName">Riferimento a una stringa in cui verrà memorizzato il nome dell'errore o degli errori riscontrati.</param>
        <summary>Esegue il comando specificato utilizzando i file temporanei, la directory corrente e il token utente specificati e attende il risultato della chiamata, memorizzando le informazioni sugli errori e l'output generati dal compilatore nelle stringhe specificate.</summary>
        <returns>Valore restituito dal compilatore.</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per l'attendibilità totale per il chiamante immediato. Questa classe non può essere utilizzata da codice parzialmente attendibile.</permission>
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
      </Docs>
    </Member>
  </Members>
</Type>