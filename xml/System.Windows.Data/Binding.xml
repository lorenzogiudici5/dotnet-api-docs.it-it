<Type Name="Binding" FullName="System.Windows.Data.Binding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b494c904e9e37c94748406bd0f7931b61046db17" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31911083" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Binding : System.Windows.Data.BindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Binding extends System.Windows.Data.BindingBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.Binding" />
  <TypeSignature Language="VB.NET" Value="Public Class Binding&#xA;Inherits BindingBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding : System::Windows::Data::BindingBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Offre un accesso di alto livello alla definizione di un'associazione, che connette le proprietà di oggetti di destinazione del binding (in genere, elementi WPF) e a qualsiasi origine dati, ad esempio un database, un file XML o qualsiasi oggetto che contiene dati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il data binding di [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] rappresenta per le applicazioni un modo semplice e coerente di presentare i dati e interagire con essi. Associazione dati consente di sincronizzare i valori delle proprietà di due oggetti diversi.  
  
 Per stabilire un'associazione, utilizzare il <xref:System.Windows.Data.Binding> classe o una delle altre classi che ereditano <xref:System.Windows.Data.BindingBase>. Indipendentemente dal quale oggetto si esegue l'associazione e la natura dell'origine dati, ciascuna associazione segue il modello illustrato nella figura seguente.  
  
 ![Diagramma di associazione di dati di base](~/add/media/databindingmostbasic.png "diagramma dell'associazione di dati di base")  
  
 Nella figura vengono illustrati i concetti fondamentali di [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] concetti relativi all'associazione dati.  
  
-   Ogni associazione è in genere include i quattro componenti: un oggetto di destinazione, una proprietà di destinazione, origine dell'associazione e un <xref:System.Windows.Data.Binding.Path%2A> al valore nell'origine di associazione da utilizzare. Ad esempio, se si desidera associare il contenuto di un <xref:System.Windows.Controls.TextBox> alla proprietà del nome di un oggetto Employee, l'oggetto di destinazione è il <xref:System.Windows.Controls.TextBox>, la proprietà di destinazione è il <xref:System.Windows.Controls.TextBox.Text%2A> proprietà, il valore da utilizzare è nome e l'oggetto di origine è il dipendente oggetto.  
  
-   La proprietà di destinazione deve essere una proprietà di dipendenza. Questo significa anche che non è possibile associare un campo. La maggior parte delle proprietà di <xref:System.Windows.UIElement> gli oggetti sono proprietà di dipendenza e la maggior parte delle proprietà di dipendenza, ad eccezione di quelle di sola lettura, supportano l'associazione dati per impostazione predefinita. (Solo <xref:System.Windows.DependencyObject> tipi possono definire le proprietà di dipendenza e tutti i <xref:System.Windows.UIElement> oggetti derivano da <xref:System.Windows.DependencyObject>.)  
  
-   Sebbene non sia specificato nella figura, è importante notare che l'oggetto di origine del binding non è necessariamente costituito da un oggetto [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] personalizzato. Il data binding [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] supporta dati nel formato di oggetti [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] e [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]. Per fornire alcuni esempi, l'origine di associazione può essere un <xref:System.Windows.UIElement>, qualsiasi oggetto elenco, un [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] oggetto associato al [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] dati o servizi Web o un oggetto XmlNode che contiene il [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] dati.  
  
 Utilizzare il <xref:System.Windows.Data.Binding.Mode%2A> proprietà per specificare la direzione del flusso di dati. Per rilevare le modifiche di origine nelle associazioni unidirezionali o bidirezionali, l'origine deve implementare un meccanismo di notifica di modifica proprietà appropriato, ad esempio <xref:System.ComponentModel.INotifyPropertyChanged>. Per un esempio, vedere [procedura: implementare la notifica di modifiche](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md). Il <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> proprietà specifica l'intervallo degli aggiornamenti dell'origine. Per ulteriori informazioni, vedere "dati di associazione concetti di"base in [Panoramica del Data Binding](~/docs/framework/wpf/data/data-binding-overview.md).  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *declaration*  
 Zero o più clausole di assegnazione di attributi separate da virgole (,). Per ulteriori informazioni, vedere [estensione di Markup Binding](~/docs/framework/wpf/advanced/binding-markup-extension.md) o [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.MultiBinding" />
    <altmember cref="T:System.Windows.Data.PriorityBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Data.Binding" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Data.Binding" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Proprietà <see cref="P:System.Windows.Data.Binding.Path" /> iniziale per l'associazione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Data.Binding" /> con un percorso iniziale.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">Oggetto <see cref="T:System.Windows.UIElement" /> oppure oggetto <see cref="T:System.Windows.ContentElement" /> che è in ascolto dell'evento.</param>
        <param name="handler">Gestore da aggiungere.</param>
        <summary>Aggiunge un gestore per l'evento associato <see cref="E:System.Windows.Data.Binding.SourceUpdated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo supporta l'utilizzo di evento in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">Oggetto <see cref="T:System.Windows.UIElement" /> oppure oggetto <see cref="T:System.Windows.ContentElement" /> che è in ascolto dell'evento.</param>
        <param name="handler">Gestore da aggiungere.</param>
        <summary>Aggiunge un gestore per l'evento associato <see cref="E:System.Windows.Data.Binding.TargetUpdated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo supporta l'utilizzo di evento in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta dati opachi passati al dispatcher di dati asincrono.</summary>
        <value>Dati passati al dispatcher di dati asincrono.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.IsAsync" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
      </Docs>
    </Member>
    <Member MemberName="BindsDirectlyToSource">
      <MemberSignature Language="C#" Value="public bool BindsDirectlyToSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BindsDirectlyToSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.BindsDirectlyToSource" />
      <MemberSignature Language="VB.NET" Value="Public Property BindsDirectlyToSource As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BindsDirectlyToSource { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se valutare la proprietà <see cref="P:System.Windows.Data.Binding.Path" /> relativa all'elemento dati oppure l'oggetto <see cref="T:System.Windows.Data.DataSourceProvider" />.</summary>
        <value>
          <see langword="false" /> per valutare il percorso relativo all'elemento dati stesso. In caso contrario, <see langword="true" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il comportamento normale (quando questa proprietà è `false`) include un trattamento speciale per <xref:System.Windows.Data.DataSourceProvider> oggetti. In questo caso, il motore di associazione restituisce il <xref:System.Windows.Data.Binding.Path%2A> relativa all'oggetto ottenuto dal <xref:System.Windows.Data.DataSourceProvider.Data%2A> proprietà. Inoltre, l'associazione è in ascolto per il <xref:System.Windows.Data.DataSourceProvider.DataChanged> evento e di conseguenza. Impostando questa proprietà su `true` esegue l'override di questo comportamento e fornisce l'accesso di associazione alle proprietà del <xref:System.Windows.Data.DataSourceProvider> oggetto stesso.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.ObjectDataProvider" />
        <altmember cref="T:System.Windows.Data.XmlDataProvider" />
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.IValueConverter Converter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.IValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Property Converter As IValueConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::IValueConverter ^ Converter { System::Windows::Data::IValueConverter ^ get(); void set(System::Windows::Data::IValueConverter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il convertitore da usare.</summary>
        <value>Valore di tipo <see cref="T:System.Windows.Data.IValueConverter" />. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'associazione utilizza in modo implicito un convertitore predefinito che tenta di eseguire una conversione di tipi tra il valore di origine e il valore di destinazione. Se non è possibile eseguire una conversione, il convertitore predefinito restituisce `null`.  
  
 Se si desidera associare un convertitore di valori personalizzati con un'associazione, è necessario creare una classe che implementa il <xref:System.Windows.Data.IValueConverter> l'interfaccia e specificare le implementazioni per le <xref:System.Windows.Data.IValueConverter.Convert%2A> e <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> metodi. Convertitori di tipi di valore può modificare i dati da un tipo a un altro, la conversione tra le informazioni relative alla lingua, ad esempio set di caratteri o modificare altri aspetti della loro presentazione. Per esempi di scenari tipici di conversione, vedere "Conversione di dati" nella [Panoramica del Data Binding](~/docs/framework/wpf/data/data-binding-overview.md).  
  
<a name="xamlAttributeUsage_Converter"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object Converter="myConverter"/>  
```  
  
<a name="xamlValues_Converter"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *myConverter*  
 Un riferimento a una classe che implementa una risorsa di <xref:System.Windows.Data.IValueConverter> che include le implementazioni di interfaccia di <xref:System.Windows.Data.IValueConverter.Convert%2A> e <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> metodi. Per fare riferimento a un convertitore di valori, utilizzare il [estensione di Markup StaticResource](~/docs/framework/wpf/advanced/staticresource-markup-extension.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConverterCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConverterCulture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConverterCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.CultureInfoIetfLanguageTagConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'impostazione cultura in cui valutare il convertitore.</summary>
        <value>Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non si imposta questa proprietà, il motore di associazione utilizza la `Language` proprietà dell'oggetto di destinazione dell'associazione. In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] questo valore predefinito è "en-US" o eredita il valore dell'elemento radice (o qualsiasi elemento) della pagina, se ne è stato impostato in modo esplicito.  
  
 Per informazioni sulla conversione dei dati, vedere la sezione di conversione dei dati nel [Panoramica del Data Binding](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterParameter">
      <MemberSignature Language="C#" Value="public object ConverterParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConverterParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConverterParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il parametro da passare all'oggetto <see cref="P:System.Windows.Data.Binding.Converter" />.</summary>
        <value>Parametro da passare all'oggetto <see cref="P:System.Windows.Data.Binding.Converter" />. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Windows.Data.Binding.ConverterParameter%2A> proprietà per specificare la modalità di conversione di un oggetto.  Questa proprietà passa informazioni aggiuntive per un convertitore di tipi usato in un'associazione.  Quando si specifica un <xref:System.Windows.Data.Binding.ConverterParameter%2A>, il valore viene passato per il <xref:System.Windows.Data.IValueConverter.Convert%2A> e <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> metodi come il `parameter` parametro.  
  
 Per un esempio, vedere [procedura: generare un valore basato su un elenco di elementi associati](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md). Nell'esempio viene illustrata un'implementazione di un <xref:System.Windows.Data.IMultiValueConverter> ma viene comunque applicata l'utilizzo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNothing">
      <MemberSignature Language="C#" Value="public static readonly object DoNothing;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object DoNothing" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.DoNothing" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DoNothing As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ DoNothing;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Usato come valore restituito per indicare al motore di associazione di non eseguire alcuna azione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una proprietà di origine di associazione o un convertitore può restituire <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> per indicare al motore di associazione non eseguire alcuna azione. Ad esempio, per indicare al motore di associazione non trasferire un valore alla destinazione del binding, non da passare a quello successivo <xref:System.Windows.Data.Binding> in un <xref:System.Windows.Data.PriorityBinding>, o di non utilizzare il `FallBackValue` o valore predefinito.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'elemento da usare come oggetto di origine dell'associazione.</summary>
        <value>Il valore di <see langword="Name" /> proprietà o [direttiva X:Name](~/docs/framework/xaml-services/x-name-directive.md) dell'elemento di interesse. È possibile fare riferimento agli elementi nel codice solo se sono registrati nell'oggetto <see cref="T:System.Windows.NameScope" /> appropriato tramite <see langword="RegisterName" />. Per ulteriori informazioni, vedere [NameScope XAML WPF](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).  
  
 Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è utile quando si desidera associare la proprietà di un altro elemento nell'applicazione. Ad esempio, se si desidera utilizzare un <xref:System.Windows.Controls.Slider> per controllare l'altezza di un altro controllo nell'applicazione, o se si desidera associare il <xref:System.Windows.Controls.ContentControl.Content%2A> del controllo per il <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> proprietà del <xref:System.Windows.Controls.ListBox> controllo.  
  
 Per impostazione predefinita, le associazioni ereditano il contesto di dati specificato dal parametro di `DataContext` proprietà, se ne è stato impostato. Tuttavia, il <xref:System.Windows.Data.Binding.ElementName%2A> proprietà è uno dei modi è possibile impostare in modo esplicito l'origine di un <xref:System.Windows.Data.Binding> ed eseguire l'override del contesto dati ereditato. Per ulteriori informazioni, vedere [procedura: specificare l'origine di associazione](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).  
  
 Il <xref:System.Windows.Data.Binding.Source%2A> e <xref:System.Windows.Data.Binding.RelativeSource%2A> proprietà la <xref:System.Windows.Data.Binding> classe consente inoltre di impostare l'origine dell'associazione in modo esplicito. Tuttavia, solo una delle tre proprietà, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, e <xref:System.Windows.Data.Binding.RelativeSource%2A>set per ogni associazione, o potrebbe verificarsi un conflitto. Questa proprietà genera un'eccezione se si verifica un conflitto di origine di associazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNamespaceManager GetXmlNamespaceManager (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNamespaceManager GetXmlNamespaceManager(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXmlNamespaceManager (target As DependencyObject) As XmlNamespaceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlNamespaceManager ^ GetXmlNamespaceManager(System::Windows::DependencyObject ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNamespaceManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">Oggetto da cui ottenere le informazioni sullo spazio dei nomi.</param>
        <summary>Restituisce un oggetto gestore dello spazio dei nomi [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] usato dall'associazione allegata all'oggetto specificato.</summary>
        <returns>Oggetto restituito utilizzato per visualizzare gli spazi dei nomi [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] relativi all'associazione all'elemento oggetto passato. Il cast di tale oggetto deve essere eseguito come <see cref="T:System.Xml.XmlNamespaceManager" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo supporta l'utilizzo della proprietà associata per la <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> proprietà associata.  
  
 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] i responsabili dello spazio dei nomi sono rilevanti solo se i dati nell'associazione provengono da un [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] origine dell'associazione (<xref:System.Windows.Data.XmlDataProvider> oggetto).  
  
 Se un gestore dello spazio dei nomi non è stato applicato in modo specifico la creazione dell'origine dati originale o chiamando successivamente <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A> sull'associazione, questo metodo verrà restituito `null`.  
  
 Questo metodo restituirà sempre `null` se i dati sottostanti l'associazione non [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="target" /> non può essere <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexerName">
      <MemberSignature Language="C#" Value="public const string IndexerName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IndexerName" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.IndexerName" />
      <MemberSignature Language="VB.NET" Value="Public Const IndexerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ IndexerName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Utilizzato come <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> di <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> per indicare che una proprietà di un indicizzatore è stata modificata.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se <see cref="T:System.Windows.Data.Binding" /> deve ottenere e impostare i valori in modo asincrono.</summary>
        <value>Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Windows.Data.Binding.IsAsync%2A> proprietà quando il `get` della funzione di accesso della proprietà di origine di associazione può richiedere molto tempo. Un esempio è una proprietà di un'immagine con un `get` della funzione di accesso che consente di scaricare dal Web. Impostazione <xref:System.Windows.Data.Binding.IsAsync%2A> a `true` si evita di bloccare il [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] durante il download.  
  
 In attesa del valore, l'associazione restituisce il <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, se disponibile, oppure il valore predefinito dell'associazione di proprietà di destinazione.  
  
 Tuttavia, non devono essere presenti molti scenari in cui è necessario utilizzare il <xref:System.Windows.Data.Binding.IsAsync%2A> proprietà. Il [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] linee guida si consiglia di non definire le proprietà che gli ordini di grandezza più lente rispetto a un set di campi. Quando si crea la classe, è consigliabile gestire operazioni estremamente lente all'esterno del `get` della funzione di accesso e la memorizzazione nella cache il risultato. Per ulteriori informazioni, vedere [NIB: scelta tra proprietà e metodi](http://msdn.microsoft.com/library/55825e8f-7e2e-448a-9505-7217cc91b1af).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.AsyncState" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
        <altmember cref="T:System.Windows.PropertyChangedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As BindingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingMode Mode { System::Windows::Data::BindingMode get(); void set(System::Windows::Data::BindingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica la direzione del flusso di dati dell'associazione.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Data.BindingMode" />. Il valore predefinito è <see cref="F:System.Windows.Data.BindingMode.Default" />, che restituisce il valore predefinito della modalità di associazione della proprietà di dipendenza di destinazione. Tuttavia, il valore predefinito varia per ogni proprietà di dipendenza. In generale, per le proprietà di controlli modificabili dall'utente, ad esempio quelle di caselle di testo e caselle di controllo, vengono usate le associazioni bidirezionali per impostazione predefinita, mentre l'impostazione predefinita per la maggior parte delle altre proprietà è l'associazione unidirezionale.  
  
 Un modo programmatico per determinare se l'associazione di una proprietà di dipendenza è unidirezionale o bidirezionale per impostazione predefinita, consiste nell'ottenere i metadati della proprietà con <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> e quindi controllare il valore booleano della proprietà <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per supportare <xref:System.Windows.Data.BindingMode.OneWay> e <xref:System.Windows.Data.BindingMode.TwoWay> devono essere implementata dalle associazioni, i dati sottostanti <xref:System.ComponentModel.INotifyPropertyChanged>. Per informazioni dettagliate, vedere [procedura: implementare la notifica di modifiche](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).  
  
 Per <xref:System.Windows.Data.BindingMode.TwoWay> o <xref:System.Windows.Data.BindingMode.OneWayToSource> associazioni, è possibile controllare gli aggiornamenti di origine di destinazione impostando il <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> proprietà. Per ulteriori informazioni, vedere <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.  
  
 Per ulteriori informazioni sulle modalità di associazione diversi, vedere [Panoramica sul Data Binding](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnSourceUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnSourceUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnSourceUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnSourceUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnSourceUpdated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se generare l'evento <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> quando un valore viene trasferito dalla destinazione del binding all'origine dell'associazione.</summary>
        <value>
          <see langword="true" /> Se il <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> evento deve essere generato quando il valore di origine di associazione viene aggiornato; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se generare l'evento <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> quando un valore viene trasferito dall'origine dell'associazione alla destinazione del binding.</summary>
        <value>
          <see langword="true" /> Se il <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> evento deve essere generato quando il valore di destinazione del binding viene aggiornato; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se generare l'evento associato <see cref="E:System.Windows.Controls.Validation.Error" /> sull'oggetto associato.</summary>
        <value>
          <see langword="true" /> Se il <see cref="E:System.Windows.Controls.Validation.Error" /> evento deve essere generato per l'oggetto associato quando si verifica un errore di convalida durante gli aggiornamenti dell'origine; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'associazione ha <xref:System.Windows.Data.Binding.ValidationRules%2A> associato, il motore di associazione controlla ogni regola ogni volta che trasferisce il valore di proprietà di destinazione per la proprietà di origine. Se una regola invalida un valore, il motore di associazione crea una <xref:System.Windows.Controls.ValidationError> dell'oggetto e lo aggiunge al <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A> raccolta dell'oggetto associato. Quando il <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> proprietà non è vuota, il <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> associata dell'oggetto è impostata su `true`. Se il <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> proprietà del <xref:System.Windows.Data.Binding> è impostato su `true`, il motore di associazione genera il <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> evento per l'oggetto associato.  
  
 Per una descrizione dettagliata del processo di convalida, vedere la sezione convalida dei dati nel [Panoramica del Data Binding](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public System.Windows.PropertyPath Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PropertyPath Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PropertyPath ^ Path { System::Windows::PropertyPath ^ get(); void set(System::Windows::PropertyPath ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il percorso della proprietà di origine dell'associazione.</summary>
        <value>Percorso dell'origine di associazione. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni associazione è in genere include i quattro componenti: un oggetto di destinazione, una proprietà di destinazione, un'origine di associazione e un percorso per il valore nell'origine di associazione da utilizzare. Per ulteriori informazioni su questi concetti di associazione dati, vedere [Panoramica sul Data Binding](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Utilizzare il <xref:System.Windows.Data.Binding.Path%2A> proprietà per specificare il valore di origine da associare a:  
  
-   Nel caso più semplice, il <xref:System.Windows.Data.Binding.Path%2A> valore della proprietà è il nome della proprietà dell'oggetto di origine da utilizzare per l'associazione, ad esempio `Path=PropertyName`.  
  
-   Sottoproprietà di una proprietà può essere specificata da una sintassi simile a quella usata in c#. Ad esempio, la clausola `Path=ShoppingCart.Order` imposta l'associazione sulla sottoproprietà `Order` dell'oggetto o la proprietà `ShoppingCart`.  
  
-   Per eseguire l'associazione a una proprietà associata, racchiuderla tra parentesi. Ad esempio, per associare la proprietà associata <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>, la sintassi è `Path=(DockPanel.Dock)`.  
  
-   Gli indicizzatori di una proprietà possono essere specificati all'interno di parentesi quadre dopo il nome della proprietà in cui viene applicato l'indicizzatore. La clausola `Path=ShoppingCart[0]` ad esempio imposta l'associazione all'indice corrispondente al modo in cui l'indicizzazione interna della proprietà gestisce la stringa letterale "0". Sono supportati anche più indicizzatori.  
  
-   Indicizzatori e sottoproprietà possono essere combinati in una clausola `Path`, ad esempio,`Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`  
  
-   All'interno degli indicizzatori è possibile specificare più parametri di indicizzatore separati da virgole (,). È possibile specificare tra parentesi il tipo di ogni parametro. È possibile ad esempio avere `Path="[(sys:Int32)42,(sys:Int32)24]"`, dove è stato eseguito il mapping di `sys` allo spazio dei nomi `System`.  
  
-   Quando l'origine è una visualizzazione di raccolta, è possibile specificare l'elemento corrente con una barra (/). La clausola `Path=/` ad esempio imposta l'associazione all'elemento corrente nella visualizzazione. Quando l'origine è una raccolta, questa sintassi specifica l'elemento corrente della visualizzazione di raccolta predefinita.  
  
-   Barre e nomi di proprietà possono essere combinate per attraversare le proprietà che sono raccolte. `Path=/Offices/ManagerName` ad esempio specifica l'elemento corrente della raccolta di origine, che contiene una proprietà `Offices` che è anche una raccolta. L'elemento corrente è un oggetto che contiene una proprietà `ManagerName`.  
  
-   È possibile usare facoltativamente un percorso con il punto (.) per eseguire l'associazione all'origine corrente. Ad esempio, `Text="{Binding}"` equivale a `Text="{Binding Path=.}"`.  
  
 Per informazioni sulla sintassi del percorso, vedere [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md) o [sintassi di PropertyPath XAML](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
 Per [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] binding, vedere il <xref:System.Windows.Data.Binding.XPath%2A> proprietà.  
  
 Per associare a un intero oggetto, non è necessario specificare il <xref:System.Windows.Data.Binding.Path%2A> proprietà. Per ulteriori informazioni, vedere "Specifica del percorso del valore" in [Panoramica del Data Binding](~/docs/framework/wpf/data/data-binding-overview.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un trigger di stile che crea un <xref:System.Windows.Controls.ToolTip> che segnala un messaggio di errore di convalida. Il valore del metodo set viene associato al contenuto dell'errore dell'oggetto corrente <xref:System.Windows.Controls.TextBox> (il <xref:System.Windows.Controls.TextBox> usando lo stile) utilizzando il <xref:System.Windows.Data.Binding.RelativeSource%2A> proprietà. Per ulteriori informazioni su questo esempio, vedere [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativeSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSource RelativeSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.RelativeSource RelativeSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.RelativeSource" />
      <MemberSignature Language="VB.NET" Value="Public Property RelativeSource As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::RelativeSource ^ RelativeSource { System::Windows::Data::RelativeSource ^ get(); void set(System::Windows::Data::RelativeSource ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'origine del binding specificandone il percorso in relazione alla posizione della destinazione del binding.</summary>
        <value>Oggetto <see cref="T:System.Windows.Data.RelativeSource" /> oggetto che specifica il percorso relativo dell'origine di associazione da utilizzare. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà viene comunemente utilizzata per associare una proprietà di un oggetto a un'altra proprietà dello stesso oggetto oppure per definire un'associazione in uno stile o modello.  
  
 Per impostazione predefinita, le associazioni ereditano il contesto di dati specificato dal parametro di `DataContext` proprietà, se ne è stato impostato. Tuttavia, il <xref:System.Windows.Data.Binding.RelativeSource%2A> proprietà è uno dei modi è possibile impostare in modo esplicito l'origine di un <xref:System.Windows.Data.Binding> ed eseguire l'override del contesto dati ereditato. Per ulteriori informazioni, vedere [procedura: specificare l'origine di associazione](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).  
  
 Il <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> e <xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType> proprietà consentono inoltre di impostare l'origine dell'associazione in modo esplicito. Tuttavia, solo una delle tre proprietà, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, e <xref:System.Windows.Data.Binding.RelativeSource%2A>set per ogni associazione, o può verificarsi un conflitto. Questa proprietà genera un'eccezione se si verifica un conflitto di origine di associazione.  
  
 Per [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informazioni, vedere [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
    
## Examples  
 Nell'esempio seguente viene illustrato un trigger di stile che crea un <xref:System.Windows.Controls.ToolTip> che segnala un messaggio di errore di convalida. Il valore del metodo set viene associato al contenuto dell'errore dell'oggetto corrente <xref:System.Windows.Controls.TextBox> (il <xref:System.Windows.Controls.TextBox> usando lo stile) utilizzando il <xref:System.Windows.Data.Binding.RelativeSource%2A> proprietà. Per ulteriori informazioni su questo esempio, vedere [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 Per visualizzare l'esempio completo, vedere [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Source" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">Oggetto <see cref="T:System.Windows.UIElement" /> oppure oggetto <see cref="T:System.Windows.ContentElement" /> che è in ascolto dell'evento.</param>
        <param name="handler">Gestore da rimuovere.</param>
        <summary>Rimuove un gestore per l'evento associato <see cref="E:System.Windows.Data.Binding.SourceUpdated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo supporta l'utilizzo di evento in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">Oggetto <see cref="T:System.Windows.UIElement" /> oppure oggetto <see cref="T:System.Windows.ContentElement" /> che è in ascolto dell'evento.</param>
        <param name="handler">Gestore da rimuovere.</param>
        <summary>Rimuove un gestore per l'evento associato <see cref="E:System.Windows.Data.Binding.TargetUpdated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo supporta l'utilizzo di evento in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static void SetXmlNamespaceManager (System.Windows.DependencyObject target, System.Xml.XmlNamespaceManager value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetXmlNamespaceManager(class System.Windows.DependencyObject target, class System.Xml.XmlNamespaceManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetXmlNamespaceManager (target As DependencyObject, value As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetXmlNamespaceManager(System::Windows::DependencyObject ^ target, System::Xml::XmlNamespaceManager ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="target">Oggetto da cui ottenere le informazioni sullo spazio dei nomi.</param>
        <param name="value">
          <see cref="T:System.Xml.XmlNamespaceManager" /> da utilizzare per la valutazione dello spazio dei nomi nell'elemento passato.</param>
        <summary>Imposta un oggetto gestore dello spazio dei nomi usato dall'associazione associata all'elemento fornito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo supporta l'utilizzo della proprietà associata per la <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> proprietà associata.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePath">
      <MemberSignature Language="C#" Value="public bool ShouldSerializePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializePath" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializePath () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializePath();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica se la proprietà <see cref="P:System.Windows.Data.Binding.Path" /> deve essere mantenuta.</summary>
        <returns>
          <see langword="true" /> se il valore della proprietà è stato modificato rispetto all'impostazione predefinita; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo `ShouldSerialize` metodo viene fornito perché il <xref:System.Windows.Data.Binding.Path%2A> proprietà non dispone di un valore predefinito semplice. Questo metodo indica se la proprietà è stato modificato rispetto al valore predefinito. È in genere richiamare questo metodo se si sviluppa una finestra di progettazione per il <xref:System.Windows.Data.Binding> o lo sviluppo di controllo personalizzato che includa il <xref:System.Windows.Data.Binding>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSource">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeSource" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSource () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica se la proprietà <see cref="P:System.Windows.Data.Binding.Source" /> deve essere mantenuta.</summary>
        <returns>
          <see langword="true" /> se il valore della proprietà è stato modificato rispetto all'impostazione predefinita; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo `ShouldSerialize` metodo viene fornito perché il <xref:System.Windows.Data.Binding.Source%2A> proprietà non dispone di un valore predefinito semplice. Questo metodo indica se la proprietà è stato modificato rispetto al valore predefinito. È in genere richiamare questo metodo se si sviluppa una finestra di progettazione per il <xref:System.Windows.Data.Binding> o lo sviluppo di controllo personalizzato che includa il <xref:System.Windows.Data.Binding>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValidationRules">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeValidationRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeValidationRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeValidationRules () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeValidationRules();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica se la proprietà <see cref="P:System.Windows.Data.Binding.ValidationRules" /> deve essere mantenuta.</summary>
        <returns>
          <see langword="true" /> se il valore della proprietà è stato modificato rispetto all'impostazione predefinita; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo `ShouldSerialize` metodo viene fornito perché il <xref:System.Windows.Data.Binding.ValidationRules%2A> proprietà non dispone di un valore predefinito semplice. Questo metodo indica se la proprietà è stato modificato rispetto al valore predefinito. È in genere richiamare questo metodo se si sviluppa una finestra di progettazione per il <xref:System.Windows.Data.Binding> o lo sviluppo di controllo personalizzato che includa il <xref:System.Windows.Data.Binding>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public object Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Source { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto da usare come origine di associazione.</summary>
        <value>Oggetto da usare come origine di associazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, le associazioni ereditano il contesto di dati specificato dal parametro di `DataContext` proprietà, se ne è stato impostato. Tuttavia, il <xref:System.Windows.Data.Binding.Source%2A> proprietà è uno dei modi è possibile impostare in modo esplicito l'origine di un <xref:System.Windows.Data.Binding> ed eseguire l'override del contesto dati ereditato. Se non è necessaria la funzionalità di creazione di un ambito in cui più proprietà ereditano il contesto dei dati stessi, è possibile utilizzare il <xref:System.Windows.Data.Binding.Source%2A> proprietà anziché il `DataContext` proprietà.  
  
 Il <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> e <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> proprietà consentono inoltre di impostare l'origine dell'associazione in modo esplicito. Tuttavia, solo una delle tre proprietà, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, e <xref:System.Windows.Data.Binding.RelativeSource%2A>set per ogni associazione, o può verificarsi un conflitto. Questa proprietà genera un'eccezione se si verifica un conflitto di origine di associazione.  
  
 Per cancellare questa proprietà, impostarlo su <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>.  
  
<a name="xamlAttributeUsage_Source"></a>   
## <a name="xaml-attribute-usage"></a>Uso della sintassi XAML per gli attributi  
  
```  
<object Source="object"/>  
```  
  
<a name="xamlValues_Source"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *object*  
 Un oggetto esistente. Per fare riferimento a un oggetto esistente, utilizzare il [StaticResource estensione di Markup](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)  
  
   
  
## Examples  
 Nell'esempio seguente viene utilizzata una `Person` oggetto con una proprietà stringa denominata `PersonName` che viene definito nel `SDKSample` dello spazio dei nomi, come mostrato nella primo riga evidenziata. Nella riga evidenziata che contiene il `<src>` elemento, viene creata un'istanza di `Person` dell'oggetto con un `PersonName` valore della proprietà `Joe`. Questa operazione viene eseguita `Resources` sezione e assegnare un `x:Key`.  
  
 [!code-xaml[BindingInstantiation](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleBinding/CSharp/Page1.xaml?highlight=4,9,37)]  
  
 La riga evidenziata che contiene il `<TextBlock>` elementi di seguito viene illustrato come associare il `PersonName` proprietà. Di conseguenza, il <xref:System.Windows.Controls.TextBlock> verrà visualizzato un controllo con il valore "Joe".  
  
 Nell'esempio seguente, il <xref:System.Windows.Data.Binding.Source%2A> valori del <xref:System.Windows.Data.Binding> oggetti vengono impostati il `static` proprietà <xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:  
  
 [!code-xaml[DataBindingLab#ComboBoxMultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/AddProductWindow.xaml#comboboxmultibinding)]  
  
 Per un esempio completo, vedere [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdated">
      <MemberSignature Language="C#" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.SourceUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SourceUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SourceUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.SourceUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SourceUpdatedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica l'evento associato <see cref="E:System.Windows.Data.Binding.SourceUpdated" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdated">
      <MemberSignature Language="C#" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.TargetUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TargetUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TargetUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.TargetUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TargetUpdatedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica l'evento associato <see cref="E:System.Windows.Data.Binding.TargetUpdated" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceExceptionFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceExceptionFilter As UpdateSourceExceptionFilterCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceExceptionFilterCallback ^ UpdateSourceExceptionFilter { System::Windows::Data::UpdateSourceExceptionFilterCallback ^ get(); void set(System::Windows::Data::UpdateSourceExceptionFilterCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceExceptionFilterCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un gestore che è possibile usare per rendere disponibile logica personalizzata per la gestione delle eccezioni rilevate dal motore di associazione durante l'aggiornamento del valore di origine di associazione. È applicabile solo se è stato associato un oggetto <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> all'associazione.</summary>
        <value>Metodo per rendere disponibile logica personalizzata per la gestione delle eccezioni rilevate dal motore di associazione durante l'aggiornamento del valore di origine di associazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Controls.ExceptionValidationRule> è una regola di convalida incorporate che controlla le eccezioni generate durante l'aggiornamento della proprietà di origine di associazione. Se è stata associata la <xref:System.Windows.Controls.ExceptionValidationRule> con il <xref:System.Windows.Data.Binding> dell'oggetto, è possibile utilizzare questa proprietà per impostare un gestore per fornire la logica personalizzata per la gestione delle eccezioni. Se un <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> non è specificato nella <xref:System.Windows.Data.Binding>, il motore di associazione crea un <xref:System.Windows.Controls.ValidationError> con l'eccezione e lo aggiunge al <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> raccolta dell'elemento associato.  
  
   
  
## Examples  
 Il <xref:System.Windows.Controls.TextBox.Text%2A> proprietà degli elementi seguenti <xref:System.Windows.Controls.TextBox> è associato a una proprietà di origine `Age3` che è di tipo `int`. Il <xref:System.Windows.Controls.ExceptionValidationRule> controlli per le eccezioni generate durante l'aggiornamento della proprietà di origine (ad esempio, quando l'utente immette un valore che non può essere convertito in un numero intero).  
  
 [!code-xaml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  
  
 È possibile fornire logica personalizzata per gestire tali eccezioni. Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> proprietà per impostare un <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  
  
 [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  
  
 Ecco un esempio di implementazione di un <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  
  
 [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  
  
 Il <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> può restituire anche `null`, l'eccezione stessa, o un <xref:System.Windows.Controls.ValidationError>. Per ulteriori informazioni, vedere <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  
  
 Per l'esempio completo, vedere [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceTrigger">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceTrigger" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceTrigger As UpdateSourceTrigger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceTrigger UpdateSourceTrigger { System::Windows::Data::UpdateSourceTrigger get(); void set(System::Windows::Data::UpdateSourceTrigger value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceTrigger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che determina gli intervalli di tempo degli aggiornamenti dell'origine di associazione.</summary>
        <value>Uno dei valori di <see cref="T:System.Windows.Data.UpdateSourceTrigger" />. Il valore predefinito è <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, che restituisce il valore predefinito <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> valore della proprietà di dipendenza di destinazione. Tuttavia, il valore predefinito per la maggior parte delle proprietà di dipendenza è <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, mentre il <see cref="P:System.Windows.Controls.TextBox.Text" /> proprietà ha un valore predefinito di <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.  
  
 Un modo programmatico per determinare il valore predefinito <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> valore di una proprietà di dipendenza consiste nell'ottenere i metadati della proprietà con <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> e quindi controllare il valore della <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> proprietà.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le associazioni di <xref:System.Windows.Data.BindingMode.TwoWay> o <xref:System.Windows.Data.BindingMode.OneWayToSource> ascolto delle modifiche apportate alla proprietà di destinazione e propagarle nell'origine. Questo processo è noto come aggiornamento dell'origine. In genere, tali aggiornamenti si verificano ogni volta che cambia la proprietà di destinazione. L'operazione è corretta per le caselle di controllo e altri controlli semplici, ma non è in genere appropriata per i campi di testo. L'aggiornamento dopo ogni pressione di tasto può comportare un calo delle prestazioni e negare all'utente la possibilità di tornare indietro e correggere eventuali errori di digitazione prima del commit per il nuovo valore. Pertanto, il valore predefinito <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> valore il <xref:System.Windows.Controls.TextBox.Text%2A> proprietà <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> e non <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.  
  
 Se si imposta la <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> valore <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, è necessario chiamare il <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> metodo o le modifiche non verranno propagate nell'origine.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Mode" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnDataErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se includere <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</summary>
        <value>
          <see langword="true" /> per includere l'oggetto <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'impostazione di questa proprietà fornisce un'alternativa all'utilizzo di <xref:System.Windows.Controls.DataErrorValidationRule> elemento in modo esplicito. Il <xref:System.Windows.Controls.DataErrorValidationRule> è una regola di convalida incorporate che verifica la presenza di errori generati dal <xref:System.ComponentModel.IDataErrorInfo> implementazione dell'oggetto di origine. Se viene generato un errore, il motore di associazione crea un <xref:System.Windows.Controls.ValidationError> con l'errore e lo aggiunge al <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> raccolta dell'elemento associato. La mancanza di un errore Cancella questi commenti e suggerimenti di convalida, a meno che un'altra regola genera un problema di convalida.  
  
 <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> è stato introdotto in .NET Framework versione 3.5.  Per altre informazioni, vedere [Versioni e dipendenze di .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Nell'esempio seguente usa <xref:System.ComponentModel.IDataErrorInfo> e <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> per convalidare l'input dell'utente in un <xref:System.Windows.Controls.TextBox>. Nel primo esempio viene creato un tipo di dati che implementa <xref:System.ComponentModel.IDataErrorInfo> per segnalare gli errori di convalida.  
  
 [!code-csharp[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#idataerrorinfodata)]
 [!code-vb[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#idataerrorinfodata)]  
  
 Nell'esempio seguente viene associato il `Age` proprietà per il <xref:System.Windows.Controls.TextBox> e imposta <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> a `true` sul <xref:System.Windows.Data.Binding>.  Quando l'utente immette un valore non valido, verrà visualizzato un bordo rosso nel <xref:System.Windows.Controls.TextBox> e <xref:System.Windows.Controls.ToolTip> segnala il messaggio di errore.  
  
 [!code-xaml[BindingValidationAttributesSnippets#IDataErrorInfoXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#idataerrorinfoxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnExceptions">
      <MemberSignature Language="C#" Value="public bool ValidatesOnExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnExceptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se includere <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</summary>
        <value>
          <see langword="true" /> per includere l'oggetto <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'impostazione di questa proprietà fornisce un'alternativa all'utilizzo di <xref:System.Windows.Controls.ExceptionValidationRule> elemento in modo esplicito. Il <xref:System.Windows.Controls.ExceptionValidationRule> è una regola di convalida incorporate che controlla le eccezioni generate durante l'aggiornamento della proprietà di origine. Se viene generata un'eccezione, il motore di associazione crea un <xref:System.Windows.Controls.ValidationError> con l'eccezione e lo aggiunge al <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> raccolta dell'elemento associato. La mancanza di un errore Cancella questi commenti e suggerimenti di convalida, a meno che un'altra regola genera un problema di convalida.  
  
 <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> è stato introdotto in .NET Framework versione 3.5.  Per altre informazioni, vedere [Versioni e dipendenze di .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 L'esempio seguente usa <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> per convalidare l'input dell'utente in un <xref:System.Windows.Controls.TextBox>. Nel primo esempio viene creato un tipo di dati che genera un'eccezione quando il `Age` è impostata su una proprietà non valida.  
  
 [!code-csharp[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#throwexceptiondata)]
 [!code-vb[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#throwexceptiondata)]  
  
 Nell'esempio seguente viene associato il `Age` proprietà per il <xref:System.Windows.Controls.TextBox> e imposta <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> a `true` sul <xref:System.Windows.Data.Binding>. Quando l'utente immette un valore non valido, verrà visualizzato un bordo rosso nel <xref:System.Windows.Controls.TextBox> e <xref:System.Windows.Controls.ToolTip> segnala il messaggio di errore.  
  
 [!code-xaml[BindingValidationAttributesSnippets#ThrowExceptionXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#throwexceptionxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se includere <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</summary>
        <value>
          <see langword="true" /> per includere l'oggetto <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando <xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> è `true`, l'associazione verifica la presenza e segnala gli errori generati da un'origine dati che implementa <xref:System.ComponentModel.INotifyDataErrorInfo>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una raccolta di regole che controllano la validità dell'input dell'utente.</summary>
        <value>Raccolta di oggetti <see cref="T:System.Windows.Controls.ValidationRule" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] modello di associazione dati consente di associare <xref:System.Windows.Data.Binding.ValidationRules%2A> con il <xref:System.Windows.Data.Binding> o <xref:System.Windows.Data.MultiBinding> oggetto. È possibile creare regole personalizzate mediante derivazione da di <xref:System.Windows.Controls.ValidationRule> classe e l'implementazione di <xref:System.Windows.Controls.ValidationRule.Validate%2A> (metodo), oppure è possibile utilizzare l'elemento predefinito <xref:System.Windows.Controls.ExceptionValidationRule>, che invalida un valore se sono presenti eccezioni durante gli aggiornamenti dell'origine.  
  
 Il motore di associazione controlla ogni <xref:System.Windows.Controls.ValidationRule> associata a un'associazione ogni volta che un valore di input (il valore di proprietà destinazione di associazione) viene trasferito alla proprietà di origine dell'associazione. Per una descrizione dettagliata del processo di convalida, vedere la sezione convalida dei dati nel [Panoramica del Data Binding](~/docs/framework/wpf/data/data-binding-overview.md).  
  
> [!NOTE]
>  Questa proprietà può essere impostata [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] solo utilizzando la sintassi di raccolta illustrata o accedendo all'oggetto collection e utilizzando i vari metodi, ad esempio `Add`. La proprietà per accedere all'oggetto di raccolta è di sola lettura, mentre la raccolta è in lettura / scrittura.  
  
<a name="xamlPropertyElementUsage_ValidationRules"></a>   
## <a name="xaml-property-element-usage"></a>Utilizzo della sintassi XAML per elementi proprietà  
  
```  
<object>  
  <object.ValidationRules>  
    oneOrMoreValidationRules  
  </object.ValidationRules>  
</object>  
  
```  
  
<a name="xamlValues_ValidationRules"></a>   
## <a name="xaml-values"></a>Valori XAML  
 *oneOrMoreValidationRules*  
 Uno o più <xref:System.Windows.Controls.ValidationRule> oggetti. È possibile utilizzare il <xref:System.Windows.Controls.ExceptionValidationRule> di classe o creare regole personalizzate creando sottoclassi di <xref:System.Windows.Controls.ValidationRule> classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Validation" />
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManager">
      <MemberSignature Language="C#" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="ILAsm" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XmlNamespaceManager" />
      <MemberSignature Language="VB.NET" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManagerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty XmlNamespaceManagerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty XmlNamespaceManagerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XmlNamespaceManagerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ XmlNamespaceManagerProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la proprietà associata <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una query <see langword="XPath" /> che restituisce il valore nell'origine di associazione [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] da usare.</summary>
        <value>Query <see langword="XPath" />. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando l'origine di associazione è [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] dati anziché un [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] oggetto, il <xref:System.Windows.Data.Binding.XPath%2A> proprietà viene usata invece del <xref:System.Windows.Data.Binding.Path%2A> proprietà per indicare il percorso per il valore dell'origine dell'associazione da utilizzare.  
  
 Impostando il <xref:System.Windows.Data.Binding.XPath%2A> proprietà, si sta creando un `XPath` query per selezionare un nodo o una raccolta di nodi (<xref:System.Xml.XmlElement?displayProperty=nameWithType> e <xref:System.Xml.XmlAttribute?displayProperty=nameWithType> entrambi derivano da <xref:System.Xml.XmlNode?displayProperty=nameWithType>). <xref:System.Xml.XmlNode?displayProperty=nameWithType> è un [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] oggetto, che significa che è possibile associare alle relative proprietà utilizzando il <xref:System.Windows.Data.Binding.Path%2A> proprietà.  
  
 Il <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> metodo gestisca il `XPath` espressioni dal <xref:System.Windows.Data.Binding.XPath%2A> proprietà. `XPath` funzioni non sono supportate. Per `XPath` sull'espressione, vedere il <xref:System.Xml.XmlNode.SelectNodes%2A> documentazione e alcuni esempi forniti nella sezione esempio.  
  
 LINQ a oggetti XML <xref:System.Xml.Linq.XDocument> e <xref:System.Xml.Linq.XElement> non utilizzano `XPath`. Per informazioni dettagliate, vedere [procedura: associare XDocument, XElement o LINQ dei risultati della Query XML](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>