<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BindingOperations.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b6d6ad02d9cad5d3fea47f68a5d2f16bfb2f4a51.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6d6ad02d9cad5d3fea47f68a5d2f16bfb2f4a51</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.BindingOperations">
          <source>Provides static methods to manipulate bindings, including <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph>, and <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> objects.</source>
          <target state="translated">Fornisce metodi statici per modificare associazioni, inclusi gli oggetti <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>This class exposes a set of static methods that serve as helper operations for data bindings.</source>
          <target state="translated">Questa classe espone un set di metodi statici che fungono da operazioni di supporto per i data binding.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
          <source>The collection to access.</source>
          <target state="translated">Raccolta a cui accedere.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
          <source>The action to perform on the collection.</source>
          <target state="translated">L'azione da eseguire sulla raccolta.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>accessMethod<ept id="p1">&lt;/c&gt;</ept> will write to the collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>accessMethod<ept id="p1">&lt;/c&gt;</ept> scriverà nella raccolta; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
          <source>Provides access to a collection by using the synchronization mechanism that the application specified when it called EnableCollectionSynchronization.</source>
          <target state="translated">Fornisce l'accesso a una raccolta utilizzando il meccanismo di sincronizzazione specificato dall'applicazione alla chiamata a EnableCollectionSynchronization.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
          <source>The object from which to remove bindings.</source>
          <target state="translated">Oggetto da cui rimuovere i binding.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
          <source>Removes all bindings, including bindings of type <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph>, and <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph>, from the specified <ph id="ph4">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Rimuove tutti i binding, inclusi quelli di tipo <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph>, dall'oggetto <ph id="ph4">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
          <source>If the specified object is not data-bound, this method has no effect.</source>
          <target state="translated">Se l'oggetto specificato non è associato a dati, questo metodo non ha alcun effetto.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
          <source>If <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;paramref name="target" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object from which to remove the binding.</source>
          <target state="translated">Oggetto da cui rimuovere l'associazione.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The dependency property from which to remove the binding.</source>
          <target state="translated">Proprietà di dipendenza da cui rimuovere l'associazione.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Removes the binding from a property if there is one.</source>
          <target state="translated">Rimuove l'associazione, se presente, da una proprietà.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>If the given property is data-bound with a <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>, this method removes the corresponding binding expression and restores the value of the property to what it was before any local value was set through the binding.</source>
          <target state="translated">Se la proprietà specificata è associata a dati con un <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, o <ph id="ph3">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>, questo metodo rimuove l'espressione di associazione di corrispondente e ripristina il valore della proprietà che era prima che qualsiasi valore locale è stato impostato tramite l'associazione.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>If the given property is not data-bound, this method has no effect.</source>
          <target state="translated">Se la proprietà specificata non è associato a dati, questo metodo non ha alcun effetto.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">I parametri <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> non possono essere <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="E:System.Windows.Data.BindingOperations.CollectionRegistering">
          <source>Occurs when the data-binding system notices a collection.</source>
          <target state="translated">Si verifica quando il sistema di associazione dati rileva una raccolta.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="E:System.Windows.Data.BindingOperations.CollectionViewRegistering">
          <source>Occurs when the data-binding system notices a collection view.</source>
          <target state="translated">Si verifica quando il sistema di associazione dati rileva una visualizzazione raccolta.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)">
          <source>The collection to remove synchronized access from.</source>
          <target state="translated">La raccolta da cui rimuovere l'accesso sincronizzato.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)">
          <source>Remove the synchronization registered for the specified collection.</source>
          <target state="translated">Rimuovere la sincronizzazione registrata per la raccolta specificata.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>Gets an object that replaces the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph> when an item container is removed from the visual tree.</source>
          <target state="translated">Ottiene un oggetto che sostituisce <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph> quando un contenitore di elementi viene rimosso dall'albero visuale.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>An object that replaces the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph> when an item container is removed from the visual tree.</source>
          <target state="translated">Oggetto che sostituisce <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph> quando un contenitore di elementi viene rimosso dall'albero visuale.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>Use this property if you need to deal with the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of an item container.</source>
          <target state="translated">Utilizzare questa proprietà se è necessario affrontare il <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> di un contenitore di elementi.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>An item container is the UI element that displays an item in an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</source>
          <target state="translated">Un contenitore dell'elemento è l'elemento dell'interfaccia utente che visualizza un elemento in un <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>When an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> is data bound to a collection, an item container is generated for each item.</source>
          <target state="translated">Quando un <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> dati è un contenitore di elementi associati a una raccolta, viene generato per ogni elemento.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>In some cases, item containers are removed from the visual tree.</source>
          <target state="translated">In alcuni casi, i contenitori di elementi vengono rimossi dalla struttura ad albero visuale.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>Two typical cases where an item container is removed are when an item is removed from the underlying collection and when virtualization is enabled on the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</source>
          <target state="translated">In cui viene rimosso un contenitore di elementi in due casi tipici sono quando un elemento viene rimosso dalla raccolta sottostante e quando è abilitata la virtualizzazione nel <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>In these cases, the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> property of the item container will be set to the <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A&gt;</ph> property  You should check whether the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> is equal to the <ph id="ph4">&lt;xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A&gt;</ph> before accessing the <ph id="ph5">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> in the <ph id="ph6">&lt;xref:System.Windows.FrameworkElement.DataContextChanged&gt;</ph> event for item containers.</source>
          <target state="translated">In questi casi, il <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> del contenitore di elementi verrà impostata il <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A&gt;</ph> proprietà controllare se il <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> è uguale al <ph id="ph4">&lt;xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A&gt;</ph> prima di accedere il <ph id="ph5">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> nel <ph id="ph6">&lt;xref:System.Windows.FrameworkElement.DataContextChanged&gt;</ph> eventi per elemento contenitori.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>For more information about item containers and virtualization, see the remarks in the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> class.</source>
          <target state="translated">Per ulteriori informazioni sui contenitori di elementi e la virtualizzazione, vedere la sezione osservazioni nel <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.BindingOperations">
          <source>Enables a <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> object to participate in synchronized access to a collection that is used on multiple threads.</source>
          <target state="translated">Consente a un oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> di partecipare all'accesso sincronizzato a una raccolta usata in più thread.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>A WPF application can display a collection of data using an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> or one of its subclasses (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc.).</source>
          <target state="translated">Un'applicazione WPF è possibile visualizzare una raccolta di dati mediante un <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> o una delle sue sottoclassi (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, ecc.).</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>WPF channels all its access to the collection through a subclass of <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</source>
          <target state="translated">WPF canali tutti l'accesso alla raccolta tramite una sottoclasse di <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Both the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> have affinity to the thread on which the <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> was created, meaning that using them on a different thread is forbidden and throws an exception.</source>
          <target state="translated">Sia il <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> presentano l'affinità di thread in cui il <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> è stato creato, vale a dire che il loro utilizzo su un altro thread non è consentito e genera un'eccezione.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>In effect, this restriction applies to the collection as well.</source>
          <target state="translated">In effetti, questa restrizione si applica anche alla raccolta.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>You may want to use the collection on multiple threads.</source>
          <target state="translated">Si desideri utilizzare l'insieme in più thread.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</source>
          <target state="translated">Ad esempio, si desidera aggiornare la raccolta (aggiungono o rimuovono elementi) in un thread "raccolta di dati", durante la visualizzazione dei risultati in un thread "interfaccia", in modo che l'interfaccia utente rimane attiva durante la raccolta di dati è in corso.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection.</source>
          <target state="translated">In questo caso, è responsabile per garantire l'accesso sincronizzato ("thread-safe") alla raccolta.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>This is typically done using either a simple lock mechanism or a more elaborate synchronization mechanism such as semaphores, reset events, etc.</source>
          <target state="translated">Questa operazione viene in genere eseguita mediante un meccanismo semplice blocco o un meccanismo di sincronizzazione più complesso, ad esempio semafori, reimpostare gli eventi e così via.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>While you must synchronize your application's access to the collection, you must also guarantee that access from WPF (specifically from <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) participates in the same synchronization mechanism.</source>
          <target state="translated">Anche se è necessario sincronizzare l'accesso dell'applicazione alla raccolta, è necessario inoltre garantire che l'accesso da WPF (in particolare da <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) partecipa lo stesso meccanismo di sincronizzazione.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>You do this by calling the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> method.</source>
          <target state="translated">A tale scopo, è possibile chiamare il metodo <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>To use a collection on multiple threads, one of which is the UI thread that owns the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, an application has the following responsibilities:</source>
          <target state="translated">Per utilizzare un insieme in più thread, uno dei quali è il thread dell'interfaccia utente che possiede il <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, un'applicazione ha le responsabilità seguenti:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Choose a synchronization mechanism.</source>
          <target state="translated">Scegliere un meccanismo di sincronizzazione.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Synchronize all access from the application to the collection using that mechanism.</source>
          <target state="translated">Sincronizzare tutti gli accessi dall'applicazione alla raccolta utilizzando tale meccanismo.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> to inform WPF of the mechanism.</source>
          <target state="translated">Chiamare <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> per informare WPF del meccanismo.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The call must occur on the UI thread.</source>
          <target state="translated">La chiamata deve verificarsi sul thread dell'interfaccia utente.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The call must occur before using the collection on a different thread or before attaching the collection to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, whichever is later.</source>
          <target state="translated">La chiamata deve verificarsi prima di utilizzare la raccolta in un thread differente o prima di collegare la raccolta per il <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, a seconda del valore è una versione successiva.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> overload if using a simple lock mechanism; call the <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> overload if using a more elaborate mechanism.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> overload se si utilizza un meccanismo semplice blocco; chiamata il <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> overload se si utilizza un meccanismo più complesso.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Ensure that a change to the collection and the notification of that change (through <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) are atomic; no access from other threads can intervene.</source>
          <target state="translated">Verificare che una modifica alla raccolta e la notifica della modifica (tramite <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) sono atomica; Nessun accesso da altri thread può intervenire.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>(This is usually free.</source>
          <target state="translated">(Si tratta in genere disponibile.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>For instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> guarantees this, provided that all changes are protected by synchronization.)</source>
          <target state="translated">For Instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> garantisce, purché tutte le modifiche sono protetti tramite la sincronizzazione.)</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, that call must also occur on the UI thread.</source>
          <target state="translated">Se si chiama <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, che la chiamata deve verificarsi anche nel thread UI.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>If you want to use the same collection on multiple UI threads, you must call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (and <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, if needed) separately on each UI thread.</source>
          <target state="translated">Se si desidera utilizzare la stessa raccolta su più thread dell'interfaccia utente, è necessario chiamare <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (e <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, se necessario) separato per ogni thread dell'interfaccia utente.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Avoid deadlock.</source>
          <target state="translated">Evitare i deadlock.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization, as discussed in the following paragraph.</source>
          <target state="translated">Questo è responsabilità dell'applicazione una volta che si sceglie di utilizzare la sincronizzazione, ma deve anche considerare la partecipazione di WPF account nella sincronizzazione, come descritto nel paragrafo seguente.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>In return, WPF provides the following behavior:</source>
          <target state="translated">In cambio, WPF offre quanto segue:</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accesses the collection using the given synchronization mechanism.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accede alla raccolta utilizzando il meccanismo di sincronizzazione specificato.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> maintains a "shadow copy" of the collection for use on the UI thread.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> mantiene una "copia" della raccolta per l'uso nel thread UI.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> events are queued up as they arrive (on any thread).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> gli eventi vengono accodati fino al momento della ricezione (in qualsiasi thread).</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</source>
          <target state="translated">Gli eventi in sospeso vengono applicate alla copia shadow in modo asincrono sul thread dell'interfaccia utente quando ha la possibilità di farlo.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> won't directly use any other synchronization mechanism visible to the application.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> non verranno usate direttamente qualsiasi altro meccanismo di sincronizzazione visibile all'applicazione.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>This is WPF's way of helping to avoid deadlock (see the previous item 7).</source>
          <target state="translated">Questo è il modo di WPF di evitare i deadlock (vedere l'elemento precedente 7).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The net effect is that you can change the collection on any thread, and those changes eventually appear in the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> when the UI thread has time to "catch up".</source>
          <target state="translated">L'effetto finale è che è possibile modificare la raccolta in qualsiasi thread e le modifiche visualizzate alla fine nel <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> quando il thread dell'interfaccia utente è ora "aggiornamento".</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</source>
          <target state="translated">L'implementazione è stata ottimizzata per limitare la velocità di flusso delle modifiche nel thread dell'interfaccia utente per mantenere background thread da saturare il thread UI e sottrarre la risposta all'input dell'utente normale.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The collection that needs synchronized access.</source>
          <target state="translated">Raccolta che richiede l'accesso sincronizzato.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The object to lock when accessing the collection.</source>
          <target state="translated">Oggetto da bloccare quando si accede alla raccolta.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Enables a <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> object to participate in synchronized access to a collection used on multiple threads by using a simple locking mechanism.</source>
          <target state="translated">Consente a un oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> di partecipare all'accesso sincronizzato a una raccolta usata in più thread tramite un meccanismo di blocco semplice.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>A WPF application can display a collection of data using an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> or one of its subclasses (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc.).</source>
          <target state="translated">Un'applicazione WPF è possibile visualizzare una raccolta di dati mediante un <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> o una delle sue sottoclassi (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, ecc.).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>WPF channels all its access to the collection through a subclass of <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</source>
          <target state="translated">WPF canali tutti l'accesso alla raccolta tramite una sottoclasse di <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Both the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> have affinity to the thread on which the <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> was created, meaning that using them on a different thread is forbidden and throws an exception.</source>
          <target state="translated">Sia il <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> presentano l'affinità di thread in cui il <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> è stato creato, vale a dire che il loro utilizzo su un altro thread non è consentito e genera un'eccezione.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>In effect, this restriction applies to the collection as well.</source>
          <target state="translated">In effetti, questa restrizione si applica anche alla raccolta.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>You may want to use the collection on multiple threads.</source>
          <target state="translated">Si desideri utilizzare l'insieme in più thread.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</source>
          <target state="translated">Ad esempio, si desidera aggiornare la raccolta (aggiungono o rimuovono elementi) in un thread "raccolta di dati", durante la visualizzazione dei risultati in un thread "interfaccia", in modo che l'interfaccia utente rimane attiva durante la raccolta di dati è in corso.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) participates in the same synchronization mechanism.</source>
          <target state="translated">In questo caso, si è responsabili della garantire sincronizzare l'accesso ("thread-safe") alla raccolta e per garantire che l'accesso da WPF (in particolare da <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) partecipa lo stesso meccanismo di sincronizzazione.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>By calling the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> method, you can do this by using a simple lock mechanism.</source>
          <target state="translated">Chiamando il <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> (metodo), è possibile farlo mediante un meccanismo semplice blocco.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>To use a collection on multiple threads, one of which is the UI thread that owns the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, you must do the following:</source>
          <target state="translated">Per utilizzare un insieme in più thread, uno dei quali è il thread dell'interfaccia utente che possiede il <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, è necessario eseguire le operazioni seguenti:</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Instantiate an object to lock when accessing the collection.</source>
          <target state="translated">Creare un'istanza di un oggetto di blocco quando accedono alla raccolta.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Synchronize all access from the application to the collection by locking that object.</source>
          <target state="translated">Sincronizzare l'accesso tutte dall'applicazione alla raccolta l'oggetto di blocco.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> to inform WPF that you are using a simple lock mechanism.</source>
          <target state="translated">Chiamare <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> per informare WPF che si sta utilizzando un meccanismo semplice blocco.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The call must occur on the UI thread.</source>
          <target state="translated">La chiamata deve verificarsi sul thread dell'interfaccia utente.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The call must occur before using the collection on a different thread or before attaching the collection to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, whichever is later.</source>
          <target state="translated">La chiamata deve verificarsi prima di utilizzare la raccolta in un thread differente o prima di collegare la raccolta per il <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, a seconda del valore è una versione successiva.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Ensure that a change to the collection and the notification of that change (through <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) are atomic; no access from other threads can intervene.</source>
          <target state="translated">Verificare che una modifica alla raccolta e la notifica della modifica (tramite <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) sono atomica; Nessun accesso da altri thread può intervenire.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>(This is usually free.</source>
          <target state="translated">(Si tratta in genere disponibile.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>For instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> guarantees this, provided that all changes are protected by synchronization.)</source>
          <target state="translated">For Instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> garantisce, purché tutte le modifiche sono protetti tramite la sincronizzazione.)</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, that call must also occur on the UI thread.</source>
          <target state="translated">Se si chiama <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, che la chiamata deve verificarsi anche nel thread UI.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>If you want to use the same collection on multiple UI threads, you must call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (and <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, if needed) separately on each UI thread.</source>
          <target state="translated">Se si desidera utilizzare la stessa raccolta su più thread dell'interfaccia utente, è necessario chiamare <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (e <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, se necessario) separato per ogni thread dell'interfaccia utente.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Avoid deadlock.</source>
          <target state="translated">Evitare i deadlock.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</source>
          <target state="translated">Questo è responsabilità dell'applicazione una volta che si sceglie di utilizzare la sincronizzazione, ma anche necessario prendere in considerazione la partecipazione di WPF nel processo di sincronizzazione.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>(See more, below.)</source>
          <target state="translated">(Vedere altre informazioni, di seguito).</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>In return, WPF provides the following behavior:</source>
          <target state="translated">In cambio, WPF offre quanto segue:</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accesses the collection using the locking mechanism.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accede alla raccolta utilizzando il meccanismo di blocco.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> maintains a "shadow copy" of the collection for use on the UI thread.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> mantiene una "copia" della raccolta per l'uso nel thread UI.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> events are queued up as they arrive (on any thread).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> gli eventi vengono accodati fino al momento della ricezione (in qualsiasi thread).</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</source>
          <target state="translated">Gli eventi in sospeso vengono applicate alla copia shadow in modo asincrono sul thread dell'interfaccia utente quando ha la possibilità di farlo.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> will not directly use any other synchronization mechanism visible to the application.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> verrà usata non direttamente qualsiasi altro meccanismo di sincronizzazione visibile all'applicazione.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>This is WPF's way of helping to avoid deadlock (see the previous item 7).</source>
          <target state="translated">Questo è il modo di WPF di evitare i deadlock (vedere l'elemento precedente 7).</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The net effect is that you can change the collection on any thread, and those changes eventually appear in the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> when the UI thread has time to "catch up".</source>
          <target state="translated">L'effetto finale è che è possibile modificare la raccolta in qualsiasi thread e le modifiche visualizzate alla fine nel <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> quando il thread dell'interfaccia utente è ora "aggiornamento".</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</source>
          <target state="translated">L'implementazione è stata ottimizzata per limitare la velocità di flusso delle modifiche nel thread dell'interfaccia utente per mantenere background thread da saturare il thread UI e sottrarre la risposta all'input dell'utente normale.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The collection that needs synchronized access.</source>
          <target state="translated">Raccolta che richiede l'accesso sincronizzato.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>An object that is passed to the callback.</source>
          <target state="translated">Oggetto che viene passato al callback.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The callback that is invoked whenever access to the collection is required.</source>
          <target state="translated">Callback che viene richiamato ogni volta che è richiesto l'accesso alla raccolta.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>You can use it to ensure that the collection is accessed by one thread at a time.</source>
          <target state="translated">Può essere usato per garantire che l'accesso alla raccolta venga eseguito da un solo thread alla volta.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Enables a <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> object to participate in synchronized access to a collection used on multiple threads by using a mechanism other than a simple lock.</source>
          <target state="translated">Consente a un oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> di partecipare all'accesso sincronizzato a una raccolta usata in più thread tramite un meccanismo diverso dal blocco semplice.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>A WPF application can display a collection of data using an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> or one of its subclasses (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc.).</source>
          <target state="translated">Un'applicazione WPF è possibile visualizzare una raccolta di dati mediante un <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> o una delle sue sottoclassi (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, ecc.).</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>WPF channels all its access to the collection through a subclass of <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</source>
          <target state="translated">WPF canali tutti l'accesso alla raccolta tramite una sottoclasse di <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Both the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> have affinity to the thread on which the <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> was created, meaning that using them on a different thread is forbidden and throws an exception.</source>
          <target state="translated">Sia il <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> presentano l'affinità di thread in cui il <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> è stato creato, vale a dire che il loro utilizzo su un altro thread non è consentito e genera un'eccezione.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>In effect, this restriction applies to the collection as well.</source>
          <target state="translated">In effetti, questa restrizione si applica anche alla raccolta.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>You may want to use the collection on multiple threads.</source>
          <target state="translated">Si desideri utilizzare l'insieme in più thread.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</source>
          <target state="translated">Ad esempio, si desidera aggiornare la raccolta (aggiungono o rimuovono elementi) in un thread "raccolta di dati", durante la visualizzazione dei risultati in un thread "interfaccia", in modo che l'interfaccia utente rimane attiva durante la raccolta di dati è in corso.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) participates in the same synchronization mechanism.</source>
          <target state="translated">In questo caso, si è responsabili della garantire sincronizzare l'accesso ("thread-safe") alla raccolta e per garantire che l'accesso da WPF (in particolare da <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) partecipa lo stesso meccanismo di sincronizzazione.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>By calling the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> method, you can do this by using a synchronization mechanism such as a semaphores, a reset event, etc.</source>
          <target state="translated">Chiamando il <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> (metodo), è possibile farlo usando un meccanismo di sincronizzazione, ad esempio un semafori, un evento di reimpostazione e così via.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>To use a collection on multiple threads, one of which is the UI thread that owns the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, you must do the following:</source>
          <target state="translated">Per utilizzare un insieme in più thread, uno dei quali è il thread dell'interfaccia utente che possiede il <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, è necessario eseguire le operazioni seguenti:</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Choose a synchronization mechanism.</source>
          <target state="translated">Scegliere un meccanismo di sincronizzazione.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Synchronize all access from the application to the collection using that mechanism.</source>
          <target state="translated">Sincronizzare tutti gli accessi dall'applicazione alla raccolta utilizzando tale meccanismo.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> overload to inform WPF that you are using a mechanism other than simple locking.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> overload per informare WPF che si sta utilizzando un meccanismo diverso dal semplice blocco.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The call must occur on the UI thread.</source>
          <target state="translated">La chiamata deve verificarsi sul thread dell'interfaccia utente.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The call must occur before using the collection on a different thread or before attaching the collection to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, whichever is later.</source>
          <target state="translated">La chiamata deve verificarsi prima di utilizzare la raccolta in un thread differente o prima di collegare la raccolta per il <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, a seconda del valore è una versione successiva.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Ensure that a change to the collection and the notification of that change (through <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) are atomic; no access from other threads can intervene.</source>
          <target state="translated">Verificare che una modifica alla raccolta e la notifica della modifica (tramite <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) sono atomica; Nessun accesso da altri thread può intervenire.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>(This is usually free.</source>
          <target state="translated">(Si tratta in genere disponibile.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>For instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> guarantees this, provided that all changes are protected by synchronization.)</source>
          <target state="translated">For Instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> garantisce, purché tutte le modifiche sono protetti tramite la sincronizzazione.)</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, that call must also occur on the UI thread.</source>
          <target state="translated">Se si chiama <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, che la chiamata deve verificarsi anche nel thread UI.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>If you want to use the same collection on multiple UI threads, you must call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (and <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, if needed) separately on each UI thread.</source>
          <target state="translated">Se si desidera utilizzare la stessa raccolta su più thread dell'interfaccia utente, è necessario chiamare <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (e <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, se necessario) separato per ogni thread dell'interfaccia utente.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Avoid deadlock.</source>
          <target state="translated">Evitare i deadlock.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</source>
          <target state="translated">Questo è responsabilità dell'applicazione una volta che si sceglie di utilizzare la sincronizzazione, ma anche necessario prendere in considerazione la partecipazione di WPF nel processo di sincronizzazione.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>(See more, below.)</source>
          <target state="translated">(Vedere altre informazioni, di seguito).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>In return, WPF provides the following behavior:</source>
          <target state="translated">In cambio, WPF offre quanto segue:</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accesses the collection by calling the registered <ph id="ph2">&lt;xref:System.Windows.Data.CollectionSynchronizationCallback&gt;</ph> with the following arguments:</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accede alla raccolta chiamando registrato <ph id="ph2">&lt;xref:System.Windows.Data.CollectionSynchronizationCallback&gt;</ph> con gli argomenti seguenti:</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`collection`</ph>: the collection of interest.</source>
          <target state="translated"><ph id="ph1">`collection`</ph>: la raccolta di interesse.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`context`</ph>: the registered context object.</source>
          <target state="translated"><ph id="ph1">`context`</ph>: l'oggetto di contesto registrato.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`accessMethod`</ph>: a delegate that performs the actual access.</source>
          <target state="translated"><ph id="ph1">`accessMethod`</ph>: un delegato che esegue l'effettivo accesso.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`writeAccess`</ph>: <ph id="ph2">`true`</ph> if the delegate will modify the collection; <ph id="ph3">`false`</ph> otherwise.</source>
          <target state="translated"><ph id="ph1">`writeAccess`</ph>: <ph id="ph2">`true`</ph> se il delegato verrà modificato nella raccolta. <ph id="ph3">`false`</ph> in caso contrario.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Your <ph id="ph1">&lt;xref:System.Windows.Data.CollectionSynchronizationCallback&gt;</ph> should establish synchronization on the collection (using the <ph id="ph2">`context`</ph> object and the <ph id="ph3">`writeAccess`</ph> value, as appropriate), call the <ph id="ph4">`accessMethod`</ph>, then release synchronization.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Data.CollectionSynchronizationCallback&gt;</ph> deve stabilire la sincronizzazione per la raccolta (utilizzando la <ph id="ph2">`context`</ph> oggetto e <ph id="ph3">`writeAccess`</ph> valore, come appropriato), chiamare il <ph id="ph4">`accessMethod`</ph>, quindi rilasciare la sincronizzazione.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> maintains a "shadow copy" of the collection for use on the UI thread.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> mantiene una "copia" della raccolta per l'uso nel thread UI.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> events are queued up as they arrive (on any thread).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> gli eventi vengono accodati fino al momento della ricezione (in qualsiasi thread).</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</source>
          <target state="translated">Gli eventi in sospeso vengono applicate alla copia shadow in modo asincrono sul thread dell'interfaccia utente quando ha la possibilità di farlo.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> will not directly use any other synchronization mechanism visible to the application.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> verrà usata non direttamente qualsiasi altro meccanismo di sincronizzazione visibile all'applicazione.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>This is WPF's way of helping to avoid deadlock (see the previous item 7).</source>
          <target state="translated">Questo è il modo di WPF di evitare i deadlock (vedere l'elemento precedente 7).</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The net effect is that you can change the collection on any thread, and those changes eventually appear in the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> when the UI thread has time to "catch up".</source>
          <target state="translated">L'effetto finale è che è possibile modificare la raccolta in qualsiasi thread e le modifiche visualizzate alla fine nel <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> quando il thread dell'interfaccia utente è ora "aggiornamento".</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</source>
          <target state="translated">L'implementazione è stata ottimizzata per limitare la velocità di flusso delle modifiche nel thread dell'interfaccia utente per mantenere background thread da saturare il thread UI e sottrarre la risposta all'input dell'utente normale.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The <ph id="ph1">`context`</ph> parameter is an arbitrary object that is passed to the <ph id="ph2">`callback`</ph>.</source>
          <target state="translated">Il <ph id="ph1">`context`</ph> parametro è un oggetto arbitrario che viene passato per il <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>You can use it to determine the synchronization mechanism used to control access to <ph id="ph1">`collection`</ph>.</source>
          <target state="translated">È possibile utilizzarlo per determinare il meccanismo di sincronizzazione utilizzato per controllare l'accesso a <ph id="ph1">`collection`</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`Context`</ph> can be <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`Context`</ph> può essere <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Oggetto che include <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the binding.</source>
          <target state="translated">Proprietà di destinazione dell'associazione dalla quale recuperare l'associazione.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">Recupera l’oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> impostato sulla proprietà specificata.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> object set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no <ph id="ph3">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> object has been set.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> impostato sulla proprietà specificata o <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non è stato impostato alcun oggetto <ph id="ph3">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be null.</source>
          <target state="translated">I parametri <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> non possono essere null.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Oggetto che include <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> object.</source>
          <target state="translated">Proprietà della destinazione di associazione dalla quale recuperare l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">Recupera l’oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> impostato sulla proprietà specificata.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> object that is set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no binding object has been set.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> impostato sulla proprietà specificata o <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non è stato impostato alcun oggetto.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> class is the common base class for the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> classes.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> classe è la classe di base comune per il <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, e <ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> classi.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBinding%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A&gt;</ph> methods if you know in advance the type of binding that is set on the property.</source>
          <target state="translated">È possibile utilizzare il <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBinding%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A&gt;</ph> metodi se si conosce in anticipo il tipo di associazione che è impostano sulla proprietà.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">I parametri <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> non possono essere <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Oggetto di destinazione del binding in cui si trova <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> object.</source>
          <target state="translated">Proprietà della destinazione di associazione dalla quale recuperare l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> object associated with the specified binding target property on the specified object.</source>
          <target state="translated">Restituisce l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> associato alla proprietà della destinazione di associazione specificata nell'oggetto specificato.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> object associated with the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> associato alla proprietà specificata o <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non esistono oggetti.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>If a <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> object is set on the property, the <ph id="ph2">&lt;see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /&gt;</ph> is returned.</source>
          <target state="translated">Se un oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> è impostato sulla proprietà, viene restituito <ph id="ph2">&lt;see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> object maintains the connection between the binding source and the binding target.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> oggetto mantiene la connessione tra l'origine di associazione e la destinazione dell'associazione.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>You can obtain the <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> object by calling this static method or by calling the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.GetBindingExpression%2A&gt;</ph> method on a data-bound <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> object.</source>
          <target state="translated">È possibile ottenere il <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> oggetto chiamando questo metodo statico o chiamando il <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.GetBindingExpression%2A&gt;</ph> metodo su un controllo con associazione a dati <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph> o <ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The following example shows the implementation of a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event handler that uses the <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph> method to obtain the <ph id="ph3">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> and then calls the <ph id="ph4">&lt;xref:System.Windows.Data.BindingExpression.DataItem%2A&gt;</ph> property to access the binding source object.</source>
          <target state="translated">Nell'esempio seguente viene illustrata l'implementazione di un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> gestore eventi che utilizza il <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph> per ottenere il <ph id="ph3">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> e quindi chiama il <ph id="ph4">&lt;xref:System.Windows.Data.BindingExpression.DataItem%2A&gt;</ph> proprietà per accedere all'oggetto di origine di associazione.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph><ph id="ph2">`SavingsText`</ph> is the binding target object and <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock.Text%2A&gt;</ph> is the binding target property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> <ph id="ph2">`SavingsText`</ph> è l'oggetto di destinazione e <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock.Text%2A&gt;</ph> è la proprietà di destinazione del binding.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">I parametri <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> non possono essere <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Oggetto che include <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> object.</source>
          <target state="translated">Proprietà della destinazione di associazione dalla quale recuperare l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">Recupera l’oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> impostato sulla proprietà specificata.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> object that is set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no binding object has been set.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> impostato sulla proprietà specificata o <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non è stato impostato alcun oggetto.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> class is the common base class for the <ph id="ph2">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBindingExpression&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Data.MultiBindingExpression&gt;</ph> classes.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> classe è la classe di base comune per il <ph id="ph2">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBindingExpression&gt;</ph>, e <ph id="ph4">&lt;xref:System.Windows.Data.MultiBindingExpression&gt;</ph> classi.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A&gt;</ph> methods if you know in advance type of binding that is set on the property.</source>
          <target state="translated">È possibile utilizzare il <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A&gt;</ph> metodi se si conosce in anticipo il tipo di associazione che è impostato sulla proprietà.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be null.</source>
          <target state="translated">I parametri <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> non possono essere null.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Oggetto che include <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the binding.</source>
          <target state="translated">Proprietà di destinazione dell'associazione dalla quale recuperare l'associazione.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">Recupera l’oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> impostato sulla proprietà specificata.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> object set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> object has been set.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> impostato sulla proprietà specificata o <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non è stato impostato alcun oggetto <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be null.</source>
          <target state="translated">I parametri <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> non possono essere null.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Oggetto di destinazione del binding in cui si trova <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> object.</source>
          <target state="translated">Proprietà della destinazione di associazione dalla quale recuperare l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> object associated with the specified binding target property on the specified object.</source>
          <target state="translated">Restituisce l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> associato alla proprietà della destinazione di associazione specificata nell'oggetto specificato.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> object associated with the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> associato alla proprietà specificata o <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non esistono oggetti.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.MultiBindingExpression&gt;</ph> object associated with the given property or <ph id="ph2">`null`</ph> if none exists.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Windows.Data.MultiBindingExpression&gt;</ph> associato alla proprietà specificata o <ph id="ph2">`null`</ph> se non esistono oggetti.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">I parametri <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> non possono essere <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Oggetto che include <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the binding.</source>
          <target state="translated">Proprietà di destinazione dell'associazione dalla quale recuperare l'associazione.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">Recupera l’oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> impostato sulla proprietà specificata.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> object set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> object has been set.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> impostato sulla proprietà specificata o <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non è stato impostato alcun oggetto <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be null.</source>
          <target state="translated">I parametri <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> non possono essere null.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Oggetto di destinazione del binding in cui si trova <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> object.</source>
          <target state="translated">Proprietà della destinazione di associazione dalla quale recuperare l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> object associated with the specified binding target property on the specified object.</source>
          <target state="translated">Restituisce l'oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> associato alla proprietà della destinazione di associazione specificata nell'oggetto specificato.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> object associated with the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> associato alla proprietà specificata o <ph id="ph2">&lt;see langword="null" /&gt;</ph> se non esistono oggetti.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">I parametri <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> non possono essere <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>The root <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> to get binding groups for.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> radice per cui ottenere i gruppi di associazione.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>This method returns <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> objects that are associated with this element or its descendant elements.</source>
          <target state="translated">Questo metodo restituisce gli oggetti <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> associati a questo elemento o ai relativi elementi discendenti.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>Gets all <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> objects that have invalid values or target values have not been updated the source.</source>
          <target state="translated">Ottiene tutti gli oggetti <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> che hanno valori non validi o valori di destinazione che non sono stati aggiornati nell'origine.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</source>
          <target state="translated">Raccolta di oggetti di <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> associati con l'elemento specificato e presentano valori non validi o valori di destinazione che non hanno aggiornato l'origine.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>If <ph id="ph1">`root`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A&gt;</ph> returns all <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> objects that are invalid or have not been updated.</source>
          <target state="translated">Se <ph id="ph1">`root`</ph> è <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A&gt;</ph> restituisce tutti <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> gli oggetti che non sono valide o non sono stati aggiornati.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>The root <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> to get binding groups for.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> radice per cui ottenere i gruppi di associazione.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>This method returns <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> objects that are associated with this element or its descendant elements.</source>
          <target state="translated">Questo metodo restituisce gli oggetti <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> associati a questo elemento o ai relativi elementi discendenti.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>Gets all <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> objects that have invalid values or target values have not been updated the source.</source>
          <target state="translated">Ottiene tutti gli oggetti <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> che hanno valori non validi o valori di destinazione che non sono stati aggiornati nell'origine.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</source>
          <target state="translated">Raccolta di oggetti di <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> associati con l'elemento specificato e presentano valori non validi o valori di destinazione che non hanno aggiornato l'origine.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>If <ph id="ph1">`root`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A&gt;</ph> returns all <ph id="ph4">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> objects that are invalid or have not been updated.</source>
          <target state="translated">Se <ph id="ph1">`root`</ph> è <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A&gt;</ph> restituisce tutti <ph id="ph4">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> gli oggetti che non sono valide o non sono stati aggiornati.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">Oggetto che include <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The dependency property to check.</source>
          <target state="translated">Proprietà di dipendenza da controllare.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Returns a value that indicates whether the specified property is currently data-bound.</source>
          <target state="translated">Restituisce un valore che indica se la proprietà specificata è attualmente associata a dati.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified property is data-bound; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la proprietà specificata è associata ai dati; in caso contrario <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>If <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;paramref name="target" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The binding target of the binding.</source>
          <target state="translated">Destinazione del binding.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The target property of the binding.</source>
          <target state="translated">Proprietà di destinazione dell'associazione.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> object that describes the binding.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> che descrive l'associazione.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>Creates and associates a new instance of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> with the specified binding target property.</source>
          <target state="translated">Crea e associa una nuova istanza di <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> alla proprietà di destinazione del binding specificata.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The instance of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> created for and associated with the specified property.</source>
          <target state="translated">Istanza di <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> creata per e associata alla proprietà specificata.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> class is the base class of <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> è la classe di base di <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> e <ph id="ph4">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>This method creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> and associates the instance with the given dependency property of the given object.</source>
          <target state="translated">Questo metodo crea una nuova istanza di un <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> e associa l'istanza con la proprietà di dipendenza specificata dell'oggetto specificato.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>This method is the way to attach a binding to an arbitrary <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> that may not expose its own SetBinding method.</source>
          <target state="translated">Questo metodo è il modo per associare un'associazione a un oggetto arbitrario <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> che non può esporre il proprio metodo SetBinding.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The following example shows how to use this method to set a binding.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare questo metodo per impostare un'associazione.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>In this example, <ph id="ph1">`myNewBindDef`</ph> is a <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> object that describes the binding.</source>
          <target state="translated">In questo esempio, <ph id="ph1">`myNewBindDef`</ph> è un <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> oggetto che descrive l'associazione.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The binding target is <ph id="ph1">`myDateText`</ph>, an instance of the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> class.</source>
          <target state="translated">Destinazione del binding è <ph id="ph1">`myDateText`</ph>, un'istanza di <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The <ph id="ph1">&lt;paramref name="binding" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="binding" /&gt;</ph> non può essere <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>