<Type Name="BindingGroup" FullName="System.Windows.Data.BindingGroup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f649b391903f2bb1a09092568b00a0d61d647d4a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36365133" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BindingGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type BindingGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contiene un insieme di associazioni e di oggetti <see cref="T:System.Windows.Controls.ValidationRule" /> utilizzati per convalidare un oggetto.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Windows.Data.BindingGroup> crea una relazione tra più associazioni, che possono essere convalidati e aggiornate insieme. Ad esempio, si supponga che un'applicazione richieda all'utente di immettere un indirizzo. L'applicazione quindi popola un oggetto di tipo `Address`, che presenta le proprietà `Street`, `City`, `ZipCode`, e `Country`, con i valori immessi dall'utente. L'applicazione include un pannello che contiene quattro <xref:System.Windows.Controls.TextBox> controlli, ognuno dei quali è associato a una delle proprietà dell'oggetto dati. È possibile utilizzare un <xref:System.Windows.Controls.ValidationRule> in un <xref:System.Windows.Data.BindingGroup> per convalidare il `Address` oggetto. Se le associazioni fanno parte dello stesso <xref:System.Windows.Data.BindingGroup>, è possibile assicurarsi che il codice postale zip sia valido per il paese dell'indirizzo.  
  
 È impostato il <xref:System.Windows.FrameworkElement.BindingGroup%2A> proprietà sul <xref:System.Windows.FrameworkElement> o <xref:System.Windows.FrameworkContentElement>. Gli elementi figlio ereditano il <xref:System.Windows.Data.BindingGroup> dagli elementi padre, proprio come per qualsiasi altra proprietà ereditabile. Un'associazione a un elemento discendente viene aggiunto a un <xref:System.Windows.Data.BindingGroup> si verifica una delle situazioni seguenti:  
  
-   L'origine dell'associazione e il <xref:System.Windows.FrameworkElement.DataContext%2A> dell'elemento con il <xref:System.Windows.Data.BindingGroup> lo stesso oggetto e il <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> non è impostata.  
  
-   Il <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> proprietà dell'associazione è uguale al <xref:System.Windows.Data.BindingGroup.Name%2A> del <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> e non è impostate esplicitamente su `null`.  
  
 Nell'esempio dell'indirizzo, si supponga che il <xref:System.Windows.FrameworkElement.DataContext%2A> del <xref:System.Windows.Controls.Panel> è impostato sull'oggetto di tipo `Address`. L'associazione per ogni <xref:System.Windows.Controls.TextBox> viene aggiunto per il <xref:System.Windows.Data.BindingGroup> del pannello.  
  
 Si aggiungono <xref:System.Windows.Controls.ValidationRule> oggetti per un <xref:System.Windows.Data.BindingGroup>. Il <xref:System.Windows.Data.BindingGroup> viene passato come primo parametro del <xref:System.Windows.Controls.ValidationRule.Validate%2A> metodo quando il <xref:System.Windows.Controls.ValidationRule> viene eseguito. È possibile usare il <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> oppure <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> metodo su tale <xref:System.Windows.Data.BindingGroup> per ottenere i valori proposti per l'oggetto e il <xref:System.Windows.Data.BindingGroup.Items%2A> proprietà da ottenere le origini delle associazioni.  
  
 Oggetto <xref:System.Windows.Data.BindingGroup> Aggiorna le origini di associazione nello stesso momento anziché aggiornare separatamente ogni associazione. Quando si chiama uno dei metodi per convalidare i dati (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, o <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), l'associazione per ogni <xref:System.Windows.Controls.TextBox> nell'esempio viene convalidata e potenzialmente aggiornata. Quando un'associazione è parte di un <xref:System.Windows.Data.BindingGroup>, l'origine dell'associazione non viene aggiornato finché non si chiama <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> o <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> sul <xref:System.Windows.Data.BindingGroup>, a meno che non è impostato in modo esplicito il <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente creano un'applicazione che richiede all'utente di immettere la descrizione e il prezzo di un elemento e la data di scadenza dell'offerta. L'applicazione visualizza le informazioni correnti per l'elemento sotto il form. L'utente può inviare o annullare le modifiche.  
  
 L'applicazione esegue le operazioni seguenti per ottenere questo comportamento.  
  
-   Crea un <xref:System.Windows.Data.BindingGroup> e aggiunge all'oggetto radice <xref:System.Windows.Controls.StackPanel> quando crea il [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] dell'applicazione.  
  
-   Le chiamate <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, e <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> nella logica dell'applicazione per abilitare il rollback delle modifiche.  
  
-   Le chiamate <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> in un <xref:System.Windows.Controls.ValidationRule.Validate%2A> metodo per ottenere l'input dell'utente e quindi verificare che un elemento superiore a 100 dollari sia disponibile per almeno sette giorni.  
  
 Nell'esempio seguente viene creata la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] dell'applicazione. La radice <xref:System.Windows.Controls.StackPanel> ha un <xref:System.Windows.Data.BindingGroup> che contiene un <xref:System.Windows.Controls.ValidationRule> che convalida l'elemento, come descritto in precedenza. Gli oggetti di associazione sul `Price` proprietà e il `OfferExpires` proprietà diventano parte del <xref:System.Windows.Data.BindingGroup> e ciascuna associazione è un <xref:System.Windows.Controls.ValidationRule> per assicurarsi che il prezzo e alla data, rispettivamente, abbiano valori validi. Le regole di convalida per le singole proprietà eseguire prima la <xref:System.Windows.Controls.ValidationRule> nella <xref:System.Windows.Data.BindingGroup>.  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 Nell'esempio seguente vengono illustrati i gestori eventi per l'applicazione. Quando l'utente fa clic sul pulsante Invia, l'applicazione chiama <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> per eseguire ciascuno <xref:System.Windows.Controls.ValidationRule> che è associato il <xref:System.Windows.Data.BindingGroup>. Se ogni <xref:System.Windows.Controls.ValidationRule> ha esito positivo, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> Salva i valori per l'oggetto e termina la transazione di modifica. Se <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> viene completata correttamente, l'applicazione avvia un'altra transazione di modifica. Quando un <xref:System.Windows.Controls.ValidationRule> ha esito negativo, il <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> evento si verifica perché l'applicazione impostare <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> a `true` sul <xref:System.Windows.Data.BindingGroup> (nell'esempio precedente). `ItemError` gli handle di <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> eventi e visualizza le informazioni sull'errore di convalida all'utente. Nell'esempio viene inoltre gestito il <xref:System.Windows.FrameworkElement.Loaded> evento per il <xref:System.Windows.Controls.StackPanel> e il <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento per il **Annulla** pulsante.  
  
 [!code-csharp[BindingGroupSnippets#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#windowlogic)]
 [!code-vb[BindingGroupSnippets#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#windowlogic)]  
  
 L'esempio seguente mostra l'oggetto personalizzato <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, per cui è stato aggiunto il <xref:System.Windows.Data.BindingGroup> nel primo esempio. Il <xref:System.Windows.Controls.ValidationRule> Usa la <xref:System.Windows.Data.BindingGroup> nel relativo <xref:System.Windows.Controls.ValidationRule.Validate%2A> metodo per ottenere i valori immessi nel form e controlli che se un elemento è superiore a 100 dollari, sarà disponibile per almeno sette giorni dall'utente.  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="bindingGroup.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avvia una transazione di modifica sugli oggetti origine di associazione nell’insieme <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se le origini di <xref:System.Windows.Data.BindingGroup> supportano l'annullamento delle modifiche in sospeso, è possibile chiamare <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> per avviare la transazione di modifica, chiamare <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> per salvare le modifiche in sospeso, chiamare <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> per annullare le modifiche in sospeso.  
  
 Per ogni oggetto nella <xref:System.Windows.Data.BindingGroup.Items%2A> che implementa <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> chiamate <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 L'esempio seguente chiama <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> quando una finestra viene caricata per avviare la transazione di modifica.  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt; BindingExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; BindingExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingExpressions As Collection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ BindingExpressions { System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingExpressions : System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di oggetti <see cref="T:System.Windows.Data.BindingExpression" /> contenenti informazioni relative a ciascuna associazione nell’oggetto <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
        <value>Un insieme di oggetti <see cref="T:System.Windows.Data.BindingExpression" /> contenenti informazioni relative a ciascuna associazione nell’oggetto <see cref="T:System.Windows.Data.BindingGroup" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Data.BindingExpression> appartiene a un <xref:System.Windows.Data.BindingGroup> se si verifica uno dei seguenti casi:  
  
-   L'origine dell'associazione e il <xref:System.Windows.FrameworkElement.DataContext%2A> dell'elemento con il <xref:System.Windows.Data.BindingGroup> lo stesso oggetto e il <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> non è impostata.  
  
-   Il <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> proprietà dell'associazione e il <xref:System.Windows.Data.BindingGroup.Name%2A> del <xref:System.Windows.Data.BindingGroup> sono impostate sullo stesso valore non null e il <xref:System.Windows.Data.BindingGroup> appartiene a un elemento padre dell'elemento di destinazione del binding.  
  
-   Si aggiunge un <xref:System.Windows.Data.BindingExpression> a <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingGroup.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Termina la transazione di modifica e annulla le modifiche in sospeso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo fa sì che le origini annullare le modifiche in sospeso, se un oggetto di origine è in grado di questa operazione e terminare la transazione di modifica. Il metodo quindi aggiorna le proprietà di destinazione con i valori di origine salvata.  
  
 Per ogni oggetto nella <xref:System.Windows.Data.BindingGroup.Items%2A> che implementa <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> chiamate <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 Nell'esempio seguente viene chiamato <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> annullare le modifiche in sospeso e quindi chiama <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> per preparare l'origine per essere modificato nuovamente.  
  
 [!code-csharp[BindingGroupSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[BindingGroupSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRestoreValues">
      <MemberSignature Language="C#" Value="public bool CanRestoreValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRestoreValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRestoreValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRestoreValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRestoreValues : bool" Usage="System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se ciascuna origine di associazione può annullare le modifiche in sospeso e ripristinare i valori originali.</summary>
        <value>
          <see langword="true" /> se ciascuna origine di associazione può annullare le modifiche in sospeso e ripristinare i valori originali; altrimenti, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'origine può annullare le modifiche in sospeso se implementa <xref:System.ComponentModel.IEditableObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit();" />
      <MemberSignature Language="F#" Value="member this.CommitEdit : unit -&gt; bool" Usage="bindingGroup.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue tutti gli oggetti <see cref="T:System.Windows.Controls.ValidationRule" /> e aggiorna le origini di associazione, se tutte le regole di convalida sono state verificate con successo.</summary>
        <returns>
          <see langword="true" /> se tutti gli oggetti <see cref="T:System.Windows.Controls.ValidationRule" /> sono stati eseguiti con successo ed è stato eseguito il commit dei valori sulle origini; altrimenti, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se ogni <xref:System.Windows.Controls.ValidationRule> ha esito positivo, questo metodo fa sì che le origini per il commit delle modifiche in sospeso e terminare la transazione di modifica, se un oggetto di origine è in grado di farlo.  
  
 Per ogni oggetto nella <xref:System.Windows.Data.BindingGroup.Items%2A> che implementa <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> chiamate <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 Nell'esempio seguente viene chiamato <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> per salvare le modifiche in sospeso e quindi chiama <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> per preparare l'origine per essere modificato nuovamente.  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object item, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object item, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (item As Object, propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ item, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetValue : obj * string -&gt; obj" Usage="bindingGroup.GetValue (item, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">Oggetto contenente la proprietà specificata.</param>
        <param name="propertyName">La proprietà di cui si deve ottenere il valore proposto.</param>
        <summary>Restituisce i valori proposti per la proprietà e l’elemento specificati.</summary>
        <returns>Valore proposto per la proprietà.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare questo metodo nel <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> metodo per ottenere il valore di cui eseguire il commit all'origine. Il tipo del valore restituito dipende dalla fase in cui il <xref:System.Windows.Controls.ValidationRule> si verifica. Ad esempio, se un <xref:System.Windows.Controls.TextBox> è associato a dati a una proprietà di tipo integer e il <xref:System.Windows.Controls.ValidationRule> che chiama <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> ha relativo <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> impostato su <xref:System.Windows.Controls.ValidationStep.RawProposedValue>, il metodo restituisce una stringa. Se il <xref:System.Windows.Controls.ValidationRule> è il relativo <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> impostato su <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, il metodo restituisce il tipo restituito dal convertitore dell'associazione. In questo esempio, <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> in genere restituisce un intero.  
  
   
  
## Examples  
 Nell'esempio seguente fa parte di un'applicazione che richiede all'utente di immettere più clienti e assegnare un rappresentante di vendita per ogni cliente. L'applicazione verifica che il rappresentante di vendita e il cliente appartenga alla stessa area. Nell'esempio viene illustrata la <xref:System.Windows.Controls.ValidationRule.Validate%2A> metodo, che utilizza il <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> metodo per ottenere i valori immessi dal cliente.  
  
 [!code-csharp[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#itembindgroupvalidationrule)]
 [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#itembindgroupvalidationrule)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Non esiste alcuna associazione per la proprietà e l’elemento specificati.</exception>
        <exception cref="T:System.Windows.Data.ValueUnavailableException">Il valore della proprietà specificata non è disponibile, a causa di un errore di conversione o perché una precedente regola di convalida non ha avuto successo.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidationError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidationError : bool" Usage="System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se <see cref="T:System.Windows.Data.BindingGroup" /> include una regola di convalida con errori.</summary>
        <value>
          <see langword="true" /> se <see cref="T:System.Windows.Data.BindingGroup" /> presenta una regola di convalida con errori; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Windows.Data.BindingGroup.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se <see cref="T:System.Windows.Data.BindingGroup" /> contiene un valore proposto che non è stato scritto nell'origine.</summary>
        <value>
          <see langword="true" /> se <see cref="T:System.Windows.Data.BindingGroup" /> contiene un valore proposto che non è stato scritto nell'origine; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IList Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Items { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IList" Usage="System.Windows.Data.BindingGroup.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le origini utilizzate dagli oggetti associazione nell’insieme <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
        <value>Le origini utilizzate dagli oggetti associazione nell’insieme <see cref="T:System.Windows.Data.BindingGroup" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni oggetto che viene utilizzato come un'origine viene aggiunto il <xref:System.Windows.Data.BindingGroup.Items%2A> proprietà una sola volta, anche se l'oggetto viene utilizzato come origine per più associazioni. Spesso, è presente solo un elemento in <xref:System.Windows.Data.BindingGroup.Items%2A>, che rappresenta l'oggetto che è la <xref:System.Windows.FrameworkElement.DataContext%2A> dell'elemento che utilizza il <xref:System.Windows.Data.BindingGroup>. È possibile che un <xref:System.Windows.Data.BindingGroup> di disporre di più origini, tuttavia. Ad esempio, se gli oggetti di associazione condividono lo stesso <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> ma usare oggetti di origine diversi, ogni oggetto che viene utilizzato come origine <xref:System.Windows.Data.BindingGroup.Items%2A>.  
  
 Può anche essere presenti più oggetti in <xref:System.Windows.Data.BindingGroup.Items%2A> se il percorso di un'associazione può essere risolto in una proprietà annidata dell'origine. Si supponga ad esempio un <xref:System.Windows.Controls.TextBox> associazione del controllo non fa parte di un <xref:System.Windows.Data.BindingGroup> e il relativo <xref:System.Windows.FrameworkElement.DataContext%2A> è un `Customer` object, che contiene una proprietà di tipo `Address`. Se il <xref:System.Windows.Data.Binding.Path%2A> del <xref:System.Windows.Data.Binding> è il `Address.ZipCode` proprietà, il `Address` viene aggiunto al <xref:System.Windows.Data.BindingGroup.Items%2A> proprietà.  
  
   
  
## Examples  
 Negli esempi seguenti sono parte di un'applicazione che controlla se l'utente ha impostato la proprietà di due oggetti su valori uguali. Nel primo esempio vengono create due <xref:System.Windows.Controls.TextBox> controlli, ognuno dei quali dati sono associati a un'origine diversa. L'associazione del primo <xref:System.Windows.Controls.TextBox> Ottiene la propria origine `object1`, dal <xref:System.Windows.FrameworkElement.DataContext%2A> del <xref:System.Windows.Controls.TextBox> elemento padre del controllo (la <xref:System.Windows.Controls.StackPanel>). Nella seconda <xref:System.Windows.Controls.TextBox>, l'origine dell'associazione è impostato su `object2`. Nell'esempio viene creata anche una <xref:System.Windows.Controls.Label> che consente di visualizzare gli errori di convalida.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 Nell'esempio seguente il <xref:System.Windows.Controls.ValidationRule> utilizzato dall'esempio precedente. Nel <xref:System.Windows.Controls.ValidationRule.Validate%2A> metodo, l'esempio ottiene ogni oggetto di origine dal <xref:System.Windows.Data.BindingGroup> e controlla se le proprietà degli oggetti sono uguali.  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Data.BindingGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome che identifica l’oggetto di tipo <see cref="T:System.Windows.Data.BindingGroup" />, utilizzabile per aggiungere o eliminare oggetti associazione nell’insieme <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
        <value>Il nome che identifica l’oggetto di tipo <see cref="T:System.Windows.Data.BindingGroup" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.Windows.Data.BindingGroup.Name%2A> viene `null`, le associazioni che dispone di un'origine che è lo stesso oggetto come il <xref:System.Windows.FrameworkElement.DataContext%2A> dell'elemento che ha il <xref:System.Windows.Data.BindingGroup> partecipare il <xref:System.Windows.Data.BindingGroup>.  
  
 È possibile includere le associazioni che dispone di un'origine diversa dal <xref:System.Windows.FrameworkElement.DataContext%2A> dell'elemento padre che contiene il <xref:System.Windows.Data.BindingGroup> impostando <xref:System.Windows.Data.BindingGroup.Name%2A> del <xref:System.Windows.Data.BindingGroup> e il <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> proprietà di un'associazione sullo stesso valore. È possibile escludere le associazioni che hanno la stessa origine <xref:System.Windows.FrameworkElement.DataContext%2A> dell'elemento padre che contiene il <xref:System.Windows.Data.BindingGroup> impostando <xref:System.Windows.Data.BindingGroup.Name%2A> del <xref:System.Windows.Data.BindingGroup> e il <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> proprietà di un'associazione a valori diversi.  
  
   
  
## Examples  
 Negli esempi seguenti sono parte di un'applicazione che controlla se l'utente ha impostato la proprietà di due oggetti su valori uguali. Nel primo esempio vengono create due <xref:System.Windows.Controls.TextBox> controlli, ognuno dei quali dati sono associati a un'origine diversa. L'associazione del primo <xref:System.Windows.Controls.TextBox> fa parte il <xref:System.Windows.Data.BindingGroup> perché il <xref:System.Windows.Controls.TextBox> eredita il <xref:System.Windows.FrameworkElement.DataContext%2A> e <xref:System.Windows.Data.BindingGroup> dal relativo elemento padre <xref:System.Windows.Controls.StackPanel>.  
  
 L'associazione nella seconda <xref:System.Windows.Controls.TextBox> fa parte del <xref:System.Windows.Data.BindingGroup> perché il <xref:System.Windows.Data.BindingGroup.Name%2A> del <xref:System.Windows.Data.BindingGroup> e il <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> del <xref:System.Windows.Data.Binding> sono impostati entrambi su `bindingGroup`.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 Nell'esempio seguente il <xref:System.Windows.Controls.ValidationRule> utilizzato dall'esempio precedente. Nel <xref:System.Windows.Controls.ValidationRule.Validate%2A> metodo, l'esempio ottiene ogni oggetto di origine dal <xref:System.Windows.Data.BindingGroup> e controlla se le proprietà degli oggetti sono uguali.  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l’evento <see cref="E:System.Windows.Controls.Validation.Error" /> viene generato al modificarsi dello stato di un oggetto <see cref="T:System.Windows.Controls.ValidationRule" />.</summary>
        <value>
          <see langword="true" /> se l’evento <see cref="E:System.Windows.Controls.Validation.Error" /> viene generato al modificarsi dello stato di un oggetto <see cref="T:System.Windows.Controls.ValidationRule" />; altrimenti, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> evento si verifica sull'elemento che ha il <xref:System.Windows.Data.BindingGroup>.  
  
   
  
## Examples  
 Nell'esempio seguente viene creata una <xref:System.Windows.Data.BindingGroup> e imposta <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> a `true` in modo che l'applicazione può gestire il <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> evento quando un <xref:System.Windows.Controls.ValidationRule> ha esito negativo.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 L'esempio seguente viene gestito il <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> evento.  
  
 [!code-csharp[BindingGroupSnippets#ErrorHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#errorhandler)]
 [!code-vb[BindingGroupSnippets#ErrorHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#errorhandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Owner { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.DependencyObject" Usage="System.Windows.Data.BindingGroup.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto a cui è assegnato questo oggetto <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
        <value>Oggetto cui è assegnato questo oggetto <see cref="T:System.Windows.Data.BindingGroup" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharesProposedValues">
      <MemberSignature Language="C#" Value="public bool SharesProposedValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharesProposedValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SharesProposedValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SharesProposedValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SharesProposedValues : bool with get, set" Usage="System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'oggetto <see cref="T:System.Windows.Data.BindingGroup" /> riutilizza i valori di destinazione di cui non è stato eseguito il commit nell'origine.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Windows.Data.BindingGroup" /> riutilizza i valori di destinazione di cui non è stato eseguito il commit nell'origine; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valore proposto è un valore che è stato modificato nella destinazione di un'associazione, ma non è stato eseguito il commit all'origine. Ad esempio, si supponga che esista un'associazione bidirezionale in un <xref:System.Windows.Controls.TextBox> e il <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> è impostata su <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>. Se l'utente modifica il valore della <xref:System.Windows.Controls.TextBox>, il valore proposto è il valore nel <xref:System.Windows.Controls.TextBox> prima che venga eseguito il commit all'origine.  
  
 Quando si <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> viene `true`, il <xref:System.Windows.Data.BindingGroup> utilizza il valore proposto quando un'associazione lascia il BindingGroup e un'altra associazione con la stessa origine si unisce il BindingGroup.  Ad esempio, si supponga che un'applicazione consente all'utente di modificare più campi e aggiornare l'oggetto di origine facendo clic su un pulsante. Quando un campo non viene modificato, l'applicazione lo visualizza in un <xref:System.Windows.Controls.TextBlock>. Quando l'utente inizia a modificare un campo, l'applicazione sostituisce le <xref:System.Windows.Controls.TextBlock> con un <xref:System.Windows.Controls.TextBox>. Quando l'utente termina la modifica di tale campo, l'applicazione sostituisce le <xref:System.Windows.Controls.TextBox> con un <xref:System.Windows.Controls.TextBlock>. Poiché l'origine non viene aggiornata fino a quando l'utente fa clic sul pulsante, ci deve essere un modo per il <xref:System.Windows.Controls.TextBlock> per visualizzare il valore proposto. Impostando <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> a `true`, l'applicazione visualizzerà le modifiche dell'utente a un campo anche quando l'origine non è stato aggiornato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (object item, string propertyName, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(object item, string propertyName, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (item As Object, propertyName As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(System::Object ^ item, System::String ^ propertyName, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : obj * string *  -&gt; bool" Usage="bindingGroup.TryGetValue (item, propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item">Oggetto contenente la proprietà specificata.</param>
        <param name="propertyName">La proprietà di cui si deve ottenere il valore proposto.</param>
        <param name="value">Al termine dell’esecuzione, questo metodo contiene un oggetto che rappresenta il valore proposto della proprietà. Questo parametro viene passato non inizializzato.</param>
        <summary>Tenta di ottenere i valori proposti per la proprietà e l’elemento specificati.</summary>
        <returns>
          <see langword="true" /> se il valore corrisponde al valore proposto per la proprietà specificata; altrimenti, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> Restituisce `false` se non esiste un'associazione per l'elemento specificato e una proprietà o se il valore della proprietà specificata non è disponibile, a causa di un errore di conversione o perché una regola di convalida precedente non è riuscita.  
  
 Usare questo metodo nel <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> metodo per ottenere il valore di cui eseguire il commit all'origine. Il tipo `value` dipende dalla fase in cui il <xref:System.Windows.Controls.ValidationRule> si verifica. Ad esempio, se un <xref:System.Windows.Controls.TextBox> è associata a una proprietà di tipo integer, ai dati `value` è una stringa se il <xref:System.Windows.Controls.ValidationRule> che chiama <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> ha relativo <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> impostato su <xref:System.Windows.Controls.ValidationStep.RawProposedValue>. Se il <xref:System.Windows.Controls.ValidationRule> è il relativo <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> impostato su <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, il tipo di `value` corrisponde al tipo restituito dal convertitore dell'associazione. In questo esempio, `value` è in genere un numero intero.  
  
   
  
## Examples  
 L'esempio seguente crea un oggetto personalizzato <xref:System.Windows.Controls.ValidationRule> denominato `ValidateDateAndPrice`. Nel <xref:System.Windows.Controls.ValidationRule.Validate%2A> metodo, l'esempio Usa la <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> (metodo) e il <xref:System.Windows.Data.BindingGroup.Items%2A> proprietà da ottenere i valori di immessi dall'utente nel form. Nell'esempio viene quindi verificato che se un elemento è superiore a 100 dollari, sarà disponibile per almeno sette giorni. In questo esempio fa parte di un esempio più esaustivo sul <xref:System.Windows.Data.BindingGroup> (classe)  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSources">
      <MemberSignature Language="C#" Value="public bool UpdateSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UpdateSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.UpdateSources" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateSources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UpdateSources();" />
      <MemberSignature Language="F#" Value="member this.UpdateSources : unit -&gt; bool" Usage="bindingGroup.UpdateSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue il convertitore sull’associazione e gli oggetti <see cref="T:System.Windows.Controls.ValidationRule" /> la cui proprietà <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> è impostata su <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />, <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> oppure <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" />, quindi salva i valori degli oggetti destinazione sugli oggetti origine, se tutte le regole di convalida hanno avuto esito positivo.</summary>
        <returns>
          <see langword="true" /> se tutte le regole di convalida hanno avuto esito positivo, altrimenti <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo aggiorna l'origine se ogni <xref:System.Windows.Controls.ValidationRule> ha esito positivo, ma ciò non causa le origini per il commit delle modifiche in sospeso e terminare la transazione di modifica. Vale a dire, se l'oggetto di origine implementa <xref:System.ComponentModel.IEditableObject>. Chiamare questo metodo non provoca <xref:System.ComponentModel.IEditableObject.EndEdit%2A> da chiamare. Utilizzare il <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> metodo disporre le origini di salvare le modifiche in sospeso.  
  
   
  
## Examples  
 Nell'esempio seguente fa parte di un'applicazione che richiede all'utente di immettere più clienti e assegnare un rappresentante di vendita per ogni cliente. L'applicazione verifica che il rappresentante di vendita e il cliente appartenga alla stessa area. Nell'esempio viene chiamato <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> per convalidare le associazioni e salvare i valori per l'origine se tutte le regole di convalida riuscita.  
  
 [!code-csharp[BindingGroupSnippets#UpdateSources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets#UpdateSources](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataError">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataError : bool with get, set" Usage="System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se includere <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</summary>
        <value>
          <see langword="true" /> per includere l'oggetto <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> viene `true`, l'associazione verifica la presenza e segnala gli errori che vengono generati da un'origine dati che implementa <xref:System.ComponentModel.INotifyDataErrorInfo>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateWithoutUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateWithoutUpdate();" />
      <MemberSignature Language="F#" Value="member this.ValidateWithoutUpdate : unit -&gt; bool" Usage="bindingGroup.ValidateWithoutUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esegue il convertitore sull’associazione e gli oggetti <see cref="T:System.Windows.Controls.ValidationRule" /> la cui proprietà <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> è impostata su <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> o <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />.</summary>
        <returns>
          <see langword="true" /> se tutte le regole di convalida hanno avuto esito positivo, altrimenti <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le origini non vengono aggiornate quando si chiama questo metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationErrors As ReadOnlyCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ ValidationErrors { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationErrors : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;" Usage="System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una raccolta di oggetti <see cref="T:System.Windows.Controls.ValidationError" /> che hanno reso non valido <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
        <value>Raccolta di oggetti <see cref="T:System.Windows.Controls.ValidationError" /> che hanno reso non valido <see cref="T:System.Windows.Data.BindingGroup" />.  Il valore è <see langword="null" /> se non sono presenti errori.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di oggetti <see cref="T:System.Windows.Controls.ValidationRule" /> per la convalida degli oggetti origine in un insieme di tipo <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
        <value>Un insieme di oggetti <see cref="T:System.Windows.Controls.ValidationRule" /> per la convalida degli oggetti origine in un insieme di tipo <see cref="T:System.Windows.Data.BindingGroup" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un <xref:System.Windows.Controls.ValidationRule> viene aggiunto a un <xref:System.Windows.Data.BindingGroup>, la <xref:System.Windows.Data.BindingGroup> viene passato come primo parametro del <xref:System.Windows.Controls.ValidationRule.Validate%2A> metodo. È possibile ottenere i valori proposti per l'oggetto utilizzando il <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> o <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> metodo. È possibile ottenere gli oggetti che sono elencate le origini delle associazioni dal <xref:System.Windows.Data.BindingGroup.Items%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente aggiunge l'oggetto personalizzato <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, per il <xref:System.Windows.Data.BindingGroup>.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 L'esempio seguente illustra la classe `ValidateDateAndPrice`. Il <xref:System.Windows.Controls.ValidationRule.Validate%2A> metodo utilizza il <xref:System.Windows.Data.BindingGroup> per ottenere i valori immessi nel form e controlli che se un elemento è superiore a 100 dollari, sarà disponibile per almeno sette giorni dall'utente.  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>