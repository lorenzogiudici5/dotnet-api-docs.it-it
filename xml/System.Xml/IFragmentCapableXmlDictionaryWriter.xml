<Type Name="IFragmentCapableXmlDictionaryWriter" FullName="System.Xml.IFragmentCapableXmlDictionaryWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="41a99dea4798e33b753a358aa1108607be06c559" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52238662" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFragmentCapableXmlDictionaryWriter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFragmentCapableXmlDictionaryWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.IFragmentCapableXmlDictionaryWriter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFragmentCapableXmlDictionaryWriter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFragmentCapableXmlDictionaryWriter" />
  <TypeSignature Language="F#" Value="type IFragmentCapableXmlDictionaryWriter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="adca9-101">Contiene proprietà e metodi che, in caso di implementazione tramite <see cref="T:System.Xml.XmlDictionaryWriter" />, consentono di elaborare frammenti XML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="adca9-101">Contains properties and methods that when implemented by a <see cref="T:System.Xml.XmlDictionaryWriter" />, allows processing of XML fragments.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adca9-102">Questa classe definisce le proprietà e i metodi correlati alla funzionalità di un <xref:System.Xml.XmlDictionaryWriter> per reindirizzare parte dell'output (un "frammento") a un flusso diverso da quello con cui è stata creata e di inserire direttamente tale frammento acquisito reindirizzandolo in seguito nel flusso principale dello stesso writer.</span><span class="sxs-lookup"><span data-stu-id="adca9-102">This class defines the properties and methods related to the capability of an <xref:System.Xml.XmlDictionaryWriter> to redirect part of its output (a 'fragment') to a different stream than the stream it was created with and to directly insert such a fragment captured by redirection back into the main stream of the same writer at a later point.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanFragment">
      <MemberSignature Language="C#" Value="public bool CanFragment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFragment" />
      <MemberSignature Language="DocId" Value="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanFragment { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanFragment : bool" Usage="System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="adca9-103">Ottiene un valore che indica se <see cref="T:System.Xml.XmlDictionaryWriter" /> è in grado di elaborare frammenti XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adca9-103">Gets a value that indicates whether this <see cref="T:System.Xml.XmlDictionaryWriter" /> can process XML fragments.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="adca9-104">
            <see langword="true" /> se <see cref="T:System.Xml.XmlDictionaryWriter" /> è in grado di elaborare frammenti XML. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adca9-104">
              <see langword="true" /> if this <see cref="T:System.Xml.XmlDictionaryWriter" /> can process XML fragments; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adca9-105">Restituisce `true` se il writer che implementa questa interfaccia può generare e accettare frammenti XML.</span><span class="sxs-lookup"><span data-stu-id="adca9-105">Returns `true` if the writer that implements this interface can generate and accept XML fragments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndFragment">
      <MemberSignature Language="C#" Value="public void EndFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndFragment() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndFragment ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndFragment();" />
      <MemberSignature Language="F#" Value="abstract member EndFragment : unit -&gt; unit" Usage="iFragmentCapableXmlDictionaryWriter.EndFragment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="adca9-106">Termina l'elaborazione di un frammento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adca9-106">Ends the processing of an XML fragment.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adca9-107">Interrompe il reindirizzamento dell'output al flusso fornito dalla chiamata `StartFragment` corrispondente.</span><span class="sxs-lookup"><span data-stu-id="adca9-107">Stops redirecting output to the stream supplied by the matching `StartFragment` call.</span></span> <span data-ttu-id="adca9-108">Dopo questa chiamata, l'output della scrittura XML va nel flusso utilizzato originariamente dal writer prima della chiamata `StartFragment`.</span><span class="sxs-lookup"><span data-stu-id="adca9-108">After this call, the XML writing output goes to the stream originally used by the writer before the `StartFragment` call.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartFragment">
      <MemberSignature Language="C#" Value="public void StartFragment (System.IO.Stream stream, bool generateSelfContainedTextFragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartFragment(class System.IO.Stream stream, bool generateSelfContainedTextFragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartFragment(System::IO::Stream ^ stream, bool generateSelfContainedTextFragment);" />
      <MemberSignature Language="F#" Value="abstract member StartFragment : System.IO.Stream * bool -&gt; unit" Usage="iFragmentCapableXmlDictionaryWriter.StartFragment (stream, generateSelfContainedTextFragment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="generateSelfContainedTextFragment" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="adca9-109">Flusso in cui scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adca9-109">The stream to write to.</span>
          </span>
        </param>
        <param name="generateSelfContainedTextFragment">
          <span data-ttu-id="adca9-110">Se <see langword="true" />, qualsiasi spazio dei nomi dichiarato fuori dal frammento viene dichiarato di nuovo se utilizzato al suo interno, se <see langword="false" /> gli spazi dei nomi non vengono dichiarati di nuovo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adca9-110">If <see langword="true" />, any namespaces declared outside the fragment is declared again if used inside of it; if <see langword="false" /> the namespaces are not declared again.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="adca9-111">Avvia l'elaborazione di un frammento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adca9-111">Starts the processing of an XML fragment.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adca9-112">Inizia temporaneamente con il reindirizzamento della scrittura dell'output XML al flusso fornito finché non viene chiamato `EndFragment`.</span><span class="sxs-lookup"><span data-stu-id="adca9-112">Temporarily starts redirecting the writing of the XML output to the supplied stream until `EndFragment` is called.</span></span> <span data-ttu-id="adca9-113">Se `generateSelfContainedTextFragment` è `true`, l'output XML reindirizzato è sempre XML di testo ed è autonomo in termini di contesto dello spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="adca9-113">If `generateSelfContainedTextFragment` is `true`, then the redirected XML output is always text XML and is self-contained in terms of its namespace context.</span></span> <span data-ttu-id="adca9-114">Le chiamate `StartFragment`() non possono essere annidate.</span><span class="sxs-lookup"><span data-stu-id="adca9-114">`StartFragment`() calls cannot be nested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteFragment">
      <MemberSignature Language="C#" Value="public void WriteFragment (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFragment(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteFragment (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteFragment(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteFragment : byte[] * int * int -&gt; unit" Usage="iFragmentCapableXmlDictionaryWriter.WriteFragment (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="adca9-115">Buffer in cui scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adca9-115">The buffer to write to.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="adca9-116">Posizione iniziale dalla quale scrivere nel <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adca9-116">The starting position from which to write in <paramref name="buffer" />.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="adca9-117">Numero di byte da scrivere nel <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adca9-117">The number of bytes to be written to the <paramref name="buffer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="adca9-118">Scrive un frammento XML nel flusso sottostante del writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adca9-118">Writes an XML fragment to the underlying stream of the writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adca9-119">Scrive un frammento acquisito tra `StartFragment` e `EndFragment` e richiama nel flusso principale di XmlDictionaryWriter.</span><span class="sxs-lookup"><span data-stu-id="adca9-119">Writes a fragment captured between `StartFragment` and `EndFragment` and calls back into the XmlDictionaryWriter's main stream.</span></span> <span data-ttu-id="adca9-120">Il frammento scritto è di `count` byte partendo dall'`offset` dell'indice dal `buffer` fornito.</span><span class="sxs-lookup"><span data-stu-id="adca9-120">The fragment written is `count` bytes starting at the index `offset` from the supplied `buffer`.</span></span> <span data-ttu-id="adca9-121">Il comportamento non è definito se il frammento fornito non è stato acquisito utilizzando questa istanza del writer.</span><span class="sxs-lookup"><span data-stu-id="adca9-121">The behavior is undefined if the supplied fragment was not captured using this writer instance.</span></span>  
  
   
  
## Examples  
  
```csharp  
MemoryStream stream = new MemoryStream();  
MemoryStream fragmentStream = new MemoryStream();  
XmlDictionaryWriter writer = XmlDictionaryWriter.CreateTextWriter(stream);  
IXmlFragmentCapableXmlDictionaryWriter fragmentWriter = writer as IXmlFragmentCapableXmlDictionaryWriter;  
if (fragmentWriter == null || !fragmentWriter.CanFragment)  
{  
Console.WriteLine("This writer doesn't support fragments");  
return;  
}  
writer.WriteStartElement("Root");  
fragmentWriter.StartFragment(fragmentStream, false);  
writer.WriteStartElement("Body");  
writer.WriteString("This is my body");  
writer.WriteEndElement();  
fragmentWriter.EndFragment();  
writer.WriteStartElement("CharsInTheBody");  
writer.WriteValue(fragmentStream.Length);  
writer.WriteEndElement();  
fragmentWriter.WriteFragment(fragmentStream.GetBuffer(), 0, (int)fragmentStream.Length);  
writer.WriteEndElement(); // Root  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>