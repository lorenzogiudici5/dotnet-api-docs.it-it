<Type Name="XmlSecureResolver" FullName="System.Xml.XmlSecureResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6ceb22f9106618a3fefd9e4082d3f510f6122c3f" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52245890" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlSecureResolver : System.Xml.XmlResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSecureResolver extends System.Xml.XmlResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlSecureResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSecureResolver&#xA;Inherits XmlResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSecureResolver : System::Xml::XmlResolver" />
  <TypeSignature Language="F#" Value="type XmlSecureResolver = class&#xA;    inherit XmlResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Consente di proteggere un'altra implementazione di <see cref="T:System.Xml.XmlResolver" /> eseguendo il wrapping dell'oggetto <see cref="T:System.Xml.XmlResolver" /> e imponendo restrizioni sulle risorse accessibili all'oggetto <see cref="T:System.Xml.XmlResolver" /> sottostante.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe <xref:System.Xml.XmlUrlResolver> corrisponde al sistema di risoluzione predefinito per tutte le classi dello spazio dei nomi <xref:System.Xml>. Utilizzato per caricare i documenti XML e per risolvere risorse esterne, ad esempio DTD o schemi e importare o includere le direttive.  
  
 È possibile eseguire l'override di questa impostazione predefinita, specificando il <xref:System.Xml.XmlResolver> oggetto da utilizzare. Ad esempio, se si desidera limitare le risorse che sottostante <xref:System.Xml.XmlResolver> possono accedere, è possibile usare un <xref:System.Xml.XmlSecureResolver> oggetto.  
  
 <xref:System.Xml.XmlSecureResolver> esegue il wrapping intorno a un'implementazione concreta dei <xref:System.Xml.XmlResolver> e limita le risorse che sottostante <xref:System.Xml.XmlResolver> può accedere a. Ad esempio, <xref:System.Xml.XmlSecureResolver> ha la possibilità di impedire il reindirizzamento tra domini, generato da un riferimento di Uniform Resource Identifier (URI) incorporato.  
  
 Quando si costruisce un' <xref:System.Xml.XmlSecureResolver> dell'oggetto, fornito un valido <xref:System.Xml.XmlResolver> implementazione oltre a un URL, un'istanza di un oggetto di evidenza, o un set di autorizzazioni, che viene usato dal <xref:System.Xml.XmlSecureResolver> a determinare di sicurezza. Entrambi una <xref:System.Security.PermissionSet?displayProperty=nameWithType> viene generato o viene usata quella esistente e <xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=nameWithType> viene chiamato in modo da proteggere sottostante <xref:System.Xml.XmlResolver>.  
  
> [!IMPORTANT]
>  Gli oggetti <xref:System.Xml.XmlSecureResolver> possono contenere informazioni sensibili quali le credenziali utente. È necessario prestare attenzione durante la memorizzazione nella cache <xref:System.Xml.XmlSecureResolver> degli oggetti e non devono passare il <xref:System.Xml.XmlSecureResolver> oggetto da un componente non attendibile.  
  
> [!IMPORTANT]
>  Ci sono differenze nell'infrastruttura di sicurezza per il codice in esecuzione in CLR integrato all'interno di Microsoft SQL Server 2005 e per il codice in esecuzione in .NET Framework common language runtime (CLR). Questo può causare ai casi in cui il codice sviluppato per CLR di .NET Framework funziona in modo diverso quando viene usato in SQL Server integrato CLR. Una di queste differenze riguarda il <xref:System.Xml.XmlSecureResolver> classe quando si ha la prova basata su un URL (ovvero, quando si usa la <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29> (metodo) o il <xref:System.Xml.XmlSecureResolver.%23ctor%2A> costruttore). I criteri di risoluzione meccanismo di SQL Server integrato CLR non usa la <xref:System.Security.Policy.Url> o <xref:System.Security.Policy.Zone> informazioni. Al contrario, vengono concesse le autorizzazioni in base al GUID che consente di aggiungere il server quando gli assembly vengono caricati. Quando si usa la <xref:System.Xml.XmlSecureResolver> in SQL Server integrato CLR, offrire eventuali prove richieste direttamente tramite un oggetto specificato <xref:System.Security.PermissionSet>.  
  
## <a name="to-use-a-secure-resolver"></a>Utilizzare un sistema di risoluzione sicura  
  
1.  Creare un oggetto <xref:System.Xml.XmlSecureResolver> utilizzando il set di autorizzazioni corretto.  
  
2.  Creare un oggetto <xref:System.Xml.XmlReaderSettings> che utilizzi l'oggetto <xref:System.Xml.XmlSecureResolver>.  
  
     [!code-csharp[XmlSecureResolver_Samples#5a](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#5a)]
     [!code-vb[XmlSecureResolver_Samples#5a](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#5a)]  
  
3.  Passare il <xref:System.Xml.XmlReaderSettings> dell'oggetto per il <xref:System.Xml.XmlReader.Create%2A> metodo quando si crea il <xref:System.Xml.XmlReader> oggetto.  
  
     [!code-csharp[XmlSecureResolver_Samples#5b](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#5b)]
     [!code-vb[XmlSecureResolver_Samples#5b](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#5b)]  
  
## <a name="to-restrict-access-by-using-a-url"></a>Per limitare l'accesso tramite un URL  
 Usare la <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> costruttore per creare un <xref:System.Xml.XmlSecureResolver> oggetto che è autorizzato ad accedere solo al sito intranet locale.  
  
 [!code-csharp[XmlSecureResolver_Samples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#3)]
 [!code-vb[XmlSecureResolver_Samples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#3)]  
  
## <a name="to-restrict-access-by-using-a-permission-set"></a>Per limitare l'accesso usando un set di autorizzazioni  
  
1.  Creare un oggetto <xref:System.Net.WebPermission>.  
  
     [!code-csharp[XmlSecureResolver_Samples#4a](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4a)]
     [!code-vb[XmlSecureResolver_Samples#4a](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4a)]  
  
2.  Specificare gli URL che si desidera consentire l'accesso a.  
  
     [!code-csharp[XmlSecureResolver_Samples#4b](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4b)]
     [!code-vb[XmlSecureResolver_Samples#4b](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4b)]  
  
3.  Aggiungere autorizzazioni Web all'oggetto <xref:System.Security.PermissionSet>.  
  
     [!code-csharp[XmlSecureResolver_Samples#4c](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4c)]
     [!code-vb[XmlSecureResolver_Samples#4c](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4c)]  
  
4.  Usare la <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29> costruttore per creare un <xref:System.Xml.XmlSecureResolver> oggetto usando il set di autorizzazioni.  
  
     [!code-csharp[XmlSecureResolver_Samples#4d](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4d)]
     [!code-vb[XmlSecureResolver_Samples#4d](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4d)]  
  
     Vedere il <xref:System.Xml.XmlSecureResolver.%23ctor%2A> pagina di riferimento per un altro esempio.  
  
## <a name="to-restrict-access-by-using-evidence"></a>Per limitare l'accesso usando l'evidenza  
 È possibile limitare l'accesso usando il <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> costruttore e specificando <xref:System.Security.Policy.Evidence>. Il tipo <xref:System.Security.Policy.Evidence> viene utilizzato per creare l'oggetto <xref:System.Security.PermissionSet> che verrà applicato all'oggetto <xref:System.Xml.XmlResolver> sottostante. Prima di aprire una risorsa, l'oggetto <xref:System.Xml.XmlSecureResolver> chiama il metodo <xref:System.Security.PermissionSet.PermitOnly%2A> sull'oggetto <xref:System.Security.PermissionSet> creato.  
  
 Ecco alcuni scenari comuni e il tipo di evidenza da fornire per ognuno:  
  
-   Se si lavora in un ambiente completamente attendibile, usare l'assembly per creare l'evidenza:  
  
     [!code-csharp[XmlSecureResolver_Samples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#1)]
     [!code-vb[XmlSecureResolver_Samples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#1)]  
  
-   Se si lavora in un ambiente parzialmente attendibile, si dispone di codice o i dati provenienti da un'origine esterna e si conosce l'origine esterna e dispone di un URI verificabile, usare l'URI per creare l'evidenza:  
  
     [!code-csharp[XmlSecureResolver_Samples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#2)]
     [!code-vb[XmlSecureResolver_Samples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#2)]  
  
-   Se si lavora in un ambiente parzialmente attendibile e si dispone di codice o i dati provenienti da un'origine esterna, ma non si conosce l'origine dell'origine esterna, ovvero:  
  
     Impostare il parametro `evidence` su `null`. In tal modo si impedisce l'accesso alle risorse.  
  
     oppure  
  
     Se l'applicazione richiede accesso alle risorse, richiedere l'evidenza dal chiamante.  
  
## <a name="to-use-the-secure-resolver-to-load-an-xslt-style-sheet"></a>Usare il sistema di risoluzione sicura per caricare un foglio di stile XSLT  
  
1.  Creare un oggetto <xref:System.Xml.XmlSecureResolver> utilizzando il set di autorizzazioni corretto.  
  
2.  Passare l'oggetto <xref:System.Xml.XmlSecureResolver> al metodo <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> .  
  
     [!code-csharp[XmlSecureResolver_Samples#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#6)]
     [!code-vb[XmlSecureResolver_Samples#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#6)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Questa classe dispone di una richiesta di ereditarietà. Attendibilità totale deve ereditare il <see cref="T:System.Xml.XmlSecureResolver" /> classe.</para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.XmlSecureResolver" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I tre costruttori offrono tre tipi di restrizioni di accesso:  
  
-   Il <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> costruttore limita l'accesso tramite un URL.  
  
-   Il <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29> costruttore limita l'accesso usando un set di autorizzazioni.  
  
-   Il <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> costruttore limita l'accesso usando l'evidenza.  
  
 Vedere gli argomenti di riferimento del costruttore per gli esempi di questi tipi di restrizioni.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.PermissionSet permissionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver, class System.Security.PermissionSet permissionSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSecureResolver(System::Xml::XmlResolver ^ resolver, System::Security::PermissionSet ^ permissionSet);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlSecureResolver : System.Xml.XmlResolver * System.Security.PermissionSet -&gt; System.Xml.XmlSecureResolver" Usage="new System.Xml.XmlSecureResolver (resolver, permissionSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="permissionSet" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="resolver">Resolver XML di cui è stato eseguito il wrapping tramite l'oggetto <see cref="T:System.Xml.XmlSecureResolver" />.</param>
        <param name="permissionSet">Autorizzazione da applicare all'oggetto <see cref="T:System.Xml.XmlResolver" /> sottostante. L'oggetto <see cref="T:System.Xml.XmlSecureResolver" /> chiama il metodo <see cref="M:System.Security.PermissionSet.PermitOnly" /> sull'autorizzazione impostata prima di chiamare il metodo <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> sul resolver XML sottostante.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.XmlSecureResolver" /> con gli oggetti <see cref="T:System.Xml.XmlResolver" /> e <see cref="T:System.Security.PermissionSet" /> specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente si costruisce un <xref:System.Xml.XmlSecureResolver> oggetto usando un set di autorizzazioni personalizzate.  
  
 [!code-cpp[XmlSecureResolver.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSecureResolver.cctor/CPP/secresolver.cpp#1)]
 [!code-csharp[XmlSecureResolver.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver.cctor/CS/secresolver.cs#1)]
 [!code-vb[XmlSecureResolver.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver.cctor/VB/secresolver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
        <altmember cref="T:System.Security.Policy.Evidence" />
        <altmember cref="T:System.Net.WebPermission" />
        <altmember cref="T:System.Security.SecurityManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSecureResolver(System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlSecureResolver : System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; System.Xml.XmlSecureResolver" Usage="new System.Xml.XmlSecureResolver (resolver, evidence)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="resolver">Resolver XML di cui è stato eseguito il wrapping tramite l'oggetto <see cref="T:System.Xml.XmlSecureResolver" />.</param>
        <param name="evidence">Evidenza usata per creare l'oggetto <see cref="T:System.Security.PermissionSet" /> che verrà applicato all'oggetto <see cref="T:System.Xml.XmlResolver" /> sottostante. L'oggetto <see cref="T:System.Xml.XmlSecureResolver" /> chiama il metodo <see cref="M:System.Security.PermissionSet.PermitOnly" /> sull'oggetto <see cref="T:System.Security.PermissionSet" /> creato prima di chiamare il metodo <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> sull'oggetto <see cref="T:System.Xml.XmlResolver" /> sottostante.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.XmlSecureResolver" /> con gli oggetti <see cref="T:System.Xml.XmlResolver" /> e <see cref="T:System.Security.Policy.Evidence" /> specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ecco alcuni possibili scenari e il tipo di evidenza da fornire per ogni scenario:  
  
-   Se si lavora in un ambiente completamente attendibile, usare l'assembly per creare l'evidenza:  
  
     [!code-csharp[XmlSecureResolver_Samples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#1)]
     [!code-vb[XmlSecureResolver_Samples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#1)]  
  
-   Se si lavora in un ambiente parzialmente attendibile, si dispone di codice o i dati provenienti da un'origine esterna e si conosce l'origine esterna e dispone di un URI verificabile, usare l'URI per creare l'evidenza:  
  
     [!code-csharp[XmlSecureResolver_Samples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#2)]
     [!code-vb[XmlSecureResolver_Samples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#2)]  
  
-   Se si lavora in un ambiente parzialmente attendibile e si dispone di codice o i dati provenienti da un'origine esterna, ma non si conosce l'origine dell'origine esterna, ovvero:  
  
     Impostare il parametro `evidence` su `null`. In tal modo si impedisce l'accesso alle risorse.  
  
     oppure  
  
     Se l'applicazione richiede accesso alle risorse, richiedere l'evidenza dal chiamante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSecureResolver (System.Xml.XmlResolver resolver, string securityUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver, string securityUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As XmlResolver, securityUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSecureResolver(System::Xml::XmlResolver ^ resolver, System::String ^ securityUrl);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlSecureResolver : System.Xml.XmlResolver * string -&gt; System.Xml.XmlSecureResolver" Usage="new System.Xml.XmlSecureResolver (resolver, securityUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="securityUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resolver">Resolver XML di cui è stato eseguito il wrapping tramite l'oggetto <see cref="T:System.Xml.XmlSecureResolver" />.</param>
        <param name="securityUrl">URL usato per creare l'oggetto <see cref="T:System.Security.PermissionSet" /> che verrà applicato all'oggetto <see cref="T:System.Xml.XmlResolver" /> sottostante. L'oggetto <see cref="T:System.Xml.XmlSecureResolver" /> chiama il metodo <see cref="M:System.Security.PermissionSet.PermitOnly" /> sull'oggetto <see cref="T:System.Security.PermissionSet" /> creato prima di chiamare il metodo <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> sull'oggetto <see cref="T:System.Xml.XmlResolver" /> sottostante.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.XmlSecureResolver" /> con l'oggetto <see cref="T:System.Xml.XmlResolver" /> e l'URL forniti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Ci sono differenze nell'infrastruttura di sicurezza per il codice in esecuzione in CLR integrato all'interno di Microsoft SQL Server 2005 e per il codice in esecuzione in .NET Framework common language runtime (CLR). Questo può causare ai casi in cui il codice sviluppato per CLR di .NET Framework funziona in modo diverso quando viene usato in SQL Server integrato CLR. Una di queste differenze riguarda il <xref:System.Xml.XmlSecureResolver> classe quando si ha la prova basata su un URL (ovvero, quando si usa la <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A> (metodo) o il <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> costruttore). I criteri di risoluzione meccanismo di SQL Server integrato CLR non usa la <xref:System.Security.Policy.Url> o <xref:System.Security.Policy.Zone> informazioni. Al contrario, vengono concesse le autorizzazioni in base al GUID che consente di aggiungere il server quando gli assembly vengono caricati. Quando si usa la <xref:System.Xml.XmlSecureResolver> in SQL Server integrato CLR, offrire eventuali prove richieste direttamente tramite un oggetto specificato <xref:System.Security.PermissionSet>.  
  
   
  
## Examples  
 Questo esempio Usa la <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> costruttore per creare un <xref:System.Xml.XmlSecureResolver> oggetto che è autorizzato ad accedere solo al sito intranet locale.  
  
 [!code-csharp[XmlSecureResolver_Samples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#3)]
 [!code-vb[XmlSecureResolver_Samples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEvidenceForUrl">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.Evidence CreateEvidenceForUrl (string securityUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.Evidence CreateEvidenceForUrl(string securityUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEvidenceForUrl (securityUrl As String) As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Policy::Evidence ^ CreateEvidenceForUrl(System::String ^ securityUrl);" />
      <MemberSignature Language="F#" Value="static member CreateEvidenceForUrl : string -&gt; System.Security.Policy.Evidence" Usage="System.Xml.XmlSecureResolver.CreateEvidenceForUrl securityUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="securityUrl">URL usato per creare l'evidenza.</param>
        <summary>Crea l'evidenza usando l'URL fornito.</summary>
        <returns>Evidenza generata dall'URL fornito, come specificato dai criteri predefiniti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Ci sono differenze nell'infrastruttura di sicurezza per il codice in esecuzione in CLR integrato all'interno di Microsoft SQL Server 2005 e per il codice in esecuzione in .NET Framework common language runtime (CLR). Questo può causare ai casi in cui il codice sviluppato per CLR di .NET Framework funziona in modo diverso quando viene usato in SQL Server integrato CLR. Una di queste differenze riguarda il <xref:System.Xml.XmlSecureResolver> classe quando si ha la prova basata su un URL (ovvero, quando si usa la <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A> (metodo) o il <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> costruttore). I criteri di risoluzione meccanismo di SQL Server integrato CLR non usa la <xref:System.Security.Policy.Url> o <xref:System.Security.Policy.Zone> informazioni. Al contrario, vengono concesse le autorizzazioni in base al GUID che consente di aggiungere il server quando gli assembly vengono caricati. Quando si usa la <xref:System.Xml.XmlSecureResolver> in SQL Server integrato CLR, offrire eventuali prove richieste direttamente tramite un oggetto specificato <xref:System.Security.PermissionSet>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlSecureResolver.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials {  void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials" Usage="System.Xml.XmlSecureResolver.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Imposta le credenziali usate per autenticare le richieste Web.</summary>
        <value>Credenziali usate per autenticare le richieste Web. L'oggetto <see cref="T:System.Xml.XmlSecureResolver" /> imposta le credenziali specificate sull'oggetto <see cref="T:System.Xml.XmlResolver" /> sottostante. Se questa proprietà non è impostata, viene usato il valore predefinito <see langword="null" />. Questo significa che <see cref="T:System.Xml.XmlSecureResolver" /> non ha credenziali utente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente usa un' <xref:System.Xml.XmlSecureResolver> con le credenziali predefinite per risolvere e aprire le risorse di rete necessite per il <xref:System.Xml.XmlTextReader>.  
  
 [!code-cpp[XmlSecureResolver.Credentials#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSecureResolver.Credentials/CPP/secresolver2.cpp#1)]
 [!code-csharp[XmlSecureResolver.Credentials#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver.Credentials/CS/secresolver2.cs#1)]
 [!code-vb[XmlSecureResolver.Credentials#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver.Credentials/VB/secresolver2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.CredentialCache.DefaultCredentials" />
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetEntity(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntity (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetEntity(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntity : Uri * string * Type -&gt; obj" Usage="xmlSecureResolver.GetEntity (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">URI restituito dal metodo <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
        <param name="role">Attualmente non usato.</param>
        <param name="ofObjectToReturn">Tipo di oggetto da restituire. La versione corrente restituisce solo oggetti <see cref="T:System.IO.Stream" />.</param>
        <summary>Esegue il mapping di un URI a un oggetto che contiene la risorsa effettiva. Questo metodo imposta temporaneamente l'oggetto <see cref="T:System.Security.PermissionSet" /> creato nel costruttore chiamando il metodo <see cref="M:System.Security.PermissionSet.PermitOnly" /> prima di chiamare <see langword="GetEntity" /> sull'oggetto <see cref="T:System.Xml.XmlResolver" /> sottostante per aprire la risorsa.</summary>
        <returns>Flusso restituito chiamando <see langword="GetEntity" /> sull'oggetto <see cref="T:System.Xml.XmlResolver" /> sottostante. Se viene specificato un tipo diverso da <see cref="T:System.IO.Stream" />, il metodo restituisce <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  L'applicazione può ridurre memoria attacchi denial of service per le <xref:System.Xml.XmlSecureResolver.GetEntity%2A> metodo implementando un <xref:System.Runtime.InteropServices.ComTypes.IStream> che limita il numero di byte letti. Ciò aiuta a proteggersi da situazioni in cui il codice dannoso tenta di passare un flusso infinito di byte dal <xref:System.Xml.XmlSecureResolver.GetEntity%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="ofObjectToReturn" />non è né <see langword="null" /> né un tipo <see cref="T:System.IO.Stream" />.</exception>
        <exception cref="T:System.UriFormatException">L'URI specificato non è assoluto.</exception>
        <exception cref="T:System.NullReferenceException">
          <paramref name="absoluteUri" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Exception">Errore di runtime, ad esempio un'interruzione della connessione al server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; GetEntityAsync(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntityAsync (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ GetEntityAsync(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlSecureResolver.GetEntityAsync (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">URI restituito da <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
        <param name="role">Attualmente non usato.</param>
        <param name="ofObjectToReturn">Tipo di oggetto da restituire. La versione corrente restituisce solo oggetti <see cref="T:System.IO.Stream" />.</param>
        <summary>Esegue in modo asincrono il mapping di un URI a un oggetto contenente la risorsa effettiva.</summary>
        <returns>Flusso restituito chiamando <see langword="GetEntity" /> sull'oggetto <see cref="T:System.Xml.XmlResolver" /> sottostante. Se viene specificato un tipo diverso da <see cref="T:System.IO.Stream" />, il metodo restituisce <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveUri">
      <MemberSignature Language="C#" Value="public override Uri ResolveUri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Uri ResolveUri(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveUri (baseUri As Uri, relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Uri ^ ResolveUri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="override this.ResolveUri : Uri * string -&gt; Uri" Usage="xmlSecureResolver.ResolveUri (baseUri, relativeUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">URI di base usato per risolvere l'URI relativo.</param>
        <param name="relativeUri">URI da risolvere. L'URI può essere assoluto o relativo. Se assoluto, questo valore sostituisce il valore di <paramref name="baseUri" />. Se relativo, viene combinato con il valore di <paramref name="baseUri" /> in modo da ottenere un URI assoluto.</param>
        <summary>Risolve l'URI assoluto a partire dagli URI di base e relativo, chiamando <see langword="ResolveUri" /> sull'oggetto <see cref="T:System.Xml.XmlResolver" /> sottostante.</summary>
        <returns>URI assoluto o <see langword="null" /> se non è possibile risolvere l'URI relativo (restituito chiamando <see langword="ResolveUri" /> sull'oggetto <see cref="T:System.Xml.XmlResolver" /> sottostante).</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="relativeUri" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>