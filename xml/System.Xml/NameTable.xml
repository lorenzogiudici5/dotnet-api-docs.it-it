<Type Name="NameTable" FullName="System.Xml.NameTable">
  <TypeSignature Language="C#" Value="public class NameTable : System.Xml.XmlNameTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NameTable extends System.Xml.XmlNameTable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.NameTable" />
  <TypeSignature Language="VB.NET" Value="Public Class NameTable&#xA;Inherits XmlNameTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameTable : System::Xml::XmlNameTable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlNameTable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c6813-101">Implementa una classe <see cref="T:System.Xml.XmlNameTable" /> a thread singolo.</span><span class="sxs-lookup"><span data-stu-id="c6813-101">Implements a single-threaded <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6813-102">Diverse classi, ad esempio <xref:System.Xml.XmlDocument> e <xref:System.Xml.XmlReader>, utilizzare la `NameTable` classe internamente per memorizzare i nomi di attributi ed elementi.</span><span class="sxs-lookup"><span data-stu-id="c6813-102">Several classes, such as <xref:System.Xml.XmlDocument> and <xref:System.Xml.XmlReader>, use the `NameTable` class internally to store attribute and element names.</span></span> <span data-ttu-id="c6813-103">Quando il nome di un elemento o di un attributo ricorre più volte in un documento XML, viene memorizzato una sola volta in `NameTable`.</span><span class="sxs-lookup"><span data-stu-id="c6813-103">When an element or attribute name occurs multiple times in an XML document, it is stored only once in the `NameTable`.</span></span>  
  
 <span data-ttu-id="c6813-104">I nomi vengono memorizzati come tipi di oggetti CLR (Common Language Runtime).</span><span class="sxs-lookup"><span data-stu-id="c6813-104">The names are stored as common language runtime (CLR) object types.</span></span> <span data-ttu-id="c6813-105">In questo modo è possibile confrontare gli oggetti sulle stringhe invece che eseguire l'operazione più complessa del confronto tra le stringhe.</span><span class="sxs-lookup"><span data-stu-id="c6813-105">This enables you to do object comparisons on these strings rather than a more expensive string comparison.</span></span> <span data-ttu-id="c6813-106">Gli oggetti stringa sono definiti stringhe atomizzate.</span><span class="sxs-lookup"><span data-stu-id="c6813-106">These string objects are referred to as atomized strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6813-107">L'esempio seguente confronta due nomi di elemento.</span><span class="sxs-lookup"><span data-stu-id="c6813-107">The following example compares two element names.</span></span>  
  
 [!code-cpp[NameTable#1](~/samples/snippets/cpp/VS_Snippets_Data/NameTable/CPP/nametable.cpp#1)]
 [!code-csharp[NameTable#1](~/samples/snippets/csharp/VS_Snippets_Data/NameTable/CS/nametable.cs#1)]
 [!code-vb[NameTable#1](~/samples/snippets/visualbasic/VS_Snippets_Data/NameTable/VB/nametable.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.NameTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6813-108">Inizializza una nuova istanza della classe <see langword="NameTable" />.</span><span class="sxs-lookup"><span data-stu-id="c6813-108">Initializes a new instance of the <see langword="NameTable" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6813-109">Costruisce una NameTable vuota.</span><span class="sxs-lookup"><span data-stu-id="c6813-109">Constructs an empty NameTable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c6813-110">Suddivide in elementi di base la stringa specificata e la aggiunge alla classe <see langword="NameTable" />.</span><span class="sxs-lookup"><span data-stu-id="c6813-110">Atomizes the specified string and adds it to the <see langword="NameTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6813-111">Per ulteriori informazioni sulle stringhe suddivise in elementi di base, vedere <xref:System.Xml.NameTable>.</span><span class="sxs-lookup"><span data-stu-id="c6813-111">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override string Add (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string Add(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.NameTable.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Add (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ Add(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c6813-112">Stringa da aggiungere.</span><span class="sxs-lookup"><span data-stu-id="c6813-112">The string to add.</span></span></param>
        <summary><span data-ttu-id="c6813-113">Suddivide in elementi di base la stringa specificata e la aggiunge alla classe <see langword="NameTable" />.</span><span class="sxs-lookup"><span data-stu-id="c6813-113">Atomizes the specified string and adds it to the <see langword="NameTable" />.</span></span></summary>
        <returns><span data-ttu-id="c6813-114">Stringa suddivisa in elementi di base o stringa esistente se già presente nella classe <see langword="NameTable" />.</span><span class="sxs-lookup"><span data-stu-id="c6813-114">The atomized string or the existing string if it already exists in the <see langword="NameTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6813-115">Per ulteriori informazioni sulle stringhe suddivise in elementi di base, vedere <xref:System.Xml.NameTable>.</span><span class="sxs-lookup"><span data-stu-id="c6813-115">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c6813-116"><paramref name="key" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c6813-116"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override string Add (char[] key, int start, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string Add(char[] key, int32 start, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Add (key As Char(), start As Integer, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ Add(cli::array &lt;char&gt; ^ key, int start, int len);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c6813-117">Matrice di caratteri contenente la stringa da aggiungere.</span><span class="sxs-lookup"><span data-stu-id="c6813-117">The character array containing the string to add.</span></span></param>
        <param name="start"><span data-ttu-id="c6813-118">Indice in base zero nella matrice che specifica il primo carattere della stringa.</span><span class="sxs-lookup"><span data-stu-id="c6813-118">The zero-based index into the array specifying the first character of the string.</span></span></param>
        <param name="len"><span data-ttu-id="c6813-119">Numero di caratteri nella stringa.</span><span class="sxs-lookup"><span data-stu-id="c6813-119">The number of characters in the string.</span></span></param>
        <summary><span data-ttu-id="c6813-120">Suddivide in elementi di base la stringa specificata e la aggiunge alla classe <see langword="NameTable" />.</span><span class="sxs-lookup"><span data-stu-id="c6813-120">Atomizes the specified string and adds it to the <see langword="NameTable" />.</span></span></summary>
        <returns><span data-ttu-id="c6813-121">Stringa suddivisa in elementi di base o stringa esistente se già presente nella classe <see langword="NameTable" />.</span><span class="sxs-lookup"><span data-stu-id="c6813-121">The atomized string or the existing string if one already exists in the <see langword="NameTable" />.</span></span> <span data-ttu-id="c6813-122">Se <paramref name="len" /> è zero, verrà restituito il valore String.Empty.</span><span class="sxs-lookup"><span data-stu-id="c6813-122">If <paramref name="len" /> is zero, String.Empty is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6813-123">Per ulteriori informazioni sulle stringhe suddivise in elementi di base, vedere <xref:System.Xml.NameTable>.</span><span class="sxs-lookup"><span data-stu-id="c6813-123">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="c6813-124">0 &gt; <paramref name="start" /></span><span class="sxs-lookup"><span data-stu-id="c6813-124">0 &gt; <paramref name="start" /></span></span>  
  
 <span data-ttu-id="c6813-125">oppure</span><span class="sxs-lookup"><span data-stu-id="c6813-125">-or-</span></span>  
  
 <span data-ttu-id="c6813-126"><paramref name="start" /> &gt;= <paramref name="key" />.Lunghezza</span><span class="sxs-lookup"><span data-stu-id="c6813-126"><paramref name="start" /> &gt;= <paramref name="key" />.Length</span></span>  
  
 <span data-ttu-id="c6813-127">oppure</span><span class="sxs-lookup"><span data-stu-id="c6813-127">-or-</span></span>  
  
 <span data-ttu-id="c6813-128"><paramref name="len" /> &gt;= <paramref name="key" />.Lunghezza</span><span class="sxs-lookup"><span data-stu-id="c6813-128"><paramref name="len" /> &gt;= <paramref name="key" />.Length</span></span>  
  
 <span data-ttu-id="c6813-129">Queste condizioni non provocano la generazione di un'eccezione se <paramref name="len" /> = 0.</span><span class="sxs-lookup"><span data-stu-id="c6813-129">The above conditions do not cause an exception to be thrown if <paramref name="len" /> =0.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c6813-130"><paramref name="len" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="c6813-130"><paramref name="len" /> &lt; 0.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c6813-131">Ottiene la stringa suddivisa in elementi di base.</span><span class="sxs-lookup"><span data-stu-id="c6813-131">Gets the atomized string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6813-132">Per ulteriori informazioni sulle stringhe suddivise in elementi di base, vedere <xref:System.Xml.NameTable>.</span><span class="sxs-lookup"><span data-stu-id="c6813-132">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public override string Get (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string Get(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.NameTable.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Get (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ Get(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c6813-133">Nome da trovare.</span><span class="sxs-lookup"><span data-stu-id="c6813-133">The name to find.</span></span></param>
        <summary><span data-ttu-id="c6813-134">Ottiene la stringa suddivisa in elementi di base con il valore specificato.</span><span class="sxs-lookup"><span data-stu-id="c6813-134">Gets the atomized string with the specified value.</span></span></summary>
        <returns><span data-ttu-id="c6813-135">Oggetto della stringa suddivisa in elementi di base o <see langword="null" /> se la stringa non è stata ancora suddivisa.</span><span class="sxs-lookup"><span data-stu-id="c6813-135">The atomized string object or <see langword="null" /> if the string has not already been atomized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6813-136">Per ulteriori informazioni sulle stringhe suddivise in elementi di base, vedere <xref:System.Xml.NameTable>.</span><span class="sxs-lookup"><span data-stu-id="c6813-136">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c6813-137"><paramref name="value" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c6813-137"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public override string Get (char[] key, int start, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string Get(char[] key, int32 start, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Get (key As Char(), start As Integer, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ Get(cli::array &lt;char&gt; ^ key, int start, int len);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c6813-138">Matrice di caratteri contenente il nome da trovare.</span><span class="sxs-lookup"><span data-stu-id="c6813-138">The character array containing the name to find.</span></span></param>
        <param name="start"><span data-ttu-id="c6813-139">Indice in base zero nella matrice che specifica il primo carattere del nome.</span><span class="sxs-lookup"><span data-stu-id="c6813-139">The zero-based index into the array specifying the first character of the name.</span></span></param>
        <param name="len"><span data-ttu-id="c6813-140">Numero di caratteri nel nome.</span><span class="sxs-lookup"><span data-stu-id="c6813-140">The number of characters in the name.</span></span></param>
        <summary><span data-ttu-id="c6813-141">Ottiene la stringa suddivisa in elementi di base che contiene gli stessi caratteri dell'intervallo di caratteri specificato nella matrice indicata.</span><span class="sxs-lookup"><span data-stu-id="c6813-141">Gets the atomized string containing the same characters as the specified range of characters in the given array.</span></span></summary>
        <returns><span data-ttu-id="c6813-142">Stringa suddivisa in elementi di base o <see langword="null" /> se la stringa non è già stata suddivisa.</span><span class="sxs-lookup"><span data-stu-id="c6813-142">The atomized string or <see langword="null" /> if the string has not already been atomized.</span></span> <span data-ttu-id="c6813-143">Se <paramref name="len" /> è zero, verrà restituito il valore String.Empty.</span><span class="sxs-lookup"><span data-stu-id="c6813-143">If <paramref name="len" /> is zero, String.Empty is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6813-144">Per ulteriori informazioni sulle stringhe suddivise in elementi di base, vedere <xref:System.Xml.NameTable>.</span><span class="sxs-lookup"><span data-stu-id="c6813-144">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="c6813-145">0 &gt; <paramref name="start" /></span><span class="sxs-lookup"><span data-stu-id="c6813-145">0 &gt; <paramref name="start" /></span></span>  
  
 <span data-ttu-id="c6813-146">oppure</span><span class="sxs-lookup"><span data-stu-id="c6813-146">-or-</span></span>  
  
 <span data-ttu-id="c6813-147"><paramref name="start" /> &gt;= <paramref name="key" />.Lunghezza</span><span class="sxs-lookup"><span data-stu-id="c6813-147"><paramref name="start" /> &gt;= <paramref name="key" />.Length</span></span>  
  
 <span data-ttu-id="c6813-148">oppure</span><span class="sxs-lookup"><span data-stu-id="c6813-148">-or-</span></span>  
  
 <span data-ttu-id="c6813-149"><paramref name="len" /> &gt;= <paramref name="key" />.Lunghezza</span><span class="sxs-lookup"><span data-stu-id="c6813-149"><paramref name="len" /> &gt;= <paramref name="key" />.Length</span></span>  
  
 <span data-ttu-id="c6813-150">Queste condizioni non provocano la generazione di un'eccezione se <paramref name="len" /> = 0.</span><span class="sxs-lookup"><span data-stu-id="c6813-150">The above conditions do not cause an exception to be thrown if <paramref name="len" /> =0.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c6813-151"><paramref name="len" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="c6813-151"><paramref name="len" /> &lt; 0.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>