<Type Name="XmlReaderSettings" FullName="System.Xml.XmlReaderSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="965e1339c800df2fdd84cbf63ac4969a511857de" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39917056" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlReaderSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlReaderSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlReaderSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlReaderSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReaderSettings sealed" />
  <TypeSignature Language="F#" Value="type XmlReaderSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Specifica un set di funzionalità da supportare nell'oggetto <see cref="T:System.Xml.XmlReader" /> creato dal metodo <see cref="Overload:System.Xml.XmlReader.Create" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si utilizza il <xref:System.Xml.XmlReader.Create%2A> metodo per ottenere <xref:System.Xml.XmlReader> istanze. Questo metodo Usa il <xref:System.Xml.XmlReaderSettings> classe per specificare le funzionalità da implementare nel <xref:System.Xml.XmlReader> dell'oggetto viene creato.  
  
 Vedere la sezione Osservazioni dei <xref:System.Xml.XmlReader> e <xref:System.Xml.XmlReader.Create%2A> pagine per informazioni sulle impostazioni da usare per i controlli di conformità, la convalida e altri scenari comuni di riferimento. Vedere il <xref:System.Xml.XmlReaderSettings.%23ctor> costruttore per un elenco delle impostazioni predefinite.  
  
## <a name="security-considerations"></a>Considerazioni sulla sicurezza  
 Tenere presente quanto segue quando si usa il <xref:System.Xml.XmlReaderSettings> classe.  
  
-   Per impostazione predefinita, i flag di convalida <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> e <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> dell'oggetto <xref:System.Xml.XmlReaderSettings> non sono impostati. Se questi flag sono impostati, verrà utilizzata la proprietà <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> dell'oggetto <xref:System.Xml.XmlReaderSettings> per risolvere i percorsi dello schema rilevati nel documento di istanza nel tipo <xref:System.Xml.XmlReader>. Se il <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> oggetto viene `null`, percorsi dello schema non verranno risolti anche se il <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> e <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> vengono impostati i flag di convalida.  
  
-   Gli schemi aggiunti durante la convalida aggiungono nuovi tipi e possono alterare l'esito della convalida del documento in esame. Di conseguenza, gli schemi esterni devono essere risolti solo da origini attendibili.  
  
-   I messaggi di errore di convalida possono esporre informazioni sensibili modello di contenuto. Errore di convalida e i messaggi di avviso vengono gestiti tramite il <xref:System.Xml.Schema.ValidationEventHandler> delegare o vengono esposti come un <xref:System.Xml.Schema.XmlSchemaValidationException> se non viene fornito alcun gestore eventi per il <xref:System.Xml.XmlReaderSettings> oggetto (non causano avvisi di convalida un <xref:System.Xml.Schema.XmlSchemaValidationException> eccezione). Queste informazioni di modello di contenuto non devono essere esposte in scenari non affidabili. I messaggi di avviso di convalida vengono eliminati per impostazione predefinita e possono essere segnalati tramite l'impostazione di <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> flag.  
  
-   Il <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> proprietà di un <xref:System.Xml.Schema.XmlSchemaValidationException> restituisce il percorso dell'URI del file di schema che ha causato l'eccezione. Il <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> proprietà non deve essere esposte in scenari non affidabili.  
  
-   La disabilitazione di <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> flag (abilitato per impostazione predefinita) è consigliata per documenti XML durante la convalida non attendibili di grandi dimensioni in scenari a disponibilità elevata rispetto a uno schema con vincoli di identità in gran parte del documento.  
  
-   Gli oggetti <xref:System.Xml.XmlReaderSettings> possono contenere informazioni sensibili quali le credenziali utente. È necessario prestare attenzione quando si memorizzano nella cache oggetti <xref:System.Xml.XmlReaderSettings> o quando si passa l'oggetto <xref:System.Xml.XmlReaderSettings> da un componente a un altro.  
  
-   Per impostazione predefinita, l'elaborazione della DTD è disabilitata. Se si abilita l'elaborazione della DTD, è necessario essere consapevoli dell'inclusione DTD da origini non attendibili e possibili attacchi denial of service. Usare la <xref:System.Xml.XmlSecureResolver> per limitare le risorse che il <xref:System.Xml.XmlReader> può accedere.  
  
-   Non accettare componenti di supporto, ad esempio oggetti <xref:System.Xml.NameTable>, <xref:System.Xml.XmlNamespaceManager> e <xref:System.Xml.XmlResolver> da un'origine non attendibile.  
  
-   L'utilizzo della memoria di un'applicazione che usa <xref:System.Xml.XmlReader> può essere correlato alle dimensioni del documento XML analizzato. Quando per l'analisi vengono inviati documenti XML di dimensioni eccessive, si verifica un attacco di tipo DoS. È possibile limitare le dimensioni del documento che può essere analizzato impostando il <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A> proprietà e quindi limitare il numero di caratteri risultanti dall'espansione di entità mediante l'impostazione di <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A> proprietà.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Xml.XmlReader> che usa un <xref:System.Xml.XmlUrlResolver> con le credenziali necessarie.  
  
 [!code-csharp[XmlReader.Create#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#2)]
 [!code-vb[XmlReader.Create#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella seguente illustra i valori iniziali delle proprietà per un'istanza di <xref:System.Xml.XmlReaderSettings>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|0 (non sono previsti limiti al numero di caratteri risultanti dall'espansione di entità).|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|0 (non sono previsti limiti sulle dimensioni del documento XML).|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|`null`.|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|`true`. Questa proprietà è obsoleta. In alternativa, usare <xref:System.Xml.XmlTextReader.DtdProcessing%2A>. Se è stata impostata <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> sul valore predefinito `true` impostare <xref:System.Xml.XmlTextReader.DtdProcessing%2A> a `Prohibit`. Se è stata impostata <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> al `false` impostare <xref:System.Xml.XmlTextReader.DtdProcessing%2A> a `Parse`.|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|Oggetto <xref:System.Xml.Schema.XmlSchemaSet> vuoto.|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<xref:System.Xml.ValidationType.None>.|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|Nuovo oggetto <xref:System.Xml.XmlUrlResolver>.|  
  
   
  
## Examples  
 Di seguito crea un oggetto impostazioni che può essere utilizzato per costruire un lettore che rimuove le istruzioni di elaborazione, commenti e spazi vuoti non significativi.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings (System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor(System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings(System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlReaderSettings : System.Xml.XmlResolver -&gt; System.Xml.XmlReaderSettings" Usage="new System.Xml.XmlReaderSettings resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">Resolver XML.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Async : bool with get, set" Usage="System.Xml.XmlReaderSettings.Async" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se è possibile usare metodi <see cref="T:System.Xml.XmlReader" /> asincroni in una determinata istanza di <see cref="T:System.Xml.XmlReader" />.</summary>
        <value>
          <see langword="true" /> se i metodi asincroni possono essere utilizzati; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario impostare questo valore su `true` quando si crea un nuovo <xref:System.Xml.XmlReader> istanza, se si desidera utilizzare asincrona <xref:System.Xml.XmlReader> metodi in tale istanza. Dopo il <xref:System.Xml.XmlReader> viene creata l'istanza, il <xref:System.Xml.XmlReaderSettings.Async%2A> proprietà è di sola lettura. Il valore predefinito di questa proprietà è `false`.  
  
 Questo flag viene ignorato dal <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> rapporto di overload. Ciò significa che se si crea un nuovo <xref:System.Xml.XmlReader> basato su un oggetto esistente <xref:System.Xml.XmlReader>, il comportamento asincrono dipende dall'input <xref:System.Xml.XmlReader>, e non è possibile usare il <xref:System.Xml.XmlReaderSettings.Async%2A> flag per modificare il comportamento asincrono.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCharacters : bool with get, set" Usage="System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se eseguire il controllo dei caratteri.</summary>
        <value>
          <see langword="true" /> per eseguire il controllo dei caratteri; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.  
  
 <block subset="none" type="note"><para> Se il <see cref="T:System.Xml.XmlReader" /> è elabora i dati di testo, controlla sempre che i nomi XML e il contenuto di testo siano validi, indipendentemente dall'impostazione della proprietà. L'impostazione <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> a <see langword="false" /> Disattiva controllo dei caratteri per i riferimenti alle entità di carattere.  </para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà indica il lettore XML per controllare i caratteri nei dati XML sta leggendo e generare un <xref:System.Xml.XmlException> se dei caratteri non compreso nell'intervallo dei caratteri XML validi. Quando è abilitato il controllo dei caratteri, è garantito quanto segue:  
  
-   Caratteri siano compresi nell'intervallo dei caratteri XML validi, come definito per il [2.2 Characters](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets) sezione della raccomandazione W3C XML 1.0.  
  
-   Tutti i nomi XML vengono, come definito per il [2.3 i costrutti sintattici comuni](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) sezione della raccomandazione W3C XML 1.0.  
  
 Quando questa proprietà è impostata su `true`, ovvero l'impostazione predefinita, un <xref:System.Xml.XmlException> eccezione viene generata se il file XML contiene caratteri non validi oppure nomi XML non validi (ad esempio, un nome di elemento inizia con un numero).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReaderSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReaderSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReaderSettings ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Xml.XmlReaderSettings" Usage="xmlReaderSettings.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia dell'istanza di <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
        <returns>Oggetto <see cref="T:System.Xml.XmlReaderSettings" /> clonato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Clonata <xref:System.Xml.XmlReaderSettings> oggetto può essere modificato senza modificare le impostazioni sull'oggetto originale.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public bool CloseInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseInput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CloseInput : bool with get, set" Usage="System.Xml.XmlReaderSettings.CloseInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il flusso o la classe <see cref="T:System.IO.TextReader" /> sottostante devono essere chiusi alla chiusura del lettore.</summary>
        <value>
          <see langword="true" /> per chiudere il flusso o l'oggetto <see cref="T:System.IO.TextReader" /> sottostante alla chiusura del lettore; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa impostazione viene usata quando un flusso o <xref:System.IO.TextReader> viene passato per il <xref:System.Xml.XmlReader.Create%2A> (metodo). Se un flusso viene creato dal lettore per la propria elaborazione, ad esempio quando il lettore viene creato con un URI o quando si apre una DTD esterna, viene sempre chiusa quando il lettore viene chiuso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceLevel : System.Xml.ConformanceLevel with get, set" Usage="System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il livello di conformità dell'oggetto <see cref="T:System.Xml.XmlReader" />.</summary>
        <value>Uno dei valori di enumerazione che specifica il livello di conformità che verrà applicato dal lettore XML. Il valore predefinito è <see cref="F:System.Xml.ConformanceLevel.Document" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lettori XML che vengono creati il <xref:System.Xml.XmlReader.Create%2A> per impostazione predefinita, metodo soddisfa i requisiti di conformità seguenti:  
  
-   Le nuove righe e il valore di attributo vengono normalizzati in base al W3C [XML 1.0 Recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).  
  
-   Tutte le entità vengono espansi automaticamente.  
  
-   Gli attributi predefiniti dichiarati nella definizione del tipo di documento vengono aggiunti sempre anche quando il lettore non esegue la convalida.  
  
-   Dichiarazione di prefisso XML mappato all'URI dello spazio dei nomi XML corretto è consentita.  
  
-   I nomi di notazione in un'unica `NotationType` dichiarazione dell'attributo e `NmTokens` in una singola `Enumeration` dichiarazione di attributo sono distinti.  
  
 È possibile usare il <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> proprietà per controllare e garantire che il flusso di dati letti sia conforme alle regole per un documento XML 1.0 corretto o un frammento di documento. Se i dati non è conforme, un <xref:System.Xml.XmlException> viene generata un'eccezione. Il valore predefinito è <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (conformità a livello di documento).  
  
 I livelli di tre conformità sono:  
  
|Impostazione|Descrizione|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|Assicura che i dati XML sono conformi alle regole per un documento XML 1.0 corretto. Questo livello di controllo assicura che qualsiasi processore possa utilizzare il flusso di dati letto come un [documento XML 1.0 corretto](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed).<br /><br /> Il lettore verifica quanto segue:<br /><br /> -L'elemento di primo livello non deve avere altri nodi oltre alla dichiarazione XML, definizione di tipo di documento (DTD), elemento, commento, spazi vuoti o istruzione di elaborazione.<br />-I dati XML devono avere esattamente un nodo di elemento di primo livello.|  
|<xref:System.Xml.ConformanceLevel.Fragment>|Assicura che i dati XML sono conformi alle regole per un frammento di documento XML 1.0 in formato corretto.<br /><br /> Con questa impostazione vengono accettati i dati XML con più elementi radice o i nodi di tipo text al livello principale. Questo livello di controllo assicura che qualsiasi processore possa utilizzare il flusso di dati letto come un [entità analizzata esterna](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities).|  
|<xref:System.Xml.ConformanceLevel.Auto>|Specifica che il lettore deve determinare il livello di controllo di conformità in base ai dati in ingresso.<br /><br /> Il controllo di conformità del documento viene applicato se i dati XML contengono informazioni DTD.<br /><br /> Il controllo di conformità del frammento viene applicato se i dati XML contengono uno degli elementi seguenti:<br /><br /> -Nodo di riferimento text, CDATA o entità a livello di radice.<br />-Più di un elemento a livello di radice.<br />-Nessun elemento a livello di radice.<br /><br /> Viene generato un tipo <xref:System.Xml.XmlException> se si verifica un conflitto, ad esempio quando sono presenti un nodo di tipo text e una DTD a livello radice.<br /><br /> È possibile utilizzare questa impostazione in scenari di inclusione quando viene utilizzato il metodo <xref:System.Xml.XmlReader.Create%2A> per aggiungere ulteriori funzionalità a un <xref:System.Xml.XmlReader> esistente. In questo caso, <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> non aggiunge nuovi controlli di conformità. Il controllo di conformità è affidato al <xref:System.Xml.XmlReader> che viene incluso.|  
  
> [!NOTE]
>  La raccomandazione XML 1.0 richiede la conformità a livello di documento in presenza di una DTD. Pertanto, se il lettore è configurato per supportare <xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>, ma i dati XML contengono una definizione di tipo di documento (DTD), un <xref:System.Xml.XmlException> viene generata un'eccezione.  
  
 Di seguito è riportato il modo in cui il lettore gestisce le violazioni di conformità specifico a seconda dell'impostazione del <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> proprietà:  
  
|Condizione|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|Testo o un valore tipizzato viene visualizzato al livello superiore.|<xref:System.Xml.XmlException> viene generata un'eccezione.|Non è considerato una violazione di questa impostazione.|Non è considerato una violazione di questa impostazione.|  
|Più elementi o nessun elemento visualizzato al livello superiore.|<xref:System.Xml.XmlException> viene generata un'eccezione.|Non è considerato una violazione di questa impostazione.|Non è considerato una violazione di questa impostazione.|  
|Elemento di livello superiore è lo spazio vuoto.|Non è considerato una violazione di questa impostazione.|Non è considerato una violazione di questa impostazione.|Non è considerato una violazione di questa impostazione.|  
|Elemento di primo livello è un attributo (riconosciuto come nodo di testo).|<xref:System.Xml.XmlException> viene generata un'eccezione.|Non è considerato una violazione di questa impostazione.|Non è considerato una violazione di questa impostazione.|  
|Vengono rilevati più nodi contigui di tipo text.|Non è considerato una violazione di questa impostazione.|Non è considerato una violazione di questa impostazione.|Non è considerato una violazione di questa impostazione.|  
|Lo stesso prefisso dello spazio dei nomi viene dichiarato due volte nello stesso ambito locale.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|  
|Lo spazio dei nomi in un attributo o elemento non esiste nell'ambito locale.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|  
|Dati contengano una mancata corrispondenza del prefisso-spazio dei nomi.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|  
|`xml:space` attributo obsahuje neplatnou hodnotu.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|  
|Viene rilevato un nome non valido.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|  
|Il `xml` prefisso non corrisponde alla http://www.w3.org/XML/1998/namespace URI.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Xml.XmlReader> che legge un frammento XML.  
  
 [!code-csharp[XmlReader.Create#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#1)]
 [!code-vb[XmlReader.Create#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DtdProcessing">
      <MemberSignature Language="C#" Value="public System.Xml.DtdProcessing DtdProcessing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.DtdProcessing DtdProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Property DtdProcessing As DtdProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::DtdProcessing DtdProcessing { System::Xml::DtdProcessing get(); void set(System::Xml::DtdProcessing value); };" />
      <MemberSignature Language="F#" Value="member this.DtdProcessing : System.Xml.DtdProcessing with get, set" Usage="System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.DtdProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che determina l'elaborazione di DTD.</summary>
        <value>Uno dei valori di enumerazione che determina l'elaborazione di DTD. Il valore predefinito è <see cref="F:System.Xml.DtdProcessing.Prohibit" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Convalida Document type definition (DTD) viene implementata usando i vincoli di validità definiti nella finestra di W3C [Extensible Markup Language (XML) 1.0 (fourth edition) raccomandazione](https://www.w3.org/TR/2006/REC-xml-20060816/). Le DTD utilizzano una grammatica formale per descrivere la struttura e sintassi di documenti XML conformi. specificano il contenuto e i valori consentiti per il documento XML.  
  
 Questa proprietà può avere uno dei seguenti valori:  
  
-   <xref:System.Xml.DtdProcessing.Parse?displayProperty=nameWithType> Per abilitare l'elaborazione della DTD.  
  
-   <xref:System.Xml.DtdProcessing.Prohibit?displayProperty=nameWithType> per generare un <xref:System.Xml.XmlException> eccezione quando viene rilevato un DTD.  
  
-   <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType> Per disabilitare l'elaborazione senza eccezioni o gli avvisi di DTD.  
  
 Per eseguire la convalida rispetto a una DTD, il tipo <xref:System.Xml.XmlReader> utilizza la DTD definita nella dichiarazione DOCTYPE di un documento XML. La dichiarazione DOCTYPE può fare riferimento a una DTD inline oppure può essere un riferimento a un file DTD esterno. Per convalidare un file XML rispetto a una DTD:  
  
-   Impostare la proprietà <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A?displayProperty=nameWithType> su `DtdProcessing.Parse.`  
  
-   Impostare la proprietà <xref:System.Xml.XmlReaderSettings.ValidationType%2A?displayProperty=nameWithType> su `ValidationType.DTD`.  
  
-   Se la DTD è un file esterno archiviato in una risorsa di rete che richiede l'autenticazione, passare un oggetto <xref:System.Xml.XmlResolver> con le necessarie credenziali al metodo <xref:System.Xml.XmlReader.Create%2A>.  
  
> [!IMPORTANT]
>  Se il <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> è impostata su <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>, il <xref:System.Xml.XmlReader> non segnalerà le definizioni DTD. Ciò significa che il DTD/DOCTYPE verrà incluso nell'output.  
  
   
  
## Examples  
 Nell'esempio seguente un file XML viene convalidato utilizzando un file DTD.  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
## <a name="input"></a>Input  
 Nell'esempio viene utilizzato il file `itemDTD.xml` come input.  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreComments">
      <MemberSignature Language="C#" Value="public bool IgnoreComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreComments" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreComments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreComments { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreComments : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se ignorare i commenti.</summary>
        <value>
          <see langword="true" /> per ignorare i commenti; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostando questa proprietà su `true` può comportare più nodi contigui di tipo text restituiti dal lettore. Questa operazione non influenza la convalida.  
  
   
  
## Examples  
 Di seguito crea un oggetto impostazioni che può essere utilizzato per costruire un lettore che rimuove le istruzioni di elaborazione, commenti e spazi vuoti non significativi.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreProcessingInstructions">
      <MemberSignature Language="C#" Value="public bool IgnoreProcessingInstructions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreProcessingInstructions" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreProcessingInstructions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreProcessingInstructions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreProcessingInstructions : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se ignorare le istruzioni di elaborazione.</summary>
        <value>
          <see langword="true" /> per ignorare le istruzioni di elaborazione; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostando questa proprietà su `true` può comportare più nodi contigui di tipo text restituiti dal lettore. Questa operazione non influenza la convalida.  
  
   
  
## Examples  
 Di seguito crea un oggetto impostazioni che può essere utilizzato per costruire un lettore che rimuove le istruzioni di elaborazione, commenti e spazi vuoti non significativi.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWhitespace">
      <MemberSignature Language="C#" Value="public bool IgnoreWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWhitespace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreWhitespace : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se ignorare gli spazi vuoti non significativi.</summary>
        <value>
          <see langword="true" /> per ignorare gli spazi vuoti; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Spazi vuoti che non sono considerati significativi include spazi, tabulazioni e righe vuote utilizzate per separare il markup per una maggiore leggibilità. Un esempio di ciò è spazi vuoti nel contenuto dell'elemento.  
  
 Impostazione di questa proprietà influisce non spazio vuoto tra markup in un modalità contenuta mista oppure spazio vuoto che si verifica all'interno dell'ambito di un `xml:space='preserve'` attributo.  
  
   
  
## Examples  
 Di seguito crea un oggetto impostazioni che può essere utilizzato per costruire un lettore che rimuove le istruzioni di elaborazione, commenti e spazi vuoti non significativi.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LineNumberOffset">
      <MemberSignature Language="C#" Value="public int LineNumberOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumberOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LineNumberOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumberOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LineNumberOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'offset del numero di riga dell'oggetto <see cref="T:System.Xml.XmlReader" />.</summary>
        <value>Offset del numero di riga. Il valore predefinito è 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A> impostazione determina il punto in cui il <xref:System.Xml.IXmlLineInfo.LineNumber%2A> proprietà inizia il conteggio. Ciò è utile se i dati XML sono incorporati all'interno di un documento più grande. Ad esempio, se i dati XML sono stati incorporati in un documento più grande e dei dati iniziavano alla riga 101 del documento, è possibile specificare che il lettore inizi alla riga 100. Pertanto, se il lettore ha generato un'eccezione durante l'analisi della prima riga del codice XML, segnalerebbe come riga 101, anziché la riga 1 il numero di riga.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LinePositionOffset">
      <MemberSignature Language="C#" Value="public int LinePositionOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePositionOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LinePositionOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePositionOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LinePositionOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'offset della posizione della riga dell'oggetto <see cref="T:System.Xml.XmlReader" />.</summary>
        <value>Offset della posizione della riga. Il valore predefinito è 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A> impostazione determina il punto in cui il <xref:System.Xml.IXmlLineInfo.LinePosition%2A> proprietà inizia il conteggio. Ciò è utile se i dati XML sono incorporati all'interno di un documento più grande e nessuna nuova riga all'inizio del codice XML. In questo caso, se il lettore genera un'eccezione durante l'analisi del XML, si desidera restituire la posizione di riga rispetto al documento principale, non solo rispetto al frammento XML.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersFromEntities">
      <MemberSignature Language="C#" Value="public long MaxCharactersFromEntities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersFromEntities" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersFromEntities As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersFromEntities { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersFromEntities : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica il numero massimo di caratteri consentito in un documento generato dall'espansione delle entità.</summary>
        <value>Numero massimo consentito per i caratteri generati dalle entità espanse. Il valore predefinito è 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valore zero (0) non indica nessun limite per il numero di caratteri risultanti dall'espansione di entità. Un valore diverso da zero specifica il numero massimo di caratteri risultanti dall'espansione di entità.  
  
 Se il lettore tenta di leggere un documento che contiene le entità in modo che le dimensioni espanse supera il valore di questa proprietà, un <xref:System.Xml.XmlException> verrà generata.  
  
 Questa proprietà consente di prevenire attacchi denial of service in cui l'utente malintenzionato invia documenti XML che cerchi di superare i limiti di memoria tramite l'espansione delle entità. Limitando i caratteri risultanti dalle entità espanse, è possibile rilevare l'attacco e recuperare in modo affidabile.  
  
   
  
## Examples  
 Il codice seguente imposta questa proprietà e quindi tenta di analizzare un documento che contiene un'entità che si espande in una dimensione superiore rispetto al limite impostato. In uno scenario reale, si imposterebbe questo limite per un valore sufficientemente grande per la gestione di documenti validi, ancora sufficientemente ridotto per limitare la minaccia derivante dal malware dannosi documenti.  
  
```csharp  
string markup =  
@"<!DOCTYPE Root [  
  <!ENTITY anEntity ""Expands to more than 30 characters"">  
  <!ELEMENT Root (#PCDATA)>  
]>  
<Root>Content &anEntity;</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.DtdProcessing = DtdProcessing.Parse;  
settings.ValidationType = ValidationType.DTD;  
settings.MaxCharactersFromEntities = 30;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = _  
    "<!DOCTYPE Root [" + Environment.NewLine + _  
    "  <!ENTITY anEntity ""Expands to more than 30 characters"">" + Environment.NewLine + _  
    "  <!ELEMENT Root (#PCDATA)>" + Environment.NewLine + _  
    ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersInDocument">
      <MemberSignature Language="C#" Value="public long MaxCharactersInDocument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersInDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersInDocument As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersInDocument { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersInDocument : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica il numero massimo di caratteri consentito in un documento XML. Un valore zero (0) indica che non è previsto alcun limite alla dimensione del documento XML. Un valore diverso da zero specifica la dimensione massima in caratteri.</summary>
        <value>Numero massimo di caratteri consentito in un documento XML. Il valore predefinito è 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valore zero (0) non indica nessun limite per il numero di caratteri nel documento analizzato. Un valore diverso da zero specifica il numero massimo di caratteri che può essere analizzato.  
  
 Il numero massimo di caratteri per il documento include il conteggio di caratteri risultanti dalle entità espanse.  
  
 Se il lettore tenta di leggere un documento con una dimensione superiore a questa proprietà, un <xref:System.Xml.XmlException> verrà generata.  
  
 Questa proprietà consente di prevenire attacchi denial of service in cui l'utente malintenzionato invia documenti XML molto grandi. Limitando le dimensioni di un documento, è possibile rilevare l'attacco e recuperare in modo affidabile.  
  
   
  
## Examples  
 Il codice seguente imposta questa proprietà e quindi tenta di analizzare un documento più grande del limite. In uno scenario reale, si imposterebbe questo limite per un valore sufficientemente grande per la gestione di documenti validi, ancora sufficientemente ridotto per limitare la minaccia derivante dal malware dannosi documenti.  
  
```csharp  
string markup = "<Root>Content</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.MaxCharactersInDocument = 10;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = "<Root>Content</Root>"  
  
Dim settings As XmlReaderSettings = New XmlReaderSettings()  
settings.MaxCharactersInDocument = 10  
  
Try  
    Dim reader As XmlReader = XmlReader.Create(New StringReader(markup), settings)  
    While (reader.Read())  
    End While  
Catch ex As XmlException  
    Console.WriteLine(ex.Message)  
End Try  
```  
  
 L'output del codice è il seguente:  
  
```  
There is an error in XML document (MaxCharactersInDocument, ).  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); void set(System::Xml::XmlNameTable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable with get, set" Usage="System.Xml.XmlReaderSettings.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Xml.XmlNameTable" /> usato per il confronto delle stringhe atomizzate.</summary>
        <value>Classe <see cref="T:System.Xml.XmlNameTable" /> che archivia tutte le stringhe atomizzate usate da tutte le istanze di <see cref="T:System.Xml.XmlReader" /> create tramite l'oggetto <see cref="T:System.Xml.XmlReaderSettings" />.  
  
Il valore predefinito è <see langword="null" />. Se questo valore è <see cref="T:System.Xml.XmlReader" />, l'istanza di <see cref="T:System.Xml.NameTable" /> creata userà una nuova classe <see langword="null" /> vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare questa proprietà su un <xref:System.Xml.XmlNameTable> istanza, se si vuole condividere una tabella dei nomi comuni tra tutti creato <xref:System.Xml.XmlReader> istanze.  
  
> [!NOTE]
>  La classe <xref:System.Xml.NameTable> non è thread-safe. Di conseguenza non può essere condiviso tra <xref:System.Xml.XmlReader> gli oggetti che vengono eseguiti simultaneamente in thread diversi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProhibitDtd">
      <MemberSignature Language="C#" Value="public bool ProhibitDtd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProhibitDtd" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberSignature Language="VB.NET" Value="Public Property ProhibitDtd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProhibitDtd { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProhibitDtd : bool with get, set" Usage="System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use XmlReaderSettings.DtdProcessing property instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se non deve essere consentita l'elaborazione DTD (Document Type Definition). Questa proprietà è obsoleta. In alternativa, usare <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />.</summary>
        <value>
          <see langword="true" /> per non consentire l'elaborazione DTD; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se impostato su `true`, il <xref:System.Xml.XmlReader> genera un <xref:System.Xml.XmlException> quando viene rilevata qualsiasi contenuto di DTD. Non abilitare l'elaborazione della DTD se ci si occupa di problemi relativi ad attacchi Denial of Service o se si gestiscono origini non attendibili.  
  
 Se l'elaborazione della DTD è attivata, è possibile utilizzare il tipo <xref:System.Xml.XmlSecureResolver> per limitare le risorse a cui il tipo <xref:System.Xml.XmlReader> può accedere. È anche possibile progettare l'applicazione in modo da specificare vincoli di memoria e di tempo per l'elaborazione XML. Ad esempio, configurare i limiti di timeout nell'applicazione ASP.NET.  
  
 Questa proprietà è obsoleta. In alternativa, usare <xref:System.Xml.XmlTextReader.DtdProcessing%2A>. Se è stata impostata <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> sul valore predefinito `true` impostare <xref:System.Xml.XmlTextReader.DtdProcessing%2A> a `Prohibit`. Se è stata impostata <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> al `false` impostare <xref:System.Xml.XmlTextReader.DtdProcessing%2A> a `Parse`.  
  
   
  
## Examples  
 Nell'esempio seguente convalida i dati usando una definizione DTD.  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
 L'esempio Usa il file itemDTD come input.  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="xmlReaderSettings.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ripristina i valori predefiniti dei membri della classe delle impostazioni.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella seguente illustra i valori iniziali delle proprietà per un'istanza di <xref:System.Xml.XmlReaderSettings>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|0 (non sono previsti limiti al numero di caratteri risultanti dall'espansione di entità).|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|0 (non sono previsti limiti sulle dimensioni del documento XML).|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|`null`.|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|`true`. Questa proprietà è obsoleta. In alternativa, usare <xref:System.Xml.XmlTextReader.DtdProcessing%2A>. Se è stata impostata <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> sul valore predefinito `true` impostare <xref:System.Xml.XmlTextReader.DtdProcessing%2A> a `Prohibit`. Se è stata impostata <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> al `false` impostare <xref:System.Xml.XmlTextReader.DtdProcessing%2A> a `Parse`.|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|Oggetto <xref:System.Xml.Schema.XmlSchemaSet> vuoto.|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<xref:System.Xml.ValidationType.None>.|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|Nuovo oggetto <xref:System.Xml.XmlUrlResolver>.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); void set(System::Xml::Schema::XmlSchemaSet ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet with get, set" Usage="System.Xml.XmlReaderSettings.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> da usare quando si esegue la convalida dello schema.</summary>
        <value>Oggetto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> da usare quando si esegue la convalida dello schema. L'impostazione predefinita è un oggetto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vuoto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  -   Non usare gli schemi da origini sconosciute o non attendibile o percorsi. In questo modo può pregiudicare la sicurezza del codice.  
> -   Schemi XML (inclusi gli schemi inline) sono intrinsecamente vulnerabili ad attacchi denial of service; non le accetti in scenari non affidabili.  
> -   Le eccezioni e messaggi di errore di convalida dello schema possono esporre informazioni riservate riguardanti il modello di contenuto o i percorsi URI per il file di schema. Prestare attenzione a non esporre queste informazioni per i chiamanti non attendibili.  
> -   Per altre informazioni, vedere la sezione "Considerazioni sulla sicurezza".  
  
 Il <xref:System.Xml.Schema.XmlSchemaSet> classe supporta solo schemi XML Schema definition language (XSD). <xref:System.Xml.XmlReader> le istanze create dal <xref:System.Xml.XmlReader.Create%2A> metodo non può essere configurato per abilitare la convalida dello schema XML-Data Reduced (XDR).  
  
## <a name="security-considerations"></a>Considerazioni sulla sicurezza  
  
-   Non usare gli schemi da origini sconosciute o non attendibili. In questo modo può pregiudicare la sicurezza del codice. Il <xref:System.Xml.XmlUrlResolver> classe viene utilizzata per la risoluzione degli schemi esterni per impostazione predefinita. Per disabilitare la risoluzione di inclusione, importazione e ridefinire gli elementi di uno schema, impostare il <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType> proprietà `null`.  
  
-   Le eccezioni generate in seguito all'utilizzo di <xref:System.Xml.Schema.XmlSchemaSet> classe, ad esempio il <xref:System.Xml.Schema.XmlSchemaException> classe può contenere informazioni riservate che non devono essere esposte in scenari non affidabili. Ad esempio, il <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> proprietà di un <xref:System.Xml.Schema.XmlSchemaException> restituisce il percorso dell'URI del file di schema che ha causato l'eccezione. Il <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> proprietà non deve essere esposte in scenari non affidabili. Le eccezioni devono essere gestite correttamente in modo che queste informazioni riservate non viene esposto in scenari non affidabili.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Xml.XmlReaderSettings> oggetto e il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per associare uno schema a un documento XML. Lo schema viene aggiunto per il <xref:System.Xml.XmlReaderSettings.Schemas%2A> proprietà del <xref:System.Xml.XmlReaderSettings> oggetto. Il valore della <xref:System.Xml.XmlReaderSettings.Schemas%2A> proprietà è un <xref:System.Xml.Schema.XmlSchemaSet> oggetto. Lo schema viene utilizzato per convalidare che il documento XML sia conforme al modello di contenuto dello schema. Errori di convalida dello schema e gli avvisi vengono gestiti dal <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> definito nel <xref:System.Xml.XmlReaderSettings> oggetto.  
  
 [!code-cpp[XmlSchemaSetOverall Example#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaSetOverall Example/CPP/xmlschemasetexample.cpp#1)]
 [!code-csharp[XmlSchemaSetOverall Example#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaSetOverall Example/CS/xmlschemasetexample.cs#1)]
 [!code-vb[XmlSchemaSetOverall Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaSetOverall Example/VB/xmlschemasetexample.vb#1)]  
  
 L'esempio Usa il file books. XML come input.  
  
 [!code-xml[XmlSchemaSetOverall Example#2](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xml#2)]  
  
 L'esempio Usa il file books. xsd come input.  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlReaderSettings.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando il lettore rileva errori di convalida.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questi eventi si verificano durante la lettura di un documento di istanza XML, se il <xref:System.Xml.XmlReaderSettings.ValidationType%2A> sia impostata su <xref:System.Xml.ValidationType.DTD> o <xref:System.Xml.ValidationType.Schema>. Se il <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> impostazione è stata abilitata nel <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> proprietà questi eventi si verificano anche quando vengono rilevati eventuali avvisi di convalida.  
  
 Se il lettore è configurato per la convalida ed non è stato impostato alcun gestore di eventi di convalida, un <xref:System.Xml.Schema.XmlSchemaValidationException> generata per tutti gli errori di convalida. (Gli avvisi di convalida non provocano un <xref:System.Xml.Schema.XmlSchemaValidationException> eccezione).  
  
> [!IMPORTANT]
>  I messaggi di errore di convalida possono esporre informazioni sensibili modello di contenuto. Errore di convalida e i messaggi di avviso vengono gestiti tramite il <xref:System.Xml.Schema.ValidationEventHandler> delegare o vengono esposti come un <xref:System.Xml.Schema.XmlSchemaValidationException> se non viene fornito alcun gestore eventi per il <xref:System.Xml.XmlReaderSettings> oggetto (non causano avvisi di convalida un <xref:System.Xml.Schema.XmlSchemaValidationException> eccezione). Queste informazioni di modello di contenuto non devono essere esposte in scenari non affidabili. I messaggi di avviso di convalida vengono eliminati per impostazione predefinita e possono essere segnalati tramite l'impostazione di <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> flag.  
>   
>  Il <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> proprietà di un <xref:System.Xml.Schema.XmlSchemaValidationException> restituisce il percorso dell'URI del file di schema che ha causato l'eccezione. Il <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> proprietà non deve essere esposte in scenari non affidabili.  
  
   
  
## Examples  
 Nell'esempio seguente mostra le impostazioni per specificare per creare un lettore che convalida mediante uno schema inline e che visualizza anche avvisi di convalida. Il gestore di eventi di convalida Usa la <xref:System.Xml.Schema.XmlSeverityType> enumerazione distinguere tra avvisi ed errori.  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationFlags">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationFlags As XmlSchemaValidationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaValidationFlags ValidationFlags { System::Xml::Schema::XmlSchemaValidationFlags get(); void set(System::Xml::Schema::XmlSchemaValidationFlags value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationFlags : System.Xml.Schema.XmlSchemaValidationFlags with get, set" Usage="System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica le impostazioni di convalida dello schema. Questa impostazione si applica a oggetti <see cref="T:System.Xml.XmlReader" /> che convalidano schemi (proprietà <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> impostata su <see langword="ValidationType.Schema" />).</summary>
        <value>Combinazione bit per bit dei valori di enumerazione che specificano le opzioni di convalida. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> e <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> sono abilitati per impostazione predefinita. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> e <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> sono disabilitate per impostazione predefinita.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Per impostazione predefinita, i flag di convalida <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> e <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> dell'oggetto <xref:System.Xml.XmlReaderSettings> non sono impostati. Se questi flag sono impostati, verrà utilizzata la proprietà <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> dell'oggetto <xref:System.Xml.XmlReaderSettings> per risolvere i percorsi dello schema rilevati nel documento di istanza nel tipo <xref:System.Xml.XmlReader>. Se il <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> oggetto viene `null`, percorsi dello schema non verranno risolti anche se il <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> e <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> vengono impostati i flag di convalida.  
>   
>  Gli schemi aggiunti durante la convalida aggiungono nuovi tipi e possono alterare l'esito della convalida del documento in esame. Di conseguenza, gli schemi esterni devono essere risolti solo da origini attendibili.  
>   
>  La disabilitazione di <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> flag (abilitato per impostazione predefinita) è consigliata per documenti XML durante la convalida non attendibili di grandi dimensioni in scenari a disponibilità elevata rispetto a uno schema con vincoli di identità in gran parte del documento.  
  
   
  
## Examples  
 Nell'esempio seguente convalida un file XML rispetto allo Schema XML inline abilitando il <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> impostazione. Il lettore XML è configurato per visualizzare gli avvisi di convalida, sp viene visualizzato anche l'avviso previsto per l'elemento radice.  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
## <a name="input"></a>Input  
 In questo esempio viene utilizzato il file inlineSchema.xml come input.  
  
 [!code-xml[XmlReaderSettings.IgnoreInlineSchema#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/XML/inlineSchema.xml#3)]  
  
## <a name="output"></a>Output  
 Avviso: Schema corrispondente non rilevato. Nessuna convalida eseguita. Impossibile creare informazioni sullo schema per l'elemento "root".  
  
 Errore di convalida: l'elemento 'xsdHeadCount: HeadCount' contiene un elemento figlio non valido "division". Previsto "Identificatore".  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationType">
      <MemberSignature Language="C#" Value="public System.Xml.ValidationType ValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ValidationType ValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationType As ValidationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ValidationType ValidationType { System::Xml::ValidationType get(); void set(System::Xml::ValidationType value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationType : System.Xml.ValidationType with get, set" Usage="System.Xml.XmlReaderSettings.ValidationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ValidationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'oggetto <see cref="T:System.Xml.XmlReader" /> eseguirà la convalida o l'assegnazione del tipo durante la lettura.</summary>
        <value>Uno dei valori di <see cref="T:System.Xml.ValidationType" /> che indica se XmlReader eseguirà la convalida o l'assegnazione del tipo durante la lettura. Il valore predefinito è <see langword="ValidationType.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella seguente descrive il <xref:System.Xml.ValidationType> valori.  
  
> [!NOTE]
>  Il <xref:System.Xml.ValidationType.Auto> e <xref:System.Xml.ValidationType.XDR> valori di enumerazione sono obsoleti in .NET Framework versione 2.0.  
  
|ValidationType|Descrizione|  
|--------------------|-----------------|  
|`DTD`|La convalida viene eseguita utilizzando una definizione di tipo di documento (DTD). **Nota:** il <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> proprietà deve essere impostata anche su <xref:System.Xml.DtdProcessing.Parse>.|  
|`None`|Il <xref:System.Xml.XmlReader> non convalidare i dati oppure eseguire qualsiasi tipo di assegnazione.|  
|`Schema`|Assegnazione di convalida e il tipo viene eseguita usando uno schema di XML Schema definition language (XSD). Il lettore accede a XML Schema con le seguenti operazioni:<br /><br /> -Usa il <xref:System.Xml.XmlReaderSettings.Schemas%2A> proprietà a cui accedere il <xref:System.Xml.Schema.XmlSchemaSet> oggetto associato a questo reader.<br />-Usa schema inline contenuto nel documento di istanza XML. (Il <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> opzione deve essere abilitata.)<br />-Usa il XML Schema specificato dall'hint di posizione (`xsi:schemaLocation` o `xsi:noNamespaceSchemaLocation` attributo) trovato nel documento di istanza XML. (Il <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> opzione deve essere abilitata.)|  
  
   
  
## Examples  
 L'esempio seguente convalida con uno schema archiviato nel <xref:System.Xml.Schema.XmlSchemaSet>.  
  
 [!code-cpp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CPP/XmlReader_Validate_SchemaSet.cpp#1)]
 [!code-csharp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CS/validschemaset.cs#1)]
 [!code-vb[XmlReader_Validate_SchemaSet#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_SchemaSet/VB/validschemaset.vb#1)]  
  
 L'esempio Usa i file di input seguenti:  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/booksschemafail.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Imposta l'oggetto <see cref="T:System.Xml.XmlResolver" /> usato per l'accesso a documenti esterni.</summary>
        <value>Oggetto <see cref="T:System.Xml.XmlResolver" /> usato per l'accesso a documenti esterni. Se il valore è impostato su <see langword="null" />, viene generata un'eccezione <see cref="T:System.Xml.XmlException" /> quando l'oggetto <see cref="T:System.Xml.XmlReader" /> prova ad accedere a una risorsa esterna. L'impostazione predefinita è un nuovo oggetto <see cref="T:System.Xml.XmlUrlResolver" /> senza credenziali.  A partire da .NET Framework 4.5.2, il valore predefinito di questa impostazione è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.XmlResolver> viene utilizzato per individuare e aprire un documento di istanza XML, o per individuare e aprire eventuali risorse esterne fa riferimento il documento di istanza XML. Può trattarsi di entità, DTD o schemi. Il <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> proprietà può essere utilizzata per specificare le credenziali necessarie per l'autenticazione di rete.  
  
> [!IMPORTANT]
>  Poiché il <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> possono contenere informazioni sensibili quali le credenziali utente, è necessario prestare attenzione quando la memorizzazione nella cache <xref:System.Xml.XmlReaderSettings> oggetti, o quando si passa il <xref:System.Xml.XmlReaderSettings> oggetto da un componente a un altro.  
>   
>  Un <xref:System.Xml.XmlSecureResolver> può essere utilizzato per accedere a documenti esterni. Il <xref:System.Xml.XmlSecureResolver> consente di proteggere un'altra implementazione della classe <xref:System.Xml.XmlResolver> eseguendo il wrapping il <xref:System.Xml.XmlResolver> oggetto e limitare le risorse che sottostante <xref:System.Xml.XmlResolver> può accedere a.  
>   
>  Per impostazione predefinita, i flag di convalida <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> e <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> dell'oggetto <xref:System.Xml.XmlReaderSettings> non sono impostati. Se questi flag sono impostati, verrà utilizzata la proprietà <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> dell'oggetto <xref:System.Xml.XmlReaderSettings> per risolvere i percorsi dello schema rilevati nel documento di istanza nel tipo <xref:System.Xml.XmlReader>. Se il <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> oggetto viene `null`, percorsi dello schema non verranno risolti anche se il <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> e <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> vengono impostati i flag di convalida.  
>   
>  Gli schemi aggiunti durante la convalida aggiungono nuovi tipi e possono alterare l'esito della convalida del documento in esame. Di conseguenza, gli schemi esterni devono essere risolti solo da origini attendibili.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Xml.XmlReader> che usa un <xref:System.Xml.XmlSecureResolver> con credenziali predefinite.  
  
 [!code-csharp[XmlReader.Create#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#10)]
 [!code-vb[XmlReader.Create#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>