<Type Name="XmlNodeReader" FullName="System.Xml.XmlNodeReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ab2104775ed2c8b474493654fb02bbd656d9dbf2" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52736385" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlNodeReader : System.Xml.XmlReader, System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlNodeReader extends System.Xml.XmlReader implements class System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNodeReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlNodeReader&#xA;Inherits XmlReader&#xA;Implements IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNodeReader : System::Xml::XmlReader, System::Xml::IXmlNamespaceResolver" />
  <TypeSignature Language="F#" Value="type XmlNodeReader = class&#xA;    inherit XmlReader&#xA;    interface IXmlNamespaceResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Rappresenta un visualizzatore che fornisce un accesso veloce, non in cache e di tipo forward-only ai dati XML di una classe <see cref="T:System.Xml.XmlNode" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Invece di usare la <xref:System.Xml.XmlNodeReader>, è consigliabile creare <xref:System.Xml.XmlReader> istanze utilizzando il <xref:System.Xml.XmlReaderSettings> classe e il <xref:System.Xml.XmlReader.Create%2A> (metodo). In questo modo è possibile sfruttare i vantaggi del controllo della conformità e la conformità alla raccomandazione XML 1.0.  
  
 Il `XmlNodeReader` ha la possibilità di leggere un sottoalbero del DOM XML. Questa classe non supporta document type definition (DTD) o la convalida dello schema. Tuttavia, è possibile creare un <xref:System.Xml.XmlReader> oggetto che esegue il wrapping il <xref:System.Xml.XmlNodeReader> oggetto per cui convalidare i dati archiviati nel <xref:System.Xml.XmlNodeReader> dell'oggetto, come illustrato nella sezione esempi.  
  
   
  
## Examples  
 Nell'esempio seguente un file XML viene caricato in un documento XML e modificato. Il documento XML viene passato a un tipo <xref:System.Xml.XmlNodeReader>, che a sua volta viene passato al metodo<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>. Quando analizza il file, il lettore di convalida è in grado di convalidare qualsiasi modifica apportata la file XML.  
  
 [!code-csharp[XmlReader_Validate_DOM#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_DOM/CS/valid_dom.cs#1)]
 [!code-vb[XmlReader_Validate_DOM#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_DOM/VB/valid_dom.vb#1)]  
  
## <a name="input"></a>Input  
 Vengono utilizzati come input i seguenti file.  
  
#### <a name="bookschemaxml"></a>bookSchema.xml  
 [!code-xml[XML_Core_Files#8](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/booksschema.xml#8)]  
  
#### <a name="booksxsd"></a>books.xsd  
 [!code-xml[XML_Core_Files#9](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/books.xsd#9)]  
  
## <a name="output"></a>Output  
 Errore di convalida: l'attributo 'publisher' non è dichiarato.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlNodeReader (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As XmlNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlNodeReader(System::Xml::XmlNode ^ node);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlNodeReader : System.Xml.XmlNode -&gt; System.Xml.XmlNodeReader" Usage="new System.Xml.XmlNodeReader node" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node">
          <see langword="XmlNode" /> che si intende leggere.</param>
        <summary>Crea un'istanza della classe <see langword="XmlNodeReader" /> utilizzando l'oggetto <see cref="T:System.Xml.XmlNode" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Per altre informazioni ed esempi di codice utilizzato per creare un `XmlNodeReader`, vedere <xref:System.Xml.XmlReader> ed esegue l'overload del <xref:System.Xml.XmlReader.Create%2A> (metodo).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public override int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AttributeCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeCount : int" Usage="System.Xml.XmlNodeReader.AttributeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di attributi sul nodo corrente.</summary>
        <value>Numero di attributi sul nodo corrente. Questo numero include gli attributi predefiniti.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Questa proprietà è rilevante per i `Element`, `DocumentType` e `XmlDeclaration` solo nodi. (Altri tipi di nodo non hanno gli attributi).  
  
   
  
## Examples  
 L'esempio seguente legge tutti gli attributi per il nodo radice.  
  
 [!code-cpp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlNodeReader.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'URI di base del nodo corrente.</summary>
        <value>URI di base del nodo corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Un documento XML in rete è costituito da blocchi di dati aggregati tramite vari meccanismi di inclusione standard W3C e contiene pertanto nodi che provengono da diverse posizioni. Entità DTD sono un esempio di questo oggetto, ma questo non è limitato per DTD. URI di base indica è la provenienza di questi nodi. Se non vi è alcun URI di base per i nodi restituiti (ad esempio, questi sono stati analizzati da una stringa in memoria), viene restituito String. Empty.  
  
   
  
## Examples  
 Nell'esempio seguente consente di analizzare un file e visualizza l'URI di base della ognuno dei nodi.  
  
 [!code-cpp[Classic WebData XmlNodeReader.BaseURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.BaseURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.BaseURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.BaseURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.BaseURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.BaseURI Example/VB/source.vb#1)]  
  
 L'esempio Usa il file, `uri.xml`, come input.  
  
 [!code-xml[Classic WebData XmlNodeReader.BaseURI Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.BaseURI Example/XML/source.xml#2)]  
  
 Il `style.xml` file contiene il testo XML `<style>hardcover</style>`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public override bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadBinaryContent : bool" Usage="System.Xml.XmlNodeReader.CanReadBinaryContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se <see cref="T:System.Xml.XmlNodeReader" /> implementa metodi di lettura del contenuto binario.</summary>
        <value>
          <see langword="true" /> se i metodi di lettura del contenuto binario vengono implementati; in caso contrario, <see langword="false" />. La classe <see cref="T:System.Xml.XmlNodeReader" /> restituisce sempre <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Lettura del contenuto binario metodi includono la <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlNodeReader.ReadElementContentAsBase64%2A>, e <xref:System.Xml.XmlNodeReader.ReadElementContentAsBinHex%2A> metodi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public override bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResolveEntity : bool" Usage="System.Xml.XmlNodeReader.CanResolveEntity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il lettore può analizzare e risolvere le entità.</summary>
        <value>
          <see langword="true" /> se il lettore può analizzare e risolvere le entità; in caso contrario, <see langword="false" />. <see langword="XmlNodeReader" /> restituisce sempre <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlNodeReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Modifica la proprietà <see cref="P:System.Xml.XmlNodeReader.ReadState" /> in <see langword="Closed" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Inoltre, questo metodo rilascia tutte le risorse utilizzate durante la lettura. Se `Close` è già stato chiamato, viene eseguita alcuna azione.  
  
   
  
## Examples  
 Nell'esempio seguente consente di analizzare un file e chiude il lettore.  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 L'esempio Usa il file, `items.xml`, come input.  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Xml.XmlNodeReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la profondità del nodo corrente nel documento XML.</summary>
        <value>Profondità del nodo corrente nel documento XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public override bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EOF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EOF : bool" Usage="System.Xml.XmlNodeReader.EOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il lettore è posizionato alla fine del flusso.</summary>
        <value>
          <see langword="true" /> se il lettore è posizionato alla fine del flusso; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene il valore di un attributo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (int attributeIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(int32 attributeIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (attributeIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(int attributeIndex);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : int -&gt; string" Usage="xmlNodeReader.GetAttribute attributeIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attributeIndex">Indice dell'attributo. L'indice è in base zero. Il primo attributo ha indice 0.</param>
        <summary>Ottiene il valore dell'attributo con l'indice specificato.</summary>
        <returns>Valore dell'attributo specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Questo metodo non determina lo spostamento del lettore.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore del parametro <paramref name="i" /> è minore di zero oppure è maggiore o uguale a <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string -&gt; string" Usage="xmlNodeReader.GetAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome completo dell'attributo.</param>
        <summary>Ottiene il valore dell'attributo con il nome specificato.</summary>
        <returns>Valore dell'attributo specificato. Se l'attributo non viene trovato, verrà restituito <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Questo metodo non determina lo spostamento del lettore.  
  
 Se il reader è posizionato su un `DocumentType` nodo, questo metodo può essere utilizzato per ottenere i valori letterali PUBLIC e SYSTEM, ad esempio, `reader.GetAttribute("PUBLIC")`  
  
   
  
## Examples  
 Nell'esempio seguente ottiene il valore dell'attributo ISBN.  
  
 [!code-cpp[Classic WebData XmlNodeReader.GetAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.GetAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.GetAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.GetAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.GetAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.GetAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string * string -&gt; string" Usage="xmlNodeReader.GetAttribute (name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome locale dell'attributo.</param>
        <param name="namespaceURI">URI dello spazio dei nomi dell'attributo.</param>
        <summary>Ottiene il valore dell'attributo con il nome locale e l'URI dello spazio dei nomi specificati.</summary>
        <returns>Valore dell'attributo specificato. Se l'attributo non viene trovato, verrà restituito <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Il codice XML seguente contiene un attributo in uno spazio dei nomi specifico:  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 È possibile effettuare la ricerca di `dt:type` attributo usando un solo argomento (prefisso e il nome locale) o due argomenti (nome locale e l'URI dello spazio dei nomi):  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 Per la ricerca di `xmlns:dt` attributo, usare uno degli argomenti seguenti:  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 È anche possibile ottenere queste informazioni usando il <xref:System.Xml.XmlNodeReader.Prefix%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public override bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAttributes : bool" Usage="System.Xml.XmlNodeReader.HasAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il nodo corrente dispone di attributi.</summary>
        <value>
          <see langword="true" /> se il nodo corrente contiene attributi; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
   
  
## Examples  
 L'esempio seguente legge tutti gli attributi per il nodo radice.  
  
 [!code-cpp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public override bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Xml.XmlNodeReader.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il nodo corrente può presentare una proprietà <see cref="P:System.Xml.XmlNodeReader.Value" />.</summary>
        <value>
          <see langword="true" /> se il nodo sul quale il lettore è attualmente posizionato può contenere <see langword="Value" />; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 La tabella seguente elenca i tipi di nodo che hanno un valore da restituire.  
  
|Tipo di nodo|Valore|  
|---------------|-----------|  
|`Attribute`|Valore dell'attributo.|  
|`CDATA`|Contenuto della sezione CDATA.|  
|`Comment`|Contenuto del commento.|  
|`DocumentType`|Sottoinsieme interno.|  
|`ProcessingInstruction`|Intero contenuto, esclusa la destinazione.|  
|`SignificantWhitespace`|Spazio vuoto tra markup in un modello con contenuto misto.|  
|`Text`|Contenuto del nodo di testo.|  
|`Whitespace`|Spazio vuoto tra markup.|  
|`XmlDeclaration`|Contenuto della dichiarazione.|  
  
   
  
## Examples  
 Nell'esempio seguente visualizza il valore per ogni nodo che può avere un valore.  
  
 [!code-cpp[Classic WebData XmlNodeReader.HasValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.HasValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.HasValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.HasValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.HasValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.HasValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public override bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool" Usage="System.Xml.XmlNodeReader.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il nodo corrente è un attributo generato dal valore predefinito indicato in DTD (Document Type Definition) o nello schema.</summary>
        <value>
          <see langword="true" /> se il nodo corrente è un attributo il cui valore è stato generato in base al valore predefinito configurato nella definizione DTD o nello schema; <see langword="false" /> se il valore dell'attributo è stato impostato in modo esplicito.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Questa proprietà si applica solo i nodi attributo. Se il lettore non è posizionato su un nodo attributo, questa proprietà restituisce `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public override bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmptyElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElement : bool" Usage="System.Xml.XmlNodeReader.IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il nodo corrente è un elemento vuoto, ad esempio <c>&lt;MyElement/&gt;</c>.</summary>
        <value>
          <see langword="true" /> Se il nodo corrente è un elemento (<see cref="P:System.Xml.XmlNodeReader.NodeType" /> è uguale a <see langword="XmlNodeType.Element" />) e termina con <c>/ &gt;</c>; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Questa proprietà consente di determinare la differenza tra le seguenti stringhe:  
  
 `<item num="123"/>` (`IsEmptyElement` è `true`).  
  
 `<item num="123">` (`IsEmptyElement` è `false`, anche se il contenuto dell'elemento è vuoto).  
  
 Un oggetto corrispondente `EndElement` nodo non viene generato per elementi vuoti.  
  
   
  
## Examples  
 Nell'esempio seguente consente di visualizzare il contenuto di testo di ogni elemento.  
  
 [!code-cpp[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[int] { System::String ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string" Usage="System.Xml.XmlNodeReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Indice dell'attributo.</param>
        <summary>Ottiene il valore dell'attributo con l'indice specificato.</summary>
        <value>Valore dell'attributo specificato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.

Questa proprietà non sposta il lettore.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore del parametro <paramref name="i" /> è minore di zero oppure è maggiore o uguale a <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />.</exception>
        <altmember cref="Overload:System.Xml.XmlNodeReader.GetAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Xml.XmlNodeReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome completo dell'attributo.</param>
        <summary>Ottiene il valore dell'attributo con il nome specificato.</summary>
        <value>Valore dell'attributo specificato. Se l'attributo non viene trovato, verrà restituito <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.

Questa proprietà non sposta il lettore.

Se il reader è posizionato su un nodo di DocumentType, questo metodo può essere utilizzato per ottenere i valori letterali PUBLIC e SYSTEM, ad esempio, lettore\["PUBLIC"\].

## Examples  
Nell'esempio seguente ottiene il valore dell'attributo ISBN.

```vb
Imports System
Imports System.IO
Imports System.Xml

Public Class Sample

    Public Shared Sub Main()
        Dim reader As XmlNodeReader = Nothing
        Try
            'Create and load the XML document.
            Dim doc As New XmlDocument()
            doc.LoadXml("<book genre='novel' ISBN='1-861003-78' publicationdate='1987'>" & _
                        "</book>")

            ' Load the XmlNodeReader 
            reader = New XmlNodeReader(doc)

            'Read the ISBN attribute.
            reader.MoveToContent()
            Dim isbn As String = reader("ISBN")
            Console.WriteLine("The ISBN value: " & isbn)
        Finally
            If Not (reader Is Nothing) Then
                reader.Close()
            End If
        End Try
    End Sub 'Main 
End Class 'Sample
```

```csharp
using System;
using System.IO;
using System.Xml;

public class Sample 
{
  public static void Main()
  {
    XmlNodeReader reader = null;

    try
    {
       //Create and load the XML document.
       XmlDocument doc = new XmlDocument();
       doc.LoadXml("<book genre='novel' ISBN='1-861003-78' publicationdate='1987'> " +
                   "</book>"); 

       // Load the XmlNodeReader 
       reader = new XmlNodeReader(doc);

       //Read the ISBN attribute.
       reader.MoveToContent();
       string isbn =reader["ISBN"];
       Console.WriteLine("The ISBN value: " + isbn);

     } 

     finally 
     {
        if (reader != null)
          reader.Close();
      }
  }

} // End class
```

```cpp
#using <System.Xml.dll>

using namespace System;
using namespace System::IO;
using namespace System::Xml;

int main()
{
   XmlNodeReader^ reader = nullptr;
   try
   {

      //Create and load the XML document.
      XmlDocument^ doc = gcnew XmlDocument;
      doc->LoadXml( "<book genre='novel' ISBN='1-861003-78' publicationdate='1987'></book>" );

      // Load the XmlNodeReader 
      reader = gcnew XmlNodeReader( doc );

      //Read the ISBN attribute.
      reader->MoveToContent();
      String^ isbn = reader[ "ISBN" ];
      Console::WriteLine( "The ISBN value: {0}", isbn );
   }
   finally
   {
      if ( reader != nullptr )
            reader->Close();
   }
}
```

]]></format>
        </remarks>
        <altmember cref="Overload:System.Xml.XmlNodeReader.GetAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[string name, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^, System::String ^] { System::String ^ get(System::String ^ name, System::String ^ namespaceURI); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : string" Usage="System.Xml.XmlNodeReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome locale dell'attributo.</param>
        <param name="namespaceURI">URI dello spazio dei nomi dell'attributo.</param>
        <summary>Ottiene il valore dell'attributo con il nome locale e l'URI dello spazio dei nomi specificati.</summary>
        <value>Valore dell'attributo specificato. Se l'attributo non viene trovato, verrà restituito <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.

Questa proprietà non sposta il lettore.

]]></format>
        </remarks>
        <altmember cref="Overload:System.Xml.XmlNodeReader.GetAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlNodeReader.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome locale del nodo corrente.</summary>
        <value>Nome del nodo corrente senza il prefisso. Ad esempio, <see langword="LocalName" /> viene <see langword="book" /> per l'elemento <c>&lt;bk: book&gt;</c>.  
  
Per i tipi di nodo privi di nome, quali <see langword="Text" />, <see langword="Comment" /> e così via, questa proprietà restituisce String.Empty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
   
  
## Examples  
 L'esempio seguente mostra il nome di ogni nodo, locale e, se presenti, il prefisso e URI dello spazio dei nomi.  
  
 [!code-cpp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public override string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="override this.LookupNamespace : string -&gt; string" Usage="xmlNodeReader.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefisso di cui risolvere l'URI dello spazio dei nomi. Per ottenere lo spazio dei nomi predefinito corrispondente, passare una stringa vuota. Non è necessario scomporre la stringa.</param>
        <summary>Risolve il prefisso di uno spazio dei nomi nell'ambito dell'elemento corrente.</summary>
        <returns>URI dello spazio dei nomi a cui viene mappato il prefisso oppure <see langword="null" /> se non viene trovato alcun prefisso corrispondente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Nella stringa XML seguente, se il reader è posizionato in corrispondenza di `href` dell'attributo, il prefisso `a` viene risolto mediante la chiamata `reader.LookupNamespace("a")`. La stringa restituita è `urn:456`.  
  
```xml  
<root xmlns:a="urn:456">  
 <item>  
 <ref href="a:b"/>  
 </item>  
</root>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Passa all'attributo specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override void MoveToAttribute (int attributeIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MoveToAttribute(int32 attributeIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub MoveToAttribute (attributeIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void MoveToAttribute(int attributeIndex);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : int -&gt; unit" Usage="xmlNodeReader.MoveToAttribute attributeIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attributeIndex">Indice dell'attributo.</param>
        <summary>Passa all'attributo con l'indice specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
   
  
## Examples  
 L'esempio seguente legge tutti gli attributi per il nodo radice.  
  
 [!code-cpp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore del parametro <paramref name="i" /> è minore di zero oppure è maggiore o uguale a <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string -&gt; bool" Usage="xmlNodeReader.MoveToAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome completo dell'attributo.</param>
        <summary>Passa all'attributo con il nome specificato.</summary>
        <returns>
          <see langword="true" /> se l'attributo viene trovato; in caso contrario, <see langword="false" />. Se viene restituito il valore <see langword="false" />, la posizione del lettore non subirà alcuna modifica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Dopo aver chiamato questo metodo, il <xref:System.Xml.XmlNodeReader.Name%2A>, <xref:System.Xml.XmlNodeReader.NamespaceURI%2A>, e <xref:System.Xml.XmlNodeReader.Prefix%2A> riflettono le proprietà di quell'attributo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string * string -&gt; bool" Usage="xmlNodeReader.MoveToAttribute (name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome locale dell'attributo.</param>
        <param name="namespaceURI">URI dello spazio dei nomi dell'attributo.</param>
        <summary>Passa all'attributo con il nome locale e l'URI dello spazio dei nomi specificati.</summary>
        <returns>
          <see langword="true" /> se l'attributo viene trovato; in caso contrario, <see langword="false" />. Se viene restituito il valore <see langword="false" />, la posizione del lettore non subirà alcuna modifica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Dopo aver chiamato questo metodo, il <xref:System.Xml.XmlNodeReader.Name%2A>, <xref:System.Xml.XmlNodeReader.NamespaceURI%2A>, e <xref:System.Xml.XmlNodeReader.Prefix%2A> riflettono le proprietà di quell'attributo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public override bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToElement();" />
      <MemberSignature Language="F#" Value="override this.MoveToElement : unit -&gt; bool" Usage="xmlNodeReader.MoveToElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Passa all'elemento che contiene il nodo dell'attributo corrente.</summary>
        <returns>
          <see langword="true" /> se il lettore è posizionato in corrispondenza di un attributo, ovvero il lettore si sposta in corrispondenza dell'elemento che possiede l'attributo; <see langword="false" /> se il lettore non è posizionato in corrispondenza di un attributo, ovvero la posizione del lettore non subisce alcuna modifica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Utilizzare questo metodo per restituire a un elemento dopo aver esplorato gli attributi. Questo metodo passa il lettore su uno dei seguenti tipi di nodo: `Element`, `DocumentType`, o `XmlDeclaration`.  
  
   
  
## Examples  
 L'esempio seguente legge tutti gli attributi per il nodo radice.  
  
 [!code-cpp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToFirstAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToFirstAttribute : unit -&gt; bool" Usage="xmlNodeReader.MoveToFirstAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Si sposta in corrispondenza del primo attributo.</summary>
        <returns>
          <see langword="true" /> se esiste un attributo, ovvero il lettore si sposta in corrispondenza del primo attributo; in caso contrario, <see langword="false" />, ovvero la posizione del lettore non subisce alcuna modifica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. Ciò consente di sfruttare appieno tutte le nuove funzionalità introdotte nel [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
   
  
## Examples  
 Nell'esempio seguente ottiene il valore del primo attributo del nodo radice.  
  
 [!code-cpp[Classic WebData XmlNodeReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToNextAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToNextAttribute : unit -&gt; bool" Usage="xmlNodeReader.MoveToNextAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Si sposta n corrispondenza dell'attributo successivo.</summary>
        <returns>
          <see langword="true" /> se esiste un attributo successivo; <see langword="false" /> se non esistono altri attributi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Se il nodo corrente non è un nodo attributo, questo metodo è equivalente a <xref:System.Xml.XmlNodeReader.MoveToFirstAttribute%2A>. Se `MoveToNextAttribute` restituisce `true`, il lettore viene spostato all'attributo successivo; in caso contrario, il posizione del lettore non subisce alcuna modifica.  
  
   
  
## Examples  
 L'esempio seguente legge un libro.  
  
 [!code-cpp[Classic WebData XmlNodeReader.MoveToNextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToNextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.MoveToNextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToNextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.MoveToNextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToNextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlNodeReader.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome completo del nodo corrente.</summary>
        <value>Nome completo del nodo corrente. Ad esempio, <see langword="Name" /> viene <see langword="bk:book" /> per l'elemento <c>&lt;bk: book&gt;</c>.  
  
Il nome restituito dipende dalla proprietà <see cref="P:System.Xml.XmlNodeReader.NodeType" /> del nodo. I seguenti tipi di nodo restituiscono i valori inclusi nell'elenco. Tutti gli altri tipi di nodo restituiscono una stringa vuota.  
  
 <list type="table"><listheader><term> Tipo di nodo 
 </term><description> nome 
 </description></listheader><item><term><see langword="Attribute" /></term><description> Nome dell'attributo.  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> Nome del tipo di documento.  
  
 </description></item><item><term><see langword="Element" /></term><description> Nome del tag.  
  
 </description></item><item><term><see langword="EntityReference" /></term><description> Nome dell'entità a cui si fa riferimento.  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> Destinazione dell'istruzione di elaborazione.  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> Stringa letterale <see langword="xml" />.  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
   
  
## Examples  
 Nell'esempio seguente legge un elemento XML e vengono visualizzati tutti i nodi.  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 L'esempio Usa il file, `items.xml`, come input.  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlNodeReader.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'URI dello spazio dei nomi, definito nella specifica W3C relativa allo spazio dei nomi, del nodo in corrispondenza del quale è posizionato il lettore.</summary>
        <value>URI dello spazio dei nomi del nodo corrente; in caso contrario, una stringa vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Questa proprietà è rilevante per i `Element` e `Attribute` solo nodi.  
  
   
  
## Examples  
 L'esempio seguente mostra il nome di ogni nodo, locale e, se presenti, il prefisso e URI dello spazio dei nomi.  
  
 [!code-cpp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlNodeReader.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Xml.XmlNameTable" /> associato all'implementazione.</summary>
        <value>Oggetto <see langword="XmlNameTable" /> che consente di ottenere la versione atomizzata di una stringa all'interno del nodo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Tutti i nomi di nodo e attributi restituiti da questa classe sono atomizzati usando il `NameTable`. Quando viene restituito più volte lo stesso nome (ad esempio, `Customer`), quindi lo stesso `String` viene restituito per il nome dell'oggetto. Questo rende possibile per la scrittura di codice efficace tale oggetto confronti in queste stringhe anziché i confronti di stringhe costosa.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlNodeReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tipo di nodo corrente.</summary>
        <value>Uno dei valori di <see cref="T:System.Xml.XmlNodeType" /> che rappresenta il tipo del nodo corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
   
  
## Examples  
 Nell'esempio seguente legge un elemento XML e vengono visualizzati tutti i nodi.  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 L'esempio Usa il file, `items.xml`, come input.  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xml.XmlNodeReader.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il prefisso dello spazio dei nomi associato al nodo corrente.</summary>
        <value>Prefisso dello spazio dei nomi associato al nodo corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
   
  
## Examples  
 L'esempio seguente mostra il nome di ogni nodo, locale e, se presenti, il prefisso e URI dello spazio dei nomi.  
  
 [!code-cpp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public override char QuoteChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char" Usage="System.Xml.XmlNodeReader.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il carattere punto interrogativo usato per delimitare il valore di un nodo attributo.</summary>
        <value>XmlNodeReader Usa sempre le virgolette doppie (").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="xmlNodeReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legge il nodo successivo dal flusso.</summary>
        <returns>
          <see langword="true" /> se è stata completata la lettura del nodo successivo; <see langword="false" /> se non esistono altri nodi da leggere.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Quando un lettore viene innanzitutto creato e inizializzato, non è disponibile alcuna informazione. È necessario chiamare `Read` per leggere il primo nodo.  
  
   
  
## Examples  
 Nell'esempio seguente legge un elemento XML e consente di visualizzare ogni nodo.  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 L'esempio Usa il file, `items.xml`, come input.  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public override bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ReadAttributeValue();" />
      <MemberSignature Language="F#" Value="override this.ReadAttributeValue : unit -&gt; bool" Usage="xmlNodeReader.ReadAttributeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Analizza il valore dell'attributo in uno o più nodi <see langword="Text" />, <see langword="EntityReference" /> o <see langword="EndEntity" />.</summary>
        <returns>
          <see langword="true" /> se sono presenti nodi da restituire.  
  
 <see langword="false" /> se il lettore non è posizionato in corrispondenza di un nodo attributo quando viene effettuata la chiamata iniziale oppure se è stato letto il valore di tutti gli attributi.  
  
Un attributo vuoto, quale <c>misc=""</c>, restituisce <see langword="true" /> con un singolo nodo il cui valore è String.Empty.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Usare questo metodo dopo la chiamata <xref:System.Xml.XmlNodeReader.MoveToAttribute%2A> leggere con attenzione i nodi di riferimento di testo o un'entità che compongono il valore dell'attributo. Il <xref:System.Xml.XmlNodeReader.Depth%2A> dei nodi del valore di attributo è più la profondità del nodo attributo, incrementa e decrementa di uno quando esegue l'istruzione da e verso i riferimenti alle entità generali.  
  
   
  
## Examples  
 L'esempio seguente legge un attributo con nodi di riferimento all'entità e di testo.  
  
 [!code-cpp[Classic WebData XmlNodeReader.ReadAttributeValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.ReadAttributeValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.ReadAttributeValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.ReadAttributeValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.ReadAttributeValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.ReadAttributeValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlNodeReader.ReadContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Buffer in cui copiare il testo risultante. Questo valore non può essere <see langword="null" />.</param>
        <param name="index">Offset nel buffer a partire da cui iniziare a copiare il risultato.</param>
        <param name="count">Numero massimo di byte da copiare nel buffer. Il numero effettivo di byte copiati viene restituito da questo metodo.</param>
        <summary>Legge il contenuto e restituisce byte binari decodificati Base64.</summary>
        <returns>Numero di byte scritti nel buffer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Questo metodo crea un flusso il contenuto, decodifica il contenuto Base64 e restituisce i byte binari decodificati (ad esempio, un'immagine codifica Base64 inline GIF) nel buffer. Questo metodo può essere chiamato in successione per leggere i grandi flussi di testo incorporato. Per altre informazioni, vedere RFC 1521, "parte MIME (Multipurpose Internet Mail Extensions) uno: meccanismi per la specifica e che descrive il formato dei corpi dei messaggi Internet". È possibile ottenere RFC dal [richiesta per il sito Web di commenti](https://www.rfc-editor.org).  
  
> [!NOTE]
>  Non è necessario accedere una delle proprietà tra le chiamate al lettore di <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> metodo fino a quando il metodo restituisce il valore 0.  
  
 Questo metodo presenta il comportamento seguente:  
  
-   <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> una volta raggiunta la fine del flusso di byte su cui è stato eseguito, restituisce il valore 0. Il reader è posizionato sul primo nodo non di contenuto.  
  
-   Se si richiede un numero inferiore o uguale al numero dei byte vengono lasciati nel flusso, il lettore resta nella posizione corrente.  
  
-   <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> non è supportato nei seguenti tipi di nodo XML: elemento, XmlDeclaration, None, documentare, DocumentType, notazione, entità, DocumentFragment.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore di <paramref name="buffer" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> non è supportato nel nodo corrente.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice nel buffer oppure la somma di indice e numero è superiore alla dimensione del buffer allocato.</exception>
        <altmember cref="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlNodeReader.ReadContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Buffer in cui copiare il testo risultante. Questo valore non può essere <see langword="null" />.</param>
        <param name="index">Offset nel buffer a partire da cui iniziare a copiare il risultato.</param>
        <param name="count">Numero massimo di byte da copiare nel buffer. Il numero effettivo di byte copiati viene restituito da questo metodo.</param>
        <summary>Legge il contenuto e restituisce i byte binari decodificati BinHex.</summary>
        <returns>Numero di byte scritti nel buffer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Questo metodo crea un flusso il contenuto, decodifica il contenuto BinHex e restituisce i byte binari decodificati (ad esempio, un inline BinHex codifica immagine GIF) nel buffer. Questo metodo può essere chiamato in successione per leggere i grandi flussi di testo incorporato.  
  
> [!NOTE]
>  Non è necessario accedere una delle proprietà tra le chiamate al lettore di <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> metodo fino a quando il metodo restituisce il valore 0.  
  
 Questo metodo presenta il comportamento seguente:  
  
-   <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> una volta raggiunta la fine del flusso di byte su cui è stato eseguito, restituisce il valore 0. Il reader è posizionato sul primo nodo non di contenuto.  
  
-   Se si richiede un numero inferiore o uguale al numero dei byte vengono lasciati nel flusso, il lettore resta nella posizione corrente.  
  
-   <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> non è supportato nei seguenti tipi di nodo XML: elemento, XmlDeclaration, None, documentare, DocumentType, notazione, entità, DocumentFragment.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore di <paramref name="buffer" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> non è supportato nel nodo corrente.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice nel buffer oppure la somma di indice e numero è superiore alla dimensione del buffer allocato.</exception>
        <altmember cref="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlNodeReader.ReadElementContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Buffer in cui copiare il testo risultante. Questo valore non può essere <see langword="null" />.</param>
        <param name="index">Offset nel buffer a partire da cui iniziare a copiare il risultato.</param>
        <param name="count">Numero massimo di byte da copiare nel buffer. Il numero effettivo di byte copiati viene restituito da questo metodo.</param>
        <summary>Legge l'elemento e decodifica il contenuto Base64.</summary>
        <returns>Numero di byte scritti nel buffer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Questo metodo legge il contenuto, decodifica usando la codifica Base64 e restituisce i byte binari decodificati (ad esempio, un'immagine codifica Base64 inline GIF) nel buffer. Per altre informazioni, vedere RFC 1521, "parte MIME (Multipurpose Internet Mail Extensions) uno: meccanismi per la specifica e che descrive il formato dei corpi dei messaggi Internet". È possibile ottenere RFC dal [richiesta per il sito Web di commenti](https://www.rfc-editor.org).  
  
 Questo metodo può solo leggere elementi con contenuto semplice. L'elemento può contenere testo, gli spazi vuoti, gli spazi vuoti significativi, sezioni CDATA, commenti e istruzioni di elaborazione. Può inoltre contenere i riferimenti alle entità, vengono espansi automaticamente. L'elemento non può avere elementi figlio.  
  
 Questo metodo è molto simile al <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> metodo ad eccezione del fatto che può essere chiamato solo su tipi di nodo elemento.  
  
 Se il valore del conteggio è maggiore del numero di byte nel documento o se è uguale al numero di byte nel documento, il <xref:System.Xml.XmlNodeReader> legge tutti i byte rimanenti del documento e restituisce il numero di byte letti. La prossima <xref:System.Xml.XmlNodeReader.ReadElementContentAsBase64%2A> chiamata al metodo restituisce zero e si sposta il lettore al nodo successivo le <xref:System.Xml.XmlNodeType.EndElement> nodo.  
  
 Se si chiama <xref:System.Xml.XmlNodeReader.Read%2A> prima di tutto il contenuto dell'elemento viene utilizzato, il lettore potrebbe comportarsi come se fosse stato utilizzato il primo contenuto e quindi il <xref:System.Xml.XmlNodeReader.Read%2A> metodo è stato chiamato. Ciò significa che il lettore legge tutto il testo fino a quando non viene rilevato l'elemento finale. Quindi legge il nodo di tag di fine, leggere il nodo successivo e quindi si posizionerà sul prossimo nodo successivo.  
  
   
  
## Examples  
 Vedere <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType> per vedere un esempio di utilizzo di questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore di <paramref name="buffer" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Il nodo corrente non è un nodo elemento.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice nel buffer oppure la somma di indice e numero è superiore alla dimensione del buffer allocato.</exception>
        <exception cref="T:System.Xml.XmlException">L'elemento include contenuto misto.</exception>
        <exception cref="T:System.FormatException">Il contenuto non può essere convertito nel tipo richiesto.</exception>
        <altmember cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlNodeReader.ReadElementContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Buffer in cui copiare il testo risultante. Questo valore non può essere <see langword="null" />.</param>
        <param name="index">Offset nel buffer a partire da cui iniziare a copiare il risultato.</param>
        <param name="count">Numero massimo di byte da copiare nel buffer. Il numero effettivo di byte copiati viene restituito da questo metodo.</param>
        <summary>Legge l'elemento e decodifica il contenuto BinHex.</summary>
        <returns>Numero di byte scritti nel buffer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Questo metodo legge il contenuto dell'elemento, decodifica usando la codifica BinHex e restituisce i byte binari decodificati (ad esempio, un inline BinHex codifica immagine GIF) nel buffer.  
  
 Questo metodo può solo leggere elementi con contenuto semplice. L'elemento può contenere testo, gli spazi vuoti, gli spazi vuoti significativi, sezioni CDATA, commenti e istruzioni di elaborazione. Può inoltre contenere i riferimenti alle entità, vengono espansi automaticamente. L'elemento non può avere elementi figlio.  
  
 Questo metodo è molto simile al <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> metodo ad eccezione del fatto che può essere chiamato solo su tipi di nodo elemento.  
  
 Se il valore del conteggio è maggiore del numero di byte nel documento o se è uguale al numero di byte nel documento, il <xref:System.Xml.XmlNodeReader> legge tutti i byte rimanenti del documento e restituisce il numero di byte letti. La prossima <xref:System.Xml.XmlNodeReader> chiamata al metodo restituisce zero e si sposta il lettore al nodo successivo le <xref:System.Xml.XmlNodeType.EndElement> nodo.  
  
 Se si chiama <xref:System.Xml.XmlNodeReader.Read%2A> prima di tutto il contenuto dell'elemento viene utilizzato, il lettore potrebbe comportarsi come se fosse stato utilizzato il primo contenuto e quindi il <xref:System.Xml.XmlNodeReader.Read%2A> metodo è stato chiamato. Ciò significa che il lettore legge tutto il testo fino a quando non viene rilevato l'elemento finale. Quindi legge il nodo di tag di fine, leggere il nodo successivo e quindi si posizionerà sul prossimo nodo successivo.  
  
   
  
## Examples  
 Vedere <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType> per vedere un esempio di utilizzo di questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore di <paramref name="buffer" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Il nodo corrente non è un nodo elemento.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice nel buffer oppure la somma di indice e numero è superiore alla dimensione del buffer allocato.</exception>
        <exception cref="T:System.Xml.XmlException">L'elemento include contenuto misto.</exception>
        <exception cref="T:System.FormatException">Il contenuto non può essere convertito nel tipo richiesto.</exception>
        <altmember cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public override System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadState : System.Xml.ReadState" Usage="System.Xml.XmlNodeReader.ReadState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene lo stato del lettore.</summary>
        <value>Uno dei valori di <see cref="T:System.Xml.ReadState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public override string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadString();" />
      <MemberSignature Language="F#" Value="override this.ReadString : unit -&gt; string" Usage="xmlNodeReader.ReadString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legge il contenuto di un nodo elemento o testo come stringa.</summary>
        <returns>Contenuto di un nodo elemento o di uno dei nodi di testo, inclusi nodi CDATA, Text e così via. Può essere una stringa vuota se il lettore non è posizionato su un nodo elemento o testo oppure se non ci sono più contenuti di testo da restituire nel contesto corrente.  
  
 <see langword="Note:" /> il nodo di testo può essere anche rappresentato da un nodo elemento o da un nodo testo di un attributo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Se è posizionato su un elemento, `ReadString` concatena tutti testo, gli spazi vuoti significativi, lo spazio vuoto e i tipi di nodo sezione CData e restituisce i dati concatenati come contenuto dell'elemento. Si arresta quando viene rilevato un markup. Questa situazione può verificarsi in un modello a contenuto misto oppure durante la lettura di un tag di fine elemento.  
  
 Se è posizionato su un nodo testo, `ReadString` esegue la stessa concatenazione dal nodo di testo per il tag di fine elemento. Se il lettore è posizionato in corrispondenza di un nodo di tipo text di un attributo, il metodo `ReadString` funzionerà come quando il lettore è posizionato in corrispondenza del tag di inizio dell'elemento, restituendo tutti i nodi di tipo text dell'elemento concatenati.  
  
   
  
## Examples  
 Nell'esempio seguente consente di visualizzare il contenuto di testo della ognuno degli elementi.  
  
 [!code-cpp[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public override void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResolveEntity();" />
      <MemberSignature Language="F#" Value="override this.ResolveEntity : unit -&gt; unit" Usage="xmlNodeReader.ResolveEntity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Risolve il riferimento all'entità per i nodi <see langword="EntityReference" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Se il reader è posizionato su un `EntityReference` nodo (`XmlNodeType.EntityReference`), se <xref:System.Xml.XmlNodeReader.Read%2A> viene chiamato dopo avere chiamato questo metodo, il testo di sostituzione di entità viene analizzato. Al termine, il testo di sostituzione entità un `EndEntity` nodo viene restituito per chiudere l'ambito di riferimento di entità.  
  
> [!NOTE]
>  Dopo aver chiamato questo metodo, se l'entità è parte di un valore di attributo, è necessario chiamare <xref:System.Xml.XmlNodeReader.ReadAttributeValue%2A> al passaggio all'interno dell'entità.  
  
   
  
## Examples  
 L'esempio seguente usa `ResolveEntity` per espandere un'entità generale.  
  
 [!code-cpp[Classic WebData XmlNodeReader.ResolveEntity Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.ResolveEntity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.ResolveEntity Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.ResolveEntity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.ResolveEntity Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.ResolveEntity Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il lettore non è posizionato in corrispondenza di un nodo <see langword="EntityReference" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlNodeReader.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le informazioni sullo schema assegnate al nodo corrente.</summary>
        <value>Oggetto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> contenente le informazioni sullo schema per il nodo corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Il <xref:System.Xml.Schema.IXmlSchemaInfo> interfaccia rappresenta il PSVI Post Schema Validation Infoset () del nodo XML sottostante. Il contenuto PSVI di questa proprietà viene impostato dopo il nodo è stato convalidato.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
        <altmember cref="Overload:System.Xml.XmlDocument.Validate" />
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public override void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Skip();" />
      <MemberSignature Language="F#" Value="override this.Skip : unit -&gt; unit" Usage="xmlNodeReader.Skip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ignora gli elementi figlio del nodo corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Ad esempio, si supponga di che avere il seguente codice XML di input:  
  
```xml  
<a name="bob" age="123">  
   <x/>abc<y/>  
 </a>  
 <b>  
...  
 </b>  
```  
  
 Se il reader è posizionato in corrispondenza di "\<un >" nodo o uno qualsiasi dei suoi attributi, chiamando `Skip` posizionerà il lettore di "\<b >" nodo.  
  
 Se il reader è posizionato su un nodo foglia già (ad esempio, l'elemento "x" o il nodo di testo "abc"), la chiamata `Skip` è uguale alla chiamata al metodo <xref:System.Xml.XmlNodeReader.Read%2A>.  
  
 Questo metodo controlla XML ben formato.  
  
   
  
## Examples  
 Nell'esempio seguente legge il nodo di elemento di prezzo nel documento XML.  
  
 [!code-cpp[Classic WebData XmlNodeReader.Skip Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Skip Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Skip Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Skip Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Skip Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Skip Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.GetNamespacesInScope">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IDictionary&lt;string,string&gt; IXmlNamespaceResolver.GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String) Implements IXmlNamespaceResolver.GetNamespacesInScope" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System::Xml::XmlNamespaceScope scope) = System::Xml::IXmlNamespaceResolver::GetNamespacesInScope;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="scope">Oggetto <see cref="T:System.Xml.XmlNamespaceScope" />.</param>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
        <returns>Oggetto <see cref="T:System.Collections.IDictionary" /> contenente gli spazi dei nomi inclusi nell'ambito.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Xml.XmlNodeReader> a un'interfaccia <xref:System.Xml.IXmlNamespaceResolver>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupNamespace">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupNamespace (prefix As String) As String Implements IXmlNamespaceResolver.LookupNamespace" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupNamespace(System::String ^ prefix) = System::Xml::IXmlNamespaceResolver::LookupNamespace;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <see cref="T:System.String" /> contenente il prefisso dello spazio dei nomi.</param>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
        <returns>
          <see cref="T:System.String" /> contenente il nome dello spazio dei nomi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Xml.XmlNodeReader> a un'interfaccia <xref:System.Xml.IXmlNamespaceResolver>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupPrefix">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupPrefix (string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupPrefix(string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupPrefix (namespaceName As String) As String Implements IXmlNamespaceResolver.LookupPrefix" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupPrefix(System::String ^ namespaceName) = System::Xml::IXmlNamespaceResolver::LookupPrefix;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceName">Oggetto <see cref="T:System.String" /> che identifica lo spazio dei nomi.</param>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
        <returns>Oggetto <see cref="T:System.String" /> contenente il prefisso dello spazio dei nomi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Xml.XmlNodeReader> a un'interfaccia <xref:System.Xml.IXmlNamespaceResolver>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.XmlNodeReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore di testo del nodo corrente.</summary>
        <value>Il valore restituito dipende dalla proprietà <see cref="P:System.Xml.XmlNodeReader.NodeType" /> del nodo. La tabella seguente elenca i tipi di nodo che hanno un valore da restituire. Tutti gli altri tipi di nodo restituiscono String.Empty.  
  
 <list type="table"><listheader><term> Tipo di nodo 
 </term><description> Valore 
 </description></listheader><item><term><see langword="Attribute" /></term><description> Valore dell'attributo.  
  
 </description></item><item><term><see langword="CDATA" /></term><description> Contenuto della sezione CDATA.  
  
 </description></item><item><term><see langword="Comment" /></term><description> Contenuto del commento.  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> Sottoinsieme interno.  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> Intero contenuto, esclusa la destinazione.  
  
 </description></item><item><term><see langword="SignificantWhitespace" /></term><description> Spazio vuoto tra markup in un modello con contenuto misto.  
  
 </description></item><item><term><see langword="Text" /></term><description> Contenuto del nodo di testo.  
  
 </description></item><item><term><see langword="Whitespace" /></term><description> Spazio vuoto tra markup.  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> Contenuto della dichiarazione.  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
   
  
## Examples  
 Nell'esempio seguente legge un elemento XML e consente di visualizzare ogni nodo.  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 L'esempio Usa il file, `items.xml`, come input.  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlNodeReader.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'ambito <see langword="xml:lang" /> corrente.</summary>
        <value>Ambito <see langword="xml:lang" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 Questa proprietà rappresenta l'ambito xml: lang entro il quale si trova il nodo corrente. Ad esempio, ecco un frammento XML con `xml:lang` impostata su inglese Stati Uniti nell'elemento radice:  
  
```xml  
<root xml:lang="en-us">   
<name>Fred</name>   
</root>   
```  
  
 Quando il lettore è posizionato in corrispondenza di `name` elemento, è possibile usare questa proprietà per verificare che si trovi nell'ambito di un inglese Americano `xml:lang` attributo.  
  
 La stringa restituita è disponibile anche nella <xref:System.Xml.XmlNodeReader.NameTable%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlNodeReader.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'ambito <see langword="xml:space" /> corrente.</summary>
        <value>Uno dei valori di <see cref="T:System.Xml.XmlSpace" />. Se non esiste alcun ambito <see langword="xml:space" />, alla proprietà viene applicata l'impostazione predefinita <see langword="XmlSpace.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], è consigliabile creare istanze di <xref:System.Xml.XmlReader> tramite la classe <xref:System.Xml.XmlReaderSettings> e il metodo <xref:System.Xml.XmlReader.Create%2A>. In questo modo è possibile sfruttare completamente tutte le nuove funzionalità introdotte in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Per altre informazioni, vedere la sezione osservazioni nel <xref:System.Xml.XmlReader> pagina di riferimento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>