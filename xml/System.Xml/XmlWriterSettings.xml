<Type Name="XmlWriterSettings" FullName="System.Xml.XmlWriterSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b740086480f9740d3ba18f8cd6e7b146b968f3dd" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46632282" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlWriterSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlWriterSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriterSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlWriterSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterSettings sealed" />
  <TypeSignature Language="F#" Value="type XmlWriterSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Specifica un set di funzionalità da supportare nell'oggetto <see cref="T:System.Xml.XmlWriter" /> creato dal metodo <see cref="Overload:System.Xml.XmlWriter.Create" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.XmlWriter.Create%2A> metodo è il meccanismo preferito per il recupero <xref:System.Xml.XmlWriter> istanze. Il <xref:System.Xml.XmlWriter.Create%2A> metodo viene utilizzato il <xref:System.Xml.XmlWriterSettings> classe per specificare le funzionalità da implementare nel <xref:System.Xml.XmlWriter> oggetto creato.  
  
> [!NOTE]
>  Se si usa il <xref:System.Xml.XmlWriter> dell'oggetto con il <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> metodo, è necessario utilizzare il <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> proprietà per ottenere un <xref:System.Xml.XmlWriterSettings> oggetto con le impostazioni corrette. In questo modo viene assicurato che le impostazioni di output dell'oggetto <xref:System.Xml.XmlWriter> creato siano corrette.  
  
 Il <xref:System.Xml.XmlWriterSettings> classe fornisce proprietà di tale formato controllo della conformità e l'output di dati.  
  
 Per i controlli di conformità dei dati e correzioni automatiche, utilizzare queste proprietà:  
  
|Proprietà|Specifica|Valore|Impostazione predefinita|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|Se è necessario controllare che i caratteri sono nel file XML valido, set di caratteri come definito da W3C.|`true` o `false`|`true`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|Se è necessario controllare che l'output è un documento XML 1.0 in formato corretto o un frammento.|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (a livello di documento), <xref:System.Xml.ConformanceLevel.Fragment> (a livello di frammento), o <xref:System.Xml.ConformanceLevel.Auto> (rilevamento automatico)|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (a livello di documento conformità)|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|Se si desidera aggiungere i tag di chiusura a tutti gli elementi senza chiusi quando il <xref:System.Xml.XmlWriter.Close%2A> viene chiamato il metodo.|`true` o `false`|`true`|  
  
 Per specificare il formato di output, usare queste proprietà:  
  
|Proprietà|Specifica|Valore|Impostazione predefinita|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|Codifica testo da usare.|Valore di <xref:System.Text.Encoding?displayProperty=nameWithType>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|Se si desidera impostare un rientro di elementi|`true` o `false`|`false` (nessun rientro)|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Stringa da utilizzare per il rientro di caratteri (utilizzato quando <xref:System.Xml.XmlWriterSettings.Indent%2A> è impostata su `true`).|Stringa|Due spazi|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|Stringa di caratteri da usare per le interruzioni di riga.|Stringa|`\r\n` (ritorno a capo, avanzamento riga)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|Come gestire i caratteri di nuova riga.|<xref:System.Xml.NewLineHandling?displayProperty=nameWithType> valore: <xref:System.Xml.NewLineHandling.Entitize> (normalizzano), <xref:System.Xml.NewLineHandling.Replace> (Sostituisci), o <xref:System.Xml.NewLineHandling.None> (lasciare invariato)|<xref:System.Xml.NewLineHandling.Replace> (sostituire con caratteri specificati da <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|Se scrivere attributi su una nuova riga (non ha alcun effetto quando <xref:System.Xml.XmlWriterSettings.Indent%2A> è `false`).|`true` o `false`|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|Indica se scrivere una dichiarazione XML.|`true` o `false`|`false`|  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Xml.XmlWriter> che scrive in un file XML e ogni attributo in una nuova riga.  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 L'esempio produce l'output seguente:  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella seguente illustra i valori iniziali delle proprietà per un'istanza di <xref:System.Xml.XmlWriterSettings>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Due spazi.|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n` (ritorno a capo, nuova riga).|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Xml.XmlWriter> oggetto che usa il carattere di tabulazione per il rientro.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Async : bool with get, set" Usage="System.Xml.XmlWriterSettings.Async" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se è possibile usare i metodi <see cref="T:System.Xml.XmlWriter" /> asincroni in una specifica istanza di <see cref="T:System.Xml.XmlWriter" />.</summary>
        <value>
          <see langword="true" /> se i metodi asincroni possono essere utilizzati; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario impostare questo valore su `true` quando si crea un nuovo <xref:System.Xml.XmlWriter> istanza, se si desidera utilizzare asincrona <xref:System.Xml.XmlWriter> metodi in tale istanza. Dopo il <xref:System.Xml.XmlWriter> viene creata l'istanza, il <xref:System.Xml.XmlWriterSettings.Async%2A> proprietà è di sola lettura. Il valore predefinito di questa proprietà è `false`.  
  
 Questo flag viene ignorato dal <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> rapporto di overload. Ciò significa che se si crea un nuovo <xref:System.Xml.XmlWriter> basato su un oggetto esistente <xref:System.Xml.XmlWriter>, il comportamento asincrono dipende dall'input <xref:System.Xml.XmlWriter>, e non è possibile usare il <xref:System.Xml.XmlWriterSettings.Async%2A> flag per modificare il comportamento asincrono.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programmazione asincrona con Async e Await (C# e Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCharacters : bool with get, set" Usage="System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il writer XML deve verificare la conformità di tutti i caratteri nel documento alla sezione "2.2 Characters" di [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/#charsets) di W3C.</summary>
        <value>
          <see langword="true" /> per eseguire il controllo dei caratteri; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Xml.XmlWriter> oggetto supporta il controllo dei caratteri, genera un'eccezione se dei caratteri non compreso nell'intervallo dei caratteri XML validi specificati nella sezione "2.2 Characters" del W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/#charsets).  
  
 Controllo dei caratteri non include il controllo dei caratteri non validi nei nomi XML oppure verifica che tutti i nomi siano validi. Questi controlli sono parte del controllo della conformità e vengono sempre eseguiti.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlWriterSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlWriterSettings ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Xml.XmlWriterSettings" Usage="xmlWriterSettings.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia dell'istanza di <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
        <returns>Oggetto <see cref="T:System.Xml.XmlWriterSettings" /> clonato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Clonata <xref:System.Xml.XmlWriterSettings> oggetto può essere modificato senza modificare le impostazioni sull'oggetto originale.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutput">
      <MemberSignature Language="C#" Value="public bool CloseOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseOutput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseOutput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CloseOutput : bool with get, set" Usage="System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'elemento <see cref="T:System.Xml.XmlWriter" /> deve chiudere anche il flusso sottostante o l'elemento <see cref="T:System.IO.TextWriter" /> quando viene chiamato il metodo <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
        <value>
          <see langword="true" /> per chiudere anche il flusso sottostante o <see cref="T:System.IO.TextWriter" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa impostazione è utile quando si vuole scrivere codice XML in un flusso e quindi aggiungere le informazioni aggiuntive alla fine del flusso dopo il <xref:System.Xml.XmlWriter> ha terminato la scrittura.  
  
 Questa proprietà si applica solo a <xref:System.Xml.XmlWriter> istanze XML di output del contenuto in un flusso o <xref:System.IO.TextWriter>; in caso contrario, questa impostazione viene ignorata.  
  
   
  
## Examples  
 Nell'esempio seguente scrive un frammento XML in un flusso di memoria.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceLevel : System.Xml.ConformanceLevel with get, set" Usage="System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il livello di conformità per cui il writer XML controlla l'output XML.</summary>
        <value>Uno dei valori di enumerazione che specifica il livello di conformità (documento, frammento o rilevamento automatico). Il valore predefinito è <see cref="F:System.Xml.ConformanceLevel.Document" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> proprietà consente di configurare il writer XML per controllare e garantire che il flusso di dati letti sia conforme a uno specifico set di regole. I dati XML possono essere controllati per verificare che sia conforme alle regole per un documento XML 1.0 corretto o un frammento di documento. La tabella seguente descrive le tre impostazioni. Il valore predefinito è la conformità a livello di documento.  
  
|Impostazione|Descrizione|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|Assicura che l'output XML sia conforme al [regole per un documento XML 1.0 corretto](https://www.w3.org/TR/REC-xml/#sec-well-formed) e può essere elaborato da qualsiasi processore conforme.<br /><br /> I controlli di conformità del documento includono la maggior parte dei controlli a livello di frammento e verificare anche quanto segue:<br /><br /> -L'elemento di livello superiore non ha altri nodi oltre alla dichiarazione XML, DTD, elemento, commento, spazi vuoti o istruzione di elaborazione.<br />-I dati XML hanno un solo nodo di elemento di primo livello.<br /><br /> Il writer XML non viene analizzata informazioni sulla DTD che viene scritto. L'utente è responsabile di garantire che la DTD sia ben formata.|  
|<xref:System.Xml.ConformanceLevel.Fragment>|Assicura che l'output XML sia conforme al [regole per un frammento di documento XML 1.0 corretto](https://www.w3.org/TR/REC-xml/#wf-entities).<br /><br /> Questa impostazione vengono accettati i dati XML con più elementi radice o i nodi di testo di primo livello. Questo livello di controllo assicura che qualunque processore possa utilizzare il flusso di dati letto come un'entità analizzata esterna XML 1.0.<br /><br /> Informazioni sulla DTD non è consentite nei frammenti di documento.|  
|<xref:System.Xml.ConformanceLevel.Auto>|Specifica che il writer XML deve determinare il livello di controllo di conformità in base ai dati in ingresso. Questa impostazione può essere utile quando non è noto se il codice XML generato è un documento XML ben formato o un frammento.<br /><br /> Il controllo della conformità del documento viene applicato nei seguenti casi:<br /><br /> -Se il <xref:System.Xml.XmlWriter.WriteStartDocument%2A> viene chiamato il metodo.<br />-Se vengono scritte informazioni DTD.<br /><br /> Controllo della conformità del frammento viene applicato se i dati XML contengono uno dei seguenti:<br /><br /> -Nodo text, CDATA o EntityReference a livello di radice.<br />-Più di un elemento a livello di radice.<br />-Nessun elemento a livello di radice.<br /><br /> Viene generato un tipo <xref:System.Xml.XmlException> se si verifica un conflitto, ad esempio quando si tenta di scrivere un nodo di tipo text e una DTD a livello radice.<br /><br /> Se si esegue il wrapping di un altro <xref:System.Xml.XmlWriter> oggetto, l'oggetto esterno non esegue altri controlli di conformità; questo viene lasciato all'oggetto sottostante.|  
  
 Se il writer XML rileva qualsiasi informazione che viola il livello di conformità specificato, genera un'eccezione. In alcuni casi, il writer XML corregge automaticamente l'errore di conformità. Ad esempio, il writer chiude un attributo non chiuso senza generare un'eccezione. Nella tabella seguente viene illustrato come le varie violazioni della conformità vengono gestite in ogni impostazione.  
  
|Condizione|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|Informazioni sulla DTD è state trovate.|Non una violazione di questa impostazione. Tuttavia, il writer XML non controlla la DTD; l'utente deve assicurarsi che la DTD sia ben formata.|<xref:System.Xml.XmlException> viene generata un'eccezione.|Viene applicato il controllo della conformità del documento.|  
|Chiamata del metodo <xref:System.Xml.XmlWriter.WriteStartDocument%2A>.|Non è considerato una violazione di questa impostazione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|Viene applicato il controllo della conformità del documento.|  
|<xref:System.Xml.XmlWriter.WriteStartDocument%2A> viene chiamato più volte.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|  
|Un valore di testo viene visualizzato al livello superiore (non sotto un nodo elemento o attributo).|<xref:System.Xml.XmlException> viene generata un'eccezione.|Non è considerato una violazione.|Viene applicato il controllo di conformità del frammento.|  
|Più elementi o nessun elemento visualizzato al livello superiore.|<xref:System.Xml.XmlException> viene generata un'eccezione.|Non è considerato una violazione.|Viene applicato il controllo di conformità del frammento.|  
|Elemento di livello superiore è lo spazio vuoto.|Non è considerato una violazione.|Non è considerato una violazione.|Non è considerato una violazione.|  
|<xref:System.Xml.XmlWriter.WriteEndAttribute%2A> non viene chiamato per terminare un nodo attributo.|Risolto dal writer XML.|Risolto dal writer XML.|Risolto dal writer XML.|  
|Il writer XML è in uno stato non correttamente annidato (ad esempio, un <xref:System.Xml.XmlWriter.WriteStartElement%2A> chiamata è seguita da un <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>).|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|  
|Elemento di primo livello è un attributo.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|  
|Vengono rilevati più nodi contigui di tipo text.|Non è considerato una violazione, ma è responsabilità dell'utente per concatenare i nodi di testo.|Non è considerato una violazione, ma è responsabilità dell'utente per concatenare i nodi di testo.|Non è considerato una violazione, ma è responsabilità dell'utente per concatenare i nodi di testo.|  
|Lo stesso prefisso dello spazio dei nomi viene dichiarato due volte in un elemento,|Il writer XML genera un nuovo prefisso dello spazio dei nomi di secondo.|Il writer XML genera un nuovo prefisso dello spazio dei nomi di secondo.|Il writer XML genera un nuovo prefisso dello spazio dei nomi di secondo.|  
|<xref:System.Xml.XmlWriter.WriteStartElement%2A> Specifica un prefisso e uno spazio dei nomi che non è dichiarato all'interno di quell'ambito, o il prefisso è associato a uno spazio dei nomi diversi.|Il writer XML scrive il nodo namespace necessario.|Il writer XML scrive il nodo namespace necessario.|Il writer XML scrive il nodo namespace necessario.|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> Specifica un prefisso e uno spazio dei nomi che non è dichiarato all'interno di tale ambito.|Il writer XML scrive il nodo namespace necessario.|Il writer XML scrive il nodo namespace necessario.|Il writer XML scrive il nodo namespace necessario.|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> Specifica un prefisso e uno spazio dei nomi, ma il prefisso è associato un diverso spazio dei nomi nell'ambito.|Il writer XML ignora il prefisso specificato e cerca il prefisso corretto o genera un nuovo prefisso.|Il writer XML ignora il prefisso specificato e cerca il prefisso corretto o genera un nuovo prefisso.|Il writer XML ignora il prefisso specificato e cerca il prefisso corretto o genera un nuovo prefisso.|  
|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> Consente di scrivere il contenuto dell'elemento con uno spazio dei nomi che non esiste all'interno dell'ambito.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|  
|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> Consente di scrivere contenuto di un attributo con uno spazio dei nomi che non esiste all'interno dell'ambito.|Il writer XML scrive la dichiarazione dello spazio dei nomi necessarie.|Il writer XML scrive la dichiarazione dello spazio dei nomi necessarie.|Il writer XML scrive la dichiarazione dello spazio dei nomi necessarie.|  
|Il `xml:space` attributo non contiene un valore valido.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|  
|Viene rilevato un nome non valido.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|  
|Il `xml` prefisso non corrisponde a un URI.|Questo tipo di violazione non verifica il writer XML.|Questo tipo di violazione non verifica il writer XML.|Questo tipo di violazione non verifica il writer XML.|  
|Il `xml` prefisso non corrisponde alla http://www.w3.org/XML/1998/namespace URI.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|  
|Il `xmlns` prefisso o il nome locale non corrisponde a un URI.|Questo tipo di violazione non verifica il writer XML.|Questo tipo di violazione non verifica il writer XML.|Questo tipo di violazione non verifica il writer XML.|  
|Il `xmlns` prefisso o il nome locale non corrisponde alla http://www.w3.org/2000/xmlns URI.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|<xref:System.Xml.XmlException> viene generata un'eccezione.|  
  
   
  
## Examples  
 Nell'esempio seguente scrive un frammento XML in un flusso di memoria.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotEscapeUriAttributes">
      <MemberSignature Language="C#" Value="public bool DoNotEscapeUriAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotEscapeUriAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotEscapeUriAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotEscapeUriAttributes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoNotEscapeUriAttributes : bool with get, set" Usage="System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'elemento <see cref="T:System.Xml.XmlWriter" /> non imposta come escape gli attributi URI.</summary>
        <value>
          <see langword="true" /> Se il <see cref="T:System.Xml.XmlWriter" /> ignora gli attributi URI; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Xml.XmlWriterSettings.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo di codifica testo da usare.</summary>
        <value>Codifica testo da usare. Il valore predefinito è <see langword="Encoding.UTF8" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.XmlWriter> consente di codificare un buffer di caratteri in una sola volta, invece di un carattere. Viene generata un'eccezione quando il <xref:System.Xml.XmlWriter.Flush%2A> metodo viene chiamato se vengono rilevati errori di codifica.  
  
 Il <xref:System.Xml.XmlWriterSettings.Encoding%2A> proprietà si applica solo ai <xref:System.Xml.XmlWriter> istanze create con l'oggetto specificato <xref:System.IO.Stream> o con il nome file specificato. Se il <xref:System.Xml.XmlWriter> istanza viene creata con la proprietà specificata <xref:System.IO.TextWriter>, il <xref:System.Xml.XmlWriterSettings.Encoding%2A> viene eseguito l'override di proprietà per la codifica dell'oggetto sottostante <xref:System.IO.TextWriter>. Ad esempio, se questa proprietà è impostata su Unicode (UTF-16) per un determinato <xref:System.Xml.XmlWriter>, ma il writer sottostante è un <xref:System.IO.StreamWriter> (che deriva da <xref:System.IO.TextWriter>) con la codifica impostata in UTF8, l'output sarà con codificata UTF-8.  
  
 Se il <xref:System.Xml.XmlWriter> con altri parametri di output, viene creata l'istanza di <xref:System.Xml.XmlWriterSettings.Encoding%2A> proprietà viene ignorata.  
  
 Nell'esempio seguente:  
  
-   Il valore predefinito di <xref:System.Xml.XmlWriterSettings.Encoding%2A> è `Encoding.UTF8`.  
  
-   Il <xref:System.IO.StreamWriter> è impostata su `Encoding.Unicode` e il <xref:System.IO.StreamWriter>codifica le sostituzioni il <xref:System.Xml.XmlWriterSettings.Encoding%2A> impostazione.  
  
-   L'output sarà `Encoding.Unicode`.  
  
```csharp  
using (StreamWriter output =  
    new StreamWriter(new FileStream("Xml01.xml", FileMode.Create), Encoding.Unicode))  
{  
    using (XmlWriter xmlWriter =  
        XmlWriter.Create(output, new XmlWriterSettings()))  
    {  
        xmlWriter.WriteStartDocument();  
        xmlWriter.WriteStartElement("Root");  
        xmlWriter.WriteEndElement();  
        xmlWriter.WriteEndDocument();  
    }  
}  
```  
  
> [!IMPORTANT]
>  Non accettare un <xref:System.Text.Encoding> oggetto da una fonte non attendibile.  
  
   
  
## Examples  
 Nell'esempio seguente scrive un frammento XML in un flusso di memoria.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public bool Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Indent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Indent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : bool with get, set" Usage="System.Xml.XmlWriterSettings.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se impostare il rientro di elementi.</summary>
        <value>
          <see langword="true" /> per scrivere singoli elementi su nuove righe e per il rientro; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà si applica solo a <xref:System.Xml.XmlWriter> istanze che il contenuto di testo di output; in caso contrario, questa impostazione viene ignorata.  
  
 Gli elementi vengono rientrati, purché l'elemento non contiene contenuto misto. Una volta il <xref:System.Xml.XmlWriter.WriteString%2A> o <xref:System.Xml.XmlWriter.WriteWhitespace%2A> metodo viene chiamato per scrivere un contenuto misto dell'elemento, il <xref:System.Xml.XmlWriter> interrompe il rientro. L'impostazione del rientro riprende dopo l'elemento con contenuto misto è chiuso.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Xml.XmlWriter> oggetto che usa il carattere di tabulazione per il rientro.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentChars">
      <MemberSignature Language="C#" Value="public string IndentChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndentChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.IndentChars" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndentChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChars : string with get, set" Usage="System.Xml.XmlWriterSettings.IndentChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la stringa di caratteri da usare per il rientro. Questa impostazione viene usata quando la proprietà <see cref="P:System.Xml.XmlWriterSettings.Indent" /> è impostata su <see langword="true" />.</summary>
        <value>Stringa di caratteri da usare per il rientro. Può essere impostata su qualsiasi valore stringa. Tuttavia, per essere sicuri che l'XML sia valido, specificare solo spazi vuoti validi, ad esempio spazi, tabulazioni, ritorni a capo o avanzamenti riga. Il valore predefinito è due spazi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà si applica solo a <xref:System.Xml.XmlWriter> istanze che il contenuto di testo di output; in caso contrario, questa impostazione viene ignorata. Il <xref:System.Xml.XmlWriter> genera un'eccezione se i caratteri di rientro nel codice XML non valido.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Xml.XmlWriter> oggetto che usa il carattere di tabulazione per il rientro.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore assegnato all'elemento <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="NamespaceHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NamespaceHandling NamespaceHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NamespaceHandling NamespaceHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceHandling As NamespaceHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NamespaceHandling NamespaceHandling { System::Xml::NamespaceHandling get(); void set(System::Xml::NamespaceHandling value); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceHandling : System.Xml.NamespaceHandling with get, set" Usage="System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.NamespaceHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'elemento <see cref="T:System.Xml.XmlWriter" /> deve rimuovere le dichiarazioni dello spazio dei nomi duplicate quando viene scritto contenuto XML. Il comportamento predefinito del writer è restituire tutte le dichiarazioni dello spazio dei nomi presenti nel resolver dello spazio dei nomi del writer.</summary>
        <value>L'enumerazione <see cref="T:System.Xml.NamespaceHandling" /> utilizzata per specificare se rimuovere le dichiarazioni di spazio dei nomi duplicate nell'oggetto <see cref="T:System.Xml.XmlWriter" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineChars">
      <MemberSignature Language="C#" Value="public string NewLineChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLineChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLineChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineChars : string with get, set" Usage="System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la stringa di caratteri da usare per le interruzioni di riga.</summary>
        <value>Stringa di caratteri da usare per le interruzioni di riga. Può essere impostata su qualsiasi valore stringa. Tuttavia, per essere sicuri che l'XML sia valido, specificare solo spazi vuoti validi, ad esempio spazi, tabulazioni, ritorni a capo o avanzamenti riga. Il valore predefinito è <c>\r\n</c> (ritorno a capo, nuova riga).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà si applica solo a <xref:System.Xml.XmlWriter> istanze che il contenuto di testo di output; in caso contrario, questa impostazione viene ignorata. Il <xref:System.Xml.XmlWriter> genera un'eccezione se il risultato di caratteri di interruzione di riga nel codice XML non valido.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore assegnato all'elemento <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="NewLineHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NewLineHandling NewLineHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NewLineHandling NewLineHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineHandling As NewLineHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NewLineHandling NewLineHandling { System::Xml::NewLineHandling get(); void set(System::Xml::NewLineHandling value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineHandling : System.Xml.NewLineHandling with get, set" Usage="System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.NewLineHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se le interruzioni di riga devono essere normalizzate nell'output.</summary>
        <value>Uno dei valori di <see cref="T:System.Xml.NewLineHandling" />. Il valore predefinito è <see cref="F:System.Xml.NewLineHandling.Replace" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa impostazione si applica quando si scrive il testo contenuto o valori di attributo. Ognuna del <xref:System.Xml.NewLineHandling> valori è descritta di seguito:  
  
-   Il <xref:System.Xml.NewLineHandling.Entitize> impostazione indica la <xref:System.Xml.XmlWriter> per sostituire i caratteri di nuova riga che non vengono mantenute in caso contrario, da una classe di normalizzazione <xref:System.Xml.XmlReader> con entità carattere. Ciò è utile negli scenari di andata e ritorno in cui l'output viene letto da una classe di normalizzazione <xref:System.Xml.XmlReader>. Applicano le regole di normalizzazione aggiuntive per i valori di attributo durante la creazione di sequenze di andata e ritorno dal `\t`, `\n` e `\r` vengono sostituiti con uno spazio dei valori di attributo quando normalizzati un <xref:System.Xml.XmlReader>.  
  
-   Il <xref:System.Xml.NewLineHandling.Replace> impostazione indica la <xref:System.Xml.XmlWriter> per sostituire i caratteri di nuova riga con `\r\n`, ovvero il nuovo formato di riga utilizzato dal sistema operativo Microsoft Windows. Questa funzionalità garantisce che il file può essere visualizzato correttamente dalle applicazioni di blocco note o Microsoft Word. Questa impostazione sostituisce inoltre nuove righe negli attributi con entità carattere per mantenere i caratteri. Rappresenta il valore predefinito.  
  
-   Il <xref:System.Xml.NewLineHandling.None> impostazione indica la <xref:System.Xml.XmlWriter> a non modificato l'input. Questa impostazione viene usata quando non si desidera che tutte le elaborazioni di nuova riga. Ciò è utile quando l'output viene letto da un <xref:System.Xml.XmlReader> che non esegue alcuna normalizzazione (ad esempio, un <xref:System.Xml.XmlTextReader> con le impostazioni predefinite.)  
  
 Le tabelle seguenti illustrano l'output del <xref:System.Xml.XmlWriter.WriteString%2A> metodo quando viene indicato il valore di input in base il <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> l'impostazione della proprietà. Le tabelle mostrano l'output quando si scrive il contenuto di testo e anche quando si scrive un valore di attributo.  
  
 `Text Node Value:`  
  
||\r\n.|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Creazione di entità|&#D;\n|\n|&#D;|\t|  
|Sostituisci|\r\n.|\r\n.|\r\n.|\t|  
|nessuno|\r\n.|\n|\r|\t|  
  
 `Attribute Value:`  
  
||\r\n.|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Creazione di entità|&#D;&#A;|&#A;|&#D;|&\#9;|  
|Sostituisci|&#D;&#A;|&#A;|&#D;|&\#9;|  
|nessuno|\r\n.|\n|\r|\t|  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlWriter> presenta il seguente comportamento quando si scrive il contenuto all'interno di una sezione CDATA, commenti o istruzione di elaborazione. Le nuove righe non vengono mai sostituite con le relative entità carattere, anche quando la <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> è impostata su <xref:System.Xml.NewLineHandling.Entitize>. Questo avviene perché le entità di caratteri non sono riconosciute nella sezioni CDATA, commenti o istruzioni di elaborazione. Se il <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> è impostata su <xref:System.Xml.NewLineHandling.None> o <xref:System.Xml.NewLineHandling.Replace>, il comportamento è identico quando si scrive un valore di nodo di testo.  
  
 La tabella seguente descrive quali una normalizzazione <xref:System.Xml.XmlReader> restituisce per ogni spazio vuoto di input. Per altre informazioni, vedere 2.11 e 3.3.3 del W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/).  
  
> [!NOTE]
>  Un lettore di normalizzazione è qualsiasi <xref:System.Xml.XmlReader> oggetto creato tramite il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> (metodo). Questi oggetti eseguono sempre la normalizzazione delle interruzioni di riga e la normalizzazione completa degli attributi. Il <xref:System.Xml.XmlTextReader> oggetto può anche essere un lettore di normalizzazione se si tratta <xref:System.Xml.XmlTextReader.Normalization%2A> è impostata su `true`.  
  
||\r\n.|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Valore di nodo di testo|\n|\n|\n|\t|  
|Valore attributo|spazio singolo|spazio singolo|spazio singolo|spazio singolo|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineOnAttributes">
      <MemberSignature Language="C#" Value="public bool NewLineOnAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NewLineOnAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineOnAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NewLineOnAttributes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineOnAttributes : bool with get, set" Usage="System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se scrivere gli attributi su una nuova riga.</summary>
        <value>
          <see langword="true" /> per scrivere gli attributi su singole righe; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.  
  
 <block subset="none" type="note"><para>  
 Questa impostazione non viene applicata se il valore della proprietà <see cref="P:System.Xml.XmlWriterSettings.Indent" /> è <see langword="false" />.  
  
</para></block>  
  
Se il valore di <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> è impostato su <see langword="true" />, ciascun attributo viene preceduto da una nuova riga e da un livello aggiuntivo di rientro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà si applica solo a <xref:System.Xml.XmlWriter> istanze che il contenuto di testo di output; in caso contrario, questa impostazione viene ignorata.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Xml.XmlWriter> che scrive in un file XML e ogni attributo in una nuova riga.  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 L'esempio produce l'output seguente:  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OmitXmlDeclaration">
      <MemberSignature Language="C#" Value="public bool OmitXmlDeclaration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OmitXmlDeclaration" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Property OmitXmlDeclaration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OmitXmlDeclaration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OmitXmlDeclaration : bool with get, set" Usage="System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se omettere una dichiarazione XML.</summary>
        <value>
          <see langword="true" /> per omettere la dichiarazione XML; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" /> (viene scritta una dichiarazione XML).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà si applica solo a <xref:System.Xml.XmlWriter> istanze che il contenuto di testo di output; in caso contrario, questa impostazione viene ignorata.  
  
 Se <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> è impostata su `false`, la dichiarazione XML viene scritta automaticamente.  
  
 La dichiarazione XML viene sempre scritto se <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> è impostata su <xref:System.Xml.ConformanceLevel.Document>, anche se <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> è impostata su `true`.  
  
 La dichiarazione XML non verrà mai scritti se <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> è impostata su <xref:System.Xml.ConformanceLevel.Fragment>. È possibile chiamare <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> per scrivere in modo esplicito una dichiarazione XML.  
  
   
  
## Examples  
 Nell'esempio seguente scrive un frammento XML in un flusso di memoria.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputMethod">
      <MemberSignature Language="C#" Value="public System.Xml.XmlOutputMethod OutputMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlOutputMethod OutputMethod" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputMethod As XmlOutputMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlOutputMethod OutputMethod { System::Xml::XmlOutputMethod get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputMethod : System.Xml.XmlOutputMethod" Usage="System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlOutputMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il metodo usato per serializzare l'output <see cref="T:System.Xml.XmlWriter" />.</summary>
        <value>Uno dei valori di <see cref="T:System.Xml.XmlOutputMethod" />. Il valore predefinito è <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà specifica il metodo utilizzato per serializzare l'output. L'output può essere serializzato utilizzando le regole HTML, regole XML 1.0 e così via. Questa impostazione è impostata dal processore XSLT e viene usata internamente da Visual Studio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="xmlWriterSettings.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ripristina i valori predefiniti dei membri della classe delle impostazioni.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella seguente illustra l'impostazione predefinita i valori di proprietà per un'istanza di <xref:System.Xml.XmlWriterSettings>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Due spazi.|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n`.|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentOnClose">
      <MemberSignature Language="C#" Value="public bool WriteEndDocumentOnClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteEndDocumentOnClose" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteEndDocumentOnClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteEndDocumentOnClose { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WriteEndDocumentOnClose : bool with get, set" Usage="System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'elemento <see cref="T:System.Xml.XmlWriter" /> aggiungerà tag di chiusura a tutti i tag di elemento senza chiusura quando viene chiamato il metodo <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
        <value>
          <see langword="true" /> se tutti i tag elemento non chiusi verranno chiusi; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si imposta questo flag su `false`, il file XML di output non siano in formato corretto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>