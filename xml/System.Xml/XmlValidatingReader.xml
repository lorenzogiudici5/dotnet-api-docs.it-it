<Type Name="XmlValidatingReader" FullName="System.Xml.XmlValidatingReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7e18e1fd6382545d9af186fd445a048879512af" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34061616" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlValidatingReader : System.Xml.XmlReader, System.Xml.IXmlLineInfo, System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlValidatingReader extends System.Xml.XmlReader implements class System.Xml.IXmlLineInfo, class System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlValidatingReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlValidatingReader&#xA;Inherits XmlReader&#xA;Implements IXmlLineInfo, IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlValidatingReader : System::Xml::XmlReader, System::Xml::IXmlLineInfo, System::Xml::IXmlNamespaceResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.IXmlLineInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Use XmlReader created by XmlReader.Create() method using appropriate XmlReaderSettings instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un lettore che fornisce che fornisce la convalida di DTD (Document Type Definition), di schemi XDR (XML-Data Reduced) e di XSD (XML Schema Definition Language).  
  
 Questa classe è obsoleta. A partire da .NET Framework 2.0, è consigliabile usare la classe <see cref="T:System.Xml.XmlReaderSettings" /> e il metodo <see cref="Overload:System.Xml.XmlReader.Create" /> per creare un lettore XML di convalida.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `XmlValidatingReader` implementa la <xref:System.Xml.XmlReader> classe e fornisce supporto per la convalida dei dati. Utilizzare il <xref:System.Xml.XmlValidatingReader.Schemas%2A> proprietà affinché includa il lettore di convalida tramite i file di schema che vengono memorizzati nella cache un <xref:System.Xml.Schema.XmlSchemaCollection>. Il <xref:System.Xml.XmlValidatingReader.ValidationType%2A> proprietà specifica il tipo di convalida deve eseguire la lettura. Imposta la proprietà ValidationType crea un lettore non di convalida.  
  
 <xref:System.Xml.XmlValidatingReader> Genera un <xref:System.Xml.XmlException> gli errori di analisi in XML. Dopo che viene generata un'eccezione lo stato del lettore non è stimabile. Ad esempio, il tipo di nodo restituito può essere diverso dal tipo di nodo effettivo del nodo corrente. Utilizzare il <xref:System.Xml.XmlValidatingReader.ReadState%2A> proprietà per controllare se un lettore è in stato di errore.  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Questa classe è una richiesta di ereditarietà. L'attendibilità totale deve ereditare da <see langword="XmlValidatingReader" />.</para>
    </block>
    <altmember cref="T:System.Xml.XmlReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see langword="XmlValidatingReader" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::Xml::XmlReader ^ reader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Oggetto <see langword="XmlReader" /> da cui leggere durante la convalida. L'implementazione corrente supporta solo <see cref="T:System.Xml.XmlTextReader" />.</param>
        <summary>Inizializza una nuova istanza della classe <see langword="XmlValidatingReader" /> che convalida il contenuto restituito dall'oggetto <see cref="T:System.Xml.XmlReader" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Tutti i nodi restituiti dal determinato `XmlReader` vengono restituiti anche da questo visualizzatore di convalida, in modo non si verificheranno perdite di informazioni del processo. È possibile aggiungere nuovi nodi non restituiti dal lettore sottostante dal lettore in uso (ad esempio, gli attributi predefiniti e gli elementi figlio di un riferimento all'entità). Qualsiasi proprietà impostate per il dato `XmlTextReader` si applicano anche a questo visualizzatore di convalida. Ad esempio, se il lettore fornito WhitespaceHandling set, il lettore di convalida inoltre ignora gli spazi vuoti.  
  
 Quando sono necessari (DTD) o schemi esterni per la convalida, il <xref:System.Xml.XmlValidatingReader.XmlResolver%2A> set di proprietà di <xref:System.Xml.XmlResolver> oggetto da utilizzare per risolvere risorse esterne.  
  
   
  
## Examples  
 Nell'esempio seguente convalida due documenti.  
  
 [!code-cpp[XmlValidatingReader.Cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.Cctor/CPP/valid_xsd2.cpp#1)]
 [!code-csharp[XmlValidatingReader.Cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.Cctor/CS/valid_xsd2.cs#1)]
 [!code-vb[XmlValidatingReader.Cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.Cctor/VB/valid_xsd2.vb#1)]  
  
 L'esempio utilizza i file di input seguenti:  
  
 `notValidXSD.xml`  
  
 [!code-xml[XmlValidatingReader.Cctor#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/notvalidxsd.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.Cctor#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/books.xsd#3)]  
  
 `inlineXSD.xml`  
  
 [!code-xml[XmlValidatingReader.Cctor#4](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/inlinexsd.xml#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il visualizzatore specificato non è un oggetto <see langword="XmlTextReader" />.</exception>
        <altmember cref="T:System.Xml.XmlTextReader" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (System.IO.Stream xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As Stream, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::IO::Stream ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.IO.Stream" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment">Flusso contenente il frammento XML da analizzare.</param>
        <param name="fragType">Oggetto <see cref="T:System.Xml.XmlNodeType" /> del frammento XML. Determina il contenuto del frammento (vedere la tabella seguente).</param>
        <param name="context">Oggetto <see cref="T:System.Xml.XmlParserContext" /> in cui deve essere analizzato il frammento XML. Include l'oggetto <see cref="T:System.Xml.XmlNameTable" /> da usare, la codifica, l'ambito dello spazio dei nomi, l'oggetto <see langword="xml:lang" /> corrente e l'ambito <see langword="xml:space" />.</param>
        <summary>Inizializza una nuova istanza della classe <see langword="XmlValidatingReader" /> con i valori specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Questo costruttore consente di analizzare la stringa specificata come un frammento di codice XML. Se il frammento XML è un elemento o attributo, è possibile ignorare le regole di livello radice per i documenti XML ben formati.  
  
 Nella tabella seguente sono elencati i valori validi per `fragType` e come viene analizzato il lettore di ognuno dei tipi di nodo diverso.  
  
|XmlNodeType|Contenuto del frammento|  
|-----------------|--------------------------|  
|Elemento|Il contenuto di un elemento valido (ad esempio, qualsiasi combinazione di elementi, commenti, istruzioni di elaborazione, cdata, text e riferimenti a entità).|  
|Attributo|Il valore di un attributo (la parte all'interno delle virgolette).|  
|Document|Il contenuto di un intero documento XML. In questo modo le regole a livello di documento.|  
  
 Il visualizzatore utilizza la procedura seguente per determinare la codifica del flusso:  
  
1.  Controlla il <xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType> proprietà per determinare la codifica.  
  
2.  Se il `Encoding` proprietà `null`, il lettore verifica la presenza di un contrassegno di ordine dei byte all'inizio del flusso.  
  
3.  Se il `Encoding` proprietà `null`e viene individuato alcun indicatore ordine byte, il lettore si presuppone che il flusso è codificato in UTF-8.  
  
 Se il lettore esegue la convalida mediante la definizione di tipo documento (DTD) (vale a dire <xref:System.Xml.XmlValidatingReader.ValidationType%2A> è impostata su ValidationType o ValidationType), il `XmlParserContext` specificato nel costruttore deve fornire tutte le informazioni necessarie DocumentType.  
  
> [!NOTE]
>  Non è possibile convalidare un frammento tramite una DTD. Per definizione un DTD richiede un intero documento da caricare per la convalida.  
  
 Se il lettore esegue la convalida utilizzando gli schemi XML-Data Reduced (XDR) o XML Schema definition language (XSD), utilizzare il <xref:System.Xml.XmlValidatingReader.Schemas%2A> proprietà per specificare il <xref:System.Xml.Schema.XmlSchemaCollection> che contiene gli schemi (vale a dire il `XmlParserContext` non è necessario specificare il Informazioni di DocumentType).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="fragType" /> non è uno dei tipi di nodo elencati nella tabella seguente.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (string xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As String, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::String ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.String" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment">Stringa che contiene il frammento XML da analizzare.</param>
        <param name="fragType">Oggetto <see cref="T:System.Xml.XmlNodeType" /> del frammento XML. Determina anche il contenuto della stringa del frammento (vedere la tabella seguente).</param>
        <param name="context">Oggetto <see cref="T:System.Xml.XmlParserContext" /> in cui deve essere analizzato il frammento XML. Include l'oggetto <see cref="T:System.Xml.NameTable" /> da usare, la codifica, l'ambito dello spazio dei nomi, l'ambito xml:lang corrente e l'ambito xml:space corrente.</param>
        <summary>Inizializza una nuova istanza della classe <see langword="XmlValidatingReader" /> con i valori specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Questo costruttore consente di analizzare la stringa specificata come un frammento di codice XML. Se il frammento XML è un elemento o attributo, è possibile ignorare le regole di livello radice per i documenti XML ben formati. Questo costruttore può gestire le stringhe restituite dal <xref:System.Xml.XmlReader.ReadInnerXml%2A>.  
  
 Nella tabella seguente sono elencati i valori validi per `fragType` e come viene analizzato il lettore di ognuno dei tipi di nodo diverso.  
  
|XmlNodeType|Contenuto del frammento|  
|-----------------|--------------------------|  
|Elemento|Il contenuto di un elemento valido (ad esempio, qualsiasi combinazione di elementi, commenti, istruzioni di elaborazione, cdata, text e riferimenti a entità).|  
|Attributo|Il valore di un attributo (la parte all'interno delle virgolette).|  
|Document|Il contenuto di un intero documento XML. In questo modo le regole a livello di documento.|  
  
 Se il lettore esegue la convalida mediante la definizione di tipo documento (DTD) (vale a dire <xref:System.Xml.XmlValidatingReader.ValidationType%2A> è impostata su ValidationType o ValidationType), il `XmlParserContext` specificato nel costruttore deve fornire tutte le informazioni necessarie DocumentType.  
  
> [!NOTE]
>  Non è possibile convalidare un frammento tramite una definizione DTD. Per definizione DTD richiede un intero documento da caricare per la convalida.  
  
 Se il lettore esegue la convalida utilizzando gli schemi XML-Data Reduced (XDR) o XML Schema definition language (XSD), utilizzare il <xref:System.Xml.XmlValidatingReader.Schemas%2A> proprietà per specificare il <xref:System.Xml.Schema.XmlSchemaCollection> che contiene gli schemi (il `XmlParserContext` non è necessario fornire la DocumentType informazioni).  
  
   
  
## Examples  
 Nell'esempio seguente viene letto un frammento XML. Usa un `XmlParserContext` e il relativo <xref:System.Xml.XmlNamespaceManager> per gestire lo spazio dei nomi corrispondente.  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="fragType" /> non è uno dei tipi di nodo elencati nella tabella seguente.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public override int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AttributeCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di attributi sul nodo corrente.</summary>
        <value>Numero di attributi sul nodo corrente. Questo numero include gli attributi predefiniti.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 È pertinente per questa proprietà `Element`, `DocumentType`, e `XmlDeclaration` solo i nodi. (Altri tipi di nodo non dispone degli attributi.)  
  
   
  
## Examples  
 Nell'esempio seguente legge tutti gli elementi nel nodo radice.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'URI di base del nodo corrente.</summary>
        <value>URI di base del nodo corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Un documento XML in rete è costituito da blocchi di dati aggregati tramite vari meccanismi di inclusione standard di World Wide Web Consortium (W3C) e pertanto contiene nodi provenienti da diverse posizioni. entità DTD (definition) di tipo di documento sono un esempio di questo oggetto, ma non è limitato per DTD. URI di base indica è la provenienza di questi nodi. Se non vi è alcun URI di base per i nodi restituiti (ad esempio, questi sono stati analizzati da una stringa in memoria), viene restituito String. Empty.  
  
   
  
## Examples  
 Nell'esempio seguente viene analizzato un file e consente di visualizzare l'URI di base di ogni nodo.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/VB/source.vb#1)]  
  
 Nell'esempio viene utilizzato il file, `uri.xml`, come input.  
  
 [!code-xml[Classic WebData XmlValidatingReader.BaseURI Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/XML/source.xml#2)]  
  
 Il `style.xml` file contiene il testo XML `<style>hardcover</style>`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public override bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se <see cref="T:System.Xml.XmlValidatingReader" /> implementa metodi di lettura del contenuto binario.</summary>
        <value>
          <see langword="true" /> se i metodi di lettura del contenuto binario vengono implementati; in caso contrario, <see langword="false" />. La classe <see cref="T:System.Xml.XmlValidatingReader" /> restituisce <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per ulteriori informazioni, vedere la sezione Note del <xref:System.Xml.XmlReader> pagina di riferimento...  
  
 Lettura del contenuto binario metodi includono la <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlValidatingReader.ReadElementContentAsBase64%2A>, e <xref:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex%2A> metodi.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public override bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il lettore può analizzare e risolvere le entità.</summary>
        <value>
          <see langword="true" /> se il lettore può analizzare e risolvere le entità; in caso contrario, <see langword="false" />. <see langword="XmlValidatingReader" /> restituisce sempre <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Imposta la proprietà <see cref="P:System.Xml.XmlReader.ReadState" /> su Closed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Inoltre, questo metodo rilascia tutte le risorse utilizzate durante la lettura. Se il lettore è stato creato utilizzando un <xref:System.Xml.XmlTextReader>, questo metodo chiama anche `Close` nel lettore sottostante. Se il lettore è stato creato utilizzando un flusso, questo metodo chiama anche `Close` sul flusso sottostante.  
  
 Se `Close` è già stato chiamato, viene eseguita alcuna azione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la profondità del nodo corrente nel documento XML.</summary>
        <value>Profondità del nodo corrente nel documento XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 L'esempio seguente mostra ogni nodo, compresi profondità, numero di riga e alla posizione di riga.  
  
 [!code-cpp[IXmlLineInfo#1](~/samples/snippets/cpp/VS_Snippets_Data/IXmlLineInfo/CPP/lineinfo.cpp#1)]
 [!code-csharp[IXmlLineInfo#1](~/samples/snippets/csharp/VS_Snippets_Data/IXmlLineInfo/CS/lineinfo.cs#1)]
 [!code-vb[IXmlLineInfo#1](~/samples/snippets/visualbasic/VS_Snippets_Data/IXmlLineInfo/VB/lineinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.IXmlLineInfo" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'attributo di codifica per il documento.</summary>
        <value>Valore di codifica. Se non esiste alcun attributo di codifica né un indicatore per l'ordine dei byte, verrà usato il valore predefinito UTF-8.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Durante la lettura di tutti i riferimenti esterni (ad esempio l'espansione di un'entità in un file di definizione (DTD) di tipo di documento o la lettura di un file di schema) la proprietà di codifica è impostata sul valore di codifica del riferimento esterno. Se la codifica non è specificata nel riferimento esterno e non sia l'ordine dei byte, questo valore predefinito UTF-8.  
  
 Sono supportati tutti gli standard di codifica che supporta il sistema operativo sottostante.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="EntityHandling">
      <MemberSignature Language="C#" Value="public System.Xml.EntityHandling EntityHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.EntityHandling EntityHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.EntityHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityHandling As EntityHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::EntityHandling EntityHandling { System::Xml::EntityHandling get(); void set(System::Xml::EntityHandling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.EntityHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica il modo in cui il lettore gestisce le entità.</summary>
        <value>Uno dei valori di <see cref="T:System.Xml.EntityHandling" />. Se non è specificato un oggetto <see langword="EntityHandling" />, per impostazione predefinita viene usato EntityHandling.ExpandEntities.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Questa proprietà può essere modificata e diventa effettiva dopo il successivo <xref:System.Xml.XmlValidatingReader.Read%2A> chiamare.  
  
 Quando `EntityHandling` è impostato su `ExpandCharEntities`, i valori di attributo vengono normalizzati solo parzialmente. Il lettore Normalizza ogni nodo di testo in modo indipendente dal contenuto dei nodi dei riferimenti all'entità adiacenti.  
  
 Per illustrare la differenza tra l'entità di modalità di gestione, si consideri il codice XML seguente:  
  
```xml  
<!DOCTYPE doc [<!ENTITY num "123">]>  
 <doc> &#65; &num; </doc>  
```  
  
 Quando `EntityHandling` è impostato su `ExpandEntities` il nodo di elemento "doc" contiene un nodo di testo con il testo dell'entità espansa:  
  
|Profondità|NodeType|nome|Valore|  
|-----------|--------------|----------|-----------|  
|1|Testo||A 123|  
  
 Quando `EntityHandling` è impostato su `ExpandCharEntites`, e <xref:System.Xml.XmlTextReader.WhitespaceHandling%2A> è impostata su Significant o All, "doc" elemento espande l'entità di caratteri e restituisce l'entità generale sotto forma di nodo:  
  
|Profondità|NodeType|nome|Valore|  
|-----------|--------------|----------|-----------|  
|1|Testo||A|  
|1|EntityReference|num||  
|1|SignificantWhitespace|||  
  
   
  
## Examples  
 L'esempio seguente usa il `ResolveEntity` metodo per espandere un'entità generale.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/VB/source.vb#1)]  
  
 Nell'esempio viene utilizzato il file, `book1.xml`, come input.  
  
 [!code-xml[Classic WebData XmlValidatingReader.ResolveEntity Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">È stato specificato un valore non valido.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public override bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EOF { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il lettore è posizionato alla fine del flusso.</summary>
        <value>
          <see langword="true" /> se il lettore è posizionato alla fine del flusso; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene il valore di un attributo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Indice dell'attributo. L'indice è in base zero. Il primo attributo ha indice 0.</param>
        <summary>Ottiene il valore dell'attributo con l'indice specificato.</summary>
        <returns>Valore dell'attributo specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo non determina lo spostamento del lettore.  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore del parametro <paramref name="i" /> è minore di zero oppure è maggiore o uguale a <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome completo dell'attributo.</param>
        <summary>Ottiene il valore dell'attributo con il nome specificato.</summary>
        <returns>Valore dell'attributo specificato. Se l'attributo non viene trovato, verrà restituito <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Questo metodo non determina lo spostamento del lettore.  
  
 Se il lettore è posizionato su un `DocumentType` nodo, questo metodo può essere utilizzato per ottenere i valori letterali PUBLIC e SYSTEM, ad esempio, `reader.GetAttribute("PUBLIC")`  
  
   
  
## Examples  
 Nell'esempio seguente ottiene il valore dell'attributo ISBN.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/VB/source.vb#1)]  
  
 Nell'esempio viene utilizzato il file, `attrs.xml`, come input.  
  
 [!code-xml[Classic WebData XmlValidatingReader.GetAttribute Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/XML/attrs.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Nome locale dell'attributo.</param>
        <param name="namespaceURI">URI dello spazio dei nomi dell'attributo.</param>
        <summary>Ottiene il valore dell'attributo con il nome locale e l'URI (Uniform Resource Identifier) dello spazio dei nomi specificati.</summary>
        <returns>Valore dell'attributo specificato. Se l'attributo non viene trovato, verrà restituito <see langword="null" />. Questo metodo non determina lo spostamento del lettore.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Il seguente codice XML contiene un attributo in uno specifico spazio dei nomi:  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 È possibile cercare il `dt:type` attributo con un solo argomento (prefisso e il nome locale) o due argomenti (nome locale e URI dello spazio dei nomi):  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 Per cercare il `xmlns:dt` attributo, utilizzare uno dei seguenti argomenti:  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 È anche possibile ottenere queste informazioni utilizzando il <xref:System.Xml.XmlValidatingReader.Prefix%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasLineInfo">
      <MemberSignature Language="C#" Value="public bool HasLineInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasLineInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function HasLineInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasLineInfo();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene un valore che indica se la classe può restituire informazioni sulla riga.</summary>
        <returns>
          <see langword="true" /> se la classe può restituire le informazioni sulla riga; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public override bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il nodo corrente può avere una proprietà <see cref="P:System.Xml.XmlValidatingReader.Value" /> diversa da String.Empty.</summary>
        <value>
          <see langword="true" /> se il nodo sul quale il lettore è attualmente posizionato può contenere <see langword="Value" />; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 La tabella seguente elenca i tipi di nodo che hanno un valore da restituire.  
  
|Tipo di nodo|Valore|  
|---------------|-----------|  
|`Attribute`|Valore dell'attributo.|  
|`CDATA`|Contenuto della sezione CDATA.|  
|`Comment`|Contenuto del commento.|  
|`DocumentType`|Sottoinsieme interno.|  
|`ProcessingInstruction`|Intero contenuto, esclusa la destinazione.|  
|`SignificantWhitespace`|Spazio vuoto tra markup in un modello con contenuto misto.|  
|`Text`|Contenuto del nodo di testo.|  
|`Whitespace`|Spazio vuoto tra markup.|  
|`XmlDeclaration`|Contenuto della dichiarazione.|  
  
   
  
## Examples  
 Nell'esempio seguente legge nel XML con vari tipi di dati e visualizza tutti i nodi.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public override bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il nodo corrente è un attributo generato dal valore predefinito indicato in DTD (Document Type Definition) o nello schema.</summary>
        <value>
          <see langword="true" /> se il nodo corrente è un attributo il cui valore è stato generato in base al valore predefinito configurato nella definizione DTD o nello schema; <see langword="false" /> se il valore dell'attributo è stato impostato in modo esplicito.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà si applica solo a un nodo attributo.  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 Nell'esempio seguente visualizza tutti i nodi di attributi per l'elemento radice.  
  
 [!code-cpp[XmlValidatingReader.IsDefault#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.IsDefault/CPP/readdefattr.cpp#1)]
 [!code-csharp[XmlValidatingReader.IsDefault#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.IsDefault/CS/readdefattr.cs#1)]
 [!code-vb[XmlValidatingReader.IsDefault#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.IsDefault/VB/readdefattr.vb#1)]  
  
 L'esempio Usa i seguenti file come input.  
  
 `book4.xml`  
  
 [!code-xml[XmlValidatingReader.IsDefault#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.IsDefault/XML/book4.xml#2)]  
  
 `book.dtd`  
  
 [!code-xml[XmlValidatingReader.IsDefault#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.IsDefault/XML/book.dtd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public override bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmptyElement { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il nodo corrente è un elemento vuoto, ad esempio <c>&lt;MyElement/&gt;</c>.</summary>
        <value>
          <see langword="true" /> Se il nodo corrente è un elemento (<see cref="P:System.Xml.XmlValidatingReader.NodeType" /> è uguale a <see langword="XmlNodeType.Element" />) che termina con <c> / &gt; </c>; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Questa proprietà consente di determinare la differenza tra le seguenti stringhe:  
  
 `<item num="123"/>` (`IsEmptyElement` è `true`).  
  
 `<item num="123">` (`IsEmptyElement` è `false`, anche se il contenuto dell'elemento è vuoto).  
  
 Un corrispondente `EndElement` nodo non viene generato per elementi vuoti.  
  
 Se il contenuto predefinito è stato aggiunto a un elemento a causa di convalida dello schema, `IsEmptyElement` restituisce comunque `true`. Non ha alcun impatto su o meno l'elemento ha un valore predefinito. In altre parole, `IsEmptyElement` indica semplicemente se l'elemento nel documento di origine dispone di un tag di fine dell'elemento.  
  
   
  
## Examples  
 Nell'esempio seguente consente di visualizzare il contenuto di ogni elemento di testo.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 Nell'esempio viene utilizzato il file, `elems.xml`, come input.  
  
 [!code-xml[Classic WebData XmlValidatingReader.IsEmptyElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LineNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di riga corrente.</summary>
        <value>Numero di riga corrente. Il valore iniziale di questa proprietà è 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Questa proprietà viene in genere utilizzata per la segnalazione degli errori, ma può essere chiamata in qualsiasi momento. Il valore iniziale di questa proprietà è 1. Combinata con <xref:System.Xml.XmlValidatingReader.LinePosition%2A>, il valore 1,1 indica l'inizio del documento.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LinePosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la posizione corrente della riga.</summary>
        <value>Posizione corrente della riga. Il valore iniziale di questa proprietà è 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Questa proprietà viene in genere utilizzata per la segnalazione degli errori, ma può essere chiamata in qualsiasi momento. Il valore iniziale di questa proprietà è `1`.  
  
 La posizione indicata è il primo carattere del testo nel markup.  
  
```xml  
<root>  
 abc<tag/>  
</root>  
```  
  
 Nella prima riga del testo XML precedente, un `LinePosition` di `2` corrisponde al carattere `r`; la seconda riga, un `LinePosition` di `5` corrisponde al carattere `t`; e nella terza riga, un `LinePosition` di `3` corrisponde al carattere `r`.  
  
 Combinata con <xref:System.Xml.XmlValidatingReader.LineNumber%2A>, un valore di `1,1` indica l'inizio del documento.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome locale del nodo corrente.</summary>
        <value>Nome del nodo corrente senza il prefisso. Ad esempio, <see langword="LocalName" /> è <see langword="book" /> per l'elemento <c> &lt;bk: book&gt;</c>.  
  
 Per i tipi di nodo privi di nome, quali <see langword="Text" />, <see langword="Comment" /> e così via, questa proprietà restituisce String.Empty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 Nell'esempio seguente viene letto un frammento XML.  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public override string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefisso di cui risolvere l'URI (Uniform Resource Identifier) dello spazio dei nomi. Per ottenere lo spazio dei nomi predefinito corrispondente, passare una stringa vuota.</param>
        <summary>Risolve il prefisso di uno spazio dei nomi nell'ambito dell'elemento corrente.</summary>
        <returns>URI dello spazio dei nomi a cui viene mappato il prefisso oppure <see langword="null" /> se non viene trovato alcun prefisso corrispondente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per ulteriori informazioni, vedere la sezione Note del <xref:System.Xml.XmlReader> pagina di riferimento...  
  
 Nella stringa XML seguente, se il lettore è posizionato in corrispondenza di `href` attributo, il prefisso `a` verrà risolto chiamando `reader.LookupNamespace("a", true)`. La stringa restituita è `urn:456`.  
  
```xml  
<root xmlns:a="urn:456">  
 <item>  
 <ref href="a:b"/>  
 </item>  
</root>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Passa all'attributo specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override void MoveToAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MoveToAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub MoveToAttribute (i As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void MoveToAttribute(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Indice dell'attributo.</param>
        <summary>Passa all'attributo con l'indice specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 Nell'esempio seguente legge tutti gli elementi nel nodo radice.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore del parametro <paramref name="i" /> è minore di zero oppure è maggiore o uguale a <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome completo dell'attributo.</param>
        <summary>Passa all'attributo con il nome specificato.</summary>
        <returns>
          <see langword="true" /> se l'attributo viene trovato; in caso contrario, <see langword="false" />. Se <see langword="false" />, la posizione del lettore non subisce alcuna modifica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Dopo aver chiamato questo metodo, il <xref:System.Xml.XmlValidatingReader.Name%2A>, <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>, e <xref:System.Xml.XmlValidatingReader.Prefix%2A> riflettono le proprietà di tale attributo.  
  
   
  
## Examples  
 Nell'esempio seguente viene letto un attributo con nodi testo ed entità di riferimento.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Nome locale dell'attributo.</param>
        <param name="namespaceURI">URI dello spazio dei nomi dell'attributo.</param>
        <summary>Passa all'attributo con il nome locale e l'URI (Uniform Resource Identifier) dello spazio dei nomi specificati.</summary>
        <returns>
          <see langword="true" /> se l'attributo viene trovato; in caso contrario, <see langword="false" />. Se <see langword="false" />, la posizione del lettore non subisce alcuna modifica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Dopo aver chiamato questo metodo, il <xref:System.Xml.XmlValidatingReader.Name%2A>, <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>, e <xref:System.Xml.XmlValidatingReader.Prefix%2A> riflettono le proprietà di tale attributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public override bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Passa all'elemento che contiene il nodo dell'attributo corrente.</summary>
        <returns>
          <see langword="true" /> se il lettore è posizionato in corrispondenza di un attributo, ovvero il lettore si sposta in corrispondenza dell'elemento che possiede l'attributo; <see langword="false" /> se il lettore non è posizionato in corrispondenza di un attributo, ovvero la posizione del lettore non subisce alcuna modifica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Utilizzare questo metodo per restituire un elemento dopo aver esplorato gli attributi. Questo metodo sposta il lettore a uno dei seguenti tipi di nodo: `Element`, `DocumentType`, o `XmlDeclaration`.  
  
   
  
## Examples  
 Nell'esempio seguente legge tutti gli elementi nel nodo radice.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToFirstAttribute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Si sposta in corrispondenza del primo attributo.</summary>
        <returns>
          <see langword="true" /> se esiste un attributo, ovvero il lettore si sposta in corrispondenza del primo attributo; in caso contrario, <see langword="false" />, ovvero la posizione del lettore non subisce alcuna modifica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 Nell'esempio seguente viene letto un frammento XML.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToNextAttribute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Si sposta n corrispondenza dell'attributo successivo.</summary>
        <returns>
          <see langword="true" /> se esiste un attributo successivo; <see langword="false" /> se non esistono altri attributi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Se il nodo corrente è un nodo elemento, questo metodo è equivalente a <xref:System.Xml.XmlValidatingReader.MoveToFirstAttribute%2A>. Se `MoveToNextAttribute` restituisce `true`, il lettore passa all'attributo successivo; in caso contrario, non modifica la posizione del lettore.  
  
   
  
## Examples  
 Nell'esempio seguente viene letto un frammento XML.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome completo del nodo corrente.</summary>
        <value>Nome completo del nodo corrente. Ad esempio, <see langword="Name" /> è <see langword="bk:book" /> per l'elemento <c> &lt;bk: book&gt;</c>.  
  
 Il nome restituito dipende dalla proprietà <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> del nodo. I seguenti tipi di nodo restituiscono i valori inclusi nell'elenco. Tutti gli altri tipi di nodo restituiscono una stringa vuota.  
  
 <list type="table"><listheader><term> Tipo di nodo  
  
 </term><description> Nome  
  
 </description></listheader><item><term><see langword="Attribute" /></term><description> Il nome dell'attributo.  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> Il nome del tipo di documento.  
  
 </description></item><item><term><see langword="Element" /></term><description> Il nome del tag.  
  
 </description></item><item><term><see langword="EntityReference" /></term><description> Il nome dell'entità di riferimento.  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> La destinazione dell'istruzione di elaborazione.  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> La stringa letterale <see langword="xml" />.  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 Nell'esempio seguente viene letto un file XML e vengono visualizzati i nodi.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 Nell'esempio viene utilizzato il file, `items.xml`, come input.  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se supportare gli spazi dei nomi.</summary>
        <value>
          <see langword="true" /> per supportare lo spazio dei nomi; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'URI dello spazio dei nomi, come definito dalla specifica degli spazi dei nomi del World Wide Web Consortium (W3C), del nodo su cui è posizionato il lettore.</summary>
        <value>URI dello spazio dei nomi del nodo corrente; in caso contrario, una stringa vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È pertinente per questa proprietà `Element` e `Attribute` solo i nodi.  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 Nell'esempio seguente viene letto un frammento XML.  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Xml.XmlNameTable" /> associato all'implementazione.</summary>
        <value>
          <see langword="XmlNameTable" /> che consente di ottenere la versione atomizzata di un stringa all'interno di un nodo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Tutti i nomi di nodo e di attributo restituiti da <xref:System.Xml.XmlValidatingReader> vengono suddivise utilizzando il `NameTable`. Quando lo stesso nome viene restituito più volte (ad esempio, `Customer`), lo stesso `String` verrà restituito l'oggetto per il nome specificato. In questo modo è possibile scrivere codice efficace che i confronti per queste stringhe anziché i confronti di stringhe costosa dell'oggetto.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tipo di nodo corrente.</summary>
        <value>Uno dei valori di <see cref="T:System.Xml.XmlNodeType" /> che rappresenta il tipo del nodo corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Questa proprietà non restituisce mai i seguenti `XmlNodeType` tipi: `Document`, `DocumentFragment`, `Entity`, o `Notation`.  
  
   
  
## Examples  
 Nell'esempio seguente viene letto un file XML e vengono visualizzati i nodi.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 Nell'esempio viene utilizzato il file, `items.xml`, come input.  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il prefisso dello spazio dei nomi associato al nodo corrente.</summary>
        <value>Prefisso dello spazio dei nomi associato al nodo corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 Nell'esempio seguente viene letto un frammento XML.  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public override char QuoteChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il carattere punto interrogativo usato per delimitare il valore di un nodo attributo.</summary>
        <value>Carattere virgoletta (" o ') usato per delimitare il valore del nodo di un attributo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà si applica solo a un nodo attributo.  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legge il nodo successivo dal flusso.</summary>
        <returns>
          <see langword="true" /> se è stata completata la lettura del nodo successivo; <see langword="false" /> se non esistono altri nodi da leggere.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Quando un lettore viene prima creato e inizializzato, non è disponibile alcuna informazione. È necessario chiamare `Read` per leggere il primo nodo.  
  
   
  
## Examples  
 Nell'esempio seguente viene letto un file XML e viene visualizzato ogni nodo.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 Nell'esempio viene utilizzato il file, `items.xml`, come input.  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public override bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ReadAttributeValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Analizza il valore dell'attributo in uno o più nodi <see langword="Text" />, <see langword="EntityReference" /> o <see langword="EndEntity" />.</summary>
        <returns>
          <see langword="true" /> se sono presenti nodi da restituire.  
  
 <see langword="false" /> se il lettore non è posizionato in corrispondenza di un nodo attributo quando viene effettuata la chiamata iniziale oppure se è stato letto il valore di tutti gli attributi.  
  
 Un attributo vuoto, quale <c>misc=""</c>, restituisce <see langword="true" /> con un singolo nodo il cui valore è String.Empty.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Utilizzare questo metodo dopo la chiamata <xref:System.Xml.XmlValidatingReader.MoveToAttribute%2A> per leggere i nodi di riferimento di entità o di testo che costituiscono il valore dell'attributo. Il <xref:System.Xml.XmlReader.Depth%2A> dei nodi di valore di attributo è più la profondità del nodo attributo. Il `Depth` incrementa e decrementa di un'unità quando esegue l'istruzione in e dai riferimenti alle entità generale.  
  
 Ad esempio, si supponga il seguente codice XML: `<test name="a &b; c"/>`  
  
 in cui l'entità `b` viene definito nella definizione del tipo di documento (DTD), come segue: `<!ENTITY b "123">`  
  
 Se <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> è impostato su `ExpandCharEntities`, il codice c# seguente restituisce il valore dell'attributo come due nodi di testo e il nodo di riferimento di un'entità:  
  
```csharp  
reader.MoveToAttribute("name");  
  while (reader.ReadAttributeValue())  
  {  
  if (reader.NodeType == XmlNodeType.Text)  
  {  
  // at this point reader.Value == "a " or " c"  
  }  
  else if (reader.NodeType == XmlNodeType.EntityReference)  
  {  
  // at this point reader.Name == "b"  
  reader.ResolveEntity();  
  while (reader.ReadAttributeValue() &&  
  reader.NodeType != XmlNodeType.EndEntity)  
  {  
  // reader.Value == "123"  
  }  
  }  
    }  
```  
  
   
  
## Examples  
 Nell'esempio seguente viene letto un attributo con nodi testo ed entità di riferimento.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Buffer in cui copiare il testo risultante. Questo valore non può essere <see langword="null" />.</param>
        <param name="index">Offset nel buffer a partire da cui iniziare a copiare il risultato.</param>
        <param name="count">Numero massimo di byte da copiare nel buffer. Il numero effettivo di byte copiati viene restituito da questo metodo.</param>
        <summary>Legge il contenuto e restituisce byte binari decodificati Base64.</summary>
        <returns>Numero di byte scritti nel buffer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per ulteriori informazioni, vedere la sezione Note del <xref:System.Xml.XmlReader> pagina di riferimento...  
  
 Questo metodo streaming del contenuto, decodifica il contenuto Base64 e restituisce i byte binari decodificati (ad esempio, una codifica Base64 inline immagine GIF) nel buffer. Questo metodo può essere chiamato successivamente per leggere i flussi di grandi dimensioni di testo incorporato. Per ulteriori informazioni, vedere RFC 1521, "parte MIME (Multipurpose Internet Mail Extensions) uno: meccanismi per la specifica e che descrive il formato dei corpi dei messaggi Internet". È possibile ottenere RFC dal [richiesta per il sito Web di commenti](https://www.rfc-editor.org).  
  
> [!NOTE]
>  Non è necessario accedere a proprietà del visualizzatore tra le chiamate al <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> metodo fino a quando il metodo restituisce il valore 0.  
  
 Questo metodo presenta il seguente comportamento:  
  
-   <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> una volta raggiunta la fine del flusso di byte su cui è stato eseguito, restituisce il valore 0. Il lettore è posizionato sul primo nodo non di contenuto.  
  
-   Se è richiesto un valore minore o uguale al numero dei byte vengono lasciati nel flusso, il lettore resta nella posizione corrente.  
  
-   <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> non è supportato nei tipi di nodo XML seguenti: Element, XmlDeclaration, None, Document, DocumentType, Notation, entità e DocumentFragment.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore di <paramref name="buffer" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> non è supportato nel nodo corrente.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice nel buffer oppure la somma di indice e numero è superiore alla dimensione del buffer allocato.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Buffer in cui copiare il testo risultante. Questo valore non può essere <see langword="null" />.</param>
        <param name="index">Offset nel buffer a partire da cui iniziare a copiare il risultato.</param>
        <param name="count">Numero massimo di byte da copiare nel buffer. Il numero effettivo di byte copiati viene restituito da questo metodo.</param>
        <summary>Legge il contenuto e restituisce i byte binari decodificati BinHex.</summary>
        <returns>Numero di byte scritti nel buffer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per ulteriori informazioni, vedere la sezione Note del <xref:System.Xml.XmlReader> pagina di riferimento...  
  
 Questo metodo streaming del contenuto, decodifica il contenuto BinHex e restituisce i byte binari decodificati (ad esempio, un BinHex immagine GIF codificata inline) nel buffer. Questo metodo può essere chiamato successivamente per leggere i flussi di grandi dimensioni di testo incorporato.  
  
> [!NOTE]
>  Non è necessario accedere a proprietà del visualizzatore tra le chiamate al <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> metodo fino a quando il metodo restituisce il valore 0.  
  
 Questo metodo presenta il seguente comportamento:  
  
-   <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> una volta raggiunta la fine del flusso di byte su cui è stato eseguito, restituisce il valore 0. Il lettore è posizionato sul primo nodo non di contenuto.  
  
-   Se è richiesto un valore minore o uguale al numero dei byte vengono lasciati nel flusso, il lettore resta nella posizione corrente.  
  
-   <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> non è supportato nei tipi di nodo XML seguenti: Element, XmlDeclaration, None, Document, DocumentType, Notation, entità e DocumentFragment.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore di <paramref name="buffer" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> non è supportato nel nodo corrente.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice nel buffer oppure la somma di indice e numero è superiore alla dimensione del buffer allocato.</exception>
        <exception cref="T:System.NotSupportedException">L'implementazione di <see cref="T:System.Xml.XmlValidatingReader" /> non supporta questo metodo.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Buffer in cui copiare il testo risultante. Questo valore non può essere <see langword="null" />.</param>
        <param name="index">Offset nel buffer a partire da cui iniziare a copiare il risultato.</param>
        <param name="count">Numero massimo di byte da copiare nel buffer. Il numero effettivo di byte copiati viene restituito da questo metodo.</param>
        <summary>Legge l'elemento e decodifica il contenuto Base64.</summary>
        <returns>Numero di byte scritti nel buffer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Questo metodo legge il contenuto dell'elemento, lo decodifica mediante la codifica Base64 e restituisce i byte binari decodificati (ad esempio, una codifica Base64 inline immagine GIF) nel buffer. Per ulteriori informazioni, vedere RFC 1521, "parte MIME (Multipurpose Internet Mail Extensions) uno: meccanismi per la specifica e che descrive il formato dei corpi dei messaggi Internet". È possibile ottenere RFC dal [richiesta per il sito Web di commenti](https://www.rfc-editor.org).  
  
 Questo metodo può leggere solo elementi con contenuto semplice. L'elemento può contenere testo, gli spazi vuoti, gli spazi vuoti significativi, sezioni CDATA, commenti e istruzioni di elaborazione. Contiene anche i riferimenti alle entità, vengono espansi automaticamente. L'elemento non può avere elementi figlio.  
  
 Questo metodo è molto simile al <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> metodo eccezione del fatto che può essere chiamato solo su tipi di nodi elemento.  
  
 Se il `count` valore è maggiore del numero di byte nel documento, o se è uguale al numero di byte nel documento, il <xref:System.Xml.XmlValidatingReader> legge tutti i byte rimanenti del documento e restituisce il numero di byte letti. Alla successiva <xref:System.Xml.XmlValidatingReader> chiamata al metodo restituisce zero e sposta il lettore al nodo successivo il <xref:System.Xml.XmlNodeType.EndElement>.  
  
 Se si chiama <xref:System.Xml.XmlValidatingReader.Read%2A> prima di tutto il contenuto dell'elemento è stato elaborato, il lettore potrebbe comportarsi come se fosse stato utilizzato il primo contenuto e quindi la <xref:System.Xml.XmlValidatingReader.Read%2A> metodo è stato chiamato. Ciò significa che il lettore leggerà tutto il testo fino a quando non viene rilevato l'elemento finale. Verrà quindi leggere il nodo di tag di fine, leggere il nodo successivo e quindi posizionarsi sul successivo nodo successivo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore di <paramref name="buffer" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Il nodo corrente non è un nodo elemento.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice nel buffer oppure la somma di indice e numero è superiore alla dimensione del buffer allocato.</exception>
        <exception cref="T:System.NotSupportedException">L'implementazione di <see cref="T:System.Xml.XmlValidatingReader" /> non supporta questo metodo.</exception>
        <exception cref="T:System.Xml.XmlException">L'elemento include contenuto misto.</exception>
        <exception cref="T:System.FormatException">Il contenuto non può essere convertito nel tipo richiesto.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Buffer in cui copiare il testo risultante. Questo valore non può essere <see langword="null" />.</param>
        <param name="index">Offset nel buffer a partire da cui iniziare a copiare il risultato.</param>
        <param name="count">Numero massimo di byte da copiare nel buffer. Il numero effettivo di byte copiati viene restituito da questo metodo.</param>
        <summary>Legge l'elemento e decodifica il contenuto BinHex.</summary>
        <returns>Numero di byte scritti nel buffer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Questo metodo legge il contenuto dell'elemento, lo decodifica mediante la codifica BinHex e restituisce i byte binari decodificati (ad esempio, un BinHex immagine GIF codificata inline) nel buffer.  
  
 Questo metodo può leggere solo elementi con contenuto semplice. L'elemento può contenere testo, gli spazi vuoti, gli spazi vuoti significativi, sezioni CDATA, commenti e istruzioni di elaborazione. Contiene anche i riferimenti alle entità, vengono espansi automaticamente. L'elemento non può avere elementi figlio.  
  
 Questo metodo è molto simile al <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> metodo eccezione del fatto che può essere chiamato solo su tipi di nodi elemento.  
  
 Se il `count` valore è maggiore del numero di byte nel documento, o se è uguale al numero di byte nel documento, il <xref:System.Xml.XmlValidatingReader> legge tutti i byte rimanenti del documento e restituisce il numero di byte letti. Alla successiva <xref:System.Xml.XmlValidatingReader> chiamata al metodo restituisce zero e sposta il lettore al nodo successivo il <xref:System.Xml.XmlNodeType.EndElement>.  
  
 Se si chiama <xref:System.Xml.XmlValidatingReader.Read%2A> prima di tutto il contenuto dell'elemento è stato elaborato, il lettore potrebbe comportarsi come se fosse stato utilizzato il primo contenuto e quindi la <xref:System.Xml.XmlValidatingReader.Read%2A> metodo è stato chiamato. Ciò significa che il lettore leggerà tutto il testo fino a quando non viene rilevato l'elemento finale. Verrà quindi leggere il nodo di tag di fine, leggere il nodo successivo e quindi posizionarsi sul successivo nodo successivo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore di <paramref name="buffer" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Il nodo corrente non è un nodo elemento.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">L'indice nel buffer oppure la somma di indice e numero è superiore alla dimensione del buffer allocato.</exception>
        <exception cref="T:System.NotSupportedException">L'implementazione di <see cref="T:System.Xml.XmlValidatingReader" /> non supporta questo metodo.</exception>
        <exception cref="T:System.Xml.XmlException">L'elemento include contenuto misto.</exception>
        <exception cref="T:System.FormatException">Il contenuto non può essere convertito nel tipo richiesto.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Reader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Reader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlReader Reader" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Reader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reader As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlReader ^ Reader { System::Xml::XmlReader ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Xml.XmlReader" /> usato per costruire <see langword="XmlValidatingReader" />.</summary>
        <value>Oggetto <see langword="XmlReader" /> specificato nel costruttore.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Questa proprietà consente all'utente di accedere alle proprietà specifiche per il lettore specificato. Restituisce un oggetto tipizzato `XmlReader`. L'utente deve eseguire una query per il tipo prima di eseguire il cast.  
  
 La modifica dello stato del lettore restituito (ad esempio, chiamando uno dei metodi di lettura) può causare risultati imprevisti.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public override System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene lo stato del lettore.</summary>
        <value>Uno dei valori di <see cref="T:System.Xml.ReadState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public override string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legge il contenuto di un nodo elemento o testo come stringa.</summary>
        <returns>Contenuto del nodo elemento o testo. Può essere una stringa vuota se il lettore non è posizionato su un nodo elemento o testo oppure se non ci sono più contenuti di testo da restituire nel contesto corrente.  
  
 <block subset="none" type="note"><para>  
 Il nodo di testo può essere anche rappresentato da un nodo elemento o da un nodo testo di un attributo.  
  
</para></block></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Se posizionato su un elemento, `ReadString` concatena tutti testo, spazio vuoto significativo, lo spazio vuoto e i tipi di nodo sezione CDATA e restituisce i dati come il contenuto dell'elemento concatenati. Il lettore si interrompe quando viene rilevato alcun markup, comprensivo di commenti e istruzioni di elaborazione. Questa situazione può verificarsi in un modello a contenuto misto oppure durante la lettura di un tag di fine elemento.  
  
 Se è posizionato su un nodo di testo, `ReadString` esegue la stessa concatenazione dal nodo di testo per il tag di fine elemento. Se il lettore è posizionato in corrispondenza di un nodo di tipo text di un attributo, il metodo `ReadString` funzionerà come quando il lettore è posizionato in corrispondenza del tag di inizio dell'elemento, restituendo tutti i nodi di tipo text dell'elemento concatenati.  
  
 Il <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> proprietà determina come `ReadString` funziona nel modo seguente:  
  
|Valore|Descrizione|  
|-----------|-----------------|  
|ExpandEntities|Restituisce espanso carattere e le entità generali. Questa è l'impostazione predefinita.|  
|ExpandCharEntities|Restituisce il contenuto di testo fino a un riferimento di entità generale escluso. Ciò significa che un'entità generale provoca ReadString arrestare. È necessario chiamare `Read` per Esegui istruzione/routine del riferimento all'entità.|  
  
   
  
## Examples  
 Nell'esempio seguente consente di visualizzare il contenuto di ciascun elemento di testo.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 Nell'esempio viene utilizzato il file, `elems.xml`, come input.  
  
 [!code-xml[Classic WebData XmlValidatingReader.IsEmptyElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadTypedValue">
      <MemberSignature Language="C#" Value="public object ReadTypedValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ReadTypedValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadTypedValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTypedValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ReadTypedValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene il tipo Common Language Runtime per il tipo XSD (XML Schema Definition Language) specificato.</summary>
        <returns>Tipo Common Language Runtime per il tipo XML Schema specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Ad esempio, se il tipo di schema è definito come `xsd:int`, il tipo di runtime `int32` viene restituito per l'oggetto. È possibile verificarlo utilizzando il <xref:System.Object.GetType%2A> metodo ed eseguire il cast di conseguenza. Il <xref:System.Xml.XmlValidatingReader.ReadTypedValue%2A> metodo restituisce sempre un tipo derivato dalla <xref:System.Object> classe. Non restituisce mai il <xref:System.Object> tipo.  
  
 Se il lettore è posizionato su un attributo, questo metodo restituisce l'oggetto tipizzato runtime, ma non modifica la posizione del lettore. Se il lettore è posizionato su un elemento, `ReadTypedValue` legge qualsiasi CDATA, text, gli spazi vuoti, gli spazi vuoti significativi e i nodi di commento, restituisce l'oggetto tipizzato runtime e posiziona il lettore sul tag di fine. Tutti i tipi che non dispone di un mapping diretto, ad esempio `NMTOKENS`, vengono restituite come stringhe.  
  
> [!NOTE]
>  Se <xref:System.Xml.XmlValidatingReader.ValidationType%2A> è stata impostata per ValidationType, informazioni sul tipo di dati non viene forniti da schemi o definizioni di tipo di documento (DTD).  
  
> [!CAUTION]
>  Dopo la chiamata <xref:System.Xml.XmlValidatingReader.Close%2A>, `ReadTypedValue` restituirà `null`.  
  
   
  
## Examples  
 L'esempio seguente mostra le informazioni sul tipo per ognuno degli elementi nel documento XML.  
  
 [!code-cpp[XmlValidatingReader.SchemaType#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CPP/schematype.cpp#1)]
 [!code-csharp[XmlValidatingReader.SchemaType#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CS/schematype.cs#1)]
 [!code-vb[XmlValidatingReader.SchemaType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.SchemaType/VB/schematype.vb#1)]  
  
 L'esempio Usa i seguenti file di input.  
  
 `booksSchema.xml`  
  
 [!code-xml[XmlValidatingReader.SchemaType#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/booksschema.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.SchemaType#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public override void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResolveEntity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Risolve il riferimento all'entità per i nodi <see langword="EntityReference" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Se il lettore è posizionato su un `EntityReference` nodo (`XmlNodeType.EntityReference`), se <xref:System.Xml.XmlValidatingReader.Read%2A> viene chiamato dopo la chiamata di questo metodo, il testo di sostituzione di entità viene analizzato. Al termine del testo di sostituzione dell'entità, un `EndEntity` nodo viene restituito per chiudere l'ambito di riferimento di entità.  
  
> [!NOTE]
>  Dopo aver chiamato questo metodo, se l'entità è parte di un valore di attributo, è necessario chiamare <xref:System.Xml.XmlValidatingReader.ReadAttributeValue%2A> al passaggio all'interno dell'entità.  
  
   
  
## Examples  
 L'esempio seguente usa `ResolveEntity` per espandere un'entità generale.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/VB/source.vb#1)]  
  
 Nell'esempio viene utilizzato il file, `book1.xml`, come input.  
  
 [!code-xml[Classic WebData XmlValidatingReader.ResolveEntity Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il lettore non è posizionato in corrispondenza di un nodo <see langword="EntityReference" />.</exception>
        <altmember cref="T:System.Xml.EntityHandling" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaCollection Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaCollection Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemaCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaCollection ^ Schemas { System::Xml::Schema::XmlSchemaCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> da usare per la convalida.</summary>
        <value>Oggetto <see langword="XmlSchemaCollection" /> da usare per la convalida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Il `XmlSchemaCollection` contiene precaricati (XML-Data Reduced) e XML Schema di definizione degli schemi XSD (linguaggio). Questa proprietà fornisce l'accesso in lettura alla cache degli schemi e consente la convalida senza dover caricare nuovamente ogni volta gli schemi. Il lettore non aggiunge nulla per il `XmlSchemaCollection`.  
  
 Se il `XmlSchemaCollection` include uno schema XML (XSD) contenente `include` o `import` elementi che fanno riferimento altri spazi dei nomi, gli schemi per altri spazi dei nomi vengono caricati solo ai fini della convalida. A meno che questi schemi sono stati aggiunti esplicitamente all'insieme di schemi, non saranno accessibili mediante le proprietà o i metodi di raccolta. Ad esempio, se la raccolta contiene il file di schema `a.xsd`, che contiene un riferimento al file di schema `b.xsd`, è necessario aggiungere `b.xsd` alla raccolta di schemi prima di poter accedere utilizzando uno dei metodi di raccolta o di proprietà.  
  
 Quando il `XmlSchemaCollection` è possibile accedere tramite il `Schemas` proprietà, il <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A?displayProperty=nameWithType> metodo utilizza il <xref:System.Xml.XmlResolver> specificato da di <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> proprietà.  
  
> [!NOTE]
>  È necessario aggiungere gli schemi di `XmlSchemaCollection` prima del primo `Read` chiamare.  
  
   
  
## Examples  
 Nell'esempio seguente viene convalidato tre file XML utilizzando gli schemi memorizzati in XmlSchemaCollection.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/VB/source.vb#1)]  
  
 L'esempio utilizza i seguenti cinque file di input:  
  
 `booksSchema.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#2)]  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#3)]  
  
 `newbooks.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#4](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#4)]  
  
 `books.xsd`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#5](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#5)]  
  
 `schema1.xdr`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#6](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="SchemaType">
      <MemberSignature Language="C#" Value="public object SchemaType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SchemaType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.SchemaType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaType As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SchemaType { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto di tipo schema.</summary>
        <value>
          <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> o <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> a seconda che il valore del nodo sia un tipo XSD (XML Schema Definition Language) incorporato o un tipo simpleType o complexType definito dall'utente; <see langword="null" /> se il nodo corrente non ha nessun tipo di schema.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 L'utente deve verificare il tipo restituito. Ad esempio,  
  
```csharp  
object obj = vreader.SchemaType;  
 if (obj is XmlSchemaType)  
 {  
   XmlSchemaType st = (XmlSchemaType)obj;  
   // use XmlSchemaType object  
 }  
 if (obj is XmlSchemaDatatype)  
 {  
   XmlSchemaDatatype sd = (XmlSchemaDatatype)obj;  
   Type vt = sd.ValueType;  
   // use XmlSchemaDatatype object  
       }  
```  
  
 Se viene eseguita la convalida di XML Schema, il `XmlSchemaType` o `XmlSchemaDatatype` corrisponde all'elemento corrente da leggere. Se viene eseguita la definizione di tipo documento (la convalida DTD), questa proprietà restituisce `null`.  
  
 `XmlSchemaDatatype` viene restituito se l'elemento corrente, o l'attributo è un tipo semplice che è possibile specificare vincoli di convalida speciali sui tipi semplici, ad esempio min e max.  
  
 `XmlSchemaSimpleType` viene restituito se l'elemento corrente, o l'attributo è un elemento simpleType definito dall'utente.  
  
 `XmlSchemaComplexType` viene restituito se l'elemento corrente è un elemento complexType definito dall'utente. Questo tipo non può essere restituito dagli attributi.  
  
> [!NOTE]
>  Se <xref:System.Xml.XmlValidatingReader.ValidationType%2A> è stata impostata alcuna informazione sul tipo di dati non è ValidationType, forniti da schemi o DTD.  
  
> [!CAUTION]
>  Dopo la chiamata <xref:System.Xml.XmlValidatingReader.Close%2A>, SchemaType restituirà Null.  
  
   
  
## Examples  
 L'esempio seguente mostra le informazioni sul tipo per ognuno degli elementi nel documento XML.  
  
 [!code-cpp[XmlValidatingReader.SchemaType#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CPP/schematype.cpp#1)]
 [!code-csharp[XmlValidatingReader.SchemaType#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CS/schematype.cs#1)]
 [!code-vb[XmlValidatingReader.SchemaType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.SchemaType/VB/schematype.vb#1)]  
  
 L'esempio Usa i seguenti file di input.  
  
 `booksSchema.xml`  
  
 [!code-xml[XmlValidatingReader.SchemaType#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/booksschema.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.SchemaType#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.GetNamespacesInScope">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IDictionary&lt;string,string&gt; IXmlNamespaceResolver.GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String) Implements IXmlNamespaceResolver.GetNamespacesInScope" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System::Xml::XmlNamespaceScope scope) = System::Xml::IXmlNamespaceResolver::GetNamespacesInScope;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="scope">Oggetto <see cref="T:System.Xml.XmlNamespaceScope" /> che identifica l'ambito del lettore.</param>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
        <returns>Oggetto T:System.Collections.IDictionary che identifica gli spazi dei nomi in ambito.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Xml.XmlValidatingReader> a un'interfaccia <xref:System.Xml.IXmlNamespaceResolver>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupNamespace">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupNamespace (prefix As String) As String Implements IXmlNamespaceResolver.LookupNamespace" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupNamespace(System::String ^ prefix) = System::Xml::IXmlNamespaceResolver::LookupNamespace;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefisso dello spazio dei nomi.</param>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
        <returns>Valore stringa contenente l'URI dello spazio dei nomi associato al prefisso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Xml.XmlValidatingReader> a un'interfaccia <xref:System.Xml.IXmlNamespaceResolver>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupPrefix">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupPrefix (string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupPrefix(string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupPrefix (namespaceName As String) As String Implements IXmlNamespaceResolver.LookupPrefix" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupPrefix(System::String ^ namespaceName) = System::Xml::IXmlNamespaceResolver::LookupPrefix;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceName">Spazio dei nomi associato al prefisso.</param>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
        <returns>Valore stringa che contiene il prefisso dello spazio dei nomi associato a <paramref name="namespaceName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Xml.XmlValidatingReader> a un'interfaccia <xref:System.Xml.IXmlNamespaceResolver>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlValidatingReader.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Imposta un gestore eventi per la ricezione di informazioni sugli errori di convalida di DTD, schemi XDR e schemi XSD (XML Schema Definition Language).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Questi eventi si verificano durante <xref:System.Xml.XmlValidatingReader.Read%2A> e solo se un <xref:System.Xml.XmlValidatingReader.ValidationType%2A> di DTD, XDR, Schema o Auto è specificato.  
  
 Se non viene fornito alcun gestore eventi, un <xref:System.Xml.XmlException> viene generata un'eccezione al primo errore di convalida (livello di gravità è uguale a XmlSeverityType).  
  
> [!NOTE]
>  Se un elemento segnala un errore di convalida, il resto del modello di contenuto per questo elemento non viene convalidato, tuttavia, viene convalidati i relativi elementi figlio. Il lettore segnala solo il primo errore per un determinato elemento.  
  
 Il gestore di callback può utilizzare il <xref:System.Xml.Schema.ValidationEventArgs.Severity%2A?displayProperty=nameWithType> proprietà per garantire che un documento di istanza XML viene convalidato rispetto a uno schema. Il `Severity` proprietà consente di distinguere tra gli errori di convalida (gravità uguale a XmlSeverityType) che indicano un errore irreversibile e avvisi di convalida (livello di gravità è uguale a XmlSeverityType) che indicano che non sono presenti schemi sono disponibili informazioni.  
  
   
  
## Examples  
 Nell'esempio seguente un file su uno Schema XML viene convalidato.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/VB/source.vb#1)]  
  
 L'esempio utilizza i due file di input seguenti:  
  
 `notValidXSD.xml` (Il `xsi:schemaLocation` attributo identifica lo Schema XML per il lettore.)  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationEventHandler Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/XML/source.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationEventHandler Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/XML/source.xml#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ValidationType">
      <MemberSignature Language="C#" Value="public System.Xml.ValidationType ValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ValidationType ValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.ValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationType As ValidationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ValidationType ValidationType { System::Xml::ValidationType get(); void set(System::Xml::ValidationType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ValidationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica il tipo di convalida da eseguire.</summary>
        <value>Uno dei valori di <see cref="T:System.Xml.ValidationType" />. Se questa proprietà non viene impostata, per impostazione predefinita verrà usato ValidationType.Auto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Questa proprietà deve essere impostata prima della prima chiamata a <xref:System.Xml.XmlValidatingReader.Read%2A>. Impostando questa proprietà su ValidationType crea un lettore non di convalida.  
  
 Se sono necessari (DTD) o schemi esterni per la convalida, il <xref:System.Xml.XmlResolver> viene utilizzato.  
  
   
  
## Examples  
 Nell'esempio seguente convalida due file.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/VB/source.vb#1)]  
  
 L'esempio Usa i quattro file di input seguenti:  
  
 `notValid.xml` (La "x-schema:" prefisso identifica lo schema XML-Data Reduced (XDR) per il lettore.)  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#2)]  
  
 `schema1.xdr`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#3)]  
  
 `cdDTD.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#4](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#4)]  
  
 `book1.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#5](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà è stata impostata una volta eseguita la chiamata al metodo Read.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore di testo del nodo corrente.</summary>
        <value>Il valore restituito dipende dalla proprietà <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> del nodo. La tabella seguente elenca i tipi di nodo che hanno un valore da restituire. Tutti gli altri tipi di nodo restituiscono String.Empty.  
  
 <list type="table"><listheader><term> Tipo di nodo  
  
 </term><description> valore  
  
 </description></listheader><item><term><see langword="Attribute" /></term><description> Il valore dell'attributo.  
  
 </description></item><item><term><see langword="CDATA" /></term><description> Il contenuto della sezione CDATA.  
  
 </description></item><item><term><see langword="Comment" /></term><description> Il contenuto del commento.  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> Il sottoinsieme interno.  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> L'intero contenuto, esclusa la destinazione.  
  
 </description></item><item><term><see langword="SignificantWhitespace" /></term><description> Lo spazio vuoto tra markup in un modello a contenuto misto.  
  
 </description></item><item><term><see langword="Text" /></term><description> Il contenuto del nodo di testo.  
  
 </description></item><item><term><see langword="Whitespace" /></term><description> Lo spazio vuoto tra markup.  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> Il contenuto della dichiarazione.  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 Nell'esempio seguente viene letto un file XML e viene visualizzato ogni nodo.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 Nell'esempio viene utilizzato il file, `items.xml`, come input.  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'ambito <see langword="xml:lang" /> corrente.</summary>
        <value>Ambito <see langword="xml:lang" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Questa proprietà rappresenta l'ambito xml: lang entro il quale si trova il nodo corrente. Ad esempio, ecco un frammento XML con `xml:lang` impostate su US Inglese, l'elemento radice:  
  
```xml  
<root xml:lang="en-us">   
<name>Fred</name>   
</root>   
```  
  
 Quando il lettore è posizionato in corrispondenza di `name` elemento, è possibile utilizzare questa proprietà per verificare che si trovi nell'ambito di un attributo inglese americano Inglese `xml:lang` attributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Imposta l'oggetto <see cref="T:System.Xml.XmlResolver" /> usato per risolvere i riferimenti delle posizioni di DTD (Document Type Definition) e di schemi esterni. L'oggetto <see langword="XmlResolver" /> viene usato anche per gestire eventuali operazioni di importazione o per includere gli elementi che si trovano negli schemi XSD (XML Schema Definition Language).</summary>
        <value>Oggetto <see langword="XmlResolver" /> da usare. Se impostato su <see langword="null" />, le risorse esterne non verranno risolte.  
  
 Nella versione 1.1 di [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], per specificare un oggetto <see langword="XmlResolver" /> è necessario che il chiamate sia completamente attendibile.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 Il `XmlResolver` viene utilizzato per caricare le DTD, entità o schema necessario per completare il processo di convalida.  
  
 Questa proprietà può essere impostata in qualsiasi momento e rendere effettive le modifiche dopo il successivo <xref:System.Xml.XmlValidatingReader.Read%2A> chiamare. Se questa proprietà è impostata su `null`, il lettore si presuppone che l'utente non desidera risolvere i riferimenti esterni. In questo caso, il lettore convaliderà solo alle risorse interne, se è presente la risorsa.  
  
 Nella versione 1.1 di [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] , se questa proprietà non è impostata, il livello di attendibilità dell'applicazione determina il comportamento predefinito.  
  
 `Fully trusted code:` Il visualizzatore utilizza un valore predefinito <xref:System.Xml.XmlUrlResolver> senza credenziali utente. Se è necessaria l'autenticazione per accedere a una risorsa di rete, utilizzare il `XmlResolver` proprietà per specificare un `XmlResolver` con le credenziali necessarie.  
  
 `Semi-trusted code:` Il `XmlResolver` è impostata su `null`. Risorse esterne non vengono risolti.  
  
 Quando si convalida l'utilizzo di schemi, è possibile evitare il processo di caricamento, fornendo un <xref:System.Xml.Schema.XmlSchemaCollection> utilizzando il <xref:System.Xml.XmlValidatingReader.Schemas%2A> proprietà.  
  
   
  
## Examples  
 L'esempio seguente usa il `XmlResolver` proprietà per specificare le credenziali necessarie per accedere al file DTD in rete.  
  
 [!code-cpp[XmlValidatingReader.XmlResolver#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.XmlResolver/CPP/vrdr_resolver.cpp#1)]
 [!code-csharp[XmlValidatingReader.XmlResolver#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.XmlResolver/CS/vrdr_resolver.cs#1)]
 [!code-vb[XmlValidatingReader.XmlResolver#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.XmlResolver/VB/vrdr_resolver.vb#1)]  
  
 L'esempio Usa i seguenti file come input.  
  
 `book5.xml`  
  
 [!code-xml[XmlValidatingReader.XmlResolver#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.XmlResolver/XML/book5.xml#2)]  
  
 `books.dtd`  
  
 [!code-xml[XmlValidatingReader.XmlResolver#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.XmlResolver/XML/books.dtd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'ambito <see langword="xml:space" /> corrente.</summary>
        <value>Uno dei valori di <see cref="T:System.Xml.XmlSpace" />. Se non esiste alcun ambito <see langword="xml:space" />, alla proprietà viene applicata l'impostazione predefinita <see langword="XmlSpace.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.XmlValidatingReader> classe è obsoleta in [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. È possibile creare un oggetto di convalida <xref:System.Xml.XmlReader> istanza utilizzando il <xref:System.Xml.XmlReaderSettings> classe e <xref:System.Xml.XmlReader.Create%2A> metodo. Per altre informazioni, vedere la sezione Note della pagina di riferimento <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
  </Members>
</Type>