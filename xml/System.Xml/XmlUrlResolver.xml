<Type Name="XmlUrlResolver" FullName="System.Xml.XmlUrlResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a64a965821606bddfd1d49e665240eadb280c47d" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="it-IT" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53224423" /></Metadata><TypeSignature Language="C#" Value="public class XmlUrlResolver : System.Xml.XmlResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlUrlResolver extends System.Xml.XmlResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlUrlResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlUrlResolver&#xA;Inherits XmlResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlUrlResolver : System::Xml::XmlResolver" />
  <TypeSignature Language="F#" Value="type XmlUrlResolver = class&#xA;    inherit XmlResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Risolve risorse XML esterne denominate da un URI (Uniform Resource Identifier).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlUrlResolver> viene usato per risolvere risorse XML esterne, ad esempio entità, document type definition (DTD) o schemi. È inoltre usato per processo di inclusione e importazione di elementi disponibili in fogli di stile di foglio di stile XSL (Extensible Language) o schemi di XML Schema definition language (XSD).  
  
 <xref:System.Xml.XmlUrlResolver> è l'impostazione predefinita per tutte le classi di <xref:System.Xml> dello spazio dei nomi. Supporta i protocolli `file://` e `http://` e le richieste dalla classe <xref:System.Net.WebRequest>.  
  
> [!IMPORTANT]
>  Gli oggetti <xref:System.Xml.XmlUrlResolver> possono contenere informazioni sensibili quali le credenziali utente. È necessario prestare attenzione quando memorizza nella cache <xref:System.Xml.XmlUrlResolver> gli oggetti e non deve essere passato <xref:System.Xml.XmlUrlResolver> oggetti da un componente non attendibile.  
  
## <a name="resolving-dtds"></a>Risolvere le DTD  
 Se un lettore XML (<xref:System.Xml.XmlReader>) sta leggendo un file XML che contiene una DTD esterna, viene chiamato il <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=nameWithType> metodo per ottenere una rappresentazione del flusso nella DTD. Se l'URI della DTD è un URI relativo, il lettore XML chiama il <xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=nameWithType> (metodo) e restituisce un URI assoluto per il dato `relativeUri` e `baseURi` parametri. Se il <xref:System.Xml.XmlUrlResolver> non riesce a risolvere l'URI restituisce `null`.  
  
 Il metodo <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> utilizza le informazioni contenute nella proprietà <xref:System.Xml.XmlUrlResolver.Credentials%2A> in base alle necessità per ottenere l'accesso alla risorsa. Per motivi di sicurezza, non è possibile accedere a questa proprietà tramite la funzione di accesso `get`. Durante la sovrascrittura <xref:System.Xml.XmlResolver>, **GetEntity** è il metodo che utilizza le informazioni sulle credenziali nel **credenziali** proprietà.  
  
 Il metodo di risoluzione di tutte le altre risorse XML è molto simile a quello utilizzato per risolvere le DTD. <xref:System.Xml.XmlResolver> negozia la connessione con la risorsa esterna e restituisce un <xref:System.IO.Stream> rappresentazione del contenuto. L'oggetto che effettua la chiamata a <xref:System.Xml.XmlResolver> interpreta il flusso.  
  
## <a name="extending-the-xmlurlresolver-class"></a>Estensione della classe XmlUrlResolver  
 In base al comportamento predefinito, la classe <xref:System.Xml.XmlUrlResolver> risolve una risorsa dei dati XML dalla relativa origine, non dalla cache. In alcuni casi la risoluzione di una risorsa dei dati dalla cache può migliorare le prestazioni di un'applicazione in quanto consente di evitare un'operazione di lettura dal server delle risorse dei dati. È tuttavia necessario soppesare in questo caso i vantaggi ottenibili in termini di prestazioni con la necessità di disporre di contenuto sempre aggiornato.  
  
 L'esempio seguente estende <xref:System.Xml.XmlUrlResolver> e compila una nuova classe, `XmlCachingResolver`, per recuperare le risorse dalla cache. ovvero eseguendo l'override della proprietà <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType> e del metodo <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType>.  
  
 [!code-csharp[XmlCachingResolver_ex#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlCachingResolver_ex/CS/XmlCachingResolver_ex.cs#1)]
 [!code-vb[XmlCachingResolver_ex#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlCachingResolver_ex/VB/XmlCachingResolver_ex.vb#1)]  
  
 Il comportamento di memorizzazione nella cache della classe `XmlCachingResolver` viene implementato nel metodo `GetEntity`. A tale scopo vengono creati nuovi oggetti <xref:System.Net.WebRequest> e <xref:System.Net.Cache.HttpRequestCachePolicy>. L'oggetto <xref:System.Net.Cache.HttpRequestCachePolicy> viene creato utilizzando il membro <xref:System.Net.Cache.HttpRequestCacheLevel.Default> dell'enumerazione <xref:System.Net.Cache.HttpRequestCacheLevel>.  
  
 La proprietà <xref:System.Net.WebRequest.CachePolicy%2A> dell'oggetto <xref:System.Net.WebRequest> viene impostata con l'oggetto <xref:System.Net.Cache.HttpRequestCachePolicy>.  
  
 Viene creata un'istanza della classe `XmlCachingResolver` con il parametro `Boolean` che è di tipo `enableHttpCaching`. Quando questo valore è impostato su `true`, l'istanza risolve una risorsa dalla cache predefinita se possibile. Quando `enableHttpCaching` è impostata su `false`, l'istanza viene utilizzato il comportamento predefinito e consente di risolvere le risorse dalla relativa origine.  
  
> [!NOTE]
>  In questo esempio sfrutta l'estensibilità delle classi XML in .NET Framework. È possibile estendere altre classi e personalizzarle in base alle esigenze di una determinata applicazione.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Xml.XmlReader> che usa un <xref:System.Xml.XmlUrlResolver> con credenziali predefinite.  
  
 [!code-csharp[XmlResolver_Samples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_Samples/CS/XmlResolver_Samples.cs#1)]
 [!code-vb[XmlResolver_Samples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_Samples/VB/XmlResolver_Samples.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md">Documenti e dati XML</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlUrlResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlUrlResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.XmlUrlResolver" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public System.Net.Cache.RequestCachePolicy CachePolicy { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlUrlResolver.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::RequestCachePolicy ^ CachePolicy {  void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy" Usage="System.Xml.XmlUrlResolver.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta i criteri della cache per l'oggetto <see cref="T:System.Net.WebRequest" /> sottostante.</summary>
        <value>Criteri della cache per la richiesta Web sottostante.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlUrlResolver.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials {  void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials" Usage="System.Xml.XmlUrlResolver.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Imposta le credenziali usate per autenticare le richieste Web.</summary>
        <value>Credenziali usate per autenticare le richieste Web. Se questa proprietà non è impostata, viene usato il valore predefinito <see langword="null" />. Questo significa che <see langword="XmlUrlResolver" /> non ha credenziali utente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la directory virtuale non richiede l'autenticazione, questa proprietà non necessarie da impostare. In caso contrario, è necessario fornire le credenziali dell'utente.  
  
 È possibile associare credenziali diverse a diversi URI e aggiungerle a una cache. È quindi possibile usare le credenziali per verificare l'autenticazione per gli URI diverso, indipendentemente dall'origine originale del codice XML.  
  
 Il codice c# seguente viene illustrato come impostare il <xref:System.Xml.XmlUrlResolver.Credentials%2A> proprietà a una cache delle credenziali.  
  
```csharp  
NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);   
CredentialCache myCache = new CredentialCache();   
myCache.Add(new Uri("http://www.contoso.com/"), "Basic", myCred);   
myCache.Add(new Uri("http://app.contoso.com/"), "Basic", myCred);  
XmlUrlResolver resolver = new XmlUrlResolver();  
resolver.Credentials = myCache;  
```  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Xml.XmlUrlResolver> oggetto con le credenziali. Il <xref:System.Xml.XmlReader> utilizza le credenziali nel <xref:System.Xml.XmlUrlResolver> oggetto per accedere a una risorsa di rete.  
  
 [!code-csharp[XmlResolver_Samples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_Samples/CS/XmlResolver_Samples.cs#2)]
 [!code-vb[XmlResolver_Samples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_Samples/VB/XmlResolver_Samples.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetEntity(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntity (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetEntity(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntity : Uri * string * Type -&gt; obj" Usage="xmlUrlResolver.GetEntity (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">URI restituito da <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
        <param name="role">Attualmente non usato.</param>
        <param name="ofObjectToReturn">Tipo di oggetto da restituire. L'implementazione corrente restituisce soltanto oggetti <see cref="T:System.IO.Stream" />.</param>
        <summary>Esegue il mapping di un URI a un oggetto che contiene la risorsa effettiva.</summary>
        <returns>Oggetto flusso o <see langword="null" /> se viene specificato un tipo diverso dal flusso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato quando il chiamante desidera eseguire il mapping di un URI specificato a un oggetto che contiene la risorsa che rappresenta l'URI.  
  
 Per la versione asincrona di questo metodo, vedere <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>.  
  
> [!IMPORTANT]
>  L'applicazione può ridurre memoria attacchi denial of service per le <xref:System.Xml.XmlUrlResolver.GetEntity%2A> metodo mediante l'implementazione di IStream <xref:System.Runtime.InteropServices.ComTypes.IStream> per limitare il numero di byte letti. Ciò aiuta a proteggersi da situazioni in cui il codice dannoso tenta di passare un flusso infinito di byte dal <xref:System.Xml.XmlUrlResolver.GetEntity%2A> (metodo).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato il `GetEntity` e <xref:System.Xml.XmlResolver.ResolveUri%2A> metodi.  
  
 [!code-cpp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><paramref name="ofObjectToReturn" />non è né <see langword="null" /> né un tipo <see langword="Stream" />.</exception>
        <exception cref="T:System.UriFormatException">L'URI specificato non è assoluto.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="absoluteUri" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Exception">Errore di runtime, ad esempio un'interruzione della connessione al server.</exception>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; GetEntityAsync(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntityAsync (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ GetEntityAsync(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlUrlResolver.GetEntityAsync (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">URI restituito da <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
        <param name="role">Attualmente non usato.</param>
        <param name="ofObjectToReturn">Tipo di oggetto da restituire. L'implementazione corrente restituisce soltanto oggetti <see cref="T:System.IO.Stream" />.</param>
        <summary>Esegue in modo asincrono il mapping di un URI a un oggetto contenente la risorsa effettiva.</summary>
        <returns>Oggetto flusso o <see langword="null" /> se viene specificato un tipo diverso dal flusso.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlUrlResolver.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy {  void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy" Usage="System.Xml.XmlUrlResolver.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il proxy di rete per l'oggetto <see cref="T:System.Net.WebRequest" /> sottostante.</summary>
        <value>Oggetto <see cref="T:System.Net.IWebProxy" /> da usare per accedere alla risorsa Internet.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveUri">
      <MemberSignature Language="C#" Value="public override Uri ResolveUri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Uri ResolveUri(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveUri (baseUri As Uri, relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Uri ^ ResolveUri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="override this.ResolveUri : Uri * string -&gt; Uri" Usage="xmlUrlResolver.ResolveUri (baseUri, relativeUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">URI di base usato per risolvere l'URI relativo.</param>
        <param name="relativeUri">URI da risolvere. L'URI può essere assoluto o relativo. Se assoluto, questo valore sostituisce il valore di <paramref name="baseUri" />. Se relativo, viene combinato con il valore di <paramref name="baseUri" /> in modo da ottenere un URI assoluto.</param>
        <summary>Risolve l'URI assoluto dagli URI di base e relativi.</summary>
        <returns>URI assoluto o <see langword="null" /> se l'URI relativo non può essere risolto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'URI assoluto è utilizzabile come URI di base per le successive richieste per le entità relativi a questo URI.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="baseUri" /> è <see langword="null" /> oppure <paramref name="relativeUri" /> è <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Questo metodo contiene una richiesta di ereditarietà. Attendibilità totale è necessario eseguire l'override di <see cref="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" /> (metodo).</para></block>
      </Docs>
    </Member>
  </Members>
</Type>