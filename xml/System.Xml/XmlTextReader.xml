<Type Name="XmlTextReader" FullName="System.Xml.XmlTextReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="adbf39d3716bacce895ac5eee8d993ee7079e17f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36434433" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTextReader : System.Xml.XmlReader, System.Xml.IXmlLineInfo, System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextReader extends System.Xml.XmlReader implements class System.Xml.IXmlLineInfo, class System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextReader&#xA;Inherits XmlReader&#xA;Implements IXmlLineInfo, IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextReader : System::Xml::XmlReader, System::Xml::IXmlLineInfo, System::Xml::IXmlNamespaceResolver" />
  <TypeSignature Language="F#" Value="type XmlTextReader = class&#xA;    inherit XmlReader&#xA;    interface IXmlLineInfo&#xA;    interface IXmlNamespaceResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.IXmlLineInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="be116-101">Represents a reader that provides fast, non-cached, forward-only access to XML data.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be116-101">Represents a reader that provides fast, non-cached, forward-only access to XML data.</span>
      </span>
      <span data-ttu-id="be116-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlReader" /> class instead.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be116-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlReader" /> class instead.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-103">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-103">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-104"><xref:System.Xml.XmlTextReader> fornisce l'accesso forward-only di sola lettura in un flusso di dati XML.</span><span class="sxs-lookup"><span data-stu-id="be116-104"><xref:System.Xml.XmlTextReader> provides forward-only, read-only access to a stream of XML data.</span></span> <span data-ttu-id="be116-105">Il nodo corrente corrisponde al nodo sul quale è posizionato il lettore.</span><span class="sxs-lookup"><span data-stu-id="be116-105">The current node refers to the node on which the reader is positioned.</span></span> <span data-ttu-id="be116-106">Il lettore viene fatto avanzare utilizzando uno dei metodi di lettura e le proprietà riflettono il valore del nodo corrente.</span><span class="sxs-lookup"><span data-stu-id="be116-106">The reader is advanced using any of the read methods and properties reflect the value of the current node.</span></span>  
  
 <span data-ttu-id="be116-107">Questa classe implementa <xref:System.Xml.XmlReader> ed è conforme a W3C Extensible Markup Language (XML) 1.0 e gli spazi dei nomi nelle raccomandazioni XML.</span><span class="sxs-lookup"><span data-stu-id="be116-107">This class implements <xref:System.Xml.XmlReader> and conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span></span> <span data-ttu-id="be116-108">`XmlTextReader` offre le funzionalità seguenti:</span><span class="sxs-lookup"><span data-stu-id="be116-108">`XmlTextReader` provides the following functionality:</span></span>  
  
-   <span data-ttu-id="be116-109">Applica le regole di codice XML ben formato.</span><span class="sxs-lookup"><span data-stu-id="be116-109">Enforces the rules of well-formed XML.</span></span>  
  
-   <span data-ttu-id="be116-110">`XmlTextReader` non fornisce la convalida dei dati.</span><span class="sxs-lookup"><span data-stu-id="be116-110">`XmlTextReader` does not provide data validation.</span></span>  
  
-   <span data-ttu-id="be116-111">Verifica che `DocumentType` i nodi sono ben formati.</span><span class="sxs-lookup"><span data-stu-id="be116-111">Checks that `DocumentType` nodes are well-formed.</span></span> <span data-ttu-id="be116-112">`XmlTextReader` verifica della correttezza di DTD, ma non esegue la convalida usando la definizione DTD.</span><span class="sxs-lookup"><span data-stu-id="be116-112">`XmlTextReader` checks the DTD for well-formedness, but does not validate using the DTD.</span></span>  
  
-   <span data-ttu-id="be116-113">Per i nodi in cui <xref:System.Xml.XmlTextReader.NodeType%2A> viene `XmlNodeType.EntityReference`, un singolo vuoto `EntityReference` nodo viene restituito (vale a dire, il <xref:System.Xml.XmlTextReader.Value%2A> proprietà `String.Empty`).</span><span class="sxs-lookup"><span data-stu-id="be116-113">For nodes where <xref:System.Xml.XmlTextReader.NodeType%2A> is `XmlNodeType.EntityReference`, a single empty `EntityReference` node is returned (that is, the <xref:System.Xml.XmlTextReader.Value%2A> property is `String.Empty`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be116-114">Le dichiarazioni di entità nella DTD effettivi vengono chiamate `Entity` nodi.</span><span class="sxs-lookup"><span data-stu-id="be116-114">The actual declarations of entities in the DTD are called `Entity` nodes.</span></span> <span data-ttu-id="be116-115">Quando si fa riferimento a questi nodi nei dati, vengono denominati `EntityReference` nodi.</span><span class="sxs-lookup"><span data-stu-id="be116-115">When you refer to these nodes in your data, they are called `EntityReference` nodes.</span></span>  
  
-   <span data-ttu-id="be116-116">Non consente di espandere gli attributi predefiniti.</span><span class="sxs-lookup"><span data-stu-id="be116-116">Does not expand default attributes.</span></span>  
  
 <span data-ttu-id="be116-117">Poiché il `XmlTextReader` non esegue i controlli aggiuntivi richiesti per la convalida dei dati, fornisce un parser rapido correttezza.</span><span class="sxs-lookup"><span data-stu-id="be116-117">Because the `XmlTextReader` does not perform the extra checks required for data validation, it provides a fast well-formedness parser.</span></span>  
  
 <span data-ttu-id="be116-118">Per eseguire la convalida dei dati, utilizzare un oggetto di convalida <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="be116-118">To perform data validation, use a validating <xref:System.Xml.XmlReader>.</span></span>  
  
 <span data-ttu-id="be116-119">Per leggere i dati XML da un <xref:System.Xml.XmlDocument>, utilizzare <xref:System.Xml.XmlNodeReader>.</span><span class="sxs-lookup"><span data-stu-id="be116-119">To read XML data from an <xref:System.Xml.XmlDocument>, use <xref:System.Xml.XmlNodeReader>.</span></span>  
  
 <span data-ttu-id="be116-120">`XmlTextReader` Genera un <xref:System.Xml.XmlException> su XML errori di analisi.</span><span class="sxs-lookup"><span data-stu-id="be116-120">`XmlTextReader` throws an <xref:System.Xml.XmlException> on XML parse errors.</span></span> <span data-ttu-id="be116-121">Dopo che viene generata un'eccezione lo stato del lettore non è stimabile.</span><span class="sxs-lookup"><span data-stu-id="be116-121">After an exception is thrown the state of the reader is not predictable.</span></span> <span data-ttu-id="be116-122">Ad esempio, il tipo di nodo restituito potrebbe essere diverso rispetto al tipo di nodo effettivo del nodo corrente.</span><span class="sxs-lookup"><span data-stu-id="be116-122">For example, the reported node type may be different than the actual node type of the current node.</span></span> <span data-ttu-id="be116-123">Utilizzare il <xref:System.Xml.XmlTextReader.ReadState%2A> proprietà per controllare se un lettore è in stato di errore.</span><span class="sxs-lookup"><span data-stu-id="be116-123">Use the <xref:System.Xml.XmlTextReader.ReadState%2A> property to check whether a reader is in error state.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="be116-124">Considerazioni sulla sicurezza</span><span class="sxs-lookup"><span data-stu-id="be116-124">Security Considerations</span></span>  
 <span data-ttu-id="be116-125">Di seguito sono riportati gli aspetti da considerare quando si utilizza il <xref:System.Xml.XmlTextReader> classe.</span><span class="sxs-lookup"><span data-stu-id="be116-125">The following are things to consider when using the <xref:System.Xml.XmlTextReader> class.</span></span>  
  
-   <span data-ttu-id="be116-126">Le eccezioni generate la <xref:System.Xml.XmlTextReader> possono rivelare informazioni sul percorso che non si desidera propagare all'applicazione.</span><span class="sxs-lookup"><span data-stu-id="be116-126">Exceptions thrown the <xref:System.Xml.XmlTextReader> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="be116-127">Le applicazioni devono intercettare le eccezioni ed elaborarle in modo adeguato.</span><span class="sxs-lookup"><span data-stu-id="be116-127">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="be116-128">Per impostazione predefinita, l'elaborazione della DTD è attivata.</span><span class="sxs-lookup"><span data-stu-id="be116-128">DTD processing is enabled by default.</span></span> <span data-ttu-id="be116-129">Disabilitare l'elaborazione DTD se si desidera evitare problemi di Denial of Service o se si gestiscono origini non attendibili.</span><span class="sxs-lookup"><span data-stu-id="be116-129">Disable DTD processing if you are concerned about Denial of Service issues or if you are dealing with untrusted sources.</span></span> <span data-ttu-id="be116-130">Impostare il <xref:System.Xml.XmlTextReader.DtdProcessing%2A> proprietà <xref:System.Xml.DtdProcessing.Prohibit> per disabilitare l'elaborazione della DTD.</span><span class="sxs-lookup"><span data-stu-id="be116-130">Set the <xref:System.Xml.XmlTextReader.DtdProcessing%2A> property to <xref:System.Xml.DtdProcessing.Prohibit> to disable DTD processing.</span></span>  
  
     <span data-ttu-id="be116-131">Se l'elaborazione della DTD è attivata, è possibile utilizzare il tipo <xref:System.Xml.XmlSecureResolver> per limitare le risorse a cui il tipo <xref:System.Xml.XmlTextReader> può accedere.</span><span class="sxs-lookup"><span data-stu-id="be116-131">If you have DTD processing enabled, you can use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlTextReader> can access.</span></span> <span data-ttu-id="be116-132">È anche possibile progettare l'applicazione in modo da specificare vincoli di memoria e di tempo per l'elaborazione XML.</span><span class="sxs-lookup"><span data-stu-id="be116-132">You can also design your application so that the XML processing is memory and time constrained.</span></span> <span data-ttu-id="be116-133">Ad esempio, configurare i limiti di timeout nell'applicazione ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="be116-133">For example, configure time-out limits in your ASP.NET application.</span></span>  
  
-   <span data-ttu-id="be116-134">Dati XML possono essere inclusi riferimenti a risorse esterne, ad esempio un file DTD.</span><span class="sxs-lookup"><span data-stu-id="be116-134">XML data can include references to external resources such as a DTD file.</span></span> <span data-ttu-id="be116-135">Per impostazione predefinita, le risorse esterne vengono risolte utilizzando un oggetto <xref:System.Xml.XmlUrlResolver> senza credenziali utente.</span><span class="sxs-lookup"><span data-stu-id="be116-135">By default external resources are resolved using an <xref:System.Xml.XmlUrlResolver> object with no user credentials.</span></span> <span data-ttu-id="be116-136">È possibile migliorare i livelli di sicurezza mediante una delle seguenti operazioni:</span><span class="sxs-lookup"><span data-stu-id="be116-136">You can secure this further by doing one of the following:</span></span>  
  
    -   <span data-ttu-id="be116-137">Limitando le risorse a cui la classe <xref:System.Xml.XmlTextReader> può accedere impostando la proprietà <xref:System.Xml.XmlTextReader.XmlResolver%2A> su un oggetto <xref:System.Xml.XmlSecureResolver>.</span><span class="sxs-lookup"><span data-stu-id="be116-137">Restrict the resources that the <xref:System.Xml.XmlTextReader> can access by setting the <xref:System.Xml.XmlTextReader.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
  
    -   <span data-ttu-id="be116-138">Non consentire al tipo <xref:System.Xml.XmlReader> di aprire alcuna risorsa esterna impostando la proprietà <xref:System.Xml.XmlTextReader.XmlResolver%2A> su `null`.</span><span class="sxs-lookup"><span data-stu-id="be116-138">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlTextReader.XmlResolver%2A> property to `null`.</span></span>  
  
-   <span data-ttu-id="be116-139">I dati XML possono contenere un numero elevato di attributi, dichiarazione dello spazio dei nomi, elementi annidati e così via, la cui elaborazione richiede una notevole quantità di tempo.</span><span class="sxs-lookup"><span data-stu-id="be116-139">XML data can contain a large number of attributes, namespace declarations, nested elements and so on that require a substantial amount of time to process.</span></span> <span data-ttu-id="be116-140">Per limitare le dimensioni dell'input che viene inviato per la <xref:System.Xml.XmlTextReader>, creare un'implementazione IStream personalizzata e deve fornirli il <xref:System.Xml.XmlTextReader>.</span><span class="sxs-lookup"><span data-stu-id="be116-140">To limit the size of the input that is sent to the <xref:System.Xml.XmlTextReader>, create a custom IStream implementation and supply it the <xref:System.Xml.XmlTextReader>.</span></span>  
  
-   <span data-ttu-id="be116-141">Il <xref:System.Xml.XmlReader.ReadValueChunk%2A> metodo può essere utilizzato per gestire grandi flussi di dati.</span><span class="sxs-lookup"><span data-stu-id="be116-141">The <xref:System.Xml.XmlReader.ReadValueChunk%2A> method can be used to handle large streams of data.</span></span> <span data-ttu-id="be116-142">Questo metodo consente di leggere un numero ridotto di caratteri alla volta invece di allocare una singola stringa per l'intero valore.</span><span class="sxs-lookup"><span data-stu-id="be116-142">This method reads a small number of characters at a time instead of allocating a single string for the whole value.</span></span>  
  
-   <span data-ttu-id="be116-143">Per impostazione predefinita, le entità generali non vengono espanse.</span><span class="sxs-lookup"><span data-stu-id="be116-143">By default general entities are not expanded.</span></span> <span data-ttu-id="be116-144">Per eseguire questa operazione, è necessario chiamare il metodo <xref:System.Xml.XmlTextReader.ResolveEntity%2A>.</span><span class="sxs-lookup"><span data-stu-id="be116-144">General entities are expanded when you call the <xref:System.Xml.XmlTextReader.ResolveEntity%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="be116-145">
        <para>Questa classe ha una richiesta di ereditarietà. Attendibilità totale deve ereditare da <see langword="XmlTextReader" />.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="be116-145">
          <para>This class has an inheritance demand. Full trust is required to inherit from <see langword="XmlTextReader" />.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="be116-146">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-146">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-147">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-147">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlTextReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlTextReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be116-148">Initializes a new instance of the <see langword="XmlTextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-148">Initializes a new instance of the <see langword="XmlTextReader" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.Stream input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::Stream ^ input);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.Stream -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader input" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="be116-149">The stream containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-149">The stream containing the XML data to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-150">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-150">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-151">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-151">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-152">Il <xref:System.Xml.XmlTextReader> decodifica il flusso tramite <xref:System.Text.Encoding?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="be116-152">The <xref:System.Xml.XmlTextReader> decodes the stream using <xref:System.Text.Encoding?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be116-153">
            <paramref name="input" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-153">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.TextReader input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::TextReader ^ input);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.TextReader -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader input" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="be116-154">The <see langword="TextReader" /> containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-154">The <see langword="TextReader" /> containing the XML data to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-155">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-155">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-156">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-156">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-157">Si presuppone che il `TextReader` è già impostata per la codifica corretta.</span><span class="sxs-lookup"><span data-stu-id="be116-157">It is assumed that the `TextReader` is already set to the correct encoding.</span></span> <span data-ttu-id="be116-158">Viene utilizzato dai client che le operazioni hanno già letto dal flusso in uno scenario MIME multiparte.</span><span class="sxs-lookup"><span data-stu-id="be116-158">This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-159">Nell'esempio seguente carica una stringa XML nel `XmlTextReader` dell'oggetto utilizzando il <xref:System.IO.StringReader> classe.</span><span class="sxs-lookup"><span data-stu-id="be116-159">The following example loads an XML string into the `XmlTextReader` object using the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[XmlTextReader.cctor1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.cctor1/CPP/rdrcctor1.cpp#1)]
 [!code-csharp[XmlTextReader.cctor1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.cctor1/CS/rdrcctor1.cs#1)]
 [!code-vb[XmlTextReader.cctor1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.cctor1/VB/rdrcctor1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader url" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="be116-160">The URL for the file containing the XML data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-160">The URL for the file containing the XML data.</span>
          </span>
          <span data-ttu-id="be116-161">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-161">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-162">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-162">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-163">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-163">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-164">Se il file si trova su una risorsa che richiede credenziali di accesso, usare il <xref:System.Xml.XmlTextReader.XmlResolver%2A> proprietà per specificare le credenziali necessarie.</span><span class="sxs-lookup"><span data-stu-id="be116-164">If the file is located on a resource that requires access credentials, use the <xref:System.Xml.XmlTextReader.XmlResolver%2A> property to specify the necessary credentials.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be116-165">Nella versione 1.1 del [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], parzialmente attendibile a codice non è possibile impostare il `XmlResolver` proprietà.</span><span class="sxs-lookup"><span data-stu-id="be116-165">In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], partially trusted code cannot set the `XmlResolver` property.</span></span> <span data-ttu-id="be116-166">La soluzione alternativa consiste nel creare un <xref:System.Xml.XmlUrlResolver> con le credenziali necessarie, passare l'URI per il <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> metodo e quindi costruire la `XmlTextReader` usando il valore risultante <xref:System.IO.Stream> oggetto.</span><span class="sxs-lookup"><span data-stu-id="be116-166">The workaround is to create an <xref:System.Xml.XmlUrlResolver> with the necessary credentials, pass the URI to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> method, and then construct the `XmlTextReader` using the resulting <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="be116-167">Questa soluzione è illustrata nel codice c# seguente.</span><span class="sxs-lookup"><span data-stu-id="be116-167">The workaround is described in the following C# code.</span></span>  
  
```csharp  
// Create a resolver with the necessary credentials.  
XmlUrlResolver resolver = new XmlUrlResolver();  
NetworkCredential nc = new NetworkCredential(SecurelyStoredUserName, SecurelyStoredPassword, SecurelyStoredDomain);  
resolver.Credentials = nc;   
// Get a Stream object containing the XML file.  
Uri myUri = new Uri ("http://myServer/data/books.xml");  
Stream s=(Stream)resolver.GetEntity(myUri, null, typeof(Stream));  
// Construct a reader using the Stream object.  
XmlTextReader reader = new XmlTextReader(s);  
```  
  
   
  
## Examples  
 <span data-ttu-id="be116-168">Nell'esempio seguente legge un file XML e vengono visualizzati tutti i nodi.</span><span class="sxs-lookup"><span data-stu-id="be116-168">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-169">Nell'esempio viene utilizzato il file, `items.xml`, come input.</span><span class="sxs-lookup"><span data-stu-id="be116-169">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="be116-170">The specified file cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-170">The specified file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="be116-171">Part of the filename or directory cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-171">Part of the filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be116-172">
            <paramref name="url" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-172">
              <paramref name="url" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="be116-173">The remote filename cannot be resolved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-173">The remote filename cannot be resolved.</span>
          </span>
          <span data-ttu-id="be116-174">-or-  An error occurred while processing the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-174">-or-  An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="be116-175">
            <paramref name="url" /> is not a valid URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-175">
              <paramref name="url" /> is not a valid URI.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextReader.XmlResolver" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlTextReader (System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlTextReader(System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader nt" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nt">
          <span data-ttu-id="be116-176">The <see langword="XmlNameTable" /> to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-176">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-177">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-177">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-178">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-178">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.Stream input, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As Stream, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::Stream ^ input, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.Stream * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (input, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="be116-179">The stream containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-179">The stream containing the XML data to read.</span>
          </span>
        </param>
        <param name="nt">
          <span data-ttu-id="be116-180">The <see langword="XmlNameTable" /> to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-180">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-181">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream and <see cref="T:System.Xml.XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-181">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream and <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-182">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-182">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-183">Il <xref:System.Xml.XmlTextReader> decodifica il flusso tramite <xref:System.Text.Encoding?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="be116-183">The <xref:System.Xml.XmlTextReader> decodes the stream using <xref:System.Text.Encoding?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="be116-184">Se si specifica una tabella dei nomi, il costruttore utilizza i nomi già definiti in tale tabella.</span><span class="sxs-lookup"><span data-stu-id="be116-184">If you specify a name table, this constructor uses the names defined already in that table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="be116-185">The <paramref name="input" /> or <paramref name="nt" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-185">The <paramref name="input" /> or <paramref name="nt" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.TextReader input, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader input, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As TextReader, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::TextReader ^ input, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.TextReader * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (input, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="be116-186">The <see langword="TextReader" /> containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-186">The <see langword="TextReader" /> containing the XML data to read.</span>
          </span>
        </param>
        <param name="nt">
          <span data-ttu-id="be116-187">The <see langword="XmlNameTable" /> to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-187">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-188">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.IO.TextReader" /> and <see cref="T:System.Xml.XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-188">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.IO.TextReader" /> and <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-189">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-189">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-190">Si presuppone che il `TextReader` è già impostata per la codifica corretta.</span><span class="sxs-lookup"><span data-stu-id="be116-190">It is assumed that the `TextReader` is already set to the correct encoding.</span></span> <span data-ttu-id="be116-191">Viene utilizzato dai client che le operazioni hanno già letto dal flusso in uno scenario MIME multiparte.</span><span class="sxs-lookup"><span data-stu-id="be116-191">This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="be116-192">The <paramref name="nt" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-192">The <paramref name="nt" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.IO.Stream input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.IO.Stream input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, input As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::IO::Stream ^ input);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.IO.Stream -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, input)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="input" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="be116-193">The URL to use for resolving external resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-193">The URL to use for resolving external resources.</span>
          </span>
          <span data-ttu-id="be116-194">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-194">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          </span>
        </param>
        <param name="input">
          <span data-ttu-id="be116-195">The stream containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-195">The stream containing the XML data to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-196">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL and stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-196">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL and stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-197">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-197">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be116-198">
            <paramref name="input" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-198">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.IO.TextReader input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.IO.TextReader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, input As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::IO::TextReader ^ input);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.IO.TextReader -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, input)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="input" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="be116-199">The URL to use for resolving external resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-199">The URL to use for resolving external resources.</span>
          </span>
          <span data-ttu-id="be116-200">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-200">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          </span>
        </param>
        <param name="input">
          <span data-ttu-id="be116-201">The <see langword="TextReader" /> containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-201">The <see langword="TextReader" /> containing the XML data to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-202">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL and <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-202">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL and <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-203">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-203">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-204">Si presuppone che il `TextReader` è già impostata per la codifica corretta.</span><span class="sxs-lookup"><span data-stu-id="be116-204">It is assumed that the `TextReader` is already set to the correct encoding.</span></span> <span data-ttu-id="be116-205">Viene utilizzato dai client che le operazioni hanno già letto dal flusso in uno scenario MIME multiparte.</span><span class="sxs-lookup"><span data-stu-id="be116-205">This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="be116-206">The URL for the file containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-206">The URL for the file containing the XML data to read.</span>
          </span>
        </param>
        <param name="nt">
          <span data-ttu-id="be116-207">The <see langword="XmlNameTable" /> to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-207">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-208">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified file and <see cref="T:System.Xml.XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-208">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified file and <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-209">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-209">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="be116-210">The <paramref name="nt" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-210">The <paramref name="nt" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="be116-211">The specified file cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-211">The specified file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="be116-212">Part of the filename or directory cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-212">Part of the filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be116-213">
            <paramref name="url" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-213">
              <paramref name="url" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="be116-214">The remote filename cannot be resolved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-214">The remote filename cannot be resolved.</span>
          </span>
          <span data-ttu-id="be116-215">-or-  An error occurred while processing the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-215">-or-  An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="be116-216">
            <paramref name="url" /> is not a valid URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-216">
              <paramref name="url" /> is not a valid URI.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.Stream xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As Stream, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::Stream ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.Stream * System.Xml.XmlNodeType * System.Xml.XmlParserContext -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (xmlFragment, fragType, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.IO.Stream" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment">
          <span data-ttu-id="be116-217">The stream containing the XML fragment to parse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-217">The stream containing the XML fragment to parse.</span>
          </span>
        </param>
        <param name="fragType">
          <span data-ttu-id="be116-218">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-218">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span>
          </span>
          <span data-ttu-id="be116-219">This also determines what the fragment can contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-219">This also determines what the fragment can contain.</span>
          </span>
          <span data-ttu-id="be116-220">(See table below.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-220">(See table below.)</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="be116-221">The <see cref="T:System.Xml.XmlParserContext" /> in which the <c>xmlFragment</c> is to be parsed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-221">The <see cref="T:System.Xml.XmlParserContext" /> in which the <c>xmlFragment</c> is to be parsed.</span>
          </span>
          <span data-ttu-id="be116-222">This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c>, and the <c>xml:space</c> scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-222">This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c>, and the <c>xml:space</c> scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-223">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream, <see cref="T:System.Xml.XmlNodeType" />, and <see cref="T:System.Xml.XmlParserContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-223">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream, <see cref="T:System.Xml.XmlNodeType" />, and <see cref="T:System.Xml.XmlParserContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-224">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-224">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-225">Questo costruttore consente di analizzare la stringa specificata come un frammento di codice XML.</span><span class="sxs-lookup"><span data-stu-id="be116-225">This constructor parses the given string as a fragment of XML.</span></span> <span data-ttu-id="be116-226">Se il frammento XML è un elemento o attributo, è possibile ignorare le regole di livello radice per i documenti XML ben formati.</span><span class="sxs-lookup"><span data-stu-id="be116-226">If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</span></span>  
  
 <span data-ttu-id="be116-227">Nella tabella seguente sono elencati i valori validi per `fragType`.</span><span class="sxs-lookup"><span data-stu-id="be116-227">The following table lists valid values for `fragType`.</span></span>  
  
|<span data-ttu-id="be116-228">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="be116-228">XmlNodeType</span></span>|<span data-ttu-id="be116-229">Frammento può contenere</span><span class="sxs-lookup"><span data-stu-id="be116-229">Fragment May Contain</span></span>|  
|-----------------|--------------------------|  
|`Element`|<span data-ttu-id="be116-230">Il contenuto di un elemento valido (ad esempio, qualsiasi combinazione di elementi, commenti, istruzioni di elaborazione, sezioni CDATA, text e i riferimenti alle entità).</span><span class="sxs-lookup"><span data-stu-id="be116-230">Any valid element content (for example, any combination of elements, comments, processing instructions, CDATA sections, text, and entity references).</span></span><br /><br /> <span data-ttu-id="be116-231">È possibile fornire anche una dichiarazione XML.</span><span class="sxs-lookup"><span data-stu-id="be116-231">An XML declaration can also be supplied.</span></span> <span data-ttu-id="be116-232">In questo modo è possibile specificare la codifica per il frammento XML, senza doverla impostata per il <xref:System.Xml.XmlParserContext> oggetto.</span><span class="sxs-lookup"><span data-stu-id="be116-232">This allows you to specify the encoding for the XML fragment, rather than having to set it on the <xref:System.Xml.XmlParserContext> object.</span></span>|  
|`Attribute`|<span data-ttu-id="be116-233">Il valore di un attributo (la parte all'interno delle virgolette).</span><span class="sxs-lookup"><span data-stu-id="be116-233">The value of an attribute (the part inside the quotes).</span></span>|  
|`Document`|<span data-ttu-id="be116-234">Contenuto di un intero documento XML.</span><span class="sxs-lookup"><span data-stu-id="be116-234">The contents of an entire XML document.</span></span> <span data-ttu-id="be116-235">Ciò consente di applicare le regole a livello di documento.</span><span class="sxs-lookup"><span data-stu-id="be116-235">This enforces document level rules.</span></span>|  
  
 <span data-ttu-id="be116-236">Il lettore utilizza il seguente per determinare la codifica del flusso.</span><span class="sxs-lookup"><span data-stu-id="be116-236">The reader uses the following to determine the encoding of the stream.</span></span>  
  
1.  <span data-ttu-id="be116-237">Controlla il <xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType> proprietà per determinare la codifica.</span><span class="sxs-lookup"><span data-stu-id="be116-237">Checks the <xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType> property to determine the encoding.</span></span>  
  
2.  <span data-ttu-id="be116-238">Se il `Encoding` proprietà `null`, il lettore controlla la un contrassegno di ordine dei byte all'inizio del flusso.</span><span class="sxs-lookup"><span data-stu-id="be116-238">If the `Encoding` property is `null`, the reader checks for a byte-order mark at the beginning of the stream.</span></span>  
  
3.  <span data-ttu-id="be116-239">Se il `Encoding` proprietà `null`e viene individuato alcun indicatore ordine byte, il lettore si presuppone che il flusso è codificato in UTF-8.</span><span class="sxs-lookup"><span data-stu-id="be116-239">If the `Encoding` property is `null`, and no byte-order mark is found, the reader assumes the stream is encoded in UTF-8.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="be116-240">
            <paramref name="fragType" /> is not an Element, Attribute, or Document <see langword="XmlNodeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-240">
              <paramref name="fragType" /> is not an Element, Attribute, or Document <see langword="XmlNodeType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be116-241">
            <paramref name="xmlFragment" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-241">
              <paramref name="xmlFragment" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.IO.Stream input, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.IO.Stream input, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, input As Stream, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::IO::Stream ^ input, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.IO.Stream * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, input, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="be116-242">The URL to use for resolving external resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-242">The URL to use for resolving external resources.</span>
          </span>
          <span data-ttu-id="be116-243">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-243">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          </span>
          <span data-ttu-id="be116-244">If <c>url</c> is <see langword="null" />, <see langword="BaseURI" /> is set to <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-244">If <c>url</c> is <see langword="null" />, <see langword="BaseURI" /> is set to <see langword="String.Empty" />.</span>
          </span>
        </param>
        <param name="input">
          <span data-ttu-id="be116-245">The stream containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-245">The stream containing the XML data to read.</span>
          </span>
        </param>
        <param name="nt">
          <span data-ttu-id="be116-246">The <see langword="XmlNameTable" /> to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-246">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-247">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL, stream and <see cref="T:System.Xml.XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-247">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL, stream and <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-248">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-248">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="be116-249">The <paramref name="input" /> or <paramref name="nt" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-249">The <paramref name="input" /> or <paramref name="nt" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.IO.TextReader input, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.IO.TextReader input, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, input As TextReader, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::IO::TextReader ^ input, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.IO.TextReader * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, input, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="be116-250">The URL to use for resolving external resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-250">The URL to use for resolving external resources.</span>
          </span>
          <span data-ttu-id="be116-251">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-251">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          </span>
          <span data-ttu-id="be116-252">If <c>url</c> is <see langword="null" />, <see langword="BaseURI" /> is set to <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-252">If <c>url</c> is <see langword="null" />, <see langword="BaseURI" /> is set to <see langword="String.Empty" />.</span>
          </span>
        </param>
        <param name="input">
          <span data-ttu-id="be116-253">The <see langword="TextReader" /> containing the XML data to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-253">The <see langword="TextReader" /> containing the XML data to read.</span>
          </span>
        </param>
        <param name="nt">
          <span data-ttu-id="be116-254">The <see langword="XmlNameTable" /> to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-254">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-255">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL, <see cref="T:System.IO.TextReader" /> and <see cref="T:System.Xml.XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-255">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL, <see cref="T:System.IO.TextReader" /> and <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-256">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-256">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-257">Si presuppone che il `TextReader` è già impostata per la codifica corretta.</span><span class="sxs-lookup"><span data-stu-id="be116-257">It is assumed that the `TextReader` is already set to the correct encoding.</span></span> <span data-ttu-id="be116-258">Viene utilizzato dai client che le operazioni hanno già letto dal flusso in uno scenario MIME multiparte.</span><span class="sxs-lookup"><span data-stu-id="be116-258">This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be116-259">The <paramref name="nt" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-259">The <paramref name="nt" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As String, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.Xml.XmlNodeType * System.Xml.XmlParserContext -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (xmlFragment, fragType, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.String" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment">
          <span data-ttu-id="be116-260">The string containing the XML fragment to parse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-260">The string containing the XML fragment to parse.</span>
          </span>
        </param>
        <param name="fragType">
          <span data-ttu-id="be116-261">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-261">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span>
          </span>
          <span data-ttu-id="be116-262">This also determines what the fragment string can contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-262">This also determines what the fragment string can contain.</span>
          </span>
          <span data-ttu-id="be116-263">(See table below.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-263">(See table below.)</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="be116-264">The <see cref="T:System.Xml.XmlParserContext" /> in which the <c>xmlFragment</c> is to be parsed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-264">The <see cref="T:System.Xml.XmlParserContext" /> in which the <c>xmlFragment</c> is to be parsed.</span>
          </span>
          <span data-ttu-id="be116-265">This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c>, and the <c>xml:space</c> scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-265">This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c>, and the <c>xml:space</c> scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-266">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified string, <see cref="T:System.Xml.XmlNodeType" />, and <see cref="T:System.Xml.XmlParserContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-266">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified string, <see cref="T:System.Xml.XmlNodeType" />, and <see cref="T:System.Xml.XmlParserContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-267">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-267">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-268">Questo costruttore consente di analizzare la stringa specificata come un frammento di codice XML.</span><span class="sxs-lookup"><span data-stu-id="be116-268">This constructor parses the given string as a fragment of XML.</span></span> <span data-ttu-id="be116-269">Se il frammento XML è un elemento o attributo, è possibile ignorare le regole di livello radice per i documenti XML ben formati.</span><span class="sxs-lookup"><span data-stu-id="be116-269">If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</span></span> <span data-ttu-id="be116-270">Questo costruttore può gestire le stringhe restituite dal <xref:System.Xml.XmlReader.ReadInnerXml%2A>.</span><span class="sxs-lookup"><span data-stu-id="be116-270">This constructor can handle strings returned from <xref:System.Xml.XmlReader.ReadInnerXml%2A>.</span></span>  
  
 <span data-ttu-id="be116-271">Nella tabella seguente sono elencati i valori validi per `fragType` e modo in cui il lettore analizza ognuno dei tipi di nodo diverso.</span><span class="sxs-lookup"><span data-stu-id="be116-271">The following table lists valid values for `fragType` and how the reader parses each of the different node types.</span></span>  
  
|<span data-ttu-id="be116-272">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="be116-272">XmlNodeType</span></span>|<span data-ttu-id="be116-273">Frammento può contenere</span><span class="sxs-lookup"><span data-stu-id="be116-273">Fragment May Contain</span></span>|  
|-----------------|--------------------------|  
|<span data-ttu-id="be116-274">Elemento</span><span class="sxs-lookup"><span data-stu-id="be116-274">Element</span></span>|<span data-ttu-id="be116-275">Il contenuto di un elemento valido (ad esempio, qualsiasi combinazione di elementi, commenti, istruzioni di elaborazione, sezioni CDATA, text e i riferimenti alle entità).</span><span class="sxs-lookup"><span data-stu-id="be116-275">Any valid element content (for example, any combination of elements, comments, processing instructions, CDATA sections, text, and entity references).</span></span><br /><br /> <span data-ttu-id="be116-276">È possibile fornire anche una dichiarazione XML.</span><span class="sxs-lookup"><span data-stu-id="be116-276">An XML declaration can also be supplied.</span></span> <span data-ttu-id="be116-277">In questo modo è possibile specificare la codifica per il frammento XML, senza doverla impostata per il <xref:System.Xml.XmlParserContext> oggetto.</span><span class="sxs-lookup"><span data-stu-id="be116-277">This allows you to specify the encoding for the XML fragment, rather than having to set it on the <xref:System.Xml.XmlParserContext> object.</span></span>|  
|<span data-ttu-id="be116-278">Attributo</span><span class="sxs-lookup"><span data-stu-id="be116-278">Attribute</span></span>|<span data-ttu-id="be116-279">Il valore di un attributo (la parte all'interno delle virgolette).</span><span class="sxs-lookup"><span data-stu-id="be116-279">The value of an attribute (the part inside the quotes).</span></span>|  
|<span data-ttu-id="be116-280">Document</span><span class="sxs-lookup"><span data-stu-id="be116-280">Document</span></span>|<span data-ttu-id="be116-281">Contenuto di un intero documento XML.</span><span class="sxs-lookup"><span data-stu-id="be116-281">The contents of an entire XML document.</span></span> <span data-ttu-id="be116-282">Ciò consente di applicare le regole a livello di documento.</span><span class="sxs-lookup"><span data-stu-id="be116-282">This enforces document level rules.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="be116-283">Nell'esempio seguente consente di analizzare un frammento XML.</span><span class="sxs-lookup"><span data-stu-id="be116-283">The following example parses an XML fragment.</span></span> <span data-ttu-id="be116-284">Usa il `XmlParserContext` e il relativo <xref:System.Xml.XmlNamespaceManager> per gestire la risoluzione dello spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="be116-284">It uses the `XmlParserContext` and its <xref:System.Xml.XmlNamespaceManager> to handle namespace resolution.</span></span>  
  
 [!code-cpp[XmlTextReader.Cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.Cctor/CPP/readfrag.cpp#1)]
 [!code-csharp[XmlTextReader.Cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.Cctor/CS/readfrag.cs#1)]
 [!code-vb[XmlTextReader.Cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.Cctor/VB/readfrag.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="be116-285">
            <paramref name="fragType" /> is not an <see langword="Element" />, <see langword="Attribute" />, or <see langword="Document" /><see langword="XmlNodeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-285">
              <paramref name="fragType" /> is not an <see langword="Element" />, <see langword="Attribute" />, or <see langword="Document" /><see langword="XmlNodeType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be116-286">
            <paramref name="xmlFragment" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-286">
              <paramref name="xmlFragment" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlParserContext" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public override int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AttributeCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeCount : int" Usage="System.Xml.XmlTextReader.AttributeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-287">Gets the number of attributes on the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-287">Gets the number of attributes on the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-288">Numero di attributi sul nodo corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-288">The number of attributes on the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-289">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-289">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-290">Questa proprietà è rilevante per `Element`, `DocumentType` e `XmlDeclaration` solo i nodi.</span><span class="sxs-lookup"><span data-stu-id="be116-290">This property is relevant to `Element`, `DocumentType` and `XmlDeclaration` nodes only.</span></span> <span data-ttu-id="be116-291">(Altri tipi di nodo non dispone degli attributi.)</span><span class="sxs-lookup"><span data-stu-id="be116-291">(Other node types do not have attributes.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-292">Nell'esempio seguente visualizza tutti gli attributi sul nodo corrente.</span><span class="sxs-lookup"><span data-stu-id="be116-292">The following example displays all attributes on the current node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlTextReader.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-293">Gets the base URI of the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-293">Gets the base URI of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-294">URI di base del nodo corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-294">The base URI of the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-295">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-295">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-296">Un documento XML in rete è costituito da blocchi di dati aggregati tramite vari meccanismi di inclusione standard W3C e pertanto contiene nodi provenienti da posizioni differenti.</span><span class="sxs-lookup"><span data-stu-id="be116-296">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="be116-297">Entità DTD sono un esempio di questo oggetto, ma ciò non è limitato per DTD.</span><span class="sxs-lookup"><span data-stu-id="be116-297">DTD entities are an example of this, but this is not limited to DTDs.</span></span> <span data-ttu-id="be116-298">URI di base indica è la provenienza di questi nodi.</span><span class="sxs-lookup"><span data-stu-id="be116-298">The base URI tells you where these nodes came from.</span></span> <span data-ttu-id="be116-299">Se non vi è alcun URI di base per i nodi restituiti (ad esempio, questi sono stati analizzati da una stringa in memoria), `String.Empty` viene restituito.</span><span class="sxs-lookup"><span data-stu-id="be116-299">If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), `String.Empty` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-300">Nell'esempio seguente consente di visualizzare l'URI di base per ogni nodo.</span><span class="sxs-lookup"><span data-stu-id="be116-300">The following example displays the base URI for each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.BaseURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.BaseURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.BaseURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-301">Nell'esempio viene utilizzato il file, `baseuri.xml`, come input.</span><span class="sxs-lookup"><span data-stu-id="be116-301">The example uses the file, `baseuri.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.BaseURI Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public override bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadBinaryContent : bool" Usage="System.Xml.XmlTextReader.CanReadBinaryContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-302">Gets a value indicating whether the <see cref="T:System.Xml.XmlTextReader" /> implements the binary content read methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-302">Gets a value indicating whether the <see cref="T:System.Xml.XmlTextReader" /> implements the binary content read methods.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-303">
            <see langword="true" /> se i metodi di lettura del contenuto binario vengono implementati; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-303">
              <see langword="true" /> if the binary content read methods are implemented; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="be116-304">La classe <see cref="T:System.Xml.XmlTextReader" /> restituisce sempre <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-304">The <see cref="T:System.Xml.XmlTextReader" /> class always returns <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-305">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-305">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-306">Lettura del contenuto binario metodi includono la <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlTextReader.ReadElementContentAsBase64%2A>, e <xref:System.Xml.XmlTextReader.ReadElementContentAsBinHex%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="be116-306">The binary content read methods include the <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlTextReader.ReadElementContentAsBase64%2A>, and <xref:System.Xml.XmlTextReader.ReadElementContentAsBinHex%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanReadValueChunk">
      <MemberSignature Language="C#" Value="public override bool CanReadValueChunk { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadValueChunk" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.CanReadValueChunk" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadValueChunk As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadValueChunk { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadValueChunk : bool" Usage="System.Xml.XmlTextReader.CanReadValueChunk" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-307">Gets a value indicating whether the <see cref="T:System.Xml.XmlTextReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-307">Gets a value indicating whether the <see cref="T:System.Xml.XmlTextReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-308">
            <see langword="true" /> se <see cref="T:System.Xml.XmlTextReader" /> implementa il metodo <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-308">
              <see langword="true" /> if the <see cref="T:System.Xml.XmlTextReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="be116-309">La classe <see cref="T:System.Xml.XmlTextReader" /> restituisce sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-309">The <see cref="T:System.Xml.XmlTextReader" /> class always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-310">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-310">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-311">Il <xref:System.Xml.XmlTextReader> genera una <xref:System.NotSupportedException> se il <xref:System.Xml.XmlReader.ReadValueChunk%2A> metodo viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="be116-311">The <xref:System.Xml.XmlTextReader> throws a <xref:System.NotSupportedException> if the <xref:System.Xml.XmlReader.ReadValueChunk%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public override bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResolveEntity : bool" Usage="System.Xml.XmlTextReader.CanResolveEntity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-312">Gets a value indicating whether this reader can parse and resolve entities.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-312">Gets a value indicating whether this reader can parse and resolve entities.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-313">
            <see langword="true" /> se il lettore può analizzare e risolvere le entità; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-313">
              <see langword="true" /> if the reader can parse and resolve entities; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="be116-314">La classe <see langword="XmlTextReader" /> restituisce sempre <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-314">The <see langword="XmlTextReader" /> class always returns <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-315">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-315">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-316">Si tratta di una modifica nel [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] rilasciare.</span><span class="sxs-lookup"><span data-stu-id="be116-316">This is a change in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] release.</span></span> <span data-ttu-id="be116-317">Nelle versioni precedenti, il `XmlTextReader` classe non è stato possibile risolvere le entità e `CanResolveEntity` sempre restituito `false`.</span><span class="sxs-lookup"><span data-stu-id="be116-317">In previous versions, the `XmlTextReader` class could not resolve entities and `CanResolveEntity` always returned `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlTextReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be116-318">Changes the <see cref="P:System.Xml.XmlReader.ReadState" /> to <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-318">Changes the <see cref="P:System.Xml.XmlReader.ReadState" /> to <see langword="Closed" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-319">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-319">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-320">Inoltre, questo metodo rilascia tutte le risorse utilizzate durante la lettura.</span><span class="sxs-lookup"><span data-stu-id="be116-320">This method also releases any resources held while reading.</span></span> <span data-ttu-id="be116-321">Se il lettore è stato creato utilizzando un flusso, questo metodo chiama anche `Close` sul flusso sottostante.</span><span class="sxs-lookup"><span data-stu-id="be116-321">If this reader was constructed using a stream, this method also calls `Close` on the underlying stream.</span></span>  
  
 <span data-ttu-id="be116-322">Se `Close` è già stato chiamato, viene eseguita alcuna azione.</span><span class="sxs-lookup"><span data-stu-id="be116-322">If `Close` has already been called, no action is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Xml.XmlTextReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-323">Gets the depth of the current node in the XML document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-323">Gets the depth of the current node in the XML document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-324">Profondità del nodo corrente nel documento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-324">The depth of the current node in the XML document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-325">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-325">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-326">L'esempio seguente mostra ogni nodo compresi profondità, numero di riga e della posizione di riga.</span><span class="sxs-lookup"><span data-stu-id="be116-326">The following example displays each node including its depth, line number, and line position.</span></span>  
  
 [!code-cpp[XmlTextReader.LineNum#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.LineNum/CPP/readlinenum.cpp#1)]
 [!code-csharp[XmlTextReader.LineNum#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.LineNum/CS/readlinenum.cs#1)]
 [!code-vb[XmlTextReader.LineNum#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.LineNum/VB/readlinenum.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="DtdProcessing">
      <MemberSignature Language="C#" Value="public System.Xml.DtdProcessing DtdProcessing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.DtdProcessing DtdProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.DtdProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Property DtdProcessing As DtdProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::DtdProcessing DtdProcessing { System::Xml::DtdProcessing get(); void set(System::Xml::DtdProcessing value); };" />
      <MemberSignature Language="F#" Value="member this.DtdProcessing : System.Xml.DtdProcessing with get, set" Usage="System.Xml.XmlTextReader.DtdProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.DtdProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-327">Gets or sets the <see cref="T:System.Xml.DtdProcessing" /> enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-327">Gets or sets the <see cref="T:System.Xml.DtdProcessing" /> enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-328">Enumerazione <see cref="T:System.Xml.DtdProcessing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-328">The <see cref="T:System.Xml.DtdProcessing" /> enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be116-329">Il <xref:System.Xml.DtdProcessing> enumerazione contiene il <xref:System.Xml.DtdProcessing.Prohibit>, <xref:System.Xml.DtdProcessing.Ignore>, e <xref:System.Xml.DtdProcessing.Parse> enumeratori.</span><span class="sxs-lookup"><span data-stu-id="be116-329">The <xref:System.Xml.DtdProcessing> enumeration contains the <xref:System.Xml.DtdProcessing.Prohibit>, <xref:System.Xml.DtdProcessing.Ignore>, and <xref:System.Xml.DtdProcessing.Parse> enumerators.</span></span> <span data-ttu-id="be116-330"><xref:System.Xml.DtdProcessing.Parse> è il comportamento predefinito.</span><span class="sxs-lookup"><span data-stu-id="be116-330"><xref:System.Xml.DtdProcessing.Parse> is the default behavior.</span></span> <span data-ttu-id="be116-331">Il <xref:System.Xml.XmlTextReader.DtdProcessing%2A> proprietà sostituisce la `ProhibitDTD` proprietà e aggiunge la possibilità di ignorare l'elemento DOCTYPE.</span><span class="sxs-lookup"><span data-stu-id="be116-331">The <xref:System.Xml.XmlTextReader.DtdProcessing%2A> property replaces the `ProhibitDTD` property and adds the ability to ignore the DOCTYPE element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="be116-332">Se il <xref:System.Xml.XmlTextReader.DtdProcessing%2A> è impostata su <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>, il <xref:System.Xml.XmlTextReader> non segnalerà la DTD.</span><span class="sxs-lookup"><span data-stu-id="be116-332">If the <xref:System.Xml.XmlTextReader.DtdProcessing%2A> property is set to <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>, the <xref:System.Xml.XmlTextReader> will not report the DTDs.</span></span> <span data-ttu-id="be116-333">Ciò significa che il DTD/DOCTYPE verrà incluso nell'output.</span><span class="sxs-lookup"><span data-stu-id="be116-333">This means that the DTD/DOCTYPE will be lost on output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Xml.XmlTextReader.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-334">Gets the encoding of the document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-334">Gets the encoding of the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-335">Valore di codifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-335">The encoding value.</span>
          </span>
          <span data-ttu-id="be116-336">Se non esiste alcun attributo di codifica né un indicatore per l'ordine dei byte, verrà usato il valore predefinito UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-336">If no encoding attribute exists, and there is no byte-order mark, this defaults to UTF-8.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-337">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-337">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-338">Poiché <xref:System.Xml.XmlTextReader> Usa la <xref:System.Text.Encoding?displayProperty=nameWithType> (classe), `XmlTextReader` supporta inoltre tutte le codifiche supportate da tale classe.</span><span class="sxs-lookup"><span data-stu-id="be116-338">Because <xref:System.Xml.XmlTextReader> uses the <xref:System.Text.Encoding?displayProperty=nameWithType> class, `XmlTextReader` also supports all encodings supported by that class.</span></span> <span data-ttu-id="be116-339">L'eccezione è qualsiasi codifica, ad esempio UTF-7 o EBCDIC, che viene eseguito il mapping di `<?xml` sequenza di valori di byte diversa da UTF-8.</span><span class="sxs-lookup"><span data-stu-id="be116-339">The exception to this is any encoding, such as UTF-7 or EBCDIC, that maps the `<?xml` sequence to different byte values than UTF-8.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityHandling">
      <MemberSignature Language="C#" Value="public System.Xml.EntityHandling EntityHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.EntityHandling EntityHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.EntityHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityHandling As EntityHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::EntityHandling EntityHandling { System::Xml::EntityHandling get(); void set(System::Xml::EntityHandling value); };" />
      <MemberSignature Language="F#" Value="member this.EntityHandling : System.Xml.EntityHandling with get, set" Usage="System.Xml.XmlTextReader.EntityHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.EntityHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-340">Gets or sets a value that specifies how the reader handles entities.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-340">Gets or sets a value that specifies how the reader handles entities.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-341">Uno dei valori di <see cref="T:System.Xml.EntityHandling" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-341">One of the <see cref="T:System.Xml.EntityHandling" /> values.</span>
          </span>
          <span data-ttu-id="be116-342">Se non viene specificato nessun oggetto <see langword="EntityHandling" />, per impostazione predefinita viene usato <see langword="EntityHandling.ExpandCharEntities" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-342">If no <see langword="EntityHandling" /> is specified, it defaults to <see langword="EntityHandling.ExpandCharEntities" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-343">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-343">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-344">Questa proprietà può essere modificata per l'effetto immediatamente e accetta dopo il successivo <xref:System.Xml.XmlTextReader.Read%2A> chiamare.</span><span class="sxs-lookup"><span data-stu-id="be116-344">This property can be changed on the fly and takes effect after the next <xref:System.Xml.XmlTextReader.Read%2A> call.</span></span>  
  
 <span data-ttu-id="be116-345">Quando si `EntityHandling` è impostata su `ExpandCharEntities`, i valori di attributo vengono normalizzati solo parzialmente.</span><span class="sxs-lookup"><span data-stu-id="be116-345">When `EntityHandling` is set to `ExpandCharEntities`, attribute values are only partially normalized.</span></span> <span data-ttu-id="be116-346">Il lettore Normalizza ogni nodo di testo in modo indipendente dal contenuto di nodi di riferimento all'entità adiacenti.</span><span class="sxs-lookup"><span data-stu-id="be116-346">The reader normalizes each individual text node independently from the content of adjacent entity reference nodes.</span></span>  
  
 <span data-ttu-id="be116-347">Per illustrare la differenza tra l'entità modalità di gestione si consideri il codice XML seguente:</span><span class="sxs-lookup"><span data-stu-id="be116-347">To illustrate the difference between the entity handling modes consider the following XML:</span></span>  
  
```  
<!DOCTYPE doc [<!ENTITY num "123"]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public override bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EOF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EOF : bool" Usage="System.Xml.XmlTextReader.EOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-348">Gets a value indicating whether the reader is positioned at the end of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-348">Gets a value indicating whether the reader is positioned at the end of the stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-349">
            <see langword="true" /> se il lettore è posizionato alla fine del flusso; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-349">
              <see langword="true" /> if the reader is positioned at the end of the stream; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-350">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-350">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="be116-351">Gets the value of an attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-351">Gets the value of an attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-352">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-352">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(int i);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : int -&gt; string" Usage="xmlTextReader.GetAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="be116-353">The index of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-353">The index of the attribute.</span>
          </span>
          <span data-ttu-id="be116-354">The index is zero-based.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-354">The index is zero-based.</span>
          </span>
          <span data-ttu-id="be116-355">(The first attribute has index 0.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-355">(The first attribute has index 0.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-356">Gets the value of the attribute with the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-356">Gets the value of the attribute with the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-357">The value of the specified attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-357">The value of the specified attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-358">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-358">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-359">Questo metodo non determina lo spostamento del lettore.</span><span class="sxs-lookup"><span data-stu-id="be116-359">This method does not move the reader.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="be116-360">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlTextReader.AttributeCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-360">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlTextReader.AttributeCount" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string -&gt; string" Usage="xmlTextReader.GetAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="be116-361">The qualified name of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-361">The qualified name of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-362">Gets the value of the attribute with the specified name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-362">Gets the value of the attribute with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-363">The value of the specified attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-363">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="be116-364">If the attribute is not found, <see langword="null" /> is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-364">If the attribute is not found, <see langword="null" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-365">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-365">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-366">Questo metodo non determina lo spostamento del lettore.</span><span class="sxs-lookup"><span data-stu-id="be116-366">This method does not move the reader.</span></span>  
  
 <span data-ttu-id="be116-367">Se il lettore è posizionato su un `DocumentType` nodo, questo metodo può essere utilizzato per ottenere i valori letterali PUBLIC e SYSTEM, ad esempio, `reader.GetAttribute("PUBLIC")`</span><span class="sxs-lookup"><span data-stu-id="be116-367">If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader.GetAttribute("PUBLIC")`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-368">Nell'esempio seguente ottiene il valore dell'attributo ISBN.</span><span class="sxs-lookup"><span data-stu-id="be116-368">The following example gets the value of the ISBN attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.GetAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.GetAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.GetAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-369">Nell'esempio viene utilizzato il file, `attrs.xml`, come input.</span><span class="sxs-lookup"><span data-stu-id="be116-369">The example uses the file, `attrs.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.GetAttribute1 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string * string -&gt; string" Usage="xmlTextReader.GetAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="be116-370">The local name of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-370">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="be116-371">The namespace URI of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-371">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-372">Gets the value of the attribute with the specified local name and namespace URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-372">Gets the value of the attribute with the specified local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-373">The value of the specified attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-373">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="be116-374">If the attribute is not found, <see langword="null" /> is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-374">If the attribute is not found, <see langword="null" /> is returned.</span>
          </span>
          <span data-ttu-id="be116-375">This method does not move the reader.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-375">This method does not move the reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-376">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-376">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-377">Il seguente codice XML contiene un attributo in uno spazio dei nomi specifico:</span><span class="sxs-lookup"><span data-stu-id="be116-377">The following XML contains an attribute in a specific namespace:</span></span>  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 <span data-ttu-id="be116-378">È possibile effettuare la ricerca di `dt:type` attributo mediante un argomento (prefisso e il nome locale) o due argomenti (nome locale e URI dello spazio dei nomi):</span><span class="sxs-lookup"><span data-stu-id="be116-378">You can lookup the `dt:type` attribute using one argument (prefix and local name) or two arguments (local name and namespace URI):</span></span>  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 <span data-ttu-id="be116-379">Per la ricerca di `xmlns:dt` attributo, utilizzare uno degli argomenti seguenti:</span><span class="sxs-lookup"><span data-stu-id="be116-379">To lookup the `xmlns:dt` attribute, use one of the following arguments:</span></span>  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 <span data-ttu-id="be116-380">È inoltre possibile ottenere queste informazioni utilizzando il <xref:System.Xml.XmlTextReader.Prefix%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="be116-380">You can also get this information using the <xref:System.Xml.XmlTextReader.Prefix%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetNamespacesInScope">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetNamespacesInScope(System::Xml::XmlNamespaceScope scope);" />
      <MemberSignature Language="F#" Value="member this.GetNamespacesInScope : System.Xml.XmlNamespaceScope -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="xmlTextReader.GetNamespacesInScope scope" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="be116-381">An <see cref="T:System.Xml.XmlNamespaceScope" /> value that specifies the type of namespace nodes to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-381">An <see cref="T:System.Xml.XmlNamespaceScope" /> value that specifies the type of namespace nodes to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-382">Gets a collection that contains all namespaces currently in-scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-382">Gets a collection that contains all namespaces currently in-scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-383">An <see cref="T:System.Collections.IDictionary" /> object that contains all the current in-scope namespaces.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-383">An <see cref="T:System.Collections.IDictionary" /> object that contains all the current in-scope namespaces.</span>
          </span>
          <span data-ttu-id="be116-384">If the reader is not positioned on an element, an empty dictionary (no namespaces) is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-384">If the reader is not positioned on an element, an empty dictionary (no namespaces) is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-385">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-385">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-386">Il dizionario è costituito da una raccolta di spazi dei nomi con chiave basata sul prefisso.</span><span class="sxs-lookup"><span data-stu-id="be116-386">The dictionary consists of a collection of namespace names keyed by prefix.</span></span> <span data-ttu-id="be116-387">E può essere utilizzato per enumerare gli spazi dei nomi nell'ambito.</span><span class="sxs-lookup"><span data-stu-id="be116-387">It can be used to enumerate the in-scope namespaces.</span></span> <span data-ttu-id="be116-388">Il dizionario è una copia dell'elenco dello spazio dei nomi del lettore disconnessa.</span><span class="sxs-lookup"><span data-stu-id="be116-388">The dictionary is a disconnected copy of the namespace list of the reader.</span></span> <span data-ttu-id="be116-389">Rimane invariata la posizione del lettore, elenco dello spazio dei nomi nell'ambito corrente, le modifiche.</span><span class="sxs-lookup"><span data-stu-id="be116-389">It remains unchanged as the reader position, current in-scope namespace list, changes.</span></span>  
  
 <span data-ttu-id="be116-390">La tabella seguente descrive il modo in cui <xref:System.Xml.XmlNamespaceScope> influisce sul valore di enumerazione se o non gli spazi dei nomi predefiniti e incorporati sono restituiti da <xref:System.Xml.XmlTextReader.GetNamespacesInScope%2A>.</span><span class="sxs-lookup"><span data-stu-id="be116-390">The following table describes how the <xref:System.Xml.XmlNamespaceScope> enumeration value affects the whether or not the default and built-in namespaces are returned by <xref:System.Xml.XmlTextReader.GetNamespacesInScope%2A>.</span></span>  
  
|<span data-ttu-id="be116-391">Valore di XmlNamespaceScope</span><span class="sxs-lookup"><span data-stu-id="be116-391">XmlNamespaceScope Value</span></span>|<span data-ttu-id="be116-392">xmlns: XML</span><span class="sxs-lookup"><span data-stu-id="be116-392">xmlns:xml</span></span>|<span data-ttu-id="be116-393">xmlns:xmlns</span><span class="sxs-lookup"><span data-stu-id="be116-393">xmlns:xmlns</span></span>|<span data-ttu-id="be116-394">xmlns=""</span><span class="sxs-lookup"><span data-stu-id="be116-394">xmlns=""</span></span>|  
|-----------------------------|---------------|-----------------|---------------|  
|`All`|<span data-ttu-id="be116-395">sì</span><span class="sxs-lookup"><span data-stu-id="be116-395">yes</span></span>|<span data-ttu-id="be116-396">No</span><span class="sxs-lookup"><span data-stu-id="be116-396">no</span></span>|<span data-ttu-id="be116-397">No</span><span class="sxs-lookup"><span data-stu-id="be116-397">no</span></span>|  
|`ExcludeXml`|<span data-ttu-id="be116-398">No</span><span class="sxs-lookup"><span data-stu-id="be116-398">no</span></span>|<span data-ttu-id="be116-399">No</span><span class="sxs-lookup"><span data-stu-id="be116-399">no</span></span>|<span data-ttu-id="be116-400">No</span><span class="sxs-lookup"><span data-stu-id="be116-400">no</span></span>|  
|`Local`|<span data-ttu-id="be116-401">No</span><span class="sxs-lookup"><span data-stu-id="be116-401">no</span></span>|<span data-ttu-id="be116-402">No</span><span class="sxs-lookup"><span data-stu-id="be116-402">no</span></span>|<span data-ttu-id="be116-403">sì</span><span class="sxs-lookup"><span data-stu-id="be116-403">yes</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetRemainder">
      <MemberSignature Language="C#" Value="public System.IO.TextReader GetRemainder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.TextReader GetRemainder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetRemainder" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemainder () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::TextReader ^ GetRemainder();" />
      <MemberSignature Language="F#" Value="member this.GetRemainder : unit -&gt; System.IO.TextReader" Usage="xmlTextReader.GetRemainder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be116-404">Gets the remainder of the buffered XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-404">Gets the remainder of the buffered XML.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-405">A <see cref="T:System.IO.TextReader" /> containing the remainder of the buffered XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-405">A <see cref="T:System.IO.TextReader" /> containing the remainder of the buffered XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-406">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-406">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-407">Poiché <xref:System.Xml.XmlTextReader> un memorizzato nel buffer `Read`, deve essere in grado di restituire il resto del buffer non utilizzati in modo che nessun dato venga perso.</span><span class="sxs-lookup"><span data-stu-id="be116-407">Because <xref:System.Xml.XmlTextReader> does a buffered `Read`, it must be able to return the remainder of the unused buffer so that no data is lost.</span></span> <span data-ttu-id="be116-408">In questo modo i protocolli (ad esempio MIME multiparte) XML nello stesso flusso come altri aspetti del pacchetto.</span><span class="sxs-lookup"><span data-stu-id="be116-408">This allows protocols (such as multi-part MIME) to package XML in the same stream as other things.</span></span>  
  
 <span data-ttu-id="be116-409">Dopo avere chiamato questo metodo, <xref:System.Xml.XmlTextReader.EOF%2A> è impostata su `true`.</span><span class="sxs-lookup"><span data-stu-id="be116-409">After calling this method, <xref:System.Xml.XmlTextReader.EOF%2A> is set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-410">Nell'esempio seguente legge la prima parte di un documento XML e quindi utilizza `GetRemainder` per completare la lettura del documento mediante un lettore di secondo.</span><span class="sxs-lookup"><span data-stu-id="be116-410">The following example reads the first part of an XML document and then uses `GetRemainder` to complete reading the document using a second reader.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.GetRemainder Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.GetRemainder Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.GetRemainder Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-411">Nell'esempio viene utilizzato il file di input `tworeads.xml`.</span><span class="sxs-lookup"><span data-stu-id="be116-411">The example uses the input file `tworeads.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.GetRemainder Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasLineInfo">
      <MemberSignature Language="C#" Value="public bool HasLineInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasLineInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function HasLineInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasLineInfo();" />
      <MemberSignature Language="F#" Value="abstract member HasLineInfo : unit -&gt; bool&#xA;override this.HasLineInfo : unit -&gt; bool" Usage="xmlTextReader.HasLineInfo " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be116-412">Gets a value indicating whether the class can return line information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-412">Gets a value indicating whether the class can return line information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-413">
            <see langword="true" /> if the class can return line information; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-413">
              <see langword="true" /> if the class can return line information; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-414">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-414">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public override bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Xml.XmlTextReader.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-415">Gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlTextReader.Value" /> other than <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-415">Gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlTextReader.Value" /> other than <see langword="String.Empty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-416">
            <see langword="true" /> se il nodo sul quale il lettore è attualmente posizionato può contenere <see langword="Value" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-416">
              <see langword="true" /> if the node on which the reader is currently positioned can have a <see langword="Value" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-417">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-417">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-418">La tabella seguente elenca i tipi di nodo che hanno un valore da restituire.</span><span class="sxs-lookup"><span data-stu-id="be116-418">The following table lists node types that have a value to return.</span></span>  
  
|<span data-ttu-id="be116-419">Tipo di nodo</span><span class="sxs-lookup"><span data-stu-id="be116-419">Node type</span></span>|<span data-ttu-id="be116-420">Valore</span><span class="sxs-lookup"><span data-stu-id="be116-420">Value</span></span>|  
|---------------|-----------|  
|`Attribute`|<span data-ttu-id="be116-421">Valore dell'attributo.</span><span class="sxs-lookup"><span data-stu-id="be116-421">The value of the attribute.</span></span>|  
|`CDATA`|<span data-ttu-id="be116-422">Contenuto della sezione CDATA.</span><span class="sxs-lookup"><span data-stu-id="be116-422">The content of the CDATA section.</span></span>|  
|`Comment`|<span data-ttu-id="be116-423">Contenuto del commento.</span><span class="sxs-lookup"><span data-stu-id="be116-423">The content of the comment.</span></span>|  
|`DocumentType`|<span data-ttu-id="be116-424">Sottoinsieme interno.</span><span class="sxs-lookup"><span data-stu-id="be116-424">The internal subset.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="be116-425">Intero contenuto, esclusa la destinazione.</span><span class="sxs-lookup"><span data-stu-id="be116-425">The entire content, excluding the target.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="be116-426">Spazio vuoto tra markup in un modello con contenuto misto.</span><span class="sxs-lookup"><span data-stu-id="be116-426">The white space between markup in a mixed content model.</span></span>|  
|`Text`|<span data-ttu-id="be116-427">Contenuto del nodo di testo.</span><span class="sxs-lookup"><span data-stu-id="be116-427">The content of the text node.</span></span>|  
|`Whitespace`|<span data-ttu-id="be116-428">Spazio vuoto tra markup.</span><span class="sxs-lookup"><span data-stu-id="be116-428">The white space between markup.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="be116-429">Contenuto della dichiarazione.</span><span class="sxs-lookup"><span data-stu-id="be116-429">The content of the declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="be116-430">Nell'esempio seguente visualizza il valore per ogni nodo che può avere un valore.</span><span class="sxs-lookup"><span data-stu-id="be116-430">The following example displays the value for every node that can have a value.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.HasValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.HasValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.HasValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-431">Nell'esempio viene utilizzato il file, `book1.xml`, come input.</span><span class="sxs-lookup"><span data-stu-id="be116-431">The example uses the file, `book1.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.HasValue Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public override bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool" Usage="System.Xml.XmlTextReader.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-432">Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-432">Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-433">Questa proprietà restituisce sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-433">This property always returns <see langword="false" />.</span>
          </span>
          <span data-ttu-id="be116-434">(<see cref="T:System.Xml.XmlTextReader" /> non espande gli attributi predefiniti).</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-434">(<see cref="T:System.Xml.XmlTextReader" /> does not expand default attributes.)</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-435">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-435">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-436">Questa proprietà si applica solo ai nodi attributo.</span><span class="sxs-lookup"><span data-stu-id="be116-436">This property applies only to attribute nodes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public override bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmptyElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElement : bool" Usage="System.Xml.XmlTextReader.IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-437">Gets a value indicating whether the current node is an empty element (for example, <c>&lt;MyElement/&gt;</c>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-437">Gets a value indicating whether the current node is an empty element (for example, <c>&lt;MyElement/&gt;</c>).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-438">
            <see langword="true" /> Se il nodo corrente rappresenta un elemento (<see cref="P:System.Xml.XmlTextReader.NodeType" /> è uguale a <see langword="XmlNodeType.Element" />) che termina con <c> / &gt; </c>; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-438">
              <see langword="true" /> if the current node is an element (<see cref="P:System.Xml.XmlTextReader.NodeType" /> equals <see langword="XmlNodeType.Element" />) that ends with <c>/&gt;</c>; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-439">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-439">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-440">Questa proprietà consente di determinare la differenza tra le seguenti stringhe:</span><span class="sxs-lookup"><span data-stu-id="be116-440">This property enables you to determine the difference between the following:</span></span>  
  
 <span data-ttu-id="be116-441">`<item num="123"/>` (`IsEmptyElement` è `true`).</span><span class="sxs-lookup"><span data-stu-id="be116-441">`<item num="123"/>` (`IsEmptyElement` is `true`).</span></span>  
  
 <span data-ttu-id="be116-442">`<item num="123">` (`IsEmptyElement` è `false`, anche se il contenuto dell'elemento è vuoto).</span><span class="sxs-lookup"><span data-stu-id="be116-442">`<item num="123">` (`IsEmptyElement` is `false`, although element content is empty).</span></span>  
  
 <span data-ttu-id="be116-443">Un corrispondente `EndElement` nodo non viene generato per elementi vuoti.</span><span class="sxs-lookup"><span data-stu-id="be116-443">A corresponding `EndElement` node is not generated for empty elements.</span></span>  
  
 <span data-ttu-id="be116-444">`IsEmptyElement` indica semplicemente se l'elemento nel documento di origine dispone di un tag di fine dell'elemento.</span><span class="sxs-lookup"><span data-stu-id="be116-444">`IsEmptyElement` simply reports whether or not the element in the source document had an end element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-445">Nell'esempio seguente consente di visualizzare il contenuto di testo di ogni elemento.</span><span class="sxs-lookup"><span data-stu-id="be116-445">The following example displays the text content of each element.</span></span>  
  
 [!code-cpp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-446">Nell'esempio viene utilizzato il file, `elems.xml`, come input.</span><span class="sxs-lookup"><span data-stu-id="be116-446">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlReader.IsStartElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int" Usage="System.Xml.XmlTextReader.LineNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LineNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-447">Gets the current line number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-447">Gets the current line number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-448">Numero di riga corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-448">The current line number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-449">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-449">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-450">Questa proprietà viene in genere utilizzata per la segnalazione degli errori, ma può essere chiamata in qualsiasi momento.</span><span class="sxs-lookup"><span data-stu-id="be116-450">This property is most commonly used for error reporting, but can be called at any time.</span></span> <span data-ttu-id="be116-451">Il valore iniziale di questa proprietà è `1`.</span><span class="sxs-lookup"><span data-stu-id="be116-451">The starting value for this property is `1`.</span></span>  
  
 <span data-ttu-id="be116-452">Abbinata <xref:System.Xml.XmlTextReader.LinePosition%2A>, il valore `1,1` indica l'inizio del documento.</span><span class="sxs-lookup"><span data-stu-id="be116-452">Combined with <xref:System.Xml.XmlTextReader.LinePosition%2A>, a value of `1,1` indicates the start of the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-453">L'esempio seguente mostra ogni nodo compresi profondità, numero di riga e della posizione di riga.</span><span class="sxs-lookup"><span data-stu-id="be116-453">The following example displays each node including its depth, line number, and line position.</span></span>  
  
 [!code-cpp[XmlTextReader.LineNum#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.LineNum/CPP/readlinenum.cpp#1)]
 [!code-csharp[XmlTextReader.LineNum#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.LineNum/CS/readlinenum.cs#1)]
 [!code-vb[XmlTextReader.LineNum#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.LineNum/VB/readlinenum.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LinePosition : int" Usage="System.Xml.XmlTextReader.LinePosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LinePosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-454">Gets the current line position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-454">Gets the current line position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-455">Posizione corrente della riga.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-455">The current line position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-456">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-456">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-457">Questa proprietà viene in genere utilizzata per la segnalazione degli errori, ma può essere chiamata in qualsiasi momento.</span><span class="sxs-lookup"><span data-stu-id="be116-457">This property is most commonly used for error reporting, but can be called at any time.</span></span> <span data-ttu-id="be116-458">Valore iniziale della proprietà è `1`.</span><span class="sxs-lookup"><span data-stu-id="be116-458">The property's starting value is `1`.</span></span>  
  
 <span data-ttu-id="be116-459">La posizione indicata è il primo carattere del testo nel markup.</span><span class="sxs-lookup"><span data-stu-id="be116-459">The position indicated is the first character of text in the markup.</span></span>  
  
```  
<root>  
abc<tag/>  
</root>  
```  
  
 <span data-ttu-id="be116-460">Nella prima riga del testo XML precedente, un `LinePosition` dei `2` corrisponde al carattere `r`; nella seconda riga, una `LinePosition` di `5` corrisponde al carattere `t`; e nella terza riga, un `LinePosition` dei `3` corrisponde al carattere `r`.</span><span class="sxs-lookup"><span data-stu-id="be116-460">On the first line of the preceding XML text, a `LinePosition` of `2` corresponds to the character `r`; on the second line, a `LinePosition` of `5` corresponds to the character `t`; and on the third line, a `LinePosition` of `3` corresponds to the character `r`.</span></span>  
  
 <span data-ttu-id="be116-461">Abbinata <xref:System.Xml.XmlTextReader.LineNumber%2A>, il valore `1,1` indica l'inizio del documento.</span><span class="sxs-lookup"><span data-stu-id="be116-461">Combined with <xref:System.Xml.XmlTextReader.LineNumber%2A>, a value of `1,1` indicates the start of the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-462">L'esempio seguente mostra ogni nodo compresi profondità, numero di riga e della posizione di riga.</span><span class="sxs-lookup"><span data-stu-id="be116-462">The following example displays each node including its depth, line number, and line position.</span></span>  
  
 [!code-cpp[XmlTextReader.LineNum#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.LineNum/CPP/readlinenum.cpp#1)]
 [!code-csharp[XmlTextReader.LineNum#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.LineNum/CS/readlinenum.cs#1)]
 [!code-vb[XmlTextReader.LineNum#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.LineNum/VB/readlinenum.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlTextReader.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-463">Gets the local name of the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-463">Gets the local name of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-464">Nome del nodo corrente senza il prefisso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-464">The name of the current node with the prefix removed.</span>
          </span>
          <span data-ttu-id="be116-465">Ad esempio <see langword="LocalName" /> viene <see langword="book" /> per l'elemento <c> &lt;bk: book&gt;</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-465">For example, <see langword="LocalName" /> is <see langword="book" /> for the element <c>&lt;bk:book&gt;</c>.</span>
          </span>
          <span data-ttu-id="be116-466">Per i tipi di nodo privi di nome, quali <see langword="Text" />, <see langword="Comment" /> e così via, questa proprietà restituisce <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-466">For node types that do not have a name (like <see langword="Text" />, <see langword="Comment" />, and so on), this property returns <see langword="String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-467">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-467">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-468">Nell'esempio seguente visualizza il nome locale di ogni nodo e, se presenti, il prefisso e URI dello spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="be116-468">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-469">Nell'esempio viene utilizzato il file, `book2.xml`, come input.</span><span class="sxs-lookup"><span data-stu-id="be116-469">The example uses the file, `book2.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.LocalName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public override string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="override this.LookupNamespace : string -&gt; string" Usage="xmlTextReader.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="be116-470">The prefix whose namespace URI you want to resolve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-470">The prefix whose namespace URI you want to resolve.</span>
          </span>
          <span data-ttu-id="be116-471">To match the default namespace, pass an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-471">To match the default namespace, pass an empty string.</span>
          </span>
          <span data-ttu-id="be116-472">This string does not have to be atomized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-472">This string does not have to be atomized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-473">Resolves a namespace prefix in the current element's scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-473">Resolves a namespace prefix in the current element's scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-474">The namespace URI to which the prefix maps or <see langword="null" /> if no matching prefix is found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-474">The namespace URI to which the prefix maps or <see langword="null" /> if no matching prefix is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-475">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-475">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-476">Il codice XML seguente, se il lettore è posizionato in corrispondenza di `href` dell'attributo, il prefisso `a` viene risolto mediante la chiamata `reader.LookupNamespace("a")`.</span><span class="sxs-lookup"><span data-stu-id="be116-476">In the following XML, if the reader is positioned on the `href` attribute, the prefix `a` is resolved by calling `reader.LookupNamespace("a")`.</span></span> <span data-ttu-id="be116-477">La stringa restituita è `urn:456`.</span><span class="sxs-lookup"><span data-stu-id="be116-477">The returned string is `urn:456`.</span></span>  
  
```xml  
<root xmlns:a="urn:456">  
 <item>  
 <ref href="a:b"/>  
 </item>  
</root>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be116-478">The <see cref="P:System.Xml.XmlTextReader.Namespaces" /> property is set to <see langword="true" /> and the <paramref name="prefix" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-478">The <see cref="P:System.Xml.XmlTextReader.Namespaces" /> property is set to <see langword="true" /> and the <paramref name="prefix" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="be116-479">Moves to the specified attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-479">Moves to the specified attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-480">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-480">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override void MoveToAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MoveToAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub MoveToAttribute (i As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void MoveToAttribute(int i);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : int -&gt; unit" Usage="xmlTextReader.MoveToAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="be116-481">The index of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-481">The index of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-482">Moves to the attribute with the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-482">Moves to the attribute with the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-483">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-483">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-484">Nell'esempio seguente visualizza tutti gli attributi sul nodo corrente.</span><span class="sxs-lookup"><span data-stu-id="be116-484">The following example displays all attributes on the current node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="be116-485">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlReader.AttributeCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-485">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlReader.AttributeCount" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string -&gt; bool" Usage="xmlTextReader.MoveToAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="be116-486">The qualified name of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-486">The qualified name of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-487">Moves to the attribute with the specified name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-487">Moves to the attribute with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-488">
            <see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-488">
              <see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="be116-489">If <see langword="false" />, the reader's position does not change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-489">If <see langword="false" />, the reader's position does not change.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-490">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-490">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-491">Dopo la chiamata `MoveToAttribute`, il <xref:System.Xml.XmlTextReader.Name%2A>, <xref:System.Xml.XmlTextReader.NamespaceURI%2A>, e <xref:System.Xml.XmlTextReader.Prefix%2A> riflettono le proprietà di quell'attributo.</span><span class="sxs-lookup"><span data-stu-id="be116-491">After calling `MoveToAttribute`, the <xref:System.Xml.XmlTextReader.Name%2A>, <xref:System.Xml.XmlTextReader.NamespaceURI%2A>, and <xref:System.Xml.XmlTextReader.Prefix%2A> properties reflects the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string * string -&gt; bool" Usage="xmlTextReader.MoveToAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="be116-492">The local name of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-492">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="be116-493">The namespace URI of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-493">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-494">Moves to the attribute with the specified local name and namespace URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-494">Moves to the attribute with the specified local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-495">
            <see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-495">
              <see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="be116-496">If <see langword="false" />, the reader's position does not change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-496">If <see langword="false" />, the reader's position does not change.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-497">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-497">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-498">Dopo la chiamata `MoveToAttribute`, il <xref:System.Xml.XmlTextReader.Name%2A>, <xref:System.Xml.XmlTextReader.NamespaceURI%2A>, e <xref:System.Xml.XmlTextReader.Prefix%2A> riflettono le proprietà di quell'attributo.</span><span class="sxs-lookup"><span data-stu-id="be116-498">After calling `MoveToAttribute`, the <xref:System.Xml.XmlTextReader.Name%2A>, <xref:System.Xml.XmlTextReader.NamespaceURI%2A>, and <xref:System.Xml.XmlTextReader.Prefix%2A> properties reflects the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public override bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToElement();" />
      <MemberSignature Language="F#" Value="override this.MoveToElement : unit -&gt; bool" Usage="xmlTextReader.MoveToElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be116-499">Moves to the element that contains the current attribute node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-499">Moves to the element that contains the current attribute node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-500">
            <see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <see langword="false" /> if the reader is not positioned on an attribute (the position of the reader does not change).</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-500">
              <see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <see langword="false" /> if the reader is not positioned on an attribute (the position of the reader does not change).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-501">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-501">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-502">Utilizzare questo metodo per restituire un elemento dopo lo spostamento tramite i relativi attributi.</span><span class="sxs-lookup"><span data-stu-id="be116-502">Use this method to return to an element after navigating through its attributes.</span></span> <span data-ttu-id="be116-503">Questo metodo si sposta il lettore a uno dei seguenti tipi di nodo: `Element`, `DocumentType`, o `XmlDeclaration`.</span><span class="sxs-lookup"><span data-stu-id="be116-503">This method moves the reader to one of the following node types: `Element`, `DocumentType`, or `XmlDeclaration`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-504">Nell'esempio seguente visualizza tutti gli attributi sul nodo corrente.</span><span class="sxs-lookup"><span data-stu-id="be116-504">The following example displays all attributes on the current node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToFirstAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToFirstAttribute : unit -&gt; bool" Usage="xmlTextReader.MoveToFirstAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be116-505">Moves to the first attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-505">Moves to the first attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-506">
            <see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false" /> (the position of the reader does not change).</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-506">
              <see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false" /> (the position of the reader does not change).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-507">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-507">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-508">Nell'esempio seguente ottiene il valore del primo attributo del nodo radice.</span><span class="sxs-lookup"><span data-stu-id="be116-508">The following example gets the value of the first attribute of the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-509">Nell'esempio viene utilizzato il file, `attrs.xml`, come input.</span><span class="sxs-lookup"><span data-stu-id="be116-509">The example uses the file, `attrs.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.MoveToFirstAttribute Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToNextAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToNextAttribute : unit -&gt; bool" Usage="xmlTextReader.MoveToNextAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be116-510">Moves to the next attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-510">Moves to the next attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-511">
            <see langword="true" /> if there is a next attribute; <see langword="false" /> if there are no more attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-511">
              <see langword="true" /> if there is a next attribute; <see langword="false" /> if there are no more attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-512">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-512">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-513">Se il nodo corrente è un nodo elemento, questo metodo equivale a <xref:System.Xml.XmlTextReader.MoveToFirstAttribute%2A>.</span><span class="sxs-lookup"><span data-stu-id="be116-513">If the current node is an element node, this method is equivalent to <xref:System.Xml.XmlTextReader.MoveToFirstAttribute%2A>.</span></span> <span data-ttu-id="be116-514">Se `MoveToNextAttribute` restituisce `true`, il lettore passa all'attributo successivo; in caso contrario, la posizione del lettore non subirà alcuna modifica.</span><span class="sxs-lookup"><span data-stu-id="be116-514">If `MoveToNextAttribute` returns `true`, the reader moves to the next attribute; otherwise, the position of the reader does not change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-515">Nell'esempio seguente visualizza tutti gli attributi sul nodo corrente.</span><span class="sxs-lookup"><span data-stu-id="be116-515">The following example displays all attributes on the current node.</span></span>  
  
 [!code-cpp[Classic WebData XmlReader.HasAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.HasAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlReader.HasAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.HasAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlReader.HasAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.HasAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlTextReader.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-516">Gets the qualified name of the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-516">Gets the qualified name of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-517">Nome completo del nodo corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-517">The qualified name of the current node.</span>
          </span>
          <span data-ttu-id="be116-518">Ad esempio <see langword="Name" /> viene <see langword="bk:book" /> per l'elemento <c> &lt;bk: book&gt;</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-518">For example, <see langword="Name" /> is <see langword="bk:book" /> for the element <c>&lt;bk:book&gt;</c>.</span>
          </span>
          <span data-ttu-id="be116-519">Il nome restituito dipende dalla proprietà <see cref="P:System.Xml.XmlTextReader.NodeType" /> del nodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-519">The name returned is dependent on the <see cref="P:System.Xml.XmlTextReader.NodeType" /> of the node.</span>
          </span>
          <span data-ttu-id="be116-520">I seguenti tipi di nodo restituiscono i valori inclusi nell'elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-520">The following node types return the listed values.</span>
          </span>
          <span data-ttu-id="be116-521">Tutti gli altri tipi di nodo restituiscono una stringa vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-521">All other node types return an empty string.</span>
          </span>
          <span data-ttu-id="be116-522">
            <list type="table">
              <listheader>
                <term> Tipo di nodo </term>
                <description> nome </description>
              </listheader>
              <item>
                <term>
                  <see langword="Attribute" />
                </term>
                <description> il nome dell'attributo.  </description>
              </item>
              <item>
                <term>
                  <see langword="DocumentType" />
                </term>
                <description> Il nome del tipo di documento.  </description>
              </item>
              <item>
                <term>
                  <see langword="Element" />
                </term>
                <description> Il nome del tag.  </description>
              </item>
              <item>
                <term>
                  <see langword="EntityReference" />
                </term>
                <description> Il nome dell'entità di riferimento.  </description>
              </item>
              <item>
                <term>
                  <see langword="ProcessingInstruction" />
                </term>
                <description> La destinazione dell'istruzione di elaborazione.  </description>
              </item>
              <item>
                <term>
                  <see langword="XmlDeclaration" />
                </term>
                <description> La stringa letterale <see langword="xml" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-522">
              <list type="table">
                <listheader>
                  <term> Node Type  </term>
                  <description> Name  </description>
                </listheader>
                <item>
                  <term>
                    <see langword="Attribute" />
                  </term>
                  <description> The name of the attribute.  </description>
                </item>
                <item>
                  <term>
                    <see langword="DocumentType" />
                  </term>
                  <description> The document type name.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Element" />
                  </term>
                  <description> The tag name.  </description>
                </item>
                <item>
                  <term>
                    <see langword="EntityReference" />
                  </term>
                  <description> The name of the entity referenced.  </description>
                </item>
                <item>
                  <term>
                    <see langword="ProcessingInstruction" />
                  </term>
                  <description> The target of the processing instruction.  </description>
                </item>
                <item>
                  <term>
                    <see langword="XmlDeclaration" />
                  </term>
                  <description> The literal string <see langword="xml" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-523">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-523">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-524">Nell'esempio seguente legge un file XML e vengono visualizzati tutti i nodi.</span><span class="sxs-lookup"><span data-stu-id="be116-524">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-525">L'esempio Usa il file `items.xml`.</span><span class="sxs-lookup"><span data-stu-id="be116-525">The sample uses the file `items.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlTextReader.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-526">Gets or sets a value indicating whether to do namespace support.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-526">Gets or sets a value indicating whether to do namespace support.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-527">
            <see langword="true" /> per supportare lo spazio dei nomi; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-527">
              <see langword="true" /> to do namespace support; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="be116-528">Il valore predefinito è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-528">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-529">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-529">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-530">Questa proprietà determina se il lettore supporta gli spazi dei nomi W3C in XML, disponibile all'indirizzo www.w3.org/TR/REC-xml-names.</span><span class="sxs-lookup"><span data-stu-id="be116-530">This property determines whether the reader supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</span></span>  
  
 <span data-ttu-id="be116-531">Il `Namespaces` Impossibile impostare la proprietà dopo che si è verificata un'operazione di lettura.</span><span class="sxs-lookup"><span data-stu-id="be116-531">The `Namespaces` property cannot be set after a read operation has occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be116-532">Setting this property after a read operation has occurred (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is not <see langword="ReadState.Initial" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-532">Setting this property after a read operation has occurred (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is not <see langword="ReadState.Initial" />).</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlTextReader.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-533">Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-533">Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-534">URI dello spazio dei nomi del nodo corrente; in caso contrario, una stringa vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-534">The namespace URI of the current node; otherwise an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-535">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-535">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-536">Questa proprietà è rilevante per `Element` e `Attribute` solo i nodi.</span><span class="sxs-lookup"><span data-stu-id="be116-536">This property is relevant to `Element` and `Attribute` nodes only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-537">Nell'esempio seguente visualizza il nome locale di ogni nodo e, se presenti, il prefisso e URI dello spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="be116-537">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-538">Nell'esempio viene utilizzato il file, `book2.xml`, come input.</span><span class="sxs-lookup"><span data-stu-id="be116-538">The example uses the file, `book2.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.LocalName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlTextReader.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-539">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-539">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-540">Oggetto <see langword="XmlNameTable" /> che consente di ottenere la versione atomizzata di una stringa all'interno del nodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-540">The <see langword="XmlNameTable" /> enabling you to get the atomized version of a string within the node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-541">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-541">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-542">Tutti i nomi di nodo e di attributo restituiscano da <xref:System.Xml.XmlTextReader> vengono suddivisi utilizzando il `NameTable`.</span><span class="sxs-lookup"><span data-stu-id="be116-542">All node and attribute names returned from <xref:System.Xml.XmlTextReader> are atomized using the `NameTable`.</span></span> <span data-ttu-id="be116-543">Quando viene restituito più volte lo stesso nome (ad esempio `Customer`), quindi lo stesso `String` viene restituito per il nome dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="be116-543">When the same name is returned multiple times (for example, `Customer`), then the same `String` object is returned for that name.</span></span> <span data-ttu-id="be116-544">Questo rende possibile scrivere codice efficace tale oggetto i confronti per queste stringhe anziché i confronti tra stringhe costosa.</span><span class="sxs-lookup"><span data-stu-id="be116-544">This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlTextReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-545">Gets the type of the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-545">Gets the type of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-546">Uno dei valori di <see cref="T:System.Xml.XmlNodeType" /> che rappresenta il tipo del nodo corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-546">One of the <see cref="T:System.Xml.XmlNodeType" /> values representing the type of the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-547">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-547">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-548">Questa proprietà non restituisce mai seguenti `XmlNodeType` i tipi: `Document`, `DocumentFragment`, `Entity`, `EndEntity`, o `Notation`.</span><span class="sxs-lookup"><span data-stu-id="be116-548">This property never returns the following `XmlNodeType` types: `Document`, `DocumentFragment`, `Entity`, `EndEntity`, or `Notation`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-549">Nell'esempio seguente legge un file XML e vengono visualizzati tutti i nodi.</span><span class="sxs-lookup"><span data-stu-id="be116-549">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-550">L'esempio Usa il file `items.xml`.</span><span class="sxs-lookup"><span data-stu-id="be116-550">The sample uses the file `items.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Normalization">
      <MemberSignature Language="C#" Value="public bool Normalization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Normalization" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Normalization" />
      <MemberSignature Language="VB.NET" Value="Public Property Normalization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Normalization { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Normalization : bool with get, set" Usage="System.Xml.XmlTextReader.Normalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-551">Gets or sets a value indicating whether to normalize white space and attribute values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-551">Gets or sets a value indicating whether to normalize white space and attribute values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-552">
            <see langword="true" /> per normalizzare; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-552">
              <see langword="true" /> to normalize; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="be116-553">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-553">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-554">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-554">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-555">Questa proprietà può essere modificata in qualsiasi momento e viene applicato durante la successiva operazione di lettura.</span><span class="sxs-lookup"><span data-stu-id="be116-555">This property can be changed at any time and takes effect on the next read operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be116-556">Se il <xref:System.Xml.XmlTextReader> viene utilizzato per costruire un' <xref:System.Xml.XmlValidatingReader>, per normalizzare i valori di attributo `Normalization` deve essere impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="be116-556">If the <xref:System.Xml.XmlTextReader> is used to construct an <xref:System.Xml.XmlValidatingReader>, to normalize attribute values, `Normalization` must be set to `true`.</span></span>  
  
 <span data-ttu-id="be116-557">Se `Normalization` è impostata su `false`, verrà disattivato anche l'intervallo di caratteri cercare entità numerica.</span><span class="sxs-lookup"><span data-stu-id="be116-557">If `Normalization` is set to `false`, this also disables character range checking for numeric entities.</span></span> <span data-ttu-id="be116-558">Di conseguenza, entità di caratteri, ad esempio `&#0;`, sono consentiti.</span><span class="sxs-lookup"><span data-stu-id="be116-558">As a result, character entities, such as `&#0;`, are allowed.</span></span>  
  
 <span data-ttu-id="be116-559">Di seguito vengono illustrate la normalizzazione di valore attributo:</span><span class="sxs-lookup"><span data-stu-id="be116-559">The following describes attribute value normalization:</span></span>  
  
-   <span data-ttu-id="be116-560">Per un riferimento a un carattere aggiungere il carattere referenziato al valore dell'attributo.</span><span class="sxs-lookup"><span data-stu-id="be116-560">For a character reference, append the referenced character to the attribute value.</span></span>  
  
-   <span data-ttu-id="be116-561">Per un riferimento a entità elaborare in modo ricorsivo il testo di sostituzione dell'entità.</span><span class="sxs-lookup"><span data-stu-id="be116-561">For an entity reference, recursively process the replacement text of the entity.</span></span>  
  
-   <span data-ttu-id="be116-562">Per un carattere di spazio (#x20 #xD, #xA, #x9), aggiungere #x20 al valore normalizzato.</span><span class="sxs-lookup"><span data-stu-id="be116-562">For a white space character (#x20, #xD, #xA, #x9), append #x20 to the normalized value.</span></span> <span data-ttu-id="be116-563">(Per una sequenza "#xD #xA" che è parte di un'entità analizzata esterna o il valore letterale entità di un'entità analizzata interna viene aggiunta solo una singola #x20).</span><span class="sxs-lookup"><span data-stu-id="be116-563">(Only a single #x20 is appended for a "#xD#xA" sequence that is part of an external parsed entity or the literal entity value of an internal parsed entity.)</span></span>  
  
-   <span data-ttu-id="be116-564">Elaborare gli altri caratteri aggiungendoli al valore normalizzato.</span><span class="sxs-lookup"><span data-stu-id="be116-564">Process other characters by appending them to the normalized value.</span></span>  
  
-   <span data-ttu-id="be116-565">Se il valore dichiarato non CDATA, ignorare i caratteri di spazio (#x20) iniziali e finali e sostituire le sequenze di caratteri di spazio (#x20) con un carattere di spazio (#x20).</span><span class="sxs-lookup"><span data-stu-id="be116-565">If the declared value is not CDATA, discard any leading and trailing space (#x20) characters and replace sequences of space (#x20) characters with a single space (#x20) character.</span></span>  
  
 <span data-ttu-id="be116-566">Il `XmlTextReader` esegue solo l'attributo o normalizzazione CDATA.</span><span class="sxs-lookup"><span data-stu-id="be116-566">The `XmlTextReader` only performs attribute or CDATA normalization.</span></span> <span data-ttu-id="be116-567">Questa operazione non venga normalizzazione specifica di DTD, a meno che non incluso in un `XmlValidatingReader`.</span><span class="sxs-lookup"><span data-stu-id="be116-567">It does not do DTD-specific normalization unless wrapped within an `XmlValidatingReader`.</span></span>  
  
 <span data-ttu-id="be116-568">Vedere la raccomandazione W3C XML 1.0 per ulteriori informazioni sulla normalizzazione.</span><span class="sxs-lookup"><span data-stu-id="be116-568">Refer to the W3C XML 1.0 recommendation for further discussion on normalization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-569">L'esempio seguente mostra il comportamento di lettore con normalizzazione attivata e quindi disattivata.</span><span class="sxs-lookup"><span data-stu-id="be116-569">The following example shows reader behavior with normalization turned on and then off.</span></span>  
  
 [!code-cpp[XmlTextReader.Normalization#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.Normalization/CPP/readnormal.cpp#1)]
 [!code-csharp[XmlTextReader.Normalization#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.Normalization/CS/readnormal.cs#1)]
 [!code-vb[XmlTextReader.Normalization#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.Normalization/VB/readnormal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be116-570">Setting this property when the reader is closed (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is <see langword="ReadState.Closed" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-570">Setting this property when the reader is closed (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is <see langword="ReadState.Closed" />).</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xml.XmlTextReader.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-571">Gets the namespace prefix associated with the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-571">Gets the namespace prefix associated with the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-572">Prefisso dello spazio dei nomi associato al nodo corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-572">The namespace prefix associated with the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-573">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-573">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-574">Nell'esempio seguente visualizza il nome locale di ogni nodo e, se presenti, il prefisso e URI dello spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="be116-574">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-575">Nell'esempio viene utilizzato il file, `book2.xml`, come input.</span><span class="sxs-lookup"><span data-stu-id="be116-575">The example uses the file, `book2.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.LocalName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ProhibitDtd">
      <MemberSignature Language="C#" Value="public bool ProhibitDtd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProhibitDtd" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.ProhibitDtd" />
      <MemberSignature Language="VB.NET" Value="Public Property ProhibitDtd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProhibitDtd { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProhibitDtd : bool with get, set" Usage="System.Xml.XmlTextReader.ProhibitDtd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use DtdProcessing property instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-576">Gets or sets a value indicating whether to allow DTD processing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-576">Gets or sets a value indicating whether to allow DTD processing.</span>
          </span>
          <span data-ttu-id="be116-577">This property is obsolete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-577">This property is obsolete.</span>
          </span>
          <span data-ttu-id="be116-578">Use <see cref="P:System.Xml.XmlTextReader.DtdProcessing" /> instead.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-578">Use <see cref="P:System.Xml.XmlTextReader.DtdProcessing" /> instead.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-579">
            <see langword="true" /> per non consentire l'elaborazione DTD; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-579">
              <see langword="true" /> to disallow DTD processing; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="be116-580">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-580">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-581">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-581">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-582">L'elaborazione della DTD è attivata per impostazione predefinita per le versioni precedenti la compatibilità.</span><span class="sxs-lookup"><span data-stu-id="be116-582">DTD processing is enabled by default for backwards compatibility.</span></span> <span data-ttu-id="be116-583">Tuttavia, a meno che l'applicazione richiede l'elaborazione della DTD, è necessario disabilitare questa impostazione.</span><span class="sxs-lookup"><span data-stu-id="be116-583">However, unless your application requires DTD processing, you should disable this setting.</span></span> <span data-ttu-id="be116-584">La disabilitazione dell'elaborazione della DTD può essere utile per impedire gli attacchi di tipo Denial of Service.</span><span class="sxs-lookup"><span data-stu-id="be116-584">Disabling DTD processing can be useful in preventing certain denial of service attacks.</span></span> <span data-ttu-id="be116-585">Se impostato su `true`, il lettore genera un <xref:System.Xml.XmlException> quando viene rilevato alcun contenuto DTD.</span><span class="sxs-lookup"><span data-stu-id="be116-585">If set to `true`, the reader throws an <xref:System.Xml.XmlException> when any DTD content is encountered.</span></span>  
  
 <span data-ttu-id="be116-586">Se è attivata l'elaborazione DTD, è necessario essere consapevoli dell'inclusione vengano accettate DTD da origini non attendibili e possibili attacchi denial of service.</span><span class="sxs-lookup"><span data-stu-id="be116-586">If you have DTD processing enabled, you need to be aware of including DTDs from untrusted sources and possible denial of service attacks.</span></span> <span data-ttu-id="be116-587">Usare la <xref:System.Xml.XmlSecureResolver> per limitare le risorse che il <xref:System.Xml.XmlTextReader> può accedere.</span><span class="sxs-lookup"><span data-stu-id="be116-587">Use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlTextReader> can access.</span></span> <span data-ttu-id="be116-588">È anche possibile progettare l'applicazione in modo da specificare vincoli di memoria e di tempo per l'elaborazione XML.</span><span class="sxs-lookup"><span data-stu-id="be116-588">You can also design your application so that the XML processing is memory and time constrained.</span></span> <span data-ttu-id="be116-589">Ad esempio, configurare i limiti di timeout nell'applicazione ASP.NET</span><span class="sxs-lookup"><span data-stu-id="be116-589">For example, configure time-out limits in your ASP.NET application</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public override char QuoteChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char" Usage="System.Xml.XmlTextReader.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-590">Gets the quotation mark character used to enclose the value of an attribute node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-590">Gets the quotation mark character used to enclose the value of an attribute node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-591">Carattere virgoletta (" o ') usato per delimitare il valore del nodo di un attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-591">The quotation mark character (" or ') used to enclose the value of an attribute node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-592">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-592">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-593">Questa proprietà si applica solo a un nodo attributo.</span><span class="sxs-lookup"><span data-stu-id="be116-593">This property applies only to an attribute node.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="xmlTextReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be116-594">Reads the next node from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-594">Reads the next node from the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-595">
            <see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-595">
              <see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes to read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-596">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-596">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-597">Quando un lettore viene innanzitutto creato e inizializzato, non è disponibile alcuna informazione.</span><span class="sxs-lookup"><span data-stu-id="be116-597">When a reader is first created and initialized, there is no information available.</span></span> <span data-ttu-id="be116-598">È necessario chiamare `Read` per leggere il primo nodo.</span><span class="sxs-lookup"><span data-stu-id="be116-598">You must call `Read` to read the first node.</span></span>  
  
 <span data-ttu-id="be116-599">Questo metodo richiede almeno quattro byte dal flusso di dati per iniziare l'analisi.</span><span class="sxs-lookup"><span data-stu-id="be116-599">This method requires at least four bytes from the data stream in order to begin parsing.</span></span> <span data-ttu-id="be116-600">Se vengono restituiti meno di quattro byte e non sono presenti più dati nel flusso, il metodo avrà esito negativo.</span><span class="sxs-lookup"><span data-stu-id="be116-600">If fewer than four bytes are returned and there is no more data in the stream, the method will fail.</span></span> <span data-ttu-id="be116-601">Se sono presenti più dati nel flusso, il metodo verrà bloccata durante l'analisi fino alla ricezione del quarto byte.</span><span class="sxs-lookup"><span data-stu-id="be116-601">If there is more data in the stream, the method will block parsing until receipt of the fourth byte.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-602">Nell'esempio seguente legge un file XML e viene visualizzato ogni nodo.</span><span class="sxs-lookup"><span data-stu-id="be116-602">The following example reads an XML file and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-603">L'esempio Usa il file `items.xml`.</span><span class="sxs-lookup"><span data-stu-id="be116-603">The sample uses the file `items.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="be116-604">An error occurred while parsing the XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-604">An error occurred while parsing the XML.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.EntityHandling" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public override bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ReadAttributeValue();" />
      <MemberSignature Language="F#" Value="override this.ReadAttributeValue : unit -&gt; bool" Usage="xmlTextReader.ReadAttributeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be116-605">Parses the attribute value into one or more <see langword="Text" />, <see langword="EntityReference" />, or <see langword="EndEntity" /> nodes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-605">Parses the attribute value into one or more <see langword="Text" />, <see langword="EntityReference" />, or <see langword="EndEntity" /> nodes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-606">
            <see langword="true" /> if there are nodes to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-606">
              <see langword="true" /> if there are nodes to return.</span>
          </span>
          <span data-ttu-id="be116-607">
            <see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-607">
              <see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</span>
          </span>
          <span data-ttu-id="be116-608">An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-608">An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of <see langword="String.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-609">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-609">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-610">Utilizzare questo metodo dopo la chiamata `MoveToAttribute` per leggere i nodi di riferimento di testo o entità che costituiscono il valore dell'attributo.</span><span class="sxs-lookup"><span data-stu-id="be116-610">Use this method after calling `MoveToAttribute` to read through the text or entity reference nodes that make up the attribute value.</span></span> <span data-ttu-id="be116-611">Il <xref:System.Xml.XmlReader.Depth%2A> dei nodi di valore di attributo è più la profondità del nodo attributo, incrementa e decrementa di uno quando si eseguono istruzioni dentro e fuori da riferimenti a entità generali.</span><span class="sxs-lookup"><span data-stu-id="be116-611">The <xref:System.Xml.XmlReader.Depth%2A> of the attribute value nodes is one plus the depth of the attribute node; it increments and decrements by one when you step into and out of general entity references.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-612">Nell'esempio seguente legge un attributo con nodi di testo ed entità.</span><span class="sxs-lookup"><span data-stu-id="be116-612">The following example reads an attribute with text and entity nodes.</span></span>  
  
 [!code-cpp[XmlTextReader.ReadAttributeValue#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.ReadAttributeValue/CPP/readattrval.cpp#1)]
 [!code-csharp[XmlTextReader.ReadAttributeValue#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.ReadAttributeValue/CS/readattrval.cs#1)]
 [!code-vb[XmlTextReader.ReadAttributeValue#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.ReadAttributeValue/VB/readattrval.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadBase64">
      <MemberSignature Language="C#" Value="public int ReadBase64 (byte[] array, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadBase64(unsigned int8[] array, int32 offset, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadBase64 (array As Byte(), offset As Integer, len As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadBase64(cli::array &lt;System::Byte&gt; ^ array, int offset, int len);" />
      <MemberSignature Language="F#" Value="member this.ReadBase64 : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadBase64 (array, offset, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="be116-613">The array of characters that serves as the buffer to which the text contents are written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-613">The array of characters that serves as the buffer to which the text contents are written.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="be116-614">The zero-based index into the array specifying where the method can begin to write to the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-614">The zero-based index into the array specifying where the method can begin to write to the buffer.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="be116-615">The number of bytes to write into the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-615">The number of bytes to write into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-616">Decodes Base64 and returns the decoded binary bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-616">Decodes Base64 and returns the decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-617">The number of bytes written to the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-617">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-618">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-618">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-619">Ad esempio <xref:System.Xml.XmlTextReader.ReadChars%2A>, questo metodo può essere chiamato successivamente per la lettura di grandi dimensioni flussi di testo incorporato.</span><span class="sxs-lookup"><span data-stu-id="be116-619">Like <xref:System.Xml.XmlTextReader.ReadChars%2A>, this method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="be116-620">Decodifica il contenuto Base64 e restituisce i byte binari decodificati (ad esempio, una codifica Base64 inline immagine GIF) nel buffer.</span><span class="sxs-lookup"><span data-stu-id="be116-620">It decodes Base64 content and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="be116-621">Vedere RFC 1521.</span><span class="sxs-lookup"><span data-stu-id="be116-621">See RFC 1521.</span></span> <span data-ttu-id="be116-622">(È possibile ottenere RFC dal [richiesta per il sito Web di commenti](https://www.rfc-editor.org).)</span><span class="sxs-lookup"><span data-stu-id="be116-622">(You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-623">Nell'esempio seguente legge un file contenente dati Base64 e BinHex.</span><span class="sxs-lookup"><span data-stu-id="be116-623">The following example reads a file containing Base64 and BinHex data.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-624">L'esempio Usa il file `binary.xml`</span><span class="sxs-lookup"><span data-stu-id="be116-624">The sample uses the file `binary.xml`</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.ReadBase64 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="be116-625">The Base64 sequence is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-625">The Base64 sequence is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be116-626">The value of <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-626">The value of <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="be116-627">
            <paramref name="offset" /> &lt; 0, or <paramref name="len" /> &lt; 0, or <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-627">
              <paramref name="offset" /> &lt; 0, or <paramref name="len" /> &lt; 0, or <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadBinHex">
      <MemberSignature Language="C#" Value="public int ReadBinHex (byte[] array, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadBinHex(unsigned int8[] array, int32 offset, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadBinHex (array As Byte(), offset As Integer, len As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadBinHex(cli::array &lt;System::Byte&gt; ^ array, int offset, int len);" />
      <MemberSignature Language="F#" Value="member this.ReadBinHex : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadBinHex (array, offset, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="be116-628">The byte array that serves as the buffer to which the decoded binary bytes are written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-628">The byte array that serves as the buffer to which the decoded binary bytes are written.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="be116-629">The zero-based index into the array specifying where the method can begin to write to the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-629">The zero-based index into the array specifying where the method can begin to write to the buffer.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="be116-630">The number of bytes to write into the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-630">The number of bytes to write into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-631">Decodes <see langword="BinHex" /> and returns the decoded binary bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-631">Decodes <see langword="BinHex" /> and returns the decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-632">The number of bytes written to your buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-632">The number of bytes written to your buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-633">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-633">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-634">Ad esempio <xref:System.Xml.XmlTextReader.ReadChars%2A>, questo metodo può essere chiamato successivamente per la lettura di grandi dimensioni flussi di testo incorporato.</span><span class="sxs-lookup"><span data-stu-id="be116-634">Like <xref:System.Xml.XmlTextReader.ReadChars%2A>, this method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="be116-635">Consente di decodificare `BinHex` il contenuto e restituisce i byte binari decodificati (ad esempio, un inline `BinHex` immagine GIF con codifica) nel buffer.</span><span class="sxs-lookup"><span data-stu-id="be116-635">It decodes `BinHex` content and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-636">L'esempio seguente viene letto un file contenente `Base64` e `BinHex` dati.</span><span class="sxs-lookup"><span data-stu-id="be116-636">The following example reads a file containing `Base64` and `BinHex` data.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-637">L'esempio Usa il file `binary.xml`</span><span class="sxs-lookup"><span data-stu-id="be116-637">The sample uses the file `binary.xml`</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.ReadBase64 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="be116-638">The <see langword="BinHex" /> sequence is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-638">The <see langword="BinHex" /> sequence is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be116-639">The value of <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-639">The value of <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="be116-640">
            <paramref name="offset" /> &lt; 0, or <paramref name="len" /> &lt; 0, or <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-640">
              <paramref name="offset" /> &lt; 0, or <paramref name="len" /> &lt; 0, or <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadChars">
      <MemberSignature Language="C#" Value="public int ReadChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadChars (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.ReadChars : char[] * int * int -&gt; int" Usage="xmlTextReader.ReadChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="be116-641">The array of characters that serves as the buffer to which the text contents are written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-641">The array of characters that serves as the buffer to which the text contents are written.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="be116-642">The position within <c>buffer</c> where the method can begin writing text contents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-642">The position within <c>buffer</c> where the method can begin writing text contents.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="be116-643">The number of characters to write into <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-643">The number of characters to write into <c>buffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-644">Reads the text contents of an element into a character buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-644">Reads the text contents of an element into a character buffer.</span>
          </span>
          <span data-ttu-id="be116-645">This method is designed to read large streams of embedded text by calling it successively.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-645">This method is designed to read large streams of embedded text by calling it successively.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-646">The number of characters read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-646">The number of characters read.</span>
          </span>
          <span data-ttu-id="be116-647">This can be <see langword="0" /> if the reader is not positioned on an element or if there is no more text content to return in the current context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-647">This can be <see langword="0" /> if the reader is not positioned on an element or if there is no more text content to return in the current context.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-648">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-648">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-649">Questo è il modo più efficiente per elaborare grandi flussi di testo incorporati in un documento XML.</span><span class="sxs-lookup"><span data-stu-id="be116-649">This is the most efficient way to process very large streams of text embedded in an XML document.</span></span> <span data-ttu-id="be116-650">Invece di allocare oggetti stringa di grandi dimensioni, `ReadChars` restituisce il contenuto di testo di un buffer alla volta.</span><span class="sxs-lookup"><span data-stu-id="be116-650">Rather than allocating large string objects, `ReadChars` returns text content a buffer at a time.</span></span> <span data-ttu-id="be116-651">Questo metodo è progettato per funzionare solo su nodi elemento.</span><span class="sxs-lookup"><span data-stu-id="be116-651">This method is designed to work only on element nodes.</span></span> <span data-ttu-id="be116-652">Altri tipi di nodo causa `ReadChars` per restituire `0`.</span><span class="sxs-lookup"><span data-stu-id="be116-652">Other node types cause `ReadChars` to return `0`.</span></span>  
  
 <span data-ttu-id="be116-653">Il codice XML seguente, se il lettore è posizionato sul tag di inizio `ReadChars` restituisce `test` e posiziona il lettore dopo il tag di fine.</span><span class="sxs-lookup"><span data-stu-id="be116-653">In the following XML, if the reader is positioned on the start tag, `ReadChars` returns `test` and positions the reader after the end tag.</span></span>  
  
```xml  
<Item>test</Item>  
```  
  
 <span data-ttu-id="be116-654">`ReadChars` presenta le funzionalità seguenti:</span><span class="sxs-lookup"><span data-stu-id="be116-654">`ReadChars` has the following functionality:</span></span>  
  
-   <span data-ttu-id="be116-655">Questo metodo è progettato per funzionare solo su nodi elemento.</span><span class="sxs-lookup"><span data-stu-id="be116-655">This method is designed to work on element nodes only.</span></span> <span data-ttu-id="be116-656">Altri tipi di nodo causa `ReadChars` restituirà 0.</span><span class="sxs-lookup"><span data-stu-id="be116-656">Other node types cause `ReadChars` to return 0.</span></span>  
  
-   <span data-ttu-id="be116-657">Questo metodo restituisce il contenuto effettivo del carattere.</span><span class="sxs-lookup"><span data-stu-id="be116-657">This method returns the actual character content.</span></span> <span data-ttu-id="be116-658">Non vi è alcun tentativo di risolvere le entità, CDATA o qualsiasi altro tag rilevato.</span><span class="sxs-lookup"><span data-stu-id="be116-658">There is no attempt to resolve entities, CDATA, or any other markup encountered.</span></span> <span data-ttu-id="be116-659">`ReadChars` Restituisce tutti gli elementi tra il tag di inizio e il tag di fine, incluso il markup.</span><span class="sxs-lookup"><span data-stu-id="be116-659">`ReadChars` returns everything between the start tag and the end tag, including markup.</span></span>  
  
-   <span data-ttu-id="be116-660">`ReadChars` Ignora il markup XML che non è corretto.</span><span class="sxs-lookup"><span data-stu-id="be116-660">`ReadChars` ignores XML markup that is not well-formed.</span></span> <span data-ttu-id="be116-661">Ad esempio, quando si leggono la stringa XML seguente `<A>1<A>2</A>`, `ReadChars` restituisce `1<A>2</A>`.</span><span class="sxs-lookup"><span data-stu-id="be116-661">For example, when reading the following XML string `<A>1<A>2</A>`, `ReadChars` returns `1<A>2</A>`.</span></span> <span data-ttu-id="be116-662">(Restituisce il markup della coppia di elementi corrispondenti e gli altri verranno ignorati.)</span><span class="sxs-lookup"><span data-stu-id="be116-662">(It returns markup from the matching element pair and ignores others.)</span></span>  
  
-   <span data-ttu-id="be116-663">Questo metodo non esegue alcun tipo di normalizzazione.</span><span class="sxs-lookup"><span data-stu-id="be116-663">This method does not do any normalization.</span></span>  
  
-   <span data-ttu-id="be116-664">Quando `ReadChars` ha raggiunto la fine del flusso di caratteri, restituisce il valore 0 e il lettore è posizionato dopo il tag di fine.</span><span class="sxs-lookup"><span data-stu-id="be116-664">When `ReadChars` has reached the end of the character stream, it returns the value 0 and the reader is positioned after the end tag.</span></span>  
  
-   <span data-ttu-id="be116-665">Leggere l'attributo metodi non sono disponibili quando si utilizza `ReadChars`.</span><span class="sxs-lookup"><span data-stu-id="be116-665">Attribute read methods are not available while using `ReadChars`.</span></span>  
  
 <span data-ttu-id="be116-666">Ad esempio, usando il codice XML seguente:</span><span class="sxs-lookup"><span data-stu-id="be116-666">For example, using the following XML:</span></span>  
  
```xml  
<thing>  
 some text  
</thing>  
<item>  
</item>  
```  
  
 <span data-ttu-id="be116-667">Il lettore è posizionato in corrispondenza di `<item>` ciclo elemento alla fine di while.</span><span class="sxs-lookup"><span data-stu-id="be116-667">The reader is positioned on the `<item>` element at the end of the while loop.</span></span>  
  
```csharp  
if (XmlNodeType.Element == reader.NodeType && "thing" == reader.Name)  
{  
 while(0 != reader.ReadChars(buffer, 0, 1)  
 {  
 // Do something.  
 // Attribute values are not available at this point.  
 }  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="be116-668">Nell'esempio seguente viene letto in XML usando `ReadChars`.</span><span class="sxs-lookup"><span data-stu-id="be116-668">The following example reads in XML using `ReadChars`.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.ReadChars Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadChars Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.ReadChars Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadChars Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.ReadChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.ReadChars Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-669">Nell'esempio viene utilizzato il file `items.xml` come input.</span><span class="sxs-lookup"><span data-stu-id="be116-669">The example uses the `items.xml` file as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="be116-670">
            <paramref name="count" /> is greater than the space specified in the <paramref name="buffer" /> (buffer size - <paramref name="index" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-670">
              <paramref name="count" /> is greater than the space specified in the <paramref name="buffer" /> (buffer size - <paramref name="index" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be116-671">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-671">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="be116-672">
            <paramref name="index" />
            <see langword="&lt; 0" /> or <paramref name="count" /><see langword="&lt; 0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-672">
              <paramref name="index" />
              <see langword="&lt; 0" /> or <paramref name="count" /><see langword="&lt; 0" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="be116-673">The buffer into which to copy the resulting text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-673">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="be116-674">This value cannot be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-674">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="be116-675">The offset into the buffer where to start copying the result.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-675">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="be116-676">The maximum number of bytes to copy into the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-676">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="be116-677">The actual number of bytes copied is returned from this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-677">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-678">Reads the content and returns the <see langword="Base64" /> decoded binary bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-678">Reads the content and returns the <see langword="Base64" /> decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-679">The number of bytes written to the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-679">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-680">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-680">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-681">Questo metodo streaming del contenuto, decodifica il `Base64` il contenuto e restituisce i byte binari decodificati (ad esempio, un inline `Base64`-immagine GIF con codifica) nel buffer.</span><span class="sxs-lookup"><span data-stu-id="be116-681">This method streams the content, decodes the `Base64` content, and returns the decoded binary bytes (for example, an inline `Base64`-encoded GIF image) into the buffer.</span></span> <span data-ttu-id="be116-682">Questo metodo può essere chiamato successivamente per la lettura di grandi dimensioni flussi di testo incorporato.</span><span class="sxs-lookup"><span data-stu-id="be116-682">This method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="be116-683">Per altre informazioni, vedere RFC 1521 "parte MIME (Multipurpose Internet Mail Extensions) uno: meccanismi per l'impostazione e che descrive il formato dei corpi dei messaggi Internet".</span><span class="sxs-lookup"><span data-stu-id="be116-683">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="be116-684">È possibile ottenere RFC dal [richiesta per il sito Web di commenti](https://www.rfc-editor.org).</span><span class="sxs-lookup"><span data-stu-id="be116-684">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be116-685">Non è necessario accedere a proprietà del visualizzatore tra le chiamate al <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> metodo fino a quando il metodo restituisce il valore 0.</span><span class="sxs-lookup"><span data-stu-id="be116-685">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="be116-686">Questo metodo presenta il seguente comportamento:</span><span class="sxs-lookup"><span data-stu-id="be116-686">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="be116-687"><xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> Restituisce il valore 0 quando raggiunta la fine del flusso di byte su cui è stato eseguito.</span><span class="sxs-lookup"><span data-stu-id="be116-687"><xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="be116-688">Il lettore è posizionato sul primo nodo non di contenuto.</span><span class="sxs-lookup"><span data-stu-id="be116-688">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="be116-689">Se si richiede un valore minore o uguale al numero dei byte vengono lasciati nel flusso il lettore resta nella posizione corrente.</span><span class="sxs-lookup"><span data-stu-id="be116-689">If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="be116-690"><xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> non è supportato nei tipi di nodo XML seguenti: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span><span class="sxs-lookup"><span data-stu-id="be116-690"><xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be116-691">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-691">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be116-692">
            <see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> is not supported in the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-692">
              <see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> is not supported in the current node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="be116-693">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-693">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="be116-694">The buffer into which to copy the resulting text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-694">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="be116-695">This value cannot be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-695">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="be116-696">The offset into the buffer where to start copying the result.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-696">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="be116-697">The maximum number of bytes to copy into the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-697">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="be116-698">The actual number of bytes copied is returned from this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-698">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-699">Reads the content and returns the <see langword="BinHex" /> decoded binary bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-699">Reads the content and returns the <see langword="BinHex" /> decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-700">The number of bytes written to the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-700">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-701">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-701">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-702">Questo metodo streaming del contenuto, decodifica il `BinHex` il contenuto e restituisce i byte binari decodificati (ad esempio, un inline `BinHex` immagine GIF con codifica) nel buffer.</span><span class="sxs-lookup"><span data-stu-id="be116-702">This method streams the content, decodes the `BinHex` content, and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer.</span></span> <span data-ttu-id="be116-703">Questo metodo può essere chiamato successivamente per la lettura di grandi dimensioni flussi di testo incorporato.</span><span class="sxs-lookup"><span data-stu-id="be116-703">This method can be called successively to read large streams of embedded text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be116-704">Non è necessario accedere a proprietà del visualizzatore tra le chiamate al <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> metodo fino a quando il metodo restituisce il valore 0.</span><span class="sxs-lookup"><span data-stu-id="be116-704">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="be116-705">Questo metodo presenta il seguente comportamento:</span><span class="sxs-lookup"><span data-stu-id="be116-705">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="be116-706"><xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> Restituisce il valore 0 quando raggiunta la fine del flusso di byte su cui è stato eseguito.</span><span class="sxs-lookup"><span data-stu-id="be116-706"><xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="be116-707">Il lettore è posizionato sul primo nodo non di contenuto.</span><span class="sxs-lookup"><span data-stu-id="be116-707">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="be116-708">Se si richiede un valore minore o uguale al numero dei byte vengono lasciati nel flusso il lettore resta nella posizione corrente.</span><span class="sxs-lookup"><span data-stu-id="be116-708">If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="be116-709"><xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> non è supportato nei tipi di nodo XML seguenti: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span><span class="sxs-lookup"><span data-stu-id="be116-709"><xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be116-710">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-710">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be116-711">
            <see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-711">
              <see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="be116-712">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-712">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="be116-713">The <see cref="T:System.Xml.XmlTextReader" /> implementation does not support this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-713">The <see cref="T:System.Xml.XmlTextReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadElementContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="be116-714">The buffer into which to copy the resulting text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-714">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="be116-715">This value cannot be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-715">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="be116-716">The offset into the buffer where to start copying the result.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-716">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="be116-717">The maximum number of bytes to copy into the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-717">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="be116-718">The actual number of bytes copied is returned from this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-718">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-719">Reads the element and decodes the Base64 content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-719">Reads the element and decodes the Base64 content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-720">The number of bytes written to the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-720">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-721">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-721">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-722">Questo metodo legge il contenuto dell'elemento, lo decodifica mediante la codifica Base64 e restituisce i byte binari decodificati (ad esempio, una codifica Base64 inline immagine GIF) nel buffer.</span><span class="sxs-lookup"><span data-stu-id="be116-722">This method reads the element content, decodes it using Base64 encoding, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="be116-723">Per altre informazioni, vedere RFC 1521 "parte MIME (Multipurpose Internet Mail Extensions) uno: meccanismi per l'impostazione e che descrive il formato dei corpi dei messaggi Internet".</span><span class="sxs-lookup"><span data-stu-id="be116-723">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="be116-724">È possibile ottenere RFC dal [richiesta per il sito Web di commenti](https://www.rfc-editor.org).</span><span class="sxs-lookup"><span data-stu-id="be116-724">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
 <span data-ttu-id="be116-725">Questo metodo può essere letto solo elementi con contenuto semplice.</span><span class="sxs-lookup"><span data-stu-id="be116-725">This method can only read simple-content elements.</span></span> <span data-ttu-id="be116-726">L'elemento può contenere testo, spazi vuoti, gli spazi vuoti significativi, sezioni CDATA, commenti e istruzioni di elaborazione.</span><span class="sxs-lookup"><span data-stu-id="be116-726">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="be116-727">Può contenere anche i riferimenti alle entità, vengono espansi automaticamente.</span><span class="sxs-lookup"><span data-stu-id="be116-727">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="be116-728">L'elemento non può avere elementi figlio.</span><span class="sxs-lookup"><span data-stu-id="be116-728">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="be116-729">Questo metodo è molto simile al <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> (metodo), con la differenza che può essere chiamato solo su tipi di nodi elemento.</span><span class="sxs-lookup"><span data-stu-id="be116-729">This method is very similar to the <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="be116-730">Se il `count` valore è superiore al numero di byte nel documento, o se è uguale al numero di byte nel documento, il <xref:System.Xml.XmlTextReader> legge tutti i byte rimanenti nel documento e restituisce il numero di byte letti.</span><span class="sxs-lookup"><span data-stu-id="be116-730">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlTextReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="be116-731">Alla successiva <xref:System.Xml.XmlTextReader> chiamata al metodo restituisce zero e sposta il lettore al nodo successivo il <xref:System.Xml.XmlNodeType.EndElement>.</span><span class="sxs-lookup"><span data-stu-id="be116-731">The next <xref:System.Xml.XmlTextReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement>.</span></span>  
  
 <span data-ttu-id="be116-732">Se si chiama <xref:System.Xml.XmlTextReader.Read%2A> prima di tutto il contenuto dell'elemento è stato elaborato, il lettore potrebbe comportarsi come se fosse stato utilizzato il primo contenuto e quindi il <xref:System.Xml.XmlTextReader.Read%2A> metodo è stato chiamato.</span><span class="sxs-lookup"><span data-stu-id="be116-732">If you call <xref:System.Xml.XmlTextReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlTextReader.Read%2A> method was called.</span></span> <span data-ttu-id="be116-733">Ciò significa che il lettore legge tutto il testo fino a quando non viene rilevato l'elemento finale.</span><span class="sxs-lookup"><span data-stu-id="be116-733">This means that the reader reads all the text until the end element is encountered.</span></span> <span data-ttu-id="be116-734">Quindi legge il nodo di tag di fine, legge il nodo successivo e quindi si posizionerà sul successivo nodo successivo.</span><span class="sxs-lookup"><span data-stu-id="be116-734">It then reads the end tag node, reads the next node, and then positions itself on the next subsequent node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-735">Vedere <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType> per vedere un esempio di utilizzo di questo metodo.</span><span class="sxs-lookup"><span data-stu-id="be116-735">See <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType> to see an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be116-736">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-736">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be116-737">The current node is not an element node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-737">The current node is not an element node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="be116-738">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-738">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="be116-739">The <see cref="T:System.Xml.XmlTextReader" /> implementation does not support this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-739">The <see cref="T:System.Xml.XmlTextReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="be116-740">The element contains mixed-content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-740">The element contains mixed-content.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="be116-741">The content cannot be converted to the requested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-741">The content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadElementContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="be116-742">The buffer into which to copy the resulting text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-742">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="be116-743">This value cannot be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-743">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="be116-744">The offset into the buffer where to start copying the result.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-744">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="be116-745">The maximum number of bytes to copy into the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-745">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="be116-746">The actual number of bytes copied is returned from this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-746">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-747">Reads the element and decodes the <see langword="BinHex" /> content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-747">Reads the element and decodes the <see langword="BinHex" /> content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-748">The number of bytes written to the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-748">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-749">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-749">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-750">Questo metodo legge il contenuto dell'elemento, lo decodifica mediante `BinHex` codifica e restituisce i byte binari decodificati (ad esempio, un inline `BinHex` immagine GIF con codifica) nel buffer.</span><span class="sxs-lookup"><span data-stu-id="be116-750">This method reads the element content, decodes it using `BinHex` encoding, and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer.</span></span>  
  
 <span data-ttu-id="be116-751">Questo metodo può essere letto solo elementi con contenuto semplice.</span><span class="sxs-lookup"><span data-stu-id="be116-751">This method can only read simple-content elements.</span></span> <span data-ttu-id="be116-752">L'elemento può contenere testo, spazi vuoti, gli spazi vuoti significativi, sezioni CDATA, commenti e istruzioni di elaborazione.</span><span class="sxs-lookup"><span data-stu-id="be116-752">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="be116-753">Può contenere anche i riferimenti alle entità, vengono espansi automaticamente.</span><span class="sxs-lookup"><span data-stu-id="be116-753">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="be116-754">L'elemento non può avere elementi figlio.</span><span class="sxs-lookup"><span data-stu-id="be116-754">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="be116-755">Questo metodo è molto simile al <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> (metodo), con la differenza che può essere chiamato solo su tipi di nodi elemento.</span><span class="sxs-lookup"><span data-stu-id="be116-755">This method is very similar to the <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="be116-756">Se il `count` valore è superiore al numero di byte nel documento, o se è uguale al numero di byte nel documento, il <xref:System.Xml.XmlTextReader> legge tutti i byte rimanenti nel documento e restituisce il numero di byte letti.</span><span class="sxs-lookup"><span data-stu-id="be116-756">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlTextReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="be116-757">Alla successiva <xref:System.Xml.XmlTextReader> chiamata al metodo restituisce zero e sposta il lettore al nodo successivo il <xref:System.Xml.XmlNodeType.EndElement>.</span><span class="sxs-lookup"><span data-stu-id="be116-757">The next <xref:System.Xml.XmlTextReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement>.</span></span>  
  
 <span data-ttu-id="be116-758">Se si chiama <xref:System.Xml.XmlTextReader.Read%2A> prima di tutto il contenuto dell'elemento è stato elaborato, il lettore potrebbe comportarsi come se fosse stato utilizzato il primo contenuto e quindi il <xref:System.Xml.XmlTextReader.Read%2A> metodo è stato chiamato.</span><span class="sxs-lookup"><span data-stu-id="be116-758">If you call <xref:System.Xml.XmlTextReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlTextReader.Read%2A> method was called.</span></span> <span data-ttu-id="be116-759">Ciò significa che il lettore legge tutto il testo fino a quando non viene rilevato l'elemento finale.</span><span class="sxs-lookup"><span data-stu-id="be116-759">This means that the reader reads all the text until the end element is encountered.</span></span> <span data-ttu-id="be116-760">Quindi legge il nodo di tag di fine, legge il nodo successivo e quindi si posizionerà sul successivo nodo successivo.</span><span class="sxs-lookup"><span data-stu-id="be116-760">It then reads the end tag node, reads the next node, and then positions itself on the next subsequent node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-761">Vedere <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType> per vedere un esempio di utilizzo di questo metodo.</span><span class="sxs-lookup"><span data-stu-id="be116-761">See <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType> to see an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be116-762">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-762">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be116-763">The current node is not an element node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-763">The current node is not an element node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="be116-764">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-764">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="be116-765">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-765">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="be116-766">The element contains mixed-content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-766">The element contains mixed-content.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="be116-767">The content cannot be converted to the requested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-767">The content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public override System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadState : System.Xml.ReadState" Usage="System.Xml.XmlTextReader.ReadState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-768">Gets the state of the reader.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-768">Gets the state of the reader.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-769">Uno dei valori di <see cref="T:System.Xml.ReadState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-769">One of the <see cref="T:System.Xml.ReadState" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-770">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-770">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public override string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadString();" />
      <MemberSignature Language="F#" Value="override this.ReadString : unit -&gt; string" Usage="xmlTextReader.ReadString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be116-771">Reads the contents of an element or a text node as a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-771">Reads the contents of an element or a text node as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-772">The contents of the element or text node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-772">The contents of the element or text node.</span>
          </span>
          <span data-ttu-id="be116-773">This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-773">This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.</span>
          </span>
          <span data-ttu-id="be116-774">
            <see langword="Note:" /> The text node can be either an element or an attribute text node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-774">
              <see langword="Note:" /> The text node can be either an element or an attribute text node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-775">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-775">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-776">Se posizionato su un elemento `ReadString` concatena tutti testo, spazio vuoto significativo, spazi vuoti, e `CData` nodo sezione tipi di insieme e restituisce i dati come il contenuto dell'elemento concatenati.</span><span class="sxs-lookup"><span data-stu-id="be116-776">If positioned on an element, `ReadString` concatenates all text, significant white space, white space, and `CData` section node types together and returns the concatenated data as the element content.</span></span> <span data-ttu-id="be116-777">Interrompe quando viene rilevato alcun markup, comprensivo di commenti e istruzioni di elaborazione.</span><span class="sxs-lookup"><span data-stu-id="be116-777">It stops when any markup is encountered, including comments and processing instructions.</span></span> <span data-ttu-id="be116-778">Questa situazione può verificarsi in un modello a contenuto misto oppure durante la lettura di un tag di fine elemento.</span><span class="sxs-lookup"><span data-stu-id="be116-778">This could occur in a mixed content model, or when an element end tag is read.</span></span>  
  
 <span data-ttu-id="be116-779">Se posizionato su un nodo di testo, `ReadString` esegue la concatenazione stesso dal nodo di testo per il tag di fine elemento.</span><span class="sxs-lookup"><span data-stu-id="be116-779">If positioned on a text node, `ReadString` performs the same concatenation from the text node to the element end tag.</span></span> <span data-ttu-id="be116-780">Se il lettore è posizionato in corrispondenza di un nodo di tipo text di un attributo, il metodo `ReadString` funzionerà come quando il lettore è posizionato in corrispondenza del tag di inizio dell'elemento,</span><span class="sxs-lookup"><span data-stu-id="be116-780">If the reader is positioned on an attribute text node, `ReadString` has the same functionality as if the reader were position on the element start tag.</span></span> <span data-ttu-id="be116-781">restituendo tutti i nodi di tipo text dell'elemento concatenati.</span><span class="sxs-lookup"><span data-stu-id="be116-781">It returns all the concatenated element text nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-782">Nell'esempio seguente consente di visualizzare il contenuto di testo di ogni elemento.</span><span class="sxs-lookup"><span data-stu-id="be116-782">The following example displays the text content of each element.</span></span>  
  
 [!code-cpp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-783">Nell'esempio viene utilizzato il file, `elems.xml`, come input.</span><span class="sxs-lookup"><span data-stu-id="be116-783">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlReader.IsStartElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="be116-784">An error occurred while parsing the XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-784">An error occurred while parsing the XML.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be116-785">An invalid operation was attempted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-785">An invalid operation was attempted.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ResetState">
      <MemberSignature Language="C#" Value="public void ResetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ResetState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetState();" />
      <MemberSignature Language="F#" Value="member this.ResetState : unit -&gt; unit" Usage="xmlTextReader.ResetState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be116-786">Resets the state of the reader to ReadState.Initial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-786">Resets the state of the reader to ReadState.Initial.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-787">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-787">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-788">Questo metodo consente di analizzare più documenti XML in un unico flusso.</span><span class="sxs-lookup"><span data-stu-id="be116-788">This method enables you to parse multiple XML documents in a single stream.</span></span> <span data-ttu-id="be116-789">Quando si raggiunge la fine di un documento XML, è possibile chiamare `ResetState` per reimpostare lo stato del lettore in preparazione per il successivo documento XML.</span><span class="sxs-lookup"><span data-stu-id="be116-789">When you reach the end of an XML document, you can call `ResetState` to reset the state of the reader in preparation for the next XML document.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="be116-790">I documenti nel flusso devono condividere la stessa codifica.</span><span class="sxs-lookup"><span data-stu-id="be116-790">The documents in the stream must share the same encoding.</span></span> <span data-ttu-id="be116-791">Se non è questo il caso, quando `ResetState` viene chiamato un <xref:System.Xml.XmlException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="be116-791">If this is not the case, when `ResetState` is called an <xref:System.Xml.XmlException> is thrown.</span></span> <span data-ttu-id="be116-792">(Si tratta di una modifica nel comportamento rispetto a .NET Framework versione 1.1 e versioni precedenti.)</span><span class="sxs-lookup"><span data-stu-id="be116-792">(This is a change in behavior from .NET Framework version 1.1 and earlier).</span></span>  
  
 <span data-ttu-id="be116-793">Le proprietà seguenti non sono interessate da `ResetState`.</span><span class="sxs-lookup"><span data-stu-id="be116-793">The following properties are not affected by `ResetState`.</span></span>  
  
-   <xref:System.Xml.XmlTextReader.Normalization%2A>  
  
-   <xref:System.Xml.XmlTextReader.Namespaces%2A>  
  
-   <xref:System.Xml.XmlTextReader.XmlResolver%2A>  
  
-   <xref:System.Xml.XmlTextReader.WhitespaceHandling%2A>  
  
   
  
## Examples  
 <span data-ttu-id="be116-794">Nell'esempio seguente vengono analizzati due documenti XML in un unico flusso.</span><span class="sxs-lookup"><span data-stu-id="be116-794">The following example parses two XML documents in a single stream.</span></span>  
  
 [!code-cpp[XmlTextReader.ResetState#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.ResetState/CPP/resetstate.cpp#1)]
 [!code-csharp[XmlTextReader.ResetState#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.ResetState/CS/resetstate.cs#1)]
 [!code-vb[XmlTextReader.ResetState#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.ResetState/VB/resetstate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be116-795">Calling <see langword="ResetState" /> if the reader was constructed using an <see cref="T:System.Xml.XmlParserContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-795">Calling <see langword="ResetState" /> if the reader was constructed using an <see cref="T:System.Xml.XmlParserContext" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="be116-796">Documents in a single stream do not share the same encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-796">Documents in a single stream do not share the same encoding.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.ReadState" />
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public override void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResolveEntity();" />
      <MemberSignature Language="F#" Value="override this.ResolveEntity : unit -&gt; unit" Usage="xmlTextReader.ResolveEntity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be116-797">Resolves the entity reference for <see langword="EntityReference" /> nodes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-797">Resolves the entity reference for <see langword="EntityReference" /> nodes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-798">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-798">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-799">Se il lettore è posizionato su un `EntityReference` nodo (`XmlNodeType.EntityReference`), se <xref:System.Xml.XmlTextReader.Read%2A> viene chiamato dopo aver chiamato questo metodo, il testo di sostituzione di entità viene analizzato.</span><span class="sxs-lookup"><span data-stu-id="be116-799">If the reader is positioned on an `EntityReference` node (`XmlNodeType.EntityReference`), if <xref:System.Xml.XmlTextReader.Read%2A> is called after calling this method, the entity replacement text is parsed.</span></span> <span data-ttu-id="be116-800">Al termine del testo di sostituzione dell'entità, un `EndEntity` nodo viene restituito per chiudere l'ambito di riferimento di entità.</span><span class="sxs-lookup"><span data-stu-id="be116-800">When the entity replacement text is finished, an `EndEntity` node is returned to close the entity reference scope.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be116-801">Dopo aver chiamato questo metodo, se l'entità è parte di un valore di attributo, è necessario chiamare <xref:System.Xml.XmlTextReader.ReadAttributeValue%2A> al passaggio all'interno dell'entità.</span><span class="sxs-lookup"><span data-stu-id="be116-801">After calling this method, if the entity is part of an attribute value, you must call <xref:System.Xml.XmlTextReader.ReadAttributeValue%2A> to step into the entity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public override void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Skip();" />
      <MemberSignature Language="F#" Value="override this.Skip : unit -&gt; unit" Usage="xmlTextReader.Skip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be116-802">Skips the children of the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-802">Skips the children of the current node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-803">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-803">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-804">Nel seguente codice XML di input se il lettore è posizionato in corrispondenza di `<a>` nodo o uno qualsiasi dei relativi attributi, la chiamata `Skip` posiziona il lettore per il `<b>` nodo.</span><span class="sxs-lookup"><span data-stu-id="be116-804">In the following XML input if the reader is positioned on the `<a>` node or any of its attributes, calling `Skip` positions the reader to the `<b>` node.</span></span>  
  
 <span data-ttu-id="be116-805">Se il lettore è posizionato su un nodo foglia già (ad esempio il `<x>` nodo o il nodo di testo `abc`), la chiamata `Skip` è uguale a chiamare <xref:System.Xml.XmlTextReader.Read%2A>.</span><span class="sxs-lookup"><span data-stu-id="be116-805">If the reader is positioned on a leaf node already (such as the `<x>` node or the text node `abc`), calling `Skip` is the same as calling <xref:System.Xml.XmlTextReader.Read%2A>.</span></span>  
  
```xml  
<a name="bob" age="123">  
  <x/>abc<y/>  
</a>  
<b>  
 ...  
</b>  
```  
  
 <span data-ttu-id="be116-806">Questo metodo controlla XML ben formato.</span><span class="sxs-lookup"><span data-stu-id="be116-806">This method checks for well-formed XML.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.GetNamespacesInScope">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IDictionary&lt;string,string&gt; IXmlNamespaceResolver.GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String) Implements IXmlNamespaceResolver.GetNamespacesInScope" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System::Xml::XmlNamespaceScope scope) = System::Xml::IXmlNamespaceResolver::GetNamespacesInScope;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="be116-807">An <see cref="T:System.Xml.XmlNamespaceScope" /> value that specifies the type of namespace nodes to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-807">An <see cref="T:System.Xml.XmlNamespaceScope" /> value that specifies the type of namespace nodes to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-808">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-808">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-809">An <see cref="T:System.Collections.IDictionary" /> that contains the current in-scope namespaces.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-809">An <see cref="T:System.Collections.IDictionary" /> that contains the current in-scope namespaces.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be116-810">Questo membro è un'implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="be116-810">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="be116-811">e può essere utilizzato solo quando si esegue il cast dell'istanza di <xref:System.Xml.XmlTextReader> su un'interfaccia <xref:System.Xml.IXmlNamespaceResolver>.</span><span class="sxs-lookup"><span data-stu-id="be116-811">It can be used only when the <xref:System.Xml.XmlTextReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupNamespace">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupNamespace (prefix As String) As String Implements IXmlNamespaceResolver.LookupNamespace" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupNamespace(System::String ^ prefix) = System::Xml::IXmlNamespaceResolver::LookupNamespace;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="be116-812">The prefix whose namespace URI you wish to find.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-812">The prefix whose namespace URI you wish to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-813">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-813">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-814">The namespace URI that is mapped to the prefix; <see langword="null" /> if the prefix is not mapped to a namespace URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-814">The namespace URI that is mapped to the prefix; <see langword="null" /> if the prefix is not mapped to a namespace URI.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be116-815">Questo membro è un'implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="be116-815">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="be116-816">e può essere utilizzato solo quando si esegue il cast dell'istanza di <xref:System.Xml.XmlTextReader> su un'interfaccia <xref:System.Xml.IXmlNamespaceResolver>.</span><span class="sxs-lookup"><span data-stu-id="be116-816">It can be used only when the <xref:System.Xml.XmlTextReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupPrefix">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupPrefix (string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupPrefix(string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupPrefix (namespaceName As String) As String Implements IXmlNamespaceResolver.LookupPrefix" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupPrefix(System::String ^ namespaceName) = System::Xml::IXmlNamespaceResolver::LookupPrefix;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceName">
          <span data-ttu-id="be116-817">The namespace URI whose prefix you wish to find.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-817">The namespace URI whose prefix you wish to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be116-818">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-818">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be116-819">The prefix that is mapped to the namespace URI; <see langword="null" /> if the namespace URI is not mapped to a prefix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-819">The prefix that is mapped to the namespace URI; <see langword="null" /> if the namespace URI is not mapped to a prefix.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.XmlTextReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-820">Gets the text value of the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-820">Gets the text value of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-821">Il valore restituito dipende dalla proprietà <see cref="P:System.Xml.XmlTextReader.NodeType" /> del nodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-821">The value returned depends on the <see cref="P:System.Xml.XmlTextReader.NodeType" /> of the node.</span>
          </span>
          <span data-ttu-id="be116-822">La tabella seguente elenca i tipi di nodo che hanno un valore da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-822">The following table lists node types that have a value to return.</span>
          </span>
          <span data-ttu-id="be116-823">Tutti gli altri tipi di nodo restituiscono <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-823">All other node types return <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="be116-824">
            <list type="table">
              <listheader>
                <term> Tipo di nodo </term>
                <description> valore </description>
              </listheader>
              <item>
                <term>
                  <see langword="Attribute" />
                </term>
                <description> il valore dell'attributo.  </description>
              </item>
              <item>
                <term>
                  <see langword="CDATA" />
                </term>
                <description> Il contenuto della sezione CDATA.  </description>
              </item>
              <item>
                <term>
                  <see langword="Comment" />
                </term>
                <description> Il contenuto del commento.  </description>
              </item>
              <item>
                <term>
                  <see langword="DocumentType" />
                </term>
                <description> Il sottoinsieme interno.  </description>
              </item>
              <item>
                <term>
                  <see langword="ProcessingInstruction" />
                </term>
                <description> L'intero contenuto, esclusa la destinazione.  </description>
              </item>
              <item>
                <term>
                  <see langword="SignificantWhitespace" />
                </term>
                <description> Gli spazi vuoti all'interno di un <see langword="xml:space" />= 'preserve' ambito.  </description>
              </item>
              <item>
                <term>
                  <see langword="Text" />
                </term>
                <description> Il contenuto del nodo di testo.  </description>
              </item>
              <item>
                <term>
                  <see langword="Whitespace" />
                </term>
                <description> Lo spazio vuoto tra markup.  </description>
              </item>
              <item>
                <term>
                  <see langword="XmlDeclaration" />
                </term>
                <description> Il contenuto della dichiarazione.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-824">
              <list type="table">
                <listheader>
                  <term> Node Type  </term>
                  <description> Value  </description>
                </listheader>
                <item>
                  <term>
                    <see langword="Attribute" />
                  </term>
                  <description> The value of the attribute.  </description>
                </item>
                <item>
                  <term>
                    <see langword="CDATA" />
                  </term>
                  <description> The content of the CDATA section.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Comment" />
                  </term>
                  <description> The content of the comment.  </description>
                </item>
                <item>
                  <term>
                    <see langword="DocumentType" />
                  </term>
                  <description> The internal subset.  </description>
                </item>
                <item>
                  <term>
                    <see langword="ProcessingInstruction" />
                  </term>
                  <description> The entire content, excluding the target.  </description>
                </item>
                <item>
                  <term>
                    <see langword="SignificantWhitespace" />
                  </term>
                  <description> The white space within an <see langword="xml:space" />= 'preserve' scope.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Text" />
                  </term>
                  <description> The content of the text node.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Whitespace" />
                  </term>
                  <description> The white space between markup.  </description>
                </item>
                <item>
                  <term>
                    <see langword="XmlDeclaration" />
                  </term>
                  <description> The content of the declaration.  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-825">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-825">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-826">Nell'esempio seguente legge un file XML e viene visualizzato ogni nodo.</span><span class="sxs-lookup"><span data-stu-id="be116-826">The following example reads an XML file and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="be116-827">L'esempio Usa il file `items.xml`.</span><span class="sxs-lookup"><span data-stu-id="be116-827">The sample uses the file `items.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="WhitespaceHandling">
      <MemberSignature Language="C#" Value="public System.Xml.WhitespaceHandling WhitespaceHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WhitespaceHandling WhitespaceHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.WhitespaceHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property WhitespaceHandling As WhitespaceHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::WhitespaceHandling WhitespaceHandling { System::Xml::WhitespaceHandling get(); void set(System::Xml::WhitespaceHandling value); };" />
      <MemberSignature Language="F#" Value="member this.WhitespaceHandling : System.Xml.WhitespaceHandling with get, set" Usage="System.Xml.XmlTextReader.WhitespaceHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WhitespaceHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-828">Gets or sets a value that specifies how white space is handled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-828">Gets or sets a value that specifies how white space is handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-829">Uno dei valori di <see cref="T:System.Xml.WhitespaceHandling" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-829">One of the <see cref="T:System.Xml.WhitespaceHandling" /> values.</span>
          </span>
          <span data-ttu-id="be116-830">Il valore predefinito è <see langword="WhitespaceHandling.All" /> (restituisce i nodi <see langword="Whitespace" /> e <see langword="SignificantWhitespace" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-830">The default is <see langword="WhitespaceHandling.All" /> (returns <see langword="Whitespace" /> and <see langword="SignificantWhitespace" /> nodes).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-831">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-831">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-832">Questa proprietà può essere modificata in qualsiasi momento e viene applicato durante la successiva operazione di lettura.</span><span class="sxs-lookup"><span data-stu-id="be116-832">This property can be changed at any time and takes effect on the next read operation.</span></span>  
  
 <span data-ttu-id="be116-833">Poiché il `XmlTextReader` non dispone di informazioni DTD disponibili per il processo, `SignificantWhitepsace` nodi vengono restituiti solo all'interno di un `xml:space='preserve'` ambito.</span><span class="sxs-lookup"><span data-stu-id="be116-833">Because the `XmlTextReader` does not have DTD information available to it, `SignificantWhitepsace` nodes are only returned within an `xml:space='preserve'` scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-834">Nell'esempio seguente legge un frammento XML.</span><span class="sxs-lookup"><span data-stu-id="be116-834">The following example reads an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.WhitespaceHandling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.WhitespaceHandling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.WhitespaceHandling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.WhitespaceHandling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.WhitespaceHandling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.WhitespaceHandling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="be116-835">Invalid value specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-835">Invalid value specified.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be116-836">Setting this property when the reader is closed (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is <see langword="ReadState.Closed" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-836">Setting this property when the reader is closed (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is <see langword="ReadState.Closed" />).</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlTextReader.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-837">Gets the current <see langword="xml:lang" /> scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-837">Gets the current <see langword="xml:lang" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-838">Ambito <see langword="xml:lang" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-838">The current <see langword="xml:lang" /> scope.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-839">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-839">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-840">Questa proprietà rappresenta il `xml:lang` definire l'ambito in cui si trova il nodo corrente.</span><span class="sxs-lookup"><span data-stu-id="be116-840">This property represents the `xml:lang` scope within which the current node resides.</span></span> <span data-ttu-id="be116-841">Ad esempio, ecco un frammento XML con `xml:lang` impostato nell'elemento radice in inglese:</span><span class="sxs-lookup"><span data-stu-id="be116-841">For example, here is an XML fragment with `xml:lang` set to US English in the root element:</span></span>  
  
 <span data-ttu-id="be116-842">\<root xml:lang="en-us"></span><span class="sxs-lookup"><span data-stu-id="be116-842">\<root xml:lang="en-us"></span></span>  
  
 <span data-ttu-id="be116-843">\<nome > Fred \< /name ></span><span class="sxs-lookup"><span data-stu-id="be116-843">\<name>Fred\</name></span></span>  
  
 <span data-ttu-id="be116-844">\</root></span><span class="sxs-lookup"><span data-stu-id="be116-844">\</root></span></span>  
  
 <span data-ttu-id="be116-845">Quando il lettore è posizionato in corrispondenza di `name` elemento, è possibile utilizzare questa proprietà per verificare che si trovi nell'ambito di una lingua inglese Stati Uniti `xml:lang` attributo.</span><span class="sxs-lookup"><span data-stu-id="be116-845">When the reader is positioned on the `name` element, you can use this property to find that it is in the scope of a US English `xml:lang` attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-846">L'esempio seguente mostra il `xml:lang` valore per ogni nodo.</span><span class="sxs-lookup"><span data-stu-id="be116-846">The following example displays the `xml:lang` value for each of the nodes.</span></span>  
  
 [!code-cpp[XmlTextReader.XmlLang#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.XmlLang/CPP/readlang.cpp#1)]
 [!code-csharp[XmlTextReader.XmlLang#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.XmlLang/CS/readlang.cs#1)]
 [!code-vb[XmlTextReader.XmlLang#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.XmlLang/VB/readlang.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlTextReader.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-847">Sets the <see cref="T:System.Xml.XmlResolver" /> used for resolving DTD references.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-847">Sets the <see cref="T:System.Xml.XmlResolver" /> used for resolving DTD references.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-848">Oggetto <see langword="XmlResolver" /> da usare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-848">The <see langword="XmlResolver" /> to use.</span>
          </span>
          <span data-ttu-id="be116-849">Se impostato su <see langword="null" />, le risorse esterne non verranno risolte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-849">If set to <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="be116-850">Nella versione 1.1 di [! INCLUDE[dnprdnshort](~/Includes/dnprdnshort-MD.MD)], il chiamante deve essere completamente attendibile per poter specificare un <see langword="XmlResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-850">In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the caller must be fully trusted in order to specify an <see langword="XmlResolver" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-851">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-851">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="be116-852">Il visualizzatore utilizza `XmlResolver` per risolvere il percorso del file caricato nel lettore e risolvere i riferimenti DTD.</span><span class="sxs-lookup"><span data-stu-id="be116-852">The reader uses `XmlResolver` to resolve the location of the file loaded into the reader and also to resolve DTD references.</span></span> <span data-ttu-id="be116-853">Se, ad esempio, il codice XML inclusa la dichiarazione DOCTYPE, `<!DOCTYPE book SYSTEM book.dtd>` il lettore risolve questo file esterno e assicura che la DTD è ben formata.</span><span class="sxs-lookup"><span data-stu-id="be116-853">For example, if your XML included the DOCTYPE declaration, `<!DOCTYPE book SYSTEM book.dtd>` the reader resolves this external file and ensures that the DTD is well-formed.</span></span> <span data-ttu-id="be116-854">Il lettore non utilizza la DTD per la convalida.</span><span class="sxs-lookup"><span data-stu-id="be116-854">The reader does not use the DTD for validation.</span></span>  
  
 <span data-ttu-id="be116-855">Questa proprietà può essere modificata in qualsiasi momento e viene applicato durante la successiva operazione di lettura.</span><span class="sxs-lookup"><span data-stu-id="be116-855">This property can be changed at any time and takes effect on the next read operation.</span></span> <span data-ttu-id="be116-856">Se questa proprietà è impostata su `null`, non vengono risolti gli eventuali riferimenti DTD esterni rilevati dal lettore.</span><span class="sxs-lookup"><span data-stu-id="be116-856">If this property is set to `null`, any external DTD references encountered by the reader are not resolved.</span></span>  
  
 <span data-ttu-id="be116-857">Nella versione 1.1 del [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], se questa proprietà non è impostata, il livello di attendibilità dell'applicazione determina il comportamento predefinito.</span><span class="sxs-lookup"><span data-stu-id="be116-857">In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], if this property is not set, the trust level of the application determines the default behavior.</span></span>  
  
 <span data-ttu-id="be116-858">`Fully trusted code:` Il visualizzatore utilizza predefinito <xref:System.Xml.XmlUrlResolver> senza credenziali utente.</span><span class="sxs-lookup"><span data-stu-id="be116-858">`Fully trusted code:` The reader uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="be116-859">Se è necessaria l'autenticazione per accedere a una risorsa di rete, utilizzare il `XmlResolver` proprietà per specificare un `XmlResolver` con le credenziali necessarie.</span><span class="sxs-lookup"><span data-stu-id="be116-859">If authentication is required to access a network resource, use the `XmlResolver` property to specify an `XmlResolver` with the necessary credentials.</span></span>  
  
 <span data-ttu-id="be116-860">`Semi-trusted code:` Il `XmlResolver` è impostata su `null`.</span><span class="sxs-lookup"><span data-stu-id="be116-860">`Semi-trusted code:` The `XmlResolver` property is set to `null`.</span></span> <span data-ttu-id="be116-861">Risorse esterne non vengono risolti.</span><span class="sxs-lookup"><span data-stu-id="be116-861">External resources are not resolved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-862">L'esempio seguente usa il `XmlResolver` proprietà per specificare le credenziali necessarie per accedere al file di rete.</span><span class="sxs-lookup"><span data-stu-id="be116-862">The following example uses the `XmlResolver` property to specify the credentials necessary to access the networked file.</span></span>  
  
 [!code-cpp[XmlTextReader.XmlResolver#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.XmlResolver/CPP/rdr_resolver.cpp#1)]
 [!code-csharp[XmlTextReader.XmlResolver#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.XmlResolver/CS/rdr_resolver.cs#1)]
 [!code-vb[XmlTextReader.XmlResolver#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.XmlResolver/VB/rdr_resolver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlTextReader.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be116-863">Gets the current <see langword="xml:space" /> scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-863">Gets the current <see langword="xml:space" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be116-864">Uno dei valori di <see cref="T:System.Xml.XmlSpace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-864">One of the <see cref="T:System.Xml.XmlSpace" /> values.</span>
          </span>
          <span data-ttu-id="be116-865">Se non esiste alcun ambito <see langword="xml:space" />, alla proprietà viene applicata l'impostazione predefinita <see langword="XmlSpace.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be116-865">If no <see langword="xml:space" /> scope exists, this property defaults to <see langword="XmlSpace.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be116-866">A partire da .NET Framework 2.0, è consigliabile creare <xref:System.Xml.XmlReader> istanze usando il <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodo per sfruttare i vantaggi delle nuove funzionalità.</span><span class="sxs-lookup"><span data-stu-id="be116-866">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be116-867">Nell'esempio seguente analizza un file e restituisce gli spazi vuoti significativi se un `xml:space='preserve'` ambito è stato trovato.</span><span class="sxs-lookup"><span data-stu-id="be116-867">The following example parses a file and returns significant white space if an `xml:space='preserve'` scope is found.</span></span>  
  
 [!code-cpp[XmlTextReader.XmlSpace#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.XmlSpace/CPP/readspace.cpp#1)]
 [!code-csharp[XmlTextReader.XmlSpace#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.XmlSpace/CS/readspace.cs#1)]
 [!code-vb[XmlTextReader.XmlSpace#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.XmlSpace/VB/readspace.vb#1)]  
  
 <span data-ttu-id="be116-868">Nell'esempio viene utilizzato il file, `authors.xml`, come input.</span><span class="sxs-lookup"><span data-stu-id="be116-868">The example uses the file, `authors.xml`, as input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
  </Members>
</Type>