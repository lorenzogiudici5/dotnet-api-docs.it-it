<Type Name="IVbcHostObject" FullName="Microsoft.Build.Tasks.Hosting.IVbcHostObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e2376e1794dae640ef3a6fdf48ef7d4a0b833bb5" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48696702" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IVbcHostObject : Microsoft.Build.Framework.ITaskHost" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVbcHostObject implements class Microsoft.Build.Framework.ITaskHost" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVbcHostObject&#xA;Implements ITaskHost" />
  <TypeSignature Language="C++ CLI" Value="public interface class IVbcHostObject : Microsoft::Build::Framework::ITaskHost" />
  <TypeSignature Language="F#" Value="type IVbcHostObject = interface&#xA;    interface ITaskHost" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("7D7AC3BE-253A-40e8-A3FF-357D0DA7C47A")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="520e8-101">Definisce un'interfaccia che consente all'attività <see href="http://msdn.microsoft.com/library/595278b1-2782-4577-b1ba-b4b5ab5625a3">Vbc</see> di comunicare con l'ambiente di sviluppo integrato (IDE) host.</span>
      <span class="sxs-lookup">
        <span data-stu-id="520e8-101">Defines an interface that allows the <see href="http://msdn.microsoft.com/library/595278b1-2782-4577-b1ba-b4b5ab5625a3">Vbc</see> task to communicate with the host integrated development environment (IDE).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="520e8-102">Questa interfaccia consente la `Vbc` delegare la compilazione del progetto dell'IDE, anziché usare i compilatori della riga di comando dell'attività.</span><span class="sxs-lookup"><span data-stu-id="520e8-102">This interface allows the `Vbc` task to delegate project compilation to the IDE rather than using command line compilers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginInitialization">
      <MemberSignature Language="C#" Value="public void BeginInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.BeginInitialization" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInitialization ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginInitialization();" />
      <MemberSignature Language="F#" Value="abstract member BeginInitialization : unit -&gt; unit" Usage="iVbcHostObject.BeginInitialization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="520e8-103">Avvia l'inizializzazione dell'interfaccia <see cref="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-103">Begins the initialization of the <see cref="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public bool Compile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Compile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.Compile" />
      <MemberSignature Language="VB.NET" Value="Public Function Compile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Compile();" />
      <MemberSignature Language="F#" Value="abstract member Compile : unit -&gt; bool" Usage="iVbcHostObject.Compile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="520e8-104">Compila il progetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-104">Compiles the project.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-105">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-105">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInitialization">
      <MemberSignature Language="C#" Value="public void EndInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.EndInitialization" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInitialization ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndInitialization();" />
      <MemberSignature Language="F#" Value="abstract member EndInitialization : unit -&gt; unit" Usage="iVbcHostObject.EndInitialization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="520e8-106">Termina l'inizializzazione di <see cref="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-106">Ends the initialization of the <see cref="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDesignTime">
      <MemberSignature Language="C#" Value="public bool IsDesignTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDesignTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.IsDesignTime" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDesignTime () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDesignTime();" />
      <MemberSignature Language="F#" Value="abstract member IsDesignTime : unit -&gt; bool" Usage="iVbcHostObject.IsDesignTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="520e8-107">Restituisce un valore che indica se l'ambiente IDE (Integrated Development Environment, ambiente di sviluppo integrato) è attualmente in modalità fase di progettazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-107">Returns a value indicating whether the integrated development environment (IDE) is currently in design time mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-108">
            <see langword="true" /> se l'IDE si trova attualmente in modalità progettazione, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-108">
              <see langword="true" /> if the IDE is currently in design time mode; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpToDate">
      <MemberSignature Language="C#" Value="public bool IsUpToDate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUpToDate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.IsUpToDate" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUpToDate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUpToDate();" />
      <MemberSignature Language="F#" Value="abstract member IsUpToDate : unit -&gt; bool" Usage="iVbcHostObject.IsUpToDate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="520e8-109">Restituisce un valore che indica se il progetto compilato è aggiornato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-109">Returns a value indicating whether the compiled project is up-to-date.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-110">
            <see langword="true" /> se il progetto compilato è aggiornato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-110">
              <see langword="true" /> if the compiled project is up-to-date; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAdditionalLibPaths">
      <MemberSignature Language="C#" Value="public bool SetAdditionalLibPaths (string[] additionalLibPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetAdditionalLibPaths(string[] additionalLibPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetAdditionalLibPaths(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetAdditionalLibPaths (additionalLibPaths As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetAdditionalLibPaths(cli::array &lt;System::String ^&gt; ^ additionalLibPaths);" />
      <MemberSignature Language="F#" Value="abstract member SetAdditionalLibPaths : string[] -&gt; bool" Usage="iVbcHostObject.SetAdditionalLibPaths additionalLibPaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="additionalLibPaths" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="additionalLibPaths">
          <span data-ttu-id="520e8-111">Matrice di directory in cui cercare i riferimenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-111">An array of directories to search for references.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-112">Specifica directory aggiuntive in cui cercare i riferimenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-112">Specifies additional directories to search for references.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-113">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-113">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAddModules">
      <MemberSignature Language="C#" Value="public bool SetAddModules (string[] addModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetAddModules(string[] addModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetAddModules(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetAddModules (addModules As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetAddModules(cli::array &lt;System::String ^&gt; ^ addModules);" />
      <MemberSignature Language="F#" Value="abstract member SetAddModules : string[] -&gt; bool" Usage="iVbcHostObject.SetAddModules addModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addModules" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="addModules">
          <span data-ttu-id="520e8-114">Matrice di moduli da includere nell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-114">An array of modules to be part of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-115">Specifica uno o più moduli che devono fare parte dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-115">Specifies one or more modules to be part of the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-116">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-116">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBaseAddress">
      <MemberSignature Language="C#" Value="public bool SetBaseAddress (string targetType, string baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetBaseAddress(string targetType, string baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetBaseAddress(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBaseAddress (targetType As String, baseAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetBaseAddress(System::String ^ targetType, System::String ^ baseAddress);" />
      <MemberSignature Language="F#" Value="abstract member SetBaseAddress : string * string -&gt; bool" Usage="iVbcHostObject.SetBaseAddress (targetType, baseAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.String" />
        <Parameter Name="baseAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetType">
          <span data-ttu-id="520e8-117">Formato del file di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-117">The file format of the output file.</span>
          </span>
          <span data-ttu-id="520e8-118">Questo valore può essere di tipo <see langword="library" />, <see langword="exe" />, <see langword="module" /> oppure <see langword="winexe" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-118">This value can be <see langword="library" />, <see langword="exe" />, <see langword="module" />, or <see langword="winexe" />.</span>
          </span>
        </param>
        <param name="baseAddress">
          <span data-ttu-id="520e8-119">Indirizzo di base preferito in cui caricare una DLL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-119">The preferred base address at which to load a DLL.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-120">Specifica l'indirizzo di base preferenziale in cui caricare una DLL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-120">Specifies the preferred base address at which to load a DLL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-121">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-121">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCodePage">
      <MemberSignature Language="C#" Value="public bool SetCodePage (int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetCodePage(int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetCodePage(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetCodePage (codePage As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetCodePage(int codePage);" />
      <MemberSignature Language="F#" Value="abstract member SetCodePage : int -&gt; bool" Usage="iVbcHostObject.SetCodePage codePage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePage">
          <span data-ttu-id="520e8-122">Tabella codici da usare per tutti i file del codice sorgente nella compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-122">The code page to use for all source code files in the compilation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-123">Specifica la tabella codici da usare per tutti i file del codice sorgente nella compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-123">Specifies the code page to use for all source code files in the compilation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-124">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-124">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDebugType">
      <MemberSignature Language="C#" Value="public bool SetDebugType (bool emitDebugInformation, string debugType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDebugType(bool emitDebugInformation, string debugType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDebugType(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDebugType (emitDebugInformation As Boolean, debugType As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDebugType(bool emitDebugInformation, System::String ^ debugType);" />
      <MemberSignature Language="F#" Value="abstract member SetDebugType : bool * string -&gt; bool" Usage="iVbcHostObject.SetDebugType (emitDebugInformation, debugType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emitDebugInformation" Type="System.Boolean" />
        <Parameter Name="debugType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emitDebugInformation">
          <span data-ttu-id="520e8-125">
            <see langword="true" /> per generare le informazioni di debug e inserirle in un file PDB (Program DataBase); in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-125">
              <see langword="true" /> to generate debugging information and place it in a program database (.pdb) file; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="debugType">
          <span data-ttu-id="520e8-126">Tipo di debug, che può essere <see langword="full" /> o <see langword="pdbonly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-126">The debug type, which can be <see langword="full" /> or <see langword="pdbonly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-127">Specifica il tipo di debug.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-127">Specifies the debug type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-128">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-128">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefineConstants">
      <MemberSignature Language="C#" Value="public bool SetDefineConstants (string defineConstants);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDefineConstants(string defineConstants) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDefineConstants(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDefineConstants (defineConstants As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDefineConstants(System::String ^ defineConstants);" />
      <MemberSignature Language="F#" Value="abstract member SetDefineConstants : string -&gt; bool" Usage="iVbcHostObject.SetDefineConstants defineConstants" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defineConstants" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="defineConstants">
          <span data-ttu-id="520e8-129">Simboli del preprocessore da definire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-129">The preprocessor symbols to define.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-130">Specifica i simboli del preprocessore da definire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-130">Specifies the preprocessor symbols to define.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-131">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-131">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDelaySign">
      <MemberSignature Language="C#" Value="public bool SetDelaySign (bool delaySign);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDelaySign(bool delaySign) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDelaySign(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDelaySign (delaySign As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDelaySign(bool delaySign);" />
      <MemberSignature Language="F#" Value="abstract member SetDelaySign : bool -&gt; bool" Usage="iVbcHostObject.SetDelaySign delaySign" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delaySign" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="delaySign">
          <span data-ttu-id="520e8-132">
            <see langword="true" /> per creare un assembly completamente firmato; <see langword="false" /> per inserire nell'assembly solo la chiave pubblica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-132">
              <see langword="true" /> if you want to create a fully signed assembly; <see langword="false" /> if you only want to place the public key in the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-133">Specifica un valore che indica se creare un assembly con firma completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-133">Specifies a value indicating whether to create a fully signed assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-134">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-134">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisabledWarnings">
      <MemberSignature Language="C#" Value="public bool SetDisabledWarnings (string disabledWarnings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDisabledWarnings(string disabledWarnings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDisabledWarnings(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDisabledWarnings (disabledWarnings As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDisabledWarnings(System::String ^ disabledWarnings);" />
      <MemberSignature Language="F#" Value="abstract member SetDisabledWarnings : string -&gt; bool" Usage="iVbcHostObject.SetDisabledWarnings disabledWarnings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disabledWarnings" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="disabledWarnings">
          <span data-ttu-id="520e8-135">Elenco di avvisi da disabilitare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-135">The list of warnings to disable.</span>
          </span>
          <span data-ttu-id="520e8-136">Se si specificano più avvisi, usare la virgola per separarli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-136">Multiple warnings are separated with a comma.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-137">Specifica l'elenco di avvisi da disabilitare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-137">Specifies the list of warnings to disable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-138">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-138">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDocumentationFile">
      <MemberSignature Language="C#" Value="public bool SetDocumentationFile (string documentationFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDocumentationFile(string documentationFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDocumentationFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDocumentationFile (documentationFile As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDocumentationFile(System::String ^ documentationFile);" />
      <MemberSignature Language="F#" Value="abstract member SetDocumentationFile : string -&gt; bool" Usage="iVbcHostObject.SetDocumentationFile documentationFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentationFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentationFile">
          <span data-ttu-id="520e8-139">Stringa che contiene il nome del file in cui salvare i commenti della documentazione elaborati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-139">A string that contains the name of the file in which to save processed documentation comments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-140">Specifica il file XML in cui salvare i commenti della documentazione elaborati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-140">Specifies the XML file in which to save processed documentation comments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-141">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-141">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetErrorReport">
      <MemberSignature Language="C#" Value="public bool SetErrorReport (string errorReport);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetErrorReport(string errorReport) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetErrorReport(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetErrorReport (errorReport As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetErrorReport(System::String ^ errorReport);" />
      <MemberSignature Language="F#" Value="abstract member SetErrorReport : string -&gt; bool" Usage="iVbcHostObject.SetErrorReport errorReport" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorReport" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="errorReport">
          <span data-ttu-id="520e8-142">Valore che indica la modalità in cui segnalare gli errori interni del compilatore a Microsoft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-142">A value specifying how internal compiler errors are reported to Microsoft.</span>
          </span>
          <span data-ttu-id="520e8-143">Questo valore può essere <see langword="prompt" />, <see langword="send" /> o <see langword="none" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-143">This value can be <see langword="prompt" />, <see langword="send" />, or <see langword="none" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-144">Specifica un valore che indica la modalità in cui gli errori interni del compilatore devono essere segnalati a Microsoft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-144">Specifies a value that indicates how internal compiler errors are reported to Microsoft.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-145">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-145">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFileAlignment">
      <MemberSignature Language="C#" Value="public bool SetFileAlignment (int fileAlignment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetFileAlignment(int32 fileAlignment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetFileAlignment(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetFileAlignment (fileAlignment As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetFileAlignment(int fileAlignment);" />
      <MemberSignature Language="F#" Value="abstract member SetFileAlignment : int -&gt; bool" Usage="iVbcHostObject.SetFileAlignment fileAlignment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileAlignment" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileAlignment">
          <span data-ttu-id="520e8-146">Dimensioni delle sezioni nel file di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-146">The size of sections in the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-147">Specifica le dimensioni delle sezioni nel file di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-147">Specifies the size of sections in the output file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-148">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-148">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGenerateDocumentation">
      <MemberSignature Language="C#" Value="public bool SetGenerateDocumentation (bool generateDocumentation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetGenerateDocumentation(bool generateDocumentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetGenerateDocumentation(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetGenerateDocumentation (generateDocumentation As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetGenerateDocumentation(bool generateDocumentation);" />
      <MemberSignature Language="F#" Value="abstract member SetGenerateDocumentation : bool -&gt; bool" Usage="iVbcHostObject.SetGenerateDocumentation generateDocumentation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generateDocumentation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="generateDocumentation">
          <span data-ttu-id="520e8-149">
            <see langword="true" /> per generare un file della documentazione. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-149">
              <see langword="true" /> to generate a documentation file; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-150">Specifica un valore che indica se generare la documentazione e posizionarla in un file XML con il nome del file eseguibile o della libreria che il compilatore sta creando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-150">Specifies a value indicating whether to generate documentation and place it in an XML file with the name of the executable file or library that the compiler is creating.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-151">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-151">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImports">
      <MemberSignature Language="C#" Value="public bool SetImports (Microsoft.Build.Framework.ITaskItem[] importsList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetImports(class Microsoft.Build.Framework.ITaskItem[] importsList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetImports(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetImports (importsList As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetImports(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ importsList);" />
      <MemberSignature Language="F#" Value="abstract member SetImports : Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="iVbcHostObject.SetImports importsList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importsList" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="importsList">
          <span data-ttu-id="520e8-152">Spazi dei nomi da importare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-152">The namespaces to import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-153">Specifica gli spazi dei nomi da importare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-153">Specifies the namespaces to import.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-154">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-154">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeyContainer">
      <MemberSignature Language="C#" Value="public bool SetKeyContainer (string keyContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetKeyContainer(string keyContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetKeyContainer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetKeyContainer (keyContainer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetKeyContainer(System::String ^ keyContainer);" />
      <MemberSignature Language="F#" Value="abstract member SetKeyContainer : string -&gt; bool" Usage="iVbcHostObject.SetKeyContainer keyContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyContainer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyContainer">
          <span data-ttu-id="520e8-155">Nome del contenitore di chiavi crittografiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-155">The name of the cryptographic key container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-156">Specifica il nome del contenitore di chiavi crittografiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-156">Specifies the name of the cryptographic key container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-157">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-157">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeyFile">
      <MemberSignature Language="C#" Value="public bool SetKeyFile (string keyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetKeyFile(string keyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetKeyFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetKeyFile (keyFile As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetKeyFile(System::String ^ keyFile);" />
      <MemberSignature Language="F#" Value="abstract member SetKeyFile : string -&gt; bool" Usage="iVbcHostObject.SetKeyFile keyFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyFile">
          <span data-ttu-id="520e8-158">Nome del file che contiene la chiave di crittografia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-158">The name of the file containing the cryptographic key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-159">Specifica il nome del file contenente la chiave di crittografia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-159">Specifies the file name containing the cryptographic key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-160">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-160">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLinkResources">
      <MemberSignature Language="C#" Value="public bool SetLinkResources (Microsoft.Build.Framework.ITaskItem[] linkResources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetLinkResources(class Microsoft.Build.Framework.ITaskItem[] linkResources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetLinkResources(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetLinkResources (linkResources As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetLinkResources(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ linkResources);" />
      <MemberSignature Language="F#" Value="abstract member SetLinkResources : Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="iVbcHostObject.SetLinkResources linkResources" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkResources" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="linkResources">
          <span data-ttu-id="520e8-161">Risorse di [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] da collegare al file di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-161">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] resources to link to the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-162">Crea collegamenti alle risorse di [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] specificate nel file di output; i file delle risorse non vengono inseriti nel file di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-162">Creates links to the specified [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] resources in the output file; the resource files are not placed in the output file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-163">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-163">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMainEntryPoint">
      <MemberSignature Language="C#" Value="public bool SetMainEntryPoint (string mainEntryPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetMainEntryPoint(string mainEntryPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetMainEntryPoint(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetMainEntryPoint (mainEntryPoint As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetMainEntryPoint(System::String ^ mainEntryPoint);" />
      <MemberSignature Language="F#" Value="abstract member SetMainEntryPoint : string -&gt; bool" Usage="iVbcHostObject.SetMainEntryPoint mainEntryPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mainEntryPoint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mainEntryPoint">
          <span data-ttu-id="520e8-164">Classe o modulo contenenti la posizione della procedura <see langword="Sub Main" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-164">The class or module that contains the location of the <see langword="Sub Main" /> procedure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-165">Specifica la classe o il modulo che contiene la posizione della procedura <c>Sub Main</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-165">Specifies the class or module that contains the location of the <c>Sub Main</c> procedure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-166">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-166">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoConfig">
      <MemberSignature Language="C#" Value="public bool SetNoConfig (bool noConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetNoConfig(bool noConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoConfig(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetNoConfig (noConfig As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetNoConfig(bool noConfig);" />
      <MemberSignature Language="F#" Value="abstract member SetNoConfig : bool -&gt; bool" Usage="iVbcHostObject.SetNoConfig noConfig" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noConfig" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noConfig">
          <span data-ttu-id="520e8-167">
            <see langword="true" /> per impedire al compilatore di utilizzare il file vbc.rsp per la compilazione; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-167">
              <see langword="true" /> to prevent the compiler from compiling with the vbc.rsp file; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-168">Specifica un valore che indica se impedire al compilatore di compilare con il file vbc.rsp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-168">Specifies a value indicating whether to prevent the compiler from compiling with the vbc.rsp file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-169">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-169">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoStandardLib">
      <MemberSignature Language="C#" Value="public bool SetNoStandardLib (bool noStandardLib);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetNoStandardLib(bool noStandardLib) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoStandardLib(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetNoStandardLib (noStandardLib As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetNoStandardLib(bool noStandardLib);" />
      <MemberSignature Language="F#" Value="abstract member SetNoStandardLib : bool -&gt; bool" Usage="iVbcHostObject.SetNoStandardLib noStandardLib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noStandardLib" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noStandardLib">
          <span data-ttu-id="520e8-170">
            <see langword="true" /> per impedire l'importazione del file mscorlib.dll; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-170">
              <see langword="true" /> to prevent the import of mscorlib.dll; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-171">Specifica un valore che indica se impedire l'importazione di mscorlib.dll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-171">Specifies a value indicating whether to prevent the import of mscorlib.dll.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-172">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-172">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoWarnings">
      <MemberSignature Language="C#" Value="public bool SetNoWarnings (bool noWarnings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetNoWarnings(bool noWarnings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoWarnings(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetNoWarnings (noWarnings As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetNoWarnings(bool noWarnings);" />
      <MemberSignature Language="F#" Value="abstract member SetNoWarnings : bool -&gt; bool" Usage="iVbcHostObject.SetNoWarnings noWarnings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noWarnings" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noWarnings">
          <span data-ttu-id="520e8-173">
            <see langword="true" /> per eliminare tutti gli avvisi; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-173">
              <see langword="true" /> to suppress all warnings; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-174">Specifica un valore che indica se il compilatore elimina tutti gli avvisi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-174">Specifies a value indicating whether the compiler supresses all warnings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-175">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-175">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOptimize">
      <MemberSignature Language="C#" Value="public bool SetOptimize (bool optimize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetOptimize(bool optimize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptimize(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetOptimize (optimize As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetOptimize(bool optimize);" />
      <MemberSignature Language="F#" Value="abstract member SetOptimize : bool -&gt; bool" Usage="iVbcHostObject.SetOptimize optimize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optimize" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="optimize">
          <span data-ttu-id="520e8-176">
            <see langword="true" /> per attivare le ottimizzazioni; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-176">
              <see langword="true" /> to enable optimizations; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-177">Specifica un valore che indica se abilitare le ottimizzazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-177">Specifies a value indicating whether to enable optimizations.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-178">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-178">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOptionCompare">
      <MemberSignature Language="C#" Value="public bool SetOptionCompare (string optionCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetOptionCompare(string optionCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionCompare(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetOptionCompare (optionCompare As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetOptionCompare(System::String ^ optionCompare);" />
      <MemberSignature Language="F#" Value="abstract member SetOptionCompare : string -&gt; bool" Usage="iVbcHostObject.SetOptionCompare optionCompare" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionCompare" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="optionCompare">
          <span data-ttu-id="520e8-179">Valore che indica la modalità usata dal compilatore per eseguire confronti tra le stringhe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-179">A value indicating how the compiler makes string comparisons.</span>
          </span>
          <span data-ttu-id="520e8-180">Il valore deve essere <see langword="binary" /> o <see langword="text" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-180">The value must be either <see langword="binary" /> or <see langword="text" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-181">Specifica un valore che indica la modalità usata dal compilatore per eseguire confronti tra le stringhe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-181">Specifies a value indicating how the compiler makes string comparisons.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-182">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-182">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOptionExplicit">
      <MemberSignature Language="C#" Value="public bool SetOptionExplicit (bool optionExplicit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetOptionExplicit(bool optionExplicit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionExplicit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetOptionExplicit (optionExplicit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetOptionExplicit(bool optionExplicit);" />
      <MemberSignature Language="F#" Value="abstract member SetOptionExplicit : bool -&gt; bool" Usage="iVbcHostObject.SetOptionExplicit optionExplicit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionExplicit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="optionExplicit">
          <span data-ttu-id="520e8-183">
            <see langword="true" /> se è necessario dichiarare le variabili in modo esplicito; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-183">
              <see langword="true" /> to require the explicit declaration of variables; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-184">Specifica un valore che indica se è necessario dichiarare le variabili in modo esplicito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-184">Specifies a value indicating whether the explicit declaration of variables is required.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-185">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-185">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOptionStrict">
      <MemberSignature Language="C#" Value="public bool SetOptionStrict (bool optionStrict);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetOptionStrict(bool optionStrict) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionStrict(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetOptionStrict (optionStrict As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetOptionStrict(bool optionStrict);" />
      <MemberSignature Language="F#" Value="abstract member SetOptionStrict : bool -&gt; bool" Usage="iVbcHostObject.SetOptionStrict optionStrict" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionStrict" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="optionStrict">
          <span data-ttu-id="520e8-186">
            <see langword="true" /> per applicare una semantica dei tipi rigida per limitare le conversioni dei tipi impliciti; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-186">
              <see langword="true" /> to enforce strict type semantics to restrict implicit type conversions; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-187">Specifica un valore indicante se il compilatore applica una semantica dei tipi rigorosa per limitare le conversioni implicite di tipi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-187">Specifies a value indicating whether the compiler enforces strict type semantics to restrict implicit type conversions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-188">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-188">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOptionStrictType">
      <MemberSignature Language="C#" Value="public bool SetOptionStrictType (string optionStrictType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetOptionStrictType(string optionStrictType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionStrictType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetOptionStrictType (optionStrictType As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetOptionStrictType(System::String ^ optionStrictType);" />
      <MemberSignature Language="F#" Value="abstract member SetOptionStrictType : string -&gt; bool" Usage="iVbcHostObject.SetOptionStrictType optionStrictType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionStrictType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="optionStrictType">
          <span data-ttu-id="520e8-189">Stringa passata al parametro <see langword="OptionStrictType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-189">The string passed to the <see langword="OptionStrictType" /> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-190">Specifica che il compilatore deve avvisare quando la semantica della lingua ridotta non viene rispettata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-190">Specifies that the compiler should warn when strict language semantics are not respected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-191">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-191">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputAssembly">
      <MemberSignature Language="C#" Value="public bool SetOutputAssembly (string outputAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetOutputAssembly(string outputAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOutputAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetOutputAssembly (outputAssembly As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetOutputAssembly(System::String ^ outputAssembly);" />
      <MemberSignature Language="F#" Value="abstract member SetOutputAssembly : string -&gt; bool" Usage="iVbcHostObject.SetOutputAssembly outputAssembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputAssembly" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputAssembly">
          <span data-ttu-id="520e8-192">Nome del file di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-192">The name of the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-193">Specifica il nome del file di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-193">Specifies the name of the output file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-194">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-194">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPlatform">
      <MemberSignature Language="C#" Value="public bool SetPlatform (string platform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPlatform(string platform) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetPlatform(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPlatform (platform As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetPlatform(System::String ^ platform);" />
      <MemberSignature Language="F#" Value="abstract member SetPlatform : string -&gt; bool" Usage="iVbcHostObject.SetPlatform platform" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="platform" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="platform">
          <span data-ttu-id="520e8-195">Piattaforma del processore da impostare come destinazione del file di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-195">The processor platform to be targeted by the output file.</span>
          </span>
          <span data-ttu-id="520e8-196">Questo valore può essere di tipo <see langword="x86" />, <see langword="x64" />, <see langword="Itanium" /> oppure <see langword="anycpu" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-196">This value can be <see langword="x86" />, <see langword="x64" />, <see langword="Itanium" />, or <see langword="anycpu" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-197">Specifica la piattaforma del processore da impostare come destinazione del file di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-197">Specifies the processor platform to be targeted by the output file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-198">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-198">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReferences">
      <MemberSignature Language="C#" Value="public bool SetReferences (Microsoft.Build.Framework.ITaskItem[] references);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetReferences(class Microsoft.Build.Framework.ITaskItem[] references) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetReferences(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetReferences (references As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetReferences(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ references);" />
      <MemberSignature Language="F#" Value="abstract member SetReferences : Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="iVbcHostObject.SetReferences references" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="references" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="references">
          <span data-ttu-id="520e8-199">Elementi da cui importare informazioni sui tipi pubblici nel progetto corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-199">The items from which to import public type information into the current project.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-200">Specifica gli elementi da cui importare informazioni sui tipi pubblici nel progetto corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-200">Specifies the items from which to import public type information into the current project.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-201">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-201">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRemoveIntegerChecks">
      <MemberSignature Language="C#" Value="public bool SetRemoveIntegerChecks (bool removeIntegerChecks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetRemoveIntegerChecks(bool removeIntegerChecks) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetRemoveIntegerChecks(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetRemoveIntegerChecks (removeIntegerChecks As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetRemoveIntegerChecks(bool removeIntegerChecks);" />
      <MemberSignature Language="F#" Value="abstract member SetRemoveIntegerChecks : bool -&gt; bool" Usage="iVbcHostObject.SetRemoveIntegerChecks removeIntegerChecks" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="removeIntegerChecks" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="removeIntegerChecks">
          <span data-ttu-id="520e8-202">
            <see langword="true" /> per rimuovere il controllo degli errori di overflow degli interi; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-202">
              <see langword="true" /> to remove integer overflow error checks; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-203">Specifica un valore che indica se disabilitare i controlli degli errori di overflow di intero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-203">Specifies a value indicating whether to disable integer overflow error checks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-204">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-204">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResources">
      <MemberSignature Language="C#" Value="public bool SetResources (Microsoft.Build.Framework.ITaskItem[] resources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetResources(class Microsoft.Build.Framework.ITaskItem[] resources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetResources(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetResources (resources As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetResources(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ resources);" />
      <MemberSignature Language="F#" Value="abstract member SetResources : Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="iVbcHostObject.SetResources resources" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resources" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="resources">
          <span data-ttu-id="520e8-205">Risorse [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] da incorporare nel file di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-205">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] resources to embed into the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-206">Specifica le risorse di [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] da incorporare nel file di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-206">Specifies the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] resources to embed into the output file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-207">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-207">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResponseFiles">
      <MemberSignature Language="C#" Value="public bool SetResponseFiles (Microsoft.Build.Framework.ITaskItem[] responseFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetResponseFiles(class Microsoft.Build.Framework.ITaskItem[] responseFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetResponseFiles(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetResponseFiles (responseFiles As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetResponseFiles(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ responseFiles);" />
      <MemberSignature Language="F#" Value="abstract member SetResponseFiles : Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="iVbcHostObject.SetResponseFiles responseFiles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="responseFiles">
          <span data-ttu-id="520e8-208">File di risposta che contengono i comandi per il compilatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-208">The response files that contain commands for the compiler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-209">Specifica i file di risposta che contengono i comandi per il compilatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-209">Specifies the response files that contain commands for the compiler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-210">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-210">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRootNamespace">
      <MemberSignature Language="C#" Value="public bool SetRootNamespace (string rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetRootNamespace(string rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetRootNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetRootNamespace (rootNamespace As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetRootNamespace(System::String ^ rootNamespace);" />
      <MemberSignature Language="F#" Value="abstract member SetRootNamespace : string -&gt; bool" Usage="iVbcHostObject.SetRootNamespace rootNamespace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootNamespace">
          <span data-ttu-id="520e8-211">Spazio dei nomi radice per tutte le dichiarazioni di tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-211">The root namespace for all type declarations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-212">Specifica lo spazio dei nomi radice per tutte le dichiarazioni di tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-212">Specifies the root namespace for all type declarations.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-213">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-213">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSdkPath">
      <MemberSignature Language="C#" Value="public bool SetSdkPath (string sdkPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetSdkPath(string sdkPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetSdkPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetSdkPath (sdkPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetSdkPath(System::String ^ sdkPath);" />
      <MemberSignature Language="F#" Value="abstract member SetSdkPath : string -&gt; bool" Usage="iVbcHostObject.SetSdkPath sdkPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sdkPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sdkPath">
          <span data-ttu-id="520e8-214">Percorso dei file mscorlib.dll e microsoft.visualbasic.dll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-214">The location of mscorlib.dll and microsoft.visualbasic.dll.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-215">Specifica il percorso dei file mscorlib.dll e microsoft.visualbasic.dll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-215">Specifies the location of mscorlib.dll and microsoft.visualbasic.dll.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-216">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-216">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSources">
      <MemberSignature Language="C#" Value="public bool SetSources (Microsoft.Build.Framework.ITaskItem[] sources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetSources(class Microsoft.Build.Framework.ITaskItem[] sources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetSources(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetSources (sources As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetSources(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sources);" />
      <MemberSignature Language="F#" Value="abstract member SetSources : Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="iVbcHostObject.SetSources sources" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sources" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="sources">
          <span data-ttu-id="520e8-217">Uno o più file di origine di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-217">One or more Visual Basic source files.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-218">Specifica uno o più file di origine di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-218">Specifies one or more Visual Basic source files.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-219">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-219">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTargetCompactFramework">
      <MemberSignature Language="C#" Value="public bool SetTargetCompactFramework (bool targetCompactFramework);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetTargetCompactFramework(bool targetCompactFramework) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTargetCompactFramework(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetTargetCompactFramework (targetCompactFramework As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetTargetCompactFramework(bool targetCompactFramework);" />
      <MemberSignature Language="F#" Value="abstract member SetTargetCompactFramework : bool -&gt; bool" Usage="iVbcHostObject.SetTargetCompactFramework targetCompactFramework" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetCompactFramework" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetCompactFramework">
          <span data-ttu-id="520e8-220">
            <see langword="true" /> per impostare [!INCLUDE[Compact](~/includes/compact-md.md)] come destinazione; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-220">
              <see langword="true" /> to target the [!INCLUDE[Compact](~/includes/compact-md.md)]; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-221">Specifica un valore che indica se impostare [!INCLUDE[Compact](~/includes/compact-md.md)] come destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-221">Specifies a value indicating whether to target the [!INCLUDE[Compact](~/includes/compact-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-222">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-222">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTargetType">
      <MemberSignature Language="C#" Value="public bool SetTargetType (string targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetTargetType(string targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTargetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetTargetType (targetType As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetTargetType(System::String ^ targetType);" />
      <MemberSignature Language="F#" Value="abstract member SetTargetType : string -&gt; bool" Usage="iVbcHostObject.SetTargetType targetType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetType">
          <span data-ttu-id="520e8-223">Formato del file di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-223">The file format of the output file.</span>
          </span>
          <span data-ttu-id="520e8-224">Questo valore può essere di tipo <see langword="library" />, <see langword="exe" />, <see langword="module" /> oppure <see langword="winexe" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-224">This value can be <see langword="library" />, <see langword="exe" />, <see langword="module" />, or <see langword="winexe" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-225">Specifica il formato del file di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-225">Specifies the file format of the output file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-226">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-226">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTreatWarningsAsErrors">
      <MemberSignature Language="C#" Value="public bool SetTreatWarningsAsErrors (bool treatWarningsAsErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetTreatWarningsAsErrors(bool treatWarningsAsErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTreatWarningsAsErrors(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetTreatWarningsAsErrors (treatWarningsAsErrors As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetTreatWarningsAsErrors(bool treatWarningsAsErrors);" />
      <MemberSignature Language="F#" Value="abstract member SetTreatWarningsAsErrors : bool -&gt; bool" Usage="iVbcHostObject.SetTreatWarningsAsErrors treatWarningsAsErrors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="treatWarningsAsErrors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="treatWarningsAsErrors">
          <span data-ttu-id="520e8-227">
            <see langword="true" /> se tutti gli avvisi devono essere considerati come errori, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-227">
              <see langword="true" /> to treat all warnings as errors; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-228">Specifica un valore che indica se considerare tutti gli avvisi come errori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-228">Specifies a value indicating whether to treat all warnings as errors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-229">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-229">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWarningsAsErrors">
      <MemberSignature Language="C#" Value="public bool SetWarningsAsErrors (string warningsAsErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWarningsAsErrors(string warningsAsErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWarningsAsErrors(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWarningsAsErrors (warningsAsErrors As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWarningsAsErrors(System::String ^ warningsAsErrors);" />
      <MemberSignature Language="F#" Value="abstract member SetWarningsAsErrors : string -&gt; bool" Usage="iVbcHostObject.SetWarningsAsErrors warningsAsErrors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warningsAsErrors" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="warningsAsErrors">
          <span data-ttu-id="520e8-230">Elenco di avvisi da considerare come errori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-230">A list of warnings to treat as errors.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-231">Specifica un elenco di avvisi da considerare come errori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-231">Specifies a list of warnings to treat as errors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-232">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-232">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWarningsNotAsErrors">
      <MemberSignature Language="C#" Value="public bool SetWarningsNotAsErrors (string warningsNotAsErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWarningsNotAsErrors(string warningsNotAsErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWarningsNotAsErrors(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWarningsNotAsErrors (warningsNotAsErrors As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWarningsNotAsErrors(System::String ^ warningsNotAsErrors);" />
      <MemberSignature Language="F#" Value="abstract member SetWarningsNotAsErrors : string -&gt; bool" Usage="iVbcHostObject.SetWarningsNotAsErrors warningsNotAsErrors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warningsNotAsErrors" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="warningsNotAsErrors">
          <span data-ttu-id="520e8-233">Elenco di avvisi che non vengono considerati errori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-233">A list of warnings that are not treated as errors.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-234">Specifica un elenco di avvisi che non vengono considerati errori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-234">Specifies a list of warnings that are not treated as errors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-235">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-235">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWin32Icon">
      <MemberSignature Language="C#" Value="public bool SetWin32Icon (string win32Icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWin32Icon(string win32Icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWin32Icon(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWin32Icon (win32Icon As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWin32Icon(System::String ^ win32Icon);" />
      <MemberSignature Language="F#" Value="abstract member SetWin32Icon : string -&gt; bool" Usage="iVbcHostObject.SetWin32Icon win32Icon" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="win32Icon" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="win32Icon">
          <span data-ttu-id="520e8-236">File con estensione ICO da inserire nell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-236">The .ico file to insert into the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-237">Specifica un file con estensione ICO da inserire nell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-237">Specifies an .ico file to insert into the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-238">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-238">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWin32Resource">
      <MemberSignature Language="C#" Value="public bool SetWin32Resource (string win32Resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWin32Resource(string win32Resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWin32Resource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWin32Resource (win32Resource As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWin32Resource(System::String ^ win32Resource);" />
      <MemberSignature Language="F#" Value="abstract member SetWin32Resource : string -&gt; bool" Usage="iVbcHostObject.SetWin32Resource win32Resource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="win32Resource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="win32Resource">
          <span data-ttu-id="520e8-239">File di risorsa Win32 (con estensione res) da inserire nel file di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-239">A Win32 resource (.res) file to insert into the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="520e8-240">Specifica un file di risorsa Win32 (con estensione res) da inserire nel file di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-240">Specifies a Win32 resource (.res) file to insert into the output file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="520e8-241">
            <see langword="true" /> se il metodo riesce. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="520e8-241">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>