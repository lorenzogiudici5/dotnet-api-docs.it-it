<Type Name="DialogPropertyValueEditor" FullName="System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe29b9b8c339ea42cc85c893adfac7fae474eb2b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36720959" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DialogPropertyValueEditor : System.Activities.Presentation.PropertyEditing.PropertyValueEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DialogPropertyValueEditor extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class DialogPropertyValueEditor&#xA;Inherits PropertyValueEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DialogPropertyValueEditor : System::Activities::Presentation::PropertyEditing::PropertyValueEditor" />
  <TypeSignature Language="F#" Value="type DialogPropertyValueEditor = class&#xA;    inherit PropertyValueEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Presentation.PropertyEditing.PropertyValueEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contenitore di tutta la logica di modifica delle finestre di dialogo per gli oggetti <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare la classe <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> per mostrare un editor inline che possa presentare un editor della finestra di dialogo associato.  
  
 La classe <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> può contenere un oggetto <xref:System.Windows.DataTemplate> per un editor finestre o la logica personalizzata che viene chiamata al richiamo della finestra di dialogo.  
  
 Utilizzare l'oggetto <xref:System.Activities.Presentation.PropertyEditing.EditModeSwitchButton> presente in <xref:System.Windows.DataTemplate> per richiamare la classe <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> personalizzata.  
  
 È possibile fornire un oggetto <xref:System.Windows.DataTemplate> mostrato in una finestra di dialogo dell'host o eseguire l'override del metodo <xref:System.Windows.Forms.Form.ShowDialog> che consente il riutilizzo delle finestre di dialogo esistenti o di sistema.  
  
 Nell'elenco seguente vengono mostrate le regole che consentono di determinare i casi in cui utilizzare il metodo <xref:System.Windows.DataTemplate> o <xref:System.Windows.Forms.Form.ShowDialog>.  
  
 Se il <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A> proprietà non è un riferimento null (Nothing in Visual Basic), che <xref:System.Windows.DataTemplate> è ospitato in una finestra di dialogo specifica dell'host, che fornisce l'host applicazione degli stili. La classe <xref:System.Windows.Forms.Form.ShowDialog> non viene chiamata.  
  
 Se il <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A> proprietà è un riferimento null (Nothing in Visual Basic), la macchina virtuale <xref:System.Windows.Forms.Form.ShowDialog> metodo viene chiamato ed è possibile eseguire l'override di questo metodo per visualizzare qualsiasi finestra di dialogo.  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogPropertyValueEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DialogPropertyValueEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> senza modelli specifici.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogPropertyValueEditor (System.Windows.DataTemplate dialogEditorTemplate, System.Windows.DataTemplate inlineEditorTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DataTemplate dialogEditorTemplate, class System.Windows.DataTemplate inlineEditorTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.#ctor(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dialogEditorTemplate As DataTemplate, inlineEditorTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DialogPropertyValueEditor(System::Windows::DataTemplate ^ dialogEditorTemplate, System::Windows::DataTemplate ^ inlineEditorTemplate);" />
      <MemberSignature Language="F#" Value="new System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" Usage="new System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor (dialogEditorTemplate, inlineEditorTemplate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dialogEditorTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="inlineEditorTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="dialogEditorTemplate">Oggetto <see cref="T:System.Windows.DataTemplate" /> ospitato in un riquadro della finestra di dialogo specifica dell'host la cui proprietà <see cref="P:System.Activities.ActivityContext.DataContext" /> è impostata sull'oggetto <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> che corrisponde alla proprietà modificata.</param>
        <param name="inlineEditorTemplate">Oggetto <see cref="T:System.Windows.DataTemplate" /> utilizzato per l'interfaccia utente dell'editor inline. Se utilizzato, la relativa proprietà <see cref="P:System.Activities.ActivityContext.DataContext" /> è impostata sull'oggetto <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> che corrisponde alla proprietà modificata.</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> con i modelli dell'editor finestre e inline specificati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogEditorTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate DialogEditorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate DialogEditorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogEditorTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ DialogEditorTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DialogEditorTemplate : System.Windows.DataTemplate with get, set" Usage="System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Windows.DataTemplate" /> ospitato da una finestra di dialogo specifica dell'host la cui proprietà <see cref="P:System.Activities.ActivityContext.DataContext" /> è impostata su un oggetto <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" />.</summary>
        <value>Oggetto <see cref="T:System.Windows.DataTemplate" /> ospitato da una finestra di dialogo specifica dell'host.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se questa proprietà restituisce `null`, il <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.ShowDialog%2A> viene invece chiamato il metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public virtual void ShowDialog (System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, System.Windows.IInputElement commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowDialog(class System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, class System.Windows.IInputElement commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.ShowDialog(System.Activities.Presentation.PropertyEditing.PropertyValue,System.Windows.IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ShowDialog(System::Activities::Presentation::PropertyEditing::PropertyValue ^ propertyValue, System::Windows::IInputElement ^ commandSource);" />
      <MemberSignature Language="F#" Value="abstract member ShowDialog : System.Activities.Presentation.PropertyEditing.PropertyValue * System.Windows.IInputElement -&gt; unit&#xA;override this.ShowDialog : System.Activities.Presentation.PropertyEditing.PropertyValue * System.Windows.IInputElement -&gt; unit" Usage="dialogPropertyValueEditor.ShowDialog (propertyValue, commandSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValue" Type="System.Activities.Presentation.PropertyEditing.PropertyValue" />
        <Parameter Name="commandSource" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="propertyValue">Oggetto <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" /> per la proprietà modificata.</param>
        <param name="commandSource">
          <see cref="T:System.Windows.IInputElement" /> che può essere utilizzato come origine per l'esecuzione di <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueEditorCommands" />.</param>
        <summary>Chiamato quando <see cref="P:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" /> è Null ed è stata richiamata una finestra di dialogo dall'utente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poiché i comandi vengono gestiti dall'host e le finestre di dialogo personalizzate non faranno parte della struttura ad albero visiva in questione, `commandSource` espone un oggetto <xref:System.Windows.IInputElement> che fa parte della struttura ad albero visiva dell'host e che, pertanto, può essere utilizzato per eseguire i comandi di modifica delle proprietà in modo che vengano gestiti correttamente. L'esecuzione dell'override di questo metodo consente di implementare la logica personalizzata di qualsiasi finestra di dialogo, ad esempio richiamando le finestre di dialogo di sistema esistenti.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>