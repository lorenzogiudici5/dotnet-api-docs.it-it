<Type Name="ITaskFactory2" FullName="Microsoft.Build.Framework.ITaskFactory2">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4a99d31fcce2d7003fbb5aea715f1d5d30ce444e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36735516" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITaskFactory2 : Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITaskFactory2 implements class Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ITaskFactory2" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITaskFactory2&#xA;Implements ITaskFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITaskFactory2 : Microsoft::Build::Framework::ITaskFactory" />
  <TypeSignature Language="F#" Value="type ITaskFactory2 = interface&#xA;    interface ITaskFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Descrive un'interfaccia <see cref="T:Microsoft.Build.Framework.ITaskFactory" /> estesa che un'istanza della factory delle attività deve implementare.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateTask">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, System.Collections.Generic.IDictionary&lt;string,string&gt; taskIdentityParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.ITask CreateTask(class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; taskIdentityParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory2.CreateTask(Microsoft.Build.Framework.IBuildEngine,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTask (taskFactoryLoggingHost As IBuildEngine, taskIdentityParameters As IDictionary(Of String, String)) As ITask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Framework::ITask ^ CreateTask(Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ taskIdentityParameters);" />
      <MemberSignature Language="F#" Value="abstract member CreateTask : Microsoft.Build.Framework.IBuildEngine * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Build.Framework.ITask" Usage="iTaskFactory2.CreateTask (taskFactoryLoggingHost, taskIdentityParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
        <Parameter Name="taskIdentityParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="taskFactoryLoggingHost">L'host di registrazione della factory delle attività registrerà messaggi nel contesto dell'attività.</param>
        <param name="taskIdentityParameters">Parametri speciali che la factory delle attività può utilizzare per modificare il modo in cui vengono eseguite le attività, ad esempio quelle di runtime e architettura.</param>
        <summary>Creare un'istanza dell'attività da utilizzare, con un set facoltativo di parametri "speciali" impostati su un'unica chiamata di attività utilizzando i parametri delle attività predefiniti MSBuildArchitecture e MSBuildRuntime. MSBuild offre un'implementazione di questa interfaccia, TaskHostFactory, che usa "MSBuildRuntime", con valori "CLR2", "CLR4", "CurrentRuntime" e "*" (Qualsiasi) e "MSBuildArchitecture", con valori "x86", "x64", "CurrentArchitecture" e "\*" (Qualsiasi). Un implementatore di ITaskFactory2 può scegliere di utilizzare questi valori predefiniti di MSBuildArchitecture e di MSBuildRuntime oppure è possibile specificare nuovi valori per tali parametri.</summary>
        <returns>L'attività generata, oppure <c>Null</c> se l'attività non viene creata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se una factory delle attività implementa ITaskFactory2, MSBuild chiamerà questo metodo anziché ITaskFactory.CreateTask.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public bool Initialize (string taskName, System.Collections.Generic.IDictionary&lt;string,string&gt; factoryIdentityParameters, System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Initialize(string taskName, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; factoryIdentityParameters, class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory2.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (taskName As String, factoryIdentityParameters As IDictionary(Of String, String), parameterGroup As IDictionary(Of String, TaskPropertyInfo), taskBody As String, taskFactoryLoggingHost As IBuildEngine) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Initialize(System::String ^ taskName, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ factoryIdentityParameters, System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ parameterGroup, System::String ^ taskBody, Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Framework.TaskPropertyInfo&gt; * string * Microsoft.Build.Framework.IBuildEngine -&gt; bool" Usage="iTaskFactory2.Initialize (taskName, factoryIdentityParameters, parameterGroup, taskBody, taskFactoryLoggingHost)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="factoryIdentityParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="parameterGroup" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Framework.TaskPropertyInfo&gt;" />
        <Parameter Name="taskBody" Type="System.String" />
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="taskName">Nome dell'attività.</param>
        <param name="factoryIdentityParameters">Parametri speciali che la factory delle attività può utilizzare per modificare il modo in cui vengono eseguite le attività, ad esempio quelle di runtime e architettura. La chiave è il nome del parametro e il valore è il valore del parametro. Si tratta del set di parametri che è stato impostato in UsingTask utilizzando ad esempio i parametri UsingTask Runtime e Architecture.</param>
        <param name="parameterGroup">Gruppo di parametri.</param>
        <param name="taskBody">Corpo dell'attività.</param>
        <param name="taskFactoryLoggingHost">Host di registrazione della factory delle attività.</param>
        <summary>Inizializza la factory per la creazione di un'istanza delle attività con un particolare blocco dell'attività inline e un set di parametri UsingTask. MSBuild offre un'implementazione di questa interfaccia, TaskHostFactory, che usa "Runtime", con valori "CLR2", "CLR4", "CurrentRuntime" e "*" (Qualsiasi) e "Architecture", con valori "x86", "x64", "CurrentArchitecture" e "\*" (Qualsiasi). Un implementatore di ITaskFactory2 può scegliere di utilizzare questi valori predefiniti di Runtime e di Architecture oppure è possibile specificare nuovi valori per tali parametri.</summary>
        <returns>Valore che indica se l'inizializzazione è stata eseguita correttamente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il motore di MSBuild chiamerà questo elemento per inizializzare la factory. Questa operazione dovrebbe inizializzare la factory in modo che sia possibile richiedere se i nomi di attività possono o meno essere creati dalla factory stessa. Se una factory delle attività implementa ITaskFactory2, al posto di ITaskFactory.Initialize verrà chiamato il metodo Initialize.  
  
 Il taskFactoryLoggingHost registrerà messaggi nel contesto della destinazione in cui è stata utilizzata l'attività.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>