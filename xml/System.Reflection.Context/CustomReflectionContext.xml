<Type Name="CustomReflectionContext" FullName="System.Reflection.Context.CustomReflectionContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2cb0994464985332742e76a283814be590106a9b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30470025" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CustomReflectionContext : System.Reflection.ReflectionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CustomReflectionContext extends System.Reflection.ReflectionContext" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Context.CustomReflectionContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CustomReflectionContext&#xA;Inherits ReflectionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomReflectionContext abstract : System::Reflection::ReflectionContext" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Context</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.ReflectionContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="30ded-101">Rappresenta un contesto di reflection personalizzabile.</span>
      <span class="sxs-lookup">
        <span data-stu-id="30ded-101">Represents a customizable reflection context.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ded-102"><xref:System.Reflection.Context.CustomReflectionContext> fornisce un modo aggiungere o rimuovere gli attributi personalizzati da oggetti di reflection o aggiungere proprietà fittizia a tali oggetti, senza implementare nuovamente il modello di reflection completo.</span><span class="sxs-lookup"><span data-stu-id="30ded-102"><xref:System.Reflection.Context.CustomReflectionContext> provides a way for you to add or remove custom attributes from reflection objects, or add dummy properties to those objects, without re-implementing the complete reflection model.</span></span> <span data-ttu-id="30ded-103">Il valore predefinito <xref:System.Reflection.Context.CustomReflectionContext> semplicemente la reflection esegue il wrapping di oggetti senza apportare alcuna modifica, ma sottoclassi ed eseguendo l'override di metodi rilevanti, è possibile aggiungere, rimuovere, o modificare gli attributi che si applicano a qualsiasi parametro riflesso o un membro o aggiungere nuove proprietà a un tipo riflesso.</span><span class="sxs-lookup"><span data-stu-id="30ded-103">The default <xref:System.Reflection.Context.CustomReflectionContext> simply wraps reflection objects without making any changes, but by subclassing and overriding the relevant methods, you can add, remove, or change the attributes that apply to any reflected parameter or member, or add new properties to a reflected type.</span></span>  
  
 <span data-ttu-id="30ded-104">Ad esempio, si supponga che il codice segue la convenzione di applicazione di un particolare attributo ai metodi factory, ma ora è necessario utilizzare il codice di terze parti che non dispone di attributi.</span><span class="sxs-lookup"><span data-stu-id="30ded-104">For example, suppose that your code follows the convention of applying a particular attribute to factory methods, but you are now required to work with third-party code that lacks attributes.</span></span> <span data-ttu-id="30ded-105">È possibile utilizzare <xref:System.Reflection.Context.CustomReflectionContext> per specificare una regola per identificare gli oggetti che devono avere gli attributi e per specificare gli oggetti con tali attributi quando vengono visualizzati dal codice.</span><span class="sxs-lookup"><span data-stu-id="30ded-105">You can use <xref:System.Reflection.Context.CustomReflectionContext> to specify a rule for identifying the objects that should have attributes and to supply the objects with those attributes when they are viewed from your code.</span></span>  
  
 <span data-ttu-id="30ded-106">Per utilizzare <xref:System.Reflection.Context.CustomReflectionContext> in effetti, il codice che utilizza gli oggetti riflessi deve supportare la nozione di specificare un contesto di reflection, anziché supporre che riflette tutti gli oggetti sono associati al contesto di reflection di runtime.</span><span class="sxs-lookup"><span data-stu-id="30ded-106">To use <xref:System.Reflection.Context.CustomReflectionContext> effectively, the code that uses the reflected objects must support the notion of specifying a reflection context, instead of assuming that all reflected objects are associated with the runtime reflection context.</span></span> <span data-ttu-id="30ded-107">Molti metodi di reflection in .NET Framework forniscono un <xref:System.Reflection.ReflectionContext> parametro per questo scopo.</span><span class="sxs-lookup"><span data-stu-id="30ded-107">Many reflection methods in the .NET Framework provide a <xref:System.Reflection.ReflectionContext> parameter for this purpose.</span></span>  
  
 <span data-ttu-id="30ded-108">Per modificare gli attributi applicati a un parametro riflesso o un membro, eseguire l'override di <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> o <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="30ded-108">To modify the attributes that are applied to a reflected parameter or member, override the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> or <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> method.</span></span> <span data-ttu-id="30ded-109">Questi metodi accettano l'oggetto riflesso e l'elenco di attributi nel relativo contesto di reflection corrente e restituiscono l'elenco di attributi che deve essere nel contesto di reflection personalizzati.</span><span class="sxs-lookup"><span data-stu-id="30ded-109">These methods take the reflected object and the list of attributes under its current reflection context, and return the list of attributes it should have under the custom reflection context.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="30ded-110"><xref:System.Reflection.Context.CustomReflectionContext> metodi non necessario accedere all'elenco di attributi di un metodo o un oggetto riflesso chiamando direttamente il <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> metodo forniti <xref:System.Reflection.MemberInfo> o <xref:System.Reflection.ParameterInfo> istanza, ma utilizzare invece il `declaredAttributes` elenco, viene passato come parametro per il <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="30ded-110"><xref:System.Reflection.Context.CustomReflectionContext> methods should not access the list of attributes of a reflected object or method directly by calling the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the provided <xref:System.Reflection.MemberInfo> or <xref:System.Reflection.ParameterInfo> instance, but should instead use the `declaredAttributes` list, which is passed as a parameter to the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> method overloads.</span></span>  
  
 <span data-ttu-id="30ded-111">Per aggiungere proprietà a un tipo riflesso, eseguire l'override di <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="30ded-111">To add properties to a reflected type, override the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span> <span data-ttu-id="30ded-112">Il metodo accetta un parametro che specifica il tipo riflesso e restituisce un elenco di proprietà aggiuntive.</span><span class="sxs-lookup"><span data-stu-id="30ded-112">The method accepts a parameter that specifies the reflected type, and returns a list of additional properties.</span></span> <span data-ttu-id="30ded-113">È consigliabile utilizzare il <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> metodo per creare oggetti di proprietà da restituire.</span><span class="sxs-lookup"><span data-stu-id="30ded-113">You should use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method to create property objects to return.</span></span> <span data-ttu-id="30ded-114">Quando la creazione della proprietà che verrà utilizzato come funzione di accesso delle proprietà, è possibile omettere una delle funzioni di accesso per creare una proprietà di sola lettura o sola scrittura, è possibile specificare i delegati.</span><span class="sxs-lookup"><span data-stu-id="30ded-114">You can specify delegates when creating the property that will serve as the property accessor, and you can omit one of the accessors to create a read-only or write-only property.</span></span> <span data-ttu-id="30ded-115">Si noti che questo tipo proprietà fittizio non dispongono di metadati o il supporto Common Intermediate Language (CIL).</span><span class="sxs-lookup"><span data-stu-id="30ded-115">Note that such dummy properties have no metadata or Common Intermediate Language (CIL) backing.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="30ded-116">Prestare attenzione sull'uguaglianza fra oggetti riflessi quando si lavora con i contesti di reflection, perché gli oggetti potrebbero rappresentare lo stesso oggetto riflesso in più contesti.</span><span class="sxs-lookup"><span data-stu-id="30ded-116">Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts.</span></span> <span data-ttu-id="30ded-117">È possibile utilizzare il <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> metodo per ottenere versione di un contesto di reflection specifico di un oggetto riflesso.</span><span class="sxs-lookup"><span data-stu-id="30ded-117">You can use the <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> method to obtain a particular reflection context's version of a reflected object.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="30ded-118">Oggetto <xref:System.Reflection.Context.CustomReflectionContext> oggetto modifica gli attributi restituiti da un oggetto reflection specifico, ad esempio quelli ottenuti tramite il <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="30ded-118">A <xref:System.Reflection.Context.CustomReflectionContext> object alters the attributes returned by a particular reflection object, such as those obtained by the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method.</span></span> <span data-ttu-id="30ded-119">Non modifica i dati dell'attributo personalizzato restituiti dal <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> metodo e i due elenchi non corrisponderanno quando si utilizza un contesto di reflection personalizzati.</span><span class="sxs-lookup"><span data-stu-id="30ded-119">It does not alter the custom attribute data returned by the <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> method, and these two lists will not match when you use a custom reflection context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ded-120">Nell'esempio seguente viene illustrato come creare una sottoclasse <xref:System.Reflection.Context.CustomReflectionContext> per aggiungere un attributo personalizzato a tutti i membri di un determinato tipo i cui nomi iniziano con "A".</span><span class="sxs-lookup"><span data-stu-id="30ded-120">The following example demonstrates how to subclass  <xref:System.Reflection.Context.CustomReflectionContext> to add a custom attribute to all the members of a given type whose names begin with "To".</span></span> <span data-ttu-id="30ded-121">Per eseguire questo codice, incollarlo in un progetto console vuota e assicurarsi di includere un riferimento a System.Reflection.Context.dll.</span><span class="sxs-lookup"><span data-stu-id="30ded-121">To run this code, paste it into an empty console project, and make sure to include a reference to System.Reflection.Context.dll.</span></span>  
  
 [!code-csharp[System.Reflection.Context.CustomReflectionContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.context.customreflectioncontext/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30ded-122">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.Context.CustomReflectionContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-122">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="30ded-123">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.Context.CustomReflectionContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-123">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext (System.Reflection.ReflectionContext source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ReflectionContext source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext(System::Reflection::ReflectionContext ^ source);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="30ded-124">Contesto di reflection da usare come base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-124">The reflection context to use as a base.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ded-125">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.Context.CustomReflectionContext" /> con il contesto di reflection come base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-125">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class with the specified reflection context as a base.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperties">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt; AddProperties (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.PropertyInfo&gt; AddProperties(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Reflection::PropertyInfo ^&gt; ^ AddProperties(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30ded-126">Tipo a cui aggiungere le proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-126">The type to add properties to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ded-127">Quando ne viene eseguito l'override in una classe derivata, fornisce una raccolta di proprietà aggiuntive per il tipo specificato, come indicato in questo contesto di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-127">When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ded-128">Raccolta di proprietà aggiuntive per il tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-128">A collection of additional properties for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ded-129">Eseguire l'override di questo metodo per specificare le proprietà che devono essere aggiunti a un tipo specificato.</span><span class="sxs-lookup"><span data-stu-id="30ded-129">Override this method to specify which properties should be added to a given type.</span></span> <span data-ttu-id="30ded-130">Per creare le proprietà, utilizzare il <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="30ded-130">To create the properties, use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30ded-131">Crea un oggetto che rappresenta una proprietà da aggiungere a un tipo, come specificato dal metodo <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-131">Creates an object that represents a property to be added to a type, as specified by the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType">
          <span data-ttu-id="30ded-132">Tipo di proprietà da creare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-132">The type of the property to create.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="30ded-133">Nome della proprietà da creare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-133">The name of the property to create.</span>
          </span>
        </param>
        <param name="getter">
          <span data-ttu-id="30ded-134">Oggetto che rappresenta la funzione di accesso <see langword="get" /> alla proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-134">An object that represents the property's <see langword="get" /> accessor.</span>
          </span>
        </param>
        <param name="setter">
          <span data-ttu-id="30ded-135">Oggetto che rappresenta la funzione di accesso <see langword="set" /> alla proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-135">An object that represents the property's <see langword="set" /> accessor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ded-136">Crea un oggetto che rappresenta una proprietà da aggiungere a un tipo, da utilizzare con il metodo <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-136">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ded-137">Oggetto che rappresenta la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-137">An object that represents the property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ded-138">Gli oggetti restituiti da questo metodo non sono completi <xref:System.Reflection.PropertyInfo> oggetti e deve essere utilizzato solo nel contesto del <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="30ded-138">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter, System.Collections.Generic.IEnumerable&lt;Attribute&gt; propertyCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; getterCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; setterCustomAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; propertyCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; getterCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; setterCustomAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object), propertyCustomAttributes As IEnumerable(Of Attribute), getterCustomAttributes As IEnumerable(Of Attribute), setterCustomAttributes As IEnumerable(Of Attribute)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ propertyCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ getterCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ setterCustomAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
        <Parameter Name="propertyCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="getterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="setterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType">
          <span data-ttu-id="30ded-139">Tipo di proprietà da creare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-139">The type of the property to create.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="30ded-140">Nome della proprietà da creare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-140">The name of the property to create.</span>
          </span>
        </param>
        <param name="getter">
          <span data-ttu-id="30ded-141">Oggetto che rappresenta la funzione di accesso <see langword="get" /> alla proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-141">An object that represents the property's <see langword="get" /> accessor.</span>
          </span>
        </param>
        <param name="setter">
          <span data-ttu-id="30ded-142">Oggetto che rappresenta la funzione di accesso <see langword="set" /> alla proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-142">An object that represents the property's <see langword="set" /> accessor.</span>
          </span>
        </param>
        <param name="propertyCustomAttributes">
          <span data-ttu-id="30ded-143">Raccolta di attributi personalizzati da applicare alla proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-143">A collection of custom attributes to apply to the property.</span>
          </span>
        </param>
        <param name="getterCustomAttributes">
          <span data-ttu-id="30ded-144">Raccolta di attributi personalizzati da applicare alla funzione di accesso <see langword="get" /> della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-144">A collection of custom attributes to apply to the property's <see langword="get" /> accessor.</span>
          </span>
        </param>
        <param name="setterCustomAttributes">
          <span data-ttu-id="30ded-145">Raccolta di attributi personalizzati da applicare alla funzione di accesso <see langword="set" /> della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-145">A collection of custom attributes to apply to the property's <see langword="set" /> accessor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ded-146">Crea un oggetto che rappresenta una proprietà da aggiungere a un tipo, da utilizzare con il metodo <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> e utilizzando gli attributi personalizzati specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-146">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method and using the specified custom attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ded-147">Oggetto che rappresenta la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-147">An object that represents the property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ded-148">Gli oggetti restituiti da questo metodo non sono completi <xref:System.Reflection.PropertyInfo> oggetti e deve essere utilizzato solo nel contesto del <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="30ded-148">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30ded-149">Quando ne viene eseguito l'override in una classe derivata, fornisce una raccolta modificata di attributi personalizzati per l'oggetto specificato, come indicato in questo contesto di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-149">When overridden in a derived class, provides a modified collection of custom attributes for the specified object, as represented in this reflection context.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.MemberInfo member, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (member As MemberInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ member, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="30ded-150">Membro di cui verranno restituiti gli attributi personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-150">The member whose custom attributes will be returned.</span>
          </span>
        </param>
        <param name="declaredAttributes">
          <span data-ttu-id="30ded-151">Raccolta degli attributi del membro nel relativo contesto corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-151">A collection of the member's attributes in its current context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ded-152">Quando ne viene eseguito l'override in una classe derivata, fornisce un elenco di attributi personalizzati per il membro specificato, come indicato in questo contesto di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-152">When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ded-153">Raccolta che rappresenta gli attributi personalizzati del membro specificato in questo contesto di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-153">A collection that represents the custom attributes of the specified member in this reflection context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.ParameterInfo parameter, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.ParameterInfo parameter, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (parameter As ParameterInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ parameter, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="30ded-154">Parametro di cui verranno restituiti gli attributi personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-154">The parameter whose custom attributes will be returned.</span>
          </span>
        </param>
        <param name="declaredAttributes">
          <span data-ttu-id="30ded-155">Raccolta degli attributi del parametro nel relativo contesto corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-155">A collection of the parameter's attributes in its current context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ded-156">Quando ne viene eseguito l'override in una classe derivata, fornisce un elenco di attributi personalizzati per il parametro specificato, come indicato in questo contesto di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-156">When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ded-157">Raccolta che rappresenta gli attributi personalizzati del parametro specificato in questo contesto di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-157">A collection that represents the custom attributes of the specified parameter in this reflection context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly MapAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly MapAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ MapAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="30ded-158">Rappresentazione esterna dell'assembly da rappresentare in questo contesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-158">The external representation of the assembly to represent in this context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ded-159">Ottiene la rappresentazione, in questo contesto di reflection, di un assembly rappresentato da un oggetto di un altro contesto di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-159">Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ded-160">Rappresentazione dell'assembly in questo contesto di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-160">The representation of the assembly in this reflection context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapType">
      <MemberSignature Language="C#" Value="public override System.Reflection.TypeInfo MapType (System.Reflection.TypeInfo type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.TypeInfo MapType(class System.Reflection.TypeInfo type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MapType (type As TypeInfo) As TypeInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::TypeInfo ^ MapType(System::Reflection::TypeInfo ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.TypeInfo" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30ded-161">Rappresentazione esterna del tipo da rappresentare in questo contesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-161">The external representation of the type to represent in this context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ded-162">Ottiene la rappresentazione, in questo contesto di reflection, di un tipo rappresentato da un oggetto di un altro contesto di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-162">Gets the representation, in this reflection context, of a type represented by an object from another reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ded-163">Rappresentazione del tipo in questo contesto di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ded-163">The representation of the type in this reflection context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>