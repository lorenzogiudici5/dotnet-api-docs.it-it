<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CustomReflectionContext.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52cb0994464985332742e76a283814be590106a9b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2cb0994464985332742e76a283814be590106a9b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Represents a customizable reflection context.</source>
          <target state="translated">Rappresenta un contesto di reflection personalizzabile.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> provides a way for you to add or remove custom attributes from reflection objects, or add dummy properties to those objects, without re-implementing the complete reflection model.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> fornisce un modo aggiungere o rimuovere gli attributi personalizzati da oggetti di reflection o aggiungere proprietà fittizia a tali oggetti, senza implementare nuovamente il modello di reflection completo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>The default <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> simply wraps reflection objects without making any changes, but by subclassing and overriding the relevant methods, you can add, remove, or change the attributes that apply to any reflected parameter or member, or add new properties to a reflected type.</source>
          <target state="translated">Il valore predefinito <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> semplicemente la reflection esegue il wrapping di oggetti senza apportare alcuna modifica, ma sottoclassi ed eseguendo l'override di metodi rilevanti, è possibile aggiungere, rimuovere, o modificare gli attributi che si applicano a qualsiasi parametro riflesso o un membro o aggiungere nuove proprietà a un tipo riflesso.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>For example, suppose that your code follows the convention of applying a particular attribute to factory methods, but you are now required to work with third-party code that lacks attributes.</source>
          <target state="translated">Ad esempio, si supponga che il codice segue la convenzione di applicazione di un particolare attributo ai metodi factory, ma ora è necessario utilizzare il codice di terze parti che non dispone di attributi.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>You can use <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> to specify a rule for identifying the objects that should have attributes and to supply the objects with those attributes when they are viewed from your code.</source>
          <target state="translated">È possibile utilizzare <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> per specificare una regola per identificare gli oggetti che devono avere gli attributi e per specificare gli oggetti con tali attributi quando vengono visualizzati dal codice.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>To use <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> effectively, the code that uses the reflected objects must support the notion of specifying a reflection context, instead of assuming that all reflected objects are associated with the runtime reflection context.</source>
          <target state="translated">Per utilizzare <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> in effetti, il codice che utilizza gli oggetti riflessi deve supportare la nozione di specificare un contesto di reflection, anziché supporre che riflette tutti gli oggetti sono associati al contesto di reflection di runtime.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Many reflection methods in the .NET Framework provide a <ph id="ph1">&lt;xref:System.Reflection.ReflectionContext&gt;</ph> parameter for this purpose.</source>
          <target state="translated">Molti metodi di reflection in .NET Framework forniscono un <ph id="ph1">&lt;xref:System.Reflection.ReflectionContext&gt;</ph> parametro per questo scopo.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>To modify the attributes that are applied to a reflected parameter or member, override the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph> method.</source>
          <target state="translated">Per modificare gli attributi applicati a un parametro riflesso o un membro, eseguire l'override di <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph> o <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>These methods take the reflected object and the list of attributes under its current reflection context, and return the list of attributes it should have under the custom reflection context.</source>
          <target state="translated">Questi metodi accettano l'oggetto riflesso e l'elenco di attributi nel relativo contesto di reflection corrente e restituiscono l'elenco di attributi che deve essere nel contesto di reflection personalizzati.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> methods should not access the list of attributes of a reflected object or method directly by calling the <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method on the provided <ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> instance, but should instead use the <ph id="ph5">`declaredAttributes`</ph> list, which is passed as a parameter to the <ph id="ph6">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A&gt;</ph> method overloads.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> metodi non necessario accedere all'elenco di attributi di un metodo o un oggetto riflesso chiamando direttamente il <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> metodo forniti <ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph> o <ph id="ph4">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> istanza, ma utilizzare invece il <ph id="ph5">`declaredAttributes`</ph> elenco, viene passato come parametro per il <ph id="ph6">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A&gt;</ph> overload del metodo.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>To add properties to a reflected type, override the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> method.</source>
          <target state="translated">Per aggiungere proprietà a un tipo riflesso, eseguire l'override di <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>The method accepts a parameter that specifies the reflected type, and returns a list of additional properties.</source>
          <target state="translated">Il metodo accetta un parametro che specifica il tipo riflesso e restituisce un elenco di proprietà aggiuntive.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>You should use the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph> method to create property objects to return.</source>
          <target state="translated">È consigliabile utilizzare il <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph> metodo per creare oggetti di proprietà da restituire.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>You can specify delegates when creating the property that will serve as the property accessor, and you can omit one of the accessors to create a read-only or write-only property.</source>
          <target state="translated">Quando la creazione della proprietà che verrà utilizzato come funzione di accesso delle proprietà, è possibile omettere una delle funzioni di accesso per creare una proprietà di sola lettura o sola scrittura, è possibile specificare i delegati.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Note that such dummy properties have no metadata or Common Intermediate Language (CIL) backing.</source>
          <target state="translated">Si noti che questo tipo proprietà fittizio non dispongono di metadati o il supporto Common Intermediate Language (CIL).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts.</source>
          <target state="translated">Prestare attenzione sull'uguaglianza fra oggetti riflessi quando si lavora con i contesti di reflection, perché gli oggetti potrebbero rappresentare lo stesso oggetto riflesso in più contesti.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>You can use the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.MapType%2A&gt;</ph> method to obtain a particular reflection context's version of a reflected object.</source>
          <target state="translated">È possibile utilizzare il <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.MapType%2A&gt;</ph> metodo per ottenere versione di un contesto di reflection specifico di un oggetto riflesso.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>A <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> object alters the attributes returned by a particular reflection object, such as those obtained by the <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> oggetto modifica gli attributi restituiti da un oggetto reflection specifico, ad esempio quelli ottenuti tramite il <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>It does not alter the custom attribute data returned by the <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A&gt;</ph> method, and these two lists will not match when you use a custom reflection context.</source>
          <target state="translated">Non modifica i dati dell'attributo personalizzato restituiti dal <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A&gt;</ph> metodo e i due elenchi non corrisponderanno quando si utilizza un contesto di reflection personalizzati.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>The following example demonstrates how to subclass  <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> to add a custom attribute to all the members of a given type whose names begin with "To".</source>
          <target state="translated">Nell'esempio seguente viene illustrato come creare una sottoclasse <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> per aggiungere un attributo personalizzato a tutti i membri di un determinato tipo i cui nomi iniziano con "A".</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>To run this code, paste it into an empty console project, and make sure to include a reference to System.Reflection.Context.dll.</source>
          <target state="translated">Per eseguire questo codice, incollarlo in un progetto console vuota e assicurarsi di includere un riferimento a System.Reflection.Context.dll.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)">
          <source>The reflection context to use as a base.</source>
          <target state="translated">Contesto di reflection da usare come base.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> class with the specified reflection context as a base.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> con il contesto di reflection come base.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>The type to add properties to.</source>
          <target state="translated">Tipo a cui aggiungere le proprietà.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.</source>
          <target state="translated">Quando ne viene eseguito l'override in una classe derivata, fornisce una raccolta di proprietà aggiuntive per il tipo specificato, come indicato in questo contesto di reflection.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>A collection of additional properties for the specified type.</source>
          <target state="translated">Raccolta di proprietà aggiuntive per il tipo specificato.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>Override this method to specify which properties should be added to a given type.</source>
          <target state="translated">Eseguire l'override di questo metodo per specificare le proprietà che devono essere aggiunti a un tipo specificato.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>To create the properties, use the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph> method.</source>
          <target state="translated">Per creare le proprietà, utilizzare il <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Creates an object that represents a property to be added to a type, as specified by the <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Crea un oggetto che rappresenta una proprietà da aggiungere a un tipo, come specificato dal metodo <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>The type of the property to create.</source>
          <target state="translated">Tipo di proprietà da creare.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>The name of the property to create.</source>
          <target state="translated">Nome della proprietà da creare.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>An object that represents the property's <ph id="ph1">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">Oggetto che rappresenta la funzione di accesso <ph id="ph1">&lt;see langword="get" /&gt;</ph> alla proprietà.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>An object that represents the property's <ph id="ph1">&lt;see langword="set" /&gt;</ph> accessor.</source>
          <target state="translated">Oggetto che rappresenta la funzione di accesso <ph id="ph1">&lt;see langword="set" /&gt;</ph> alla proprietà.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>Creates an object that represents a property to be added to a type, to be used with the <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Crea un oggetto che rappresenta una proprietà da aggiungere a un tipo, da utilizzare con il metodo <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>An object that represents the property.</source>
          <target state="translated">Oggetto che rappresenta la proprietà.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>Objects that are returned by this method are not complete <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> objects, and should be used only in the context of the <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> method.</source>
          <target state="translated">Gli oggetti restituiti da questo metodo non sono completi <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> oggetti e deve essere utilizzato solo nel contesto del <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>The type of the property to create.</source>
          <target state="translated">Tipo di proprietà da creare.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>The name of the property to create.</source>
          <target state="translated">Nome della proprietà da creare.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>An object that represents the property's <ph id="ph1">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">Oggetto che rappresenta la funzione di accesso <ph id="ph1">&lt;see langword="get" /&gt;</ph> alla proprietà.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>An object that represents the property's <ph id="ph1">&lt;see langword="set" /&gt;</ph> accessor.</source>
          <target state="translated">Oggetto che rappresenta la funzione di accesso <ph id="ph1">&lt;see langword="set" /&gt;</ph> alla proprietà.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>A collection of custom attributes to apply to the property.</source>
          <target state="translated">Raccolta di attributi personalizzati da applicare alla proprietà.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>A collection of custom attributes to apply to the property's <ph id="ph1">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">Raccolta di attributi personalizzati da applicare alla funzione di accesso <ph id="ph1">&lt;see langword="get" /&gt;</ph> della proprietà.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>A collection of custom attributes to apply to the property's <ph id="ph1">&lt;see langword="set" /&gt;</ph> accessor.</source>
          <target state="translated">Raccolta di attributi personalizzati da applicare alla funzione di accesso <ph id="ph1">&lt;see langword="set" /&gt;</ph> della proprietà.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>Creates an object that represents a property to be added to a type, to be used with the <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> method and using the specified custom attributes.</source>
          <target state="translated">Crea un oggetto che rappresenta una proprietà da aggiungere a un tipo, da utilizzare con il metodo <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> e utilizzando gli attributi personalizzati specificati.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>An object that represents the property.</source>
          <target state="translated">Oggetto che rappresenta la proprietà.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>Objects that are returned by this method are not complete <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> objects, and should be used only in the context of the <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> method.</source>
          <target state="translated">Gli oggetti restituiti da questo metodo non sono completi <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> oggetti e deve essere utilizzato solo nel contesto del <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>When overridden in a derived class, provides a modified collection of custom attributes for the specified object, as represented in this reflection context.</source>
          <target state="translated">Quando ne viene eseguito l'override in una classe derivata, fornisce una raccolta modificata di attributi personalizzati per l'oggetto specificato, come indicato in questo contesto di reflection.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>The member whose custom attributes will be returned.</source>
          <target state="translated">Membro di cui verranno restituiti gli attributi personalizzati.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>A collection of the member's attributes in its current context.</source>
          <target state="translated">Raccolta degli attributi del membro nel relativo contesto corrente.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.</source>
          <target state="translated">Quando ne viene eseguito l'override in una classe derivata, fornisce un elenco di attributi personalizzati per il membro specificato, come indicato in questo contesto di reflection.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>A collection that represents the custom attributes of the specified member in this reflection context.</source>
          <target state="translated">Raccolta che rappresenta gli attributi personalizzati del membro specificato in questo contesto di reflection.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>The parameter whose custom attributes will be returned.</source>
          <target state="translated">Parametro di cui verranno restituiti gli attributi personalizzati.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>A collection of the parameter's attributes in its current context.</source>
          <target state="translated">Raccolta degli attributi del parametro nel relativo contesto corrente.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.</source>
          <target state="translated">Quando ne viene eseguito l'override in una classe derivata, fornisce un elenco di attributi personalizzati per il parametro specificato, come indicato in questo contesto di reflection.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>A collection that represents the custom attributes of the specified parameter in this reflection context.</source>
          <target state="translated">Raccolta che rappresenta gli attributi personalizzati del parametro specificato in questo contesto di reflection.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)">
          <source>The external representation of the assembly to represent in this context.</source>
          <target state="translated">Rappresentazione esterna dell'assembly da rappresentare in questo contesto.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)">
          <source>Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.</source>
          <target state="translated">Ottiene la rappresentazione, in questo contesto di reflection, di un assembly rappresentato da un oggetto di un altro contesto di reflection.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)">
          <source>The representation of the assembly in this reflection context.</source>
          <target state="translated">Rappresentazione dell'assembly in questo contesto di reflection.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)">
          <source>The external representation of the type to represent in this context.</source>
          <target state="translated">Rappresentazione esterna del tipo da rappresentare in questo contesto.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)">
          <source>Gets the representation, in this reflection context, of a type represented by an object from another reflection context.</source>
          <target state="translated">Ottiene la rappresentazione, in questo contesto di reflection, di un tipo rappresentato da un oggetto di un altro contesto di reflection.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)">
          <source>The representation of the type in this reflection context.</source>
          <target state="translated">Rappresentazione del tipo in questo contesto di reflection.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>