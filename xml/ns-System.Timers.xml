<Namespace Name="System.Timers">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16e8a11b0b2e9a1da17eb506a6408b9e4ee97265" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30736175" />
  </Metadata>
  <Docs>
    <summary>Lo spazio dei nomi <see cref="N:System.Timers" /> fornisce il componente <see cref="T:System.Timers.Timer" />, che consente di generare un evento a un intervallo specificato.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Timers.Timer> componente è un timer basate su server, che consente di specificare un intervallo di tempo ricorrente in corrispondenza del quale il <xref:System.Timers.Timer.Elapsed> evento viene generato nell'applicazione. È quindi possibile gestire questo evento per fornire una normale elaborazione. Ad esempio, si supponga un server critico che deve rimanere in esecuzione 24 ore su 24, 7 giorni a settimana. È possibile creare un servizio che utilizza un <xref:System.Timers.Timer> per verificare periodicamente il server e verificare che il sistema sia in esecuzione. Se il sistema non risponde, il servizio tenterà di riavviare il server o un amministratore di notifica.  
  
 Basato su server <xref:System.Timers.Timer> è progettato per l'utilizzo con thread di lavoro in un ambiente con multithreading. Timer server possono spostarsi tra i thread per gestire l'eccezione generata <xref:System.Timers.Timer.Elapsed> evento, precisione maggiore dei timer di Windows nella generazione dell'evento nel tempo.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>