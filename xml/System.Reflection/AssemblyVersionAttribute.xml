<Type Name="AssemblyVersionAttribute" FullName="System.Reflection.AssemblyVersionAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e8bbf08909c6cf9fa965274e743f69c05a949eb9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30477625" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AssemblyVersionAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AssemblyVersionAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.AssemblyVersionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyVersionAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyVersionAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifica la versione dell'assembly di cui definire l'attributo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Reflection.AssemblyVersionAttribute> attributo viene utilizzato per assegnare un numero di versione a un assembly. Numero di versione viene quindi archiviato con i metadati dell'assembly.  
  
 Il numero di versione di assembly fa parte di identità di un assembly e gioca un ruolo determinante nel binding dell'assembly e nei criteri di versione. I criteri di versione predefiniti del runtime prevedono che l'applicazione venga eseguita solo con le versioni con cui è stata compilata e testata. Per modificare il comportamento predefinito, è possibile esprimere esplicitamente criteri di versione diversi nei file di configurazione (il file di configurazione dell'applicazione, il file dei criteri dell'autore e il file di configurazione dell'amministratore del computer). Vedere [assembly in Common Language Runtime](~/docs/framework/app-domains/assemblies-in-the-common-language-runtime.md) per ulteriori informazioni.  
  
> [!NOTE]
>  Il controllo di versione viene effettuato solo con assembly con nome sicuro.  
  
 Il numero di versione è costituito da quattro parti, come indicato di seguito:  
  
 \<versione principale >. \<versione secondaria >. \<numero build >. \<revisione >  
  
> [!IMPORTANT]
>  Tutti i componenti della versione devono essere numeri interi maggiori o uguali a 0. I metadati limitano la versione principale e secondario, componenti build e revisione di un assembly a un valore massimo di <xref:System.UInt16.MaxValue?displayProperty=nameWithType> - 1. Se un componente supera questo valore, si verifica un errore di compilazione.  
  
 È possibile specificare tutti i valori oppure è possibile accettare il numero di build predefinito, il numero di revisione o entrambi usando un asterisco (*). Ad esempio, `[assembly:AssemblyVersion("2.3.25.1")]` indica 2 come versione principale, 3 come versione secondaria, 25 come numero di build e 1 come numero di revisione. Un numero di versione, ad esempio `[assembly:AssemblyVersion("1.2.*")]` specifica 1 come versione principale, 2 come versione secondaria e accetta i numeri di build e di revisione predefinita. Un numero di versione, ad esempio `[assembly:AssemblyVersion("1.2.15.*")]` indica 1 come versione principale, 2 come versione secondaria, come il numero di build, 15 e accetta il numero di revisione predefinita. Il numero di build predefinito viene incrementato quotidianamente. Il numero di revisione predefinita è il numero di secondi trascorsi dalla mezzanotte ora locale (senza tenendo regolazioni dell'ora legale del fuso orario account), diviso 2.  
  
> [!NOTE]
>  Se si specifica un asterisco per il numero di build, è possibile specificare un numero di revisione.  
  
 Le versioni degli assembly principali e secondarie vengono utilizzate come il numero di versione della libreria di tipo quando l'assembly viene esportato. Alcuni host COM non accettano librerie dei tipi con il numero di versione 0,0. Pertanto, se si desidera esporre un assembly ai client COM, impostare la versione dell'assembly in modo esplicito su 1.0 nella `AssemblyVersionAttribute` pagina per i progetti creati di fuori [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] e senza `AssemblyVersionAttribute` specificato. Eseguire questa operazione anche quando la versione dell'assembly è 0,0. Tutti i progetti creati [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] dispone di una versione di assembly valore predefinito pari a 1,0. *.  
  
 Per ottenere il nome di un assembly è stato caricato, chiamare <xref:System.Reflection.Assembly.GetName%2A> sull'assembly per ottenere un <xref:System.Reflection.AssemblyName>e quindi ottenere il <xref:System.Reflection.AssemblyName.Version%2A> proprietà. Per ottenere il nome di un assembly non è stato caricato, chiamare <xref:System.Reflection.AssemblyName.GetAssemblyName%2A> dall'applicazione client per verificare che l'applicazione utilizza la versione dell'assembly.  
  
 Il <xref:System.Reflection.AssemblyVersionAttribute> attributo può essere applicato solo una volta. Alcuni modelli di progetto di Visual Studio includono già l'attributo. In tali progetti, aggiungere l'attributo nel codice provoca un errore del compilatore.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Reflection.AssemblyVersionAttribute> attributo per assegnare un numero di versione a un assembly. In fase di compilazione, le informazioni di versione vengano archiviate con i metadati dell'assembly. In fase di esecuzione, l'esempio recupera il valore della <xref:System.Type.Assembly%2A?displayProperty=nameWithType> su un tipo trovato nell'assembly per ottenere un riferimento all'assembly in esecuzione e recupera le informazioni sulla versione dell'assembly dal <xref:System.Reflection.AssemblyName.Version%2A> proprietà del <xref:System.Reflection.AssemblyName> oggetto restituito dal <xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType> metodo.  
  
 [!code-csharp[System.Version.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/example1.cs#6)]
 [!code-vb[System.Version.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/example1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Reflection.AssemblyName.Version" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyVersionAttribute (string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (version As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyVersionAttribute(System::String ^ version);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version">Numero di versione dell'assembly con attributi.</param>
        <summary>Inizializza una nuova istanza della classe <see langword="AssemblyVersionAttribute" /> con il numero di versione dell'assembly di cui definire l'attributo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il formato del `version` stringa è: `major`. `minor`. `build`. `revision`.  
  
 Quando si specifica una versione, è necessario specificare almeno `major`. Se si specifica `major` e `minor`, è possibile specificare un asterisco (*) per `build`. In questo modo `build` sia uguale al numero di giorni trascorsi dal 1 gennaio 2000, ora locale e per `revision` sia uguale al numero di secondi da mezzanotte ora locale (senza tenendo regolazioni dell'ora legale del fuso orario account), diviso per 2.  
  
 Se si specifica `major`, `minor` e `build`, è possibile specificare un asterisco per `revision`. In questo modo `revision` sia uguale al numero di secondi da mezzanotte ora locale, diviso 2.  
  
 Esempi di stringhe di versione valida:  
  
 1  
  
 1.1  
  
 1.1.*  
  
 1.1.1  
  
 1.1.1.*  
  
 1.1.1.1  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyVersionAttribute.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di versione dell'assembly con attributi.</summary>
        <value>Stringa che contiene il numero di versione dell'assembly.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>