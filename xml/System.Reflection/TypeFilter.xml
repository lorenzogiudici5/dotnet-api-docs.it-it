<Type Name="TypeFilter" FullName="System.Reflection.TypeFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="246df59303ccaf6d3c08703643d80d1c8492c496" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39800624" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate bool TypeFilter(Type m, object filterCriteria);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed TypeFilter extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.TypeFilter" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function TypeFilter(m As Type, filterCriteria As Object) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public delegate bool TypeFilter(Type ^ m, System::Object ^ filterCriteria);" />
  <TypeSignature Language="F#" Value="type TypeFilter = delegate of Type * obj -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="m" Type="System.Type" />
    <Parameter Name="filterCriteria" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="m">
      <span data-ttu-id="2a783-101">Oggetto <see langword="Type" /> a cui viene applicato il filtro.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a783-101">The <see langword="Type" /> object to which the filter is applied.</span>
      </span>
    </param>
    <param name="filterCriteria">
      <span data-ttu-id="2a783-102">Oggetto arbitrario usato per filtrare l'elenco.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a783-102">An arbitrary object used to filter the list.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="2a783-103">Filtra le classi rappresentate in una matrice di oggetti <see cref="T:System.Type" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a783-103">Filters the classes represented in an array of <see cref="T:System.Type" /> objects.</span>
      </span>
    </summary>
    <returns>
      <span data-ttu-id="2a783-104">
        <see langword="true" /> per includere <see cref="T:System.Type" /> nell'elenco filtrato; in caso contrario, <see langword="false" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a783-104">
          <see langword="true" /> to include the <see cref="T:System.Type" /> in the filtered list; otherwise <see langword="false" />.</span>
      </span>
    </returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a783-105">Il `TypeFilter` delegato viene usato per filtrare un elenco di classi.</span><span class="sxs-lookup"><span data-stu-id="2a783-105">The `TypeFilter` delegate is used to filter a list of classes.</span></span> <span data-ttu-id="2a783-106">In particolare, Ã¨ utilizzato per filtrare le classi rappresentate in una matrice di <xref:System.Type> oggetti.</span><span class="sxs-lookup"><span data-stu-id="2a783-106">Specifically, you use it to filter the classes represented in an array of <xref:System.Type> objects.</span></span> <span data-ttu-id="2a783-107">Il <xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType> metodo Usa il delegato per filtrare l'elenco di interfacce che restituisce.</span><span class="sxs-lookup"><span data-stu-id="2a783-107">The <xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType> method uses this delegate to filter the list of interfaces that it returns.</span></span> <span data-ttu-id="2a783-108">Ogni classe derivata di <xref:System.Delegate> e <xref:System.MulticastDelegate> ha un costruttore e un `DynamicInvoke` (metodo).</span><span class="sxs-lookup"><span data-stu-id="2a783-108">Every derived class of <xref:System.Delegate> and <xref:System.MulticastDelegate> has a constructor and a `DynamicInvoke` method.</span></span> <span data-ttu-id="2a783-109">Vedere l'esempio di codice Visual C++ nella descrizione per `Delegate`.</span><span class="sxs-lookup"><span data-stu-id="2a783-109">See the Visual C++ code example given in the description for `Delegate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a783-110">In questo esempio viene illustrato come definire un metodo corrispondente il <xref:System.Reflection.TypeFilter> prototipo del delegato che consente di usare la reflection per filtrare o restituire un subset di voci corrispondenti.</span><span class="sxs-lookup"><span data-stu-id="2a783-110">This example shows how to define a method matching the <xref:System.Reflection.TypeFilter> delegate prototype allowing you to use reflection to filter or return a subset of matching entries.</span></span>  
  
 [!code-vb[Typefilter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeFilter/VB/Typefilter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" />
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.Delegate" />
    <altmember cref="T:System.MulticastDelegate" />
  </Docs>
</Type>