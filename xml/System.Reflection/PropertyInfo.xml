<Type Name="PropertyInfo" FullName="System.Reflection.PropertyInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0b7f2f801b86045c3aedf4b5b2c5a29780b02853" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39726395" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PropertyInfo : System.Reflection.MemberInfo, System.Runtime.InteropServices._PropertyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit PropertyInfo extends System.Reflection.MemberInfo implements class System.Runtime.InteropServices._PropertyInfo" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.PropertyInfo" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyInfo&#xA;Inherits MemberInfo&#xA;Implements _PropertyInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyInfo abstract : System::Reflection::MemberInfo, System::Runtime::InteropServices::_PropertyInfo" />
  <TypeSignature Language="F#" Value="type PropertyInfo = class&#xA;    inherit MemberInfo&#xA;    interface _PropertyInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.MemberInfo</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._PropertyInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._PropertyInfo))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2ef80-101">Individua gli attributi di una proprietà e consente di accedere ai relativi metadati.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ef80-101">Discovers the attributes of a property and provides access to property metadata.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-102">Proprietà corrispondono in modo logico come campi.</span><span class="sxs-lookup"><span data-stu-id="2ef80-102">Properties are logically the same as fields.</span></span> <span data-ttu-id="2ef80-103">Una proprietà è un aspetto dello stato di un oggetto il cui valore è in genere accessibili tramite named `get` e `set` funzioni di accesso.</span><span class="sxs-lookup"><span data-stu-id="2ef80-103">A property is a named aspect of an object's state whose value is typically accessible through `get` and `set` accessors.</span></span> <span data-ttu-id="2ef80-104">Proprietà possono essere di sola lettura, nel qual caso non è supportata una set di routine.</span><span class="sxs-lookup"><span data-stu-id="2ef80-104">Properties may be read-only, in which case a set routine is not supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef80-105">Per determinare se una proprietà è `static`, è necessario ottenere il <xref:System.Reflection.MethodInfo> per il `get` o `set` della funzione di accesso, chiamando il <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> o il <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> metodo ed esaminare relativo <xref:System.Reflection.MethodBase.IsStatic%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-105">To determine whether a property is `static`, you must obtain the <xref:System.Reflection.MethodInfo> for the `get` or `set` accessor, by calling the <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> or the <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method, and examine its <xref:System.Reflection.MethodBase.IsStatic%2A> property.</span></span>  
  
 <span data-ttu-id="2ef80-106">Diversi metodi in questa classe si supponga che il `get` funzione di accesso e `set` i metodi della funzione di accesso di una proprietà presentano alcuni formati.</span><span class="sxs-lookup"><span data-stu-id="2ef80-106">Several methods in this class assume that the `get` accessor and `set` accessor methods of a property have certain formats.</span></span> <span data-ttu-id="2ef80-107">Le firme dei `get` e `set` metodi devono corrispondere alla convenzione seguente:</span><span class="sxs-lookup"><span data-stu-id="2ef80-107">The signatures of the `get` and `set` methods must match the following convention:</span></span>  
  
-   <span data-ttu-id="2ef80-108">Il tipo restituito del `get` metodo e l'ultimo argomento del `set` metodo deve essere identico.</span><span class="sxs-lookup"><span data-stu-id="2ef80-108">The return type of the `get` method and the last argument of the `set` method must be identical.</span></span> <span data-ttu-id="2ef80-109">Questo è il tipo della proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-109">This is the type of the property.</span></span>  
  
-   <span data-ttu-id="2ef80-110">Il `get` e `set` metodi devono avere lo stesso numero, tipo e ordine di indici.</span><span class="sxs-lookup"><span data-stu-id="2ef80-110">The `get` and `set` methods must have the same number, type, and order of indices.</span></span>  
  
 <span data-ttu-id="2ef80-111">Se questo formato non viene seguito, il comportamento dei `GetValue` e `SetValue` metodi è definito.</span><span class="sxs-lookup"><span data-stu-id="2ef80-111">If this format is not followed, the behavior of the `GetValue` and `SetValue` methods is undefined.</span></span>  
  
 <span data-ttu-id="2ef80-112">La chiamata <xref:System.Reflection.ICustomAttributeProvider.GetCustomAttributes%2A?displayProperty=nameWithType> sul `PropertyInfo` quando il `inherit` parametro del `GetCustomAttributes` è `true` non esamina in modo la gerarchia dei tipi.</span><span class="sxs-lookup"><span data-stu-id="2ef80-112">Calling <xref:System.Reflection.ICustomAttributeProvider.GetCustomAttributes%2A?displayProperty=nameWithType> on `PropertyInfo` when the `inherit` parameter of `GetCustomAttributes` is `true` does not walk the type hierarchy.</span></span> <span data-ttu-id="2ef80-113">Usare <xref:System.Attribute?displayProperty=nameWithType> in modo che erediti gli attributi personalizzati.</span><span class="sxs-lookup"><span data-stu-id="2ef80-113">Use <xref:System.Attribute?displayProperty=nameWithType> to inherit custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef80-114">In questo esempio viene illustrato come utilizzare diverse classi di reflection per analizzare i metadati contenuti in un assembly.</span><span class="sxs-lookup"><span data-stu-id="2ef80-114">This example shows how to use various reflection classes to analyze the metadata contained in an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef80-115">Questo esempio genera circa 55.000 righe di dati, che è possibile reindirizzare a un file di testo al prompt dei comandi, come indicato di seguito: **example.exe > PropertyInfo. txt**</span><span class="sxs-lookup"><span data-stu-id="2ef80-115">This example generates about 55,000 lines of data, which you can redirect to a text file at the command prompt, as follows: **example.exe > propertyinfo.txt**</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="2ef80-116">per un'attendibilità totale per gli eredi.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ef80-116">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="2ef80-117">Questa classe non può essere ereditata da codice parzialmente attendibile.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ef80-117">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <threadsafe>
      <span data-ttu-id="2ef80-118">Questo tipo è thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ef80-118">This type is thread safe.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <span data-ttu-id="2ef80-119">
        <para>Quando si eredita da <see cref="T:System.Reflection.PropertyInfo" />, è necessario eseguire l'override dei membri seguenti: <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" />, <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" />, <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" />, <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" />, e <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" />.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="2ef80-119">
          <para>When you inherit from <see cref="T:System.Reflection.PropertyInfo" />, you must override the following members: <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" />, <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" />, <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" />, <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" />, and <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" />.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-120">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.PropertyInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-120">Initializes a new instance of the <see cref="T:System.Reflection.PropertyInfo" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2ef80-121">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-121">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="2ef80-122">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-122">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.PropertyAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.PropertyAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Attributes As PropertyAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::PropertyAttributes Attributes { System::Reflection::PropertyAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.PropertyAttributes" Usage="System.Reflection.PropertyInfo.Attributes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-123">Ottiene gli attributi per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-123">Gets the attributes for this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ef80-124">Attributi di questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-124">The attributes of this property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-125">Il <xref:System.Reflection.PropertyInfo.Attributes%2A> proprietà restituisce gli attributi associati alla proprietà rappresentata da questo <xref:System.Reflection.PropertyInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="2ef80-125">The <xref:System.Reflection.PropertyInfo.Attributes%2A> property returns the attributes associated with the property represented by this <xref:System.Reflection.PropertyInfo> object.</span></span>  <span data-ttu-id="2ef80-126">Gli attributi sono principalmente i modificatori applicati da un compilatore durante la creazione di una proprietà. indicano se una proprietà è la proprietà predefinita, un `SpecialName` proprietà e così via.</span><span class="sxs-lookup"><span data-stu-id="2ef80-126">The attributes are primarily modifiers applied by a compiler when creating a property; they indicate whether a property is the default property, a `SpecialName` property, and so on.</span></span> <span data-ttu-id="2ef80-127">Si noti che, per quasi tutte le proprietà presenti nei tipi nella libreria di classi .NET Framework, il valore della <xref:System.Reflection.PropertyInfo.Attributes%2A> è di proprietà <xref:System.Reflection.PropertyAttributes.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2ef80-127">Note that, for almost all properties found in types in the .NET Framework class library, the value of the <xref:System.Reflection.PropertyInfo.Attributes%2A> property is <xref:System.Reflection.PropertyAttributes.None?displayProperty=nameWithType>.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="2ef80-128">Nella maggior parte dei casi, probabile che desidera recuperare gli attributi personalizzati associati a una proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-128">In most cases, you probably want to retrieve the custom attributes associated with a property.</span></span> <span data-ttu-id="2ef80-129">A tale scopo, recuperare il valore della <xref:System.Reflection.MemberInfo.CustomAttributes%2A> proprietà o chiamare uno degli overload del <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-129">To do this, retrieve the value of the <xref:System.Reflection.MemberInfo.CustomAttributes%2A> property, or call one of the overloads of the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method.</span></span>  
  
 <span data-ttu-id="2ef80-130">Per ottenere il <xref:System.Reflection.PropertyInfo.Attributes%2A> proprietà:</span><span class="sxs-lookup"><span data-stu-id="2ef80-130">To get the <xref:System.Reflection.PropertyInfo.Attributes%2A> property:</span></span>  
  
1.  <span data-ttu-id="2ef80-131">Ottenere un <xref:System.Type> oggetto che rappresenta il tipo a cui appartiene la proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-131">Get a <xref:System.Type> object that represents the type to which the property belongs.</span></span>  
  
2.  <span data-ttu-id="2ef80-132">Ottenere il <xref:System.Reflection.PropertyInfo> chiamando un overload del <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-132">Get the <xref:System.Reflection.PropertyInfo> object by calling an overload of the <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method.</span></span>  
  
3.  <span data-ttu-id="2ef80-133">Recuperare gli attributi della proprietà dal <xref:System.Reflection.PropertyInfo.Attributes%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-133">Retrieve the property's attributes from the <xref:System.Reflection.PropertyInfo.Attributes%2A> property.</span></span>  
  
 <span data-ttu-id="2ef80-134">È possibile definire gli attributi di una proprietà per un tipo creato in modo dinamico tramite reflection emit chiamando un overload del <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A> (metodo) e fornendo un valore per il `attributes` argomento.</span><span class="sxs-lookup"><span data-stu-id="2ef80-134">You can define the attributes of a property for a type created dynamically using reflection emit by calling an overload of the <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A> method and supplying a value for the `attributes` argument.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.MemberInfo.CustomAttributes" />
        <altmember cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public abstract bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Reflection.PropertyInfo.CanRead" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.CanRead</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-135">Ottiene un valore che indica se è possibile leggere la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-135">Gets a value indicating whether the property can be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ef80-136">
            <see langword="true" /> se è possibile leggere la proprietà; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-136">
              <see langword="true" /> if this property can be read; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-137">Se la proprietà non ha un `get` della funzione di accesso, non può essere letto.</span><span class="sxs-lookup"><span data-stu-id="2ef80-137">If the property does not have a `get` accessor, it cannot be read.</span></span>  
  
 <span data-ttu-id="2ef80-138">Per ottenere il `CanRead` proprietà, ottenere prima la classe `Type`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-138">To get the `CanRead` property, first get the class `Type`.</span></span> <span data-ttu-id="2ef80-139">Dal `Type`, ottenere il `PropertyInfo`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-139">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="2ef80-140">Dal `PropertyInfo`, ottenere il `CanRead` valore.</span><span class="sxs-lookup"><span data-stu-id="2ef80-140">From the `PropertyInfo`, get the `CanRead` value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef80-141">L'esempio seguente definisce due proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-141">The following example defines two properties.</span></span> <span data-ttu-id="2ef80-142">La prima proprietà è leggibile e la `CanRead` è di proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-142">The first property is readable and the `CanRead` property is `true`.</span></span> <span data-ttu-id="2ef80-143">La seconda proprietà non è leggibile (non vi è alcuna funzione di accesso get) e il `CanRead` è di proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-143">The second property is not readable (there is no get accessor), and the `CanRead` property is `false`.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.CanRead Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.CanRead Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.CanRead Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.CanRead Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.CanRead Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.CanRead Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public abstract bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Reflection.PropertyInfo.CanWrite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.CanWrite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-144">Ottiene un valore che indica se è possibile scrivere nella proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-144">Gets a value indicating whether the property can be written to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ef80-145">
            <see langword="true" /> se è possibile scrivere nella proprietà; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-145">
              <see langword="true" /> if this property can be written to; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-146"><xref:System.Reflection.PropertyInfo.CanWrite%2A> Restituisce `true` se la proprietà ha un `set` funzione di accesso, anche se la funzione di accesso `private`, `internal` (o `Friend` in Visual Basic), o `protected`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-146"><xref:System.Reflection.PropertyInfo.CanWrite%2A> returns `true` if the property has a `set` accessor, even if the accessor is `private`, `internal` (or `Friend` in Visual Basic), or `protected`.</span></span>   <span data-ttu-id="2ef80-147">Se la proprietà non ha un `set` funzione di accesso, il metodo restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-147">If the property does not have a `set` accessor, the method returns `false`.</span></span>  
  
 <span data-ttu-id="2ef80-148">Per ottenere il valore della <xref:System.Reflection.PropertyInfo.CanWrite%2A> proprietà:</span><span class="sxs-lookup"><span data-stu-id="2ef80-148">To get the value of the <xref:System.Reflection.PropertyInfo.CanWrite%2A> property:</span></span>  
  
1.  <span data-ttu-id="2ef80-149">Ottenere il <xref:System.Type> oggetto del tipo che include la proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-149">Get the <xref:System.Type> object of the type that includes the property.</span></span>  
  
2.  <span data-ttu-id="2ef80-150">Chiamare il <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> per ottenere il <xref:System.Reflection.PropertyInfo> oggetto che rappresenta la proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-150">Call the <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> to get the <xref:System.Reflection.PropertyInfo> object that represents the property.</span></span>  
  
3.  <span data-ttu-id="2ef80-151">Recuperare il valore della <xref:System.Reflection.PropertyInfo.CanWrite%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-151">Retrieve the value of the <xref:System.Reflection.PropertyInfo.CanWrite%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef80-152">L'esempio seguente definisce due proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-152">The following example defines two properties.</span></span> <span data-ttu-id="2ef80-153">La prima proprietà è accessibile in scrittura e il `CanWrite` è di proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-153">The first property is writable and the `CanWrite` property is `true`.</span></span> <span data-ttu-id="2ef80-154">La seconda proprietà non è accessibile in scrittura (è presente alcun `set` della funzione di accesso) e il `CanWrite` è di proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-154">The second property is not writable (there is no `set` accessor), and the `CanWrite` property is `false`.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.CanWrite Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.CanWrite Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.CanWrite Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.CanWrite Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.CanWrite Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.CanWrite Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="propertyInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="2ef80-155">Oggetto da confrontare con questa istanza o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-155">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ef80-156">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-156">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-157">
            <see langword="true" /> se <paramref name="obj" /> è uguale al tipo e al valore di questa istanza; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-157">
              <see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessors">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-158">Restituisce una matrice delle funzioni di accesso <see langword="get" /> e <see langword="set" /> per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-158">Returns an array of the <see langword="get" /> and <see langword="set" /> accessors on this property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetAccessors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetAccessors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessors () As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors();" />
      <MemberSignature Language="F#" Value="abstract member GetAccessors : unit -&gt; System.Reflection.MethodInfo[]&#xA;override this.GetAccessors : unit -&gt; System.Reflection.MethodInfo[]" Usage="propertyInfo.GetAccessors " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetAccessors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-159">Restituisce una matrice i cui elementi riflettono le funzioni di accesso <see langword="get" /> e <see langword="set" /> pubbliche della proprietà riflesse dall'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-159">Returns an array whose elements reflect the public <see langword="get" /> and <see langword="set" /> accessors of the property reflected by the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-160">Matrice di oggetti <see cref="T:System.Reflection.MethodInfo" /> che riflette le funzioni di accesso <see langword="get" /> e <see langword="set" /> pubbliche della proprietà riflesse dall'istanza corrente, se rilevate; in caso contrario, il metodo restituisce una matrice con zero (0) elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-160">An array of <see cref="T:System.Reflection.MethodInfo" /> objects that reflect the public <see langword="get" /> and <see langword="set" /> accessors of the property reflected by the current instance, if found; otherwise, this method returns an array with zero (0) elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-161">Per chiamare il <xref:System.Reflection.PropertyInfo.GetAccessors%2A> metodo:</span><span class="sxs-lookup"><span data-stu-id="2ef80-161">To call the <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method:</span></span>  
  
1.  <span data-ttu-id="2ef80-162">Ottenere un <xref:System.Type> oggetto che rappresenta la classe.</span><span class="sxs-lookup"><span data-stu-id="2ef80-162">Get a <xref:System.Type> object that represents the class.</span></span>  
  
2.  <span data-ttu-id="2ef80-163">Dal <xref:System.Type> dell'oggetto, ottenere il <xref:System.Reflection.PropertyInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="2ef80-163">From the <xref:System.Type> object, get the <xref:System.Reflection.PropertyInfo> object.</span></span>  
  
3.  <span data-ttu-id="2ef80-164">Dal <xref:System.Reflection.PropertyInfo> dell'oggetto, chiamare il <xref:System.Reflection.PropertyInfo.GetAccessors%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-164">From the <xref:System.Reflection.PropertyInfo> object, call the <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef80-165">Nell'esempio seguente recupera le funzioni di accesso pubblici di `ClassWithProperty.Caption` proprietà e consente di visualizzare le relative informazioni.</span><span class="sxs-lookup"><span data-stu-id="2ef80-165">The following example retrieves the public accessors of the `ClassWithProperty.Caption` property and displays information about them.</span></span> <span data-ttu-id="2ef80-166">Chiama anche il <xref:System.Reflection.MethodBase.Invoke%2A> metodo del setter per impostare il valore della proprietà e del metodo Get per recuperare il valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-166">It also calls the <xref:System.Reflection.MethodBase.Invoke%2A> method of the setter to set the property value and of the getter to retrieve the property value.</span></span>  
  
 [!code-csharp[System.Reflection.PropertyInfo.GetAccessors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.propertyinfo.getaccessors/cs/source.cs#1)]
 [!code-vb[System.Reflection.PropertyInfo.GetAccessors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.propertyinfo.getaccessors/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2ef80-167">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-167">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="2ef80-168">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-168">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAccessors (nonPublic As Boolean) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetAccessors : bool -&gt; System.Reflection.MethodInfo[]" Usage="propertyInfo.GetAccessors nonPublic" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="2ef80-169">Indica se nella matrice devono essere restituiti metodi non pubblici.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-169">Indicates whether non-public methods should be returned in the returned array.</span>
          </span>
          <span data-ttu-id="2ef80-170">
            <see langword="true" /> se devono essere inclusi i metodi non pubblici; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-170">
              <see langword="true" /> if non-public methods are to be included; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ef80-171">Restituisce una matrice i cui elementi riflettono le funzioni di accesso <see langword="get" />e <see langword="set" /> pubbliche e, se specificato, non pubbliche della proprietà riflesse dall'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-171">Returns an array whose elements reflect the public and, if specified, non-public <see langword="get" /> and <see langword="set" /> accessors of the property reflected by the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-172">Matrice i cui elementi riflettono le funzioni di accesso <see langword="get" /> e <see langword="set" /> della proprietà riflesse dall'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-172">An array whose elements reflect the <see langword="get" /> and <see langword="set" /> accessors of the property reflected by the current instance.</span>
          </span>
          <span data-ttu-id="2ef80-173">Se <paramref name="nonPublic" /> è <see langword="true" />, la matrice contiene le funzioni di accesso <see langword="get" /> e <see langword="set" /> pubbliche e non pubbliche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-173">If <paramref name="nonPublic" /> is <see langword="true" />, this array contains public and non-public <see langword="get" /> and <see langword="set" /> accessors.</span>
          </span>
          <span data-ttu-id="2ef80-174">Se <paramref name="nonPublic" /> è <see langword="false" />, la matrice contiene solo le funzioni di accesso <see langword="get" /> e <see langword="set" /> pubbliche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-174">If <paramref name="nonPublic" /> is <see langword="false" />, this array contains only public <see langword="get" /> and <see langword="set" /> accessors.</span>
          </span>
          <span data-ttu-id="2ef80-175">Se non vengono rilevate funzioni di accesso con la visibilità specificata, il metodo restituisce una matrice con zero (0) elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-175">If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-176">Per chiamare il <xref:System.Reflection.PropertyInfo.GetAccessors%2A> metodo:</span><span class="sxs-lookup"><span data-stu-id="2ef80-176">To call the <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method:</span></span>  
  
1.  <span data-ttu-id="2ef80-177">Ottenere un <xref:System.Type> oggetto che rappresenta la classe.</span><span class="sxs-lookup"><span data-stu-id="2ef80-177">Get a <xref:System.Type> object that represents the class.</span></span>  
  
2.  <span data-ttu-id="2ef80-178">Dal <xref:System.Type> dell'oggetto, ottenere il <xref:System.Reflection.PropertyInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="2ef80-178">From the <xref:System.Type> object, get the <xref:System.Reflection.PropertyInfo> object.</span></span>  
  
3.  <span data-ttu-id="2ef80-179">Dal <xref:System.Reflection.PropertyInfo> dell'oggetto, chiamare il <xref:System.Reflection.PropertyInfo.GetAccessors%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-179">From the <xref:System.Reflection.PropertyInfo> object, call the <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef80-180">Nell'esempio seguente recupera le funzioni di accesso di `ClassWithProperty.Caption` proprietà e consente di visualizzare le relative informazioni.</span><span class="sxs-lookup"><span data-stu-id="2ef80-180">The following example retrieves the accessors of the `ClassWithProperty.Caption` property and displays information about them.</span></span> <span data-ttu-id="2ef80-181">Chiama anche il <xref:System.Reflection.MethodBase.Invoke%2A> metodo del setter per impostare il valore della proprietà e del metodo Get per recuperare il valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-181">It also calls the <xref:System.Reflection.MethodBase.Invoke%2A> method of the setter to set the property value and of the getter to retrieve the property value.</span></span>  
  
 [!code-csharp[Classic PropertyInfo.GetAccessors1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetAccessors1 Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.GetAccessors1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.GetAccessors1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2ef80-182">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-182">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="2ef80-183">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-183">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetConstantValue">
      <MemberSignature Language="C#" Value="public virtual object GetConstantValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetConstantValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetConstantValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConstantValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetConstantValue();" />
      <MemberSignature Language="F#" Value="abstract member GetConstantValue : unit -&gt; obj&#xA;override this.GetConstantValue : unit -&gt; obj" Usage="propertyInfo.GetConstantValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-184">Restituisce un valore letterale associato alla proprietà da un compilatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-184">Returns a literal value associated with the property by a compiler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-185">Oggetto <see cref="T:System.Object" /> contenente il valore letterale associato alla proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-185">An <see cref="T:System.Object" /> that contains the literal value associated with the property.</span>
          </span>
          <span data-ttu-id="2ef80-186">Se il valore letterale è un tipo di classe con un valore dell'elemento uguale a zero, il valore restituito è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-186">If the literal value is a class type with an element value of zero, the return value is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-187">Questo metodo è fornito per i progettisti di compilatori gestiti e gli analizzatori di codice.</span><span class="sxs-lookup"><span data-stu-id="2ef80-187">This method is provided for designers of managed compilers and code analyzers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef80-188">Non utilizzare questo metodo nel contesto reflection-only, poiché potrebbe causare l'esecuzione di codice.</span><span class="sxs-lookup"><span data-stu-id="2ef80-188">Do not use this method in the reflection-only context, because it might cause code to execute.</span></span> <span data-ttu-id="2ef80-189">Al suo posto usa il metodo <xref:System.Reflection.PropertyInfo.GetRawConstantValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="2ef80-189">Use the <xref:System.Reflection.PropertyInfo.GetRawConstantValue%2A> method instead.</span></span>  
  
 <span data-ttu-id="2ef80-190">Nei metadati non gestiti, la tabella costante viene utilizzata per archiviare valori costanti per i campi, parametri e proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-190">In unmanaged metadata, the Constant table is used to store constant values for fields, parameters, and properties.</span></span> <span data-ttu-id="2ef80-191">Le informazioni sulle costanti non influiscono direttamente sul comportamento di runtime.</span><span class="sxs-lookup"><span data-stu-id="2ef80-191">Constant information does not directly influence runtime behavior.</span></span> <span data-ttu-id="2ef80-192">I compilatori analizzano questa informazioni, in fase di compilazione durante l'importazione dei metadati.</span><span class="sxs-lookup"><span data-stu-id="2ef80-192">Compilers inspect this information, at compile time, when importing metadata.</span></span> <span data-ttu-id="2ef80-193">Se usato, il valore di una costante è incorporato nel flusso Microsoft intermediate language (MSIL) il compilatore genera.</span><span class="sxs-lookup"><span data-stu-id="2ef80-193">If used, the value of a constant is embedded in the Microsoft intermediate language (MSIL) stream the compiler emits.</span></span> <span data-ttu-id="2ef80-194">Non sono disponibili istruzioni MSIL che possono essere utilizzate per accedere alla tabella delle costanti in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="2ef80-194">There are no MSIL instructions that can be used to access the Constant table at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef80-195">Per altre informazioni sui valori di costanti e la tabella Constant, vedere la documentazione di specifiche ECMA Partition II.</span><span class="sxs-lookup"><span data-stu-id="2ef80-195">For more information on constant values and the Constant table, see the ECMA Partition II documentation.</span></span> <span data-ttu-id="2ef80-196">La documentazione è disponibile online; vedere [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (ECMA C# e standard di Common Language Infrastructure) in MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web internazionale Ecma.</span><span class="sxs-lookup"><span data-stu-id="2ef80-196">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ef80-197">La tabella Constant nei metadati non gestiti non contiene un valore costante per la proprietà corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-197">The Constant table in unmanaged metadata does not contain a constant value for the current property.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ef80-198">Il tipo di valore non è uno dei tipi consentiti dalle specifiche CLS (Common Language Specification).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-198">The type of the value is not one of the types permitted by the Common Language Specification (CLS).</span>
          </span>
          <span data-ttu-id="2ef80-199">Vedere le specifiche ECMA Partition II, Metadata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-199">See the ECMA Partition II specification, Metadata.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGetMethod">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-200">Restituisce un oggetto <see langword="MethodInfo" /> che rappresenta la funzione di accesso <see langword="get" /> per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-200">Returns a <see langword="MethodInfo" /> representing the <see langword="get" /> accessor for this property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetGetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetGetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetGetMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetGetMethod : unit -&gt; System.Reflection.MethodInfo&#xA;override this.GetGetMethod : unit -&gt; System.Reflection.MethodInfo" Usage="propertyInfo.GetGetMethod " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-201">Restituisce la funzione di accesso <see langword="get" /> pubblica per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-201">Returns the public <see langword="get" /> accessor for this property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-202">Oggetto <see langword="MethodInfo" /> che rappresenta la funzione di accesso <see langword="get" /> pubblica per questa proprietà o <see langword="null" /> se la funzione di accesso <see langword="get" /> non è pubblica o non esiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-202">A <see langword="MethodInfo" /> object representing the public <see langword="get" /> accessor for this property, or <see langword="null" /> if the <see langword="get" /> accessor is non-public or does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-203">Si tratta di un metodo pratico che fornisce un'implementazione per la classe astratta `GetGetMethod` metodo con il `nonPublic` parametro impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-203">This is a convenience method that provides an implementation for the abstract `GetGetMethod` method with the `nonPublic` parameter set to `false`.</span></span>  
  
 <span data-ttu-id="2ef80-204">Usare la `GetGetMethod` metodo, ottenere prima la classe `Type`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-204">To use the `GetGetMethod` method, first get the class `Type`.</span></span> <span data-ttu-id="2ef80-205">Dal `Type`, ottenere il <xref:System.Reflection.PropertyInfo>.</span><span class="sxs-lookup"><span data-stu-id="2ef80-205">From the `Type`, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="2ef80-206">Dal <xref:System.Reflection.PropertyInfo>, usare il `GetGetMethod` (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-206">From the <xref:System.Reflection.PropertyInfo>, use the `GetGetMethod` method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2ef80-207">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-207">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="2ef80-208">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-208">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo GetGetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetGetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodInfo ^ GetGetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetGetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="propertyInfo.GetGetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="2ef80-209">Indica se deve essere restituita una funzione di accesso <see langword="get" /> non pubblica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-209">Indicates whether a non-public <see langword="get" /> accessor should be returned.</span>
          </span>
          <span data-ttu-id="2ef80-210">
            <see langword="true" /> se una funzione di accesso non pubblica deve essere restituita; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-210">
              <see langword="true" /> if a non-public accessor is to be returned; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ef80-211">Quando ne viene eseguito l'override in una classe derivata, restituisce la funzione di accesso <see langword="get" /> pubblica o non pubblica per la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-211">When overridden in a derived class, returns the public or non-public <see langword="get" /> accessor for this property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-212">Oggetto <see langword="MethodInfo" /> che rappresenta la funzione di accesso <see langword="get" /> per questa proprietà, se <paramref name="nonPublic" /> è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-212">A <see langword="MethodInfo" /> object representing the <see langword="get" /> accessor for this property, if <paramref name="nonPublic" /> is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="2ef80-213">Restituisce <see langword="null" /> se <paramref name="nonPublic" /> è <see langword="false" /> e la funzione di accesso <see langword="get" /> non è pubblica o se <paramref name="nonPublic" /> è <see langword="true" />, ma non esiste alcuna funzione di accesso <see langword="get" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-213">Returns <see langword="null" /> if <paramref name="nonPublic" /> is <see langword="false" /> and the <see langword="get" /> accessor is non-public, or if <paramref name="nonPublic" /> is <see langword="true" /> but no <see langword="get" /> accessors exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-214">Questa proprietà è il <xref:System.Reflection.MethodInfo> che rappresenta la funzione di accesso get.</span><span class="sxs-lookup"><span data-stu-id="2ef80-214">This property is the <xref:System.Reflection.MethodInfo> representing the get accessor.</span></span>  
  
 <span data-ttu-id="2ef80-215">Usare la `GetGetMethod` metodo, ottenere prima la classe `Type`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-215">To use the `GetGetMethod` method, first get the class `Type`.</span></span> <span data-ttu-id="2ef80-216">Dal `Type`, ottenere il <xref:System.Reflection.PropertyInfo>.</span><span class="sxs-lookup"><span data-stu-id="2ef80-216">From the `Type`, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="2ef80-217">Dal <xref:System.Reflection.PropertyInfo>, usare il `GetGetMethod` (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-217">From the <xref:System.Reflection.PropertyInfo>, use the `GetGetMethod` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef80-218">L'esempio seguente mostra il pubblico o non pubblico `get` della funzione di accesso per la proprietà specificata.</span><span class="sxs-lookup"><span data-stu-id="2ef80-218">The following example displays the public or non-public `get` accessor for the specified property.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.GetGetMethod1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetGetMethod1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.GetGetMethod1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetGetMethod1 Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.GetGetMethod1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.GetGetMethod1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2ef80-219">Il metodo richiesto non è pubblico e il chiamante non contiene oggetti <see cref="T:System.Security.Permissions.ReflectionPermission" /> di cui eseguire la reflection in questo metodo non pubblico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-219">The requested method is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect on this non-public method.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2ef80-220">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-220">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="2ef80-221">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-221">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="propertyInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-222">Restituisce il codice hash per l'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-222">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-223">Codice hash di un intero con segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-223">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndexParameters">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.ParameterInfo[] GetIndexParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ParameterInfo[] GetIndexParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetIndexParameters" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIndexParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetIndexParameters();" />
      <MemberSignature Language="F#" Value="abstract member GetIndexParameters : unit -&gt; System.Reflection.ParameterInfo[]" Usage="propertyInfo.GetIndexParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetIndexParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-224">Quando ne viene eseguito l'override in una classe derivata, restituisce una matrice di tutti i parametri di indice per la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-224">When overridden in a derived class, returns an array of all the index parameters for the property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-225">Matrice di tipo <see langword="ParameterInfo" /> contenente i parametri per gli indici.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-225">An array of type <see langword="ParameterInfo" /> containing the parameters for the indexes.</span>
          </span>
          <span data-ttu-id="2ef80-226">Se la proprietà non è stata indicizzata, la matrice conterrà 0 (zero) elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-226">If the property is not indexed, the array has 0 (zero) elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-227">Estrarre le informazioni sui parametri necessari dalla matrice restituita.</span><span class="sxs-lookup"><span data-stu-id="2ef80-227">Extract any required parameter information from the returned array.</span></span>  
  
 <span data-ttu-id="2ef80-228">Usare la `GetIndexParameters` metodo, ottenere prima la classe `Type`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-228">To use the `GetIndexParameters` method, first get the class `Type`.</span></span> <span data-ttu-id="2ef80-229">Dal `Type`, ottenere il `PropertyInfo`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-229">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="2ef80-230">Dal `PropertyInfo`, usare il `GetIndexParameters` (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-230">From the `PropertyInfo`, use the `GetIndexParameters` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef80-231">L'esempio seguente mostra i parametri di indice della proprietà specificata.</span><span class="sxs-lookup"><span data-stu-id="2ef80-231">The following example displays the index parameters of the specified property.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.GetIndexParameters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetIndexParameters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.GetIndexParameters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetIndexParameters Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.GetIndexParameters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.GetIndexParameters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2ef80-232">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-232">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="2ef80-233">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-233">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo GetMethod" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.GetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GetMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ GetMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GetMethod : System.Reflection.MethodInfo" Usage="System.Reflection.PropertyInfo.GetMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-234">Ottiene la funzione di accesso <see langword="get" /> per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-234">Gets the <see langword="get" /> accessor for this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ef80-235">Funzione di accesso <see langword="get" /> per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-235">The <see langword="get" /> accessor for this property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOptionalCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetOptionalCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetOptionalCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetOptionalCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOptionalCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetOptionalCustomModifiers();" />
      <MemberSignature Language="F#" Value="abstract member GetOptionalCustomModifiers : unit -&gt; Type[]&#xA;override this.GetOptionalCustomModifiers : unit -&gt; Type[]" Usage="propertyInfo.GetOptionalCustomModifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-236">Restituisce una matrice di tipi che rappresentano i modificatori personalizzati facoltativi della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-236">Returns an array of types representing the optional custom modifiers of the property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-237">Matrice di oggetti <see cref="T:System.Type" /> che identificano i modificatori personalizzati facoltativi della proprietà corrente, ad esempio <see cref="T:System.Runtime.CompilerServices.IsConst" /> o <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-237">An array of <see cref="T:System.Type" /> objects that identify the optional custom modifiers of the current property, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-238">Il <xref:System.Reflection.PropertyInfo.GetOptionalCustomModifiers%2A> e <xref:System.Reflection.PropertyInfo.GetRequiredCustomModifiers%2A> vengono forniti metodi per i progettisti di compilatori gestiti.</span><span class="sxs-lookup"><span data-stu-id="2ef80-238">The <xref:System.Reflection.PropertyInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.PropertyInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="2ef80-239">Per altre informazioni sui modificatori personalizzati, vedere <xref:System.Runtime.CompilerServices.IsBoxed> e le classi correlate nel <xref:System.Runtime.CompilerServices> dello spazio dei nomi e la specifica dei metadati nella documentazione relativa a specifiche ECMA Partition II.</span><span class="sxs-lookup"><span data-stu-id="2ef80-239">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="2ef80-240">La documentazione è disponibile online; vedere [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (ECMA C# e standard di Common Language Infrastructure) in MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web internazionale Ecma.</span><span class="sxs-lookup"><span data-stu-id="2ef80-240">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawConstantValue">
      <MemberSignature Language="C#" Value="public virtual object GetRawConstantValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetRawConstantValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetRawConstantValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRawConstantValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetRawConstantValue();" />
      <MemberSignature Language="F#" Value="abstract member GetRawConstantValue : unit -&gt; obj&#xA;override this.GetRawConstantValue : unit -&gt; obj" Usage="propertyInfo.GetRawConstantValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-241">Restituisce un valore letterale associato alla proprietà da un compilatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-241">Returns a literal value associated with the property by a compiler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-242">Oggetto <see cref="T:System.Object" /> contenente il valore letterale associato alla proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-242">An <see cref="T:System.Object" /> that contains the literal value associated with the property.</span>
          </span>
          <span data-ttu-id="2ef80-243">Se il valore letterale è un tipo di classe con un valore dell'elemento uguale a zero, il valore restituito è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-243">If the literal value is a class type with an element value of zero, the return value is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-244">Questo metodo è fornito per i progettisti di compilatori gestiti e gli analizzatori di codice.</span><span class="sxs-lookup"><span data-stu-id="2ef80-244">This method is provided for designers of managed compilers and code analyzers.</span></span>  
  
 <span data-ttu-id="2ef80-245">Questo metodo può essere utilizzato il contesto di esecuzione sia il contesto reflection-only.</span><span class="sxs-lookup"><span data-stu-id="2ef80-245">This method can be used in both the execution context and the reflection-only context.</span></span>  
  
 <span data-ttu-id="2ef80-246">Nei metadati non gestiti, la tabella costante viene utilizzata per archiviare valori costanti per i campi, parametri e proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-246">In unmanaged metadata, the Constant table is used to store constant values for fields, parameters, and properties.</span></span> <span data-ttu-id="2ef80-247">Le informazioni sulle costanti non influiscono direttamente sul comportamento di runtime.</span><span class="sxs-lookup"><span data-stu-id="2ef80-247">Constant information does not directly influence runtime behavior.</span></span> <span data-ttu-id="2ef80-248">I compilatori analizzano questa informazioni, in fase di compilazione durante l'importazione dei metadati.</span><span class="sxs-lookup"><span data-stu-id="2ef80-248">Compilers inspect this information, at compile time, when importing metadata.</span></span> <span data-ttu-id="2ef80-249">Se usato, il valore di una costante è incorporato nel flusso Microsoft intermediate language (MSIL) il compilatore genera.</span><span class="sxs-lookup"><span data-stu-id="2ef80-249">If used, the value of a constant is embedded in the Microsoft intermediate language (MSIL) stream the compiler emits.</span></span> <span data-ttu-id="2ef80-250">Non sono disponibili istruzioni MSIL che possono essere utilizzate per accedere alla tabella delle costanti in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="2ef80-250">There are no MSIL instructions that can be used to access the Constant table at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef80-251">Per altre informazioni sui valori di costanti e la tabella Constant, vedere la documentazione di specifiche ECMA Partition II.</span><span class="sxs-lookup"><span data-stu-id="2ef80-251">For more information on constant values and the Constant table, see the ECMA Partition II documentation.</span></span> <span data-ttu-id="2ef80-252">La documentazione è disponibile online; vedere [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (ECMA C# e standard di Common Language Infrastructure) in MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web internazionale Ecma.</span><span class="sxs-lookup"><span data-stu-id="2ef80-252">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ef80-253">La tabella Constant nei metadati non gestiti non contiene un valore costante per la proprietà corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-253">The Constant table in unmanaged metadata does not contain a constant value for the current property.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ef80-254">Il tipo di valore non è uno dei tipi consentiti dalle specifiche CLS (Common Language Specification).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-254">The type of the value is not one of the types permitted by the Common Language Specification (CLS).</span>
          </span>
          <span data-ttu-id="2ef80-255">Vedere le specifiche ECMA Partition II, formato logico dei metadati: altre strutture, tipi di elementi usanti nelle firme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-255">See the ECMA Partition II specification, Metadata Logical Format: Other Structures, Element Types used in Signatures.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetRequiredCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetRequiredCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetRequiredCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequiredCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetRequiredCustomModifiers();" />
      <MemberSignature Language="F#" Value="abstract member GetRequiredCustomModifiers : unit -&gt; Type[]&#xA;override this.GetRequiredCustomModifiers : unit -&gt; Type[]" Usage="propertyInfo.GetRequiredCustomModifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-256">Restituisce una matrice di tipi che rappresentano i modificatori personalizzati obbligatori della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-256">Returns an array of types representing the required custom modifiers of the property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-257">Matrice di oggetti <see cref="T:System.Type" /> che identificano i modificatori personalizzati obbligatori della proprietà corrente, ad esempio <see cref="T:System.Runtime.CompilerServices.IsConst" /> o <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-257">An array of <see cref="T:System.Type" /> objects that identify the required custom modifiers of the current property, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-258">Il <xref:System.Reflection.PropertyInfo.GetOptionalCustomModifiers%2A> e <xref:System.Reflection.PropertyInfo.GetRequiredCustomModifiers%2A> vengono forniti metodi per i progettisti di compilatori gestiti.</span><span class="sxs-lookup"><span data-stu-id="2ef80-258">The <xref:System.Reflection.PropertyInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.PropertyInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="2ef80-259">Per altre informazioni sui modificatori personalizzati, vedere <xref:System.Runtime.CompilerServices.IsBoxed> e le classi correlate nel <xref:System.Runtime.CompilerServices> dello spazio dei nomi e la specifica dei metadati nella documentazione relativa a specifiche ECMA Partition II.</span><span class="sxs-lookup"><span data-stu-id="2ef80-259">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="2ef80-260">La documentazione è disponibile online; vedere [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (ECMA C# e standard di Common Language Infrastructure) in MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web internazionale Ecma.</span><span class="sxs-lookup"><span data-stu-id="2ef80-260">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSetMethod">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-261">Restituisce un oggetto <see cref="T:System.Reflection.MethodInfo" /> che rappresenta la funzione di accesso <see langword="set" /> per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-261">Returns a <see cref="T:System.Reflection.MethodInfo" /> representing the <see langword="set" /> accessor for this property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetSetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetSetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetSetMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetSetMethod : unit -&gt; System.Reflection.MethodInfo&#xA;override this.GetSetMethod : unit -&gt; System.Reflection.MethodInfo" Usage="propertyInfo.GetSetMethod " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-262">Restituisce la funzione di accesso <see langword="set" /> pubblica per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-262">Returns the public <see langword="set" /> accessor for this property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-263">Oggetto <see langword="MethodInfo" /> che rappresenta il metodo <see langword="Set" /> per questa proprietà se la funzione di accesso <see langword="set" /> è pubblica o <see langword="null" /> se la funzione di accesso <see langword="set" /> non è pubblica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-263">The <see langword="MethodInfo" /> object representing the <see langword="Set" /> method for this property if the <see langword="set" /> accessor is public, or <see langword="null" /> if the <see langword="set" /> accessor is not public.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-264">Si tratta di un metodo pratico che fornisce un'implementazione per la classe astratta `GetSetMethod` metodo con il `nonPublic` parametro impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-264">This is a convenience method that provides an implementation for the abstract `GetSetMethod` method with the `nonPublic` parameter set to `false`.</span></span>  
  
 <span data-ttu-id="2ef80-265">Usare la `GetSetMethod` metodo, ottenere prima la classe `Type`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-265">To use the `GetSetMethod` method, first get the class `Type`.</span></span> <span data-ttu-id="2ef80-266">Dal `Type`, ottenere il <xref:System.Reflection.PropertyInfo>.</span><span class="sxs-lookup"><span data-stu-id="2ef80-266">From the `Type`, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="2ef80-267">Dal `PropertyInfo`, usare il `GetSetMethod` (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-267">From the `PropertyInfo`, use the `GetSetMethod` method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2ef80-268">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-268">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="2ef80-269">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-269">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo GetSetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodInfo ^ GetSetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetSetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="propertyInfo.GetSetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="2ef80-270">Indica se la funzione di accesso deve essere restituita se non è pubblica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-270">Indicates whether the accessor should be returned if it is non-public.</span>
          </span>
          <span data-ttu-id="2ef80-271">
            <see langword="true" /> se una funzione di accesso non pubblica deve essere restituita; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-271">
              <see langword="true" /> if a non-public accessor is to be returned; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ef80-272">Quando ne viene eseguito l'override in una classe derivata, restituisce la funzione di accesso <see langword="set" /> per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-272">When overridden in a derived class, returns the <see langword="set" /> accessor for this property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-273">Metodo <see langword="Set" /> della proprietà oppure <see langword="null" />, come illustrato nella tabella seguente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-273">This property's <see langword="Set" /> method, or <see langword="null" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="2ef80-274">
            <list type="table">
              <listheader>
                <term> Valore </term>
                <description> Condizione </description>
              </listheader>
              <item>
                <term> Metodo <see langword="Set" /> per questa proprietà.  </term>
                <description> La funzione di accesso <see langword="set" /> è pubblica. -oppure- <paramref name="nonPublic" /> è <see langword="true" /> e la funzione di accesso <see langword="set" /> non è pubblica. </description>
              </item>
              <item>
                <term>
                  <see langword="null" />
                </term>
                <description>
                  <paramref name="nonPublic" /> è <see langword="true" />, ma la proprietà è di sola lettura. -oppure- <paramref name="nonPublic" /> è <see langword="false" /> e la funzione di accesso <see langword="set" /> non è pubblica. -oppure- Non è disponibile alcuna funzione di accesso <see langword="set" />. </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-274">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> The <see langword="Set" /> method for this property.  </term>
                  <description> The <see langword="set" /> accessor is public.  -or-  <paramref name="nonPublic" /> is <see langword="true" /> and the <see langword="set" /> accessor is non-public.  </description>
                </item>
                <item>
                  <term>
                    <see langword="null" />
                  </term>
                  <description>
                    <paramref name="nonPublic" /> is <see langword="true" />, but the property is read-only.  -or-  <paramref name="nonPublic" /> is <see langword="false" /> and the <see langword="set" /> accessor is non-public.  -or-  There is no <see langword="set" /> accessor.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-275">Usare la `GetSetMethod` metodo, ottenere prima la classe `Type`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-275">To use the `GetSetMethod` method, first get the class `Type`.</span></span> <span data-ttu-id="2ef80-276">Dal `Type`, ottenere il <xref:System.Reflection.PropertyInfo>.</span><span class="sxs-lookup"><span data-stu-id="2ef80-276">From the `Type`, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="2ef80-277">Dal `PropertyInfo`, usare il `GetSetMethod` (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-277">From the `PropertyInfo`, use the `GetSetMethod` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef80-278">L'esempio seguente mostra il `set` della funzione di accesso per la proprietà specificata.</span><span class="sxs-lookup"><span data-stu-id="2ef80-278">The following example displays the `set` accessor for the specified property.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.GetSetMethod1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetSetMethod1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.GetSetMethod1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetSetMethod1 Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.GetSetMethod1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.GetSetMethod1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2ef80-279">Il metodo richiesto non è pubblico e il chiamante non contiene oggetti <see cref="T:System.Security.Permissions.ReflectionPermission" /> di cui eseguire la reflection in questo metodo non pubblico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-279">The requested method is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect on this non-public method.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2ef80-280">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-280">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="2ef80-281">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-281">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="propertyInfo.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-282">Restituisce il valore della proprietà di un oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-282">Returns the property value of a specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.GetValue : obj -&gt; obj" Usage="propertyInfo.GetValue obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="2ef80-283">Oggetto di cui verrà restituito il valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-283">The object whose property value will be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ef80-284">Restituisce il valore della proprietà di un oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-284">Returns the property value of a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-285">Valore della proprietà dell'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-285">The property value of the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-286">Si chiama il <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%29> rapporto di overload per recuperare il valore di una proprietà non indicizzata, se si prova a recuperare il valore di una proprietà indicizzata, il metodo genera un <xref:System.Reflection.TargetParameterCountException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="2ef80-286">You call the <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%29> overload to retrieve the value of a non-indexed property; if you try to retrieve the value of an indexed property, the method throws a <xref:System.Reflection.TargetParameterCountException> exception.</span></span> <span data-ttu-id="2ef80-287">È possibile determinare se una proprietà indicizzata o non chiamando il <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-287">You can determine whether a property is indexed or not by calling the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="2ef80-288">Se la lunghezza del valore restituito <xref:System.Reflection.ParameterInfo> matrice è zero, la proprietà non indicizzata.</span><span class="sxs-lookup"><span data-stu-id="2ef80-288">If the length of the returned <xref:System.Reflection.ParameterInfo> array is zero, the property is not indexed.</span></span>  
  
 <span data-ttu-id="2ef80-289">Si tratta di un metodo pratico che fornisce un'implementazione per la classe astratta <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> metodo con il <xref:System.Reflection.BindingFlags> parametro impostato su <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType>, il <xref:System.Reflection.Binder> impostata su `null`, la matrice di oggetti dei valori di indice impostato su `null`, e il <xref:System.Globalization.CultureInfo> impostato su `null`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-289">This is a convenience method that provides an implementation for the abstract <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> method with the <xref:System.Reflection.BindingFlags> parameter set to <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType>, the <xref:System.Reflection.Binder> set to `null`, the object array of index values set to `null`, and the <xref:System.Globalization.CultureInfo> set to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef80-290">L'esempio seguente definisce una `Planet` classe che ha due proprietà: `Name`, il nome del pianeta; e `Distance`, distanza del pianeta Terra.</span><span class="sxs-lookup"><span data-stu-id="2ef80-290">The following example defines a `Planet` class that has two properties: `Name`, the name of the planet; and `Distance`, the planet's distance from Earth.</span></span> <span data-ttu-id="2ef80-291">L'esempio crea un'istanza una `Planet` oggetto che rappresenta il pianeta Jupiter e lo passa a un `GetPropertyValues` metodo che visualizza informazioni sulle proprietà e viene utilizzato il <xref:System.Reflection.PropertyInfo.GetValue%2A> metodo per ottenere il valore di ogni `Planet` proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-291">The example instantiates a `Planet` object that represents the planet Jupiter and passes it to a `GetPropertyValues` method that displays information about the properties and uses the <xref:System.Reflection.PropertyInfo.GetValue%2A> method to get the value of each `Planet` property.</span></span>  
  
 [!code-csharp[System.Reflection.PropertyInfo.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.propertyinfo.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Reflection.PropertyInfo.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.propertyinfo.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object obj, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (obj As Object, index As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj * obj[] -&gt; obj&#xA;override this.GetValue : obj * obj[] -&gt; obj" Usage="propertyInfo.GetValue (obj, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="2ef80-292">Oggetto di cui verrà restituito il valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-292">The object whose property value will be returned.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2ef80-293">Valori di indice facoltativi per le proprietà indicizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-293">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="2ef80-294">Gli indici delle proprietà indicizzate sono in base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-294">The indexes of indexed properties are zero-based.</span>
          </span>
          <span data-ttu-id="2ef80-295">Il valore deve essere <see langword="null" /> per le proprietà non indicizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-295">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ef80-296">Restituisce il valore della proprietà di un oggetto specificato, con valori di indice facoltativi per le proprietà indicizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-296">Returns the property value of a specified object with optional index values for indexed properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-297">Valore della proprietà dell'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-297">The property value of the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-298">Per determinare se una proprietà è indicizzata, usare il <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-298">To determine whether a property is indexed, use the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="2ef80-299">Se la matrice risultante è 0 (zero) elementi, la proprietà non indicizzata.</span><span class="sxs-lookup"><span data-stu-id="2ef80-299">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span>  
  
 <span data-ttu-id="2ef80-300">Si tratta di un metodo pratico che fornisce un'implementazione per la classe astratta `GetValue` metodo con un `BindingFlags` parametro di `Default`, il `Binder` impostata su `null`e la `CultureInfo` impostato su `null`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-300">This is a convenience method that provides an implementation for the abstract `GetValue` method with a `BindingFlags` parameter of `Default`, the `Binder` set to `null`, and the `CultureInfo` set to `null`.</span></span>  
  
 <span data-ttu-id="2ef80-301">Poiché le proprietà statiche appartengono al tipo, non i singoli oggetti, ottenere le proprietà statiche passando `null` come argomento dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="2ef80-301">Because static properties belong to the type, not individual objects, get static properties by passing `null` as the object argument.</span></span> <span data-ttu-id="2ef80-302">Ad esempio, usare il codice seguente per ottenere il metodo statico `CurrentCulture` proprietà di `CultureInfo` :</span><span class="sxs-lookup"><span data-stu-id="2ef80-302">For example, use the following code to get the static `CurrentCulture` property of `CultureInfo` :</span></span>  
  
```csharp  
PropertyInfo CurCultProp =   
    (typeof(CultureInfo)).GetProperty("CurrentCulture");   
Console.WriteLine("CurrCult: " +  
    CurCultProp.GetValue(null,null));  
```  
  
 <span data-ttu-id="2ef80-303">Usare la `GetValue` metodo, ottenere prima la classe `Type`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-303">To use the `GetValue` method, first get the class `Type`.</span></span> <span data-ttu-id="2ef80-304">Dal `Type`, ottenere il `PropertyInfo`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-304">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="2ef80-305">Dal `PropertyInfo`, usare il `GetValue` (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-305">From the `PropertyInfo`, use the `GetValue` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef80-306">Inizia con la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo metodo può essere utilizzato per accedere a membri pubblici se il chiamante è stato concesso <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag, se il set di autorizzazioni dei membri non pubblici è limitato al chiamante concedere set, oppure un subset della stessa.</span><span class="sxs-lookup"><span data-stu-id="2ef80-306">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="2ef80-307">(Vedere [considerazioni sulla sicurezza per Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="2ef80-307">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="2ef80-308">Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="2ef80-308">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef80-309">Nell'esempio seguente viene illustrato come ottenere il valore di una proprietà indicizzata.</span><span class="sxs-lookup"><span data-stu-id="2ef80-309">The following example shows how to get the value of an indexed property.</span></span> <span data-ttu-id="2ef80-310">Il <xref:System.String.Chars%2A?displayProperty=nameWithType> proprietà è la proprietà predefinita (l'indicizzatore in c#) del <xref:System.String> classe.</span><span class="sxs-lookup"><span data-stu-id="2ef80-310">The <xref:System.String.Chars%2A?displayProperty=nameWithType> property is the default property (the indexer in C#) of the <xref:System.String> class.</span></span>  
  
 [!code-csharp[System.Reflection.PropertyInfo.GetValue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.PropertyInfo.GetValue Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.PropertyInfo.GetValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.PropertyInfo.GetValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ef80-311">La matrice <paramref name="index" /> non contiene il tipo di argomenti necessari.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-311">The <paramref name="index" /> array does not contain the type of arguments needed.</span>
          </span>
          <span data-ttu-id="2ef80-312">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-312">-or-</span>
          </span>
          <span data-ttu-id="2ef80-313">La funzione di accesso <see langword="get" /> della proprietà non è stata trovata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-313">The property's <see langword="get" /> accessor is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetException">
          <span data-ttu-id="2ef80-314">
            <block subset="none" type="note">
              <para> Nelle <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">app .NET per Windows Store</see> o nella <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">libreria di classi portabile</see> intercettare in alternativa l'eccezione <see cref="T:System.Exception" />. </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-314">
              <block subset="none" type="note">
                <para> In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="2ef80-315">L'oggetto non corrisponde al tipo di destinazione oppure una proprietà è una proprietà dell'istanza, ma <paramref name="obj" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-315">The object does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetParameterCountException">
          <span data-ttu-id="2ef80-316">Il numero di parametri in <paramref name="index" /> non corrisponde al numero di parametri accettati dalla proprietà indicizzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-316">The number of parameters in <paramref name="index" /> does not match the number of parameters the indexed property takes.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2ef80-317">
            <block subset="none" type="note">
              <para> Nelle <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">app .NET per Windows Store</see> o nella <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">libreria di classi portabile</see> intercettare in alternativa l'eccezione della classe di base <see cref="T:System.MemberAccessException" />. </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-317">
              <block subset="none" type="note">
                <para> In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="2ef80-318">È stato effettuato un tentativo non valido di accedere a un metodo privato o protetto all'interno di una classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-318">There was an illegal attempt to access a private or protected method inside a class.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2ef80-319">Si è verificato un errore durante il recupero del valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-319">An error occurred while retrieving the property value.</span>
          </span>
          <span data-ttu-id="2ef80-320">Ad esempio, un valore di indice specificato per una proprietà indicizzata non è compreso nell'intervallo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-320">For example, an index value specified for an indexed property is out of range.</span>
          </span>
          <span data-ttu-id="2ef80-321">La causa di questo errore è indicata dalla proprietà <see cref="P:System.Exception.InnerException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-321">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2ef80-322">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-322">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="2ef80-323">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-323">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetValue(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="propertyInfo.GetValue (obj, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="2ef80-324">Oggetto di cui verrà restituito il valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-324">The object whose property value will be returned.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="2ef80-325">Una combinazione bit per bit dei seguenti membri di enumerazione che specificano l'attributo di chiamata: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" /> e <see langword="SetProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-325">A bitwise combination of the following enumeration members that specify the invocation attribute: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, and <see langword="SetProperty" />.</span>
          </span>
          <span data-ttu-id="2ef80-326">È necessario specificare un attributo di chiamata appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-326">You must specify a suitable invocation attribute.</span>
          </span>
          <span data-ttu-id="2ef80-327">Ad esempio, per richiamare un membro statico, impostare il flag <see langword="Static" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-327">For example, to invoke a static member, set the <see langword="Static" /> flag.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="2ef80-328">Oggetto che consente l'associazione, la coercizione di tipi di argomento, la chiamata di membri e il recupero di oggetti <see cref="T:System.Reflection.MemberInfo" /> tramite la reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-328">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span>
          </span>
          <span data-ttu-id="2ef80-329">Se <c>binder</c> è <see langword="null" />, verrà usato il binder predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-329">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2ef80-330">Valori di indice facoltativi per le proprietà indicizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-330">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="2ef80-331">Il valore deve essere <see langword="null" /> per le proprietà non indicizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-331">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="2ef80-332">Impostazioni cultura in base alle quali deve essere localizzata la risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-332">The culture for which the resource is to be localized.</span>
          </span>
          <span data-ttu-id="2ef80-333">Se la risorsa non viene localizzata con queste impostazioni cultura, la proprietà <see cref="P:System.Globalization.CultureInfo.Parent" /> verrà successivamente chiamata in cerca di una corrispondenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-333">If the resource is not localized for this culture, the <see cref="P:System.Globalization.CultureInfo.Parent" /> property will be called successively in search of a match.</span>
          </span>
          <span data-ttu-id="2ef80-334">Se questo valore è <see langword="null" />, le informazioni specifiche delle impostazioni cultura vengono ottenute dalla proprietà <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-334">If this value is <see langword="null" />, the culture-specific information is obtained from the <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ef80-335">Quando ne viene eseguito l'override in una classe derivata, restituisce il valore della proprietà di un oggetto specificato con l'associazione, l'indice e le informazioni specifiche delle impostazioni cultura indicati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-335">When overridden in a derived class, returns the property value of a specified object that has the specified binding, index, and culture-specific information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-336">Valore della proprietà dell'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-336">The property value of the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-337">Per determinare se una proprietà è indicizzata, usare il <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-337">To determine whether a property is indexed, use the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="2ef80-338">Se la matrice risultante è 0 (zero) elementi, la proprietà non indicizzata.</span><span class="sxs-lookup"><span data-stu-id="2ef80-338">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span>  
  
 <span data-ttu-id="2ef80-339">Poiché le proprietà statiche appartengono al tipo, non i singoli oggetti, ottenere le proprietà statiche passando `null` come argomento dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="2ef80-339">Because static properties belong to the type, not individual objects, get static properties by passing `null` as the object argument.</span></span> <span data-ttu-id="2ef80-340">Ad esempio, usare il codice seguente per ottenere il metodo statico `CurrentCulture` proprietà di `CultureInfo` :</span><span class="sxs-lookup"><span data-stu-id="2ef80-340">For example, use the following code to get the static `CurrentCulture` property of `CultureInfo` :</span></span>  
  
```csharp  
PropertyInfo CurCultProp =   
       (typeof(CultureInfo)).GetProperty("CurrentCulture");   
Console.WriteLine("CurrCult: " +  
       CurCultProp.GetValue(null,null));  
```  
  
 <span data-ttu-id="2ef80-341">Usare la `GetValue` metodo, ottenere prima la classe `Type`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-341">To use the `GetValue` method, first get the class `Type`.</span></span> <span data-ttu-id="2ef80-342">Dal `Type`, ottenere il `PropertyInfo`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-342">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="2ef80-343">Dal `PropertyInfo`, usare il `GetValue` (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-343">From the `PropertyInfo`, use the `GetValue` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef80-344">Inizia con la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo metodo può essere utilizzato per accedere a membri pubblici se il chiamante è stato concesso <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag, se il set di autorizzazioni dei membri non pubblici è limitato al chiamante concedere set, oppure un subset della stessa.</span><span class="sxs-lookup"><span data-stu-id="2ef80-344">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="2ef80-345">(Vedere [considerazioni sulla sicurezza per Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="2ef80-345">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="2ef80-346">Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="2ef80-346">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ef80-347">La matrice <paramref name="index" /> non contiene il tipo di argomenti necessari.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-347">The <paramref name="index" /> array does not contain the type of arguments needed.</span>
          </span>
          <span data-ttu-id="2ef80-348">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-348">-or-</span>
          </span>
          <span data-ttu-id="2ef80-349">La funzione di accesso <see langword="get" /> della proprietà non è stata trovata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-349">The property's <see langword="get" /> accessor is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetException">
          <span data-ttu-id="2ef80-350">L'oggetto non corrisponde al tipo di destinazione oppure una proprietà è una proprietà dell'istanza, ma <paramref name="obj" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-350">The object does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetParameterCountException">
          <span data-ttu-id="2ef80-351">Il numero di parametri in <paramref name="index" /> non corrisponde al numero di parametri accettati dalla proprietà indicizzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-351">The number of parameters in <paramref name="index" /> does not match the number of parameters the indexed property takes.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2ef80-352">È stato effettuato un tentativo non valido di accedere a un metodo privato o protetto all'interno di una classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-352">There was an illegal attempt to access a private or protected method inside a class.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2ef80-353">Si è verificato un errore durante il recupero del valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-353">An error occurred while retrieving the property value.</span>
          </span>
          <span data-ttu-id="2ef80-354">Ad esempio, un valore di indice specificato per una proprietà indicizzata non è compreso nell'intervallo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-354">For example, an index value specified for an indexed property is out of range.</span>
          </span>
          <span data-ttu-id="2ef80-355">La causa di questo errore è indicata dalla proprietà <see cref="P:System.Exception.InnerException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-355">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2ef80-356">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-356">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="2ef80-357">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-357">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpecialName : bool" Usage="System.Reflection.PropertyInfo.IsSpecialName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.IsSpecialName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-358">Ottiene un valore che indica se la proprietà è il nome speciale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-358">Gets a value indicating whether the property is the special name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ef80-359">
            <see langword="true" /> se questa proprietà è il nome speciale; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-359">
              <see langword="true" /> if this property is the special name; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-360">Il `SpecialName` bit è impostato per contrassegnare i membri che sono gestiti in modo speciale da alcuni compilatori (ad esempio funzioni di accesso a proprietà e metodi di overload degli operatori).</span><span class="sxs-lookup"><span data-stu-id="2ef80-360">The `SpecialName` bit is set to flag members that are treated in a special way by some compilers (such as property accessors and operator overloading methods).</span></span>  
  
 <span data-ttu-id="2ef80-361">Per ottenere il `IsSpecialName` proprietà, ottenere prima la classe `Type`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-361">To get the `IsSpecialName` property, first get the class `Type`.</span></span> <span data-ttu-id="2ef80-362">Dal `Type`, ottenere il `PropertyInfo`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-362">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="2ef80-363">Dal `PropertyInfo`, ottenere il `IsSpecialName` valore.</span><span class="sxs-lookup"><span data-stu-id="2ef80-363">From the `PropertyInfo`, get the `IsSpecialName` value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Reflection.MemberTypes" Usage="System.Reflection.PropertyInfo.MemberType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.MemberType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-364">Ottiene un valore <see cref="T:System.Reflection.MemberTypes" /> che indica che questo membro è una proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-364">Gets a <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ef80-365">Valore <see cref="T:System.Reflection.MemberTypes" /> che indica che questo membro è una proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-365">A <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-366">Esegue l'override di questa proprietà <xref:System.Reflection.MemberInfo.MemberType%2A>.</span><span class="sxs-lookup"><span data-stu-id="2ef80-366">This property overrides <xref:System.Reflection.MemberInfo.MemberType%2A>.</span></span> <span data-ttu-id="2ef80-367">Pertanto, quando si esamina un set di <xref:System.Reflection.MemberInfo> oggetti, ad esempio, la matrice restituita dal <xref:System.Type.GetMembers%2A> , ovvero il <xref:System.Reflection.MemberInfo.MemberType%2A> restituisce proprietà <xref:System.Reflection.MemberTypes.Property> solo quando un membro specificato è una proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-367">Therefore, when you examine a set of <xref:System.Reflection.MemberInfo> objects — for example, the array returned by <xref:System.Type.GetMembers%2A> — the <xref:System.Reflection.MemberInfo.MemberType%2A> property returns <xref:System.Reflection.MemberTypes.Property> only when a given member is a property.</span></span>  
  
 <span data-ttu-id="2ef80-368">`MemberType` è una classe derivata di `MemberInfo` e specifica il tipo di membro rappresentato.</span><span class="sxs-lookup"><span data-stu-id="2ef80-368">`MemberType` is a derived class of `MemberInfo` and specifies the type of member this is.</span></span> <span data-ttu-id="2ef80-369">Tipi di membro sono costruttori, proprietà, campi e metodi.</span><span class="sxs-lookup"><span data-stu-id="2ef80-369">Member types are constructors, properties, fields, and methods.</span></span> <span data-ttu-id="2ef80-370">Poiché si tratta di un `PropertyInfo` proprietà, il tipo restituito è una proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-370">Since this is a `PropertyInfo` property, the returned type is a property.</span></span>  
  
 <span data-ttu-id="2ef80-371">Per ottenere il `MemberType` proprietà, ottenere prima la classe `Type`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-371">To get the `MemberType` property, first get the class `Type`.</span></span> <span data-ttu-id="2ef80-372">Dal `Type`, ottenere il `PropertyInfo`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-372">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="2ef80-373">Dal `PropertyInfo`, ottenere il `MemberType` valore.</span><span class="sxs-lookup"><span data-stu-id="2ef80-373">From the `PropertyInfo`, get the `MemberType` value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef80-374">Nell'esempio seguente visualizza il tipo del membro specificato.</span><span class="sxs-lookup"><span data-stu-id="2ef80-374">The following example displays the type of the specified member.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.MemberType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.MemberType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.MemberType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.MemberType Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.MemberType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.MemberType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.PropertyInfo left, System.Reflection.PropertyInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Reflection.PropertyInfo left, class System.Reflection.PropertyInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.op_Equality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As PropertyInfo, right As PropertyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::PropertyInfo ^ left, System::Reflection::PropertyInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.PropertyInfo * System.Reflection.PropertyInfo -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="right" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="2ef80-375">Primo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-375">The first object to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="2ef80-376">Secondo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-376">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ef80-377">Indica se due oggetti <see cref="T:System.Reflection.PropertyInfo" /> sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-377">Indicates whether two <see cref="T:System.Reflection.PropertyInfo" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-378">
            <see langword="true" /> se <paramref name="left" /> è uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-378">
              <see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.PropertyInfo left, System.Reflection.PropertyInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Reflection.PropertyInfo left, class System.Reflection.PropertyInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.op_Inequality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As PropertyInfo, right As PropertyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::PropertyInfo ^ left, System::Reflection::PropertyInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.PropertyInfo * System.Reflection.PropertyInfo -&gt; bool" Usage="System.Reflection.PropertyInfo.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="right" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="2ef80-379">Primo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-379">The first object to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="2ef80-380">Secondo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-380">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ef80-381">Indica se due oggetti <see cref="T:System.Reflection.PropertyInfo" /> non sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-381">Indicates whether two <see cref="T:System.Reflection.PropertyInfo" /> objects are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-382">
            <see langword="true" /> se <paramref name="left" /> non è uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-382">
              <see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public abstract Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.Reflection.PropertyInfo.PropertyType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.PropertyType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-383">Ottiene il tipo della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-383">Gets the type of this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ef80-384">Tipo della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-384">The type of this property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-385">Per determinare il tipo di una determinata proprietà, eseguire le operazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="2ef80-385">To determine the type of a particular property, do the following:</span></span>  
  
1.  <span data-ttu-id="2ef80-386">Ottenere un <xref:System.Type> oggetto che rappresenta il tipo (la classe o struttura) che contiene la proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-386">Get a <xref:System.Type> object that represents the type (the class or structure) that contains the property.</span></span> <span data-ttu-id="2ef80-387">Se si lavora con un oggetto (un'istanza di un tipo), è possibile chiamare relativo <xref:System.Object.GetType%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-387">If you are working with an object (an instance of a type), you can call its <xref:System.Object.GetType%2A> method.</span></span> <span data-ttu-id="2ef80-388">In caso contrario, è possibile usare l'operatore c# o l'operatore di Visual Basic, come illustra l'esempio.</span><span class="sxs-lookup"><span data-stu-id="2ef80-388">Otherwise, you can use the C#  operator or the Visual Basic  operator, as the example illustrates.</span></span>  
  
2.  <span data-ttu-id="2ef80-389">Ottenere un <xref:System.Reflection.PropertyInfo> oggetto che rappresenta la proprietà a cui è interessati.</span><span class="sxs-lookup"><span data-stu-id="2ef80-389">Get a <xref:System.Reflection.PropertyInfo> object that represents the property in which you're interested.</span></span> <span data-ttu-id="2ef80-390">È possibile farlo tramite il recupero di una matrice di tutte le proprietà dal <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> metodo e quindi si esegue l'iterazione di elementi nella matrice oppure è possibile recuperare il <xref:System.Reflection.PropertyInfo> oggetto che rappresenta la proprietà direttamente tramite la chiamata di <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> metodo e specificando il nome della proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-390">You can do this by getting an array of all properties from the <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method and then iterating the elements in the array, or you can retrieve the <xref:System.Reflection.PropertyInfo> object that represents the property directly by calling the <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method and specifying the property name.</span></span>  
  
3.  <span data-ttu-id="2ef80-391">Recuperare il valore della <xref:System.Reflection.PropertyInfo.PropertyType%2A> proprietà dal <xref:System.Reflection.PropertyInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="2ef80-391">Retrieve the value of the <xref:System.Reflection.PropertyInfo.PropertyType%2A> property from the <xref:System.Reflection.PropertyInfo> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef80-392">L'esempio seguente definisce un `Employee` classe che dispone di cinque proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-392">The following example defines an `Employee` class that has five properties.</span></span> <span data-ttu-id="2ef80-393">Viene quindi utilizzato recupera una matrice di <xref:System.Reflection.PropertyInfo> oggetti che rappresentano le proprietà e visualizza il nome e tipo della ognuno.</span><span class="sxs-lookup"><span data-stu-id="2ef80-393">It then uses retrieves an array of <xref:System.Reflection.PropertyInfo> objects that represent those properties and displays the name and type of each.</span></span>  
  
 [!code-csharp[System.Reflection.PropertyInfo.PropertyType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.propertyinfo.propertytype/cs/propertytype1.cs#1)]
 [!code-vb[System.Reflection.PropertyInfo.PropertyType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.propertyinfo.propertytype/vb/propertytype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo SetMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo SetMethod" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.SetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SetMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ SetMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SetMethod : System.Reflection.MethodInfo" Usage="System.Reflection.PropertyInfo.SetMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-394">Ottiene la funzione di accesso <see langword="set" /> per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-394">Gets the <see langword="set" /> accessor for this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ef80-395">Il <see langword="set" /> funzione di accesso per questa proprietà, o <see langword="null" /> se la proprietà è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-395">The <see langword="set" /> accessor for this property, or <see langword="null" /> if the property is read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-396">Il recupero del valore della <xref:System.Reflection.PropertyInfo.SetMethod%2A> proprietà è equivalente alla chiamata il <xref:System.Reflection.PropertyInfo.GetSetMethod%28System.Boolean%29> metodo con un valore di `true` per il `nonPublic` argomento.</span><span class="sxs-lookup"><span data-stu-id="2ef80-396">Retrieving the value of the <xref:System.Reflection.PropertyInfo.SetMethod%2A> property is equivalent to calling the <xref:System.Reflection.PropertyInfo.GetSetMethod%28System.Boolean%29> method with a value of `true` for the `nonPublic` argument.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.PropertyInfo.GetMethod" />
        <altmember cref="P:System.Reflection.PropertyInfo.CanWrite" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-397">Imposta il valore della proprietà per un oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-397">Sets the property value for a specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object obj, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (obj As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * obj -&gt; unit" Usage="propertyInfo.SetValue (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="2ef80-398">Oggetto di cui verrà impostato il valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-398">The object whose property value will be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2ef80-399">Nuovo valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-399">The new property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ef80-400">Imposta il valore della proprietà di un oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-400">Sets the property value of a specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-401">Il <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%29> overload imposta il valore di una proprietà non indicizzata.</span><span class="sxs-lookup"><span data-stu-id="2ef80-401">The <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%29> overload sets the value of a non-indexed property.</span></span> <span data-ttu-id="2ef80-402">Per determinare se una proprietà è indicizzata, chiamare il <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-402">To determine whether a property is indexed, call the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="2ef80-403">Se la matrice risultante è 0 (zero) elementi, la proprietà non indicizzata.</span><span class="sxs-lookup"><span data-stu-id="2ef80-403">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span> <span data-ttu-id="2ef80-404">Per impostare il valore di una proprietà indicizzata, chiamare il <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Object%5B%5D%29> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="2ef80-404">To set the value of an indexed property, call the <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Object%5B%5D%29> overload.</span></span>  
  
 <span data-ttu-id="2ef80-405">Se la proprietà tipo di questo <xref:System.Reflection.PropertyInfo> oggetto è un tipo di valore e `value` è `null`, la proprietà verrà impostata sul valore predefinito per quel tipo.</span><span class="sxs-lookup"><span data-stu-id="2ef80-405">If the property type of this <xref:System.Reflection.PropertyInfo> object is a value type and `value` is `null`, the property will be set to the default value for that type.</span></span>  
  
 <span data-ttu-id="2ef80-406">Si tratta di un metodo pratico che chiama l'implementazione di runtime della classe astratta <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> metodo, specificando <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType> per il `BindingFlags` parametro `null` per `Binder`, `null` per `Object[]`e `null` per `CultureInfo`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-406">This is a convenience method that calls the runtime implementation of the abstract <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> method, specifying <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType> for the `BindingFlags` parameter, `null` for `Binder`, `null` for `Object[]`, and `null` for `CultureInfo`.</span></span>  
  
 <span data-ttu-id="2ef80-407">Usare la <xref:System.Reflection.PropertyInfo.SetValue%2A> metodo, ottenere prima un <xref:System.Type> oggetto che rappresenta la classe.</span><span class="sxs-lookup"><span data-stu-id="2ef80-407">To use the <xref:System.Reflection.PropertyInfo.SetValue%2A> method, first get a <xref:System.Type> object that represents the class.</span></span> <span data-ttu-id="2ef80-408">Dal <xref:System.Type>, ottenere il <xref:System.Reflection.PropertyInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="2ef80-408">From the <xref:System.Type>, get the <xref:System.Reflection.PropertyInfo> object.</span></span> <span data-ttu-id="2ef80-409">Dal <xref:System.Reflection.PropertyInfo> dell'oggetto, chiamare il <xref:System.Reflection.PropertyInfo.SetValue%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-409">From the <xref:System.Reflection.PropertyInfo> object, call the <xref:System.Reflection.PropertyInfo.SetValue%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef80-410">Inizia con la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo metodo può essere utilizzato per accedere a membri pubblici se il chiamante è stato concesso <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag, se il set di autorizzazioni dei membri non pubblici è limitato al chiamante concedere set, oppure un subset della stessa.</span><span class="sxs-lookup"><span data-stu-id="2ef80-410">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="2ef80-411">(Vedere [considerazioni sulla sicurezza per Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="2ef80-411">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="2ef80-412">Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="2ef80-412">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef80-413">L'esempio seguente dichiara una classe denominata `Example` con uno `static` (`Shared` in Visual Basic) e la proprietà di un'istanza.</span><span class="sxs-lookup"><span data-stu-id="2ef80-413">The following example declares a class named `Example` with one `static` (`Shared` in Visual Basic) and one instance property.</span></span> <span data-ttu-id="2ef80-414">Nell'esempio viene usato il <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%29> metodo per modificare la proprietà originale e di visualizzare i valori originali e finali.</span><span class="sxs-lookup"><span data-stu-id="2ef80-414">The example uses the <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%29> method to change the original property values and displays the original and final values.</span></span>  
  
 [!code-cpp[PropertyInfo.SetValue#2](~/samples/snippets/cpp/VS_Snippets_CLR/PropertyInfo.SetValue/cpp/example2.cpp#2)]
 [!code-csharp[PropertyInfo.SetValue#2](~/samples/snippets/csharp/VS_Snippets_CLR/PropertyInfo.SetValue/cs/example2.cs#2)]
 [!code-vb[PropertyInfo.SetValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PropertyInfo.SetValue/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ef80-415">La funzione di accesso <see langword="set" /> della proprietà non è stata trovata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-415">The property's <see langword="set" /> accessor is not found.</span>
          </span>
          <span data-ttu-id="2ef80-416">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-416">-or-</span>
          </span>
          <span data-ttu-id="2ef80-417">Non è possibile convertire <paramref name="value" /> nel tipo di <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-417">
              <paramref name="value" /> cannot be converted to the type of <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetException">
          <span data-ttu-id="2ef80-418">
            <block subset="none" type="note">
              <para> Nelle <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">app .NET per Windows Store</see> o nella <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">libreria di classi portabile</see> intercettare in alternativa l'eccezione <see cref="T:System.Exception" />. </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-418">
              <block subset="none" type="note">
                <para> In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="2ef80-419">Il tipo di <paramref name="obj" /> non corrisponde al tipo di destinazione oppure una proprietà è una proprietà dell'istanza ma <paramref name="obj" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-419">The type of <paramref name="obj" /> does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2ef80-420">
            <block subset="none" type="note">
              <para> Nelle <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">app .NET per Windows Store</see> o nella <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">libreria di classi portabile</see> intercettare in alternativa l'eccezione della classe di base <see cref="T:System.MemberAccessException" />. </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-420">
              <block subset="none" type="note">
                <para> In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="2ef80-421">È stato effettuato un tentativo non valido di accedere a un metodo privato o protetto all'interno di una classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-421">There was an illegal attempt to access a private or protected method inside a class.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2ef80-422">Si è verificato un errore durante l'impostazione del valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-422">An error occurred while setting the property value.</span>
          </span>
          <span data-ttu-id="2ef80-423">La causa di questo errore è indicata dalla proprietà <see cref="P:System.Exception.InnerException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-423">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2ef80-424">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-424">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="2ef80-425">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-425">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object obj, object value, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (obj As Object, value As Object, index As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ obj, System::Object ^ value, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj * obj[] -&gt; unit&#xA;override this.SetValue : obj * obj * obj[] -&gt; unit" Usage="propertyInfo.SetValue (obj, value, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="2ef80-426">Oggetto di cui verrà impostato il valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-426">The object whose property value will be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2ef80-427">Nuovo valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-427">The new property value.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2ef80-428">Valori di indice facoltativi per le proprietà indicizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-428">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="2ef80-429">Il valore deve essere <see langword="null" /> per le proprietà non indicizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-429">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ef80-430">Imposta il valore della proprietà di un oggetto specificato con valori di indice facoltativi per le proprietà di indice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-430">Sets the property value of a specified object with optional index values for index properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-431">Se l'oggetto <xref:System.Reflection.PropertyInfo> oggetto è un tipo di valore e `value` è `null`, la proprietà verrà impostato sul valore predefinito per quel tipo.</span><span class="sxs-lookup"><span data-stu-id="2ef80-431">If this <xref:System.Reflection.PropertyInfo> object is a value type and `value` is `null`, then the property will be set to the default value for that type.</span></span>  
  
 <span data-ttu-id="2ef80-432">Per determinare se una proprietà è indicizzata, usare il <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-432">To determine whether a property is indexed, use the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="2ef80-433">Se la matrice risultante è 0 (zero) elementi, la proprietà non indicizzata.</span><span class="sxs-lookup"><span data-stu-id="2ef80-433">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span>  
  
 <span data-ttu-id="2ef80-434">Si tratta di un metodo pratico che chiama l'implementazione di runtime della classe astratta <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> metodo, specificando <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType> per il `BindingFlags` parametro `null` per `Binder`, e `null` per `CultureInfo`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-434">This is a convenience method that calls the runtime implementation of the abstract <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> method, specifying <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType> for the `BindingFlags` parameter, `null` for `Binder`, and `null` for `CultureInfo`.</span></span>  
  
 <span data-ttu-id="2ef80-435">Usare la <xref:System.Reflection.PropertyInfo.SetValue%2A> metodo, ottenere prima un <xref:System.Type> oggetto che rappresenta la classe.</span><span class="sxs-lookup"><span data-stu-id="2ef80-435">To use the <xref:System.Reflection.PropertyInfo.SetValue%2A> method, first get a <xref:System.Type> object that represents the class.</span></span> <span data-ttu-id="2ef80-436">Dal <xref:System.Type>, ottenere il <xref:System.Reflection.PropertyInfo>.</span><span class="sxs-lookup"><span data-stu-id="2ef80-436">From the <xref:System.Type>, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="2ef80-437">Dal <xref:System.Reflection.PropertyInfo>, usare il <xref:System.Reflection.PropertyInfo.SetValue%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-437">From the <xref:System.Reflection.PropertyInfo>, use the <xref:System.Reflection.PropertyInfo.SetValue%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef80-438">Inizia con la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo metodo può essere utilizzato per accedere a membri pubblici se il chiamante è stato concesso <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag, se il set di autorizzazioni dei membri non pubblici è limitato al chiamante concedere set, oppure un subset della stessa.</span><span class="sxs-lookup"><span data-stu-id="2ef80-438">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="2ef80-439">(Vedere [considerazioni sulla sicurezza per Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="2ef80-439">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="2ef80-440">Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="2ef80-440">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef80-441">L'esempio seguente definisce una classe denominata `TestClass` che include una proprietà di lettura / scrittura denominata `Caption`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-441">The following example defines a class named `TestClass` that has a read-write property named `Caption`.</span></span> <span data-ttu-id="2ef80-442">Visualizza il valore predefinito del `Caption` proprietà, viene chiamato il <xref:System.Reflection.PropertyInfo.SetValue%2A> metodo per modificare il valore della proprietà e viene visualizzato il risultato.</span><span class="sxs-lookup"><span data-stu-id="2ef80-442">It  displays the default value of the `Caption` property, calls the <xref:System.Reflection.PropertyInfo.SetValue%2A> method to change the property value, and displays the result.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.SetValue1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.SetValue1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.SetValue1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.SetValue1 Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.SetValue1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.SetValue1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2ef80-443">Si noti che, in quanto il `Caption` proprietà non è una matrice di parametri, il `index` l'argomento è `null`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-443">Note that, because the `Caption` property is not a parameter array, the `index` argument is `null`.</span></span>  
  
 <span data-ttu-id="2ef80-444">L'esempio seguente dichiara una classe denominata `Example` con tre proprietà: una `static` proprietà (`Shared` in Visual Basic), una proprietà dell'istanza e una proprietà dell'istanza indicizzate.</span><span class="sxs-lookup"><span data-stu-id="2ef80-444">The following example declares a class named `Example` with three properties: a `static` property (`Shared` in Visual Basic), an instance property, and an indexed instance property.</span></span> <span data-ttu-id="2ef80-445">Nell'esempio viene usato il <xref:System.Reflection.PropertyInfo.SetValue%2A> metodo per modificare i valori predefiniti delle proprietà e consente di visualizzare i valori originali e finali.</span><span class="sxs-lookup"><span data-stu-id="2ef80-445">The example uses the <xref:System.Reflection.PropertyInfo.SetValue%2A> method to change the default values of the properties and displays the original and final values.</span></span>  
  
 <span data-ttu-id="2ef80-446">Il nome che viene utilizzato per cercare una proprietà dell'istanza indicizzato con reflection è diverso a seconda del linguaggio e sugli attributi applicati alla proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-446">The name that is used to search for an indexed instance property with reflection is different depending on the language and on attributes applied to the property.</span></span>  
  
-   <span data-ttu-id="2ef80-447">In Visual Basic, il nome della proprietà viene sempre utilizzato per cercare la proprietà tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="2ef80-447">In Visual Basic, the property name is always used to search for the property with reflection.</span></span> <span data-ttu-id="2ef80-448">È possibile usare il `Default` (parola chiave) per rendere la proprietà valore predefinito proprietà indicizzata, nel qual caso è possibile omettere il nome durante l'accesso alla proprietà, come in questo esempio.</span><span class="sxs-lookup"><span data-stu-id="2ef80-448">You can use the `Default` keyword to make the property a default indexed property, in which case you can omit the name when accessing the property, as in this example.</span></span> <span data-ttu-id="2ef80-449">È anche possibile usare il nome della proprietà.</span><span class="sxs-lookup"><span data-stu-id="2ef80-449">You can also use the property name.</span></span>  
  
-   <span data-ttu-id="2ef80-450">La proprietà indicizzata istanza è una proprietà predefinita chiamata un indicizzatore in c#, e il nome non viene mai usato quando l'accesso alla proprietà nel codice.</span><span class="sxs-lookup"><span data-stu-id="2ef80-450">In C#, the indexed instance property is a default property called an indexer, and the name is never used when accessing the property in code.</span></span> <span data-ttu-id="2ef80-451">Per impostazione predefinita, il nome della proprietà è `Item`, ed è necessario utilizzare tale nome quando esegue una ricerca per la proprietà tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="2ef80-451">By default, the name of the property is `Item`, and you must use that name when you search for the property with reflection.</span></span> <span data-ttu-id="2ef80-452">È possibile usare il <xref:System.Runtime.CompilerServices.IndexerNameAttribute> attributo per consentire all'indicizzatore un nome diverso.</span><span class="sxs-lookup"><span data-stu-id="2ef80-452">You can use the <xref:System.Runtime.CompilerServices.IndexerNameAttribute> attribute to give the indexer a different name.</span></span> <span data-ttu-id="2ef80-453">In questo esempio il nome è `IndexedInstanceProperty`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-453">In this example, the name is `IndexedInstanceProperty`.</span></span>  
  
-   <span data-ttu-id="2ef80-454">In C++ il `default` identificatore può essere utilizzato per rendere una proprietà indicizzata predefinito proprietà indicizzata (classe indexer).</span><span class="sxs-lookup"><span data-stu-id="2ef80-454">In C++, the `default` specifier can be used to make an indexed property a default indexed property (class indexer).</span></span> <span data-ttu-id="2ef80-455">In tal caso, il nome della proprietà per impostazione predefinita è `Item`, ed è necessario utilizzare tale nome per la proprietà tramite reflection, come in questo esempio la ricerca.</span><span class="sxs-lookup"><span data-stu-id="2ef80-455">In that case, the name of the property by default is `Item`, and you must use that name when you search for the property with reflection, as in this example.</span></span> <span data-ttu-id="2ef80-456">È possibile usare il <xref:System.Runtime.CompilerServices.IndexerNameAttribute> attributo che consente di assegnare l'indicizzatore di classe, un nome diverso in reflection, ma è possibile utilizzare tale nome per accedere alla proprietà nel codice.</span><span class="sxs-lookup"><span data-stu-id="2ef80-456">You can use the <xref:System.Runtime.CompilerServices.IndexerNameAttribute> attribute to give the class indexer a different name in reflection, but you cannot use that name to access the property in code.</span></span> <span data-ttu-id="2ef80-457">Una proprietà indicizzata che non è un indicizzatore di classe è accessibile tramite il relativo nome, nel codice e nella reflection.</span><span class="sxs-lookup"><span data-stu-id="2ef80-457">An indexed property that is not a class indexer is accessed using its name, both in code and in reflection.</span></span>  
  
 [!code-cpp[PropertyInfo.SetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR/PropertyInfo.SetValue/cpp/Example.cpp#1)]
 [!code-csharp[PropertyInfo.SetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR/PropertyInfo.SetValue/cs/Example.cs#1)]
 [!code-vb[PropertyInfo.SetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PropertyInfo.SetValue/vb/Example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ef80-458">La matrice <paramref name="index" /> non contiene il tipo di argomenti necessari.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-458">The <paramref name="index" /> array does not contain the type of arguments needed.</span>
          </span>
          <span data-ttu-id="2ef80-459">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-459">-or-</span>
          </span>
          <span data-ttu-id="2ef80-460">La funzione di accesso <see langword="set" /> della proprietà non è stata trovata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-460">The property's <see langword="set" /> accessor is not found.</span>
          </span>
          <span data-ttu-id="2ef80-461">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-461">-or-</span>
          </span>
          <span data-ttu-id="2ef80-462">Non è possibile convertire <paramref name="value" /> nel tipo di <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-462">
              <paramref name="value" /> cannot be converted to the type of <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetException">
          <span data-ttu-id="2ef80-463">
            <block subset="none" type="note">
              <para> Nelle <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">app .NET per Windows Store</see> o nella <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">libreria di classi portabile</see> intercettare in alternativa l'eccezione <see cref="T:System.Exception" />. </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-463">
              <block subset="none" type="note">
                <para> In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="2ef80-464">L'oggetto non corrisponde al tipo di destinazione oppure una proprietà è una proprietà dell'istanza, ma <paramref name="obj" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-464">The object does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetParameterCountException">
          <span data-ttu-id="2ef80-465">Il numero di parametri in <paramref name="index" /> non corrisponde al numero di parametri accettati dalla proprietà indicizzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-465">The number of parameters in <paramref name="index" /> does not match the number of parameters the indexed property takes.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2ef80-466">
            <block subset="none" type="note">
              <para> Nelle <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">app .NET per Windows Store</see> o nella <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">libreria di classi portabile</see> intercettare in alternativa l'eccezione della classe di base <see cref="T:System.MemberAccessException" />. </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-466">
              <block subset="none" type="note">
                <para> In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="2ef80-467">È stato effettuato un tentativo non valido di accedere a un metodo privato o protetto all'interno di una classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-467">There was an illegal attempt to access a private or protected method inside a class.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2ef80-468">Si è verificato un errore durante l'impostazione del valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-468">An error occurred while setting the property value.</span>
          </span>
          <span data-ttu-id="2ef80-469">Ad esempio, un valore di indice specificato per una proprietà indicizzata non è compreso nell'intervallo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-469">For example, an index value specified for an indexed property is out of range.</span>
          </span>
          <span data-ttu-id="2ef80-470">La causa di questo errore è indicata dalla proprietà <see cref="P:System.Exception.InnerException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-470">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2ef80-471">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-471">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="2ef80-472">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-472">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public abstract void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetValue(System::Object ^ obj, System::Object ^ value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; unit" Usage="propertyInfo.SetValue (obj, value, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="2ef80-473">Oggetto di cui verrà impostato il valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-473">The object whose property value will be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2ef80-474">Nuovo valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-474">The new property value.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="2ef80-475">Una combinazione bit per bit dei seguenti membri di enumerazione che specificano l'attributo di chiamata: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" /> o <see langword="SetProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-475">A bitwise combination of the following enumeration members that specify the invocation attribute: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span>
          </span>
          <span data-ttu-id="2ef80-476">È necessario specificare un attributo di chiamata appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-476">You must specify a suitable invocation attribute.</span>
          </span>
          <span data-ttu-id="2ef80-477">Ad esempio, per richiamare un membro statico, impostare il flag <see langword="Static" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-477">For example, to invoke a static member, set the <see langword="Static" /> flag.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="2ef80-478">Oggetto che consente l'associazione, la coercizione di tipi di argomento, la chiamata di membri e il recupero di oggetti <see cref="T:System.Reflection.MemberInfo" /> tramite la reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-478">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span>
          </span>
          <span data-ttu-id="2ef80-479">Se <c>binder</c> è <see langword="null" />, verrà usato il binder predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-479">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2ef80-480">Valori di indice facoltativi per le proprietà indicizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-480">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="2ef80-481">Il valore deve essere <see langword="null" /> per le proprietà non indicizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-481">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="2ef80-482">Impostazioni cultura in base alle quali deve essere localizzata la risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-482">The culture for which the resource is to be localized.</span>
          </span>
          <span data-ttu-id="2ef80-483">Se la risorsa non viene localizzata con queste impostazioni cultura, la proprietà <see cref="P:System.Globalization.CultureInfo.Parent" /> verrà successivamente chiamata in cerca di una corrispondenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-483">If the resource is not localized for this culture, the <see cref="P:System.Globalization.CultureInfo.Parent" /> property will be called successively in search of a match.</span>
          </span>
          <span data-ttu-id="2ef80-484">Se questo valore è <see langword="null" />, le informazioni specifiche delle impostazioni cultura vengono ottenute dalla proprietà <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-484">If this value is <see langword="null" />, the culture-specific information is obtained from the <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ef80-485">Quando ne viene eseguito l'override in una classe derivata, imposta il valore della proprietà per un oggetto specificato con il binding, l'indice e le informazioni specifiche delle impostazioni cultura indicati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-485">When overridden in a derived class, sets the property value for a specified object that has the specified binding, index, and culture-specific information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-486">Se l'oggetto <xref:System.Reflection.PropertyInfo> oggetto è un tipo di valore e `value` è `null`, la proprietà verrà impostato sul valore predefinito per quel tipo.</span><span class="sxs-lookup"><span data-stu-id="2ef80-486">If this <xref:System.Reflection.PropertyInfo> object is a value type and `value` is `null`, then the property will be set to the default value for that type.</span></span>  
  
 <span data-ttu-id="2ef80-487">Per determinare se una proprietà è indicizzata, usare il <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-487">To determine whether a property is indexed, use the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="2ef80-488">Se la matrice risultante è 0 (zero) elementi, la proprietà non indicizzata.</span><span class="sxs-lookup"><span data-stu-id="2ef80-488">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span>  
  
 <span data-ttu-id="2ef80-489">Restrizioni di accesso vengono ignorate per un codice completamente attendibile.</span><span class="sxs-lookup"><span data-stu-id="2ef80-489">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="2ef80-490">Vale a dire, proprietà, metodi, campi e i costruttori privati accessibili e richiamate tramite Reflection, ogni volta che il codice è completamente attendibile.</span><span class="sxs-lookup"><span data-stu-id="2ef80-490">That is, private constructors, methods, fields, and properties can be accessed and invoked via Reflection whenever the code is fully trusted.</span></span>  
  
 <span data-ttu-id="2ef80-491">Usare la `SetValue` metodo, ottenere prima la classe `Type`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-491">To use the `SetValue` method, first get the class `Type`.</span></span> <span data-ttu-id="2ef80-492">Dal `Type`, ottenere il `PropertyInfo`.</span><span class="sxs-lookup"><span data-stu-id="2ef80-492">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="2ef80-493">Dal `PropertyInfo`, usare il `SetValue` (metodo).</span><span class="sxs-lookup"><span data-stu-id="2ef80-493">From the `PropertyInfo`, use the `SetValue` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef80-494">Inizia con la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo metodo può essere utilizzato per accedere a membri pubblici se il chiamante è stato concesso <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag, se il set di autorizzazioni dei membri non pubblici è limitato al chiamante concedere set, oppure un subset della stessa.</span><span class="sxs-lookup"><span data-stu-id="2ef80-494">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="2ef80-495">(Vedere [considerazioni sulla sicurezza per Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="2ef80-495">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="2ef80-496">Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="2ef80-496">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ef80-497">La matrice <paramref name="index" /> non contiene il tipo di argomenti necessari.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-497">The <paramref name="index" /> array does not contain the type of arguments needed.</span>
          </span>
          <span data-ttu-id="2ef80-498">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-498">-or-</span>
          </span>
          <span data-ttu-id="2ef80-499">La funzione di accesso <see langword="set" /> della proprietà non è stata trovata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-499">The property's <see langword="set" /> accessor is not found.</span>
          </span>
          <span data-ttu-id="2ef80-500">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-500">-or-</span>
          </span>
          <span data-ttu-id="2ef80-501">Non è possibile convertire <paramref name="value" /> nel tipo di <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-501">
              <paramref name="value" /> cannot be converted to the type of <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetException">
          <span data-ttu-id="2ef80-502">L'oggetto non corrisponde al tipo di destinazione oppure una proprietà è una proprietà dell'istanza, ma <paramref name="obj" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-502">The object does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetParameterCountException">
          <span data-ttu-id="2ef80-503">Il numero di parametri in <paramref name="index" /> non corrisponde al numero di parametri accettati dalla proprietà indicizzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-503">The number of parameters in <paramref name="index" /> does not match the number of parameters the indexed property takes.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="2ef80-504">È stato effettuato un tentativo non valido di accedere a un metodo privato o protetto all'interno di una classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-504">There was an illegal attempt to access a private or protected method inside a class.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="2ef80-505">Si è verificato un errore durante l'impostazione del valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-505">An error occurred while setting the property value.</span>
          </span>
          <span data-ttu-id="2ef80-506">Ad esempio, un valore di indice specificato per una proprietà indicizzata non è compreso nell'intervallo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-506">For example, an index value specified for an indexed property is out of range.</span>
          </span>
          <span data-ttu-id="2ef80-507">La causa di questo errore è indicata dalla proprietà <see cref="P:System.Exception.InnerException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-507">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="2ef80-508">Quando viene richiamato con associazione tardiva mediante meccanismi come <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-508">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="2ef80-509">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-509">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _PropertyInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _PropertyInfo.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_PropertyInfo::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="2ef80-510">Riservato per utilizzi futuri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-510">Reserved for future use.</span>
          </span>
          <span data-ttu-id="2ef80-511">Deve essere IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-511">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="2ef80-512">Matrice di nomi passata di cui eseguire il mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-512">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="2ef80-513">Conteggio dei nomi di cui eseguire il mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-513">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="2ef80-514">Contesto delle impostazioni locali in cui interpretare i nomi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-514">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="2ef80-515">Matrice allocata dal chiamante che riceve gli ID corrispondenti ai nomi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-515">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ef80-516">Esegue il mapping di un set di nomi a un set corrispondente di ID dispatch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-516">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-517">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2ef80-517">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2ef80-518">Per altre informazioni sulle `IDispatch::GetIDsOfNames`, consultare la MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="2ef80-518">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2ef80-519">L'accesso ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c> non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-519">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.GetType">
      <MemberSignature Language="C#" Value="Type _PropertyInfo.GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Runtime.InteropServices._PropertyInfo.GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetType" />
      <MemberSignature Language="VB.NET" Value="Function GetType () As Type Implements _PropertyInfo.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Runtime.InteropServices._PropertyInfo.GetType() = System::Runtime::InteropServices::_PropertyInfo::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ef80-520">Ottiene un oggetto <see cref="T:System.Type" /> che rappresenta il tipo <see cref="T:System.Reflection.PropertyInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-520">Gets a <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.PropertyInfo" /> type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ef80-521">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo <see cref="T:System.Reflection.PropertyInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-521">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.PropertyInfo" /> type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _PropertyInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _PropertyInfo.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_PropertyInfo::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="2ef80-522">Informazioni sul tipo da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-522">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="2ef80-523">Identificatore delle impostazioni locali per le informazioni sul tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-523">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="2ef80-524">Riceve un puntatore all'oggetto relativo alle informazioni sul tipo richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-524">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ef80-525">Recupera le informazioni sul tipo relative a un oggetto che può quindi essere usato per ottenere informazioni sul tipo relative a un'interfaccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-525">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-526">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2ef80-526">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2ef80-527">Per altre informazioni sulle `IDispatch::GetTypeInfo`, consultare la MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="2ef80-527">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2ef80-528">L'accesso ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c> non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-528">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _PropertyInfo.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _PropertyInfo.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_PropertyInfo::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="2ef80-529">Punta a una posizione che riceve il numero di interfacce di informazioni sul tipo fornite dall'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-529">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ef80-530">Recupera il numero delle interfacce di informazioni sul tipo fornite da un oggetto (0 o 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-530">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-531">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2ef80-531">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2ef80-532">Per altre informazioni sulle `IDispatch::GetTypeInfoCount`, consultare la MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="2ef80-532">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2ef80-533">L'accesso ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c> non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-533">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.Invoke">
      <MemberSignature Language="C#" Value="void _PropertyInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyInfo.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _PropertyInfo.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyInfo.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_PropertyInfo::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="2ef80-534">Identifica il membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-534">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="2ef80-535">Riservato per utilizzi futuri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-535">Reserved for future use.</span>
          </span>
          <span data-ttu-id="2ef80-536">Deve essere IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-536">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="2ef80-537">Contesto di impostazioni locali all'interno del quale devono essere interpretati gli argomenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-537">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="2ef80-538">Flag che descrivono il contesto della chiamata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-538">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="2ef80-539">Puntatore a una struttura contenente una matrice di argomenti, una matrice di DISPID per argomenti denominati e i conteggi del numero di elementi nelle matrici.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-539">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="2ef80-540">Puntatore alla posizione in cui deve essere archiviato il risultato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-540">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="2ef80-541">Puntatore a una struttura contenente informazioni sull'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-541">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="2ef80-542">Indice del primo argomento che contiene un errore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-542">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ef80-543">Fornisce l'accesso a proprietà e metodi esposti da un oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-543">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef80-544">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2ef80-544">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2ef80-545">Per altre informazioni sulle `IDispatch::Invoke`, consultare la MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="2ef80-545">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2ef80-546">L'accesso ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c> non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ef80-546">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>