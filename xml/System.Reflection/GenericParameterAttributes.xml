<Type Name="GenericParameterAttributes" FullName="System.Reflection.GenericParameterAttributes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12b3be1e659bbaefef778cf4ecd6f914ce37dbcd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum GenericParameterAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed GenericParameterAttributes extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.GenericParameterAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Enum GenericParameterAttributes" />
  <TypeSignature Language="C++ CLI" Value="public enum class GenericParameterAttributes" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ac7c6-101">Descrive i vincoli su un parametro di tipo generico di un metodo o di un tipo generico.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ac7c6-101">Describes the constraints on a generic type parameter of a generic type or method.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac7c6-102">I membri del <xref:System.Reflection.GenericParameterAttributes> enumerazione sono suddivisi in due gruppi, il gruppo di varianza e il gruppo di vincoli speciali.</span><span class="sxs-lookup"><span data-stu-id="ac7c6-102">The members of the <xref:System.Reflection.GenericParameterAttributes> enumeration are divided into two groups, the variance group and the special constraints group.</span></span> <span data-ttu-id="ac7c6-103">Per testare un <xref:System.Reflection.GenericParameterAttributes> valore per i flag di varianza, prima di eseguire un'operazione con AND bit per bit con VarianceMask.</span><span class="sxs-lookup"><span data-stu-id="ac7c6-103">To test a <xref:System.Reflection.GenericParameterAttributes> value for variance flags, first perform a bitwise AND operation with VarianceMask.</span></span> <span data-ttu-id="ac7c6-104">Se il risultato è Nessuno, non sono presenti flag di varianza.</span><span class="sxs-lookup"><span data-stu-id="ac7c6-104">If the result is None, there are no variance flags.</span></span> <span data-ttu-id="ac7c6-105">Analogamente, utilizzare SpecialConstraintMask per verificare i flag dei vincoli.</span><span class="sxs-lookup"><span data-stu-id="ac7c6-105">Similarly, use SpecialConstraintMask to test for constraint flags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac7c6-106">Esempio di codice seguente definisce un tipo generico `Test` con due parametri di tipo.</span><span class="sxs-lookup"><span data-stu-id="ac7c6-106">The following code example defines a generic type `Test` with two type parameters.</span></span> <span data-ttu-id="ac7c6-107">Il secondo parametro di tipo ha un vincolo di classe di base e un vincolo di tipo riferimento.</span><span class="sxs-lookup"><span data-stu-id="ac7c6-107">The second type parameter has a base class constraint and a reference type constraint.</span></span> <span data-ttu-id="ac7c6-108">Quando viene eseguito il programma, i vincoli vengono esaminati utilizzando il <xref:System.Type.GenericParameterAttributes%2A?displayProperty=nameWithType> proprietà e <xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="ac7c6-108">When the program executes, the constraints are examined using the <xref:System.Type.GenericParameterAttributes%2A?displayProperty=nameWithType> property and the <xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Type.GetGenericParameterConstraints#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Type.GetGenericParameterConstraints/CPP/source.cpp#1)]
 [!code-csharp[System.Type.GetGenericParameterConstraints#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Type.GetGenericParameterConstraints/CS/source.cs#1)]
 [!code-vb[System.Type.GetGenericParameterConstraints#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Type.GetGenericParameterConstraints/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Contravariant">
      <MemberSignature Language="C#" Value="Contravariant" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.GenericParameterAttributes Contravariant = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.GenericParameterAttributes.Contravariant" />
      <MemberSignature Language="VB.NET" Value="Contravariant" />
      <MemberSignature Language="C++ CLI" Value="Contravariant" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac7c6-109">Il parametro di tipo generico è controvariante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac7c6-109">The generic type parameter is contravariant.</span>
          </span>
          <span data-ttu-id="ac7c6-110">Un parametro di tipo controvariante può apparire come un tipo di parametro nelle firme del metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac7c6-110">A contravariant type parameter can appear as a parameter type in method signatures.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Covariant">
      <MemberSignature Language="C#" Value="Covariant" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.GenericParameterAttributes Covariant = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.GenericParameterAttributes.Covariant" />
      <MemberSignature Language="VB.NET" Value="Covariant" />
      <MemberSignature Language="C++ CLI" Value="Covariant" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac7c6-111">Il parametro di tipo generico è covariante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac7c6-111">The generic type parameter is covariant.</span>
          </span>
          <span data-ttu-id="ac7c6-112">Un parametro di tipo covariante può apparire come il tipo di risultato di un metodo, il tipo di un campo di sola lettura, un tipo di base dichiarato o un'interfaccia implementata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac7c6-112">A covariant type parameter can appear as the result type of a method, the type of a read-only field, a declared base type, or an implemented interface.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="DefaultConstructorConstraint">
      <MemberSignature Language="C#" Value="DefaultConstructorConstraint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.GenericParameterAttributes DefaultConstructorConstraint = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint" />
      <MemberSignature Language="VB.NET" Value="DefaultConstructorConstraint" />
      <MemberSignature Language="C++ CLI" Value="DefaultConstructorConstraint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac7c6-113">Un tipo può sostituire il parametro di tipo generico solo se possiede un costruttore senza parametri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac7c6-113">A type can be substituted for the generic type parameter only if it has a parameterless constructor.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.GenericParameterAttributes None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.GenericParameterAttributes.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac7c6-114">Non sono presenti flag speciali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac7c6-114">There are no special flags.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NotNullableValueTypeConstraint">
      <MemberSignature Language="C#" Value="NotNullableValueTypeConstraint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.GenericParameterAttributes NotNullableValueTypeConstraint = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint" />
      <MemberSignature Language="VB.NET" Value="NotNullableValueTypeConstraint" />
      <MemberSignature Language="C++ CLI" Value="NotNullableValueTypeConstraint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac7c6-115">Un tipo può sostituire il parametro di tipo generico solo se è un tipo di valore e non ammette valori Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac7c6-115">A type can be substituted for the generic type parameter only if it is a value type and is not nullable.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReferenceTypeConstraint">
      <MemberSignature Language="C#" Value="ReferenceTypeConstraint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.GenericParameterAttributes ReferenceTypeConstraint = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint" />
      <MemberSignature Language="VB.NET" Value="ReferenceTypeConstraint" />
      <MemberSignature Language="C++ CLI" Value="ReferenceTypeConstraint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac7c6-116">Un tipo può sostituire il parametro di tipo generico solo se è un tipo di riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac7c6-116">A type can be substituted for the generic type parameter only if it is a reference type.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SpecialConstraintMask">
      <MemberSignature Language="C#" Value="SpecialConstraintMask" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.GenericParameterAttributes SpecialConstraintMask = int32(28)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.GenericParameterAttributes.SpecialConstraintMask" />
      <MemberSignature Language="VB.NET" Value="SpecialConstraintMask" />
      <MemberSignature Language="C++ CLI" Value="SpecialConstraintMask" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>28</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac7c6-117">Seleziona la combinazione di tutti i flag di vincoli speciali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac7c6-117">Selects the combination of all special constraint flags.</span>
          </span>
          <span data-ttu-id="ac7c6-118">Questo valore è il risultato dell'uso dell'operatore logico OR per combinare i flag <see cref="F:System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint" />, <see cref="F:System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint" /> e <see cref="F:System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac7c6-118">This value is the result of using logical OR to combine the following flags: <see cref="F:System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint" />, <see cref="F:System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint" />, and <see cref="F:System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="VarianceMask">
      <MemberSignature Language="C#" Value="VarianceMask" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.GenericParameterAttributes VarianceMask = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.GenericParameterAttributes.VarianceMask" />
      <MemberSignature Language="VB.NET" Value="VarianceMask" />
      <MemberSignature Language="C++ CLI" Value="VarianceMask" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac7c6-119">Seleziona la combinazione di tutti i flag di varianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac7c6-119">Selects the combination of all variance flags.</span>
          </span>
          <span data-ttu-id="ac7c6-120">Questo valore è il risultato dell'uso dell'operatore logico OR per combinare i flag <see cref="F:System.Reflection.GenericParameterAttributes.Contravariant" /> e <see cref="F:System.Reflection.GenericParameterAttributes.Covariant" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac7c6-120">This value is the result of using logical OR to combine the following flags: <see cref="F:System.Reflection.GenericParameterAttributes.Contravariant" /> and <see cref="F:System.Reflection.GenericParameterAttributes.Covariant" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>