<Type Name="AssemblyName" FullName="System.Reflection.AssemblyName">
  <TypeSignature Language="C#" Value="public sealed class AssemblyName : ICloneable, System.Runtime.InteropServices._AssemblyName, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit AssemblyName extends System.Object implements class System.ICloneable, class System.Runtime.InteropServices._AssemblyName, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.AssemblyName" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyName&#xA;Implements _AssemblyName, ICloneable, IDeserializationCallback, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyName sealed : ICloneable, System::Runtime::InteropServices::_AssemblyName, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._AssemblyName</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._AssemblyName))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f84fe-101">Descrive in modo completo l'identità univoca di un assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-101">Describes an assembly's unique identity in full.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-102">Il <xref:System.Reflection.AssemblyName> oggetto contiene le informazioni relative a un assembly, che è possibile utilizzare per l'associazione all'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-102">The <xref:System.Reflection.AssemblyName> object contains information about an assembly, which you can use to bind to that assembly.</span></span> <span data-ttu-id="f84fe-103">Identità di un assembly è costituita dai seguenti elementi:</span><span class="sxs-lookup"><span data-stu-id="f84fe-103">An assembly's identity consists of the following:</span></span>  
  
-   <span data-ttu-id="f84fe-104">Nome semplice.</span><span class="sxs-lookup"><span data-stu-id="f84fe-104">Simple name.</span></span>  
  
-   <span data-ttu-id="f84fe-105">Numero di versione.</span><span class="sxs-lookup"><span data-stu-id="f84fe-105">Version number.</span></span>  
  
-   <span data-ttu-id="f84fe-106">Coppia di chiavi crittografiche.</span><span class="sxs-lookup"><span data-stu-id="f84fe-106">Cryptographic key pair.</span></span>  
  
-   <span data-ttu-id="f84fe-107">Impostazioni cultura supportate.</span><span class="sxs-lookup"><span data-stu-id="f84fe-107">Supported culture.</span></span>  
  
 <span data-ttu-id="f84fe-108">Il nome semplice in genere è il nome del file per il file manifesto senza l'estensione.</span><span class="sxs-lookup"><span data-stu-id="f84fe-108">The simple name is typically the file name for the manifest file without its extension.</span></span> <span data-ttu-id="f84fe-109">La coppia di chiavi include una chiave pubblica e privata, utilizzato per creare firme con nome sicuro per gli assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-109">The key pair includes a public and private key, used to create strong-name signatures for assemblies.</span></span>  
  
 <span data-ttu-id="f84fe-110">Tutti i compilatori che supportano common language runtime creeranno il nome semplice di una classe annidata, e reflection quando richiesta, in conformità con le seguenti convenzioni di un nome alterato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-110">All compilers that support the common language runtime will emit the simple name of a nested class, and reflection constructs a mangled name when queried, in accordance with the following conventions.</span></span>  
  
|<span data-ttu-id="f84fe-111">delimitatore</span><span class="sxs-lookup"><span data-stu-id="f84fe-111">Delimiter</span></span>|<span data-ttu-id="f84fe-112">Significato</span><span class="sxs-lookup"><span data-stu-id="f84fe-112">Meaning</span></span>|  
|---------------|-------------|  
|<span data-ttu-id="f84fe-113">Barra rovesciata (\\)</span><span class="sxs-lookup"><span data-stu-id="f84fe-113">Backslash (\\)</span></span>|<span data-ttu-id="f84fe-114">Carattere di escape.</span><span class="sxs-lookup"><span data-stu-id="f84fe-114">Escape character.</span></span>|  
|<span data-ttu-id="f84fe-115">Comma (,)</span><span class="sxs-lookup"><span data-stu-id="f84fe-115">Comma (,)</span></span>|<span data-ttu-id="f84fe-116">Precede il nome dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-116">Precedes the assembly name.</span></span>|  
|<span data-ttu-id="f84fe-117">Segno più (+)</span><span class="sxs-lookup"><span data-stu-id="f84fe-117">Plus sign (+)</span></span>|<span data-ttu-id="f84fe-118">Precede una classe annidata.</span><span class="sxs-lookup"><span data-stu-id="f84fe-118">Precedes a nested class.</span></span>|  
  
 <span data-ttu-id="f84fe-119">Il nome completo per una classe, ad esempio, potrebbe essere simile al seguente:</span><span class="sxs-lookup"><span data-stu-id="f84fe-119">For example, the fully qualified name for a class might look like this:</span></span>  
  
 <span data-ttu-id="f84fe-120">ContainingClass + NestedClass, MyAssembly</span><span class="sxs-lookup"><span data-stu-id="f84fe-120">ContainingClass+NestedClass,MyAssembly</span></span>  
  
 <span data-ttu-id="f84fe-121">A "+" diventa "\\+\\+" e un "\\"diventa"\\\\".</span><span class="sxs-lookup"><span data-stu-id="f84fe-121">A "++" becomes "\\+\\+", and a "\\" becomes "\\\\".</span></span>  
  
 <span data-ttu-id="f84fe-122">Questo nome completo può essere persistente e successivamente utilizzato per caricare il <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="f84fe-122">This qualified name can be persisted and later used to load the <xref:System.Type>.</span></span> <span data-ttu-id="f84fe-123">Per cercare e caricare un <xref:System.Type>, utilizzare <xref:System.Type.GetType%2A> o con il tipo di nome solo oppure con il nome di tipo completo dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-123">To search for and load a <xref:System.Type>, use <xref:System.Type.GetType%2A> either with the type name only or with the assembly qualified type name.</span></span> <span data-ttu-id="f84fe-124"><xref:System.Type.GetType%2A> con il tipo di nome solo cercherà il <xref:System.Type> nell'assembly del chiamante, quindi nell'assembly System.</span><span class="sxs-lookup"><span data-stu-id="f84fe-124"><xref:System.Type.GetType%2A> with the type name only will look for the <xref:System.Type> in the caller's assembly and then in the System assembly.</span></span> <span data-ttu-id="f84fe-125"><xref:System.Type.GetType%2A> con l'assembly completo del tipo cercherà il <xref:System.Type> in qualsiasi assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-125"><xref:System.Type.GetType%2A> with the assembly qualified type name will look for the <xref:System.Type> in any assembly.</span></span>  
  
 <span data-ttu-id="f84fe-126">Un oggetto completamente specificato <xref:System.Reflection.AssemblyName> deve avere il nome, le impostazioni cultura, chiave pubblica o token di chiave pubblica principale versione, versione secondaria, numero di build e parametri relativi ai numeri di revisione.</span><span class="sxs-lookup"><span data-stu-id="f84fe-126">A fully specified <xref:System.Reflection.AssemblyName> must have the name, culture, public key or public key token, major version, minor version, build number, and revision number parameters.</span></span> <span data-ttu-id="f84fe-127">Gli ultimi quattro sono inseriti in pacchetti di <xref:System.Version> tipo.</span><span class="sxs-lookup"><span data-stu-id="f84fe-127">The last four are packaged in the <xref:System.Version> type.</span></span>  
  
 <span data-ttu-id="f84fe-128">Per creare un nome semplice, creare un <xref:System.Reflection.AssemblyName> utilizzando il costruttore predefinito e impostare il <xref:System.Reflection.AssemblyName.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="f84fe-128">To create a simple name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A>.</span></span> <span data-ttu-id="f84fe-129">Le altre proprietà è facoltativa.</span><span class="sxs-lookup"><span data-stu-id="f84fe-129">The other properties are optional.</span></span>  
  
 <span data-ttu-id="f84fe-130">Per creare un nome sicuro completo, creare un <xref:System.Reflection.AssemblyName> utilizzando il costruttore predefinito e impostare il <xref:System.Reflection.AssemblyName.Name%2A> e <xref:System.Reflection.AssemblyName.KeyPair%2A>.</span><span class="sxs-lookup"><span data-stu-id="f84fe-130">To create a full strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A> and <xref:System.Reflection.AssemblyName.KeyPair%2A>.</span></span> <span data-ttu-id="f84fe-131">Le altre proprietà è facoltativa.</span><span class="sxs-lookup"><span data-stu-id="f84fe-131">The other properties are optional.</span></span> <span data-ttu-id="f84fe-132">Utilizzare <xref:System.Reflection.AssemblyName.SetPublicKey%2A> e <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> per impostare la chiave pubblica e il nome sicuro.</span><span class="sxs-lookup"><span data-stu-id="f84fe-132">Use <xref:System.Reflection.AssemblyName.SetPublicKey%2A> and <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> to set the public key and the strong name.</span></span> <span data-ttu-id="f84fe-133">Il nome sicuro utilizza sempre la firma di <xref:System.Security.Cryptography.SHA1> algoritmo hash.</span><span class="sxs-lookup"><span data-stu-id="f84fe-133">The strong name signing always uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 <span data-ttu-id="f84fe-134">Per garantire che i nomi sono costruiti in modo corretto, utilizzare le proprietà seguenti:</span><span class="sxs-lookup"><span data-stu-id="f84fe-134">To ensure that the names are constructed correctly, use the following properties:</span></span>  
  
-   <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>  
  
-   <xref:System.Reflection.AssemblyName.FullName%2A?displayProperty=nameWithType>  
  
-   <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="f84fe-135">È anche possibile ottenere il nome utilizzando il `/l` con il [Gacutil.exe (strumento Global Assembly Cache)](~/docs/framework/tools/gacutil-exe-gac-tool.md)</span><span class="sxs-lookup"><span data-stu-id="f84fe-135">You can also get the name by using the `/l` option with the [Gacutil.exe (Global Assembly Cache Tool)](~/docs/framework/tools/gacutil-exe-gac-tool.md)</span></span>  
  
 <span data-ttu-id="f84fe-136">Per un nome sicuro specificato parzialmente, creare un <xref:System.Reflection.AssemblyName> utilizzando il costruttore predefinito e impostare il nome e una chiave pubblica.</span><span class="sxs-lookup"><span data-stu-id="f84fe-136">For a partially specified strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the name and public key.</span></span> <span data-ttu-id="f84fe-137">Un assembly creato utilizzando ad esempio un <xref:System.Reflection.AssemblyName> può essere firmato in un secondo momento utilizzando Assembly Linker (Al.exe).</span><span class="sxs-lookup"><span data-stu-id="f84fe-137">An assembly created using such an <xref:System.Reflection.AssemblyName> can be signed later using the Assembly Linker (Al.exe).</span></span>  
  
 <span data-ttu-id="f84fe-138">È possibile specificare una chiave pubblica e una <xref:System.Reflection.AssemblyName.KeyPair%2A> con valori non coerenti.</span><span class="sxs-lookup"><span data-stu-id="f84fe-138">It is possible to specify a public key and a <xref:System.Reflection.AssemblyName.KeyPair%2A> with inconsistent values.</span></span> <span data-ttu-id="f84fe-139">Può essere utile in scenari di sviluppo.</span><span class="sxs-lookup"><span data-stu-id="f84fe-139">This can be useful in developer scenarios.</span></span> <span data-ttu-id="f84fe-140">In questo caso, la chiave pubblica recuperati con <xref:System.Reflection.AssemblyName.GetPublicKey%2A> specifica il tasto, mentre pubblica corretto il <xref:System.Reflection.AssemblyName.KeyPair%2A> specifica le chiavi pubbliche e private usate durante lo sviluppo.</span><span class="sxs-lookup"><span data-stu-id="f84fe-140">In this case, the public key retrieved with <xref:System.Reflection.AssemblyName.GetPublicKey%2A> specifies the correct public key, while the <xref:System.Reflection.AssemblyName.KeyPair%2A> specifies the public and private keys used during development.</span></span> <span data-ttu-id="f84fe-141">Quando il runtime rileva una mancata corrispondenza tra il <xref:System.Reflection.AssemblyName.KeyPair%2A> e la chiave pubblica, Cerca nel Registro di sistema la chiave corretta che corrisponde alla chiave pubblica.</span><span class="sxs-lookup"><span data-stu-id="f84fe-141">When the runtime detects a mismatch between the <xref:System.Reflection.AssemblyName.KeyPair%2A> and the public key, it looks up in the registry the correct key that matches the public key.</span></span>  
  
 <span data-ttu-id="f84fe-142">Il formato del nome visualizzato di un <xref:System.Reflection.AssemblyName> è una stringa Unicode delimitato da virgole che inizia con il nome, come indicato di seguito:</span><span class="sxs-lookup"><span data-stu-id="f84fe-142">The format of the display name of an <xref:System.Reflection.AssemblyName> is a comma-delimited Unicode string that begins with the name, as follows:</span></span>  
  
 `Name <,Culture = CultureInfo> <,Version = Major.Minor.Build.Revision> <, StrongName> <,PublicKeyToken> '\0'`  
  
 <span data-ttu-id="f84fe-143">`Name` è il nome testuale dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-143">`Name` is the textual name of the assembly.</span></span> <span data-ttu-id="f84fe-144">`CultureInfo` è la lingua definita dal formato RFC1766.</span><span class="sxs-lookup"><span data-stu-id="f84fe-144">`CultureInfo` is the RFC1766-format-defined culture.</span></span> <span data-ttu-id="f84fe-145">`Major`, `Minor`, `Build`, e `Revision` sono il numero di versione principale, versione secondaria, numero di build e numero di revisione dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-145">`Major`, `Minor`, `Build`, and `Revision` are the major version, minor version, build number, and revision number of the assembly.</span></span> <span data-ttu-id="f84fe-146">`StrongName` rappresenta i 64 bit di livello inferiore con codifica esadecimale del valore hash di chiave pubblica generata utilizzando l'algoritmo hash SHA-1 e la chiave pubblica specificata da <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="f84fe-146">`StrongName` is the hexadecimal-encoded low-order 64 bits of the hash value of the public key generated using the SHA-1 hashing algorithm and the public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span></span> <span data-ttu-id="f84fe-147">`PublicKeyToken` è la chiave pubblica con codifica esadecimale specificata da <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="f84fe-147">`PublicKeyToken` is the hexadecimal-encoded public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span></span>  
  
 <span data-ttu-id="f84fe-148">Codifica esadecimale è definita come la conversione di ogni byte di un oggetto binario di due caratteri esadecimali, partendo dal meno significativo al più significativo.</span><span class="sxs-lookup"><span data-stu-id="f84fe-148">Hexadecimal encoding is defined as the conversion of each byte of a binary object to two hexadecimal characters, progressing from least to most significant byte.</span></span> <span data-ttu-id="f84fe-149">I valori di visualizzazione aggiuntive verranno aggiunti in base alle necessità.</span><span class="sxs-lookup"><span data-stu-id="f84fe-149">Additional display values will be added as deemed necessary.</span></span>  
  
 <span data-ttu-id="f84fe-150">Se la chiave pubblica completa è noto, PublicKey può essere sostituito per StrongName.</span><span class="sxs-lookup"><span data-stu-id="f84fe-150">If the full public key is known, then PublicKey may be substituted for StrongName.</span></span>  
  
 <span data-ttu-id="f84fe-151">Si noti inoltre che, ad eccezione di `Name`, che deve essere in prima di tutto, l'ordine lessicale di parametri è importante.</span><span class="sxs-lookup"><span data-stu-id="f84fe-151">Also note that except for `Name`, which must come first, the lexical order of parameters is unimportant.</span></span> <span data-ttu-id="f84fe-152">Tuttavia, qualsiasi parametro (`Version`, `Culture`, `StrongName` o `PublicKey`) non specificamente set viene considerato omesso e <xref:System.Reflection.AssemblyName> viene quindi considerato parziale.</span><span class="sxs-lookup"><span data-stu-id="f84fe-152">However, any parameter (`Version`, `Culture`, `StrongName` or `PublicKey`) not specifically set is considered to be omitted, and the <xref:System.Reflection.AssemblyName> is then considered partial.</span></span> <span data-ttu-id="f84fe-153">Quando si specificano informazioni parziali, è necessario specificare i parametri nome nell'ordine descritto in precedenza.</span><span class="sxs-lookup"><span data-stu-id="f84fe-153">When specifying partial information, Name parameters must be specified in the order described above.</span></span>  
  
 <span data-ttu-id="f84fe-154">Quando si specifica un nome visualizzato, la convenzione `StrongName =null` o `PublicKey= null` indica che è necessaria l'associazione e la corrispondenza con un assembly con nome semplice.</span><span class="sxs-lookup"><span data-stu-id="f84fe-154">When supplying a display name, the convention `StrongName =null` or `PublicKey= null` indicates that binding and matching against a simply named assembly is required.</span></span> <span data-ttu-id="f84fe-155">Inoltre, la convenzione `Culture= ""` (virgolette doppie che rappresenta una stringa vuota) indica la corrispondenza con le impostazioni cultura predefinite.</span><span class="sxs-lookup"><span data-stu-id="f84fe-155">Additionally, the convention `Culture= ""` (double quote representing an empty string) indicates matching against the default culture.</span></span>  
  
 <span data-ttu-id="f84fe-156">Nell'esempio seguente un <xref:System.Reflection.AssemblyName> per un assembly denominato semplicemente con impostazioni cultura predefinite.</span><span class="sxs-lookup"><span data-stu-id="f84fe-156">The following example shows an <xref:System.Reflection.AssemblyName> for a simply named assembly with default culture.</span></span>  
  
```  
ExampleAssembly, Culture=""  
```  
  
 <span data-ttu-id="f84fe-157">L'esempio seguente illustra un riferimento completo per un assembly con nome sicuro nelle impostazioni cultura "en" (inglese).</span><span class="sxs-lookup"><span data-stu-id="f84fe-157">The following example shows a fully specified reference for a strongly named assembly with culture "en".</span></span>  
  
```  
ExampleAssembly, Version=1.0.0.0, Culture=en, PublicKeyToken=a5d015c7d5a0b012  
```  
  
   
  
## Examples  
 <span data-ttu-id="f84fe-158">In questo esempio viene illustrato come utilizzare diverse classi di reflection per analizzare i metadati contenuti in un assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-158">This example shows how to use various reflection classes to analyze the metadata contained in an assembly.</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Version" />
    <altmember cref="M:System.Reflection.AssemblyName.GetPublicKey" />
    <altmember cref="M:System.Reflection.AssemblyName.GetPublicKeyToken" />
    <altmember cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" />
    <altmember cref="M:System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])" />
    <altmember cref="P:System.Type.FullName" />
    <altmember cref="M:System.Type.GetType" />
    <altmember cref="P:System.Type.AssemblyQualifiedName" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f84fe-159">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyName" />.</span><span class="sxs-lookup"><span data-stu-id="f84fe-159">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyName();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f84fe-160">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyName" />.</span><span class="sxs-lookup"><span data-stu-id="f84fe-160">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f84fe-161">Nell'esempio seguente viene creato un assembly dinamico denominato `MyAssembly.exe` e lo salva sul disco rigido.</span><span class="sxs-lookup"><span data-stu-id="f84fe-161">The following example creates a dynamic assembly named `MyAssembly.exe` and saves it to your hard disk.</span></span> <span data-ttu-id="f84fe-162">Dopo aver eseguito l'esempio, è possibile utilizzare il [Ildasm.exe (Disassembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) per esaminare i metadati dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-162">After running the example, you can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the assembly metadata.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#1)]
 [!code-csharp[AssemblyName_Constructor#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#1)]
 [!code-vb[AssemblyName_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyName (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyName(System::String ^ assemblyName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="f84fe-163">Nome visualizzato dell'assembly, come restituito dalla proprietà <see cref="P:System.Reflection.AssemblyName.FullName" />.</span><span class="sxs-lookup"><span data-stu-id="f84fe-163">The display name of the assembly, as returned by the <see cref="P:System.Reflection.AssemblyName.FullName" /> property.</span></span></param>
        <summary><span data-ttu-id="f84fe-164">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyName" /> con il nome visualizzato specificato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-164">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class with the specified display name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-165">Fornito `assemblyName` viene analizzato e i campi appropriati del nuovo <xref:System.Reflection.AssemblyName> vengono inizializzate con i valori dal nome visualizzato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-165">The supplied `assemblyName` is parsed, and the appropriate fields of the new <xref:System.Reflection.AssemblyName> are initialized with values from the display name.</span></span> <span data-ttu-id="f84fe-166">Questo è il modo consigliato di analizzare i nomi visualizzati.</span><span class="sxs-lookup"><span data-stu-id="f84fe-166">This is the recommended way of parsing display names.</span></span> <span data-ttu-id="f84fe-167">Non è consigliabile scrivere il proprio codice per analizzare i nomi visualizzati.</span><span class="sxs-lookup"><span data-stu-id="f84fe-167">Writing your own code to parse display names is not recommended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f84fe-168">L'esempio seguente crea un'istanza di <xref:System.Reflection.AssemblyName> da un nome visualizzato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-168">The following example creates an instance of <xref:System.Reflection.AssemblyName> from a display name.</span></span> <span data-ttu-id="f84fe-169">I singoli elementi del nome visualizzato sono output sulla console come proprietà del <xref:System.Reflection.AssemblyName> oggetto.</span><span class="sxs-lookup"><span data-stu-id="f84fe-169">The individual elements of the display name are output to the console as properties of the <xref:System.Reflection.AssemblyName> object.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor_2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor_2/CPP/source.cpp#1)]
 [!code-csharp[AssemblyName_Constructor_2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor_2/CS/source.cs#1)]
 [!code-vb[AssemblyName_Constructor_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f84fe-170"><paramref name="assemblyName" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f84fe-170"><paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f84fe-171"><paramref name="assemblyName" /> è una stringa di lunghezza zero.</span><span class="sxs-lookup"><span data-stu-id="f84fe-171"><paramref name="assemblyName" /> is a zero length string.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="f84fe-172">In [.NET per app di Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) o nella [libreria di classi portabile](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) rilevare invece l'eccezione della classe di base, <see cref="T:System.IO.IOException" />.</span><span class="sxs-lookup"><span data-stu-id="f84fe-172">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="f84fe-173">Non è possibile trovare l'assembly a cui viene fatto riferimento oppure non è possibile caricarlo.</span><span class="sxs-lookup"><span data-stu-id="f84fe-173">The referenced assembly could not be found, or could not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f84fe-174">Esegue una copia di questo oggetto <see cref="T:System.Reflection.AssemblyName" />.</span><span class="sxs-lookup"><span data-stu-id="f84fe-174">Makes a copy of this <see cref="T:System.Reflection.AssemblyName" /> object.</span></span></summary>
        <returns><span data-ttu-id="f84fe-175">Oggetto che è la copia dell'oggetto <see cref="T:System.Reflection.AssemblyName" />.</span><span class="sxs-lookup"><span data-stu-id="f84fe-175">An object that is a copy of this <see cref="T:System.Reflection.AssemblyName" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-176">Un nuovo oggetto viene creato, identico all'originale.</span><span class="sxs-lookup"><span data-stu-id="f84fe-176">A new object is created, identical to the original.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public string CodeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeBase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f84fe-177">Ottiene o imposta il percorso dell'assembly come URL.</span><span class="sxs-lookup"><span data-stu-id="f84fe-177">Gets or sets the location of the assembly as a URL.</span></span></summary>
        <value><span data-ttu-id="f84fe-178">Stringa che rappresenta il percorso URL dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-178">A string that is the URL location of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-179">Quando viene caricato un assembly, questo valore può essere ottenuto anche utilizzando la <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="f84fe-179">When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="f84fe-180">Se l'assembly è stato caricato come una matrice di byte, questa proprietà restituisce il percorso del chiamante del <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%29> overload del metodo, non il percorso dell'assembly caricato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-180">If the assembly was loaded as a byte array, this property returns the location of the caller of the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%29> method overload, not the location of the loaded assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f84fe-181">Non utilizzare un <xref:System.Reflection.AssemblyName> solo con il <xref:System.Reflection.AssemblyName.CodeBase%2A> set di proprietà.</span><span class="sxs-lookup"><span data-stu-id="f84fe-181">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="f84fe-182">Il <xref:System.Reflection.AssemblyName.CodeBase%2A> proprietà non fornisca tutti gli elementi dell'identità dell'assembly (ad esempio nome o la versione), quindi il caricamento non si verifica in base alle regole di caricamento all'identità, come ci si aspetta dal <xref:System.Reflection.Assembly.Load%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="f84fe-182">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="f84fe-183">Al contrario, l'assembly viene caricato utilizzando le regole di caricamento.</span><span class="sxs-lookup"><span data-stu-id="f84fe-183">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="f84fe-184">Per informazioni sugli svantaggi derivanti dall'utilizzo il contesto di caricamento, vedere il <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> overload del metodo o [le procedure consigliate per il caricamento di Assembly](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span><span class="sxs-lookup"><span data-stu-id="f84fe-184">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f84fe-185">Nell'esempio seguente viene generato un assembly dinamico e lo salva nella directory corrente.</span><span class="sxs-lookup"><span data-stu-id="f84fe-185">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="f84fe-186">Quando viene creato l'assembly, il <xref:System.Reflection.AssemblyName.CodeBase%2A> proprietà viene utilizzata per specificare la directory in cui viene salvato l'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-186">When the assembly is created, the <xref:System.Reflection.AssemblyName.CodeBase%2A> property is used to specify the directory where the assembly is saved.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#1)]
 [!code-csharp[AssemblyName_CodeBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#1)]
 [!code-vb[AssemblyName_CodeBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyContentType ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.AssemblyContentType ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As AssemblyContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyContentType ContentType { System::Reflection::AssemblyContentType get(); void set(System::Reflection::AssemblyContentType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyContentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f84fe-187">Ottiene o imposta un valore che indica il tipo di contenuto dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-187">Gets or sets a value that indicates what type of content the assembly contains.</span></span></summary>
        <value><span data-ttu-id="f84fe-188">Valore che indica il tipo di contenuto che l'assembly contiene.</span><span class="sxs-lookup"><span data-stu-id="f84fe-188">A value that indicates what type of content the assembly contains.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo CultureInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo CultureInfo" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CultureInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureInfo As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ CultureInfo { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f84fe-189">Ottiene o imposta le impostazioni cultura supportate dall'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-189">Gets or sets the culture supported by the assembly.</span></span></summary>
        <value><span data-ttu-id="f84fe-190">Oggetto che rappresenta le impostazioni cultura supportate dall'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-190">An object that represents the culture supported by the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f84fe-191">Nell'esempio seguente viene generato un assembly dinamico e lo salva nella directory corrente.</span><span class="sxs-lookup"><span data-stu-id="f84fe-191">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="f84fe-192">Quando viene creato l'assembly, il <xref:System.Reflection.AssemblyName.CultureInfo%2A> proprietà viene utilizzata per specificare le impostazioni cultura, che fa parte del nome visualizzato dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-192">When the assembly is created, the <xref:System.Reflection.AssemblyName.CultureInfo%2A> property is used to specify the culture, which is part of the assembly's display name.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#2)]
 [!code-csharp[AssemblyName_CodeBase#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#2)]
 [!code-vb[AssemblyName_CodeBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureName">
      <MemberSignature Language="C#" Value="public string CultureName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CultureName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f84fe-193">Ottiene o imposta il nome delle impostazioni di cultura associate all'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-193">Gets or sets the name of the culture associated with the assembly.</span></span></summary>
        <value><span data-ttu-id="f84fe-194">Nome delle impostazioni cultura</span><span class="sxs-lookup"><span data-stu-id="f84fe-194">The culture name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapedCodeBase">
      <MemberSignature Language="C#" Value="public string EscapedCodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EscapedCodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.EscapedCodeBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EscapedCodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EscapedCodeBase { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f84fe-195">Ottiene l'URI, inclusi i caratteri di escape, che rappresenta la codebase.</span><span class="sxs-lookup"><span data-stu-id="f84fe-195">Gets the URI, including escape characters, that represents the codebase.</span></span></summary>
        <value><span data-ttu-id="f84fe-196">URI con caratteri di escape.</span><span class="sxs-lookup"><span data-stu-id="f84fe-196">A URI with escape characters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyNameFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.AssemblyNameFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As AssemblyNameFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyNameFlags Flags { System::Reflection::AssemblyNameFlags get(); void set(System::Reflection::AssemblyNameFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyNameFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f84fe-197">Ottiene o imposta gli attributi dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-197">Gets or sets the attributes of the assembly.</span></span></summary>
        <value><span data-ttu-id="f84fe-198">Valore che rappresenta gli attributi dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-198">A value that represents the attributes of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f84fe-199">Nell'esempio seguente viene generato un assembly dinamico e lo salva nella directory corrente.</span><span class="sxs-lookup"><span data-stu-id="f84fe-199">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="f84fe-200">Quando viene creato l'assembly, il <xref:System.Reflection.AssemblyName.Flags%2A> proprietà viene utilizzata per specificare che l'assembly dispone di una chiave pubblica.</span><span class="sxs-lookup"><span data-stu-id="f84fe-200">When the assembly is created, the <xref:System.Reflection.AssemblyName.Flags%2A> property is used to specify that the assembly has a public key.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#4](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#4)]
 [!code-csharp[AssemblyName_KeyPair#4](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#4)]
 [!code-vb[AssemblyName_KeyPair#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f84fe-201">Ottiene il nome completo dell'assembly o nome di visualizzazione.</span><span class="sxs-lookup"><span data-stu-id="f84fe-201">Gets the full name of the assembly, also known as the display name.</span></span></summary>
        <value><span data-ttu-id="f84fe-202">Stringa che rappresenta il nome completo dell'assembly o nome di visualizzazione.</span><span class="sxs-lookup"><span data-stu-id="f84fe-202">A string that is the full name of the assembly, also known as the display name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-203">Il nome visualizzato in genere è costituito da nome semplice, il numero di versione, impostazioni cultura supportate e chiave pubblica.</span><span class="sxs-lookup"><span data-stu-id="f84fe-203">The display name typically consists of the simple name, version number, supported culture, and public key.</span></span> <span data-ttu-id="f84fe-204">Ad esempio:</span><span class="sxs-lookup"><span data-stu-id="f84fe-204">For example:</span></span>  
  
```  
mylib, Version=1.2.1900.0, Culture=neutral, PublicKeyToken=a14f3033def15840  
```  
  
 <span data-ttu-id="f84fe-205">Non è consigliabile scrivere il proprio codice per analizzare i nomi visualizzati.</span><span class="sxs-lookup"><span data-stu-id="f84fe-205">Writing your own code to parse display names is not recommended.</span></span> <span data-ttu-id="f84fe-206">Al contrario, passare il nome visualizzato per il <xref:System.Reflection.AssemblyName.%23ctor%2A> costruttore, che analizza e compila i campi appropriati del nuovo <xref:System.Reflection.AssemblyName>.</span><span class="sxs-lookup"><span data-stu-id="f84fe-206">Instead, pass the display name to the <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, which parses it and populates the appropriate fields of the new <xref:System.Reflection.AssemblyName>.</span></span>  
  
 <span data-ttu-id="f84fe-207">Quando viene caricato un assembly, questo valore può essere ottenuto anche utilizzando la <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="f84fe-207">When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f84fe-208">Nell'esempio seguente viene generato un assembly dinamico e lo salva nella directory corrente.</span><span class="sxs-lookup"><span data-stu-id="f84fe-208">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="f84fe-209">Quando viene creato l'assembly, l'esempio di codice imposta il <xref:System.Reflection.AssemblyName.Name%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, <xref:System.Reflection.AssemblyName.CultureInfo%2A>, e <xref:System.Reflection.AssemblyName.KeyPair%2A> proprietà, che insieme costituiscono un nome dell'assembly completo o nome visualizzato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-209">When the assembly is created, the code example sets the <xref:System.Reflection.AssemblyName.Name%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, <xref:System.Reflection.AssemblyName.CultureInfo%2A>, and <xref:System.Reflection.AssemblyName.KeyPair%2A> properties, which together comprise an assembly's full name, or display name.</span></span> <span data-ttu-id="f84fe-210">Il <xref:System.Reflection.AssemblyName.FullName%2A> proprietà viene quindi utilizzata per recuperare il nome visualizzato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-210">The <xref:System.Reflection.AssemblyName.FullName%2A> property is then used to retrieve the display name.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#4](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#4)]
 [!code-csharp[AssemblyName_CodeBase#4](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#4)]
 [!code-vb[AssemblyName_CodeBase#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblyName">
      <MemberSignature Language="C#" Value="public static System.Reflection.AssemblyName GetAssemblyName (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.AssemblyName GetAssemblyName(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetAssemblyName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAssemblyName (assemblyFile As String) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::AssemblyName ^ GetAssemblyName(System::String ^ assemblyFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="f84fe-211">Percorso dell'assembly di cui restituire l'oggetto <see cref="T:System.Reflection.AssemblyName" />.</span><span class="sxs-lookup"><span data-stu-id="f84fe-211">The path for the assembly whose <see cref="T:System.Reflection.AssemblyName" /> is to be returned.</span></span></param>
        <summary><span data-ttu-id="f84fe-212">Ottiene l'oggetto <see cref="T:System.Reflection.AssemblyName" /> per un dato file.</span><span class="sxs-lookup"><span data-stu-id="f84fe-212">Gets the <see cref="T:System.Reflection.AssemblyName" /> for a given file.</span></span></summary>
        <returns><span data-ttu-id="f84fe-213">Oggetto che rappresenta il file di assembly specificato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-213">An object that represents the given assembly file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-214">Questa impostazione funziona solo se il file contiene un manifesto dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-214">This will only work if the file contains an assembly manifest.</span></span> <span data-ttu-id="f84fe-215">Questo metodo, il file essere aperto e chiuso, ma l'assembly non viene aggiunto al dominio.</span><span class="sxs-lookup"><span data-stu-id="f84fe-215">This method causes the file to be opened and closed, but the assembly is not added to this domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f84fe-216">Nell'esempio seguente viene ottenuto il <xref:System.Reflection.AssemblyName> per un assembly su disco.</span><span class="sxs-lookup"><span data-stu-id="f84fe-216">The following example gets the <xref:System.Reflection.AssemblyName> for an assembly on disk.</span></span> <span data-ttu-id="f84fe-217">Non verrà eseguito a meno che non si sostituisce la stringa "MyAssembly.exe" con il nome del file di un assembly (incluso il percorso, se necessario) sul disco rigido.</span><span class="sxs-lookup"><span data-stu-id="f84fe-217">It will not run unless you replace the string "MyAssembly.exe" with the file name of an assembly (including the path, if necessary) on your hard disk.</span></span> <span data-ttu-id="f84fe-218">In alternativa, è possibile compilare questo esempio come "MyAssembly.exe".</span><span class="sxs-lookup"><span data-stu-id="f84fe-218">Alternatively, you can compile this example as "MyAssembly.exe".</span></span>  
  
 [!code-cpp[AssemblyName_GetAssemblyName#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CPP/assemblyname_getassemblyname.cpp#1)]
 [!code-csharp[AssemblyName_GetAssemblyName#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CS/assemblyname_getassemblyname.cs#1)]
 [!code-vb[AssemblyName_GetAssemblyName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_GetAssemblyName/VB/assemblyname_getassemblyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f84fe-219"><paramref name="assemblyFile" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f84fe-219"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f84fe-220"><paramref name="assemblyFile" /> non è valido, ad esempio un assembly con impostazioni cultura non valide.</span><span class="sxs-lookup"><span data-stu-id="f84fe-220"><paramref name="assemblyFile" /> is invalid, such as an assembly with an invalid culture.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="f84fe-221"><paramref name="assemblyFile" /> non trovata.</span><span class="sxs-lookup"><span data-stu-id="f84fe-221"><paramref name="assemblyFile" /> is not found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f84fe-222">Il chiamante non ha l'autorizzazione per l'individuazione del percorso.</span><span class="sxs-lookup"><span data-stu-id="f84fe-222">The caller does not have path discovery permission.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="f84fe-223"><paramref name="assemblyFile" /> non è un assembly valido.</span><span class="sxs-lookup"><span data-stu-id="f84fe-223"><paramref name="assemblyFile" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="f84fe-224">Un assembly o un modulo è stato caricato due volte con due set di evidenze diversi.</span><span class="sxs-lookup"><span data-stu-id="f84fe-224">An assembly or module was loaded twice with two different sets of evidence.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="f84fe-225">Per accedere alle informazioni presenti nel percorso.</span><span class="sxs-lookup"><span data-stu-id="f84fe-225">for access to information in the path.</span></span> <span data-ttu-id="f84fe-226">Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span><span class="sxs-lookup"><span data-stu-id="f84fe-226">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="f84fe-227">Oggetto da popolare con le informazioni sulla serializzazione.</span><span class="sxs-lookup"><span data-stu-id="f84fe-227">The object to be populated with serialization information.</span></span></param>
        <param name="context"><span data-ttu-id="f84fe-228">Contesto di destinazione della serializzazione.</span><span class="sxs-lookup"><span data-stu-id="f84fe-228">The destination context of the serialization.</span></span></param>
        <summary><span data-ttu-id="f84fe-229">Ottiene le informazioni di serializzazione con tutti i dati necessari per creare una nuova istanza di <see langword="AssemblyName" />.</span><span class="sxs-lookup"><span data-stu-id="f84fe-229">Gets serialization information with all the data needed to recreate an instance of this <see langword="AssemblyName" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f84fe-230"><paramref name="info" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f84fe-230"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="f84fe-231">richiede l'attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-231">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="f84fe-232">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span><span class="sxs-lookup"><span data-stu-id="f84fe-232">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKey">
      <MemberSignature Language="C#" Value="public byte[] GetPublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetPublicKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetPublicKey" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPublicKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetPublicKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f84fe-233">Ottiene la chiave pubblica dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-233">Gets the public key of the assembly.</span></span></summary>
        <returns><span data-ttu-id="f84fe-234">Matrice di byte che contiene la chiave pubblica dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-234">A byte array that contains the public key of the assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f84fe-235">Nell'esempio seguente viene generato un assembly dinamico e lo salva nella directory corrente.</span><span class="sxs-lookup"><span data-stu-id="f84fe-235">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="f84fe-236">Quando viene creato l'assembly, il <xref:System.Reflection.AssemblyName.SetPublicKey%2A> consente di assegnare all'assembly una chiave pubblica.</span><span class="sxs-lookup"><span data-stu-id="f84fe-236">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method is used to give the assembly a public key.</span></span> <span data-ttu-id="f84fe-237">Il <xref:System.Reflection.AssemblyName.GetPublicKey%2A> metodo viene quindi utilizzato per recuperare la chiave pubblica, che viene visualizzata nella console.</span><span class="sxs-lookup"><span data-stu-id="f84fe-237">The <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is then used to retrieve the public key, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#2)]
 [!code-csharp[AssemblyName_KeyPair#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#2)]
 [!code-vb[AssemblyName_KeyPair#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f84fe-238">È stata fornita una chiave pubblica, ad esempio utilizzando il metodo <see cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" />, ma non è stato fornito il token di chiave pubblica.</span><span class="sxs-lookup"><span data-stu-id="f84fe-238">A public key was provided (for example, by using the <see cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" /> method), but no public key token was provided.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKeyToken">
      <MemberSignature Language="C#" Value="public byte[] GetPublicKeyToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetPublicKeyToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetPublicKeyToken" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPublicKeyToken () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetPublicKeyToken();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f84fe-239">Ottiene il token di chiave pubblica, rappresentato dagli ultimi 8 byte dell'algoritmo hash SHA-1 della chiave pubblica in cui viene eseguita la firma dell'applicazione o dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-239">Gets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.</span></span></summary>
        <returns><span data-ttu-id="f84fe-240">Matrice di byte che contiene il token di chiave pubblica.</span><span class="sxs-lookup"><span data-stu-id="f84fe-240">A byte array that contains the public key token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f84fe-241">Nell'esempio seguente viene generato un assembly dinamico e lo salva nella directory corrente.</span><span class="sxs-lookup"><span data-stu-id="f84fe-241">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="f84fe-242">Quando viene creato l'assembly, il <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> metodo utilizzato per impostare i token di chiave pubblica dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-242">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method is used to set the assembly's public key token.</span></span> <span data-ttu-id="f84fe-243">Il <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> metodo viene quindi utilizzato per recuperare il token di chiave pubblica, viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="f84fe-243">The <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> method is then used to retrieve the public key token, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#3)]
 [!code-csharp[AssemblyName_KeyPair#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#3)]
 [!code-vb[AssemblyName_KeyPair#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Configuration.Assemblies.AssemblyHashAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As AssemblyHashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Assemblies::AssemblyHashAlgorithm HashAlgorithm { System::Configuration::Assemblies::AssemblyHashAlgorithm get(); void set(System::Configuration::Assemblies::AssemblyHashAlgorithm value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyHashAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f84fe-244">Ottiene o imposta l'algoritmo hash utilizzato dal manifesto assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-244">Gets or sets the hash algorithm used by the assembly manifest.</span></span></summary>
        <value><span data-ttu-id="f84fe-245">Algoritmo hash utilizzato dal manifesto assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-245">The hash algorithm used by the assembly manifest.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="f84fe-246">A partire dal [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> proprietà di un <xref:System.Reflection.AssemblyName> oggetto restituito dal <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> metodo è <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> se è presente alcun algoritmo hash per l'assembly di riferimento, o se l'algoritmo di hash del tipo di riferimento assembly non viene identificato dal <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="f84fe-246">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property of an <xref:System.Reflection.AssemblyName> object that is returned by the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> method is <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> enumeration.</span></span> <span data-ttu-id="f84fe-247">Nelle versioni precedenti di .NET Framework, il <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> proprietà restituita <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> in questa situazione.</span><span class="sxs-lookup"><span data-stu-id="f84fe-247">In previous versions of the .NET Framework, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property returned <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> in this situation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f84fe-248">Nell'esempio seguente viene generato un assembly dinamico e lo salva nella directory corrente.</span><span class="sxs-lookup"><span data-stu-id="f84fe-248">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="f84fe-249">Quando viene creato l'assembly, il <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> proprietà viene utilizzata per impostare l'algoritmo hash per il manifesto dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-249">When the assembly is created, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property is used to set the hash algorithm for the assembly manifest.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#3)]
 [!code-csharp[AssemblyName_CodeBase#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#3)]
 [!code-vb[AssemblyName_CodeBase#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPair">
      <MemberSignature Language="C#" Value="public System.Reflection.StrongNameKeyPair KeyPair { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.StrongNameKeyPair KeyPair" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.KeyPair" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPair As StrongNameKeyPair" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::StrongNameKeyPair ^ KeyPair { System::Reflection::StrongNameKeyPair ^ get(); void set(System::Reflection::StrongNameKeyPair ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.StrongNameKeyPair</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f84fe-250">Ottiene o imposta la coppia di chiavi crittografiche pubblica e privata che viene utilizzata per creare la firma del nome sicuro per l'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-250">Gets or sets the public and private cryptographic key pair that is used to create a strong name signature for the assembly.</span></span></summary>
        <value><span data-ttu-id="f84fe-251">Coppia di chiavi crittografiche pubblica e privata da utilizzare per creare un nome sicuro per l'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-251">The public and private cryptographic key pair to be used to create a strong name for the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-252">Quando il runtime carica un assembly, ma non viene impostato il <xref:System.Reflection.AssemblyName.KeyPair%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="f84fe-252">When the runtime loads an assembly, it does not set the <xref:System.Reflection.AssemblyName.KeyPair%2A> property.</span></span> <span data-ttu-id="f84fe-253">Il metodo Get della proprietà è utile solo se l'utente di impostare la proprietà prima di utilizzare il <xref:System.Reflection.AssemblyName> dell'oggetto per creare un assembly dinamico e successivamente si desidera recuperare la coppia di chiavi.</span><span class="sxs-lookup"><span data-stu-id="f84fe-253">The getter for the property is only useful if the user set the property before using the <xref:System.Reflection.AssemblyName> object to create a dynamic assembly, and subsequently wants to retrieve the key pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f84fe-254">Nell'esempio seguente viene generato un assembly dinamico e lo salva nella directory corrente.</span><span class="sxs-lookup"><span data-stu-id="f84fe-254">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="f84fe-255">Quando viene creato l'assembly, il <xref:System.Reflection.AssemblyName.KeyPair%2A> proprietà viene utilizzata per impostare le chiavi crittografiche di pubblici e privati dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-255">When the assembly is created, the <xref:System.Reflection.AssemblyName.KeyPair%2A> property is used to set the assembly's public and private cryptographic keys.</span></span> <span data-ttu-id="f84fe-256">.</span><span class="sxs-lookup"><span data-stu-id="f84fe-256">.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#1)]
 [!code-csharp[AssemblyName_KeyPair#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#1)]
 [!code-vb[AssemblyName_KeyPair#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f84fe-257">Ottiene o imposta il nome semplice dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-257">Gets or sets the simple name of the assembly.</span></span> <span data-ttu-id="f84fe-258">Tale nome corrisponde in genere, ma non necessariamente, al nome del file manifesto dell'assembly, meno l'estensione.</span><span class="sxs-lookup"><span data-stu-id="f84fe-258">This is usually, but not necessarily, the file name of the manifest file of the assembly, minus its extension.</span></span></summary>
        <value><span data-ttu-id="f84fe-259">Nome semplice dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-259">The simple name of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-260">Il file manifesto è il file che contiene il manifesto dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-260">The manifest file is the file that contains the assembly manifest.</span></span>  
  
 <span data-ttu-id="f84fe-261">Ad esempio, il nome semplice di un singolo file di assembly denominato "MyAssembly" è "MyAssembly".</span><span class="sxs-lookup"><span data-stu-id="f84fe-261">For example, the simple name of a single-file assembly named "MyAssembly.dll" is "MyAssembly".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f84fe-262">Nell'esempio seguente viene generato un assembly dinamico e lo salva nella directory corrente.</span><span class="sxs-lookup"><span data-stu-id="f84fe-262">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="f84fe-263">Quando viene creato l'assembly, il <xref:System.Reflection.AssemblyName.Name%2A> proprietà viene utilizzata per impostare il nome semplice dell'assembly dinamico.</span><span class="sxs-lookup"><span data-stu-id="f84fe-263">When the assembly is created, the <xref:System.Reflection.AssemblyName.Name%2A> property is used to set the simple name of the dynamic assembly.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#2)]
 [!code-csharp[AssemblyName_Constructor#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#2)]
 [!code-vb[AssemblyName_Constructor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="f84fe-264">Origine dell'evento di deserializzazione.</span><span class="sxs-lookup"><span data-stu-id="f84fe-264">The source of the deserialization event.</span></span></param>
        <summary><span data-ttu-id="f84fe-265">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e viene richiamato dall'evento di deserializzazione al termine della deserializzazione.</span><span class="sxs-lookup"><span data-stu-id="f84fe-265">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and is called back by the deserialization event when deserialization is complete.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="M:System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessorArchitecture">
      <MemberSignature Language="C#" Value="public System.Reflection.ProcessorArchitecture ProcessorArchitecture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.ProcessorArchitecture ProcessorArchitecture" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.ProcessorArchitecture" />
      <MemberSignature Language="VB.NET" Value="Public Property ProcessorArchitecture As ProcessorArchitecture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ProcessorArchitecture ProcessorArchitecture { System::Reflection::ProcessorArchitecture get(); void set(System::Reflection::ProcessorArchitecture value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ProcessorArchitecture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f84fe-266">Ottiene o imposta un valore che identifica il processore e i bit per parola della piattaforma di destinazione di un file eseguibile.</span><span class="sxs-lookup"><span data-stu-id="f84fe-266">Gets or sets a value that identifies the processor and bits-per-word of the platform targeted by an executable.</span></span></summary>
        <value><span data-ttu-id="f84fe-267">Uno dei valori di enumerazione che identifica il processore e i bit per parola della piattaforma di destinazione di un file eseguibile.</span><span class="sxs-lookup"><span data-stu-id="f84fe-267">One of the enumeration values that identifies the processor and bits-per-word of the platform targeted by an executable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-268">A partire dal [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], questa proprietà restituisce sempre <xref:System.Reflection.ProcessorArchitecture.None?displayProperty=nameWithType> gli assembly di riferimento.</span><span class="sxs-lookup"><span data-stu-id="f84fe-268">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this property always returns <xref:System.Reflection.ProcessorArchitecture.None?displayProperty=nameWithType> for reference assemblies.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)" />
      </Docs>
    </Member>
    <Member MemberName="ReferenceMatchesDefinition">
      <MemberSignature Language="C#" Value="public static bool ReferenceMatchesDefinition (System.Reflection.AssemblyName reference, System.Reflection.AssemblyName definition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ReferenceMatchesDefinition(class System.Reflection.AssemblyName reference, class System.Reflection.AssemblyName definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.ReferenceMatchesDefinition(System.Reflection.AssemblyName,System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceMatchesDefinition (reference As AssemblyName, definition As AssemblyName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ReferenceMatchesDefinition(System::Reflection::AssemblyName ^ reference, System::Reflection::AssemblyName ^ definition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Reflection.AssemblyName" />
        <Parameter Name="definition" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="f84fe-269">Nome dell'assembly di riferimento.</span><span class="sxs-lookup"><span data-stu-id="f84fe-269">The reference assembly name.</span></span></param>
        <param name="definition"><span data-ttu-id="f84fe-270">Nome dell'assembly confrontato con l'assembly di riferimento.</span><span class="sxs-lookup"><span data-stu-id="f84fe-270">The assembly name that is compared to the reference assembly.</span></span></param>
        <summary><span data-ttu-id="f84fe-271">Restituisce un valore che indica se due nomi di assembly sono uguali.</span><span class="sxs-lookup"><span data-stu-id="f84fe-271">Returns a value indicating whether two assembly names are the same.</span></span> <span data-ttu-id="f84fe-272">Il confronto è basato sui nomi di assembly semplici.</span><span class="sxs-lookup"><span data-stu-id="f84fe-272">The comparison is based on the simple assembly names.</span></span></summary>
        <returns>
          <span data-ttu-id="f84fe-273"><see langword="true" /> se i nomi di assembly semplici sono uguali; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f84fe-273"><see langword="true" /> if the simple assembly names are the same; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-274">Il confronto dipende solo il nome semplice dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-274">The comparison depends only on the simple assembly name.</span></span> <span data-ttu-id="f84fe-275">Ignora versione, impostazioni cultura e token di chiave pubblica.</span><span class="sxs-lookup"><span data-stu-id="f84fe-275">It ignores version, culture, and public key token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPublicKey">
      <MemberSignature Language="C#" Value="public void SetPublicKey (byte[] publicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPublicKey(unsigned int8[] publicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPublicKey (publicKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPublicKey(cli::array &lt;System::Byte&gt; ^ publicKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="publicKey"><span data-ttu-id="f84fe-276">Matrice di byte che contiene la chiave pubblica dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-276">A byte array containing the public key of the assembly.</span></span></param>
        <summary><span data-ttu-id="f84fe-277">Imposta la chiave pubblica che identifica l'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-277">Sets the public key identifying the assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-278">È necessario utilizzare anche il <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> metodo per fornire un token di chiave pubblica.</span><span class="sxs-lookup"><span data-stu-id="f84fe-278">You must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token.</span></span> <span data-ttu-id="f84fe-279">In caso contrario, un <xref:System.Security.SecurityException> viene generata quando il <xref:System.Reflection.AssemblyName.GetPublicKey%2A> metodo viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-279">Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f84fe-280">Nell'esempio seguente viene generato un assembly dinamico e lo salva nella directory corrente.</span><span class="sxs-lookup"><span data-stu-id="f84fe-280">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="f84fe-281">Quando viene creato l'assembly, il <xref:System.Reflection.AssemblyName.SetPublicKey%2A> consente di assegnare all'assembly una chiave pubblica.</span><span class="sxs-lookup"><span data-stu-id="f84fe-281">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method is used to give the assembly a public key.</span></span> <span data-ttu-id="f84fe-282">Il <xref:System.Reflection.AssemblyName.GetPublicKey%2A> metodo viene quindi utilizzato per recuperare la chiave pubblica, che viene visualizzata nella console.</span><span class="sxs-lookup"><span data-stu-id="f84fe-282">The <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is then used to retrieve the public key, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_SetPublicKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CPP/assemblyname_setpublickey.cpp#1)]
 [!code-csharp[AssemblyName_SetPublicKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CS/assemblyname_setpublickey.cs#1)]
 [!code-vb[AssemblyName_SetPublicKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_SetPublicKey/VB/assemblyname_setpublickey.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPublicKeyToken">
      <MemberSignature Language="C#" Value="public void SetPublicKeyToken (byte[] publicKeyToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPublicKeyToken(unsigned int8[] publicKeyToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPublicKeyToken (publicKeyToken As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPublicKeyToken(cli::array &lt;System::Byte&gt; ^ publicKeyToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicKeyToken" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="publicKeyToken"><span data-ttu-id="f84fe-283">Matrice di byte che contiene il token di chiave pubblica dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-283">A byte array containing the public key token of the assembly.</span></span></param>
        <summary><span data-ttu-id="f84fe-284">Imposta il token di chiave pubblica, rappresentato dagli ultimi 8 byte dell'algoritmo hash SHA-1 della chiave pubblica in cui viene eseguita la firma dell'applicazione o dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-284">Sets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-285">Quando si imposta la chiave pubblica mediante la chiamata di <xref:System.Reflection.AssemblyName.SetPublicKey%2A> (metodo), è necessario utilizzare anche il <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> metodo per fornire un token di chiave pubblica.</span><span class="sxs-lookup"><span data-stu-id="f84fe-285">When you set the public key by calling the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method, you must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token.</span></span> <span data-ttu-id="f84fe-286">In caso contrario, un <xref:System.Security.SecurityException> viene generata quando il <xref:System.Reflection.AssemblyName.GetPublicKey%2A> metodo viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-286">Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f84fe-287">Nell'esempio seguente viene generato un assembly dinamico e lo salva nella directory corrente.</span><span class="sxs-lookup"><span data-stu-id="f84fe-287">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="f84fe-288">Quando viene creato l'assembly, il <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> metodo utilizzato per impostare i token di chiave pubblica dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-288">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method is used to set the assembly's public key token.</span></span> <span data-ttu-id="f84fe-289">Il <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> metodo viene quindi utilizzato per recuperare il token di chiave pubblica, viene visualizzato nella console.</span><span class="sxs-lookup"><span data-stu-id="f84fe-289">The <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> method is then used to retrieve the public key token, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_SetPublicKey#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CPP/assemblyname_setpublickey.cpp#2)]
 [!code-csharp[AssemblyName_SetPublicKey#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CS/assemblyname_setpublickey.cs#2)]
 [!code-vb[AssemblyName_SetPublicKey#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_SetPublicKey/VB/assemblyname_setpublickey.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _AssemblyName.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_AssemblyName::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="f84fe-290">Riservato per utilizzi futuri.</span><span class="sxs-lookup"><span data-stu-id="f84fe-290">Reserved for future use.</span></span> <span data-ttu-id="f84fe-291">Deve essere IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="f84fe-291">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="f84fe-292">Matrice di nomi passata di cui eseguire il mapping.</span><span class="sxs-lookup"><span data-stu-id="f84fe-292">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="f84fe-293">Conteggio dei nomi di cui eseguire il mapping.</span><span class="sxs-lookup"><span data-stu-id="f84fe-293">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="f84fe-294">Contesto delle impostazioni locali in cui interpretare i nomi.</span><span class="sxs-lookup"><span data-stu-id="f84fe-294">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="f84fe-295">Matrice allocata dal chiamante che riceve gli ID corrispondenti ai nomi.</span><span class="sxs-lookup"><span data-stu-id="f84fe-295">Caller-allocated array that receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="f84fe-296">Esegue il mapping di un set di nomi a un set corrispondente di ID dispatch.</span><span class="sxs-lookup"><span data-stu-id="f84fe-296">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-297">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="f84fe-297">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="f84fe-298">Per ulteriori informazioni su `IDispatch::GetIDsOfNames`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="f84fe-298">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="f84fe-299">L'accesso ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c> non è supportato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-299">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _AssemblyName.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_AssemblyName::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="f84fe-300">Informazioni sul tipo da restituire.</span><span class="sxs-lookup"><span data-stu-id="f84fe-300">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="f84fe-301">Identificatore delle impostazioni locali per le informazioni sul tipo.</span><span class="sxs-lookup"><span data-stu-id="f84fe-301">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="f84fe-302">Riceve un puntatore all'oggetto relativo alle informazioni sul tipo richiesto.</span><span class="sxs-lookup"><span data-stu-id="f84fe-302">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="f84fe-303">Recupera le informazioni sul tipo relative a un oggetto che può quindi essere usato per ottenere informazioni sul tipo relative a un'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="f84fe-303">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-304">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="f84fe-304">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="f84fe-305">Per ulteriori informazioni su `IDispatch::GetTypeInfo`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="f84fe-305">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="f84fe-306">L'accesso ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c> non è supportato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-306">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _AssemblyName.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_AssemblyName::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="f84fe-307">Punta a una posizione che riceve il numero di interfacce di informazioni sul tipo fornite dall'oggetto.</span><span class="sxs-lookup"><span data-stu-id="f84fe-307">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="f84fe-308">Recupera il numero delle interfacce di informazioni sul tipo fornite da un oggetto (0 o 1).</span><span class="sxs-lookup"><span data-stu-id="f84fe-308">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-309">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="f84fe-309">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="f84fe-310">Per ulteriori informazioni su `IDispatch::GetTypeInfoCount`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="f84fe-310">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="f84fe-311">L'accesso ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c> non è supportato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-311">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.Invoke">
      <MemberSignature Language="C#" Value="void _AssemblyName.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _AssemblyName.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_AssemblyName::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="f84fe-312">Identifica il membro.</span><span class="sxs-lookup"><span data-stu-id="f84fe-312">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="f84fe-313">Riservato per utilizzi futuri.</span><span class="sxs-lookup"><span data-stu-id="f84fe-313">Reserved for future use.</span></span> <span data-ttu-id="f84fe-314">Deve essere IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="f84fe-314">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="f84fe-315">Contesto di impostazioni locali all'interno del quale devono essere interpretati gli argomenti.</span><span class="sxs-lookup"><span data-stu-id="f84fe-315">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="f84fe-316">Flag che descrivono il contesto della chiamata.</span><span class="sxs-lookup"><span data-stu-id="f84fe-316">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="f84fe-317">Puntatore a una struttura contenente una matrice di argomenti, una matrice di DISPID per argomenti denominati e i conteggi del numero di elementi nelle matrici.</span><span class="sxs-lookup"><span data-stu-id="f84fe-317">Pointer to a structure containing an array of arguments, an array of argument DispIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="f84fe-318">Puntatore alla posizione in cui deve essere archiviato il risultato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-318">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="f84fe-319">Puntatore a una struttura contenente informazioni sull'eccezione.</span><span class="sxs-lookup"><span data-stu-id="f84fe-319">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="f84fe-320">Indice del primo argomento che contiene un errore.</span><span class="sxs-lookup"><span data-stu-id="f84fe-320">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="f84fe-321">Fornisce l'accesso a proprietà e metodi esposti da un oggetto.</span><span class="sxs-lookup"><span data-stu-id="f84fe-321">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-322">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="f84fe-322">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="f84fe-323">Per ulteriori informazioni su `IDispatch::Invoke`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="f84fe-323">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="f84fe-324">L'accesso ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c> non è supportato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-324">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f84fe-325">Restituisce il nome completo dell'assembly, noto anche come nome visualizzato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-325">Returns the full name of the assembly, also known as the display name.</span></span></summary>
        <returns><span data-ttu-id="f84fe-326">Nome completo dell'assembly o nome della classe se non è possibile determinare il nome completo.</span><span class="sxs-lookup"><span data-stu-id="f84fe-326">The full name of the assembly, or the class name if the full name cannot be determined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-327">Vedere la descrizione di <xref:System.Reflection.AssemblyName> per il formato della stringa restituita.</span><span class="sxs-lookup"><span data-stu-id="f84fe-327">See the description of <xref:System.Reflection.AssemblyName> for the format of the returned string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f84fe-328">Nell'esempio seguente viene ottenuto un <xref:System.Reflection.AssemblyName> oggetto per un ipotetico `MyAssembly.exe` assembly e quindi viene utilizzato il <xref:System.Reflection.AssemblyName.ToString%2A> metodo per recuperare il nome completo dell'assembly o nome visualizzato.</span><span class="sxs-lookup"><span data-stu-id="f84fe-328">The following example gets an <xref:System.Reflection.AssemblyName> object for a hypothetical `MyAssembly.exe` assembly, and then uses the <xref:System.Reflection.AssemblyName.ToString%2A> method to retrieve the full assembly name, or display name.</span></span>  
  
 [!code-cpp[AssemblyName_GetAssemblyName#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CPP/assemblyname_getassemblyname.cpp#2)]
 [!code-csharp[AssemblyName_GetAssemblyName#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CS/assemblyname_getassemblyname.cs#2)]
 [!code-vb[AssemblyName_GetAssemblyName#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_GetAssemblyName/VB/assemblyname_getassemblyname.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Version" />
      <MemberSignature Language="VB.NET" Value="Public Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); void set(Version ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f84fe-329">Ottiene o imposta il numero principale, secondario, di build e di revisione dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-329">Gets or sets the major, minor, build, and revision numbers of the assembly.</span></span></summary>
        <value><span data-ttu-id="f84fe-330">Oggetto che rappresenta il numero principale, secondario, di build e di revisione dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-330">An object that represents the major, minor, build, and revision numbers of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-331">Tutti i componenti della versione devono essere numeri interi maggiori o uguali a zero.</span><span class="sxs-lookup"><span data-stu-id="f84fe-331">All components of the version must be integers greater than or equal to zero.</span></span> <span data-ttu-id="f84fe-332">I metadati limitano la versione principale e secondario, componenti build e revisione di un assembly a un valore massimo di <xref:System.UInt16.MaxValue?displayProperty=nameWithType> - 1.</span><span class="sxs-lookup"><span data-stu-id="f84fe-332">Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <xref:System.UInt16.MaxValue?displayProperty=nameWithType> - 1.</span></span> <span data-ttu-id="f84fe-333">Se un componente supera questo valore, viene generato alcun errore; in un assembly dinamico, tuttavia, tale componente è zero.</span><span class="sxs-lookup"><span data-stu-id="f84fe-333">If a component exceeds this value, no error is thrown; however, in a dynamic assembly, that component is zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f84fe-334">In questa sezione sono riportati due esempi.</span><span class="sxs-lookup"><span data-stu-id="f84fe-334">This section contains two examples.</span></span> <span data-ttu-id="f84fe-335">Nel primo esempio viene illustrato come recuperare la versione dell'assembly attualmente in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="f84fe-335">The first example shows how to retrieve the version of the currently executing assembly.</span></span> <span data-ttu-id="f84fe-336">Nel secondo esempio viene illustrato come utilizzare il <xref:System.Reflection.AssemblyName.Version%2A> proprietà per specificare la versione dell'assembly quando si crea un assembly dinamico.</span><span class="sxs-lookup"><span data-stu-id="f84fe-336">The second example shows how to use the <xref:System.Reflection.AssemblyName.Version%2A> property to specify the assembly version when you emit a dynamic assembly.</span></span>  
  
 <span data-ttu-id="f84fe-337">**Esempio 1**</span><span class="sxs-lookup"><span data-stu-id="f84fe-337">**Example 1**</span></span>  
  
 <span data-ttu-id="f84fe-338">Nell'esempio seguente recupera e visualizza i numeri di versione dell'assembly attualmente in esecuzione e l'assembly che contiene la <xref:System.String> classe.</span><span class="sxs-lookup"><span data-stu-id="f84fe-338">The following example retrieves and displays the version numbers of the currently executing assembly and the assembly that contains the <xref:System.String> class.</span></span>  
  
 [!code-cpp[AssemblyName.Version#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName.Version/cpp/Example.cpp#1)]
 [!code-csharp[AssemblyName.Version#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName.Version/cs/Example.cs#1)]
 [!code-vb[AssemblyName.Version#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName.Version/vb/Example.vb#1)]  
  
 <span data-ttu-id="f84fe-339">**Esempio 2**</span><span class="sxs-lookup"><span data-stu-id="f84fe-339">**Example 2**</span></span>  
  
 <span data-ttu-id="f84fe-340">Nell'esempio seguente viene generato un assembly dinamico e lo salva nella directory corrente.</span><span class="sxs-lookup"><span data-stu-id="f84fe-340">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="f84fe-341">Quando viene creato l'assembly, il <xref:System.Reflection.AssemblyName.Version%2A> proprietà viene utilizzata per specificare le informazioni sulla versione per l'assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-341">When the assembly is created, the <xref:System.Reflection.AssemblyName.Version%2A> property is used to specify version information for the assembly.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#3)]
 [!code-csharp[AssemblyName_Constructor#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#3)]
 [!code-vb[AssemblyName_Constructor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VersionCompatibility">
      <MemberSignature Language="C#" Value="public System.Configuration.Assemblies.AssemblyVersionCompatibility VersionCompatibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Assemblies.AssemblyVersionCompatibility VersionCompatibility" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.VersionCompatibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VersionCompatibility As AssemblyVersionCompatibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Assemblies::AssemblyVersionCompatibility VersionCompatibility { System::Configuration::Assemblies::AssemblyVersionCompatibility get(); void set(System::Configuration::Assemblies::AssemblyVersionCompatibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyVersionCompatibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f84fe-342">Ottiene o imposta le informazioni relative alla compatibilità dell'assembly con altri assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-342">Gets or sets the information related to the assembly's compatibility with other assemblies.</span></span></summary>
        <value><span data-ttu-id="f84fe-343">Valore che rappresenta le informazioni relative alla compatibilità dell'assembly con altri assembly.</span><span class="sxs-lookup"><span data-stu-id="f84fe-343">A value that represents information about the assembly's compatibility with other assemblies.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f84fe-344"><xref:System.Reflection.AssemblyName.VersionCompatibility%2A> informazioni indicano, ad esempio, che l'assembly non è possibile eseguire side-by-side con altre versioni a causa di conflitti su un driver di dispositivo.</span><span class="sxs-lookup"><span data-stu-id="f84fe-344"><xref:System.Reflection.AssemblyName.VersionCompatibility%2A> information indicates, for example, that the assembly cannot execute side-by-side with other versions due to conflicts over a device driver.</span></span>  
  
 <span data-ttu-id="f84fe-345">Attualmente, <xref:System.Reflection.AssemblyName.VersionCompatibility%2A> restituisce sempre <xref:System.Configuration.Assemblies.AssemblyVersionCompatibility.SameMachine?displayProperty=nameWithType>e non viene utilizzata dal caricatore.</span><span class="sxs-lookup"><span data-stu-id="f84fe-345">Currently, <xref:System.Reflection.AssemblyName.VersionCompatibility%2A> always returns <xref:System.Configuration.Assemblies.AssemblyVersionCompatibility.SameMachine?displayProperty=nameWithType>, and is not used by the loader.</span></span> <span data-ttu-id="f84fe-346">Questa proprietà è riservata per un utilizzo futuro.</span><span class="sxs-lookup"><span data-stu-id="f84fe-346">This property is reserved for a future feature.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>