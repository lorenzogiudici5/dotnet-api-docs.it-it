<Type Name="Assembly" FullName="System.Reflection.Assembly">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b227ddef44e3b1f51bb9ce74f6559f8fd0369913" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36640213" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Assembly : System.Reflection.ICustomAttributeProvider, System.Runtime.InteropServices._Assembly, System.Runtime.Serialization.ISerializable, System.Security.IEvidenceFactory" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract serializable beforefieldinit Assembly extends System.Object implements class System.Reflection.ICustomAttributeProvider, class System.Runtime.InteropServices._Assembly, class System.Runtime.Serialization.ISerializable, class System.Security.IEvidenceFactory" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Assembly" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Assembly&#xA;Implements _Assembly, ICustomAttributeProvider, IEvidenceFactory, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Assembly abstract : System::Reflection::ICustomAttributeProvider, System::Runtime::InteropServices::_Assembly, System::Runtime::Serialization::ISerializable, System::Security::IEvidenceFactory" />
  <TypeSignature Language="F#" Value="type Assembly = class&#xA;    interface ICustomAttributeProvider&#xA;    interface _Assembly&#xA;    interface IEvidenceFactory&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Reflection.ICustomAttributeProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Assembly</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IEvidenceFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Assembly))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d5670-101">Rappresenta un assembly, ovvero un blocco predefinito di un'applicazione Common Language Runtime riutilizzabile, autodescrittivo e di cui è possibile eseguire il controllo delle versioni.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d5670-101">Represents an assembly, which is a reusable, versionable, and self-describing building block of a common language runtime application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-102">Utilizzare la <xref:System.Reflection.Assembly> classe per caricare gli assembly, per esplorare i metadati e le parti costitutive dell'assembly, per individuare i tipi contenuti nell'assembly, nonché per creare istanze di tali tipi.</span><span class="sxs-lookup"><span data-stu-id="d5670-102">Use the <xref:System.Reflection.Assembly> class to load assemblies, to explore the metadata and constituent parts of assemblies, to discover the types contained in assemblies, and to create instances of those types.</span></span>  
  
 <span data-ttu-id="d5670-103">Per ottenere una matrice di <xref:System.Reflection.Assembly> gli oggetti che rappresentano gli assembly attualmente caricati in un dominio di applicazione (ad esempio, il dominio applicazione predefinito di un progetto semplice), utilizzare il <xref:System.AppDomain.GetAssemblies%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-103">To get an array of <xref:System.Reflection.Assembly> objects representing the assemblies currently loaded into an application domain (for example, the default application domain of a simple project), use the <xref:System.AppDomain.GetAssemblies%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d5670-104">Per caricare gli assembly in modo dinamico, il <xref:System.Reflection.Assembly> classe fornisce i seguenti metodi statici (`Shared` metodi in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d5670-104">To load assemblies dynamically, the <xref:System.Reflection.Assembly> class provides the following static methods (`Shared` methods in Visual Basic).</span></span> <span data-ttu-id="d5670-105">Gli assembly vengono caricati nel dominio applicazione in cui si verifica l'operazione di caricamento.</span><span class="sxs-lookup"><span data-stu-id="d5670-105">Assemblies are loaded into the application domain where the load operation occurs.</span></span>  
  
-   <span data-ttu-id="d5670-106">Lo strumento consigliato per caricare gli assembly consiste nell'utilizzare il <xref:System.AppDomain.Load%2A> metodo, che identifica l'assembly da caricare con il nome visualizzato (ad esempio, "Windows. Forms, versione = 2.0.0.0, Culture = neutral, PublicKeyToken = b77a5c561934e089").</span><span class="sxs-lookup"><span data-stu-id="d5670-106">The recommended way to load assemblies is to use the <xref:System.AppDomain.Load%2A> method, which identifies the assembly to be loaded by its display name (for example, "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089").</span></span> <span data-ttu-id="d5670-107">La ricerca per l'assembly segue le regole descritte in [come il Runtime individua gli assembly](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span><span class="sxs-lookup"><span data-stu-id="d5670-107">The search for the assembly follows the rules described in [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span></span>  
  
-   <span data-ttu-id="d5670-108">Il <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> e <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> metodi consentono di caricare un assembly per la reflection, ma non per l'esecuzione.</span><span class="sxs-lookup"><span data-stu-id="d5670-108">The <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods enable you to load an assembly for reflection, but not for execution.</span></span> <span data-ttu-id="d5670-109">Ad esempio, un assembly che ha come destinazione una piattaforma a 64 bit può essere esaminato dal codice che è in esecuzione su una piattaforma a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="d5670-109">For example, an assembly that targets a 64-bit platform can be examined by code that is running on a 32-bit platform.</span></span>  
  
-   <span data-ttu-id="d5670-110">Il <xref:System.Reflection.Assembly.LoadFile%2A> e <xref:System.Reflection.Assembly.LoadFrom%2A> metodi vengono forniti per i rari scenari in cui un assembly deve essere identificato dal percorso.</span><span class="sxs-lookup"><span data-stu-id="d5670-110">The <xref:System.Reflection.Assembly.LoadFile%2A> and <xref:System.Reflection.Assembly.LoadFrom%2A> methods are provided for rare scenarios in which an assembly must be identified by path.</span></span>  
  
 <span data-ttu-id="d5670-111">Per ottenere un <xref:System.Reflection.Assembly> oggetto per l'assembly attualmente in esecuzione, utilizzare il <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-111">To get an <xref:System.Reflection.Assembly> object for the currently executing assembly, use the <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> method.</span></span>  
  
 <span data-ttu-id="d5670-112">Numero di membri della <xref:System.Reflection.Assembly> classe forniscono informazioni relative a un assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-112">Many members of the <xref:System.Reflection.Assembly> class provide information about an assembly.</span></span> <span data-ttu-id="d5670-113">Ad esempio:</span><span class="sxs-lookup"><span data-stu-id="d5670-113">For example:</span></span>  
  
-   <span data-ttu-id="d5670-114">Il <xref:System.Reflection.Assembly.GetName%2A> metodo restituisce un <xref:System.Reflection.AssemblyName> oggetto che fornisce accesso alle parti del nome visualizzato dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-114">The <xref:System.Reflection.Assembly.GetName%2A> method returns an <xref:System.Reflection.AssemblyName> object that provides access to the parts of the assembly display name.</span></span>  
  
-   <span data-ttu-id="d5670-115">Il <xref:System.Reflection.Assembly.GetCustomAttributes%2A> metodo sono elencati gli attributi applicati all'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-115">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method lists the attributes applied to the assembly.</span></span>  
  
-   <span data-ttu-id="d5670-116">Il <xref:System.Reflection.Assembly.GetFiles%2A> metodo fornisce l'accesso ai file nel manifesto dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-116">The <xref:System.Reflection.Assembly.GetFiles%2A> method provides access to the files in the assembly manifest.</span></span>  
  
-   <span data-ttu-id="d5670-117">Il <xref:System.Reflection.Assembly.GetManifestResourceNames%2A> metodo fornisce i nomi delle risorse nel manifesto dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-117">The <xref:System.Reflection.Assembly.GetManifestResourceNames%2A> method provides the names of the resources in the assembly manifest.</span></span>  
  
 <span data-ttu-id="d5670-118">Il <xref:System.Reflection.Assembly.GetTypes%2A> metodo elenca tutti i tipi nell'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-118">The <xref:System.Reflection.Assembly.GetTypes%2A> method lists all the types in the assembly.</span></span> <span data-ttu-id="d5670-119">Il <xref:System.Reflection.Assembly.GetExportedTypes%2A> metodo sono elencati i tipi che sono visibili ai chiamanti all'esterno dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-119">The <xref:System.Reflection.Assembly.GetExportedTypes%2A> method lists the types that are visible to callers outside the assembly.</span></span> <span data-ttu-id="d5670-120">Il <xref:System.Reflection.Assembly.GetType%2A> metodo può essere utilizzato per cercare un particolare tipo nell'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-120">The <xref:System.Reflection.Assembly.GetType%2A> method can be used to search for a particular type in the assembly.</span></span> <span data-ttu-id="d5670-121">Il <xref:System.Reflection.Assembly.CreateInstance%2A> metodo può essere utilizzato per la ricerca e creare istanze dei tipi nell'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-121">The <xref:System.Reflection.Assembly.CreateInstance%2A> method can be used to search for and create instances of types in the assembly.</span></span>  
  
 <span data-ttu-id="d5670-122">Per ulteriori informazioni sugli assembly, vedere la sezione "Assembly e domini di applicazione" i [domini applicazione](~/docs/framework/app-domains/application-domains.md) argomento.</span><span class="sxs-lookup"><span data-stu-id="d5670-122">For more information on assemblies, see the "Application Domains and Assemblies" section in the [Application Domains](~/docs/framework/app-domains/application-domains.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5670-123">Esempio di codice seguente viene illustrato come ottenere l'assembly attualmente in esecuzione, creare un'istanza di un tipo di contenuti in tale assembly e richiamare uno dei metodi del tipo con associazione tardiva.</span><span class="sxs-lookup"><span data-stu-id="d5670-123">The following code example shows how to obtain the currently executing assembly, create an instance of a type contained in that assembly, and invoke one of the type's methods with late binding.</span></span> <span data-ttu-id="d5670-124">A tale scopo, l'esempio di codice definisce una classe denominata `Example`, con un metodo denominato `SampleMethod`.</span><span class="sxs-lookup"><span data-stu-id="d5670-124">For this purpose, the code example defines a class named `Example`, with a method named `SampleMethod`.</span></span> <span data-ttu-id="d5670-125">Il costruttore della classe accetta un numero intero, viene utilizzato per calcolare il valore restituito del metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-125">The constructor of the class accepts an integer, which is used to compute the return value of the method.</span></span>  
  
 <span data-ttu-id="d5670-126">L'esempio di codice illustra inoltre l'uso del <xref:System.Reflection.Assembly.GetName%2A> metodo per ottenere un <xref:System.Reflection.AssemblyName> oggetto che può essere usato per analizzare il nome completo dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-126">The code example also demonstrates the use of the <xref:System.Reflection.Assembly.GetName%2A> method to obtain an <xref:System.Reflection.AssemblyName> object that can be used to parse the full name of the assembly.</span></span> <span data-ttu-id="d5670-127">L'esempio visualizza il numero di versione dell'assembly, il <xref:System.Reflection.Assembly.CodeBase%2A> proprietà e il <xref:System.Reflection.Assembly.EntryPoint%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d5670-127">The example displays the version number of the assembly, the <xref:System.Reflection.Assembly.CodeBase%2A> property, and the <xref:System.Reflection.Assembly.EntryPoint%2A> property.</span></span>  
  
 [!code-cpp[AssemblyClass#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyClass/cpp/source.cpp#1)]
 [!code-csharp[AssemblyClass#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyClass/cs/source.cs#1)]
 [!code-vb[AssemblyClass#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyClass/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="d5670-128">per l'attendibilità totale per gli eredi di.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d5670-128">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="d5670-129">Questa classe non può essere ereditata da codice parzialmente attendibile.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d5670-129">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <threadsafe>
      <span data-ttu-id="d5670-130">Questo tipo è thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d5670-130">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.AppDomain" />
    <altmember cref="T:System.Reflection.AssemblyName" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Assembly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Assembly();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5670-131">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-131">Initializes a new instance of the <see cref="T:System.Reflection.Assembly" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-132">Questo costruttore viene richiamato dalle classi derivate durante la costruzione di <xref:System.Reflection.Assembly> oggetti.</span><span class="sxs-lookup"><span data-stu-id="d5670-132">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.Assembly> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public virtual string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeBase : string" Usage="System.Reflection.Assembly.CodeBase" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.CodeBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-133">Ottiene il percorso dell'assembly come originariamente specificato, ad esempio in un oggetto <see cref="T:System.Reflection.AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-133">Gets the location of the assembly as specified originally, for example, in an <see cref="T:System.Reflection.AssemblyName" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-134">Percorso dell'assembly come originariamente specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-134">The location of the assembly as specified originally.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-135">Per ottenere il percorso assoluto del file caricato che contiene manifesto, usare il <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> proprietà invece.</span><span class="sxs-lookup"><span data-stu-id="d5670-135">To get the absolute path to the loaded manifest-containing file, use the <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 <span data-ttu-id="d5670-136">Se l'assembly è stato caricato come una matrice di byte, utilizzando un overload del <xref:System.Reflection.Assembly.Load%2A> metodo che accetta una matrice di byte, questa proprietà restituisce la posizione del chiamante del metodo, non il percorso dell'assembly caricato.</span><span class="sxs-lookup"><span data-stu-id="d5670-136">If the assembly was loaded as a byte array, using an overload of the <xref:System.Reflection.Assembly.Load%2A> method that takes an array of bytes, this property returns the location of the caller of the method, not the location of the loaded assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5670-137">L'esempio seguente usa il <xref:System.Reflection.Assembly.CodeBase%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d5670-137">The following example uses the <xref:System.Reflection.Assembly.CodeBase%2A> property.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/codebase1.cpp#1)]
 [!code-csharp[System.Reflection.Assembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/codebase1.cs#1)]
 [!code-vb[System.Reflection.Assembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/codebase1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="d5670-138">per l'accesso al percorso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-138">for access to the path.</span>
          </span>
          <span data-ttu-id="d5670-139">Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-139">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-140">Individua un tipo in questo assembly e ne crea un'istanza usando l'attivatore di sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-140">Locates a type from this assembly and creates an instance of it using the system activator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string -&gt; obj&#xA;override this.CreateInstance : string -&gt; obj" Usage="assembly.CreateInstance typeName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="d5670-141">
            <see cref="P:System.Type.FullName" /> del tipo da individuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-141">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-142">Individua il tipo specificato in questo assembly e ne crea un'istanza usando l'attivatore di sistema e consentendo la ricerca con distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-142">Locates the specified type from this assembly and creates an instance of it using the system activator, using case-sensitive search.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-143">Istanza del tipo specificato creata con il costruttore predefinito oppure <see langword="null" /> se <paramref name="typeName" /> non viene trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-143">An instance of the specified type created with the default constructor; or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
          <span data-ttu-id="d5670-144">Il tipo viene risolto usando il binder predefinito, senza specificare attributi delle impostazioni cultura o dell'attivazione e con <see cref="T:System.Reflection.BindingFlags" /> impostato su <see langword="Public" /> o <see langword="Instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-144">The type is resolved using the default binder, without specifying culture or activation attributes, and with <see cref="T:System.Reflection.BindingFlags" /> set to <see langword="Public" /> or <see langword="Instance" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-145">Se il runtime è in grado di trovare `typeName` nella <xref:System.Reflection.Assembly> dell'istanza, viene restituito `null` anziché generare un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="d5670-145">If the runtime is unable to find `typeName` in the <xref:System.Reflection.Assembly> instance, it returns `null` instead of throwing an exception.</span></span> <span data-ttu-id="d5670-146">Questo problema potrebbe verificarsi perché:</span><span class="sxs-lookup"><span data-stu-id="d5670-146">This might happen because:</span></span>  
  
-   <span data-ttu-id="d5670-147">Non è stato specificato il nome completo del tipo.</span><span class="sxs-lookup"><span data-stu-id="d5670-147">You haven't specified the fully qualified name of the type.</span></span>  
  
-   <span data-ttu-id="d5670-148">È stato specificato il nome completo del tipo, ma il relativo case non corrisponde il caso del tipo <xref:System.Type.FullName%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d5670-148">You've specified the fully qualified type name, but its case doesn’t match the case of the type's <xref:System.Type.FullName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d5670-149">Per un confronto tra maiuscole e minuscole delle `typeName` con il nome del tipo completo, chiamare il <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> overload e specificare `true` per il `ignoreCase` argomento.</span><span class="sxs-lookup"><span data-stu-id="d5670-149">For a case-insensitive comparison of `typeName` with the type's full name, call the <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> overload and specify `true` for the `ignoreCase` argument.</span></span>  
  
-   <span data-ttu-id="d5670-150">Il tipo non esiste nell'oggetto <xref:System.Reflection.Assembly> istanza.</span><span class="sxs-lookup"><span data-stu-id="d5670-150">The type doesn’t exist in the current <xref:System.Reflection.Assembly> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5670-151">L'esempio seguente definisce una `Person` classe e viene chiamato il <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> metodo crearne un'istanza.</span><span class="sxs-lookup"><span data-stu-id="d5670-151">The following example defines a `Person` class and calls the <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> method to instantiate it.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/cs/createinstance1.cs#1)]
 [!code-vb[System.Reflection.Assembly.CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/vb/createinstance1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-152">
            <paramref name="typeName" /> è una stringa vuota ("") o una stringa che inizia con un carattere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-152">
              <paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span>
          </span>
          <span data-ttu-id="d5670-153">- oppure - L'assembly corrente è stato caricato nel contesto di sola reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-153">-or-  The current assembly was loaded into the reflection-only context.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-154">
            <paramref name="typeName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-154">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="d5670-155">Non è stato trovato alcun costruttore corrispondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-155">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-156">
            <paramref name="typeName" /> richiede un assembly dipendente che non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-156">
              <paramref name="typeName" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-157">
            <paramref name="typeName" /> richiede un assembly dipendente che è stato trovato ma che non è stato possibile caricare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-157">
              <paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="d5670-158">- oppure - L'assembly corrente è stato caricato nel contesto di sola reflection e <paramref name="typeName" /> richiede un assembly dipendente che non è stato precaricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-158">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-159">
            <paramref name="typeName" /> richiede un assembly dipendente, ma il file non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-159">
              <paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-160">- oppure - <paramref name="typeName" /> richiede un assembly dipendente che è stato compilato per una versione del runtime successiva a quella attualmente caricata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-160">-or-  <paramref name="typeName" /> requires a dependent assembly that was compiled for a version of the runtime that is later than the currently loaded version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="d5670-161">Quando viene richiamato con associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-161">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="d5670-162">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-162">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * bool -&gt; obj&#xA;override this.CreateInstance : string * bool -&gt; obj" Usage="assembly.CreateInstance (typeName, ignoreCase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="d5670-163">
            <see cref="P:System.Type.FullName" /> del tipo da individuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-163">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="d5670-164">
            <see langword="true" /> per ignorare la distinzione tra maiuscole e minuscole nel nome del tipo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-164">
              <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-165">Individua il tipo specificato in questo assembly e ne crea un'istanza usando l'attivatore di sistema e consentendo la ricerca con distinzione facoltativa tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-165">Locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-166">Istanza del tipo specificato creata con il costruttore predefinito oppure <see langword="null" /> se <paramref name="typeName" /> non viene trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-166">An instance of the specified type created with the default constructor; or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
          <span data-ttu-id="d5670-167">Il tipo viene risolto usando il binder predefinito, senza specificare attributi delle impostazioni cultura o dell'attivazione e con <see cref="T:System.Reflection.BindingFlags" /> impostato su <see langword="Public" /> o <see langword="Instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-167">The type is resolved using the default binder, without specifying culture or activation attributes, and with <see cref="T:System.Reflection.BindingFlags" /> set to <see langword="Public" /> or <see langword="Instance" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-168">Se il runtime è in grado di trovare `typeName` nella <xref:System.Reflection.Assembly> dell'istanza, viene restituito `null` anziché generare un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="d5670-168">If the runtime is unable to find `typeName` in the <xref:System.Reflection.Assembly> instance, it returns `null` instead of throwing an exception.</span></span> <span data-ttu-id="d5670-169">Questo problema potrebbe verificarsi perché:</span><span class="sxs-lookup"><span data-stu-id="d5670-169">This might happen because:</span></span>  
  
-   <span data-ttu-id="d5670-170">Non è stato specificato il nome completo del tipo.</span><span class="sxs-lookup"><span data-stu-id="d5670-170">You haven't specified the fully qualified name of the type.</span></span>  
  
-   <span data-ttu-id="d5670-171">Il tipo non esiste nell'oggetto <xref:System.Reflection.Assembly> istanza.</span><span class="sxs-lookup"><span data-stu-id="d5670-171">The type doesn’t exist in the current <xref:System.Reflection.Assembly> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5670-172">L'esempio seguente definisce un `Person` classe.</span><span class="sxs-lookup"><span data-stu-id="d5670-172">The following example defines a `Person` class.</span></span> <span data-ttu-id="d5670-173">Chiama quindi il <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> metodo per creare un'istanza, tuttavia, poiché le maiuscole e minuscole del `typeName` argomento non corrisponde a quello del tipo <xref:System.Type.FullName%2A> proprietà, il metodo restituisce `null`.</span><span class="sxs-lookup"><span data-stu-id="d5670-173">It then calls the <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> method to instantiate it, but because the casing of the `typeName` argument doesn’t match that of the type's <xref:System.Type.FullName%2A> property, the method returns `null`.</span></span> <span data-ttu-id="d5670-174">Quando l'esempio passa la stessa stringa per il <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> overload e specifica che il confronto deve essere tra maiuscole e minuscole, il `Person` classe viene trovata e un `Person` oggetto viene creata un'istanza.</span><span class="sxs-lookup"><span data-stu-id="d5670-174">When the example passes the same string to the <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> overload and specifies that the comparison should be case-insensitive, the `Person` class is found, and a `Person` object is successfully instantiated.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.CreateInstance#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/cs/createinstance2.cs#2)]
 [!code-vb[System.Reflection.Assembly.CreateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/vb/createinstance2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-175">
            <paramref name="typeName" /> è una stringa vuota ("") o una stringa che inizia con un carattere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-175">
              <paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span>
          </span>
          <span data-ttu-id="d5670-176">- oppure - L'assembly corrente è stato caricato nel contesto di sola reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-176">-or-  The current assembly was loaded into the reflection-only context.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="d5670-177">Non è stato trovato alcun costruttore corrispondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-177">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-178">
            <paramref name="typeName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-178">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-179">
            <paramref name="typeName" /> richiede un assembly dipendente che non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-179">
              <paramref name="typeName" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-180">
            <paramref name="typeName" /> richiede un assembly dipendente che è stato trovato ma che non è stato possibile caricare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-180">
              <paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="d5670-181">- oppure - L'assembly corrente è stato caricato nel contesto di sola reflection e <paramref name="typeName" /> richiede un assembly dipendente che non è stato precaricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-181">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-182">
            <paramref name="typeName" /> richiede un assembly dipendente, ma il file non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-182">
              <paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-183">- oppure - <paramref name="typeName" /> richiede un assembly dipendente che è stato compilato per una versione del runtime successiva a quella attualmente caricata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-183">-or-  <paramref name="typeName" /> requires a dependent assembly that was compiled for a version of the runtime that is later than the currently loaded version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="d5670-184">Quando viene richiamato con associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-184">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="d5670-185">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-185">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj&#xA;override this.CreateInstance : string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj" Usage="assembly.CreateInstance (typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="d5670-186">
            <see cref="P:System.Type.FullName" /> del tipo da individuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-186">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="d5670-187">
            <see langword="true" /> per ignorare la distinzione tra maiuscole e minuscole nel nome del tipo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-187">
              <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="d5670-188">Maschera di bit che influenza le modalità di esecuzione della ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-188">A bitmask that affects the way in which the search is conducted.</span>
          </span>
          <span data-ttu-id="d5670-189">Il valore è una combinazione di flag di bit dell'oggetto <see cref="T:System.Reflection.BindingFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-189">The value is a combination of bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="d5670-190">Oggetto che consente il binding, la coercizione dei tipi di argomento, la chiamata dei membri e il recupero di oggetti <see langword="MemberInfo" /> tramite reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-190">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects via reflection.</span>
          </span>
          <span data-ttu-id="d5670-191">Se <c>binder</c> è <see langword="null" />, verrà usato il binder predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-191">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="d5670-192">Matrice contenente gli argomenti da passare al costruttore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-192">An array that contains the arguments to be passed to the constructor.</span>
          </span>
          <span data-ttu-id="d5670-193">La matrice di argomenti deve corrispondere ai parametri del costruttore da richiamare in quanto a numero, ordine e tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-193">This array of arguments must match in number, order, and type the parameters of the constructor to be invoked.</span>
          </span>
          <span data-ttu-id="d5670-194">Per usare il costruttore predefinito, <c>args</c> deve essere una matrice vuota o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-194">If the default constructor is desired, <c>args</c> must be an empty array or <see langword="null" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="d5670-195">Istanza di <see langword="CultureInfo" /> usata per regolare la coercizione dei tipi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-195">An instance of <see langword="CultureInfo" /> used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="d5670-196">Se è <see langword="null" />, per il thread corrente verrà usato l'oggetto <see langword="CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-196">If this is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread is used.</span>
          </span>
          <span data-ttu-id="d5670-197">Si tratta di un parametro necessario per convertire un oggetto <see langword="String" /> che rappresenta, ad esempio, il numero 1000 in un valore <see langword="Double" />, dal momento che questo numero è rappresentato in modo diverso nelle varie impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-197">(This is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, for example, since 1000 is represented differently by different cultures.)</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="d5670-198">Matrice di uno o più attributi che possono prendere parte all'attivazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-198">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="d5670-199">In genere, matrice che contiene un singolo oggetto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> che specifica l'URL necessario per attivare un oggetto remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-199">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="d5670-200">Il parametro è correlato agli oggetti attivati dal client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-200">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="d5670-201">L'attivazione del client è una tecnologia legacy mantenuta per garantire la compatibilità con le versioni precedenti, ma non è consigliata per nuove attività di sviluppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-201">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="d5670-202">Per le applicazioni distribuite si dovrebbe usare invece Windows Communication Foundation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-202">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-203">Individua il tipo specificato in questo assembly e ne crea un'istanza usando l'attivatore di sistema, consentendo la ricerca con distinzione facoltativa tra maiuscole e minuscole e usando le impostazioni cultura, gli argomenti e gli attributi di attivazione e di binding specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-203">Locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search and having the specified culture, arguments, and binding and activation attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-204">Istanza del tipo specificato o <see langword="null" /> se <paramref name="typeName" /> non viene trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-204">An instance of the specified type, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
          <span data-ttu-id="d5670-205">Gli argomenti forniti vengono usati per risolvere il tipo e per associare il costruttore usato per creare l'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-205">The supplied arguments are used to resolve the type, and to bind the constructor that is used to create the instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-206">
            <paramref name="typeName" /> è una stringa vuota ("") o una stringa che inizia con un carattere Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-206">
              <paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span>
          </span>
          <span data-ttu-id="d5670-207">- oppure - L'assembly corrente è stato caricato nel contesto di sola reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-207">-or-  The current assembly was loaded into the reflection-only context.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-208">
            <paramref name="typeName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-208">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="d5670-209">Non è stato trovato alcun costruttore corrispondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-209">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d5670-210">Una matrice di attributi di attivazione non vuota viene passata a un tipo che non eredita da <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-210">A non-empty activation attributes array is passed to a type that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-211">
            <paramref name="typeName" /> richiede un assembly dipendente che non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-211">
              <paramref name="typeName" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-212">
            <paramref name="typeName" /> richiede un assembly dipendente che è stato trovato ma che non è stato possibile caricare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-212">
              <paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="d5670-213">- oppure - L'assembly corrente è stato caricato nel contesto di sola reflection e <paramref name="typeName" /> richiede un assembly dipendente che non è stato precaricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-213">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-214">
            <paramref name="typeName" /> richiede un assembly dipendente, ma il file non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-214">
              <paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-215">- oppure - <paramref name="typeName" /> richiede un assembly dipendente che è stato compilato per una versione del runtime successiva a quella attualmente caricata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-215">-or-  <paramref name="typeName" /> requires a dependent assembly which that was compiled for a version of the runtime that is later than the currently loaded version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="d5670-216">Quando viene richiamato con associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-216">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="d5670-217">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-217">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d5670-218">Per creare un'istanza di un delegato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-218">to create an instance of a delegate.</span>
          </span>
          <span data-ttu-id="d5670-219">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-219">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateQualifiedName">
      <MemberSignature Language="C#" Value="public static string CreateQualifiedName (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateQualifiedName(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateQualifiedName (assemblyName As String, typeName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CreateQualifiedName(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateQualifiedName : string * string -&gt; string" Usage="System.Reflection.Assembly.CreateQualifiedName (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="d5670-220">Nome visualizzato di un assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-220">The display name of an assembly.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="d5670-221">Nome completo di un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-221">The full name of a type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-222">Crea il nome di un tipo qualificato dal nome visualizzato del relativo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-222">Creates the name of a type qualified by the display name of its assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-223">Nome completo del tipo qualificato dal nome visualizzato dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-223">The full name of the type qualified by the display name of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-224">Il formato della stringa restituita è:</span><span class="sxs-lookup"><span data-stu-id="d5670-224">The format of the returned string is:</span></span>  
  
 <span data-ttu-id="d5670-225">\<FullTypeName>, \<AssemblyDisplayName></span><span class="sxs-lookup"><span data-stu-id="d5670-225">\<FullTypeName>, \<AssemblyDisplayName></span></span>  
  
 <span data-ttu-id="d5670-226">Vedere <xref:System.Reflection.AssemblyName> per una descrizione del formato del nome visualizzato di un assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-226">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
 <span data-ttu-id="d5670-227">Per supportare le modifiche nelle versioni di common language runtime, utilizzare questo metodo anziché costruire il nome completo se stessi.</span><span class="sxs-lookup"><span data-stu-id="d5670-227">To accommodate changes in versions of the common language runtime, use this method rather than constructing the qualified name yourself.</span></span>  <span data-ttu-id="d5670-228">Per informazioni sui nomi di assembly completo, vedere <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5670-228">For information about qualified assembly names, see <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAttributes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt; CustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.CustomAttributeData&gt; CustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.CustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CustomAttributes As IEnumerable(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ CustomAttributes { System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomAttributes : seq&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.Assembly.CustomAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-229">Ottiene una raccolta che contiene gli attributi personalizzati di questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-229">Gets a collection that contains this assembly's custom attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-230">Raccolta che contiene gli attributi personalizzati di questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-230">A collection that contains this assembly's custom attributes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefinedTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt; DefinedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.TypeInfo&gt; DefinedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.DefinedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefinedTypes As IEnumerable(Of TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ DefinedTypes { System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefinedTypes : seq&lt;System.Reflection.TypeInfo&gt;" Usage="System.Reflection.Assembly.DefinedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-231">Ottiene una raccolta dei tipi definiti in questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-231">Gets a collection of the types defined in this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-232">Raccolta dei tipi definiti in questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-232">A collection of the types defined in this assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-233">Il <xref:System.Reflection.Assembly.DefinedTypes%2A> proprietà può essere paragonata al <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> metodo, con la differenza che il <xref:System.Reflection.Assembly.DefinedTypes%2A> proprietà restituisce una raccolta di <xref:System.Reflection.TypeInfo> oggetti e il <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> metodo restituisce una matrice di <xref:System.Type> oggetti.</span><span class="sxs-lookup"><span data-stu-id="d5670-233">The <xref:System.Reflection.Assembly.DefinedTypes%2A> property is comparable to the <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> method, except that the <xref:System.Reflection.Assembly.DefinedTypes%2A> property returns a collection of <xref:System.Reflection.TypeInfo> objects, and the <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> method returns an array of <xref:System.Type> objects.</span></span>  
  
 <span data-ttu-id="d5670-234">La matrice restituita include i tipi annidati.</span><span class="sxs-lookup"><span data-stu-id="d5670-234">The returned array includes nested types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetTypes" />
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo EntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntryPoint As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ EntryPoint { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryPoint : System.Reflection.MethodInfo" Usage="System.Reflection.Assembly.EntryPoint" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.EntryPoint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-235">Ottiene il punto di ingresso di questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-235">Gets the entry point of this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-236">Oggetto che rappresenta il punto di ingresso di questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-236">An object that represents the entry point of this assembly.</span>
          </span>
          <span data-ttu-id="d5670-237">Se non viene trovato alcun punto di ingresso, ad esempio se l'assembly è un file DLL, viene restituito <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-237">If no entry point is found (for example, the assembly is a DLL), <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="assembly.Equals o" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.Equals(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="d5670-238">Oggetto da confrontare con questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-238">The object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-239">Determina se questo assembly e l'oggetto specificato sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-239">Determines whether this assembly and the specified object are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-240">
            <see langword="true" /> se <paramref name="o" /> è uguale all'istanza. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-240">
              <see langword="true" /> if <paramref name="o" /> is equal to this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-241">Il <xref:System.Reflection.Assembly.Equals%2A> metodo esegue un test di uguaglianza di riferimenti determinare se l'istanza corrente e `o` sono uguali.</span><span class="sxs-lookup"><span data-stu-id="d5670-241">The <xref:System.Reflection.Assembly.Equals%2A> method performs a test for reference equality to determine whether the current instance and `o` are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapedCodeBase">
      <MemberSignature Language="C#" Value="public virtual string EscapedCodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EscapedCodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.EscapedCodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EscapedCodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EscapedCodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EscapedCodeBase : string" Usage="System.Reflection.Assembly.EscapedCodeBase" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.EscapedCodeBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-242">Ottiene l'URI, inclusi i caratteri di escape, che rappresenta la codebase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-242">Gets the URI, including escape characters, that represents the codebase.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-243">URI con caratteri di escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-243">A URI with escape characters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="d5670-244">per l'accesso al percorso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-244">for access to the path.</span>
          </span>
          <span data-ttu-id="d5670-245">Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-245">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Evidence : System.Security.Policy.Evidence" Usage="System.Reflection.Assembly.Evidence" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.Evidence</InterfaceMember>
        <InterfaceMember>P:System.Security.IEvidenceFactory.Evidence</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-246">Ottiene l'evidenza per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-246">Gets the evidence for this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-247">Evidenza per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-247">The evidence for this assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-248">Un'evidenza è l'insieme di informazioni su cui vengono basate le decisioni inerenti i criteri di sicurezza, ad esempio le autorizzazioni che è possibile assegnare al codice.</span><span class="sxs-lookup"><span data-stu-id="d5670-248">Evidence is the set of information that constitutes input to security policy decisions, such as what permissions can be granted to code.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d5670-249">per caricare un assembly con evidenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-249">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="d5670-250">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-250">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="ExportedTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Type&gt; ExportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; ExportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ExportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ ExportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExportedTypes : seq&lt;Type&gt;" Usage="System.Reflection.Assembly.ExportedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-251">Ottiene una raccolta dei tipi pubblici definiti in questo assembly visibili all'esterno dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-251">Gets a collection of the public types defined in this assembly that are visible outside the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-252">Raccolta dei tipi pubblici definiti in questo assembly visibili all'esterno dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-252">A collection of the public types defined in this assembly that are visible outside the assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public virtual string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Reflection.Assembly.FullName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.FullName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-253">Ottiene il nome visualizzato dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-253">Gets the display name of the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-254">Nome visualizzato dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-254">The display name of the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-255">Vedere <xref:System.Reflection.AssemblyName> per una descrizione del formato del nome visualizzato di un assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-255">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-256">Non è consigliabile scrivere il proprio codice per analizzare i nomi visualizzati.</span><span class="sxs-lookup"><span data-stu-id="d5670-256">Writing your own code to parse display names is not recommended.</span></span> <span data-ttu-id="d5670-257">Al contrario, passare il nome visualizzato per il <xref:System.Reflection.AssemblyName.%23ctor%2A> costruttore, che analizza e compila i campi appropriati del nuovo <xref:System.Reflection.AssemblyName>.</span><span class="sxs-lookup"><span data-stu-id="d5670-257">Instead, pass the display name to the <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, which parses it and populates the appropriate fields of the new <xref:System.Reflection.AssemblyName>.</span></span>  
  
 <span data-ttu-id="d5670-258">In .NET Framework versione 2.0, architettura del processore viene aggiunto all'identità dell'assembly e può essere specificato come parte di stringhe di nomi di assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-258">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="d5670-259">Tuttavia, non è incluso nella stringa restituita dal <xref:System.Reflection.Assembly.FullName%2A> proprietà, per motivi di compatibilità.</span><span class="sxs-lookup"><span data-stu-id="d5670-259">However, it is not included in the string returned by the <xref:System.Reflection.Assembly.FullName%2A> property, for compatibility reasons.</span></span> <span data-ttu-id="d5670-260">Vedere <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5670-260">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5670-261">L'esempio seguente recupera il nome visualizzato dell'assembly attualmente in esecuzione e il nome visualizzato dell'assembly che contiene il <xref:System.Int32> tipo (`int` in c#, `Integer` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d5670-261">The following example retrieves the display name of the currently executing assembly, and the display name of the assembly that contains the <xref:System.Int32> type (`int` in C#, `Integer` in Visual Basic).</span></span>  
  
 [!code-cpp[Assembly.FullName#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.FullName/CPP/Example.cpp#1)]
 [!code-csharp[Assembly.FullName#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.FullName/CS/Example.cs#1)]
 [!code-vb[Assembly.FullName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.FullName/VB/Example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetAssembly (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetAssembly(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetAssembly(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetAssembly(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetAssembly : Type -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.GetAssembly type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="d5670-262">Oggetto che rappresenta un tipo nell'assembly che verrà restituito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-262">An object representing a type in the assembly that will be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-263">Ottiene l'assembly attualmente caricato in cui è definito il tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-263">Gets the currently loaded assembly in which the specified type is defined.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-264">Assembly in cui è definito il tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-264">The assembly in which the specified type is defined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-265">Chiamare questo metodo equivale a il recupero del valore del <xref:System.Type.Assembly?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d5670-265">Calling this method is equivalent to retrieving the value of the  <xref:System.Type.Assembly?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d5670-266">Tuttavia, il <xref:System.Type.Assembly?displayProperty=nameWithType> proprietà offre in genere prestazioni migliori.</span><span class="sxs-lookup"><span data-stu-id="d5670-266">However, the <xref:System.Type.Assembly?displayProperty=nameWithType> property typically offers superior performance.</span></span>  
  
 <span data-ttu-id="d5670-267">Per chiamare questo metodo, è necessario che un <xref:System.Type> oggetto, che indica che l'assembly in cui è definita la classe deve essere già caricato.</span><span class="sxs-lookup"><span data-stu-id="d5670-267">In order to call this method, you must have a <xref:System.Type> object, which means that the assembly in which the class is defined must already be loaded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5670-268">Nell'esempio seguente recupera l'assembly che contiene il <xref:System.Int32> digitare e visualizza il nome e il percorso file.</span><span class="sxs-lookup"><span data-stu-id="d5670-268">The following example retrieves the assembly that contains the <xref:System.Int32> type and displays its name and file location.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/GetAssembly1.cpp#12)]
 [!code-csharp[System.Reflection.Assembly#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/GetAssembly1.cs#12)]
 [!code-vb[System.Reflection.Assembly#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/GetAssembly1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-269">
            <paramref name="type" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-269">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="d5670-270">Quando viene richiamato con associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-270">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="d5670-271">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-271">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCallingAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetCallingAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetCallingAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCallingAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCallingAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetCallingAssembly();" />
      <MemberSignature Language="F#" Value="static member GetCallingAssembly : unit -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.GetCallingAssembly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5670-272">Restituisce l'oggetto <see cref="T:System.Reflection.Assembly" /> del metodo che ha richiamato il metodo attualmente in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-272">Returns the <see cref="T:System.Reflection.Assembly" /> of the method that invoked the currently executing method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-273">Oggetto <see langword="Assembly" /> del metodo che ha richiamato il metodo attualmente in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-273">The <see langword="Assembly" /> object of the method that invoked the currently executing method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-274">Se il metodo che chiama la <xref:System.Reflection.Assembly.GetCallingAssembly%2A> metodo espansione inline dal compilatore just-in-time (JIT), o se il chiamante è espanso inline, l'assembly restituito da <xref:System.Reflection.Assembly.GetCallingAssembly%2A> possono variare in modo imprevisto.</span><span class="sxs-lookup"><span data-stu-id="d5670-274">If the method that calls the <xref:System.Reflection.Assembly.GetCallingAssembly%2A> method is expanded inline by the just-in-time (JIT) compiler, or if its caller is expanded inline, the assembly that is returned by <xref:System.Reflection.Assembly.GetCallingAssembly%2A> may differ unexpectedly.</span></span> <span data-ttu-id="d5670-275">Ad esempio, considerare i metodi e gli assembly seguenti:</span><span class="sxs-lookup"><span data-stu-id="d5670-275">For example, consider the following methods and assemblies:</span></span>  
  
-   <span data-ttu-id="d5670-276">Metodo `M1` nell'assembly `A1` chiamate <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5670-276">Method `M1` in assembly `A1` calls <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span></span>  
  
-   <span data-ttu-id="d5670-277">Metodo `M2` nell'assembly `A2` chiamate `M1`.</span><span class="sxs-lookup"><span data-stu-id="d5670-277">Method `M2` in assembly `A2` calls `M1`.</span></span>  
  
-   <span data-ttu-id="d5670-278">Metodo `M3` nell'assembly `A3` chiamate `M2`.</span><span class="sxs-lookup"><span data-stu-id="d5670-278">Method `M3` in assembly `A3` calls `M2`.</span></span>  
  
 <span data-ttu-id="d5670-279">Quando si `M1` non è inline, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> restituisce `A2`.</span><span class="sxs-lookup"><span data-stu-id="d5670-279">When `M1` is not inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A2`.</span></span> <span data-ttu-id="d5670-280">Quando si `M1` inline, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> restituisce `A3`.</span><span class="sxs-lookup"><span data-stu-id="d5670-280">When `M1` is inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A3`.</span></span> <span data-ttu-id="d5670-281">Analogamente, quando `M2` non è inline, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> restituisce `A2`.</span><span class="sxs-lookup"><span data-stu-id="d5670-281">Similarly, when `M2` is not inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A2`.</span></span> <span data-ttu-id="d5670-282">Quando si `M2` inline, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> restituisce `A3`.</span><span class="sxs-lookup"><span data-stu-id="d5670-282">When `M2` is inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A3`.</span></span>  
  
 <span data-ttu-id="d5670-283">Questo effetto si verifica anche quando `M1` viene eseguito come una chiamata tail dal `M2`, o quando `M2` viene eseguito come una chiamata tail da `M3`.</span><span class="sxs-lookup"><span data-stu-id="d5670-283">This effect also occurs when `M1` executes as a tail call from `M2`, or when `M2` executes as a tail call from `M3`.</span></span> <span data-ttu-id="d5670-284">È possibile impedire al compilatore JIT inline il metodo che chiama <xref:System.Reflection.Assembly.GetCallingAssembly%2A>, applicando le <xref:System.Runtime.CompilerServices.MethodImplAttribute> attributo con il <xref:System.Runtime.CompilerServices.MethodImplOptions.NoInlining?displayProperty=nameWithType> flag, ma non esiste un meccanismo simile per impedire le chiamate tail.</span><span class="sxs-lookup"><span data-stu-id="d5670-284">You can prevent the JIT compiler from inlining the method that calls <xref:System.Reflection.Assembly.GetCallingAssembly%2A>, by applying the <xref:System.Runtime.CompilerServices.MethodImplAttribute> attribute with the <xref:System.Runtime.CompilerServices.MethodImplOptions.NoInlining?displayProperty=nameWithType> flag, but there is no similar mechanism for preventing tail calls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5670-285">Nell'esempio seguente ottiene l'assembly chiamante del metodo corrente.</span><span class="sxs-lookup"><span data-stu-id="d5670-285">The following example gets the calling assembly of the current method.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/getcallingassembly1.cpp#4)]
 [!code-csharp[System.Reflection.Assembly#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/getcallingassembly1.cs#4)]
 [!code-vb[System.Reflection.Assembly#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/getcallingassembly1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-286">Ottiene gli attributi personalizzati per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-286">Gets the custom attributes for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : bool -&gt; obj[]&#xA;override this.GetCustomAttributes : bool -&gt; obj[]" Usage="assembly.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="d5670-287">Questo argomento viene ignorato per gli oggetti di tipo <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-287">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-288">Ottiene tutti gli attributi personalizzati per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-288">Gets all the custom attributes for this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-289">Matrice contenente gli attributi personalizzati per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-289">An array that contains the custom attributes for this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-290">Questo metodo implementa corrispondente <xref:System.Reflection.ICustomAttributeProvider> metodo di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="d5670-290">This method implements the corresponding <xref:System.Reflection.ICustomAttributeProvider> interface method.</span></span> <span data-ttu-id="d5670-291">Pertanto, il `inherit` parametro deve essere specificato anche se viene ignorata.</span><span class="sxs-lookup"><span data-stu-id="d5670-291">Therefore, the `inherit` parameter must be specified even though it is ignored.</span></span>  
  
 <span data-ttu-id="d5670-292">Un pseudo-attributo indica bits dei metadati di base che deve essere impostata quando l'attributo è presente.</span><span class="sxs-lookup"><span data-stu-id="d5670-292">A pseudo-attribute indicates bits of the core metadata that must be set when the attribute is present.</span></span> <span data-ttu-id="d5670-293">A differenza di un attributo personalizzato che estende i metadati per un tipo e viene salvato insieme al tipo, un pseudo-attributo modifica i metadati per il tipo e quindi verrà ignorato.</span><span class="sxs-lookup"><span data-stu-id="d5670-293">Unlike a custom attribute that extends the metadata for a type and is saved along with the type, a pseudo-attribute modifies the metadata for the type and then is discarded.</span></span> <span data-ttu-id="d5670-294">Alcuni dei bit risultante non sono accessibili tramite le API di reflection esistente.</span><span class="sxs-lookup"><span data-stu-id="d5670-294">Some of the resulting bits cannot be accessed using existing reflection APIs.</span></span>  
  
 <span data-ttu-id="d5670-295">Nella tabella seguente vengono riepilogati i diversi pseudo- attributi e le funzioni di accesso per i bit sono disponibili nella reflection.</span><span class="sxs-lookup"><span data-stu-id="d5670-295">The following table summarizes the different pseudo-attributes and the accessors for the bits that are available in reflection.</span></span>  
  
|<span data-ttu-id="d5670-296">Pseudo-attributo</span><span class="sxs-lookup"><span data-stu-id="d5670-296">Pseudo-Attribute</span></span>|<span data-ttu-id="d5670-297">Bit di metadati</span><span class="sxs-lookup"><span data-stu-id="d5670-297">Metadata Bits</span></span>|<span data-ttu-id="d5670-298">Funzione di accesso di Reflection</span><span class="sxs-lookup"><span data-stu-id="d5670-298">Reflection Accessor</span></span>|  
|-----------------------|-------------------|-------------------------|  
|<span data-ttu-id="d5670-299">DllImportAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-299">DllImportAttribute</span></span>|<span data-ttu-id="d5670-300">CorPInvokeMap</span><span class="sxs-lookup"><span data-stu-id="d5670-300">CorPInvokeMap</span></span><br /><br /> <span data-ttu-id="d5670-301">Nome della DLL</span><span class="sxs-lookup"><span data-stu-id="d5670-301">DLL name</span></span>|<span data-ttu-id="d5670-302">Nessuna funzione di accesso per PInvokeMap per gli attributi del metodo metodo ordinario/globale.</span><span class="sxs-lookup"><span data-stu-id="d5670-302">No accessor for PInvokeMap for ordinary method/global method attributes.</span></span><br /><br /> <span data-ttu-id="d5670-303">Nessuna funzione di accesso per nome della DLL.</span><span class="sxs-lookup"><span data-stu-id="d5670-303">No accessor for DLL name.</span></span>|  
|<span data-ttu-id="d5670-304">GuidAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-304">GuidAttribute</span></span>|<span data-ttu-id="d5670-305">Archiviato come un attributo personalizzato reale.</span><span class="sxs-lookup"><span data-stu-id="d5670-305">Stored as a real custom attribute.</span></span>|<span data-ttu-id="d5670-306">Accedere come un attributo personalizzato reale.</span><span class="sxs-lookup"><span data-stu-id="d5670-306">Accessed as a real custom attribute.</span></span>|  
|<span data-ttu-id="d5670-307">ComImportAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-307">ComImportAttribute</span></span>|<span data-ttu-id="d5670-308">CorTypeAttr.tdImport</span><span class="sxs-lookup"><span data-stu-id="d5670-308">CorTypeAttr.tdImport</span></span>|<span data-ttu-id="d5670-309">Type.Attributes.Import</span><span class="sxs-lookup"><span data-stu-id="d5670-309">Type.Attributes.Import</span></span>|  
|<span data-ttu-id="d5670-310">SerializableAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-310">SerializableAttribute</span></span>|<span data-ttu-id="d5670-311">CorTypeAttr.tdSerializable</span><span class="sxs-lookup"><span data-stu-id="d5670-311">CorTypeAttr.tdSerializable</span></span>|<span data-ttu-id="d5670-312">Type.Attributes.Serializable</span><span class="sxs-lookup"><span data-stu-id="d5670-312">Type.Attributes.Serializable</span></span>|  
|<span data-ttu-id="d5670-313">NonSerializedAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-313">NonSerializedAttribute</span></span>|<span data-ttu-id="d5670-314">CorFieldAttr.fdNotSerialized</span><span class="sxs-lookup"><span data-stu-id="d5670-314">CorFieldAttr.fdNotSerialized</span></span>|<span data-ttu-id="d5670-315">FieldInfo.Attributes.NotSerialized</span><span class="sxs-lookup"><span data-stu-id="d5670-315">FieldInfo.Attributes.NotSerialized</span></span>|  
|<span data-ttu-id="d5670-316">MethodImplAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-316">MethodImplAttribute</span></span>|<span data-ttu-id="d5670-317">CorMethodImpl</span><span class="sxs-lookup"><span data-stu-id="d5670-317">CorMethodImpl</span></span>|<span data-ttu-id="d5670-318">MethodInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="d5670-318">MethodInfo.GetMethodImplementationFlags()</span></span><br /><br /> <span data-ttu-id="d5670-319">ConstructorInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="d5670-319">ConstructorInfo.GetMethodImplementationFlags()</span></span>|  
|<span data-ttu-id="d5670-320">MarshalAsAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-320">MarshalAsAttribute</span></span>|<span data-ttu-id="d5670-321">Vari bit.</span><span class="sxs-lookup"><span data-stu-id="d5670-321">Various bits.</span></span>|<span data-ttu-id="d5670-322">Nessuna funzione di accesso.</span><span class="sxs-lookup"><span data-stu-id="d5670-322">No accessor.</span></span>|  
|<span data-ttu-id="d5670-323">PreserveSigAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-323">PreserveSigAttribute</span></span>|<span data-ttu-id="d5670-324">CorMethodImpl.miOLE</span><span class="sxs-lookup"><span data-stu-id="d5670-324">CorMethodImpl.miOLE</span></span>|<span data-ttu-id="d5670-325">MethodInfo.GetMethodImplementationFlags().OLE</span><span class="sxs-lookup"><span data-stu-id="d5670-325">MethodInfo.GetMethodImplementationFlags().OLE</span></span><br /><br /> <span data-ttu-id="d5670-326">ConstructorInfo.GetMethodImplementationFlags().OLE</span><span class="sxs-lookup"><span data-stu-id="d5670-326">ConstructorInfo.GetMethodImplementationFlags().OLE</span></span>|  
|<span data-ttu-id="d5670-327">InAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-327">InAttribute</span></span>|<span data-ttu-id="d5670-328">CorParamAttr.pdIn</span><span class="sxs-lookup"><span data-stu-id="d5670-328">CorParamAttr.pdIn</span></span>|<span data-ttu-id="d5670-329">ParameterInfo.Attributes.In</span><span class="sxs-lookup"><span data-stu-id="d5670-329">ParameterInfo.Attributes.In</span></span>|  
|<span data-ttu-id="d5670-330">OutAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-330">OutAttribute</span></span>|<span data-ttu-id="d5670-331">CorParamAttr.pdOut</span><span class="sxs-lookup"><span data-stu-id="d5670-331">CorParamAttr.pdOut</span></span>|<span data-ttu-id="d5670-332">ParameterInfo.Attributes.Out</span><span class="sxs-lookup"><span data-stu-id="d5670-332">ParameterInfo.Attributes.Out</span></span>|  
|<span data-ttu-id="d5670-333">StructLayoutAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-333">StructLayoutAttribute</span></span>|<span data-ttu-id="d5670-334">CorTypeAttr.tdLayoutSequential</span><span class="sxs-lookup"><span data-stu-id="d5670-334">CorTypeAttr.tdLayoutSequential</span></span><br /><br /> <span data-ttu-id="d5670-335">CorTypeAttr.tdExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="d5670-335">CorTypeAttr.tdExplicitLayout</span></span><br /><br /> <span data-ttu-id="d5670-336">CorTypeAttr.tdAnsiClass</span><span class="sxs-lookup"><span data-stu-id="d5670-336">CorTypeAttr.tdAnsiClass</span></span><br /><br /> <span data-ttu-id="d5670-337">CorTypeAttr.tdUnicodeClass</span><span class="sxs-lookup"><span data-stu-id="d5670-337">CorTypeAttr.tdUnicodeClass</span></span><br /><br /> <span data-ttu-id="d5670-338">CorTypeAttr.tdAutoClass</span><span class="sxs-lookup"><span data-stu-id="d5670-338">CorTypeAttr.tdAutoClass</span></span><br /><br /> <span data-ttu-id="d5670-339">Compressione di classe.</span><span class="sxs-lookup"><span data-stu-id="d5670-339">Class packing.</span></span>|<span data-ttu-id="d5670-340">Type.Attributes.LayoutSequential</span><span class="sxs-lookup"><span data-stu-id="d5670-340">Type.Attributes.LayoutSequential</span></span><br /><br /> <span data-ttu-id="d5670-341">Type.Attributes.ExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="d5670-341">Type.Attributes.ExplicitLayout</span></span><br /><br /> <span data-ttu-id="d5670-342">Type.Attributes.AnsiClass</span><span class="sxs-lookup"><span data-stu-id="d5670-342">Type.Attributes.AnsiClass</span></span><br /><br /> <span data-ttu-id="d5670-343">Type.Attributes.UnicodeClass</span><span class="sxs-lookup"><span data-stu-id="d5670-343">Type.Attributes.UnicodeClass</span></span><br /><br /> <span data-ttu-id="d5670-344">Type.Attributes.AutoClass</span><span class="sxs-lookup"><span data-stu-id="d5670-344">Type.Attributes.AutoClass</span></span><br /><br /> <span data-ttu-id="d5670-345">Nessuna funzione di accesso.</span><span class="sxs-lookup"><span data-stu-id="d5670-345">No accessor.</span></span>|  
|<span data-ttu-id="d5670-346">FieldOffsetAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-346">FieldOffsetAttribute</span></span>|<span data-ttu-id="d5670-347">Offset di campo.</span><span class="sxs-lookup"><span data-stu-id="d5670-347">Field offset.</span></span>|<span data-ttu-id="d5670-348">Nessuna funzione di accesso.</span><span class="sxs-lookup"><span data-stu-id="d5670-348">No accessor.</span></span>|  
|<span data-ttu-id="d5670-349">AssemblyLoadAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-349">AssemblyLoadAttribute</span></span>|<span data-ttu-id="d5670-350">CorAssemblyFlags</span><span class="sxs-lookup"><span data-stu-id="d5670-350">CorAssemblyFlags</span></span>|<span data-ttu-id="d5670-351">Nessuna funzione di accesso o enumeratore.</span><span class="sxs-lookup"><span data-stu-id="d5670-351">No accessor or enumerator.</span></span>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="d5670-352">Quando viene richiamato con associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-352">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="d5670-353">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-353">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : Type * bool -&gt; obj[]&#xA;override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="assembly.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="d5670-354">Tipo per cui restituire gli attributi personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-354">The type for which the custom attributes are to be returned.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="d5670-355">Questo argomento viene ignorato per gli oggetti di tipo <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-355">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-356">Ottiene gli attributi personalizzati per questo assembly, come specificato dal tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-356">Gets the custom attributes for this assembly as specified by type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-357">Matrice contenente gli attributi personalizzati per questo assembly, come specificato da <paramref name="attributeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-357">An array that contains the custom attributes for this assembly as specified by <paramref name="attributeType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-358">Questo metodo implementa corrispondente <xref:System.Reflection.ICustomAttributeProvider> metodo di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="d5670-358">This method implements the corresponding <xref:System.Reflection.ICustomAttributeProvider> interface method.</span></span> <span data-ttu-id="d5670-359">Pertanto, il `inherit` parametro deve essere specificato anche se viene ignorata.</span><span class="sxs-lookup"><span data-stu-id="d5670-359">Therefore, the `inherit` parameter must be specified even though it is ignored.</span></span>  
  
 <span data-ttu-id="d5670-360">Un pseudo-attributo indica bits dei metadati di base che deve essere impostata quando l'attributo è presente.</span><span class="sxs-lookup"><span data-stu-id="d5670-360">A pseudo-attribute indicates bits of the core metadata that must be set when the attribute is present.</span></span> <span data-ttu-id="d5670-361">A differenza di un attributo personalizzato che estende i metadati per un tipo e viene salvato insieme al tipo, un pseudo-attributo modifica i metadati per il tipo e quindi verrà ignorato.</span><span class="sxs-lookup"><span data-stu-id="d5670-361">Unlike a custom attribute that extends the metadata for a type and is saved along with the type, a pseudo-attribute modifies the metadata for the type and then is discarded.</span></span> <span data-ttu-id="d5670-362">Alcuni dei bit risultante non sono accessibili tramite le API di reflection esistente.</span><span class="sxs-lookup"><span data-stu-id="d5670-362">Some of the resulting bits cannot be accessed using existing reflection APIs.</span></span>  
  
 <span data-ttu-id="d5670-363">Nella tabella seguente vengono riepilogati i diversi pseudo- attributi e le funzioni di accesso per i bit sono disponibili nella reflection.</span><span class="sxs-lookup"><span data-stu-id="d5670-363">The following table summarizes the different pseudo-attributes and the accessors for the bits that are available in reflection.</span></span>  
  
|<span data-ttu-id="d5670-364">Pseudo-attributo</span><span class="sxs-lookup"><span data-stu-id="d5670-364">Pseudo-Attribute</span></span>|<span data-ttu-id="d5670-365">Bit di metadati</span><span class="sxs-lookup"><span data-stu-id="d5670-365">Metadata Bits</span></span>|<span data-ttu-id="d5670-366">Funzione di accesso di Reflection</span><span class="sxs-lookup"><span data-stu-id="d5670-366">Reflection Accessor</span></span>|  
|-----------------------|-------------------|-------------------------|  
|<span data-ttu-id="d5670-367">DllImportAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-367">DllImportAttribute</span></span>|<span data-ttu-id="d5670-368">CorPInvokeMap</span><span class="sxs-lookup"><span data-stu-id="d5670-368">CorPInvokeMap</span></span><br /><br /> <span data-ttu-id="d5670-369">Nome della DLL</span><span class="sxs-lookup"><span data-stu-id="d5670-369">DLL name</span></span>|<span data-ttu-id="d5670-370">Nessuna funzione di accesso per PInvokeMap per gli attributi del metodo metodo ordinario/globale.</span><span class="sxs-lookup"><span data-stu-id="d5670-370">No accessor for PInvokeMap for ordinary method/global method attributes.</span></span><br /><br /> <span data-ttu-id="d5670-371">Nessuna funzione di accesso per nome della DLL.</span><span class="sxs-lookup"><span data-stu-id="d5670-371">No accessor for DLL name.</span></span>|  
|<span data-ttu-id="d5670-372">GuidAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-372">GuidAttribute</span></span>|<span data-ttu-id="d5670-373">Archiviato come un attributo personalizzato reale.</span><span class="sxs-lookup"><span data-stu-id="d5670-373">Stored as a real custom attribute.</span></span>|<span data-ttu-id="d5670-374">Accedere come un attributo personalizzato reale.</span><span class="sxs-lookup"><span data-stu-id="d5670-374">Accessed as a real custom attribute.</span></span>|  
|<span data-ttu-id="d5670-375">ComImportAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-375">ComImportAttribute</span></span>|<span data-ttu-id="d5670-376">CorTypeAttr.tdImport</span><span class="sxs-lookup"><span data-stu-id="d5670-376">CorTypeAttr.tdImport</span></span>|<span data-ttu-id="d5670-377">Type.Attributes.Import</span><span class="sxs-lookup"><span data-stu-id="d5670-377">Type.Attributes.Import</span></span>|  
|<span data-ttu-id="d5670-378">SerializableAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-378">SerializableAttribute</span></span>|<span data-ttu-id="d5670-379">CorTypeAttr.tdSerializable</span><span class="sxs-lookup"><span data-stu-id="d5670-379">CorTypeAttr.tdSerializable</span></span>|<span data-ttu-id="d5670-380">Type.Attributes.Serializable</span><span class="sxs-lookup"><span data-stu-id="d5670-380">Type.Attributes.Serializable</span></span>|  
|<span data-ttu-id="d5670-381">NonSerializedAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-381">NonSerializedAttribute</span></span>|<span data-ttu-id="d5670-382">CorFieldAttr.fdNotSerialized</span><span class="sxs-lookup"><span data-stu-id="d5670-382">CorFieldAttr.fdNotSerialized</span></span>|<span data-ttu-id="d5670-383">FieldInfo.Attributes.NotSerialized</span><span class="sxs-lookup"><span data-stu-id="d5670-383">FieldInfo.Attributes.NotSerialized</span></span>|  
|<span data-ttu-id="d5670-384">MethodImplAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-384">MethodImplAttribute</span></span>|<span data-ttu-id="d5670-385">CorMethodImpl</span><span class="sxs-lookup"><span data-stu-id="d5670-385">CorMethodImpl</span></span>|<span data-ttu-id="d5670-386">MethodInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="d5670-386">MethodInfo.GetMethodImplementationFlags()</span></span><br /><br /> <span data-ttu-id="d5670-387">ConstructorInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="d5670-387">ConstructorInfo.GetMethodImplementationFlags()</span></span>|  
|<span data-ttu-id="d5670-388">MarshalAsAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-388">MarshalAsAttribute</span></span>|<span data-ttu-id="d5670-389">Vari bit.</span><span class="sxs-lookup"><span data-stu-id="d5670-389">Various bits.</span></span>|<span data-ttu-id="d5670-390">Nessuna funzione di accesso.</span><span class="sxs-lookup"><span data-stu-id="d5670-390">No accessor.</span></span>|  
|<span data-ttu-id="d5670-391">PreserveSigAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-391">PreserveSigAttribute</span></span>|<span data-ttu-id="d5670-392">CorMethodImpl.miOLE</span><span class="sxs-lookup"><span data-stu-id="d5670-392">CorMethodImpl.miOLE</span></span>|<span data-ttu-id="d5670-393">MethodInfo.GetMethodImplementationFlags().OLE</span><span class="sxs-lookup"><span data-stu-id="d5670-393">MethodInfo.GetMethodImplementationFlags().OLE</span></span><br /><br /> <span data-ttu-id="d5670-394">ConstructorInfo.GetMethodImplementationFlags().OLE</span><span class="sxs-lookup"><span data-stu-id="d5670-394">ConstructorInfo.GetMethodImplementationFlags().OLE</span></span>|  
|<span data-ttu-id="d5670-395">InAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-395">InAttribute</span></span>|<span data-ttu-id="d5670-396">CorParamAttr.pdIn</span><span class="sxs-lookup"><span data-stu-id="d5670-396">CorParamAttr.pdIn</span></span>|<span data-ttu-id="d5670-397">ParameterInfo.Attributes.In</span><span class="sxs-lookup"><span data-stu-id="d5670-397">ParameterInfo.Attributes.In</span></span>|  
|<span data-ttu-id="d5670-398">OutAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-398">OutAttribute</span></span>|<span data-ttu-id="d5670-399">CorParamAttr.pdOut</span><span class="sxs-lookup"><span data-stu-id="d5670-399">CorParamAttr.pdOut</span></span>|<span data-ttu-id="d5670-400">ParameterInfo.Attributes.Out</span><span class="sxs-lookup"><span data-stu-id="d5670-400">ParameterInfo.Attributes.Out</span></span>|  
|<span data-ttu-id="d5670-401">StructLayoutAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-401">StructLayoutAttribute</span></span>|<span data-ttu-id="d5670-402">CorTypeAttr.tdLayoutSequential</span><span class="sxs-lookup"><span data-stu-id="d5670-402">CorTypeAttr.tdLayoutSequential</span></span><br /><br /> <span data-ttu-id="d5670-403">CorTypeAttr.tdExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="d5670-403">CorTypeAttr.tdExplicitLayout</span></span><br /><br /> <span data-ttu-id="d5670-404">CorTypeAttr.tdAnsiClass</span><span class="sxs-lookup"><span data-stu-id="d5670-404">CorTypeAttr.tdAnsiClass</span></span><br /><br /> <span data-ttu-id="d5670-405">CorTypeAttr.tdUnicodeClass</span><span class="sxs-lookup"><span data-stu-id="d5670-405">CorTypeAttr.tdUnicodeClass</span></span><br /><br /> <span data-ttu-id="d5670-406">CorTypeAttr.tdAutoClass</span><span class="sxs-lookup"><span data-stu-id="d5670-406">CorTypeAttr.tdAutoClass</span></span><br /><br /> <span data-ttu-id="d5670-407">Compressione di classe.</span><span class="sxs-lookup"><span data-stu-id="d5670-407">Class packing.</span></span>|<span data-ttu-id="d5670-408">Type.Attributes.LayoutSequential</span><span class="sxs-lookup"><span data-stu-id="d5670-408">Type.Attributes.LayoutSequential</span></span><br /><br /> <span data-ttu-id="d5670-409">Type.Attributes.ExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="d5670-409">Type.Attributes.ExplicitLayout</span></span><br /><br /> <span data-ttu-id="d5670-410">Type.Attributes.AnsiClass</span><span class="sxs-lookup"><span data-stu-id="d5670-410">Type.Attributes.AnsiClass</span></span><br /><br /> <span data-ttu-id="d5670-411">Type.Attributes.UnicodeClass</span><span class="sxs-lookup"><span data-stu-id="d5670-411">Type.Attributes.UnicodeClass</span></span><br /><br /> <span data-ttu-id="d5670-412">Type.Attributes.AutoClass</span><span class="sxs-lookup"><span data-stu-id="d5670-412">Type.Attributes.AutoClass</span></span><br /><br /> <span data-ttu-id="d5670-413">Nessuna funzione di accesso.</span><span class="sxs-lookup"><span data-stu-id="d5670-413">No accessor.</span></span>|  
|<span data-ttu-id="d5670-414">FieldOffsetAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-414">FieldOffsetAttribute</span></span>|<span data-ttu-id="d5670-415">Offset di campo.</span><span class="sxs-lookup"><span data-stu-id="d5670-415">Field offset.</span></span>|<span data-ttu-id="d5670-416">Nessuna funzione di accesso.</span><span class="sxs-lookup"><span data-stu-id="d5670-416">No accessor.</span></span>|  
|<span data-ttu-id="d5670-417">AssemblyLoadAttribute</span><span class="sxs-lookup"><span data-stu-id="d5670-417">AssemblyLoadAttribute</span></span>|<span data-ttu-id="d5670-418">CorAssemblyFlags</span><span class="sxs-lookup"><span data-stu-id="d5670-418">CorAssemblyFlags</span></span>|<span data-ttu-id="d5670-419">Nessuna funzione di accesso o enumeratore.</span><span class="sxs-lookup"><span data-stu-id="d5670-419">No accessor or enumerator.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-420">
            <paramref name="attributeType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-420">
              <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-421">
            <paramref name="attributeType" /> non è un tipo da runtime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-421">
              <paramref name="attributeType" /> is not a runtime type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="d5670-422">Quando viene richiamato con associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-422">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="d5670-423">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-423">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;&#xA;override this.GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="assembly.GetCustomAttributesData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5670-424">Restituisce informazioni sugli attributi applicati all'oggetto <see cref="T:System.Reflection.Assembly" /> corrente, espresse sotto forma di oggetti <see cref="T:System.Reflection.CustomAttributeData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-424">Returns information about the attributes that have been applied to the current <see cref="T:System.Reflection.Assembly" />, expressed as <see cref="T:System.Reflection.CustomAttributeData" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-425">Elenco generico di oggetti <see cref="T:System.Reflection.CustomAttributeData" /> che rappresentano i dati relativi agli attributi applicati all'assembly corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-425">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-426">Utilizzare questo metodo per esaminare gli attributi personalizzati del codice nel contesto ReflectionOnly, in casi in cui gli attributi personalizzati sono definiti nel codice caricato nel contesto reflection-only.</span><span class="sxs-lookup"><span data-stu-id="d5670-426">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="d5670-427">Metodi come <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> e <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> non può essere utilizzato in questi casi, poiché creano le istanze degli attributi.</span><span class="sxs-lookup"><span data-stu-id="d5670-427">Methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="d5670-428">Impossibile eseguire codice nel contesto reflection-only.</span><span class="sxs-lookup"><span data-stu-id="d5670-428">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="d5670-429">Per ulteriori informazioni e ad esempio di codice, vedere il <xref:System.Reflection.CustomAttributeData> classe.</span><span class="sxs-lookup"><span data-stu-id="d5670-429">For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntryAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetEntryAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetEntryAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetEntryAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEntryAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetEntryAssembly();" />
      <MemberSignature Language="F#" Value="static member GetEntryAssembly : unit -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.GetEntryAssembly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5670-430">Ottiene l'eseguibile del processo nel dominio applicazione predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-430">Gets the process executable in the default application domain.</span>
          </span>
          <span data-ttu-id="d5670-431">In altri domini applicazione, si tratta del primo eseguibile eseguito da <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-431">In other application domains, this is the first executable that was executed by <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-432">Assembly che rappresenta l'eseguibile del processo nel dominio applicazione predefinito oppure il primo eseguibile eseguito da <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-432">The assembly that is the process executable in the default application domain, or the first executable that was executed by <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span>
          </span>
          <span data-ttu-id="d5670-433">Può restituire <see langword="null" /> se chiamato da codice non gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-433">Can return <see langword="null" /> when called from unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-434">Il <xref:System.Reflection.Assembly.GetEntryAssembly%2A> metodo può restituire `null` quando un assembly gestito è stato caricato da un'applicazione non gestita.</span><span class="sxs-lookup"><span data-stu-id="d5670-434">The <xref:System.Reflection.Assembly.GetEntryAssembly%2A> method can return `null` when a managed assembly has been loaded from an unmanaged application.</span></span> <span data-ttu-id="d5670-435">Se, ad esempio, un'applicazione non gestita crea un'istanza di un componente COM scritto in c#, una chiamata al <xref:System.Reflection.Assembly.GetEntryAssembly%2A> metodo dal componente c# restituisce null, perché il punto di ingresso per il processo è stato codice non gestito anziché a un assembly gestito.</span><span class="sxs-lookup"><span data-stu-id="d5670-435">For example, if an unmanaged application creates an instance of a COM component written in C#, a call to the <xref:System.Reflection.Assembly.GetEntryAssembly%2A> method from the C# component returns null, because the entry point for the process was unmanaged code rather than a managed assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExecutingAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetExecutingAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetExecutingAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetExecutingAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExecutingAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetExecutingAssembly();" />
      <MemberSignature Language="F#" Value="static member GetExecutingAssembly : unit -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.GetExecutingAssembly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5670-436">Ottiene l'assembly che contiene il codice attualmente in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-436">Gets the assembly that contains the code that is currently executing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-437">Assembly che contiene il codice attualmente in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-437">The assembly that contains the code that is currently executing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-438">Per motivi di prestazioni, è necessario chiamare questo metodo solo quando non si conosce in fase di progettazione quali assembly attualmente in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="d5670-438">For performance reasons, you should call this method only when you do not know at design time what assembly is currently executing.</span></span> <span data-ttu-id="d5670-439">Il metodo consigliato per recuperare un' <xref:System.Reflection.Assembly> oggetto che rappresenta l'assembly corrente consiste nell'utilizzare il <xref:System.Type.Assembly%2A?displayProperty=nameWithType> proprietà di un tipo trovato nell'assembly, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="d5670-439">The recommended way to retrieve an <xref:System.Reflection.Assembly> object that represents the current assembly is to use the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property of a type found in the assembly, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.GetExecutingAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cs/assembly1.cs#1)]
 [!code-vb[System.Reflection.Assembly.GetExecutingAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="d5670-440">Per ottenere l'assembly che contiene il metodo che ha chiamato il codice attualmente in esecuzione, usare <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5670-440">To get the assembly that contains the method that called the currently executing code, use <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5670-441">L'esempio seguente usa il <xref:System.Type.Assembly%2A?displayProperty=nameWithType> basata su proprietà per ottenere l'assembly attualmente in esecuzione su un tipo di contenuti in tale assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-441">The following example uses the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property to get the currently executing assembly based on a type contained in that assembly.</span></span> <span data-ttu-id="d5670-442">Chiama anche il <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> metodo per mostrare che restituisca un <xref:System.Reflection.Assembly> oggetto che rappresenta lo stesso assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-442">It also calls the <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> method to show that it returns an <xref:System.Reflection.Assembly> object that represents the same assembly.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cpp/getexecutingassembly1.cpp#5)]
 [!code-csharp[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cs/getexecutingassembly1.cs#5)]
 [!code-vb[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/vb/getexecutingassembly1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportedTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetExportedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetExportedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExportedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetExportedTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetExportedTypes : unit -&gt; Type[]&#xA;override this.GetExportedTypes : unit -&gt; Type[]" Usage="assembly.GetExportedTypes " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetExportedTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5670-443">Ottiene i tipi pubblici definiti nell'assembly visibili all'esterno dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-443">Gets the public types defined in this assembly that are visible outside the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-444">Matrice che rappresenta i tipi definiti nell'assembly visibili all'esterno dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-444">An array that represents the types defined in this assembly that are visible outside the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-445">Gli unici tipi visibili all'esterno di un assembly sono i tipi pubblici e i tipi pubblici annidati all'interno di altri tipi pubblici.</span><span class="sxs-lookup"><span data-stu-id="d5670-445">The only types visible outside an assembly are public types and public types nested within other public types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5670-446">L'esempio di codice seguente definisce una serie di classi con vari livelli di accesso e le chiamate <xref:System.Reflection.Assembly.GetExportedTypes%2A> per visualizzare quelli che sono visibili all'esterno dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-446">The following code sample defines a number of classes with various access levels, and calls <xref:System.Reflection.Assembly.GetExportedTypes%2A> to display the ones that are visible from outside the assembly.</span></span>  
  
 [!code-cpp[Assembly.GetExportedTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.GetExportedTypes/CPP/source.cpp#1)]
 [!code-csharp[Assembly.GetExportedTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.GetExportedTypes/CS/source.cs#1)]
 [!code-vb[Assembly.GetExportedTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.GetExportedTypes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d5670-447">L'assembly è un assembly dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-447">The assembly is a dynamic assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-448">Non è possibile caricare un assembly dipendente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-448">Unable to load a dependent assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream GetFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream GetFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFile (name As String) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::FileStream ^ GetFile(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetFile : string -&gt; System.IO.FileStream&#xA;override this.GetFile : string -&gt; System.IO.FileStream" Usage="assembly.GetFile name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFile(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d5670-449">Nome del file specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-449">The name of the specified file.</span>
          </span>
          <span data-ttu-id="d5670-450">Non includere il percorso del file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-450">Do not include the path to the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-451">Ottiene un oggetto <see cref="T:System.IO.FileStream" /> per il file specificato nella tabella file del manifesto dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-451">Gets a <see cref="T:System.IO.FileStream" /> for the specified file in the file table of the manifest of this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-452">Flusso che contiene il file specificato o <see langword="null" /> se il file non viene trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-452">A stream that contains the specified file, or <see langword="null" /> if the file is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-453">Questo metodo funziona in entrambi i file di risorse pubbliche e private.</span><span class="sxs-lookup"><span data-stu-id="d5670-453">This method works on both public and private resource files.</span></span>  
  
 <span data-ttu-id="d5670-454">Il `name` non deve includere il percorso del file.</span><span class="sxs-lookup"><span data-stu-id="d5670-454">The `name` should not include the path to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-455">Non è stato possibile caricare un file trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-455">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-456">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-456">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-457">Il parametro <paramref name="name" /> è una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-457">The <paramref name="name" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-458">Il parametro <paramref name="name" /> non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-458">
              <paramref name="name" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-459">
            <paramref name="name" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-459">
              <paramref name="name" /> is not a valid assembly.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="d5670-460">per l'accesso al percorso e per la lettura del file specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-460">for access to the path and for reading the specified file.</span>
          </span>
          <span data-ttu-id="d5670-461">Enumerazioni associate: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> e <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-461">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-462">Ottiene i file della tabella file di un manifesto dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-462">Gets the files in the file table of an assembly manifest.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFiles () As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="abstract member GetFiles : unit -&gt; System.IO.FileStream[]&#xA;override this.GetFiles : unit -&gt; System.IO.FileStream[]" Usage="assembly.GetFiles " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFiles</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5670-463">Ottiene i file della tabella file di un manifesto dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-463">Gets the files in the file table of an assembly manifest.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-464">Matrice di flussi che contengono i file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-464">An array of streams that contain the files.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-465">Questo metodo funziona per i file di risorse pubbliche e private.</span><span class="sxs-lookup"><span data-stu-id="d5670-465">This method works on public and private resource files.</span></span>  
  
 <span data-ttu-id="d5670-466">Questo overload equivale alla chiamata di <xref:System.Reflection.Assembly.GetFiles%28System.Boolean%29> overload e specificando `false`.</span><span class="sxs-lookup"><span data-stu-id="d5670-466">This overload is equivalent to calling the <xref:System.Reflection.Assembly.GetFiles%28System.Boolean%29> overload and specifying `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-467">Non è stato possibile caricare un file trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-467">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-468">File non trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-468">A file was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-469">Un file non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-469">A file was not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream[] GetFiles (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFiles(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFiles (getResourceModules As Boolean) As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetFiles : bool -&gt; System.IO.FileStream[]&#xA;override this.GetFiles : bool -&gt; System.IO.FileStream[]" Usage="assembly.GetFiles getResourceModules" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="d5670-470">
            <see langword="true" /> per includere i moduli delle risorse; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-470">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-471">Ottiene i file della tabella file di un manifesto dell'assembly, specificando se includere i moduli delle risorse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-471">Gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-472">Matrice di flussi che contengono i file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-472">An array of streams that contain the files.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-473">Questo metodo funziona per i file di risorse pubbliche e private.</span><span class="sxs-lookup"><span data-stu-id="d5670-473">This method works on public and private resource files.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-474">Non è stato possibile caricare un file trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-474">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-475">File non trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-475">A file was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-476">Un file non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-476">A file was not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetForwardedTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetForwardedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetForwardedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetForwardedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetForwardedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetForwardedTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetForwardedTypes : unit -&gt; Type[]&#xA;override this.GetForwardedTypes : unit -&gt; Type[]" Usage="assembly.GetForwardedTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="assembly.GetHashCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5670-477">Restituisce il codice hash per l'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-477">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-478">Codice hash di un intero con segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-478">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLoadedModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-479">Ottiene tutti i moduli caricati che fanno parte di questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-479">Gets all the loaded modules that are part of this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetLoadedModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetLoadedModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules();" />
      <MemberSignature Language="F#" Value="abstract member GetLoadedModules : unit -&gt; System.Reflection.Module[]&#xA;override this.GetLoadedModules : unit -&gt; System.Reflection.Module[]" Usage="assembly.GetLoadedModules " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetLoadedModules</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5670-480">Ottiene tutti i moduli caricati che fanno parte di questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-480">Gets all the loaded modules that are part of this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-481">Matrice di moduli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-481">An array of modules.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module[] GetLoadedModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLoadedModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetLoadedModules : bool -&gt; System.Reflection.Module[]&#xA;override this.GetLoadedModules : bool -&gt; System.Reflection.Module[]" Usage="assembly.GetLoadedModules getResourceModules" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="d5670-482">
            <see langword="true" /> per includere i moduli delle risorse; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-482">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-483">Ottiene tutti i moduli caricati che fanno parte di questo assembly, specificando se includere i moduli delle risorse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-483">Gets all the loaded modules that are part of this assembly, specifying whether to include resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-484">Matrice di moduli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-484">An array of modules.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceInfo">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceInfo (resourceName As String) As ManifestResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::ManifestResourceInfo ^ GetManifestResourceInfo(System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceInfo : string -&gt; System.Reflection.ManifestResourceInfo&#xA;override this.GetManifestResourceInfo : string -&gt; System.Reflection.ManifestResourceInfo" Usage="assembly.GetManifestResourceInfo resourceName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ManifestResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName">
          <span data-ttu-id="d5670-485">Nome della risorsa con distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-485">The case-sensitive name of the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-486">Restituisce informazioni sul modo in cui la risorsa specificata è stata resa persistente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-486">Returns information about how the given resource has been persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-487">Oggetto popolato con informazioni relative alla topologia della risorsa oppure <see langword="null" /> se la risorsa non viene trovata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-487">An object that is populated with information about the resource's topology, or <see langword="null" /> if the resource is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-488">Informazioni sulle risorse viene restituite solo se la risorsa è visibile al chiamante oppure il chiamante ha <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="d5670-488">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-489">
            <paramref name="resourceName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-489">
              <paramref name="resourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-490">Il parametro <paramref name="resourceName" /> è una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-490">The <paramref name="resourceName" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="d5670-491">Quando viene richiamato con associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-491">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="d5670-492">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-492">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceNames">
      <MemberSignature Language="C#" Value="public virtual string[] GetManifestResourceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetManifestResourceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetManifestResourceNames();" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceNames : unit -&gt; string[]&#xA;override this.GetManifestResourceNames : unit -&gt; string[]" Usage="assembly.GetManifestResourceNames " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5670-493">Restituisce i nomi di tutte le risorse di questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-493">Returns the names of all the resources in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-494">Matrice che contiene i nomi di tutte le risorse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-494">An array that contains the names of all the resources.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-495">È possibile utilizzare ogni nome di risorsa nella matrice restituita da questo metodo come indicato di seguito:</span><span class="sxs-lookup"><span data-stu-id="d5670-495">You can use each resource name in the array returned by this method as follows:</span></span>  
  
-   <span data-ttu-id="d5670-496">È possibile passare il nome della risorsa per il <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> metodo per ottenere ulteriori informazioni sulla risorsa.</span><span class="sxs-lookup"><span data-stu-id="d5670-496">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> method to get additional information about the resource.</span></span>  
  
-   <span data-ttu-id="d5670-497">Se il nome identifica un file con estensione resources binari, è possibile rimuovere l'estensione del file. Resources e passarlo al <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=nameWithType> costruttore per creare un'istanza di gestione risorse.</span><span class="sxs-lookup"><span data-stu-id="d5670-497">If the name identifies a binary .resources file, you can remove its .resources file extension and pass it to the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=nameWithType> constructor to instantiate the resource manager.</span></span>  
  
-   <span data-ttu-id="d5670-498">È possibile passare il nome della risorsa per il <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> metodo per recuperare un <xref:System.IO.Stream> oggetto che è quindi possibile passare il <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> costruttore.</span><span class="sxs-lookup"><span data-stu-id="d5670-498">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method to retrieve a <xref:System.IO.Stream> object that you can then pass to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> constructor.</span></span>  
  
-   <span data-ttu-id="d5670-499">È possibile passare il nome della risorsa per il <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> metodo per recuperare un <xref:System.IO.Stream> oggetto che è quindi possibile passare il <xref:System.Resources.ResourceSet.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> costruttore.</span><span class="sxs-lookup"><span data-stu-id="d5670-499">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method to retrieve a <xref:System.IO.Stream> object that you can then pass to the <xref:System.Resources.ResourceSet.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> constructor.</span></span>  
  
 <span data-ttu-id="d5670-500">Informazioni sulle risorse viene restituite solo se la risorsa è visibile al chiamante oppure il chiamante ha <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="d5670-500">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="d5670-501">Quando viene richiamato con associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-501">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="d5670-502">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-502">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetManifestResourceStream">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-503">Carica la risorsa del manifesto specificata da questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-503">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetManifestResourceStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetManifestResourceStream(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceStream : string -&gt; System.IO.Stream&#xA;override this.GetManifestResourceStream : string -&gt; System.IO.Stream" Usage="assembly.GetManifestResourceStream name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d5670-504">Nome della risorsa del manifesto richiesta con distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-504">The case-sensitive name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-505">Carica la risorsa del manifesto specificata da questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-505">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-506">Risorsa di manifesto oppure <see langword="null" /> se non vengono specificate risorse durante la compilazione o se la risorsa non è visibile al chiamante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-506">The manifest resource; or <see langword="null" /> if no resources were specified during compilation or if the resource is not visible to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-507">Una risorsa di manifesto è una risorsa incorporata nell'assembly in fase di compilazione (ad esempio un file di immagine).</span><span class="sxs-lookup"><span data-stu-id="d5670-507">A manifest resource is a resource (such as an image file) that is embedded in the assembly at compile time.</span></span> <span data-ttu-id="d5670-508">Per ulteriori informazioni sulle risorse di manifesto, vedere [nozioni di base di Microsoft .NET Framework risorsa](http://go.microsoft.com/fwlink/?LinkId=204554) in MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="d5670-508">For more information about manifest resources, see [Microsoft .NET Framework Resource Basics](http://go.microsoft.com/fwlink/?LinkId=204554) in the MSDN Library.</span></span>  
  
 <span data-ttu-id="d5670-509">Informazioni sulle risorse viene restituite solo se la risorsa è visibile al chiamante oppure il chiamante ha <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="d5670-509">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-510">Questo metodo restituisce `null` se si accede a una risorsa privata in un altro assembly e il chiamante non dispone <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="d5670-510">This method returns `null` if a private resource in another assembly is accessed and the caller does not have <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="d5670-511">Se il manifesto dell'assembly include il file di risorse <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> restituisce un <xref:System.IO.Stream> anche se il file di risorse non può essere disponibile su disco al momento dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="d5670-511">If the assembly manifest lists a resource file, <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> returns a <xref:System.IO.Stream> object even if the resource file cannot be found on disk at the time.</span></span> <span data-ttu-id="d5670-512">Se non viene trovato il file di risorse, passando il valore risultante <xref:System.IO.Stream> dell'oggetto per il <xref:System.Resources.ResourceReader> cause costruttore un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="d5670-512">If the resource file is not found, passing the resulting <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader> constructor causes an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-513">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-513">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-514">Il parametro <paramref name="name" /> è una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-514">The <paramref name="name" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-515">
            <block subset="none" type="note">
              <para> In [.NET per le app Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) o nella [libreria di classi portabile](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), individuare in alternativa l'eccezione della classe base <see cref="T:System.IO.IOException" />.  </para>
            </block>  Non è stato possibile caricare un file trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-515">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.  </para>
              </block>  A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-516">Il parametro <paramref name="name" /> non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-516">
              <paramref name="name" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-517">
            <paramref name="name" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-517">
              <paramref name="name" /> is not a valid assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d5670-518">La lunghezza della risorsa è maggiore di <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-518">Resource length is greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="d5670-519">Quando viene richiamato con associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-519">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="d5670-520">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-520">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetManifestResourceStream (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetManifestResourceStream(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceStream : Type * string -&gt; System.IO.Stream&#xA;override this.GetManifestResourceStream : Type * string -&gt; System.IO.Stream" Usage="assembly.GetManifestResourceStream (type, name)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="d5670-521">Tipo il cui spazio dei nomi viene usato per definire l'ambito del nome della risorsa del manifesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-521">The type whose namespace is used to scope the manifest resource name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="d5670-522">Nome della risorsa del manifesto richiesta con distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-522">The case-sensitive name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-523">Carica la risorsa del manifesto specificata, definita per l'ambito dallo spazio dei nomi del tipo specificato, da questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-523">Loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-524">Risorsa di manifesto oppure <see langword="null" /> se non vengono specificate risorse durante la compilazione o se la risorsa non è visibile al chiamante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-524">The manifest resource; or <see langword="null" /> if no resources were specified during compilation or if the resource is not visible to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-525">Se, ad esempio, il nome completo specificato per `type` è "MyNameSpace. MyClasses" e `name` è "Net", questo metodo di overload Cerca una risorsa denominata "MyNameSpace.Net".</span><span class="sxs-lookup"><span data-stu-id="d5670-525">For example, if the full name specified for `type` is "MyNameSpace.MyClasses" and `name` is "Net", this method overload searches for a resource named "MyNameSpace.Net".</span></span>  
  
 <span data-ttu-id="d5670-526">Una risorsa di manifesto è una risorsa incorporata nell'assembly in fase di compilazione (ad esempio un file di immagine).</span><span class="sxs-lookup"><span data-stu-id="d5670-526">A manifest resource is a resource (such as an image file) that is embedded in the assembly at compile time.</span></span> <span data-ttu-id="d5670-527">Per ulteriori informazioni sulle risorse di manifesto, vedere [nozioni di base di Microsoft .NET Framework risorsa](http://go.microsoft.com/fwlink/?LinkId=204554) in MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="d5670-527">For more information about manifest resources, see [Microsoft .NET Framework Resource Basics](http://go.microsoft.com/fwlink/?LinkId=204554) in the MSDN Library.</span></span>  
  
 <span data-ttu-id="d5670-528">Informazioni sulle risorse viene restituite solo se la risorsa è visibile al chiamante oppure il chiamante ha <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="d5670-528">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-529">Questo metodo restituisce `null` se si accede a una risorsa privata in un altro assembly e il chiamante non dispone <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="d5670-529">This method returns `null` if a private resource in another assembly is accessed and the caller does not have <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="d5670-530">Se il manifesto dell'assembly include il file di risorse <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> restituisce un <xref:System.IO.Stream> anche se il file di risorse non può essere disponibile su disco al momento dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="d5670-530">If the assembly manifest lists a resource file, <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> returns a <xref:System.IO.Stream> object even if the resource file cannot be found on disk at the time.</span></span> <span data-ttu-id="d5670-531">Se non viene trovato il file di risorse, passando il valore risultante <xref:System.IO.Stream> dell'oggetto per il <xref:System.Resources.ResourceReader> cause costruttore un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="d5670-531">If the resource file is not found, passing the resulting <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader> constructor causes an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-532">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-532">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-533">Il parametro <paramref name="name" /> è una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-533">The <paramref name="name" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-534">Non è stato possibile caricare un file trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-534">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-535">Il parametro <paramref name="name" /> non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-535">
              <paramref name="name" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-536">
            <paramref name="name" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-536">
              <paramref name="name" /> is not a valid assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d5670-537">La lunghezza della risorsa è maggiore di <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-537">Resource length is greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="d5670-538">Quando viene richiamato con associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-538">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="d5670-539">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-539">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module GetModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module GetModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModule (name As String) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ GetModule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetModule : string -&gt; System.Reflection.Module&#xA;override this.GetModule : string -&gt; System.Reflection.Module" Usage="assembly.GetModule name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModule(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d5670-540">Nome del modulo richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-540">The name of the module being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-541">Ottiene il modulo specificato in questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-541">Gets the specified module in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-542">Modulo richiesto o <see langword="null" /> se il modulo non viene trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-542">The module being requested, or <see langword="null" /> if the module is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-543">Questo metodo funziona sui nomi di file.</span><span class="sxs-lookup"><span data-stu-id="d5670-543">This method works on file names.</span></span>  
  
 <span data-ttu-id="d5670-544">Classi di `Reflection.Emit` dello spazio dei nomi generare il nome dell'ambito per un modulo dinamico.</span><span class="sxs-lookup"><span data-stu-id="d5670-544">Classes in the `Reflection.Emit` namespace emit the scope name for a dynamic module.</span></span> <span data-ttu-id="d5670-545">Il nome ambito può essere determinato mediante la <xref:System.Reflection.Module.ScopeName%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d5670-545">The scope name can be determined by the <xref:System.Reflection.Module.ScopeName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d5670-546">Passare il tipo di modulo che si desidera `Assembly.GetModule`.</span><span class="sxs-lookup"><span data-stu-id="d5670-546">Pass the kind of module you want to `Assembly.GetModule`.</span></span> <span data-ttu-id="d5670-547">Ad esempio, se si desidera che il modulo che contiene il manifesto dell'assembly, passare il nome dell'ambito del modulo da `GetModule`.</span><span class="sxs-lookup"><span data-stu-id="d5670-547">For example, if you want the module that contains the assembly manifest, pass the scope name of the module to `GetModule`.</span></span> <span data-ttu-id="d5670-548">In caso contrario, passare il nome del file del modulo.</span><span class="sxs-lookup"><span data-stu-id="d5670-548">Otherwise, pass the file name of the module.</span></span> <span data-ttu-id="d5670-549">Gli assembly caricati da una del `Load` metodi che hanno un parametro byte [] contengono un solo modulo, ovvero il modulo del manifesto.</span><span class="sxs-lookup"><span data-stu-id="d5670-549">Assemblies loaded by one of the `Load` methods that have a byte[] parameter have only one module, and that is the manifest module.</span></span> <span data-ttu-id="d5670-550">Ricercare sempre questi moduli utilizzando il nome dell'ambito.</span><span class="sxs-lookup"><span data-stu-id="d5670-550">Always seek these modules using the scope name.</span></span>  
  
 <span data-ttu-id="d5670-551">Un tipo può essere recuperato da un modulo specifico tramite <xref:System.Reflection.Module.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5670-551">A type can be retrieved from a specific module using <xref:System.Reflection.Module.GetType%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d5670-552">La chiamata `Module.GetType` sul modulo che contiene il manifesto non verrà avviata una ricerca dell'intero assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-552">Calling `Module.GetType` on the module containing the manifest will not initiate a search of the entire assembly.</span></span> <span data-ttu-id="d5670-553">Per recuperare un tipo da un assembly, indipendentemente dalla quale è in, è necessario chiamare <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5670-553">To retrieve a type from an assembly, regardless of which module it is in, you must call <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-554">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-554">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-555">Il parametro <paramref name="name" /> è una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-555">The <paramref name="name" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-556">Non è stato possibile caricare un file trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-556">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-557">Il parametro <paramref name="name" /> non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-557">
              <paramref name="name" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-558">
            <paramref name="name" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-558">
              <paramref name="name" /> is not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-559">Ottiene tutti i moduli che fanno parte di questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-559">Gets all the modules that are part of this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules();" />
      <MemberSignature Language="F#" Value="abstract member GetModules : unit -&gt; System.Reflection.Module[]&#xA;override this.GetModules : unit -&gt; System.Reflection.Module[]" Usage="assembly.GetModules " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModules</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5670-560">Ottiene tutti i moduli che fanno parte di questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-560">Gets all the modules that are part of this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-561">Matrice di moduli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-561">An array of modules.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-562">Questo metodo funziona per i file di risorse pubbliche e private.</span><span class="sxs-lookup"><span data-stu-id="d5670-562">This method works on public and private resource files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-563">I moduli devono essere inviati con estensioni di file.</span><span class="sxs-lookup"><span data-stu-id="d5670-563">Modules must be emitted with file name extensions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5670-564">Nell'esempio seguente visualizza il nome del modulo nella matrice restituita che contiene il manifesto dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-564">The following example displays the name of the module in the returned array that contains the assembly manifest.</span></span>  
  
 [!code-cpp[Classic Assembly.GetModules Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Assembly.GetModules Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/CS/source.cs#1)]
 [!code-vb[Classic Assembly.GetModules Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-565">Il modulo da caricare non specifica un'estensione di file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-565">The module to be loaded does not specify a file name extension.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module[] GetModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetModules : bool -&gt; System.Reflection.Module[]&#xA;override this.GetModules : bool -&gt; System.Reflection.Module[]" Usage="assembly.GetModules getResourceModules" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="d5670-566">
            <see langword="true" /> per includere i moduli delle risorse; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-566">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-567">Ottiene tutti i moduli che fanno parte di questo assembly, specificando se includere i moduli delle risorse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-567">Gets all the modules that are part of this assembly, specifying whether to include resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-568">Matrice di moduli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-568">An array of modules.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-569">Questo metodo funziona per i file di risorse pubbliche e private.</span><span class="sxs-lookup"><span data-stu-id="d5670-569">This method works on public and private resource files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-570">I moduli devono essere inviati con estensioni di file.</span><span class="sxs-lookup"><span data-stu-id="d5670-570">Modules must be emitted with file name extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetName">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-571">Ottiene un oggetto <see cref="T:System.Reflection.AssemblyName" /> per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-571">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName GetName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetName () As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::AssemblyName ^ GetName();" />
      <MemberSignature Language="F#" Value="abstract member GetName : unit -&gt; System.Reflection.AssemblyName&#xA;override this.GetName : unit -&gt; System.Reflection.AssemblyName" Usage="assembly.GetName " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5670-572">Ottiene un oggetto <see cref="T:System.Reflection.AssemblyName" /> per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-572">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-573">Oggetto che contiene il nome visualizzato completamente analizzato per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-573">An object that contains the fully parsed display name for this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="d5670-574">per l'accesso al percorso dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-574">for access to the path of the assembly.</span>
          </span>
          <span data-ttu-id="d5670-575">Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-575">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName GetName (bool copiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName(bool copiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetName(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetName (copiedName As Boolean) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::AssemblyName ^ GetName(bool copiedName);" />
      <MemberSignature Language="F#" Value="abstract member GetName : bool -&gt; System.Reflection.AssemblyName&#xA;override this.GetName : bool -&gt; System.Reflection.AssemblyName" Usage="assembly.GetName copiedName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copiedName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="copiedName">
          <span data-ttu-id="d5670-576">
            <see langword="true" /> per impostare la proprietà <see cref="P:System.Reflection.Assembly.CodeBase" /> sul percorso dell'assembly dopo l'esecuzione della copia shadow; <see langword="false" /> per impostare <see cref="P:System.Reflection.Assembly.CodeBase" /> sul percorso originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-576">
              <see langword="true" /> to set the <see cref="P:System.Reflection.Assembly.CodeBase" /> to the location of the assembly after it was shadow copied; <see langword="false" /> to set <see cref="P:System.Reflection.Assembly.CodeBase" /> to the original location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-577">Ottiene un oggetto <see cref="T:System.Reflection.AssemblyName" /> per questo assembly, impostando la codebase come specificato da <paramref name="copiedName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-577">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly, setting the codebase as specified by <paramref name="copiedName" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-578">Oggetto che contiene il nome visualizzato completamente analizzato per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-578">An object that contains the fully parsed display name for this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="d5670-579">per l'accesso al percorso dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-579">for access to the path of the assembly.</span>
          </span>
          <span data-ttu-id="d5670-580">Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-580">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="assembly.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="d5670-581">Oggetto da popolare con le informazioni sulla serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-581">The object to be populated with serialization information.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="d5670-582">Contesto di destinazione della serializzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-582">The destination context of the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-583">Ottiene le informazioni sulla serializzazione con tutti i dati necessari per creare una nuova istanza di questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-583">Gets serialization information with all of the data needed to reinstantiate this assembly.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-584">
            <paramref name="info" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-584">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="d5670-585">Esempio di codice seguente viene illustrato come utilizzare un handle di attesa per mantenere un processo da terminare mentre è in attesa per un thread in background terminare l'esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-585">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d5670-586">L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-586">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName[] GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName[] GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReferencedAssemblies () As AssemblyName()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ GetReferencedAssemblies();" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedAssemblies : unit -&gt; System.Reflection.AssemblyName[]&#xA;override this.GetReferencedAssemblies : unit -&gt; System.Reflection.AssemblyName[]" Usage="assembly.GetReferencedAssemblies " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5670-587">Ottiene gli oggetti <see cref="T:System.Reflection.AssemblyName" /> per tutti gli assembly a cui fa riferimento questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-587">Gets the <see cref="T:System.Reflection.AssemblyName" /> objects for all the assemblies referenced by this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-588">Matrice contenente i nomi visualizzati completamente analizzati di tutti gli assembly a cui fa riferimento questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-588">An array that contains the fully parsed display names of all the assemblies referenced by this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d5670-589">Inizia con il [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], il <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> proprietà di un' <xref:System.Reflection.AssemblyName> oggetto restituito da questo metodo è <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> se è presente alcun algoritmo hash per l'assembly di riferimento, o se l'algoritmo hash dell'assembly di riferimento non è identificato dal <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="d5670-589">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property of an <xref:System.Reflection.AssemblyName> object that is returned by this method is <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> enumeration.</span></span> <span data-ttu-id="d5670-590">Nelle versioni precedenti di .NET Framework, il <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> proprietà restituita <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> in questa situazione.</span><span class="sxs-lookup"><span data-stu-id="d5670-590">In previous versions of the .NET Framework, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property returned <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> in this situation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5670-591">Esempio di codice seguente viene illustrato come chiamare il <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-591">The following code example demonstrates calling the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> method.</span></span> <span data-ttu-id="d5670-592">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Reflection.Assembly> classe.</span><span class="sxs-lookup"><span data-stu-id="d5670-592">This code example is part of a larger example provided for the <xref:System.Reflection.Assembly> class.</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSatelliteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-593">Ottiene l'assembly satellite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-593">Gets the satellite assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSatelliteAssembly (culture As CultureInfo) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetSatelliteAssembly : System.Globalization.CultureInfo -&gt; System.Reflection.Assembly&#xA;override this.GetSatelliteAssembly : System.Globalization.CultureInfo -&gt; System.Reflection.Assembly" Usage="assembly.GetSatelliteAssembly culture" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="d5670-594">Impostazioni cultura specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-594">The specified culture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-595">Ottiene l'assembly satellite per le impostazioni cultura specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-595">Gets the satellite assembly for the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-596">Assembly satellite specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-596">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-597">Gli assembly satellite contengono risorse localizzate, distinte dall'assembly principale dell'applicazione, che contengono codice eseguibile non localizzabile nonché risorse per singole impostazioni cultura utilizzate come impostazioni cultura neutre o predefinito.</span><span class="sxs-lookup"><span data-stu-id="d5670-597">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="d5670-598">Chiamare questo metodo per utilizzare la versione dell'assembly corrente.</span><span class="sxs-lookup"><span data-stu-id="d5670-598">Call this method to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-599">
            <paramref name="culture" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-599">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-600">L'assembly non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-600">The assembly cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-601">È stato trovato l'assembly satellite con un nome file corrispondente, ma <see langword="CultureInfo" /> non corrisponde a quello specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-601">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> did not match the one specified.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-602">L'assembly satellite non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-602">The satellite assembly is not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture, Version ^ version);" />
      <MemberSignature Language="F#" Value="abstract member GetSatelliteAssembly : System.Globalization.CultureInfo * Version -&gt; System.Reflection.Assembly&#xA;override this.GetSatelliteAssembly : System.Globalization.CultureInfo * Version -&gt; System.Reflection.Assembly" Usage="assembly.GetSatelliteAssembly (culture, version)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="d5670-603">Impostazioni cultura specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-603">The specified culture.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="d5670-604">Versione dell'assembly satellite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-604">The version of the satellite assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-605">Ottiene la versione specificata dell'assembly satellite per le impostazioni cultura specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-605">Gets the specified version of the satellite assembly for the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-606">Assembly satellite specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-606">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-607">Gli assembly satellite contengono risorse localizzate, distinte dall'assembly principale dell'applicazione, che contengono codice eseguibile non localizzabile nonché risorse per singole impostazioni cultura utilizzate come impostazioni cultura neutre o predefinito.</span><span class="sxs-lookup"><span data-stu-id="d5670-607">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="d5670-608">Chiamare il <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload da utilizzare la versione dell'assembly corrente.</span><span class="sxs-lookup"><span data-stu-id="d5670-608">Call the <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload to use your current assembly version.</span></span>  
  
 <span data-ttu-id="d5670-609">Se `version` è `null`, la versione dell'assembly corrente viene utilizzata se la risorsa e gli assembly principali sono firmati.</span><span class="sxs-lookup"><span data-stu-id="d5670-609">If `version` is `null`, the current assembly version is used if both the resource and main assemblies are signed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-610">
            <paramref name="culture" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-610">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-611">È stato trovato l'assembly satellite con un nome file corrispondente, ma <see langword="CultureInfo" /> o la versione non corrisponde a quanto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-611">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> or the version did not match the one specified.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-612">L'assembly non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-612">The assembly cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-613">L'assembly satellite non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-613">The satellite assembly is not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-614">Ottiene l'oggetto <see cref="T:System.Type" /> che rappresenta il tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-614">Gets the <see cref="T:System.Type" /> object that represents the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetType : string -&gt; Type" Usage="assembly.GetType name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d5670-615">Nome completo del tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-615">The full name of the type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-616">Ottiene l'oggetto <see cref="T:System.Type" /> con il nome specificato nell'istanza dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-616">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-617">Oggetto che rappresenta la classe specificata o <see langword="null" /> se la classe non viene trovata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-617">An object that represents the specified class, or <see langword="null" /> if the class is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-618">Questo metodo cerca solo l'istanza dell'assembly corrente.</span><span class="sxs-lookup"><span data-stu-id="d5670-618">This method only searches the current assembly instance.</span></span> <span data-ttu-id="d5670-619">Il `name` parametro include lo spazio dei nomi ma non l'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-619">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="d5670-620">Per cercare altri assembly per un tipo, usare il <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> overload del metodo, che può facoltativamente includere un nome visualizzato dell'assembly come parte del nome del tipo.</span><span class="sxs-lookup"><span data-stu-id="d5670-620">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-621">Se il tipo è stato inoltrato a un altro assembly, viene comunque restituito da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-621">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="d5670-622">Per informazioni sull'inoltro dei tipi, vedere [l'inoltro di tipi in Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="d5670-622">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5670-623">L'esempio seguente definisce una classe astratta `MeansOfTransportation` classe il `Transportation` dello spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="d5670-623">The following example defines an abstract `MeansOfTransportation` class in the `Transportation` namespace.</span></span> <span data-ttu-id="d5670-624">Chiama il <xref:System.Reflection.Assembly.GetType%28System.String%29> metodo per recuperare il relativo <xref:System.Type> oggetto, chiama il <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> metodo per ottenere una matrice di <xref:System.Reflection.PropertyInfo> gli oggetti che rappresentano le proprietà del tipo e quindi Visualizza le informazioni del tipo astraggono proprietà.</span><span class="sxs-lookup"><span data-stu-id="d5670-624">It calls the <xref:System.Reflection.Assembly.GetType%28System.String%29> method to retrieve its <xref:System.Type> object, calls the <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method to get an array of <xref:System.Reflection.PropertyInfo> objects that represent the type's properties, and then displays information on the type's abstract properties.</span></span> <span data-ttu-id="d5670-625">Si noti che la chiamata al <xref:System.Reflection.Assembly.GetType%28System.String%29> metodo utilizza il nome del tipo completo (vale a dire, lo spazio dei nomi insieme al nome del tipo).</span><span class="sxs-lookup"><span data-stu-id="d5670-625">Note that the call to the <xref:System.Reflection.Assembly.GetType%28System.String%29> method uses the type's fully qualified name (that is, its namespace along with its type name).</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.GetType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.gettype/cs/gettype1.cs#1)]
 [!code-vb[System.Reflection.Assembly.GetType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.gettype/vb/gettype1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-626">
            <paramref name="name" /> non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-626">
              <paramref name="name" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-627">
            <paramref name="name" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-627">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-628">
            <paramref name="name" /> richiede un assembly dipendente che non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-628">
              <paramref name="name" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-629">
            <block subset="none" type="note">
              <para> In [.NET per le app Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) o nella [libreria di classi portabile](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), individuare in alternativa l'eccezione della classe base <see cref="T:System.IO.IOException" />. </para>
            </block>
            <paramref name="name" /> richiede un assembly dipendente che è stato trovato ma non ha potuto essere caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-629">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.  </para>
              </block>
              <paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="d5670-630">- oppure - L'assembly corrente è stato caricato nel contesto di sola reflection e <paramref name="name" /> richiede un assembly dipendente che non è stato precaricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-630">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-631">
            <paramref name="name" /> richiede un assembly dipendente, ma il file non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-631">
              <paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-632">- oppure - <paramref name="name" /> richiede un assembly dipendente che è stato compilato per una versione del runtime successiva a quella attualmente caricata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-632">-or-  <paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String, throwOnError As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name, bool throwOnError);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * bool -&gt; Type" Usage="assembly.GetType (name, throwOnError)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d5670-633">Nome completo del tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-633">The full name of the type.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="d5670-634">
            <see langword="true" /> per generare un'eccezione se il tipo non viene trovato; <see langword="false" /> per restituire <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-634">
              <see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-635">Ottiene l'oggetto <see cref="T:System.Type" /> con il nome specificato nell'istanza dell'assembly e facoltativamente genera un'eccezione se il tipo non viene trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-635">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance and optionally throws an exception if the type is not found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-636">Oggetto che rappresenta la classe specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-636">An object that represents the specified class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-637">Questo metodo cerca solo l'istanza dell'assembly corrente.</span><span class="sxs-lookup"><span data-stu-id="d5670-637">This method only searches the current assembly instance.</span></span> <span data-ttu-id="d5670-638">Il `name` parametro include lo spazio dei nomi ma non l'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-638">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="d5670-639">Per cercare altri assembly per un tipo, usare il <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> overload del metodo, che può facoltativamente includere un nome visualizzato dell'assembly come parte del nome del tipo.</span><span class="sxs-lookup"><span data-stu-id="d5670-639">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-640">Se il tipo è stato inoltrato a un altro assembly, viene comunque restituito da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-640">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="d5670-641">Per informazioni sull'inoltro dei tipi, vedere [l'inoltro di tipi in Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="d5670-641">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="d5670-642">Il `throwOnError` parametro ha effetto solo quando il tipo non viene trovato.</span><span class="sxs-lookup"><span data-stu-id="d5670-642">The `throwOnError` parameter only affects what happens when the type is not found.</span></span> <span data-ttu-id="d5670-643">Non influenza tutte le altre eccezioni che possono essere generate.</span><span class="sxs-lookup"><span data-stu-id="d5670-643">It does not affect any other exceptions that might be thrown.</span></span> <span data-ttu-id="d5670-644">In particolare, se il tipo è stato trovato ma non può essere caricato <xref:System.TypeLoadException> possono essere generate anche se `throwOnError` è `false`.</span><span class="sxs-lookup"><span data-stu-id="d5670-644">In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-645">
            <paramref name="name" /> non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-645">
              <paramref name="name" /> is invalid.</span>
          </span>
          <span data-ttu-id="d5670-646">- oppure - La lunghezza di <paramref name="name" /> supera i 1024 caratteri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-646">-or-  The length of <paramref name="name" /> exceeds 1024 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-647">
            <paramref name="name" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-647">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d5670-648">
            <paramref name="throwOnError" /> è <see langword="true" /> e il tipo non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-648">
              <paramref name="throwOnError" /> is <see langword="true" />, and the type cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-649">
            <paramref name="name" /> richiede un assembly dipendente che non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-649">
              <paramref name="name" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-650">
            <paramref name="name" /> richiede un assembly dipendente che è stato trovato ma che non è stato possibile caricare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-650">
              <paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="d5670-651">- oppure - L'assembly corrente è stato caricato nel contesto di sola reflection e <paramref name="name" /> richiede un assembly dipendente che non è stato precaricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-651">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-652">
            <paramref name="name" /> richiede un assembly dipendente, ma il file non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-652">
              <paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-653">- oppure - <paramref name="name" /> richiede un assembly dipendente che è stato compilato per una versione del runtime successiva a quella attualmente caricata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-653">-or-  <paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * bool * bool -&gt; Type" Usage="assembly.GetType (name, throwOnError, ignoreCase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d5670-654">Nome completo del tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-654">The full name of the type.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="d5670-655">
            <see langword="true" /> per generare un'eccezione se il tipo non viene trovato; <see langword="false" /> per restituire <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-655">
              <see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="d5670-656">
            <see langword="true" /> per ignorare la distinzione tra maiuscole e minuscole nel nome del tipo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-656">
              <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-657">Ottiene l'oggetto <see cref="T:System.Type" /> con il nome specificato nell'istanza dell'assembly, con la possibilità di ignorare la distinzione tra maiuscole e minuscole e di generare un'eccezione se il tipo non viene trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-657">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance, with the options of ignoring the case, and of throwing an exception if the type is not found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-658">Oggetto che rappresenta la classe specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-658">An object that represents the specified class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-659">Questo metodo cerca solo l'istanza dell'assembly corrente.</span><span class="sxs-lookup"><span data-stu-id="d5670-659">This method only searches the current assembly instance.</span></span> <span data-ttu-id="d5670-660">Il `name` parametro include lo spazio dei nomi ma non l'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-660">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="d5670-661">Per cercare altri assembly per un tipo, usare il <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> overload del metodo, che può facoltativamente includere un nome visualizzato dell'assembly come parte del nome del tipo.</span><span class="sxs-lookup"><span data-stu-id="d5670-661">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-662">Se il tipo è stato inoltrato a un altro assembly, viene comunque restituito da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-662">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="d5670-663">Per informazioni sull'inoltro dei tipi, vedere [l'inoltro di tipi in Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="d5670-663">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="d5670-664">Il `throwOnError` parametro ha effetto solo quando il tipo non viene trovato.</span><span class="sxs-lookup"><span data-stu-id="d5670-664">The `throwOnError` parameter only affects what happens when the type is not found.</span></span> <span data-ttu-id="d5670-665">Non influenza tutte le altre eccezioni che possono essere generate.</span><span class="sxs-lookup"><span data-stu-id="d5670-665">It does not affect any other exceptions that might be thrown.</span></span> <span data-ttu-id="d5670-666">In particolare, se il tipo è stato trovato ma non può essere caricato <xref:System.TypeLoadException> possono essere generate anche se `throwOnError` è `false`.</span><span class="sxs-lookup"><span data-stu-id="d5670-666">In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-667">
            <paramref name="name" /> non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-667">
              <paramref name="name" /> is invalid.</span>
          </span>
          <span data-ttu-id="d5670-668">- oppure - La lunghezza di <paramref name="name" /> supera i 1024 caratteri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-668">-or-  The length of <paramref name="name" /> exceeds 1024 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-669">
            <paramref name="name" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-669">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d5670-670">
            <paramref name="throwOnError" /> è <see langword="true" /> e il tipo non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-670">
              <paramref name="throwOnError" /> is <see langword="true" />, and the type cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-671">
            <paramref name="name" /> richiede un assembly dipendente che non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-671">
              <paramref name="name" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-672">
            <paramref name="name" /> richiede un assembly dipendente che è stato trovato ma che non è stato possibile caricare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-672">
              <paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="d5670-673">- oppure - L'assembly corrente è stato caricato nel contesto di sola reflection e <paramref name="name" /> richiede un assembly dipendente che non è stato precaricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-673">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-674">
            <paramref name="name" /> richiede un assembly dipendente, ma il file non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-674">
              <paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-675">- oppure - <paramref name="name" /> richiede un assembly dipendente che è stato compilato per una versione del runtime successiva a quella attualmente caricata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-675">-or-  <paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetTypes : unit -&gt; Type[]&#xA;override this.GetTypes : unit -&gt; Type[]" Usage="assembly.GetTypes " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5670-676">Ottiene i tipi definiti in questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-676">Gets the types defined in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-677">Matrice che contiene tutti i tipi definiti in questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-677">An array that contains all the types that are defined in this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-678">La matrice restituita include i tipi annidati.</span><span class="sxs-lookup"><span data-stu-id="d5670-678">The returned array includes nested types.</span></span>  
  
 <span data-ttu-id="d5670-679">Se il <xref:System.Reflection.Assembly.GetTypes%2A> viene chiamato su un assembly e un tipo di tale assembly è dipendente da un tipo in un assembly che non è stato caricato (ad esempio, se deriva da un tipo nel secondo assembly), un <xref:System.Reflection.ReflectionTypeLoadException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="d5670-679">If the <xref:System.Reflection.Assembly.GetTypes%2A> method is called on an assembly and a type in that assembly is dependent on a type in an assembly that has not been loaded (for example, if it derives from a type in the second assembly), a <xref:System.Reflection.ReflectionTypeLoadException> is thrown.</span></span> <span data-ttu-id="d5670-680">Ad esempio, questa situazione può verificarsi se il primo assembly è stato caricato con le <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> o <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> metodi e il secondo assembly non è stato caricato.</span><span class="sxs-lookup"><span data-stu-id="d5670-680">For example, this can happen if the first assembly was loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> or <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods, and the second assembly was not loaded.</span></span> <span data-ttu-id="d5670-681">Questo può verificarsi anche con gli assembly caricati utilizzando il <xref:System.Reflection.Assembly.Load%2A> e <xref:System.Reflection.Assembly.LoadFile%2A> metodi se il secondo assembly non viene trovato quando la <xref:System.Reflection.Assembly.GetTypes%2A> metodo viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="d5670-681">It can also happen with assemblies loaded using the <xref:System.Reflection.Assembly.Load%2A> and <xref:System.Reflection.Assembly.LoadFile%2A> methods if the second assembly cannot be located when the <xref:System.Reflection.Assembly.GetTypes%2A> method is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-682">Se un tipo è stato inoltrato a un altro assembly, non è incluso nella matrice restituita.</span><span class="sxs-lookup"><span data-stu-id="d5670-682">If a type has been forwarded to another assembly, it is not included in the returned array.</span></span> <span data-ttu-id="d5670-683">Per informazioni sull'inoltro dei tipi, vedere [l'inoltro di tipi in Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="d5670-683">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="d5670-684">Per recuperare una raccolta di <xref:System.Reflection.TypeInfo> invece di una matrice di oggetti <xref:System.Type> oggetti, usare il <xref:System.Reflection.Assembly.DefinedTypes%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d5670-684">To retrieve a collection of <xref:System.Reflection.TypeInfo> objects instead of an array of <xref:System.Type> objects, use the <xref:System.Reflection.Assembly.DefinedTypes%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5670-685">L'esempio seguente mostra i parametri di un metodo su un tipo nell'assembly specificato.</span><span class="sxs-lookup"><span data-stu-id="d5670-685">The following example displays parameters of one method on a type in the specified assembly.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#11)]
 [!code-csharp[System.Reflection.Assembly#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#11)]
 [!code-vb[System.Reflection.Assembly#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException">
          <span data-ttu-id="d5670-686">L'assembly contiene uno o più tipi che non possono essere caricati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-686">The assembly contains one or more types that cannot be loaded.</span>
          </span>
          <span data-ttu-id="d5670-687">La matrice restituita dalla proprietà <see cref="P:System.Reflection.ReflectionTypeLoadException.Types" /> di questa eccezione contiene un oggetto <see cref="T:System.Type" /> per ogni tipo caricato e <see langword="null" /> per ogni tipo non caricato, mentre la proprietà <see cref="P:System.Reflection.ReflectionTypeLoadException.LoaderExceptions" /> contiene un'eccezione per ogni tipo non caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-687">The array returned by the <see cref="P:System.Reflection.ReflectionTypeLoadException.Types" /> property of this exception contains a <see cref="T:System.Type" /> object for each type that was loaded and <see langword="null" /> for each type that could not be loaded, while the <see cref="P:System.Reflection.ReflectionTypeLoadException.LoaderExceptions" /> property contains an exception for each type that could not be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GlobalAssemblyCache">
      <MemberSignature Language="C#" Value="public virtual bool GlobalAssemblyCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GlobalAssemblyCache" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.GlobalAssemblyCache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GlobalAssemblyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool GlobalAssemblyCache { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalAssemblyCache : bool" Usage="System.Reflection.Assembly.GlobalAssemblyCache" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-688">Ottiene un valore che indica se l'assembly è stato caricato dalla Global Assembly Cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-688">Gets a value indicating whether the assembly was loaded from the global assembly cache.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-689">
            <see langword="true" /> se l'assembly è stato caricato dalla Global Assembly Cache; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-689">
              <see langword="true" /> if the assembly was loaded from the global assembly cache; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostContext">
      <MemberSignature Language="C#" Value="public virtual long HostContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HostContext" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.HostContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostContext As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long HostContext { long get(); };" />
      <MemberSignature Language="F#" Value="member this.HostContext : int64" Usage="System.Reflection.Assembly.HostContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-690">Ottiene il contesto host con cui l'assembly è stato caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-690">Gets the host context with which the assembly was loaded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-691">Valore <see cref="T:System.Int64" /> che indica il contesto host con cui l'assembly è stato caricato, se presente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-691">An <see cref="T:System.Int64" /> value that indicates the host context with which the assembly was loaded, if any.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRuntimeVersion">
      <MemberSignature Language="C#" Value="public virtual string ImageRuntimeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageRuntimeVersion" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ImageRuntimeVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImageRuntimeVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageRuntimeVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImageRuntimeVersion : string" Usage="System.Reflection.Assembly.ImageRuntimeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-692">Ottiene una stringa che rappresenta la versione di CLR (Common Language Runtime) salvata nel file che contiene il manifesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-692">Gets a string representing the version of the common language runtime (CLR) saved in the file containing the manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-693">Nome della cartella della versione CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-693">The CLR version folder name.</span>
          </span>
          <span data-ttu-id="d5670-694">Non si tratta di un percorso completo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-694">This is not a full path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-695">Ad esempio, il valore per la versione 1.1 di .NET Framework sarebbe v1.1.4322.</span><span class="sxs-lookup"><span data-stu-id="d5670-695">For example, the value for the .NET Framework version 1.1 would be v1.1.4322.</span></span> <span data-ttu-id="d5670-696">I file binari per la versione potrebbe trovarsi nel windir%\Microsoft.NET\Framework\v1.1.4322% percorso.</span><span class="sxs-lookup"><span data-stu-id="d5670-696">The binary files for that version would be located in the path %windir%\Microsoft.NET\Framework\v1.1.4322.</span></span>  
  
 <span data-ttu-id="d5670-697">Per impostazione predefinita, <xref:System.Reflection.Assembly.ImageRuntimeVersion%2A> è impostato sulla versione di CLR utilizzata per compilare l'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-697">By default, <xref:System.Reflection.Assembly.ImageRuntimeVersion%2A> is set to the version of the CLR used to build the assembly.</span></span> <span data-ttu-id="d5670-698">Tuttavia, che potrebbe avere stata impostata su un altro valore in fase di compilazione.</span><span class="sxs-lookup"><span data-stu-id="d5670-698">However, it might have been set to another value at compile time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public virtual bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member IsDefined : Type * bool -&gt; bool&#xA;override this.IsDefined : Type * bool -&gt; bool" Usage="assembly.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="d5670-699">Tipo dell'attributo da controllare per l'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-699">The type of the attribute to be checked for this assembly.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="d5670-700">Questo argomento viene ignorato per gli oggetti di questo tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-700">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-701">Indica se è stato applicato un attributo specificato all'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-701">Indicates whether or not a specified attribute has been applied to the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-702">
            <see langword="true" /> se l'attributo è stato applicato all'assembly; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-702">
              <see langword="true" /> if the attribute has been applied to the assembly; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d5670-703">L'esempio di codice seguente viene applicato il <xref:System.Reflection.AssemblyTitleAttribute> attributo per un assembly e quindi Usa <xref:System.Reflection.Assembly.IsDefined%2A> per indicare se è stato applicato.</span><span class="sxs-lookup"><span data-stu-id="d5670-703">The following code example applies the <xref:System.Reflection.AssemblyTitleAttribute> attribute to an assembly and then uses <xref:System.Reflection.Assembly.IsDefined%2A> to indicate whether it was applied.</span></span> <span data-ttu-id="d5670-704">L'istruzione verifica inoltre un attributo che non è stato applicato.</span><span class="sxs-lookup"><span data-stu-id="d5670-704">It also tests an attribute that was not applied.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.isdefined/CS/isdefined.cs#1)]
 [!code-vb[System.Reflection.Assembly.IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.isdefined/VB/isdefined.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-705">
            <paramref name="attributeType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-705">
              <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-706">
            <paramref name="attributeType" />utilizza un tipo non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-706">
              <paramref name="attributeType" /> uses an invalid type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDynamic">
      <MemberSignature Language="C#" Value="public virtual bool IsDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamic" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.IsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDynamic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDynamic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDynamic : bool" Usage="System.Reflection.Assembly.IsDynamic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-707">Ottiene un valore che indica se l'assembly corrente è stato generato dinamicamente nel processo corrente tramite reflection emit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-707">Gets a value that indicates whether the current assembly was generated dynamically in the current process by using reflection emit.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-708">
            <see langword="true" /> se l'assembly corrente è stato generato in modo dinamico nel processo corrente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-708">
              <see langword="true" /> if the current assembly was generated dynamically in the current process; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-709">Gli assembly dinamici sono rappresentati dalla classe derivata <xref:System.Reflection.Emit.AssemblyBuilder>.</span><span class="sxs-lookup"><span data-stu-id="d5670-709">Dynamic assemblies are represented by the derived class <xref:System.Reflection.Emit.AssemblyBuilder>.</span></span>  
  
 <span data-ttu-id="d5670-710">Quando un assembly dinamico viene salvato su disco, l'assembly salvato non è dinamico.</span><span class="sxs-lookup"><span data-stu-id="d5670-710">When a dynamic assembly is saved to disk, the saved assembly is not dynamic.</span></span> <span data-ttu-id="d5670-711">Se l'assembly salvato viene caricato in un altro dominio applicazione o processo, il <xref:System.Reflection.Assembly.IsDynamic%2A> restituisce proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="d5670-711">If the saved assembly is loaded into another application domain or process, the <xref:System.Reflection.Assembly.IsDynamic%2A> property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFullyTrusted">
      <MemberSignature Language="C#" Value="public bool IsFullyTrusted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFullyTrusted" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.IsFullyTrusted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFullyTrusted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFullyTrusted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFullyTrusted : bool" Usage="System.Reflection.Assembly.IsFullyTrusted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-712">Ottiene un valore che indica se l'assembly corrente viene caricato con attendibilità totale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-712">Gets a value that indicates whether the current assembly is loaded with full trust.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-713">
            <see langword="true" /> se l'assembly corrente è caricato con attendibilità totale; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-713">
              <see langword="true" /> if the current assembly is loaded with full trust; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-714">Carica un assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-714">Loads an assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly);" />
      <MemberSignature Language="F#" Value="static member Load : byte[] -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load rawAssembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="d5670-715">Matrice di byte costituita da un'immagine in formato COFF contenente un assembly generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-715">A byte array that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-716">Carica l'assembly con un'immagine in formato COFF (Common Object File Format) contenente un assembly generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-716">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly.</span>
          </span>
          <span data-ttu-id="d5670-717">L'assembly viene caricato nel dominio applicazione del chiamante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-717">The assembly is loaded into the application domain of the caller.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-718">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-718">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-719">Il livello di attendibilità di un assembly caricato dall'utilizzo di questo metodo è lo stesso livello di attendibilità dell'assembly chiamante.</span><span class="sxs-lookup"><span data-stu-id="d5670-719">The trust level of an assembly that is loaded by using this method is the same as the trust level of the calling assembly.</span></span> <span data-ttu-id="d5670-720">Per caricare un assembly da una matrice di byte con il livello di attendibilità del dominio dell'applicazione, utilizzare il <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-720">To load an assembly from a byte array with the trust level of the application domain, use the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> method overload.</span></span> <span data-ttu-id="d5670-721">Per ulteriori informazioni sull'utilizzo di evidenza con overload del <xref:System.Reflection.Assembly.Load%2A> metodo che accetta le matrici di byte, vedere il <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-721">For more information about the use of evidence with overloads of the <xref:System.Reflection.Assembly.Load%2A> method that take byte arrays, see the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> method overload.</span></span>  
  
 <span data-ttu-id="d5670-722">La reflection su file eseguibili C++ può generare un <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="d5670-722">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="d5670-723">Ciò è probabilmente causato da del compilatore C++ degli indirizzi di rilocazione o `.reloc` sezione dal file eseguibile.</span><span class="sxs-lookup"><span data-stu-id="d5670-723">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="d5670-724">Per mantenere la `.reloc` degli indirizzi per il file eseguibile C++, specificare `/fixed:no` quando ci si sta collegando.</span><span class="sxs-lookup"><span data-stu-id="d5670-724">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="d5670-725">Si noti che questo overload del metodo crea sempre un nuovo <xref:System.Reflection.Assembly> oggetto con il proprio mapping.</span><span class="sxs-lookup"><span data-stu-id="d5670-725">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-726">
            <paramref name="rawAssembly" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-726">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-727">
            <paramref name="rawAssembly" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-727">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-728">- oppure - Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="rawAssembly" /> è stato compilato con una versione successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-728">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyRef As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyRef);" />
      <MemberSignature Language="F#" Value="static member Load : System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load assemblyRef" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyRef">
          <span data-ttu-id="d5670-729">Oggetto che descrive l'assembly da caricare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-729">The object that describes the assembly to be loaded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-730">Carica un assembly dato il relativo oggetto <see cref="T:System.Reflection.AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-730">Loads an assembly given its <see cref="T:System.Reflection.AssemblyName" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-731">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-731">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-732"><xref:System.IO.FileLoadException> viene generata se `assemblyRef` specifica il nome completo dell'assembly e il primo assembly che corrisponde al nome semplice dispone di una versione diversa, delle impostazioni cultura o token di chiave pubblica.</span><span class="sxs-lookup"><span data-stu-id="d5670-732"><xref:System.IO.FileLoadException> is thrown if `assemblyRef` specifies the full assembly name and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="d5670-733">Il caricatore non continuare la ricerca degli altri assembly che corrispondono al nome semplice.</span><span class="sxs-lookup"><span data-stu-id="d5670-733">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-734">Non utilizzare un <xref:System.Reflection.AssemblyName> solo con il <xref:System.Reflection.AssemblyName.CodeBase%2A> set di proprietà.</span><span class="sxs-lookup"><span data-stu-id="d5670-734">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="d5670-735">Il <xref:System.Reflection.AssemblyName.CodeBase%2A> proprietà non fornisca tutti gli elementi dell'identità dell'assembly (ad esempio nome o la versione), quindi il caricamento non viene eseguito in base alle regole di carico dall'identità, come ci aspetta dal <xref:System.Reflection.Assembly.Load%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-735">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="d5670-736">Al contrario, l'assembly viene caricato usando regole di caricamento.</span><span class="sxs-lookup"><span data-stu-id="d5670-736">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="d5670-737">Per informazioni sugli svantaggi dell'utilizzo il contesto di caricamento, vedere la <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> overload del metodo oppure [le procedure consigliate per il caricamento di Assembly](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span><span class="sxs-lookup"><span data-stu-id="d5670-737">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
 <span data-ttu-id="d5670-738">Se sussistano o meno le autorizzazioni per l'utilizzo di un assembly lo si evince dalle evidenze.</span><span class="sxs-lookup"><span data-stu-id="d5670-738">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="d5670-739">Le regole per l'assembly e l'unione all'evidenza di sicurezza sono come segue:</span><span class="sxs-lookup"><span data-stu-id="d5670-739">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="d5670-740">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> metodo senza alcun <xref:System.Security.Policy.Evidence> parametro, l'assembly viene caricato con l'evidenza fornita dal caricamento.</span><span class="sxs-lookup"><span data-stu-id="d5670-740">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="d5670-741">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> metodo con un <xref:System.Security.Policy.Evidence> parametro, evidenze vengono uniti.</span><span class="sxs-lookup"><span data-stu-id="d5670-741">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="d5670-742">Evidenze fornito come argomento per il <xref:System.Reflection.Assembly.Load%2A> metodo sostituiscono quelle di evidenza fornita dal caricatore.</span><span class="sxs-lookup"><span data-stu-id="d5670-742">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="d5670-743">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> overload del metodo con un `Byte[]` parametro per caricare un'immagine common object file formato COFF (), evidenza viene ereditato dall'assembly chiamante.</span><span class="sxs-lookup"><span data-stu-id="d5670-743">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="d5670-744">Questo vale per .NET Framework versione 1.1 Service Pack 1 (SP1) e versioni successive.</span><span class="sxs-lookup"><span data-stu-id="d5670-744">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d5670-745">In .NET Framework versione 1.0 e nella versione 1.1 senza SP1, quando si usa un <xref:System.Reflection.Assembly.Load%2A> overload del metodo con un `Byte[]` parametro per caricare un'immagine COFF, l'evidenza viene combinato.</span><span class="sxs-lookup"><span data-stu-id="d5670-745">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="d5670-746">`Zone`, `Url` e `Site` vengono ereditate dall'assembly chiamante, e `Hash` e `StrongName` provengono dall'assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="d5670-746">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="d5670-747">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> metodo con un `Byte[]` parametro e <xref:System.Security.Policy.Evidence> per caricare un'immagine COFF, viene utilizzato solo l'evidenza fornita.</span><span class="sxs-lookup"><span data-stu-id="d5670-747">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="d5670-748">L'evidenza dell'assembly chiamante e quella dell'immagine COFF viene ignorati.</span><span class="sxs-lookup"><span data-stu-id="d5670-748">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="d5670-749">La reflection su file eseguibili C++ può generare un <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="d5670-749">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="d5670-750">Ciò è probabilmente causato da del compilatore C++ degli indirizzi di rilocazione o `.reloc` sezione dal file eseguibile.</span><span class="sxs-lookup"><span data-stu-id="d5670-750">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="d5670-751">Per mantenere la `.reloc` degli indirizzi per il file eseguibile C++, specificare `/fixed:no` quando ci si sta collegando.</span><span class="sxs-lookup"><span data-stu-id="d5670-751">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-752">Se entrambi i <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> proprietà e il <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> proprietà sono impostate, il primo tentativo di caricare l'assembly viene utilizzato il nome visualizzato (incluse versione, impostazioni cultura e così via, come restituito dal <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> proprietà).</span><span class="sxs-lookup"><span data-stu-id="d5670-752">If both the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property and the <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> property are set, the first attempt to load the assembly uses the display name (including version, culture, and so on, as returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property).</span></span> <span data-ttu-id="d5670-753">Se il file non viene trovato, <xref:System.Reflection.AssemblyName.CodeBase%2A> utilizzato per la ricerca dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-753">If the file is not found, <xref:System.Reflection.AssemblyName.CodeBase%2A> is used to search for the assembly.</span></span> <span data-ttu-id="d5670-754">Se l'assembly viene trovato tramite <xref:System.Reflection.AssemblyName.CodeBase%2A>, il nome visualizzato viene confrontato con l'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-754">If the assembly is found using <xref:System.Reflection.AssemblyName.CodeBase%2A>, the display name is matched against the assembly.</span></span> <span data-ttu-id="d5670-755">Se la corrispondenza ha esito negativo, un <xref:System.IO.FileLoadException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="d5670-755">If the match fails, a <xref:System.IO.FileLoadException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5670-756">Nell'esempio seguente crea un' <xref:System.Reflection.AssemblyName> dell'oggetto e lo usa per caricare il `sysglobal.dll` assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-756">The following example instantiates an <xref:System.Reflection.AssemblyName> object and uses it to load the `sysglobal.dll` assembly.</span></span> <span data-ttu-id="d5670-757">Nell'esempio viene quindi visualizzato il nome completo di tipi pubblica dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-757">The example then displays the full name of the assembly's public types.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.Load#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.load/cs/Load2.cs#2)]
 [!code-vb[System.Reflection.Assembly.Load#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.load/vb/Load2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-758">
            <paramref name="assemblyRef" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-758">
              <paramref name="assemblyRef" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-759">
            <paramref name="assemblyRef" /> non trovata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-759">
              <paramref name="assemblyRef" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-760">
            <block subset="none" type="note">
              <para> In [.NET per le app Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) o nella [libreria di classi portabile](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), individuare in alternativa l'eccezione della classe base <see cref="T:System.IO.IOException" />.  </para>
            </block>  Non è stato possibile caricare un file trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-760">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.  </para>
              </block>  A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-761">
            <paramref name="assemblyRef" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-761">
              <paramref name="assemblyRef" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-762">- oppure - Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="assemblyRef" /> è stato compilato con una versione successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-762">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="d5670-763">per l'accesso in lettura da un file o directory e per l'accesso alle informazioni presenti nel percorso stesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-763">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="d5670-764">Enumerazioni associate: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-764">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="d5670-765">per la lettura di un URI che iniziano con "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-765">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d5670-766">per caricare un assembly con evidenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-766">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="d5670-767">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-767">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Reflection.AssemblyName" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (string assemblyString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(string assemblyString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyString As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::String ^ assemblyString);" />
      <MemberSignature Language="F#" Value="static member Load : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load assemblyString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyString">
          <span data-ttu-id="d5670-768">Forma estesa del nome dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-768">The long form of the assembly name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-769">Carica un assembly in base alla forma estesa del nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-769">Loads an assembly given the long form of its name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-770">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-770">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-771">La forma estesa del nome di un assembly è costituito dal relativo nome semplice (ad esempio "System" per l'assembly System. dll) con la versione, impostazioni cultura, token di chiave pubblica e, facoltativamente, l'architettura del processore.</span><span class="sxs-lookup"><span data-stu-id="d5670-771">The long form of an assembly name consists of its simple name (such as "System" for the System.dll assembly) along with its version, culture, public key token, and optionally its processor architecture.</span></span> <span data-ttu-id="d5670-772">Corrisponde all'assembly <xref:System.Reflection.Assembly.FullName%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d5670-772">It corresponds to the assembly's <xref:System.Reflection.Assembly.FullName%2A> property.</span></span> <span data-ttu-id="d5670-773">Nell'esempio seguente viene illustrato l'utilizzo di un nome lungo per caricare l'assembly System. dll per .NET Framework 4.</span><span class="sxs-lookup"><span data-stu-id="d5670-773">The following example illustrates the use of a long name to load the System.dll assembly for the .NET Framework 4.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.Load#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.load/cs/load1.cs#1)]
 [!code-vb[System.Reflection.Assembly.Load#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.load/vb/load1.vb#1)]  
  
 <span data-ttu-id="d5670-774"><xref:System.IO.FileLoadException> viene generata se `assemblyString` specifica il nome completo dell'assembly e il primo assembly che corrisponde al nome semplice dispone di una versione diversa, delle impostazioni cultura o token di chiave pubblica.</span><span class="sxs-lookup"><span data-stu-id="d5670-774"><xref:System.IO.FileLoadException> is thrown if `assemblyString` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="d5670-775">Il caricatore non continuare la ricerca degli altri assembly che corrispondono al nome semplice.</span><span class="sxs-lookup"><span data-stu-id="d5670-775">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
 <span data-ttu-id="d5670-776">Se sussistano o meno le autorizzazioni per l'utilizzo di un assembly lo si evince dalle evidenze.</span><span class="sxs-lookup"><span data-stu-id="d5670-776">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="d5670-777">Le regole per l'assembly e l'unione all'evidenza di sicurezza sono come segue:</span><span class="sxs-lookup"><span data-stu-id="d5670-777">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="d5670-778">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> metodo senza alcun <xref:System.Security.Policy.Evidence> parametro, l'assembly viene caricato con l'evidenza fornita dal caricamento.</span><span class="sxs-lookup"><span data-stu-id="d5670-778">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="d5670-779">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> metodo con un <xref:System.Security.Policy.Evidence> parametro, evidenze vengono uniti.</span><span class="sxs-lookup"><span data-stu-id="d5670-779">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="d5670-780">Evidenze fornito come argomento per il <xref:System.Reflection.Assembly.Load%2A> metodo sostituiscono quelle di evidenza fornita dal caricatore.</span><span class="sxs-lookup"><span data-stu-id="d5670-780">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="d5670-781">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> overload del metodo con un `Byte[]` parametro per caricare un'immagine common object file formato COFF (), evidenza viene ereditato dall'assembly chiamante.</span><span class="sxs-lookup"><span data-stu-id="d5670-781">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="d5670-782">Questo vale per .NET Framework versione 1.1 Service Pack 1 (SP1) e versioni successive.</span><span class="sxs-lookup"><span data-stu-id="d5670-782">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d5670-783">In .NET Framework versione 1.0 e nella versione 1.1 senza SP1, quando si usa un <xref:System.Reflection.Assembly.Load%2A> overload del metodo con un `Byte[]` parametro per caricare un'immagine COFF, l'evidenza viene combinato.</span><span class="sxs-lookup"><span data-stu-id="d5670-783">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="d5670-784">`Zone`, `Url` e `Site` vengono ereditate dall'assembly chiamante, e `Hash` e `StrongName` provengono dall'assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="d5670-784">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="d5670-785">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> metodo con un `Byte[]` parametro e <xref:System.Security.Policy.Evidence> per caricare un'immagine COFF, viene utilizzato solo l'evidenza fornita.</span><span class="sxs-lookup"><span data-stu-id="d5670-785">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="d5670-786">L'evidenza dell'assembly chiamante e quella dell'immagine COFF viene ignorati.</span><span class="sxs-lookup"><span data-stu-id="d5670-786">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="d5670-787">La reflection su file eseguibili C++ può generare un <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="d5670-787">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="d5670-788">Ciò è probabilmente causato da del compilatore C++ degli indirizzi di rilocazione o `.reloc` sezione dal file eseguibile.</span><span class="sxs-lookup"><span data-stu-id="d5670-788">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="d5670-789">Per mantenere la `.reloc` degli indirizzi per il file eseguibile C++, specificare `/fixed:no` quando ci si sta collegando.</span><span class="sxs-lookup"><span data-stu-id="d5670-789">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="d5670-790">In .NET Framework versione 2.0, architettura del processore viene aggiunto all'identità dell'assembly e può essere specificato come parte di stringhe di nomi di assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-790">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="d5670-791">Ad esempio, "ProcessorArchitecture = msil".</span><span class="sxs-lookup"><span data-stu-id="d5670-791">For example, "ProcessorArchitecture=msil".</span></span> <span data-ttu-id="d5670-792">Tuttavia, il metodo consigliato per specificare un nome di assembly consiste nel creare un <xref:System.Reflection.AssemblyName> dell'oggetto e passarlo a un overload appropriato del <xref:System.Reflection.Assembly.Load%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-792">However, the recommended way to specify an assembly name is to create an <xref:System.Reflection.AssemblyName> object and pass it to an appropriate overload of the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="d5670-793">Vedere <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5670-793">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5670-794">Nell'esempio seguente carica un assembly dato il relativo nome completo e vengono elencati tutti i tipi contenuti nell'assembly specificato.</span><span class="sxs-lookup"><span data-stu-id="d5670-794">The following example loads an assembly given its fully qualified name, and lists all the types contained in the specified assembly.</span></span> <span data-ttu-id="d5670-795">Per eseguire questo esempio di codice, è necessario fornire il nome completo dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-795">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="d5670-796">Per informazioni su come ottenere il nome completo dell'assembly, vedere [i nomi degli Assembly](~/docs/framework/app-domains/assembly-names.md).</span><span class="sxs-lookup"><span data-stu-id="d5670-796">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[assembly.load1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.Load1/CPP/load1.cpp#1)]
 [!code-csharp[assembly.load1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.Load1/CS/load1.cs#1)]
 [!code-vb[assembly.load1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.Load1/VB/load1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-797">
            <paramref name="assemblyString" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-797">
              <paramref name="assemblyString" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-798">
            <paramref name="assemblyString" /> è una stringa di lunghezza zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-798">
              <paramref name="assemblyString" /> is a zero-length string.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-799">
            <paramref name="assemblyString" /> non trovata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-799">
              <paramref name="assemblyString" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-800">Non è stato possibile caricare un file trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-800">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-801">
            <paramref name="assemblyString" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-801">
              <paramref name="assemblyString" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-802">- oppure - Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="assemblyString" /> è stato compilato con una versione successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-802">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d5670-803">per caricare un assembly con evidenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-803">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="d5670-804">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-804">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Reflection.AssemblyName" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte(), rawSymbolStore As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberSignature Language="F#" Value="static member Load : byte[] * byte[] -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load (rawAssembly, rawSymbolStore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="d5670-805">Matrice di byte costituita da un'immagine in formato COFF contenente un assembly generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-805">A byte array that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="d5670-806">Matrice di byte contenente i byte non elaborati che rappresentano i simboli per l'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-806">A byte array that contains the raw bytes representing the symbols for the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-807">Carica l'assembly con un'immagine in formato COFF (Common Object File Format) che contiene un assembly generato e include facoltativamente i simboli per l'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-807">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols for the assembly.</span>
          </span>
          <span data-ttu-id="d5670-808">L'assembly viene caricato nel dominio applicazione del chiamante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-808">The assembly is loaded into the application domain of the caller.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-809">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-809">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-810">Il livello di attendibilità di un assembly caricato dall'utilizzo di questo metodo è lo stesso livello di attendibilità dell'assembly chiamante.</span><span class="sxs-lookup"><span data-stu-id="d5670-810">The trust level of an assembly that is loaded by using this method is the same as the trust level of the calling assembly.</span></span> <span data-ttu-id="d5670-811">Per caricare un assembly da una matrice di byte con il livello di attendibilità del dominio dell'applicazione, utilizzare il <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-811">To load an assembly from a byte array with the trust level of the application domain, use the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> method overload.</span></span> <span data-ttu-id="d5670-812">Per ulteriori informazioni sull'utilizzo di evidenza con overload del <xref:System.Reflection.Assembly.Load%2A> metodo che accetta le matrici di byte, vedere il <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-812">For more information about the use of evidence with overloads of the <xref:System.Reflection.Assembly.Load%2A> method that take byte arrays, see the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> method overload.</span></span>  
  
 <span data-ttu-id="d5670-813">La reflection su file eseguibili C++ può generare un <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="d5670-813">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="d5670-814">Ciò è probabilmente causato da del compilatore C++ degli indirizzi di rilocazione o `.reloc` sezione dal file eseguibile.</span><span class="sxs-lookup"><span data-stu-id="d5670-814">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="d5670-815">Per mantenere la `.reloc` degli indirizzi per il file eseguibile C++, specificare `/fixed:no` quando ci si sta collegando.</span><span class="sxs-lookup"><span data-stu-id="d5670-815">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="d5670-816">Si noti che questo overload del metodo crea sempre un nuovo <xref:System.Reflection.Assembly> oggetto con il proprio mapping.</span><span class="sxs-lookup"><span data-stu-id="d5670-816">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-817">
            <paramref name="rawAssembly" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-817">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-818">
            <paramref name="rawAssembly" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-818">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-819">- oppure - Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="rawAssembly" /> è stato compilato con una versione successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-819">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyRef, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyRef As AssemblyName, assemblySecurity As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyRef, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberSignature Language="F#" Value="static member Load : System.Reflection.AssemblyName * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load (assemblyRef, assemblySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyRef">
          <span data-ttu-id="d5670-820">Oggetto che descrive l'assembly da caricare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-820">The object that describes the assembly to be loaded.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="d5670-821">Evidenza per il caricamento dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-821">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-822">Carica un assembly dato il relativo oggetto <see cref="T:System.Reflection.AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-822">Loads an assembly given its <see cref="T:System.Reflection.AssemblyName" />.</span>
          </span>
          <span data-ttu-id="d5670-823">L'assembly viene caricato nel dominio del chiamante usando l'evidenza fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-823">The assembly is loaded into the domain of the caller using the supplied evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-824">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-824">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-825"><xref:System.IO.FileLoadException> viene generata se `assemblyRef` specifica il nome completo dell'assembly e il primo assembly che corrisponde al nome semplice dispone di una versione diversa, delle impostazioni cultura o token di chiave pubblica.</span><span class="sxs-lookup"><span data-stu-id="d5670-825"><xref:System.IO.FileLoadException> is thrown if `assemblyRef` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="d5670-826">Il caricatore non continuare la ricerca degli altri assembly che corrispondono al nome semplice.</span><span class="sxs-lookup"><span data-stu-id="d5670-826">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-827">Non utilizzare un <xref:System.Reflection.AssemblyName> solo con il <xref:System.Reflection.AssemblyName.CodeBase%2A> set di proprietà.</span><span class="sxs-lookup"><span data-stu-id="d5670-827">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="d5670-828">Il <xref:System.Reflection.AssemblyName.CodeBase%2A> proprietà non fornisca tutti gli elementi dell'identità dell'assembly (ad esempio nome o la versione), quindi il caricamento non viene eseguito in base alle regole di carico dall'identità, come ci aspetta dal <xref:System.Reflection.Assembly.Load%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-828">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="d5670-829">Al contrario, l'assembly viene caricato usando regole di caricamento.</span><span class="sxs-lookup"><span data-stu-id="d5670-829">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="d5670-830">Per informazioni sugli svantaggi dell'utilizzo il contesto di caricamento, vedere la <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> overload del metodo oppure [le procedure consigliate per il caricamento di Assembly](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span><span class="sxs-lookup"><span data-stu-id="d5670-830">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
 <span data-ttu-id="d5670-831">Se sussistano o meno le autorizzazioni per l'utilizzo di un assembly lo si evince dalle evidenze.</span><span class="sxs-lookup"><span data-stu-id="d5670-831">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="d5670-832">Le regole per l'assembly e l'unione all'evidenza di sicurezza sono come segue:</span><span class="sxs-lookup"><span data-stu-id="d5670-832">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="d5670-833">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> metodo senza alcun <xref:System.Security.Policy.Evidence> parametro, l'assembly viene caricato con l'evidenza fornita dal caricamento.</span><span class="sxs-lookup"><span data-stu-id="d5670-833">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="d5670-834">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> metodo con un <xref:System.Security.Policy.Evidence> parametro, evidenze vengono uniti.</span><span class="sxs-lookup"><span data-stu-id="d5670-834">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="d5670-835">Evidenze fornito come argomento per il <xref:System.Reflection.Assembly.Load%2A> metodo sostituiscono quelle di evidenza fornita dal caricatore.</span><span class="sxs-lookup"><span data-stu-id="d5670-835">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="d5670-836">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> overload del metodo con un `Byte[]` parametro per caricare un'immagine common object file formato COFF (), evidenza viene ereditato dall'assembly chiamante.</span><span class="sxs-lookup"><span data-stu-id="d5670-836">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="d5670-837">Questo vale per .NET Framework versione 1.1 Service Pack 1 (SP1) e versioni successive.</span><span class="sxs-lookup"><span data-stu-id="d5670-837">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d5670-838">In .NET Framework versione 1.0 e nella versione 1.1 senza SP1, quando si usa un <xref:System.Reflection.Assembly.Load%2A> overload del metodo con un `Byte[]` parametro per caricare un'immagine COFF, l'evidenza viene combinato.</span><span class="sxs-lookup"><span data-stu-id="d5670-838">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="d5670-839">`Zone`, `Url` e `Site` vengono ereditate dall'assembly chiamante, e `Hash` e `StrongName` provengono dall'assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="d5670-839">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="d5670-840">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> metodo con un `Byte[]` parametro e <xref:System.Security.Policy.Evidence> per caricare un'immagine COFF, viene utilizzato solo l'evidenza fornita.</span><span class="sxs-lookup"><span data-stu-id="d5670-840">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="d5670-841">L'evidenza dell'assembly chiamante e quella dell'immagine COFF viene ignorati.</span><span class="sxs-lookup"><span data-stu-id="d5670-841">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="d5670-842">La reflection su file eseguibili C++ può generare un <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="d5670-842">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="d5670-843">Ciò è probabilmente causato da del compilatore C++ degli indirizzi di rilocazione o `.reloc` sezione dal file eseguibile.</span><span class="sxs-lookup"><span data-stu-id="d5670-843">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="d5670-844">Per mantenere la `.reloc` degli indirizzi per il file eseguibile C++, specificare `/fixed:no` quando ci si sta collegando.</span><span class="sxs-lookup"><span data-stu-id="d5670-844">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-845">Se entrambi i <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> proprietà e il <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> proprietà sono impostate, il primo tentativo di caricare l'assembly viene utilizzato il nome visualizzato (incluse versione, impostazioni cultura e così via, come restituito dal <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> proprietà).</span><span class="sxs-lookup"><span data-stu-id="d5670-845">If both the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property and the <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> property are set, the first attempt to load the assembly uses the display name (including version, culture, and so on, as returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property).</span></span> <span data-ttu-id="d5670-846">Se il file non viene trovato, <xref:System.Reflection.AssemblyName.CodeBase%2A> utilizzato per la ricerca dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-846">If the file is not found, <xref:System.Reflection.AssemblyName.CodeBase%2A> is used to search for the assembly.</span></span> <span data-ttu-id="d5670-847">Se l'assembly viene trovato tramite <xref:System.Reflection.AssemblyName.CodeBase%2A>, il nome visualizzato viene confrontato con l'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-847">If the assembly is found using <xref:System.Reflection.AssemblyName.CodeBase%2A>, the display name is matched against the assembly.</span></span> <span data-ttu-id="d5670-848">Se la corrispondenza ha esito negativo, un <xref:System.IO.FileLoadException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="d5670-848">If the match fails, a <xref:System.IO.FileLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="d5670-849">Se si chiama il <xref:System.Reflection.Assembly.Load%2A> metodo più di una volta nello stesso assembly ma con una prova diversa specificata, common language runtime non genera un <xref:System.IO.FileLoadException> perché non può essere l'uguaglianza e l'integrità delle specifiche di prova diversi determinato.</span><span class="sxs-lookup"><span data-stu-id="d5670-849">If you call the <xref:System.Reflection.Assembly.Load%2A> method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="d5670-850">L'evidenza che innanzitutto ha esito positivo sia l'evidenza utilizzata.</span><span class="sxs-lookup"><span data-stu-id="d5670-850">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-851">
            <paramref name="assemblyRef" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-851">
              <paramref name="assemblyRef" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-852">
            <paramref name="assemblyRef" /> non trovata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-852">
              <paramref name="assemblyRef" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-853">
            <paramref name="assemblyRef" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-853">
              <paramref name="assemblyRef" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-854">- oppure - Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="assemblyRef" /> è stato compilato con una versione successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-854">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-855">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-855">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="d5670-856">per l'accesso in lettura da un file o directory e per l'accesso alle informazioni presenti nel percorso stesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-856">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="d5670-857">Enumerazioni associate: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-857">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="d5670-858">per la lettura di un URI che iniziano con "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-858">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d5670-859">per caricare un assembly con evidenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-859">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="d5670-860">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-860">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (string assemblyString, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(string assemblyString, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyString As String, assemblySecurity As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::String ^ assemblyString, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberSignature Language="F#" Value="static member Load : string * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load (assemblyString, assemblySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyString">
          <span data-ttu-id="d5670-861">Nome visualizzato dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-861">The display name of the assembly.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="d5670-862">Evidenza per il caricamento dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-862">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-863">Carica un assembly in base al nome visualizzato nel dominio del chiamante, usando l'evidenza fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-863">Loads an assembly given its display name, loading the assembly into the domain of the caller using the supplied evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-864">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-864">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-865"><xref:System.IO.FileLoadException> viene generata se `assemblyString` specifica il nome completo dell'assembly e il primo assembly che corrisponde al nome semplice dispone di una versione diversa, delle impostazioni cultura o token di chiave pubblica.</span><span class="sxs-lookup"><span data-stu-id="d5670-865"><xref:System.IO.FileLoadException> is thrown if `assemblyString` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="d5670-866">Il caricatore non continuare la ricerca degli altri assembly che corrispondono al nome semplice.</span><span class="sxs-lookup"><span data-stu-id="d5670-866">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
 <span data-ttu-id="d5670-867">Se sussistano o meno le autorizzazioni per l'utilizzo di un assembly lo si evince dalle evidenze.</span><span class="sxs-lookup"><span data-stu-id="d5670-867">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="d5670-868">Le regole per l'assembly e l'unione all'evidenza di sicurezza sono come segue:</span><span class="sxs-lookup"><span data-stu-id="d5670-868">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="d5670-869">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> metodo senza alcun <xref:System.Security.Policy.Evidence> parametro, l'assembly viene caricato con l'evidenza fornita dal caricamento.</span><span class="sxs-lookup"><span data-stu-id="d5670-869">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="d5670-870">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> metodo con un <xref:System.Security.Policy.Evidence> parametro, evidenze vengono uniti.</span><span class="sxs-lookup"><span data-stu-id="d5670-870">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="d5670-871">Evidenze fornito come argomento per il <xref:System.Reflection.Assembly.Load%2A> metodo sostituiscono quelle di evidenza fornita dal caricatore.</span><span class="sxs-lookup"><span data-stu-id="d5670-871">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="d5670-872">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> overload del metodo con un `Byte[]` parametro per caricare un'immagine common object file formato COFF (), evidenza viene ereditato dall'assembly chiamante.</span><span class="sxs-lookup"><span data-stu-id="d5670-872">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="d5670-873">Questo vale per .NET Framework versione 1.1 Service Pack 1 (SP1) e versioni successive.</span><span class="sxs-lookup"><span data-stu-id="d5670-873">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d5670-874">In .NET Framework versione 1.0 e nella versione 1.1 senza SP1, quando si usa un <xref:System.Reflection.Assembly.Load%2A> overload del metodo con un `Byte[]` parametro per caricare un'immagine COFF, l'evidenza viene combinato.</span><span class="sxs-lookup"><span data-stu-id="d5670-874">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="d5670-875">`Zone`, `Url` e `Site` vengono ereditate dall'assembly chiamante, e `Hash` e `StrongName` provengono dall'assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="d5670-875">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="d5670-876">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> metodo con un `Byte[]` parametro e <xref:System.Security.Policy.Evidence> per caricare un'immagine COFF, viene utilizzato solo l'evidenza fornita.</span><span class="sxs-lookup"><span data-stu-id="d5670-876">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="d5670-877">L'evidenza dell'assembly chiamante e quella dell'immagine COFF viene ignorati.</span><span class="sxs-lookup"><span data-stu-id="d5670-877">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="d5670-878">La reflection su file eseguibili C++ può generare un <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="d5670-878">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="d5670-879">Ciò è probabilmente causato da del compilatore C++ degli indirizzi di rilocazione o `.reloc` sezione dal file eseguibile.</span><span class="sxs-lookup"><span data-stu-id="d5670-879">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="d5670-880">Per mantenere la `.reloc` degli indirizzi per il file eseguibile C++, specificare `/fixed:no` quando ci si sta collegando.</span><span class="sxs-lookup"><span data-stu-id="d5670-880">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="d5670-881">Se si chiama questo metodo più volte nello stesso assembly ma con una prova diversa specificata, common language runtime non genera un <xref:System.IO.FileLoadException> perché non è possibile determinare l'uguaglianza e l'integrità delle specifiche di evidenza diversa.</span><span class="sxs-lookup"><span data-stu-id="d5670-881">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="d5670-882">L'evidenza che innanzitutto ha esito positivo sia l'evidenza utilizzata.</span><span class="sxs-lookup"><span data-stu-id="d5670-882">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 <span data-ttu-id="d5670-883">In .NET Framework versione 2.0, architettura del processore viene aggiunto all'identità dell'assembly e può essere specificato come parte di stringhe di nomi di assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-883">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="d5670-884">Ad esempio, "ProcessorArchitecture = msil".</span><span class="sxs-lookup"><span data-stu-id="d5670-884">For example, "ProcessorArchitecture=msil".</span></span> <span data-ttu-id="d5670-885">Tuttavia, il metodo consigliato per specificare un nome di assembly consiste nel creare un <xref:System.Reflection.AssemblyName> dell'oggetto e passarlo a un overload appropriato del <xref:System.Reflection.Assembly.Load%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-885">However, the recommended way to specify an assembly name is to create an <xref:System.Reflection.AssemblyName> object and pass it to an appropriate overload of the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="d5670-886">Vedere <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5670-886">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-887">
            <paramref name="assemblyString" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-887">
              <paramref name="assemblyString" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-888">
            <paramref name="assemblyString" /> non trovata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-888">
              <paramref name="assemblyString" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-889">
            <paramref name="assemblyString" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-889">
              <paramref name="assemblyString" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-890">- oppure - Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="assemblyString" /> è stato compilato con una versione successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-890">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-891">Non è stato possibile caricare un file trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-891">A file that was found could not be loaded.</span>
          </span>
          <span data-ttu-id="d5670-892">- oppure - Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-892">-or-  An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d5670-893">per caricare un assembly con evidenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-893">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="d5670-894">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-894">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte(), rawSymbolStore As Byte(), securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberSignature Language="F#" Value="static member Load : byte[] * byte[] * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load (rawAssembly, rawSymbolStore, securityEvidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="d5670-895">Matrice di byte costituita da un'immagine in formato COFF contenente un assembly generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-895">A byte array that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="d5670-896">Matrice di byte contenente i byte non elaborati che rappresentano i simboli per l'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-896">A byte array that contains the raw bytes representing the symbols for the assembly.</span>
          </span>
        </param>
        <param name="securityEvidence">
          <span data-ttu-id="d5670-897">Evidenza per il caricamento dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-897">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-898">Carica l'assembly con un'immagine in formato COFF (Common Object File Format) che contiene un assembly generato e include facoltativamente i simboli e l'evidenza per l'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-898">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols and evidence for the assembly.</span>
          </span>
          <span data-ttu-id="d5670-899">L'assembly viene caricato nel dominio applicazione del chiamante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-899">The assembly is loaded into the application domain of the caller.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-900">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-900">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-901">L'assembly viene caricato nel dominio del chiamante usando l'evidenza fornita.</span><span class="sxs-lookup"><span data-stu-id="d5670-901">The assembly is loaded into the domain of the caller using the supplied evidence.</span></span> <span data-ttu-id="d5670-902">Vengono caricati anche i byte non elaborati che rappresentano i simboli per l'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-902">The raw bytes representing the symbols for the assembly are also loaded.</span></span>  
  
 <span data-ttu-id="d5670-903">Se sussistano o meno le autorizzazioni per l'utilizzo di un assembly lo si evince dalle evidenze.</span><span class="sxs-lookup"><span data-stu-id="d5670-903">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="d5670-904">Le regole per l'assembly e l'unione all'evidenza di sicurezza sono come segue:</span><span class="sxs-lookup"><span data-stu-id="d5670-904">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="d5670-905">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> metodo senza alcun <xref:System.Security.Policy.Evidence> parametro, l'assembly viene caricato con l'evidenza fornita dal caricamento.</span><span class="sxs-lookup"><span data-stu-id="d5670-905">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="d5670-906">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> metodo con un <xref:System.Security.Policy.Evidence> parametro, evidenze vengono uniti.</span><span class="sxs-lookup"><span data-stu-id="d5670-906">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="d5670-907">Evidenze fornito come argomento per il <xref:System.Reflection.Assembly.Load%2A> metodo sostituiscono quelle di evidenza fornita dal caricatore.</span><span class="sxs-lookup"><span data-stu-id="d5670-907">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="d5670-908">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> overload del metodo con un `Byte[]` parametro per caricare un'immagine COFF, l'evidenza viene ereditato dall'assembly chiamante.</span><span class="sxs-lookup"><span data-stu-id="d5670-908">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="d5670-909">Questo vale per .NET Framework versione 1.1 Service Pack 1 (SP1) e versioni successive.</span><span class="sxs-lookup"><span data-stu-id="d5670-909">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d5670-910">In .NET Framework versione 1.0 e nella versione 1.1 senza SP1, quando si usa un <xref:System.Reflection.Assembly.Load%2A> overload del metodo con un `Byte[]` parametro per caricare un'immagine COFF, l'evidenza viene combinato.</span><span class="sxs-lookup"><span data-stu-id="d5670-910">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="d5670-911">`Zone`, `Url` e `Site` vengono ereditate dall'assembly chiamante, e `Hash` e `StrongName` provengono dall'assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="d5670-911">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="d5670-912">Quando si usa un <xref:System.Reflection.Assembly.Load%2A> metodo con un `Byte[]` parametro e <xref:System.Security.Policy.Evidence> per caricare un'immagine COFF, viene utilizzato solo l'evidenza fornita.</span><span class="sxs-lookup"><span data-stu-id="d5670-912">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="d5670-913">L'evidenza dell'assembly chiamante e quella dell'immagine COFF vengono ignorati.</span><span class="sxs-lookup"><span data-stu-id="d5670-913">Evidence of the calling assembly and evidence of the COFF image are ignored.</span></span>  
  
 <span data-ttu-id="d5670-914">La reflection su file eseguibili C++ può generare un <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="d5670-914">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="d5670-915">Ciò è probabilmente causato da del compilatore C++ degli indirizzi di rilocazione o `.reloc` sezione dal file eseguibile.</span><span class="sxs-lookup"><span data-stu-id="d5670-915">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="d5670-916">Per mantenere la `.reloc` degli indirizzi per il file eseguibile C++, specificare `/fixed:no` quando ci si sta collegando.</span><span class="sxs-lookup"><span data-stu-id="d5670-916">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="d5670-917">Se si chiama il [\], Byte\<xref:System.Reflection.Assembly.Load%2A > metodo più di una volta nello stesso assembly ma con una prova diversa specificata, common language runtime non genera un <xref:System.IO.FileLoadException> perché il Impossibile determinare l'uguaglianza e l'integrità delle specifiche di evidenza diversa.</span><span class="sxs-lookup"><span data-stu-id="d5670-917">If you call the [\], Byte\<xref:System.Reflection.Assembly.Load%2A> method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="d5670-918">L'evidenza che innanzitutto ha esito positivo sia l'evidenza utilizzata.</span><span class="sxs-lookup"><span data-stu-id="d5670-918">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 <span data-ttu-id="d5670-919">Si noti che questo overload del metodo crea sempre un nuovo <xref:System.Reflection.Assembly> oggetto con il proprio mapping.</span><span class="sxs-lookup"><span data-stu-id="d5670-919">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-920">
            <paramref name="rawAssembly" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-920">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-921">
            <paramref name="rawAssembly" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-921">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-922">- oppure - Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="rawAssembly" /> è stato compilato con una versione successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-922">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-923">Un assembly o un modulo è stato caricato due volte con due evidenze diverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-923">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d5670-924">
            <paramref name="securityEvidence" /> non è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-924">
              <paramref name="securityEvidence" /> is not <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d5670-925">Per impostazione predefinita, i criteri CAS legacy non sono abilitati in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]; quando non è abilitato, <paramref name="securityEvidence" /> deve essere <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-925">By default, legacy CAS policy is not enabled in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]; when it is not enabled, <paramref name="securityEvidence" /> must be <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d5670-926">Per poter fornire l'evidenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-926">for the ability to supply evidence.</span>
          </span>
          <span data-ttu-id="d5670-927">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-927">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
          <span data-ttu-id="d5670-928">Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-928">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.SecurityContextSource securityContextSource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore, valuetype System.Security.SecurityContextSource securityContextSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore, System::Security::SecurityContextSource securityContextSource);" />
      <MemberSignature Language="F#" Value="static member Load : byte[] * byte[] * System.Security.SecurityContextSource -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load (rawAssembly, rawSymbolStore, securityContextSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
        <Parameter Name="securityContextSource" Type="System.Security.SecurityContextSource" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="d5670-929">Matrice di byte costituita da un'immagine in formato COFF contenente un assembly generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-929">A byte array that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="d5670-930">Matrice di byte contenente i byte non elaborati che rappresentano i simboli per l'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-930">A byte array that contains the raw bytes representing the symbols for the assembly.</span>
          </span>
        </param>
        <param name="securityContextSource">
          <span data-ttu-id="d5670-931">Origine del contesto di sicurezza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-931">The source of the security context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-932">Carica l'assembly con un'immagine in formato COFF (Common Object File Format) che contiene un assembly generato, include facoltativamente i simboli e specifica l'origine per il contesto di sicurezza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-932">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols and specifying the source for the security context.</span>
          </span>
          <span data-ttu-id="d5670-933">L'assembly viene caricato nel dominio applicazione del chiamante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-933">The assembly is loaded into the application domain of the caller.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-934">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-934">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-935">L'assembly viene caricato nel dominio applicazione del chiamante usando l'origine specificata per il contesto di sicurezza.</span><span class="sxs-lookup"><span data-stu-id="d5670-935">The assembly is loaded into the application domain of the caller using the specified source for the security context.</span></span> <span data-ttu-id="d5670-936">Se `rawSymbolStore` è stato specificato, vengono caricati anche i byte non elaborati che rappresentano i simboli per l'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-936">If `rawSymbolStore` was specified, the raw bytes that represent the symbols for the assembly are also loaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-937">
            <paramref name="rawAssembly" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-937">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-938">
            <paramref name="rawAssembly" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-938">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-939">- oppure - <paramref name="rawAssembly" /> è stato compilato con una versione successiva di Common Language Runtime rispetto alla versione attualmente caricata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-939">-or-  <paramref name="rawAssembly" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5670-940">Il valore di <paramref name="securityContextSource" /> non è uno dei valori di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-940">The value of <paramref name="securityContextSource" /> is not one of the enumeration values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFile">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-941">Carica il contenuto di un file di assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-941">Loads the contents of an assembly file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFile (path As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member LoadFile : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="d5670-942">Percorso completo del file da caricare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-942">The fully qualified path of the file to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-943">Carica il contenuto di un file di assembly nel percorso specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-943">Loads the contents of an assembly file on the specified path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-944">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-944">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-945">Utilizzare il <xref:System.Reflection.Assembly.LoadFile%2A> metodo per caricare ed esaminare gli assembly che hanno la stessa identità, ma si trovano in percorsi diversi.<xref:System.Reflection.Assembly.LoadFile%2A></span><span class="sxs-lookup"><span data-stu-id="d5670-945">Use the <xref:System.Reflection.Assembly.LoadFile%2A> method to load and examine assemblies that have the same identity, but are located in different paths.<xref:System.Reflection.Assembly.LoadFile%2A></span></span> <span data-ttu-id="d5670-946">Carica i file nel contesto di caricamento e non viene risolto le dipendenze tramite il percorso di caricamento, come il <xref:System.Reflection.Assembly.LoadFrom%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-946">does not load files into the load-from  context, and does not resolve dependencies using the load path, as the <xref:System.Reflection.Assembly.LoadFrom%2A> method does.</span></span> <span data-ttu-id="d5670-947"><xref:System.Reflection.Assembly.LoadFile%2A> è utile in questo scenario limitato perché <xref:System.Reflection.Assembly.LoadFrom%2A> non può essere utilizzato per caricare gli assembly con le stesse identità ma percorsi diversi, come verrà caricato solo il primo assembly di questo tipo.</span><span class="sxs-lookup"><span data-stu-id="d5670-947"><xref:System.Reflection.Assembly.LoadFile%2A> is useful in this limited scenario because <xref:System.Reflection.Assembly.LoadFrom%2A> cannot be used to load assemblies that have the same identities but different paths; it will load only the first such assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-948">L'argomento <paramref name="path" /> non è un percorso assoluto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-948">The <paramref name="path" /> argument is not an absolute path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-949">Il valore del parametro <paramref name="path" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-949">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-950">Non è stato possibile caricare un file trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-950">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-951">Il parametro <paramref name="path" /> è una stringa vuota ("") o non esiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-951">The <paramref name="path" /> parameter is an empty string ("") or does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-952">
            <paramref name="path" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-952">
              <paramref name="path" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-953">- oppure - Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="path" /> è stato compilato con una versione successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-953">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="path" /> was compiled with a later version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="d5670-954">per l'accesso in lettura da un file o directory e per l'accesso alle informazioni presenti nel percorso stesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-954">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="d5670-955">Enumerazioni associate: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-955">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d5670-956">per caricare un assembly con evidenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-956">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="d5670-957">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-957">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFile (string path, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFile(string path, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFile (path As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFile(System::String ^ path, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberSignature Language="F#" Value="static member LoadFile : string * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFile (path, securityEvidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="d5670-958">Percorso completo del file di assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-958">The fully qualified path of the assembly file.</span>
          </span>
        </param>
        <param name="securityEvidence">
          <span data-ttu-id="d5670-959">Evidenza per il caricamento dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-959">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-960">Carica un assembly in base al percorso nel dominio del chiamante, usando l'evidenza fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-960">Loads an assembly given its path, loading the assembly into the domain of the caller using the supplied evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-961">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-961">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-962">Utilizzare il <xref:System.Reflection.Assembly.LoadFile%2A> metodo per caricare ed esaminare gli assembly che hanno la stessa identità, ma si trovano in percorsi diversi.</span><span class="sxs-lookup"><span data-stu-id="d5670-962">Use the <xref:System.Reflection.Assembly.LoadFile%2A> method to load and examine assemblies that have the same identity, but are located in different paths.</span></span> <span data-ttu-id="d5670-963"><xref:System.Reflection.Assembly.LoadFile%2A> non carica i file nel <xref:System.Reflection.Assembly.LoadFrom%2A> contesto e non viene risolto le dipendenze tramite il percorso di caricamento, come il <xref:System.Reflection.Assembly.LoadFrom%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-963"><xref:System.Reflection.Assembly.LoadFile%2A> does not load files into the <xref:System.Reflection.Assembly.LoadFrom%2A> context, and does not resolve dependencies using the load path, as the <xref:System.Reflection.Assembly.LoadFrom%2A> method does.</span></span> <span data-ttu-id="d5670-964"><xref:System.Reflection.Assembly.LoadFile%2A> è utile in questo scenario limitato perché <xref:System.Reflection.Assembly.LoadFrom%2A> non può essere utilizzato per caricare gli assembly con le stesse identità ma percorsi diversi, come verrà caricato solo il primo assembly di questo tipo.</span><span class="sxs-lookup"><span data-stu-id="d5670-964"><xref:System.Reflection.Assembly.LoadFile%2A> is useful in this limited scenario because <xref:System.Reflection.Assembly.LoadFrom%2A> cannot be used to load assemblies that have the same identities but different paths; it will load only the first such assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-965">L'argomento <paramref name="path" /> non è un percorso assoluto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-965">The <paramref name="path" /> argument is not an absolute path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-966">Il valore del parametro <paramref name="path" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-966">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-967">Il parametro <paramref name="path" /> è una stringa vuota ("") o non esiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-967">The <paramref name="path" /> parameter is an empty string ("") or does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-968">Non è stato possibile caricare un file trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-968">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-969">
            <paramref name="path" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-969">
              <paramref name="path" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-970">- oppure - Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="path" /> è stato compilato con una versione successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-970">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="path" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d5670-971">
            <paramref name="securityEvidence" /> non è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-971">
              <paramref name="securityEvidence" /> is not <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d5670-972">Per impostazione predefinita, i criteri CAS legacy non sono abilitati in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]; quando non è abilitato, <paramref name="securityEvidence" /> deve essere <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-972">By default, legacy CAS policy is not enabled in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]; when it is not enabled, <paramref name="securityEvidence" /> must be <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="d5670-973">per l'accesso in lettura da un file o directory e per l'accesso alle informazioni presenti nel percorso stesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-973">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="d5670-974">Enumerazioni associate: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-974">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d5670-975">per caricare un assembly con evidenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-975">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="d5670-976">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-976">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-977">Carica un assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-977">Loads an assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile);" />
      <MemberSignature Language="F#" Value="static member LoadFrom : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFrom assemblyFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="d5670-978">Nome o percorso del file che contiene il manifesto dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-978">The name or path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-979">Carica un assembly in base al nome file o al percorso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-979">Loads an assembly given its file name or path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-980">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-980">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-981">Il `assemblyFile` parametro deve fare riferimento a un URI senza caratteri di escape.</span><span class="sxs-lookup"><span data-stu-id="d5670-981">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="d5670-982">Questo metodo fornisce caratteri di escape per tutti i caratteri non validi nell'URI.</span><span class="sxs-lookup"><span data-stu-id="d5670-982">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-983">File transfer protocol (FTP) non è supportata.</span><span class="sxs-lookup"><span data-stu-id="d5670-983">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="d5670-984">Se l'URI fornito per `assemblyFile` è un indirizzo FTP, l'assembly non viene caricato.</span><span class="sxs-lookup"><span data-stu-id="d5670-984">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="d5670-985">Non viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="d5670-985">No exception is thrown.</span></span>  
  
 <span data-ttu-id="d5670-986">`assemblyFile` può essere assoluto o relativo alla directory corrente, e l'assembly viene caricato nel dominio del chiamante.</span><span class="sxs-lookup"><span data-stu-id="d5670-986">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="d5670-987">Gli assembly possono essere caricati in uno dei tre contesti, o possono essere caricati senza contesto:</span><span class="sxs-lookup"><span data-stu-id="d5670-987">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="d5670-988">Il contesto di caricamento contiene gli assembly rilevati tramite individuazione tramite probe: nella GAC, archiviate in un assembly host se è ospitato il runtime o nel <xref:System.AppDomainSetup.ApplicationBase%2A> e <xref:System.AppDomainSetup.PrivateBinPath%2A> del dominio applicazione.</span><span class="sxs-lookup"><span data-stu-id="d5670-988">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="d5670-989">La maggior parte degli overload del metodo <xref:System.Reflection.Assembly.Load%2A> carica gli assembly in questo contesto.</span><span class="sxs-lookup"><span data-stu-id="d5670-989">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="d5670-990">Il contesto di caricamento contiene gli assembly per cui l'utente ha fornito un percorso non incluso nella directory di ricerca mediante la ricerca.</span><span class="sxs-lookup"><span data-stu-id="d5670-990">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="d5670-991"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> e <xref:System.AppDomain.ExecuteAssembly%2A> sono esempi di metodi che vengono caricati in base al percorso.</span><span class="sxs-lookup"><span data-stu-id="d5670-991"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  
  
-   <span data-ttu-id="d5670-992">Contesto reflection-only contiene gli assembly caricati con il <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> e <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> i metodi, codice in tali contesti non possono essere eseguiti.</span><span class="sxs-lookup"><span data-stu-id="d5670-992">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="d5670-993">Se l'utente generato o l'assembly è stato trovato, non è in qualsiasi contesto.</span><span class="sxs-lookup"><span data-stu-id="d5670-993">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="d5670-994">Questo vale per gli assembly caricati tramite gli overload del <xref:System.Reflection.Assembly.Load%2A> metodo che specificano una matrice di byte che contiene un assembly e per gli assembly dinamici temporanei creati con reflection emit e non salvate su disco.</span><span class="sxs-lookup"><span data-stu-id="d5670-994">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="d5670-995">Il contesto di caricamento consente a un assembly deve essere caricata da un percorso non incluso nel sondaggio e consente ancora di dipendenze in tale percorso per trovare e caricare poiché le informazioni sul percorso viene gestiti dal contesto.</span><span class="sxs-lookup"><span data-stu-id="d5670-995">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="d5670-996">Il <xref:System.Reflection.Assembly.LoadFrom%2A> metodo presenta gli svantaggi seguenti.</span><span class="sxs-lookup"><span data-stu-id="d5670-996">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="d5670-997">In alternativa, considerare l'utilizzo di <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5670-997">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="d5670-998">Se è già caricato un assembly con la stessa identità <xref:System.Reflection.Assembly.LoadFrom%2A> restituisce l'assembly caricato anche se è stato specificato un percorso diverso.</span><span class="sxs-lookup"><span data-stu-id="d5670-998">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="d5670-999">Se un assembly viene caricato con <xref:System.Reflection.Assembly.LoadFrom%2A>e un assembly nel contesto di caricamento in un secondo momento tenta di caricare lo stesso assembly con nome visualizzato, il tentativo di caricamento ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="d5670-999">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="d5670-1000">Ciò può verificarsi quando un assembly viene deserializzato.</span><span class="sxs-lookup"><span data-stu-id="d5670-1000">This can occur when an assembly is de-serialized.</span></span>  
  
-   <span data-ttu-id="d5670-1001">Se un assembly viene caricato con <xref:System.Reflection.Assembly.LoadFrom%2A>, e il percorso di sondaggio include un assembly con la stessa identità, un percorso diverso, ma un <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, o possono verificarsi altri comportamenti imprevisti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1001">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="d5670-1002"><xref:System.Reflection.Assembly.LoadFrom%2A> richiede <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> e <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType> o <xref:System.Net.WebPermission> per il percorso specificato.</span><span class="sxs-lookup"><span data-stu-id="d5670-1002"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="d5670-1003">Se è destinato a un'immagine nativa `assemblyFile`, non viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="d5670-1003">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="d5670-1004">L'assembly non può essere caricato come indipendente dal dominio.</span><span class="sxs-lookup"><span data-stu-id="d5670-1004">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="d5670-1005">In .NET Framework versioni 1.0 e 1.1, criteri non vengono applicati.</span><span class="sxs-lookup"><span data-stu-id="d5670-1005">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5670-1006">Nell'esempio seguente carica un assembly in base al nome del file o al percorso.</span><span class="sxs-lookup"><span data-stu-id="d5670-1006">The following example loads an assembly given its file name or path.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#11)]
 [!code-csharp[System.Reflection.Assembly#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#11)]
 [!code-vb[System.Reflection.Assembly#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-1007">
            <paramref name="assemblyFile" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1007">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-1008">
            <paramref name="assemblyFile" /> non viene trovato oppure il modulo che si sta provando a caricare non specifica un'estensione del nome file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1008">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-1009">Non è stato possibile caricare un file trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1009">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-1010">
            <paramref name="assemblyFile" /> non è un assembly valido; ad esempio, un assembly a 32 bit in un processo a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1010">
              <paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span>
          </span>
          <span data-ttu-id="d5670-1011">Per altre informazioni, vedere l'argomento relativo alle eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1011">See the exception topic for more information.</span>
          </span>
          <span data-ttu-id="d5670-1012">- oppure - Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="assemblyFile" /> è stato compilato con una versione successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1012">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d5670-1013">È stata specificata una base di codici che non inizia con "file://" senza la classe <see cref="T:System.Net.WebPermission" /> richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1013">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-1014">Il parametro <paramref name="assemblyFile" /> è una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1014">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="d5670-1015">Il nome dell'assembly supera la lunghezza massima definita dal sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1015">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="d5670-1016">per la lettura di un URI che inizia con "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1016">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="d5670-1017">Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1017">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="d5670-1018">per la lettura di un URI che iniziano con "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1018">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberSignature Language="F#" Value="static member LoadFrom : string * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFrom (assemblyFile, securityEvidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="d5670-1019">Nome o percorso del file che contiene il manifesto dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1019">The name or path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <param name="securityEvidence">
          <span data-ttu-id="d5670-1020">Evidenza per il caricamento dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1020">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-1021">Carica un assembly in base al nome file o al percorso e fornendo l'evidenza di sicurezza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1021">Loads an assembly given its file name or path and supplying security evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-1022">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1022">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-1023">Il `assemblyFile` parametro deve fare riferimento a un URI senza caratteri di escape.</span><span class="sxs-lookup"><span data-stu-id="d5670-1023">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="d5670-1024">Questo metodo fornisce caratteri di escape per tutti i caratteri non validi nell'URI.</span><span class="sxs-lookup"><span data-stu-id="d5670-1024">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-1025">File transfer protocol (FTP) non è supportata.</span><span class="sxs-lookup"><span data-stu-id="d5670-1025">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="d5670-1026">Se l'URI fornito per `assemblyFile` è un indirizzo FTP, l'assembly non viene caricato.</span><span class="sxs-lookup"><span data-stu-id="d5670-1026">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="d5670-1027">Non viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="d5670-1027">No exception is thrown.</span></span>  
  
 <span data-ttu-id="d5670-1028">`assemblyFile` può essere assoluto o relativo alla directory corrente, e l'assembly viene caricato nel dominio del chiamante.</span><span class="sxs-lookup"><span data-stu-id="d5670-1028">`assemblyFile` may be absolute or  relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="d5670-1029">Gli assembly possono essere caricati in uno dei tre contesti, o possono essere caricati senza contesto:</span><span class="sxs-lookup"><span data-stu-id="d5670-1029">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="d5670-1030">Il contesto di caricamento contiene gli assembly rilevati tramite individuazione tramite probe: nella GAC, archiviate in un assembly host se è ospitato il runtime o nel <xref:System.AppDomainSetup.ApplicationBase%2A> e <xref:System.AppDomainSetup.PrivateBinPath%2A> del dominio applicazione.</span><span class="sxs-lookup"><span data-stu-id="d5670-1030">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="d5670-1031">La maggior parte degli overload del metodo <xref:System.Reflection.Assembly.Load%2A> carica gli assembly in questo contesto.</span><span class="sxs-lookup"><span data-stu-id="d5670-1031">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="d5670-1032">Il contesto di caricamento contiene gli assembly per cui l'utente ha fornito un percorso non incluso nella directory di ricerca mediante la ricerca.</span><span class="sxs-lookup"><span data-stu-id="d5670-1032">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="d5670-1033"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> e <xref:System.AppDomain.ExecuteAssembly%2A> sono esempi di metodi che vengono caricati in base al percorso.</span><span class="sxs-lookup"><span data-stu-id="d5670-1033"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  
  
-   <span data-ttu-id="d5670-1034">Contesto reflection-only contiene gli assembly caricati con il <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> e <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> i metodi, codice in tali contesti non possono essere eseguiti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1034">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="d5670-1035">Se l'utente generato o l'assembly è stato trovato, non è in qualsiasi contesto.</span><span class="sxs-lookup"><span data-stu-id="d5670-1035">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="d5670-1036">Questo vale per gli assembly caricati tramite gli overload del <xref:System.Reflection.Assembly.Load%2A> metodo che specificano una matrice di byte che contiene un assembly e per gli assembly dinamici temporanei creati con reflection emit e non salvate su disco.</span><span class="sxs-lookup"><span data-stu-id="d5670-1036">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="d5670-1037">Il contesto di caricamento consente a un assembly deve essere caricata da un percorso non incluso nel sondaggio e consente ancora di dipendenze in tale percorso per trovare e caricare poiché le informazioni sul percorso viene gestiti dal contesto.</span><span class="sxs-lookup"><span data-stu-id="d5670-1037">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="d5670-1038">Il <xref:System.Reflection.Assembly.LoadFrom%2A> metodo presenta gli svantaggi seguenti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1038">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="d5670-1039">In alternativa, considerare l'utilizzo di <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5670-1039">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="d5670-1040">Se è già caricato un assembly con la stessa identità <xref:System.Reflection.Assembly.LoadFrom%2A> restituisce l'assembly caricato anche se è stato specificato un percorso diverso.</span><span class="sxs-lookup"><span data-stu-id="d5670-1040">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="d5670-1041">Se un assembly viene caricato con <xref:System.Reflection.Assembly.LoadFrom%2A>e un assembly nel contesto di caricamento in un secondo momento tenta di caricare lo stesso assembly con nome visualizzato, il tentativo di caricamento ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="d5670-1041">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="d5670-1042">Questa situazione può verificarsi quando un assembly è deserializzato.</span><span class="sxs-lookup"><span data-stu-id="d5670-1042">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="d5670-1043">Se un assembly viene caricato con <xref:System.Reflection.Assembly.LoadFrom%2A>, e il percorso di sondaggio include un assembly con la stessa identità, un percorso diverso, ma un <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, o possono verificarsi altri comportamenti imprevisti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1043">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="d5670-1044"><xref:System.Reflection.Assembly.LoadFrom%2A> richiede <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> e <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType> o <xref:System.Net.WebPermission> per il percorso specificato.</span><span class="sxs-lookup"><span data-stu-id="d5670-1044"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="d5670-1045">Se è destinato a un'immagine nativa `assemblyFile`, non viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="d5670-1045">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="d5670-1046">L'assembly non può essere caricato come indipendente dal dominio.</span><span class="sxs-lookup"><span data-stu-id="d5670-1046">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="d5670-1047">In .NET Framework versioni 1.0 e 1.1, criteri non vengono applicati.</span><span class="sxs-lookup"><span data-stu-id="d5670-1047">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
 <span data-ttu-id="d5670-1048">Se sussistano o meno le autorizzazioni per l'utilizzo di un assembly lo si evince dalle evidenze.</span><span class="sxs-lookup"><span data-stu-id="d5670-1048">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="d5670-1049">Le regole per l'assembly e l'unione all'evidenza di sicurezza sono come segue:</span><span class="sxs-lookup"><span data-stu-id="d5670-1049">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="d5670-1050">Quando si usa un <xref:System.Reflection.Assembly.LoadFrom%2A> metodo senza alcun <xref:System.Security.Policy.Evidence> parametro, l'assembly viene caricato con l'evidenza fornita dal caricamento.</span><span class="sxs-lookup"><span data-stu-id="d5670-1050">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="d5670-1051">Quando si usa un <xref:System.Reflection.Assembly.LoadFrom%2A> metodo con un <xref:System.Security.Policy.Evidence> parametro, evidenze vengono uniti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1051">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="d5670-1052">Evidenze fornito come argomento per il <xref:System.Reflection.Assembly.LoadFrom%2A> metodo sostituiscono quelle di evidenza fornita dal caricatore.</span><span class="sxs-lookup"><span data-stu-id="d5670-1052">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.LoadFrom%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="d5670-1053">Se si chiama questo metodo più volte nello stesso assembly ma con una prova diversa specificata, common language runtime non genera un <xref:System.IO.FileLoadException> perché non è possibile determinare l'uguaglianza e l'integrità delle specifiche di evidenza diversa.</span><span class="sxs-lookup"><span data-stu-id="d5670-1053">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="d5670-1054">L'evidenza che innanzitutto ha esito positivo sia l'evidenza utilizzata.</span><span class="sxs-lookup"><span data-stu-id="d5670-1054">The evidence that first succeeds is the evidence that is used.</span></span>  
  
-   <span data-ttu-id="d5670-1055">Quando si usa un <xref:System.Reflection.Assembly.LoadFrom%2A> metodo con un `Byte[]` parametro per caricare un'immagine common object file formato COFF (), evidenza viene combinato.</span><span class="sxs-lookup"><span data-stu-id="d5670-1055">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is combined.</span></span> <span data-ttu-id="d5670-1056">`Zone`, `Url` e `Site` vengono ereditate dall'assembly chiamante, e `Hash` e `StrongName` provengono dall'assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="d5670-1056">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="d5670-1057">Quando si usa un <xref:System.Reflection.Assembly.LoadFrom%2A> metodo con un `Byte[]` parametro e <xref:System.Security.Policy.Evidence> per caricare un'immagine COFF, viene utilizzato solo l'evidenza fornita.</span><span class="sxs-lookup"><span data-stu-id="d5670-1057">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="d5670-1058">L'evidenza dell'assembly chiamante e quella dell'immagine COFF viene ignorati.</span><span class="sxs-lookup"><span data-stu-id="d5670-1058">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-1059">
            <paramref name="assemblyFile" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1059">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-1060">
            <paramref name="assemblyFile" /> non viene trovato oppure il modulo che si sta provando a caricare non specifica un'estensione del nome file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1060">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-1061">Non è stato possibile caricare un file trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1061">A file that was found could not be loaded.</span>
          </span>
          <span data-ttu-id="d5670-1062">-oppure- <paramref name="securityEvidence" /> non è ambiguo ed è stato stabilito che non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1062">-or-  The <paramref name="securityEvidence" /> is not ambiguous and is determined to be invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-1063">
            <paramref name="assemblyFile" /> non è un assembly valido; ad esempio, un assembly a 32 bit in un processo a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1063">
              <paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span>
          </span>
          <span data-ttu-id="d5670-1064">Per altre informazioni, vedere l'argomento relativo alle eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1064">See the exception topic for more information.</span>
          </span>
          <span data-ttu-id="d5670-1065">- oppure - Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="assemblyFile" /> è stato compilato con una versione successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1065">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d5670-1066">È stata specificata una base di codici che non inizia con "file://" senza la classe <see cref="T:System.Net.WebPermission" /> richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1066">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-1067">Il parametro <paramref name="assemblyFile" /> è una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1067">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="d5670-1068">Il nome dell'assembly supera la lunghezza massima definita dal sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1068">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d5670-1069">per caricare un assembly con evidenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1069">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="d5670-1070">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1070">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="d5670-1071">per la lettura di un URI che inizia con "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1071">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="d5670-1072">Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1072">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="d5670-1073">per la lettura di un URI che iniziano con "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1073">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="static member LoadFrom : string * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFrom (assemblyFile, hashValue, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="d5670-1074">Nome o percorso del file che contiene il manifesto dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1074">The name or path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <param name="hashValue">
          <span data-ttu-id="d5670-1075">Valore del codice hash calcolato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1075">The value of the computed hash code.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="d5670-1076">Algoritmo hash usato per generare un hash per i file e generare il nome sicuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1076">The hash algorithm used for hashing files and for generating the strong name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-1077">Carica un assembly in base al nome file o al percorso, al valore hash e all'algoritmo hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1077">Loads an assembly given its file name or path, hash value, and hash algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-1078">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1078">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-1079">Il `assemblyFile` parametro deve fare riferimento a un URI senza caratteri di escape.</span><span class="sxs-lookup"><span data-stu-id="d5670-1079">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="d5670-1080">Questo metodo fornisce caratteri di escape per tutti i caratteri non validi nell'URI.</span><span class="sxs-lookup"><span data-stu-id="d5670-1080">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-1081">File transfer protocol (FTP) non è supportata.</span><span class="sxs-lookup"><span data-stu-id="d5670-1081">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="d5670-1082">Se l'URI fornito per `assemblyFile` è un indirizzo FTP, l'assembly non viene caricato.</span><span class="sxs-lookup"><span data-stu-id="d5670-1082">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="d5670-1083">Non viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="d5670-1083">No exception is thrown.</span></span>  
  
 <span data-ttu-id="d5670-1084">`assemblyFile` può essere assoluto o relativo alla directory corrente, e l'assembly viene caricato nel dominio del chiamante.</span><span class="sxs-lookup"><span data-stu-id="d5670-1084">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="d5670-1085">Gli assembly possono essere caricati in uno dei tre contesti, o possono essere caricati senza contesto:</span><span class="sxs-lookup"><span data-stu-id="d5670-1085">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="d5670-1086">Il contesto di caricamento contiene gli assembly rilevati tramite individuazione tramite probe: nella global assembly cache, archiviate in un assembly host se è ospitato il runtime o nel <xref:System.AppDomainSetup.ApplicationBase%2A> e <xref:System.AppDomainSetup.PrivateBinPath%2A> del dominio applicazione.</span><span class="sxs-lookup"><span data-stu-id="d5670-1086">The load context contains assemblies found by probing: in the global assembly cache, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="d5670-1087">La maggior parte degli overload del metodo <xref:System.Reflection.Assembly.Load%2A> carica gli assembly in questo contesto.</span><span class="sxs-lookup"><span data-stu-id="d5670-1087">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="d5670-1088">Il contesto di caricamento contiene gli assembly per cui l'utente ha fornito un percorso che non è incluso nella ricerca.</span><span class="sxs-lookup"><span data-stu-id="d5670-1088">The load-from context contains assemblies for which the user provided a path that is not included in probing.</span></span> <span data-ttu-id="d5670-1089"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> e <xref:System.AppDomain.ExecuteAssembly%2A> sono esempi di metodi che vengono caricati in base al percorso.</span><span class="sxs-lookup"><span data-stu-id="d5670-1089"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  
  
-   <span data-ttu-id="d5670-1090">Contesto reflection-only contiene gli assembly caricati con il <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> e <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> i metodi, codice in tali contesti non possono essere eseguiti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1090">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="d5670-1091">Se l'utente generato o l'assembly è stato trovato, non è in qualsiasi contesto.</span><span class="sxs-lookup"><span data-stu-id="d5670-1091">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="d5670-1092">Questo vale per gli assembly caricati tramite gli overload del <xref:System.Reflection.Assembly.Load%2A> metodo che specificano una matrice di byte che contiene un assembly e per gli assembly dinamici temporanei creati con reflection emit e non salvate su disco.</span><span class="sxs-lookup"><span data-stu-id="d5670-1092">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="d5670-1093">Il contesto di caricamento consente a un assembly deve essere caricata da un percorso che non è incluso nella ricerca e consente ancora di dipendenze in tale percorso per trovare e caricare poiché le informazioni sul percorso viene gestiti dal contesto.</span><span class="sxs-lookup"><span data-stu-id="d5670-1093">The load-from context allows an assembly to be loaded from a path that is not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="d5670-1094">Il <xref:System.Reflection.Assembly.LoadFrom%2A> metodo presenta gli svantaggi seguenti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1094">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="d5670-1095">In alternativa, considerare l'utilizzo di <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5670-1095">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="d5670-1096">Se è già caricato un assembly con la stessa identità <xref:System.Reflection.Assembly.LoadFrom%2A> restituisce l'assembly caricato anche se è stato specificato un percorso diverso.</span><span class="sxs-lookup"><span data-stu-id="d5670-1096">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="d5670-1097">Se un assembly viene caricato con <xref:System.Reflection.Assembly.LoadFrom%2A>e un assembly nel contesto di caricamento in un secondo momento tenta di caricare lo stesso assembly con nome visualizzato, il tentativo di caricamento ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="d5670-1097">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="d5670-1098">Questa situazione può verificarsi quando un assembly è deserializzato.</span><span class="sxs-lookup"><span data-stu-id="d5670-1098">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="d5670-1099">Se un assembly viene caricato con <xref:System.Reflection.Assembly.LoadFrom%2A>, e il percorso di sondaggio include un assembly con la stessa identità, un percorso diverso, ma un <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, o possono verificarsi altri comportamenti imprevisti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1099">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="d5670-1100"><xref:System.Reflection.Assembly.LoadFrom%2A> richiede <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> e <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType> o <xref:System.Net.WebPermission> per il percorso specificato.</span><span class="sxs-lookup"><span data-stu-id="d5670-1100"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="d5670-1101">Se è destinato a un'immagine nativa `assemblyFile`, non viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="d5670-1101">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="d5670-1102">L'assembly non può essere caricato come modulo indipendente dal dominio.</span><span class="sxs-lookup"><span data-stu-id="d5670-1102">The assembly cannot be loaded as domain-neutral.</span></span>  
  
 <span data-ttu-id="d5670-1103">L'assembly viene caricato con l'evidenza fornita dal caricamento.</span><span class="sxs-lookup"><span data-stu-id="d5670-1103">The assembly is loaded with the evidence that the loader supplies.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-1104">
            <paramref name="assemblyFile" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1104">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-1105">
            <paramref name="assemblyFile" /> non è stato trovato oppure il modulo che si sta provando a caricare non specifica un'estensione di file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1105">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a file name extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-1106">Non è stato possibile caricare un file trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1106">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-1107">
            <paramref name="assemblyFile" /> non è un assembly valido; ad esempio, un assembly a 32 bit in un processo a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1107">
              <paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span>
          </span>
          <span data-ttu-id="d5670-1108">Per altre informazioni, vedere l'argomento relativo alle eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1108">See the exception topic for more information.</span>
          </span>
          <span data-ttu-id="d5670-1109">- oppure - <paramref name="assemblyFile" /> è stato compilato con una versione successiva di Common Language Runtime rispetto alla versione attualmente caricata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1109">-or-  <paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d5670-1110">È stata specificata una base di codici che non inizia con "file://" senza la classe <see cref="T:System.Net.WebPermission" /> richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1110">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-1111">Il parametro <paramref name="assemblyFile" /> è una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1111">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="d5670-1112">Il nome dell'assembly supera la lunghezza massima definita dal sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1112">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d5670-1113">per caricare un assembly con evidenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1113">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="d5670-1114">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1114">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="d5670-1115">per la lettura di un URI che inizia con "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1115">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="d5670-1116">Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1116">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="d5670-1117">per la lettura di un URI che iniziano con "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1117">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, System.Security.Policy.Evidence securityEvidence, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, class System.Security.Policy.Evidence securityEvidence, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, securityEvidence As Evidence, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, System::Security::Policy::Evidence ^ securityEvidence, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="static member LoadFrom : string * System.Security.Policy.Evidence * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFrom (assemblyFile, securityEvidence, hashValue, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="d5670-1118">Nome o percorso del file che contiene il manifesto dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1118">The name or path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <param name="securityEvidence">
          <span data-ttu-id="d5670-1119">Evidenza per il caricamento dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1119">Evidence for loading the assembly.</span>
          </span>
        </param>
        <param name="hashValue">
          <span data-ttu-id="d5670-1120">Valore del codice hash calcolato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1120">The value of the computed hash code.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="d5670-1121">Algoritmo hash usato per generare un hash per i file e generare il nome sicuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1121">The hash algorithm used for hashing files and for generating the strong name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-1122">Carica un assembly in base al nome file o al percorso, all'evidenza di sicurezza, al valore hash e all'algoritmo hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1122">Loads an assembly given its file name or path, security evidence, hash value, and hash algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-1123">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1123">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-1124">Il `assemblyFile` parametro deve fare riferimento a un URI senza caratteri di escape.</span><span class="sxs-lookup"><span data-stu-id="d5670-1124">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="d5670-1125">Questo metodo fornisce caratteri di escape per tutti i caratteri non validi nell'URI.</span><span class="sxs-lookup"><span data-stu-id="d5670-1125">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-1126">File transfer protocol (FTP) non è supportata.</span><span class="sxs-lookup"><span data-stu-id="d5670-1126">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="d5670-1127">Se l'URI fornito per `assemblyFile` è un indirizzo FTP, l'assembly non viene caricato.</span><span class="sxs-lookup"><span data-stu-id="d5670-1127">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="d5670-1128">Non viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="d5670-1128">No exception is thrown.</span></span>  
  
 <span data-ttu-id="d5670-1129">`assemblyFile` può essere assoluto o relativo alla directory corrente, e l'assembly viene caricato nel dominio del chiamante.</span><span class="sxs-lookup"><span data-stu-id="d5670-1129">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="d5670-1130">Gli assembly possono essere caricati in uno dei tre contesti, o possono essere caricati senza contesto:</span><span class="sxs-lookup"><span data-stu-id="d5670-1130">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="d5670-1131">Il contesto di caricamento contiene gli assembly rilevati tramite individuazione tramite probe: nella GAC, archiviate in un assembly host se è ospitato il runtime o nel <xref:System.AppDomainSetup.ApplicationBase%2A> e <xref:System.AppDomainSetup.PrivateBinPath%2A> del dominio applicazione.</span><span class="sxs-lookup"><span data-stu-id="d5670-1131">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="d5670-1132">La maggior parte degli overload del metodo <xref:System.Reflection.Assembly.Load%2A> carica gli assembly in questo contesto.</span><span class="sxs-lookup"><span data-stu-id="d5670-1132">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="d5670-1133">Il contesto di caricamento contiene gli assembly per cui l'utente ha fornito un percorso non incluso nella directory di ricerca mediante la ricerca.</span><span class="sxs-lookup"><span data-stu-id="d5670-1133">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="d5670-1134"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> e <xref:System.AppDomain.ExecuteAssembly%2A> sono esempi di metodi che vengono caricati in base al percorso.</span><span class="sxs-lookup"><span data-stu-id="d5670-1134"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  
  
-   <span data-ttu-id="d5670-1135">Contesto reflection-only contiene gli assembly caricati con il <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> e <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> i metodi, codice in tali contesti non possono essere eseguiti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1135">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="d5670-1136">Se l'utente generato o l'assembly è stato trovato, non è in qualsiasi contesto.</span><span class="sxs-lookup"><span data-stu-id="d5670-1136">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="d5670-1137">Questo vale per gli assembly caricati tramite gli overload del <xref:System.Reflection.Assembly.Load%2A> metodo che specificano una matrice di byte che contiene un assembly e per gli assembly dinamici temporanei creati con reflection emit e non salvate su disco.</span><span class="sxs-lookup"><span data-stu-id="d5670-1137">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="d5670-1138">Il contesto di caricamento consente a un assembly deve essere caricata da un percorso non incluso nel sondaggio e consente ancora di dipendenze in tale percorso per trovare e caricare poiché le informazioni sul percorso viene gestiti dal contesto.</span><span class="sxs-lookup"><span data-stu-id="d5670-1138">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="d5670-1139">Il <xref:System.Reflection.Assembly.LoadFrom%2A> metodo presenta gli svantaggi seguenti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1139">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="d5670-1140">In alternativa, considerare l'utilizzo di <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5670-1140">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="d5670-1141">Se è già caricato un assembly con la stessa identità <xref:System.Reflection.Assembly.LoadFrom%2A> restituisce l'assembly caricato anche se è stato specificato un percorso diverso.</span><span class="sxs-lookup"><span data-stu-id="d5670-1141">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="d5670-1142">Se un assembly viene caricato con <xref:System.Reflection.Assembly.LoadFrom%2A>e un assembly nel contesto di caricamento in un secondo momento tenta di caricare lo stesso assembly con nome visualizzato, il tentativo di caricamento ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="d5670-1142">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="d5670-1143">Questa situazione può verificarsi quando un assembly è deserializzato.</span><span class="sxs-lookup"><span data-stu-id="d5670-1143">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="d5670-1144">Se un assembly viene caricato con <xref:System.Reflection.Assembly.LoadFrom%2A>, e il percorso di sondaggio include un assembly con la stessa identità, un percorso diverso, ma un <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, o possono verificarsi altri comportamenti imprevisti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1144">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="d5670-1145"><xref:System.Reflection.Assembly.LoadFrom%2A> richiede <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> e <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType> o <xref:System.Net.WebPermission> per il percorso specificato.</span><span class="sxs-lookup"><span data-stu-id="d5670-1145"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="d5670-1146">Se è destinato a un'immagine nativa `assemblyFile`, non viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="d5670-1146">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="d5670-1147">L'assembly non può essere caricato come indipendente dal dominio.</span><span class="sxs-lookup"><span data-stu-id="d5670-1147">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="d5670-1148">In .NET Framework versioni 1.0 e 1.1, criteri non vengono applicati.</span><span class="sxs-lookup"><span data-stu-id="d5670-1148">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
 <span data-ttu-id="d5670-1149">Se sussistano o meno le autorizzazioni per l'utilizzo di un assembly lo si evince dalle evidenze.</span><span class="sxs-lookup"><span data-stu-id="d5670-1149">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="d5670-1150">Le regole per l'assembly e l'unione all'evidenza di sicurezza sono come segue:</span><span class="sxs-lookup"><span data-stu-id="d5670-1150">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="d5670-1151">Quando si usa un <xref:System.Reflection.Assembly.LoadFrom%2A> metodo senza alcun <xref:System.Security.Policy.Evidence> parametro, l'assembly viene caricato con l'evidenza fornita dal caricamento.</span><span class="sxs-lookup"><span data-stu-id="d5670-1151">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="d5670-1152">Quando si usa un <xref:System.Reflection.Assembly.LoadFrom%2A> metodo con un <xref:System.Security.Policy.Evidence> parametro, evidenze vengono uniti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1152">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="d5670-1153">Evidenze fornito come argomento per il <xref:System.Reflection.Assembly.LoadFrom%2A> metodo sostituiscono quelle di evidenza fornita dal caricatore.</span><span class="sxs-lookup"><span data-stu-id="d5670-1153">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.LoadFrom%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="d5670-1154">Se si chiama questo metodo più volte nello stesso assembly ma con una prova diversa specificata, common language runtime non genera un <xref:System.IO.FileLoadException> perché non è possibile determinare l'uguaglianza e l'integrità delle specifiche di evidenza diversa.</span><span class="sxs-lookup"><span data-stu-id="d5670-1154">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="d5670-1155">L'evidenza che innanzitutto ha esito positivo sia l'evidenza utilizzata.</span><span class="sxs-lookup"><span data-stu-id="d5670-1155">The evidence that first succeeds is the evidence that is used.</span></span>  
  
-   <span data-ttu-id="d5670-1156">Quando si usa un <xref:System.Reflection.Assembly.LoadFrom%2A> metodo con un `Byte[]` parametro per caricare un'immagine common object file formato COFF (), evidenza viene combinato.</span><span class="sxs-lookup"><span data-stu-id="d5670-1156">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is combined.</span></span> <span data-ttu-id="d5670-1157">`Zone`, `Url` e `Site` vengono ereditate dall'assembly chiamante, e `Hash` e `StrongName` provengono dall'assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="d5670-1157">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="d5670-1158">Quando si usa un <xref:System.Reflection.Assembly.LoadFrom%2A> metodo con un `Byte[]` parametro e <xref:System.Security.Policy.Evidence> per caricare un'immagine COFF, viene utilizzato solo l'evidenza fornita.</span><span class="sxs-lookup"><span data-stu-id="d5670-1158">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="d5670-1159">L'evidenza dell'assembly chiamante e quella dell'immagine COFF viene ignorati.</span><span class="sxs-lookup"><span data-stu-id="d5670-1159">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-1160">
            <paramref name="assemblyFile" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1160">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-1161">
            <paramref name="assemblyFile" /> non viene trovato oppure il modulo che si sta provando a caricare non specifica un'estensione del nome file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1161">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-1162">Non è stato possibile caricare un file trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1162">A file that was found could not be loaded.</span>
          </span>
          <span data-ttu-id="d5670-1163">-oppure- <paramref name="securityEvidence" /> non è ambiguo ed è stato stabilito che non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1163">-or-  The <paramref name="securityEvidence" /> is not ambiguous and is determined to be invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-1164">
            <paramref name="assemblyFile" /> non è un assembly valido; ad esempio, un assembly a 32 bit in un processo a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1164">
              <paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span>
          </span>
          <span data-ttu-id="d5670-1165">Per altre informazioni, vedere l'argomento relativo alle eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1165">See the exception topic for more information.</span>
          </span>
          <span data-ttu-id="d5670-1166">- oppure - Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="assemblyFile" /> è stato compilato con una versione successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1166">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d5670-1167">È stata specificata una base di codici che non inizia con "file://" senza la classe <see cref="T:System.Net.WebPermission" /> richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1167">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-1168">Il parametro <paramref name="assemblyFile" /> è una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1168">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="d5670-1169">Il nome dell'assembly supera la lunghezza massima definita dal sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1169">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d5670-1170">per caricare un assembly con evidenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1170">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="d5670-1171">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1171">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="d5670-1172">per la lettura di un URI che inizia con "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1172">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="d5670-1173">Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1173">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="d5670-1174">per la lettura di un URI che iniziano con "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1174">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadModule">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-1175">Carica il modulo interno a questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1175">Loads the module internal to this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadModule (moduleName As String, rawModule As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule);" />
      <MemberSignature Language="F#" Value="abstract member LoadModule : string * byte[] -&gt; System.Reflection.Module&#xA;override this.LoadModule : string * byte[] -&gt; System.Reflection.Module" Usage="assembly.LoadModule (moduleName, rawModule)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName">
          <span data-ttu-id="d5670-1176">Nome del modulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1176">The name of the module.</span>
          </span>
          <span data-ttu-id="d5670-1177">Questa stringa deve corrispondere a un nome file nel manifesto dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1177">This string must correspond to a file name in this assembly's manifest.</span>
          </span>
        </param>
        <param name="rawModule">
          <span data-ttu-id="d5670-1178">Matrice di byte costituita da un'immagine in formato COFF che contiene un modulo generato o una risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1178">A byte array that is a COFF-based image containing an emitted module, or a resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-1179">Carica il modulo, interno all'assembly, con un'immagine in formato COFF (Common Object File Format) contenente un modulo generato o un file di risorse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1179">Loads the module, internal to this assembly, with a common object file format (COFF)-based image containing an emitted module, or a resource file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-1180">Modulo caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1180">The loaded module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-1181">
            <paramref name="moduleName" /> o <paramref name="rawModule" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1181">
              <paramref name="moduleName" /> or <paramref name="rawModule" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-1182">
            <paramref name="moduleName" /> non corrisponde a una voce di file nel manifesto dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1182">
              <paramref name="moduleName" /> does not match a file entry in this assembly's manifest.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-1183">
            <paramref name="rawModule" /> non è un modulo valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1183">
              <paramref name="rawModule" /> is not a valid module.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-1184">Non è stato possibile caricare un file trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1184">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d5670-1185">per fornire l'evidenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1185">to provide evidence.</span>
          </span>
          <span data-ttu-id="d5670-1186">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1186">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module LoadModule (string moduleName, byte[] rawModule, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadModule (moduleName As String, rawModule As Byte(), rawSymbolStore As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberSignature Language="F#" Value="abstract member LoadModule : string * byte[] * byte[] -&gt; System.Reflection.Module&#xA;override this.LoadModule : string * byte[] * byte[] -&gt; System.Reflection.Module" Usage="assembly.LoadModule (moduleName, rawModule, rawSymbolStore)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName">
          <span data-ttu-id="d5670-1187">Nome del modulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1187">The name of the module.</span>
          </span>
          <span data-ttu-id="d5670-1188">Questa stringa deve corrispondere a un nome file nel manifesto dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1188">This string must correspond to a file name in this assembly's manifest.</span>
          </span>
        </param>
        <param name="rawModule">
          <span data-ttu-id="d5670-1189">Matrice di byte costituita da un'immagine in formato COFF che contiene un modulo generato o una risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1189">A byte array that is a COFF-based image containing an emitted module, or a resource.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="d5670-1190">Matrice di byte contenente i byte non elaborati che rappresentano i simboli per il modulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1190">A byte array containing the raw bytes representing the symbols for the module.</span>
          </span>
          <span data-ttu-id="d5670-1191">Deve essere <see langword="null" /> se si tratta di un file di risorse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1191">Must be <see langword="null" /> if this is a resource file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-1192">Carica il modulo, interno all'assembly, con un'immagine in formato COFF (Common Object File Format) contenente un modulo generato o un file di risorse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1192">Loads the module, internal to this assembly, with a common object file format (COFF)-based image containing an emitted module, or a resource file.</span>
          </span>
          <span data-ttu-id="d5670-1193">Vengono caricati anche i byte non elaborati che rappresentano i simboli per il modulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1193">The raw bytes representing the symbols for the module are also loaded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-1194">Modulo caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1194">The loaded module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-1195">
            <paramref name="moduleName" /> o <paramref name="rawModule" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1195">
              <paramref name="moduleName" /> or <paramref name="rawModule" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-1196">
            <paramref name="moduleName" /> non corrisponde a una voce di file nel manifesto dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1196">
              <paramref name="moduleName" /> does not match a file entry in this assembly's manifest.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-1197">
            <paramref name="rawModule" /> non è un modulo valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1197">
              <paramref name="rawModule" /> is not a valid module.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-1198">Non è stato possibile caricare un file trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1198">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d5670-1199">per fornire l'evidenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1199">to provide evidence.</span>
          </span>
          <span data-ttu-id="d5670-1200">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1200">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadWithPartialName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-1201">Carica un assembly dalla directory dell'applicazione o dalla Global Assembly Cache con un nome parziale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1201">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d5670-1202">Gli overload del <xref:System.Reflection.Assembly.LoadWithPartialName%2A?displayProperty=nameWithType> metodo sono obsoleto e sono state mantenute per la compatibilità con le versioni precedenti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1202">The overloads of the <xref:System.Reflection.Assembly.LoadWithPartialName%2A?displayProperty=nameWithType> method are obsolete and have been retained for backward compatibility.</span></span> <span data-ttu-id="d5670-1203">L'alternativa non obsoleta è <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5670-1203">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadWithPartialName">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadWithPartialName (string partialName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadWithPartialName(string partialName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadWithPartialName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadWithPartialName (partialName As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadWithPartialName(System::String ^ partialName);" />
      <MemberSignature Language="F#" Value="static member LoadWithPartialName : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadWithPartialName partialName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partialName">
          <span data-ttu-id="d5670-1204">Nome visualizzato dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1204">The display name of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-1205">Carica un assembly dalla directory dell'applicazione o dalla Global Assembly Cache con un nome parziale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1205">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-1206">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1206">The loaded assembly.</span>
          </span>
          <span data-ttu-id="d5670-1207">Se <paramref name="partialName" /> non viene trovato, il metodo restituisce <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1207">If <paramref name="partialName" /> is not found, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d5670-1208">Il <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%29> metodo è obsoleto ed è stata mantenuta per compatibilità con le versioni precedenti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1208">The <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%29> method is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="d5670-1209">L'alternativa non obsoleta è <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5670-1209">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5670-1210">Le applicazioni che caricano gli assembly con questo metodo verranno interessate dagli aggiornamenti di tali assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-1210">Applications that load assemblies with this method will be affected by upgrades of those assemblies.</span></span> <span data-ttu-id="d5670-1211">Pertanto, non utilizzare questo metodo. riprogettare l'applicazione utilizzi la <xref:System.Reflection.Assembly.Load%28System.String%29> overload del metodo o la <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-1211">Therefore, do not use this method; redesign the application to use the <xref:System.Reflection.Assembly.Load%28System.String%29> method overload or the <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> method overload.</span></span>  
  
 <span data-ttu-id="d5670-1212">Questo metodo chiama innanzitutto <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5670-1212">This method first calls <xref:System.Reflection.Assembly.Load%2A>.</span></span> <span data-ttu-id="d5670-1213">Se l'assembly non viene trovato, questo metodo restituisce l'assembly dalla global assembly cache con lo stesso nome semplice e il numero di versione più alto.</span><span class="sxs-lookup"><span data-stu-id="d5670-1213">If the assembly is not found, this method returns the assembly from the global assembly cache that has the same simple name, and the highest version number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-1214">Il valore del parametro <paramref name="partialName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1214">The <paramref name="partialName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-1215">
            <paramref name="assemblyFile" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1215">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-1216">- oppure - Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="partialName" /> è stato compilato con una versione successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1216">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="partialName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <altmember cref="M:System.Reflection.Assembly.Load(System.String)" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LoadWithPartialName">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadWithPartialName (string partialName, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadWithPartialName(string partialName, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadWithPartialName (partialName As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadWithPartialName(System::String ^ partialName, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberSignature Language="F#" Value="static member LoadWithPartialName : string * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadWithPartialName (partialName, securityEvidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialName" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="partialName">
          <span data-ttu-id="d5670-1217">Nome visualizzato dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1217">The display name of the assembly.</span>
          </span>
        </param>
        <param name="securityEvidence">
          <span data-ttu-id="d5670-1218">Evidenza per il caricamento dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1218">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-1219">Carica un assembly dalla directory dell'applicazione o dalla Global Assembly Cache con un nome parziale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1219">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span>
          </span>
          <span data-ttu-id="d5670-1220">L'assembly viene caricato nel dominio del chiamante usando l'evidenza fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1220">The assembly is loaded into the domain of the caller using the supplied evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-1221">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1221">The loaded assembly.</span>
          </span>
          <span data-ttu-id="d5670-1222">Se <paramref name="partialName" /> non viene trovato, il metodo restituisce <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1222">If <paramref name="partialName" /> is not found, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d5670-1223">Il <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%2CSystem.Security.Policy.Evidence%29> metodo è obsoleto ed è stata mantenuta per compatibilità con le versioni precedenti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1223">The <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%2CSystem.Security.Policy.Evidence%29> method is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="d5670-1224">L'alternativa non obsoleta è <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5670-1224">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5670-1225">Un'evidenza è l'insieme di informazioni su cui vengono basate le decisioni inerenti i criteri di sicurezza, ad esempio le autorizzazioni che è possibile assegnare al codice.</span><span class="sxs-lookup"><span data-stu-id="d5670-1225">Evidence is the set of information that constitutes input to security policy decisions, such as what permissions can be granted to code.</span></span>  
  
 <span data-ttu-id="d5670-1226">Le applicazioni che caricano gli assembly con questo metodo verranno interessate dagli aggiornamenti di tali assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-1226">Applications that load assemblies with this method will be affected by upgrades of those assemblies.</span></span> <span data-ttu-id="d5670-1227">Pertanto, non utilizzare questo metodo. riprogettare l'applicazione utilizzi la <xref:System.Reflection.Assembly.Load%2A> metodo o il <xref:System.Reflection.Assembly.LoadFrom%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="d5670-1227">Therefore, do not use this method; redesign the application to use the <xref:System.Reflection.Assembly.Load%2A> method or the <xref:System.Reflection.Assembly.LoadFrom%2A> method.</span></span>  
  
 <span data-ttu-id="d5670-1228">Questo metodo chiama innanzitutto <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5670-1228">This method first calls <xref:System.Reflection.Assembly.Load%2A>.</span></span> <span data-ttu-id="d5670-1229">Se l'assembly non viene trovato, questo metodo restituisce l'assembly dalla global assembly cache con lo stesso nome semplice e il numero di versione più alto.</span><span class="sxs-lookup"><span data-stu-id="d5670-1229">If the assembly is not found, this method returns the assembly from the global assembly cache that has the same simple name, and the highest version number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-1230">Un assembly o un modulo è stato caricato due volte con due set di evidenze diversi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1230">An assembly or module was loaded twice with two different sets of evidence.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-1231">Il valore del parametro <paramref name="partialName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1231">The <paramref name="partialName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-1232">
            <paramref name="assemblyFile" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1232">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-1233">- oppure - Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="partialName" /> è stato compilato con una versione successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1233">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="partialName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d5670-1234">per chiamare codice non gestito e per caricare un assembly con evidenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1234">for calling unmanaged code and to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="d5670-1235">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1235">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.Load(System.String)" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public virtual string Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Location { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Location : string" Usage="System.Reflection.Assembly.Location" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.Location</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-1236">Ottiene il percorso completo o il percorso UNC del file caricato che contiene il manifesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1236">Gets the full path or UNC location of the loaded file that contains the manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-1237">Percorso del file caricato che contiene il manifesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1237">The location of the loaded file that contains the manifest.</span>
          </span>
          <span data-ttu-id="d5670-1238">Se è stata eseguita una copia shadow del file caricato, il percorso è quello del file dopo l'esecuzione della copia shadow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1238">If the loaded file was shadow-copied, the location is that of the file after being shadow-copied.</span>
          </span>
          <span data-ttu-id="d5670-1239">Se l'assembly viene caricato da una matrice di byte, come quando si usa l'overload del metodo <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" />, il valore restituito è una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1239">If the assembly is loaded from a byte array, such as when using the <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" /> method overload, the value returned is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-1240">Per ottenere il percorso prima che il file è stata creata una copia shadow, usare il <xref:System.Reflection.Assembly.CodeBase%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="d5670-1240">To get the location before the file has been shadow-copied, use the <xref:System.Reflection.Assembly.CodeBase%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5670-1241">Nell'esempio seguente visualizza il percorso del file caricato che contiene il manifesto.</span><span class="sxs-lookup"><span data-stu-id="d5670-1241">The following example displays the location of the loaded file that contains the manifest.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#3)]
 [!code-csharp[System.Reflection.Assembly#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#3)]
 [!code-vb[System.Reflection.Assembly#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d5670-1242">L'assembly corrente è un assembly dinamico, rappresentato da un oggetto <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1242">The current assembly is a dynamic assembly, represented by an <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="d5670-1243">per l'accesso al percorso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1243">for access to the path.</span>
          </span>
          <span data-ttu-id="d5670-1244">Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1244">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ManifestModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module ManifestModule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module ManifestModule" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ManifestModule" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ManifestModule As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ ManifestModule { System::Reflection::Module ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ManifestModule : System.Reflection.Module" Usage="System.Reflection.Assembly.ManifestModule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-1245">Ottiene il modulo contenente il manifesto per l'assembly corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1245">Gets the module that contains the manifest for the current assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-1246">Modulo contenente il manifesto per l'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1246">The module that contains the manifest for the assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleResolve">
      <MemberSignature Language="C#" Value="public virtual event System.Reflection.ModuleResolveEventHandler ModuleResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Reflection.ModuleResolveEventHandler ModuleResolve" />
      <MemberSignature Language="DocId" Value="E:System.Reflection.Assembly.ModuleResolve" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Custom Event ModuleResolve As ModuleResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Reflection::ModuleResolveEventHandler ^ ModuleResolve;" />
      <MemberSignature Language="F#" Value="member this.ModuleResolve : System.Reflection.ModuleResolveEventHandler " Usage="member this.ModuleResolve : System.Reflection.ModuleResolveEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Runtime.InteropServices._Assembly.ModuleResolve</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ModuleResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-1247">Si verifica quando il caricatore della classe Common Language Runtime non è in grado di risolvere un riferimento a un modulo interno di un assembly in modo normale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1247">Occurs when the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-1248">Questo evento offre l'opportunità per trovare e caricare il modulo stesso e restituirlo il callback.</span><span class="sxs-lookup"><span data-stu-id="d5670-1248">This event gives the callback a chance to find and load the module itself and return it.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="d5670-1249">Esempio di codice seguente viene illustrato come utilizzare un handle di attesa per mantenere un processo da terminare mentre è in attesa per un thread in background terminare l'esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1249">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d5670-1250">L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1250">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt; Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Module&gt; Modules" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Modules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Modules As IEnumerable(Of Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ Modules { System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Modules : seq&lt;System.Reflection.Module&gt;" Usage="System.Reflection.Assembly.Modules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-1251">Ottiene una raccolta contenente i moduli dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1251">Gets a collection that contains the modules in this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-1252">Raccolta contenente i moduli dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1252">A collection that contains the modules in this assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.Assembly left, System.Reflection.Assembly right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Reflection.Assembly left, class System.Reflection.Assembly right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Assembly, right As Assembly) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::Assembly ^ left, System::Reflection::Assembly ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.Assembly * System.Reflection.Assembly -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.Assembly" />
        <Parameter Name="right" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="d5670-1253">Assembly da confrontare con <c>right</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1253">The assembly to compare to <c>right</c>.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="d5670-1254">Assembly da confrontare con <c>left</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1254">The assembly to compare to <c>left</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-1255">Indica se due oggetti <see cref="T:System.Reflection.Assembly" /> sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1255">Indicates whether two <see cref="T:System.Reflection.Assembly" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-1256">
            <see langword="true" /> se <paramref name="left" /> è uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1256">
              <see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.Assembly left, System.Reflection.Assembly right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Reflection.Assembly left, class System.Reflection.Assembly right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Assembly, right As Assembly) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::Assembly ^ left, System::Reflection::Assembly ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.Assembly * System.Reflection.Assembly -&gt; bool" Usage="System.Reflection.Assembly.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.Assembly" />
        <Parameter Name="right" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="d5670-1257">Assembly da confrontare con <c>right</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1257">The assembly to compare to <c>right</c>.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="d5670-1258">Assembly da confrontare con <c>left</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1258">The assembly to compare to <c>left</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-1259">Indica se due oggetti <see cref="T:System.Reflection.Assembly" /> non sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1259">Indicates whether two <see cref="T:System.Reflection.Assembly" /> objects are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-1260">
            <see langword="true" /> se <paramref name="left" /> non è uguale a <paramref name="right" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1260">
              <see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSet">
      <MemberSignature Language="C#" Value="public virtual System.Security.PermissionSet PermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet PermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.PermissionSet" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::PermissionSet ^ PermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PermissionSet : System.Security.PermissionSet" Usage="System.Reflection.Assembly.PermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-1261">Ottiene il set di concessioni dell'assembly corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1261">Gets the grant set of the current assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-1262">Set di concessioni dell'assembly corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1262">The grant set of the current assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-1263"><xref:System.Security.PermissionSet> gli oggetti possono contenere informazioni riservate, ad esempio i percorsi.</span><span class="sxs-lookup"><span data-stu-id="d5670-1263"><xref:System.Security.PermissionSet> objects can contain sensitive information such as paths.</span></span> <span data-ttu-id="d5670-1264">Pertanto, con attendibilità totale deve accedere a questi oggetti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1264">Therefore, full trust is required to access these objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="d5670-1265">richiede attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1265">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d5670-1266">L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1266">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReflectionOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReflectionOnly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ReflectionOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ReflectionOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReflectionOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectionOnly : bool" Usage="System.Reflection.Assembly.ReflectionOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-1267">Ottiene un valore <see cref="T:System.Boolean" /> che indica se l'assembly è stato caricato nel contesto ReflectionOnly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1267">Gets a <see cref="T:System.Boolean" /> value indicating whether this assembly was loaded into the reflection-only context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-1268">
            <see langword="true" /> se l'assembly è stato caricato nel contesto solo reflection anziché nel contesto di esecuzione; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1268">
              <see langword="true" /> if the assembly was loaded into the reflection-only context, rather than the execution context; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-1269">Se un assembly è stato caricato nel contesto reflection-only, utilizzando il <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> metodo, non è possibile eseguire codice nell'assembly.</span><span class="sxs-lookup"><span data-stu-id="d5670-1269">If an assembly has been loaded into the reflection-only context, using the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> method, you cannot execute code in the assembly.</span></span> <span data-ttu-id="d5670-1270">Per eseguire il codice, l'assembly deve essere caricato nel contesto di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="d5670-1270">To execute code, the assembly must be loaded into the execution context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReflectionOnlyLoad">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-1271">Carica un assembly nel contesto di sola reflection, in cui l'assembly può essere esaminato ma non eseguito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1271">Loads an assembly into the reflection-only context, where it can be examined but not executed.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReflectionOnlyLoad">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoad (byte[] rawAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoad(unsigned int8[] rawAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoad (rawAssembly As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoad(cli::array &lt;System::Byte&gt; ^ rawAssembly);" />
      <MemberSignature Language="F#" Value="static member ReflectionOnlyLoad : byte[] -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.ReflectionOnlyLoad rawAssembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="d5670-1272">Matrice di byte costituita da un'immagine in formato COFF contenente un assembly generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1272">A byte array that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-1273">Carica l'assembly da un'immagine in formato COFF (Common Object File Format) contenente un assembly generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1273">Loads the assembly from a common object file format (COFF)-based image containing an emitted assembly.</span>
          </span>
          <span data-ttu-id="d5670-1274">L'assembly viene caricato nel contesto di sola reflection del dominio applicazione del chiamante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1274">The assembly is loaded into the reflection-only context of the caller's application domain.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-1275">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1275">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-1276">È possibile eseguire codice da un assembly caricato nel contesto reflection-only.</span><span class="sxs-lookup"><span data-stu-id="d5670-1276">You cannot execute code from an assembly loaded into the reflection-only context.</span></span> <span data-ttu-id="d5670-1277">Per eseguire il codice, l'assembly deve essere caricato nel contesto di esecuzione, anche tramite il <xref:System.Reflection.Assembly.Load%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-1277">To execute code, the assembly must be loaded into the execution context as well, using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
 <span data-ttu-id="d5670-1278">Contesto reflection-only non è diverso da altri contesti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1278">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="d5670-1279">Gli assembly caricati nel contesto possono essere scaricati solo scaricando il dominio dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="d5670-1279">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-1280">
            <paramref name="rawAssembly" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1280">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-1281">
            <paramref name="rawAssembly" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1281">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-1282">- oppure - Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="rawAssembly" /> è stato compilato con una versione successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1282">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-1283">
            <paramref name="rawAssembly" /> non può essere caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1283">
              <paramref name="rawAssembly" /> cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnlyLoad">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoad (string assemblyString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoad(string assemblyString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoad (assemblyString As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoad(System::String ^ assemblyString);" />
      <MemberSignature Language="F#" Value="static member ReflectionOnlyLoad : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.ReflectionOnlyLoad assemblyString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyString">
          <span data-ttu-id="d5670-1284">Nome visualizzato dell'assembly, come restituito dalla proprietà <see cref="P:System.Reflection.AssemblyName.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1284">The display name of the assembly, as returned by the <see cref="P:System.Reflection.AssemblyName.FullName" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-1285">Carica un assembly nel contesto di sola reflection in base al nome visualizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1285">Loads an assembly into the reflection-only context, given its display name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-1286">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1286">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-1287">Le dipendenze non vengono caricate automaticamente nel contesto reflection-only.</span><span class="sxs-lookup"><span data-stu-id="d5670-1287">Dependencies are not automatically loaded into the reflection-only context.</span></span>  
  
 <span data-ttu-id="d5670-1288">È possibile eseguire codice da un assembly caricato nel contesto reflection-only.</span><span class="sxs-lookup"><span data-stu-id="d5670-1288">You cannot execute code from an assembly loaded into the reflection-only context.</span></span> <span data-ttu-id="d5670-1289">Per eseguire il codice, l'assembly deve essere caricato nel contesto di esecuzione, anche tramite il <xref:System.Reflection.Assembly.Load%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-1289">To execute code, the assembly must be loaded into the execution context as well, using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
 <span data-ttu-id="d5670-1290">Se sussistano o meno le autorizzazioni per l'utilizzo di un assembly lo si evince dalle evidenze.</span><span class="sxs-lookup"><span data-stu-id="d5670-1290">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="d5670-1291">Le regole per l'assembly e l'unione all'evidenza di sicurezza sono come segue:</span><span class="sxs-lookup"><span data-stu-id="d5670-1291">The rules for assembly and security evidence merging are as follows:</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5670-1292">La reflection su file eseguibili compilati in C++ può generare un <xref:System.IO.FileLoadException>.</span><span class="sxs-lookup"><span data-stu-id="d5670-1292">Reflecting on executable files compiled in C++ might throw a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="d5670-1293">Ciò è dovuto molto probabilmente del compilatore C++ degli indirizzi di rilocazione oppure della sezione. reloc dal file eseguibile.</span><span class="sxs-lookup"><span data-stu-id="d5670-1293">This is most likely caused by the C++ compiler stripping the relocation addresses or the .reloc section from your executable file.</span></span> <span data-ttu-id="d5670-1294">Per mantenere l'indirizzo, specificare `/fixed:no` quando ci si sta collegando.</span><span class="sxs-lookup"><span data-stu-id="d5670-1294">To preserve the .reloc address, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="d5670-1295">Contesto reflection-only non è diverso da altri contesti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1295">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="d5670-1296">Gli assembly caricati nel contesto possono essere scaricati solo scaricando il dominio dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="d5670-1296">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-1297">
            <paramref name="assemblyString" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1297">
              <paramref name="assemblyString" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-1298">
            <paramref name="assemblyString" /> è una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1298">
              <paramref name="assemblyString" /> is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-1299">
            <paramref name="assemblyString" /> non trovata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1299">
              <paramref name="assemblyString" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-1300">
            <paramref name="assemblyString" /> è stato trovato ma non può essere caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1300">
              <paramref name="assemblyString" /> is found, but cannot be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-1301">
            <paramref name="assemblyString" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1301">
              <paramref name="assemblyString" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-1302">- oppure - Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="assemblyString" /> è stato compilato con una versione successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1302">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnlyLoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoadFrom(System::String ^ assemblyFile);" />
      <MemberSignature Language="F#" Value="static member ReflectionOnlyLoadFrom : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.ReflectionOnlyLoadFrom assemblyFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="d5670-1303">Percorso del file che contiene il manifesto dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1303">The path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-1304">Carica un assembly nel contesto di sola reflection in base al percorso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1304">Loads an assembly into the reflection-only context, given its path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-1305">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1305">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-1306">Le dipendenze non vengono caricate automaticamente nel contesto reflection-only.</span><span class="sxs-lookup"><span data-stu-id="d5670-1306">Dependencies are not automatically loaded into the reflection-only context.</span></span> <span data-ttu-id="d5670-1307">Per caricare automaticamente le dipendenze, gestire il <xref:System.AppDomain.ReflectionOnlyAssemblyResolve> evento e caricare la dipendenza nel gestore eventi.</span><span class="sxs-lookup"><span data-stu-id="d5670-1307">To automatically load dependencies, handle the <xref:System.AppDomain.ReflectionOnlyAssemblyResolve> event and load the dependency in the event handler.</span></span>  
  
 <span data-ttu-id="d5670-1308">È possibile eseguire codice da un assembly caricati nel contesto reflection-only.</span><span class="sxs-lookup"><span data-stu-id="d5670-1308">You cannot execute code from an assembly that has been loaded into the reflection-only context.</span></span> <span data-ttu-id="d5670-1309">Per eseguire il codice, caricare l'assembly con il <xref:System.Reflection.Assembly.LoadFile%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-1309">To execute the code, load the assembly with the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span>  
  
 <span data-ttu-id="d5670-1310">Il `assemblyFile` parametro deve fare riferimento a un URI senza caratteri di escape.</span><span class="sxs-lookup"><span data-stu-id="d5670-1310">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="d5670-1311">Questo metodo fornisce caratteri di escape per tutti i caratteri non validi nell'URI.</span><span class="sxs-lookup"><span data-stu-id="d5670-1311">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
 <span data-ttu-id="d5670-1312">Il percorso specificato per `assemblyFile` è relativo alla directory corrente.</span><span class="sxs-lookup"><span data-stu-id="d5670-1312">The path specified for `assemblyFile` is relative to the current directory.</span></span> <span data-ttu-id="d5670-1313">L'assembly viene caricato nel dominio del chiamante.</span><span class="sxs-lookup"><span data-stu-id="d5670-1313">The assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="d5670-1314">Contesto reflection-only non è diverso da altri contesti.</span><span class="sxs-lookup"><span data-stu-id="d5670-1314">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="d5670-1315">Gli assembly caricati nel contesto possono essere scaricati solo scaricando il dominio dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="d5670-1315">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-1316">
            <paramref name="assemblyFile" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1316">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-1317">
            <paramref name="assemblyFile" /> non è stato trovato oppure il modulo che si sta provando a caricare non specifica un'estensione di file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1317">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a file name extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-1318">
            <paramref name="assemblyFile" /> è stato trovato ma non può essere caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1318">
              <paramref name="assemblyFile" /> is found, but could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-1319">
            <paramref name="assemblyFile" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1319">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-1320">- oppure - Attualmente è caricata la versione 2.0 o successiva di Common Language Runtime e l'oggetto <paramref name="assemblyFile" /> è stato compilato con una versione successiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1320">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d5670-1321">È stata specificata una base di codici che non inizia con "file://" senza la classe <see cref="T:System.Net.WebPermission" /> richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1321">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="d5670-1322">Il nome dell'assembly supera la lunghezza massima definita dal sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1322">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-1323">
            <paramref name="assemblyFile" /> è una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1323">
              <paramref name="assemblyFile" /> is an empty string ("").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="d5670-1324">per la lettura di un URI che inizia con "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1324">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="d5670-1325">Enumerazioni associate: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1325">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="d5670-1326">per la lettura di un URI che iniziano con "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1326">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SecurityRuleSet">
      <MemberSignature Language="C#" Value="public virtual System.Security.SecurityRuleSet SecurityRuleSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.SecurityRuleSet SecurityRuleSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.SecurityRuleSet" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SecurityRuleSet As SecurityRuleSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::SecurityRuleSet SecurityRuleSet { System::Security::SecurityRuleSet get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityRuleSet : System.Security.SecurityRuleSet" Usage="System.Reflection.Assembly.SecurityRuleSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityRuleSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5670-1327">Ottiene un valore che indica il set di regole di sicurezza applicato da Common Language Runtime (CLR) per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1327">Gets a value that indicates which set of security rules the common language runtime (CLR) enforces for this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5670-1328">Set di regole di sicurezza applicato da CLR per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1328">The security rule set that the CLR enforces for this assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-1329">Per impostazione predefinita, gli assembly che si compila con la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] dispongono di trasparenza, anche se è possibile renderle esplicitamente invece.</span><span class="sxs-lookup"><span data-stu-id="d5670-1329">By default, assemblies that you compile with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] have  transparency, although you can explicitly make them  instead.</span></span> <span data-ttu-id="d5670-1330">Gli assembly che sono stati compilati con le versioni precedenti di .NET Framework dispongono di trasparenza di livello 1.</span><span class="sxs-lookup"><span data-stu-id="d5670-1330">Assemblies that were compiled with earlier versions of the .NET Framework have level 1 transparency.</span></span>  
  
 <span data-ttu-id="d5670-1331">Vedere [Modifiche di sicurezza](~/docs/framework/security/security-changes.md).</span><span class="sxs-lookup"><span data-stu-id="d5670-1331">See [Security Changes](~/docs/framework/security/security-changes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.IsDefined">
      <MemberSignature Language="C#" Value="bool ICustomAttributeProvider.IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Reflection.ICustomAttributeProvider.IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean Implements ICustomAttributeProvider.IsDefined" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Reflection.ICustomAttributeProvider.IsDefined(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::IsDefined;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Assembly.GetType">
      <MemberSignature Language="C#" Value="Type _Assembly.GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Runtime.InteropServices._Assembly.GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType" />
      <MemberSignature Language="VB.NET" Value="Function GetType () As Type Implements _Assembly.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Runtime.InteropServices._Assembly.GetType() = System::Runtime::InteropServices::_Assembly::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5670-1332">Restituisce il tipo dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1332">Returns the type of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-1333">Oggetto che rappresenta il tipo di <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1333">An object that represents the <see cref="T:System.Reflection.Assembly" /> type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="assembly.ToString " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.ToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5670-1334">Restituisce il nome completo dell'assembly, noto anche come nome visualizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1334">Returns the full name of the assembly, also known as the display name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-1335">Nome completo dell'assembly o nome della classe se non è possibile determinare il nome completo dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1335">The full name of the assembly, or the class name if the full name of the assembly cannot be determined.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeLoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly UnsafeLoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly UnsafeLoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.UnsafeLoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeLoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ UnsafeLoadFrom(System::String ^ assemblyFile);" />
      <MemberSignature Language="F#" Value="static member UnsafeLoadFrom : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.UnsafeLoadFrom assemblyFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="d5670-1336">Nome o percorso del file che contiene il manifesto dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1336">The name or path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5670-1337">Carica un assembly nel contesto di origine del caricamento, ignorando alcuni controlli di sicurezza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1337">Loads an assembly into the load-from context, bypassing some security checks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5670-1338">Assembly caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1338">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5670-1339">Utilizzare questo metodo per caricare un assembly locale che il sistema operativo è contrassegnato come se fosse stato caricato dal Web (ad esempio, un file temporaneo è stato scaricato da Internet o intranet).</span><span class="sxs-lookup"><span data-stu-id="d5670-1339">Use this method to load a local assembly that the operating system has flagged as having been loaded from the Web (for example, a temporary file that was downloaded from the Internet or intranet).</span></span> <span data-ttu-id="d5670-1340">Prima di [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], tali assembly sono stati caricati automaticamente in un dominio applicazione sandboxed.</span><span class="sxs-lookup"><span data-stu-id="d5670-1340">Before the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], such assemblies were automatically loaded into a sandboxed application domain.</span></span> <span data-ttu-id="d5670-1341">A partire dal [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], vengono caricati con attendibilità totale.</span><span class="sxs-lookup"><span data-stu-id="d5670-1341">Starting with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], they are loaded with full trust.</span></span>  
  
 <span data-ttu-id="d5670-1342">Come alternativa all'utilizzo di questo metodo, è possibile applicare la [ &lt;NetFx40_LegacySecurityPolicy&gt; elemento](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) nel file di configurazione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="d5670-1342">As an alternative to using this method, you can apply the [&lt;NetFx40_LegacySecurityPolicy&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) in your application configuration file.</span></span> <span data-ttu-id="d5670-1343">In questo modo common language runtime ripristinare i criteri di sicurezza del [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span><span class="sxs-lookup"><span data-stu-id="d5670-1343">This causes the common language runtime to revert to the security policy of the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d5670-1344">Se si utilizza una di queste soluzioni, è necessario assicurarsi che sia sicuro caricare `assemblyFile` con attendibilità totale.</span><span class="sxs-lookup"><span data-stu-id="d5670-1344">If you use either of these solutions, you must be certain that it is safe to load `assemblyFile` with full trust.</span></span>  
  
 <span data-ttu-id="d5670-1345">Per una discussione contesti di caricamento, incluso il contesto di caricamento, vedere il <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="d5670-1345">For a discussion of load contexts, including the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5670-1346">
            <paramref name="assemblyFile" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1346">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d5670-1347">
            <paramref name="assemblyFile" /> non viene trovato oppure il modulo che si sta provando a caricare non specifica un'estensione del nome file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1347">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d5670-1348">Non è possibile caricare un file che non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1348">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d5670-1349">
            <paramref name="assemblyFile" /> non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1349">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="d5670-1350">- oppure - <paramref name="assemblyFile" /> è stato compilato con una versione successiva di Common Language Runtime rispetto alla versione attualmente caricata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1350">-or-  <paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="d5670-1351">È stata specificata una base di codici che non inizia con "file://" senza la classe <see cref="T:System.Net.WebPermission" /> richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1351">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5670-1352">Il parametro <paramref name="assemblyFile" /> è una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1352">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="d5670-1353">Il nome dell'assembly supera la lunghezza massima definita dal sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1353">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="d5670-1354">richiede attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1354">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d5670-1355">L'istanza corrente è un proxy trasparente per un  in un altro dominio applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5670-1355">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>