<Type Name="AssemblyFlagsAttribute" FullName="System.Reflection.AssemblyFlagsAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec6cca8f68e770974346d33418beaa3ce10ab914" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36544032" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AssemblyFlagsAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AssemblyFlagsAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.AssemblyFlagsAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyFlagsAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyFlagsAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AssemblyFlagsAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3831f-101">Specifica una combinazione bit per bit di flag <see cref="T:System.Reflection.AssemblyNameFlags" /> per un assembly, indicando le opzioni del compilatore JIT (Just-In-Time), se è possibile assegnare una nuova destinazione all'assembly e se questo dispone di una chiave pubblica completa o in formato token.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3831f-101">Specifies a bitwise combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags for an assembly, describing just-in-time (JIT) compiler options, whether the assembly is retargetable, and whether it has a full or tokenized public key.</span>
      </span>
      <span data-ttu-id="3831f-102">Questa classe non può essere ereditata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3831f-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831f-103">Il <xref:System.Reflection.AssemblyNameFlags> enumerazione descrive le caratteristiche dell'assembly che possono essere impostate usando questo attributo.</span><span class="sxs-lookup"><span data-stu-id="3831f-103">The <xref:System.Reflection.AssemblyNameFlags> enumeration describes the assembly characteristics that can be set using this attribute.</span></span>  
  
 <span data-ttu-id="3831f-104">Per accedere ai flag specificati per un assembly, usare il <xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType> proprietà per ottenere un <xref:System.Reflection.AssemblyName> dell'oggetto, quindi usare il <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> proprietà per ottenere un <xref:System.Reflection.AssemblyNameFlags> valore.</span><span class="sxs-lookup"><span data-stu-id="3831f-104">To access the flags that have been specified for an assembly, use the <xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType> property to obtain an <xref:System.Reflection.AssemblyName> object, then use the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> property to obtain an <xref:System.Reflection.AssemblyNameFlags> value.</span></span>  
  
 <span data-ttu-id="3831f-105">Per specificare <xref:System.Reflection.AssemblyNameFlags> impostati flag per un assembly dinamico, il <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> proprietà del <xref:System.Reflection.AssemblyName> oggetto passato per il <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="3831f-105">To specify <xref:System.Reflection.AssemblyNameFlags> flags for a dynamic assembly, set the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> property of the <xref:System.Reflection.AssemblyName> object that you pass to the <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831f-106">Esempio di codice seguente viene illustrato come applicare il <xref:System.Reflection.AssemblyFlagsAttribute> a un assembly e come leggere i flag in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3831f-106">The following code example shows how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to an assembly, and how to read the flags at run time.</span></span> <span data-ttu-id="3831f-107">Nell'esempio viene anche creata un'istanza dell'attributo e utilizza il <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> proprietà per visualizzare i flag.</span><span class="sxs-lookup"><span data-stu-id="3831f-107">The example also creates an instance of the attribute, and uses the <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> property to display the flags.</span></span> <span data-ttu-id="3831f-108">Per un esempio di come applicare il <xref:System.Reflection.AssemblyFlagsAttribute> a un assembly dinamico, vedere il <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="3831f-108">For an example of how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to a dynamic assembly, see the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[AssemblyFlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyFlagsAttribute/CPP/source.cpp#1)]
 [!code-csharp[AssemblyFlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyFlagsAttribute/CS/source.cs#1)]
 [!code-vb[AssemblyFlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyFlagsAttribute/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.AssemblyNameFlags" />
    <altmember cref="Overload:System.Reflection.Assembly.GetName" />
    <altmember cref="P:System.Reflection.AssemblyName.Flags" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831f-109">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyFlagsAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831f-109">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyFlagsAttribute (int assemblyFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 assemblyFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyFlags As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyFlagsAttribute(int assemblyFlags);" />
      <MemberSignature Language="F#" Value="new System.Reflection.AssemblyFlagsAttribute : int -&gt; System.Reflection.AssemblyFlagsAttribute" Usage="new System.Reflection.AssemblyFlagsAttribute assemblyFlags" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constructor has been deprecated. Please use AssemblyFlagsAttribute(AssemblyNameFlags) instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="assemblyFlags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="assemblyFlags">
          <span data-ttu-id="3831f-110">Combinazione bit per bit di flag <see cref="T:System.Reflection.AssemblyNameFlags" /> di cui viene eseguito il cast come valore intero, che rappresenta le opzioni del compilatore JIT, la durata, se è possibile assegnare una nuova destinazione a un assembly e se questo dispone di una chiave pubblica completa o in formato token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831f-110">A bitwise combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags, cast as an integer value, representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831f-111">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> con la combinazione specificata di flag <see cref="T:System.Reflection.AssemblyNameFlags" />, di cui viene eseguito il cast come valore intero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831f-111">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> class with the specified combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags, cast as an integer value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831f-112">Questo costruttore non tipizzato è obsoleto.</span><span class="sxs-lookup"><span data-stu-id="3831f-112">This untyped constructor is now obsolete.</span></span> <span data-ttu-id="3831f-113">Non usare.</span><span class="sxs-lookup"><span data-stu-id="3831f-113">Do not use.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyFlagsAttribute (System.Reflection.AssemblyNameFlags assemblyFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Reflection.AssemblyNameFlags assemblyFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyFlags As AssemblyNameFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyFlagsAttribute(System::Reflection::AssemblyNameFlags assemblyFlags);" />
      <MemberSignature Language="F#" Value="new System.Reflection.AssemblyFlagsAttribute : System.Reflection.AssemblyNameFlags -&gt; System.Reflection.AssemblyFlagsAttribute" Usage="new System.Reflection.AssemblyFlagsAttribute assemblyFlags" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyFlags" Type="System.Reflection.AssemblyNameFlags" />
      </Parameters>
      <Docs>
        <param name="assemblyFlags">
          <span data-ttu-id="3831f-114">Combinazione bit per bit di flag <see cref="T:System.Reflection.AssemblyNameFlags" /> che rappresenta le opzioni del compilatore JIT, la durata, se è possibile assegnare una nuova destinazione all'assembly e se questo dispone di una chiave pubblica completa o in formato token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831f-114">A bitwise combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831f-115">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> con la combinazione specificata di flag <see cref="T:System.Reflection.AssemblyNameFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831f-115">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> class with the specified combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3831f-116">Esempio di codice seguente viene illustrato come applicare il <xref:System.Reflection.AssemblyFlagsAttribute> a un assembly e come leggere i flag in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3831f-116">The following code example shows how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to an assembly, and how to read the flags at run time.</span></span> <span data-ttu-id="3831f-117">Nell'esempio viene anche creata un'istanza dell'attributo e utilizza il <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> proprietà per visualizzare i flag.</span><span class="sxs-lookup"><span data-stu-id="3831f-117">The example also creates an instance of the attribute, and uses the <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> property to display the flags.</span></span> <span data-ttu-id="3831f-118">Per un esempio di come applicare il <xref:System.Reflection.AssemblyFlagsAttribute> a un assembly dinamico, vedere il <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="3831f-118">For an example of how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to a dynamic assembly, see the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[AssemblyFlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyFlagsAttribute/CPP/source.cpp#1)]
 [!code-csharp[AssemblyFlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyFlagsAttribute/CS/source.cs#1)]
 [!code-vb[AssemblyFlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyFlagsAttribute/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.AssemblyNameFlags" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyFlagsAttribute (uint flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (flags As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyFlagsAttribute(System::UInt32 flags);" />
      <MemberSignature Language="F#" Value="new System.Reflection.AssemblyFlagsAttribute : uint32 -&gt; System.Reflection.AssemblyFlagsAttribute" Usage="new System.Reflection.AssemblyFlagsAttribute flags" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constructor has been deprecated. Please use AssemblyFlagsAttribute(AssemblyNameFlags) instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="flags" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="flags">
          <span data-ttu-id="3831f-119">Combinazione bit per bit di flag <see cref="T:System.Reflection.AssemblyNameFlags" /> di cui viene eseguito il cast come valore intero senza segno, che rappresenta le opzioni del compilatore JIT, la durata, se è possibile assegnare una nuova destinazione a un assembly e se questo dispone di una chiave pubblica completa o in formato token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831f-119">A bitwise combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags, cast as an unsigned integer value, representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831f-120">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> con la combinazione specificata di flag <see cref="T:System.Reflection.AssemblyNameFlags" />, di cui viene eseguito il cast come valore intero senza segno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831f-120">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> class with the specified combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags, cast as an unsigned integer value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831f-121">Questo costruttore non tipizzato è obsoleto.</span><span class="sxs-lookup"><span data-stu-id="3831f-121">This untyped constructor is now obsolete.</span></span> <span data-ttu-id="3831f-122">Non usare.</span><span class="sxs-lookup"><span data-stu-id="3831f-122">Do not use.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)" />
      </Docs>
    </Member>
    <Member MemberName="AssemblyFlags">
      <MemberSignature Language="C#" Value="public int AssemblyFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AssemblyFlags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyFlags As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AssemblyFlags { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyFlags : int" Usage="System.Reflection.AssemblyFlagsAttribute.AssemblyFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831f-123">Ottiene un valore intero che rappresenta la combinazione di flag <see cref="T:System.Reflection.AssemblyNameFlags" /> specificati alla creazione dell'istanza di questo attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831f-123">Gets an integer value representing the combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags specified when this attribute instance was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831f-124">Valore intero che rappresenta una combinazione bit per bit di flag <see cref="T:System.Reflection.AssemblyNameFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831f-124">An integer value representing a bitwise combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831f-125">Questa proprietà restituisce un valore integer per la compatibilità con le versioni precedenti.</span><span class="sxs-lookup"><span data-stu-id="3831f-125">This property returns an integer for backward compatibility.</span></span> <span data-ttu-id="3831f-126">Il cast del valore per il <xref:System.Reflection.AssemblyNameFlags> tipo prima di utilizzarlo.</span><span class="sxs-lookup"><span data-stu-id="3831f-126">Cast the value to the <xref:System.Reflection.AssemblyNameFlags> type before using it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831f-127">Esempio di codice seguente viene illustrato come applicare il <xref:System.Reflection.AssemblyFlagsAttribute> a un assembly e come leggere i flag in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="3831f-127">The following code example shows how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to an assembly, and how to read the flags at run time.</span></span> <span data-ttu-id="3831f-128">Nell'esempio viene anche creata un'istanza dell'attributo e utilizza il <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> proprietà per visualizzare i flag.</span><span class="sxs-lookup"><span data-stu-id="3831f-128">The example also creates an instance of the attribute, and uses the <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> property to display the flags.</span></span> <span data-ttu-id="3831f-129">Per un esempio di come applicare il <xref:System.Reflection.AssemblyFlagsAttribute> a un assembly dinamico, vedere il <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="3831f-129">For an example of how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to a dynamic assembly, see the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[AssemblyFlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyFlagsAttribute/CPP/source.cpp#1)]
 [!code-csharp[AssemblyFlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyFlagsAttribute/CS/source.cs#1)]
 [!code-vb[AssemblyFlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyFlagsAttribute/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.AssemblyNameFlags" />
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public uint Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Flags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyFlagsAttribute.Flags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Flags As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 Flags { System::UInt32 get(); };" />
      <MemberSignature Language="F#" Value="member this.Flags : uint32" Usage="System.Reflection.AssemblyFlagsAttribute.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This property has been deprecated. Please use AssemblyFlags instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831f-130">Ottiene un valore intero senza segno che rappresenta la combinazione di flag <see cref="T:System.Reflection.AssemblyNameFlags" /> specificati alla creazione dell'istanza di questo attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831f-130">Gets an unsigned integer value representing the combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags specified when this attribute instance was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831f-131">Valore intero senza segno che rappresenta una combinazione bit per bit di flag <see cref="T:System.Reflection.AssemblyNameFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831f-131">An unsigned integer value representing a bitwise combination of <see cref="T:System.Reflection.AssemblyNameFlags" /> flags.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831f-132">Questa proprietà restituisce un valore integer per la compatibilità con le versioni precedenti.</span><span class="sxs-lookup"><span data-stu-id="3831f-132">This property returns an integer for backward compatibility.</span></span> <span data-ttu-id="3831f-133">Il cast del valore per il <xref:System.Reflection.AssemblyNameFlags> tipo prima di utilizzarlo.</span><span class="sxs-lookup"><span data-stu-id="3831f-133">Cast the value to the <xref:System.Reflection.AssemblyNameFlags> type before using it.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags" />
        <altmember cref="T:System.Reflection.AssemblyNameFlags" />
      </Docs>
    </Member>
  </Members>
</Type>