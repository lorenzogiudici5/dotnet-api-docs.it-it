<Type Name="ConstructorInfo" FullName="System.Reflection.ConstructorInfo">
  <TypeSignature Language="C#" Value="public abstract class ConstructorInfo : System.Reflection.MethodBase, System.Runtime.InteropServices._ConstructorInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ConstructorInfo extends System.Reflection.MethodBase implements class System.Runtime.InteropServices._ConstructorInfo" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.ConstructorInfo" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConstructorInfo&#xA;Inherits MethodBase&#xA;Implements _ConstructorInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConstructorInfo abstract : System::Reflection::MethodBase, System::Runtime::InteropServices::_ConstructorInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.MethodBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._ConstructorInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ConstructorInfo))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d86ce-101">Individua gli attributi di un costruttore di classe e fornisce l'accesso ai metadati del costruttore.</span><span class="sxs-lookup"><span data-stu-id="d86ce-101">Discovers the attributes of a class constructor and provides access to constructor metadata.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d86ce-102">`ConstructorInfo` viene utilizzato per individuare gli attributi di un costruttore nonché di richiamare un costruttore.</span><span class="sxs-lookup"><span data-stu-id="d86ce-102">`ConstructorInfo` is used to discover the attributes of a constructor as well as to invoke a constructor.</span></span> <span data-ttu-id="d86ce-103">Gli oggetti vengono creati chiamando <xref:System.Reflection.ConstructorInfo.Invoke%2A> su un `ConstructorInfo` restituito dal <xref:System.Type.GetConstructors%2A> o <xref:System.Type.GetConstructor%2A> metodo di un <xref:System.Type> oggetto.</span><span class="sxs-lookup"><span data-stu-id="d86ce-103">Objects are created by calling <xref:System.Reflection.ConstructorInfo.Invoke%2A> on a `ConstructorInfo` returned by either the <xref:System.Type.GetConstructors%2A> or <xref:System.Type.GetConstructor%2A> method of a <xref:System.Type> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d86ce-104"><xref:System.Reflection.ConstructorInfo> eredita da <xref:System.Reflection.MethodBase> diversi membri, ad esempio <xref:System.Reflection.MethodBase.IsGenericMethod%2A>, che può essere utilizzato per esaminare i metodi generici.</span><span class="sxs-lookup"><span data-stu-id="d86ce-104"><xref:System.Reflection.ConstructorInfo> inherits from <xref:System.Reflection.MethodBase> several members, such as <xref:System.Reflection.MethodBase.IsGenericMethod%2A>, that can be used to examine generic methods.</span></span> <span data-ttu-id="d86ce-105">In .NET Framework versione 2.0 i costruttori non possono essere generici, pertanto questi membri restituiscano `false` o `null`.</span><span class="sxs-lookup"><span data-stu-id="d86ce-105">In the .NET Framework version 2.0 constructors cannot be generic, so these members return `false` or `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d86ce-106">L'esempio seguente usa `ConstructorInfo` con <xref:System.Type.GetConstructor%2A> e <xref:System.Reflection.BindingFlags> per trovare i costruttori che soddisfano i criteri di ricerca specificato.</span><span class="sxs-lookup"><span data-stu-id="d86ce-106">The following example uses `ConstructorInfo` with <xref:System.Type.GetConstructor%2A> and <xref:System.Reflection.BindingFlags> to find the constructors that match the specified search criteria.</span></span>  
  
 [!code-cpp[type_getconstructor3#1](~/samples/snippets/cpp/VS_Snippets_CLR/Type_GetConstructor3/CPP/type_getconstructor3.cpp#1)]
 [!code-csharp[type_getconstructor3#1](~/samples/snippets/csharp/VS_Snippets_CLR/Type_GetConstructor3/CS/type_getconstructor3.cs#1)]
 [!code-vb[type_getconstructor3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Type_GetConstructor3/VB/type_getconstructor3.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="d86ce-107">per l'attendibilità totale per gli eredi.</span><span class="sxs-lookup"><span data-stu-id="d86ce-107">for full trust for inheritors.</span></span> <span data-ttu-id="d86ce-108">Questa classe non può essere ereditata da codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="d86ce-108">This class cannot be inherited by partially trusted code.</span></span></permission>
    <threadsafe><span data-ttu-id="d86ce-109">Questo tipo è thread-safe.</span><span class="sxs-lookup"><span data-stu-id="d86ce-109">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="d86ce-110">Quando si eredita da <see langword="ConstructorInfo" />, è necessario eseguire l'override dell'overload del membro: <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-110">When you inherit from <see langword="ConstructorInfo" />, you must override the following member overload: <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />.</span></span></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConstructorInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConstructorInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d86ce-111">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.ConstructorInfo" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-111">Initializes a new instance of the <see cref="T:System.Reflection.ConstructorInfo" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d86ce-112">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-112">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="d86ce-113">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-113">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ConstructorName">
      <MemberSignature Language="C#" Value="public static readonly string ConstructorName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ConstructorName" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ConstructorInfo.ConstructorName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConstructorName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ConstructorName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d86ce-114">Rappresenta il nome del metodo del costruttore della classe così come è memorizzato nei metadati.</span><span class="sxs-lookup"><span data-stu-id="d86ce-114">Represents the name of the class constructor method as it is stored in metadata.</span></span> <span data-ttu-id="d86ce-115">Questo nome è sempre ".ctor".</span><span class="sxs-lookup"><span data-stu-id="d86ce-115">This name is always ".ctor".</span></span> <span data-ttu-id="d86ce-116">Questo campo è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="d86ce-116">This field is read-only.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Equals(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d86ce-117">Oggetto da confrontare con questa istanza o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-117">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d86ce-118">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</span><span class="sxs-lookup"><span data-stu-id="d86ce-118">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="d86ce-119"><see langword="true" /> se <paramref name="obj" /> è uguale al tipo e al valore di questa istanza; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-119"><see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d86ce-120">Restituisce il codice hash per l'istanza.</span><span class="sxs-lookup"><span data-stu-id="d86ce-120">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="d86ce-121">Codice hash di un intero con segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="d86ce-121">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d86ce-122">Richiama il costruttore riprodotto da questa istanza.</span><span class="sxs-lookup"><span data-stu-id="d86ce-122">Invokes the constructor reflected by this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.Invoke(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (parameters As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="d86ce-123">Matrice di valori che corrisponde al numero, all'ordine e al tipo (in base ai vincoli del binder predefinito) dei parametri per questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="d86ce-123">An array of values that matches the number, order and type (under the constraints of the default binder) of the parameters for this constructor.</span></span> <span data-ttu-id="d86ce-124">Se questo costruttore non accetta parametri, usare una matrice con zero elementi o <see langword="null" />, come in Object[] parameters = new Object[0].</span><span class="sxs-lookup"><span data-stu-id="d86ce-124">If this constructor takes no parameters, then use either an array with zero elements or <see langword="null" />, as in Object[] parameters = new Object[0].</span></span> <span data-ttu-id="d86ce-125">Qualsiasi oggetto in questa matrice non inizializzato in modo esplicito con un valore conterrà il valore predefinito per quel tipo di oggetto.</span><span class="sxs-lookup"><span data-stu-id="d86ce-125">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="d86ce-126">Per gli elementi di tipo riferimento, questo valore è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-126">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="d86ce-127">Per gli elementi di tipo valore, questo valore è 0, 0.0 o <see langword="false" />, a seconda del tipo di elemento specifico.</span><span class="sxs-lookup"><span data-stu-id="d86ce-127">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <summary><span data-ttu-id="d86ce-128">Richiama il costruttore riflesso dall'istanza che ha i parametri specificati fornendo i valori predefiniti per i parametri che non sono di uso comune.</span><span class="sxs-lookup"><span data-stu-id="d86ce-128">Invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.</span></span></summary>
        <returns><span data-ttu-id="d86ce-129">Istanza della classe associata al costruttore.</span><span class="sxs-lookup"><span data-stu-id="d86ce-129">An instance of the class associated with the constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d86ce-130">Il numero, tipo e l'ordine degli elementi nel `parameters` matrice deve essere identica a numero, tipo e ordine dei parametri per il costruttore ottenuto mediante reflection da questa istanza.</span><span class="sxs-lookup"><span data-stu-id="d86ce-130">The number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.</span></span> <span data-ttu-id="d86ce-131">Prima di chiamare il costruttore, `Invoke` assicura che il chiamante dispone dell'autorizzazione di accesso e verifica che i parametri siano validi.</span><span class="sxs-lookup"><span data-stu-id="d86ce-131">Before calling the constructor, `Invoke` ensures that the caller has access permission and verifies that the parameters are valid.</span></span>  
  
 <span data-ttu-id="d86ce-132">Le restrizioni di accesso vengono ignorate per il codice completamente attendibile.</span><span class="sxs-lookup"><span data-stu-id="d86ce-132">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="d86ce-133">Vale a dire, proprietà, metodi, campi e costruttori privati accessibili e richiamato tramite reflection, ogni volta che il codice è completamente attendibile.</span><span class="sxs-lookup"><span data-stu-id="d86ce-133">That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d86ce-134">Per creare un'istanza di un tipo di valore che non sono costruttori di istanza, utilizzare il <xref:System.Activator.CreateInstance%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d86ce-134">To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method.</span></span>  
  
 <span data-ttu-id="d86ce-135">Questo metodo è un metodo pratico per la versione di overload seguente, utilizzando i valori predefiniti.</span><span class="sxs-lookup"><span data-stu-id="d86ce-135">This method is a convenience method for the following overloaded version, using default values.</span></span> <span data-ttu-id="d86ce-136">Questo metodo non può essere sottoposto a override.</span><span class="sxs-lookup"><span data-stu-id="d86ce-136">This method cannot be overridden.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d86ce-137">A partire dal [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo metodo può essere utilizzato per accedere a membri pubblici, se il chiamante è stato concesso <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag e se il set di concessioni dei membri non pubblici è limitato al chiamante o a un sottoinsieme Questi due elementi.</span><span class="sxs-lookup"><span data-stu-id="d86ce-137">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="d86ce-138">(Vedere [considerazioni sulla sicurezza per la Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="d86ce-138">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="d86ce-139">Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="d86ce-139">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d86ce-140">La classe è astratta.</span><span class="sxs-lookup"><span data-stu-id="d86ce-140">The class is abstract.</span></span>  
  
 <span data-ttu-id="d86ce-141">oppure</span><span class="sxs-lookup"><span data-stu-id="d86ce-141">-or-</span></span>  
  
 <span data-ttu-id="d86ce-142">Il costruttore è un inizializzatore di classi.</span><span class="sxs-lookup"><span data-stu-id="d86ce-142">The constructor is a class initializer.</span></span></exception>
        <exception cref="T:System.MethodAccessException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="d86ce-143">In [.NET per app di Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) o nella [libreria di classi portabile](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) rilevare invece l'eccezione della classe di base, <see cref="T:System.MemberAccessException" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-143">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="d86ce-144">Il costruttore è privato o protetto e il chiamante non dispone di <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-144">The constructor is private or protected, and the caller lacks <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d86ce-145">La matrice <paramref name="parameters" /> non contiene valori che corrispondono ai tipi accettati da questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="d86ce-145">The <paramref name="parameters" /> array does not contain values that match the types accepted by this constructor.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d86ce-146">Il costruttore richiamato genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="d86ce-146">The invoked constructor throws an exception.</span></span></exception>
        <exception cref="T:System.Reflection.TargetParameterCountException"><span data-ttu-id="d86ce-147">È stato passato un numero errato di parametri.</span><span class="sxs-lookup"><span data-stu-id="d86ce-147">An incorrect number of parameters was passed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d86ce-148">La creazione dei tipi <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" /> e <see cref="T:System.RuntimeArgumentHandle" /> non è supportata.</span><span class="sxs-lookup"><span data-stu-id="d86ce-148">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, and <see cref="T:System.RuntimeArgumentHandle" /> types is not supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d86ce-149">Il chiamante non ha le autorizzazioni necessarie per accedere al codice.</span><span class="sxs-lookup"><span data-stu-id="d86ce-149">The caller does not have the necessary code access permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d86ce-150">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-150">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="d86ce-151">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-151">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public abstract object Invoke (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Invoke(System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="invokeAttr"><span data-ttu-id="d86ce-152">Uno dei valori di <see langword="BindingFlags" /> che specifica il tipo di associazione.</span><span class="sxs-lookup"><span data-stu-id="d86ce-152">One of the <see langword="BindingFlags" /> values that specifies the type of binding.</span></span></param>
        <param name="binder"><span data-ttu-id="d86ce-153">Oggetto <see langword="Binder" /> che definisce un insieme di proprietà e attiva l'associazione, l'assegnazione forzata dei tipi di argomento e la chiamata dei membri tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="d86ce-153">A <see langword="Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span></span> <span data-ttu-id="d86ce-154">Se <c>binder</c> è <see langword="null" />, viene usato <see langword="Binder.DefaultBinding" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-154">If <c>binder</c> is <see langword="null" />, then <see langword="Binder.DefaultBinding" /> is used.</span></span></param>
        <param name="parameters"><span data-ttu-id="d86ce-155">Matrice di tipo <see langword="Object" /> usata per trovare la corrispondenza di numero, ordine e tipo di parametri per questo costruttore, in base ai vincoli dell'oggetto <c>binder</c>.</span><span class="sxs-lookup"><span data-stu-id="d86ce-155">An array of type <see langword="Object" /> used to match the number, order and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span></span> <span data-ttu-id="d86ce-156">Se questo costruttore non richiede parametri, passare una matrice con zero elementi, come in Object[] parameters = new Object[0].</span><span class="sxs-lookup"><span data-stu-id="d86ce-156">If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0].</span></span> <span data-ttu-id="d86ce-157">Qualsiasi oggetto in questa matrice non inizializzato in modo esplicito con un valore conterrà il valore predefinito per quel tipo di oggetto.</span><span class="sxs-lookup"><span data-stu-id="d86ce-157">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="d86ce-158">Per gli elementi di tipo riferimento, questo valore è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-158">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="d86ce-159">Per gli elementi di tipo valore, questo valore è 0, 0.0 o <see langword="false" />, a seconda del tipo di elemento specifico.</span><span class="sxs-lookup"><span data-stu-id="d86ce-159">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <param name="culture"><span data-ttu-id="d86ce-160">Oggetto <see cref="T:System.Globalization.CultureInfo" /> utilizzato per regolare l'assegnazione forzata dei tipi.</span><span class="sxs-lookup"><span data-stu-id="d86ce-160">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="d86ce-161">Se è <see langword="null" />, per il thread corrente verrà usato l'oggetto <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-161">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="d86ce-162">Quando è implementato in una classe derivata, richiama il costruttore riprodotto da questo oggetto <see langword="ConstructorInfo" /> con gli argomenti specificati, in base ai vincoli dell'oggetto <see langword="Binder" /> specificato.</span><span class="sxs-lookup"><span data-stu-id="d86ce-162">When implemented in a derived class, invokes the constructor reflected by this <see langword="ConstructorInfo" /> with the specified arguments, under the constraints of the specified <see langword="Binder" />.</span></span></summary>
        <returns><span data-ttu-id="d86ce-163">Istanza della classe associata al costruttore.</span><span class="sxs-lookup"><span data-stu-id="d86ce-163">An instance of the class associated with the constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d86ce-164">Il numero, tipo e l'ordine degli elementi nel `parameters` matrice deve essere identica a numero, tipo e ordine dei parametri per il costruttore ottenuto mediante reflection da questa istanza.</span><span class="sxs-lookup"><span data-stu-id="d86ce-164">The number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.</span></span>  
  
 <span data-ttu-id="d86ce-165">Prima di chiamare il costruttore, `Invoke` garantisce che il chiamante dispone dell'autorizzazione di accesso e che i parametri sono di numero, ordine e tipo.</span><span class="sxs-lookup"><span data-stu-id="d86ce-165">Before calling the constructor, `Invoke` ensures that the caller has access permission and that the parameters are of the correct number, order and type.</span></span>  
  
 <span data-ttu-id="d86ce-166">Le restrizioni di accesso vengono ignorate per il codice completamente attendibile.</span><span class="sxs-lookup"><span data-stu-id="d86ce-166">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="d86ce-167">Vale a dire, proprietà, metodi, campi e costruttori privati accessibili e richiamato tramite reflection, ogni volta che il codice è completamente attendibile.</span><span class="sxs-lookup"><span data-stu-id="d86ce-167">That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d86ce-168">Per creare un'istanza di un tipo di valore che non sono costruttori di istanza, utilizzare il <xref:System.Activator.CreateInstance%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d86ce-168">To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d86ce-169">A partire dal [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo metodo può essere utilizzato per accedere a membri pubblici, se il chiamante è stato concesso <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag e se il set di concessioni dei membri non pubblici è limitato al chiamante o a un sottoinsieme Questi due elementi.</span><span class="sxs-lookup"><span data-stu-id="d86ce-169">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="d86ce-170">(Vedere [considerazioni sulla sicurezza per la Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="d86ce-170">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="d86ce-171">Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="d86ce-171">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d86ce-172">La matrice <paramref name="parameters" /> non contiene valori corrispondenti ai tipi accettati da questo costruttore, in base ai vincoli dell'oggetto <paramref name="binder" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-172">The <paramref name="parameters" /> array does not contain values that match the types accepted by this constructor, under the constraints of the <paramref name="binder" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d86ce-173">Il costruttore richiamato genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="d86ce-173">The invoked constructor throws an exception.</span></span></exception>
        <exception cref="T:System.Reflection.TargetParameterCountException"><span data-ttu-id="d86ce-174">È stato passato un numero errato di parametri.</span><span class="sxs-lookup"><span data-stu-id="d86ce-174">An incorrect number of parameters was passed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d86ce-175">La creazione dei tipi <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" /> e <see cref="T:System.RuntimeArgumentHandle" /> non è supportata.</span><span class="sxs-lookup"><span data-stu-id="d86ce-175">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, and <see cref="T:System.RuntimeArgumentHandle" /> types is not supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d86ce-176">Il chiamante non dispone delle autorizzazioni necessarie per l'accesso di codice.</span><span class="sxs-lookup"><span data-stu-id="d86ce-176">The caller does not have the necessary code access permissions.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d86ce-177">La classe è astratta.</span><span class="sxs-lookup"><span data-stu-id="d86ce-177">The class is abstract.</span></span>  
  
 <span data-ttu-id="d86ce-178">oppure</span><span class="sxs-lookup"><span data-stu-id="d86ce-178">-or-</span></span>  
  
 <span data-ttu-id="d86ce-179">Il costruttore è un inizializzatore di classi.</span><span class="sxs-lookup"><span data-stu-id="d86ce-179">The constructor is a class initializer.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d86ce-180">Il costruttore è privato o protetto e il chiamante non dispone di <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-180">The constructor is private or protected, and the caller lacks <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d86ce-181">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-181">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="d86ce-182">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-182">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ConstructorInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._ConstructorInfo.MemberType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d86ce-183">Ottiene un valore di <see cref="T:System.Reflection.MemberTypes" /> che indica che questo membro è un costruttore.</span><span class="sxs-lookup"><span data-stu-id="d86ce-183">Gets a <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a constructor.</span></span></summary>
        <value><span data-ttu-id="d86ce-184">Valore di <see cref="T:System.Reflection.MemberTypes" /> che indica che questo membro è un costruttore.</span><span class="sxs-lookup"><span data-stu-id="d86ce-184">A <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a constructor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d86ce-185">Esegue l'override di questa proprietà <xref:System.Reflection.MemberInfo.MemberType%2A>.</span><span class="sxs-lookup"><span data-stu-id="d86ce-185">This property overrides <xref:System.Reflection.MemberInfo.MemberType%2A>.</span></span> <span data-ttu-id="d86ce-186">Pertanto, quando si esamina un set di <xref:System.Reflection.MemberInfo> oggetti, ad esempio, la matrice restituita dal <xref:System.Type.GetMembers%2A> : il <xref:System.Reflection.MemberInfo.MemberType%2A> restituisce proprietà <xref:System.Reflection.MemberTypes.Constructor> solo quando un membro specificato è un costruttore.</span><span class="sxs-lookup"><span data-stu-id="d86ce-186">Therefore, when you examine a set of <xref:System.Reflection.MemberInfo> objects — for example, the array returned by <xref:System.Type.GetMembers%2A> — the <xref:System.Reflection.MemberInfo.MemberType%2A> property returns <xref:System.Reflection.MemberTypes.Constructor> only when a given member is a constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d86ce-187">L'esempio seguente usa il <xref:System.Reflection.ConstructorInfo.MemberType%2A> proprietà per identificare un <xref:System.Reflection.MemberInfo> oggetto come costruttore.</span><span class="sxs-lookup"><span data-stu-id="d86ce-187">The following example uses the <xref:System.Reflection.ConstructorInfo.MemberType%2A> property to identify a <xref:System.Reflection.MemberInfo> object as a constructor.</span></span>  
  
 [!code-cpp[Classic MemberInfo.MemberType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MemberInfo.MemberType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/CS/source.cs#1)]
 [!code-vb[Classic MemberInfo.MemberType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.MemberTypes" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.ConstructorInfo left, System.Reflection.ConstructorInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Reflection.ConstructorInfo left, class System.Reflection.ConstructorInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ConstructorInfo, right As ConstructorInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::ConstructorInfo ^ left, System::Reflection::ConstructorInfo ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="right" Type="System.Reflection.ConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d86ce-188">Primo oggetto <see cref="T:System.Reflection.ConstructorInfo" /> da confrontare.</span><span class="sxs-lookup"><span data-stu-id="d86ce-188">The first <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d86ce-189">Secondo oggetto <see cref="T:System.Reflection.ConstructorInfo" /> da confrontare.</span><span class="sxs-lookup"><span data-stu-id="d86ce-189">The second <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span></span></param>
        <summary><span data-ttu-id="d86ce-190">Indica se due oggetti <see cref="T:System.Reflection.ConstructorInfo" /> sono uguali.</span><span class="sxs-lookup"><span data-stu-id="d86ce-190">Indicates whether two <see cref="T:System.Reflection.ConstructorInfo" /> objects are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="d86ce-191"><see langword="true" /> se <paramref name="left" /> è uguale a <paramref name="right" />, in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-191"><see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.ConstructorInfo left, System.Reflection.ConstructorInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Reflection.ConstructorInfo left, class System.Reflection.ConstructorInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ConstructorInfo, right As ConstructorInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::ConstructorInfo ^ left, System::Reflection::ConstructorInfo ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="right" Type="System.Reflection.ConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d86ce-192">Primo oggetto <see cref="T:System.Reflection.ConstructorInfo" /> da confrontare.</span><span class="sxs-lookup"><span data-stu-id="d86ce-192">The first <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d86ce-193">Secondo oggetto <see cref="T:System.Reflection.ConstructorInfo" /> da confrontare.</span><span class="sxs-lookup"><span data-stu-id="d86ce-193">The second <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span></span></param>
        <summary><span data-ttu-id="d86ce-194">Indica se due oggetti <see cref="T:System.Reflection.ConstructorInfo" /> non sono uguali.</span><span class="sxs-lookup"><span data-stu-id="d86ce-194">Indicates whether two <see cref="T:System.Reflection.ConstructorInfo" /> objects are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="d86ce-195"><see langword="true" /> se <paramref name="left" /> non è uguale a <paramref name="right" />, in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-195"><see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _ConstructorInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _ConstructorInfo.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_ConstructorInfo::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="d86ce-196">Riservato per utilizzi futuri.</span><span class="sxs-lookup"><span data-stu-id="d86ce-196">Reserved for future use.</span></span> <span data-ttu-id="d86ce-197">Deve essere IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="d86ce-197">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="d86ce-198">Matrice di nomi passata di cui eseguire il mapping.</span><span class="sxs-lookup"><span data-stu-id="d86ce-198">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="d86ce-199">Conteggio dei nomi di cui eseguire il mapping.</span><span class="sxs-lookup"><span data-stu-id="d86ce-199">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="d86ce-200">Contesto delle impostazioni locali in cui interpretare i nomi.</span><span class="sxs-lookup"><span data-stu-id="d86ce-200">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="d86ce-201">Matrice allocata dal chiamante che riceve gli ID corrispondenti ai nomi.</span><span class="sxs-lookup"><span data-stu-id="d86ce-201">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="d86ce-202">Esegue il mapping di un set di nomi a un set corrispondente di ID dispatch.</span><span class="sxs-lookup"><span data-stu-id="d86ce-202">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d86ce-203">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="d86ce-203">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="d86ce-204">Per ulteriori informazioni su `IDispatch::GetIDsOfNames`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="d86ce-204">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d86ce-205">L'accesso ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c> non è supportato.</span><span class="sxs-lookup"><span data-stu-id="d86ce-205">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.GetType">
      <MemberSignature Language="C#" Value="Type _ConstructorInfo.GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Runtime.InteropServices._ConstructorInfo.GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType" />
      <MemberSignature Language="VB.NET" Value="Function GetType () As Type Implements _ConstructorInfo.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Runtime.InteropServices._ConstructorInfo.GetType() = System::Runtime::InteropServices::_ConstructorInfo::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d86ce-206">Ottiene un oggetto <see cref="T:System.Type" /> che rappresenta il tipo <see cref="T:System.Reflection.ConstructorInfo" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-206">Gets a <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.ConstructorInfo" /> type.</span></span></summary>
        <returns><span data-ttu-id="d86ce-207">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo <see cref="T:System.Reflection.ConstructorInfo" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-207">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.ConstructorInfo" /> type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _ConstructorInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _ConstructorInfo.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_ConstructorInfo::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="d86ce-208">Informazioni sul tipo da restituire.</span><span class="sxs-lookup"><span data-stu-id="d86ce-208">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="d86ce-209">Identificatore delle impostazioni locali per le informazioni sul tipo.</span><span class="sxs-lookup"><span data-stu-id="d86ce-209">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="d86ce-210">Riceve un puntatore all'oggetto relativo alle informazioni sul tipo richiesto.</span><span class="sxs-lookup"><span data-stu-id="d86ce-210">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="d86ce-211">Recupera le informazioni sul tipo relative a un oggetto che può quindi essere usato per ottenere informazioni sul tipo relative a un'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="d86ce-211">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d86ce-212">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="d86ce-212">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="d86ce-213">Per ulteriori informazioni su `IDispatch::GetTypeInfo`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="d86ce-213">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d86ce-214">L'accesso ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c> non è supportato.</span><span class="sxs-lookup"><span data-stu-id="d86ce-214">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _ConstructorInfo.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _ConstructorInfo.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_ConstructorInfo::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="d86ce-215">Punta a una posizione che riceve il numero di interfacce di informazioni sul tipo fornite dall'oggetto.</span><span class="sxs-lookup"><span data-stu-id="d86ce-215">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="d86ce-216">Recupera il numero delle interfacce di informazioni sul tipo fornite da un oggetto (0 o 1).</span><span class="sxs-lookup"><span data-stu-id="d86ce-216">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d86ce-217">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="d86ce-217">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="d86ce-218">Per ulteriori informazioni su `IDispatch::GetTypeInfoCount`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="d86ce-218">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d86ce-219">L'accesso ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c> non è supportato.</span><span class="sxs-lookup"><span data-stu-id="d86ce-219">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke">
      <MemberSignature Language="C#" Value="void _ConstructorInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorInfo.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _ConstructorInfo.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorInfo.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_ConstructorInfo::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="d86ce-220">Identifica il membro.</span><span class="sxs-lookup"><span data-stu-id="d86ce-220">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="d86ce-221">Riservato per utilizzi futuri.</span><span class="sxs-lookup"><span data-stu-id="d86ce-221">Reserved for future use.</span></span> <span data-ttu-id="d86ce-222">Deve essere IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="d86ce-222">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="d86ce-223">Contesto di impostazioni locali all'interno del quale devono essere interpretati gli argomenti.</span><span class="sxs-lookup"><span data-stu-id="d86ce-223">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="d86ce-224">Flag che descrivono il contesto della chiamata.</span><span class="sxs-lookup"><span data-stu-id="d86ce-224">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="d86ce-225">Puntatore a una struttura contenente una matrice di argomenti, una matrice di DISPID per argomenti denominati e i conteggi del numero di elementi nelle matrici.</span><span class="sxs-lookup"><span data-stu-id="d86ce-225">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="d86ce-226">Puntatore alla posizione in cui deve essere archiviato il risultato.</span><span class="sxs-lookup"><span data-stu-id="d86ce-226">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="d86ce-227">Puntatore a una struttura contenente informazioni sull'eccezione.</span><span class="sxs-lookup"><span data-stu-id="d86ce-227">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="d86ce-228">Indice del primo argomento che contiene un errore.</span><span class="sxs-lookup"><span data-stu-id="d86ce-228">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="d86ce-229">Fornisce l'accesso a proprietà e metodi esposti da un oggetto.</span><span class="sxs-lookup"><span data-stu-id="d86ce-229">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d86ce-230">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="d86ce-230">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="d86ce-231">Per ulteriori informazioni su `IDispatch::Invoke`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="d86ce-231">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d86ce-232">L'accesso ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c> non è supportato.</span><span class="sxs-lookup"><span data-stu-id="d86ce-232">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke_2">
      <MemberSignature Language="C#" Value="object _ConstructorInfo.Invoke_2 (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.InteropServices._ConstructorInfo.Invoke_2(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture) = System::Runtime::InteropServices::_ConstructorInfo::Invoke_2;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d86ce-233">Istanza che ha creato questo metodo.</span><span class="sxs-lookup"><span data-stu-id="d86ce-233">The instance that created this method.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="d86ce-234">Uno dei valori di <see cref="T:System.Reflection.BindingFlags" /> che specifica il tipo di associazione.</span><span class="sxs-lookup"><span data-stu-id="d86ce-234">One of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies the type of binding.</span></span></param>
        <param name="binder"><span data-ttu-id="d86ce-235">Oggetto <see cref="T:System.Reflection.Binder" /> che definisce un insieme di proprietà e attiva l'associazione, l'assegnazione forzata dei tipi di argomento e la chiamata dei membri tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="d86ce-235">A <see cref="T:System.Reflection.Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span></span> <span data-ttu-id="d86ce-236">Se <c>binder</c> è <see langword="null" />, viene usato <see cref="P:System.Type.DefaultBinder" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-236">If <c>binder</c> is <see langword="null" />, then <see cref="P:System.Type.DefaultBinder" /> is used.</span></span></param>
        <param name="parameters"><span data-ttu-id="d86ce-237">Matrice di oggetti usata per trovare la corrispondenza di numero, ordine e tipo di parametri per questo costruttore, in base ai vincoli dell'oggetto <c>binder</c>.</span><span class="sxs-lookup"><span data-stu-id="d86ce-237">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span></span> <span data-ttu-id="d86ce-238">Se questo costruttore non richiede parametri, passare una matrice con zero elementi.</span><span class="sxs-lookup"><span data-stu-id="d86ce-238">If this constructor does not require parameters, pass an array with zero elements.</span></span> <span data-ttu-id="d86ce-239">Qualsiasi oggetto in questa matrice non inizializzato in modo esplicito con un valore conterrà il valore predefinito per quel tipo di oggetto.</span><span class="sxs-lookup"><span data-stu-id="d86ce-239">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="d86ce-240">Per gli elementi di tipo riferimento, questo valore è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-240">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="d86ce-241">Per gli elementi di tipo valore, questo valore è 0, 0.0 o <see langword="false" />, a seconda del tipo di elemento specifico.</span><span class="sxs-lookup"><span data-stu-id="d86ce-241">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <param name="culture"><span data-ttu-id="d86ce-242">Oggetto <see cref="T:System.Globalization.CultureInfo" /> utilizzato per regolare l'assegnazione forzata dei tipi.</span><span class="sxs-lookup"><span data-stu-id="d86ce-242">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="d86ce-243">Se è <see langword="null" />, per il thread corrente verrà usato l'oggetto <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-243">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="d86ce-244">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-244">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span></span></summary>
        <returns><span data-ttu-id="d86ce-245">Istanza del tipo.</span><span class="sxs-lookup"><span data-stu-id="d86ce-245">An instance of the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d86ce-246">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="d86ce-246">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d86ce-247">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Reflection.ConstructorInfo> a un'interfaccia <xref:System.Runtime.InteropServices._ConstructorInfo>.</span><span class="sxs-lookup"><span data-stu-id="d86ce-247">It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke_3">
      <MemberSignature Language="C#" Value="object _ConstructorInfo.Invoke_3 (object obj, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.InteropServices._ConstructorInfo.Invoke_3(object obj, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Function Invoke_3 (obj As Object, parameters As Object()) As Object Implements _ConstructorInfo.Invoke_3" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ parameters) = System::Runtime::InteropServices::_ConstructorInfo::Invoke_3;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System.Object,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d86ce-248">Istanza che ha creato questo metodo.</span><span class="sxs-lookup"><span data-stu-id="d86ce-248">The instance that created this method.</span></span></param>
        <param name="parameters"><span data-ttu-id="d86ce-249">Matrice di oggetti usata per trovare la corrispondenza di numero, ordine e tipo di parametri per questo costruttore, in base ai vincoli dell'oggetto <c>binder</c>.</span><span class="sxs-lookup"><span data-stu-id="d86ce-249">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span></span> <span data-ttu-id="d86ce-250">Se questo costruttore non richiede parametri, passare una matrice con zero elementi.</span><span class="sxs-lookup"><span data-stu-id="d86ce-250">If this constructor does not require parameters, pass an array with zero elements.</span></span> <span data-ttu-id="d86ce-251">Qualsiasi oggetto in questa matrice non inizializzato in modo esplicito con un valore conterrà il valore predefinito per quel tipo di oggetto.</span><span class="sxs-lookup"><span data-stu-id="d86ce-251">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="d86ce-252">Per gli elementi di tipo riferimento, questo valore è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-252">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="d86ce-253">Per gli elementi di tipo valore, questo valore è 0, 0.0 o <see langword="false" />, a seconda del tipo di elemento specifico.</span><span class="sxs-lookup"><span data-stu-id="d86ce-253">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <summary><span data-ttu-id="d86ce-254">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-254">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="d86ce-255">Istanza del tipo.</span><span class="sxs-lookup"><span data-stu-id="d86ce-255">An instance of the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d86ce-256">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="d86ce-256">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d86ce-257">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Reflection.ConstructorInfo> a un'interfaccia <xref:System.Runtime.InteropServices._ConstructorInfo>.</span><span class="sxs-lookup"><span data-stu-id="d86ce-257">It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke_4">
      <MemberSignature Language="C#" Value="object _ConstructorInfo.Invoke_4 (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.InteropServices._ConstructorInfo.Invoke_4(valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture) = System::Runtime::InteropServices::_ConstructorInfo::Invoke_4;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="invokeAttr"><span data-ttu-id="d86ce-258">Uno dei valori di <see cref="T:System.Reflection.BindingFlags" /> che specifica il tipo di associazione.</span><span class="sxs-lookup"><span data-stu-id="d86ce-258">One of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies the type of binding.</span></span></param>
        <param name="binder"><span data-ttu-id="d86ce-259">Oggetto <see cref="T:System.Reflection.Binder" /> che definisce un insieme di proprietà e attiva l'associazione, l'assegnazione forzata dei tipi di argomento e la chiamata dei membri tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="d86ce-259">A <see cref="T:System.Reflection.Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span></span> <span data-ttu-id="d86ce-260">Se <c>binder</c> è <see langword="null" />, viene usato <see cref="P:System.Type.DefaultBinder" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-260">If <c>binder</c> is <see langword="null" />, then <see cref="P:System.Type.DefaultBinder" /> is used.</span></span></param>
        <param name="parameters"><span data-ttu-id="d86ce-261">Matrice di oggetti usata per trovare la corrispondenza di numero, ordine e tipo di parametri per questo costruttore, in base ai vincoli dell'oggetto <c>binder</c>.</span><span class="sxs-lookup"><span data-stu-id="d86ce-261">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span></span> <span data-ttu-id="d86ce-262">Se questo costruttore non richiede parametri, passare una matrice con zero elementi.</span><span class="sxs-lookup"><span data-stu-id="d86ce-262">If this constructor does not require parameters, pass an array with zero elements.</span></span> <span data-ttu-id="d86ce-263">Qualsiasi oggetto in questa matrice non inizializzato in modo esplicito con un valore conterrà il valore predefinito per quel tipo di oggetto.</span><span class="sxs-lookup"><span data-stu-id="d86ce-263">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="d86ce-264">Per gli elementi di tipo riferimento, questo valore è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-264">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="d86ce-265">Per gli elementi di tipo valore, questo valore è 0, 0.0 o <see langword="false" />, a seconda del tipo di elemento specifico.</span><span class="sxs-lookup"><span data-stu-id="d86ce-265">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <param name="culture"><span data-ttu-id="d86ce-266">Oggetto <see cref="T:System.Globalization.CultureInfo" /> utilizzato per regolare l'assegnazione forzata dei tipi.</span><span class="sxs-lookup"><span data-stu-id="d86ce-266">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="d86ce-267">Se è <see langword="null" />, per il thread corrente verrà usato l'oggetto <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-267">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="d86ce-268">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-268">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span></span></summary>
        <returns><span data-ttu-id="d86ce-269">Istanza del tipo.</span><span class="sxs-lookup"><span data-stu-id="d86ce-269">An instance of the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d86ce-270">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="d86ce-270">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d86ce-271">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Reflection.ConstructorInfo> a un'interfaccia <xref:System.Runtime.InteropServices._ConstructorInfo>.</span><span class="sxs-lookup"><span data-stu-id="d86ce-271">It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke_5">
      <MemberSignature Language="C#" Value="object _ConstructorInfo.Invoke_5 (object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.InteropServices._ConstructorInfo.Invoke_5(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Function Invoke_5 (parameters As Object()) As Object Implements _ConstructorInfo.Invoke_5" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.InteropServices._ConstructorInfo.Invoke_5(cli::array &lt;System::Object ^&gt; ^ parameters) = System::Runtime::InteropServices::_ConstructorInfo::Invoke_5;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke_5(System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="d86ce-272">Matrice di oggetti usata per trovare la corrispondenza di numero, ordine e tipo di parametri per questo costruttore, in base ai vincoli dell'oggetto <c>binder</c>.</span><span class="sxs-lookup"><span data-stu-id="d86ce-272">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span></span> <span data-ttu-id="d86ce-273">Se questo costruttore non richiede parametri, passare una matrice con zero elementi.</span><span class="sxs-lookup"><span data-stu-id="d86ce-273">If this constructor does not require parameters, pass an array with zero elements.</span></span> <span data-ttu-id="d86ce-274">Qualsiasi oggetto in questa matrice non inizializzato in modo esplicito con un valore conterrà il valore predefinito per quel tipo di oggetto.</span><span class="sxs-lookup"><span data-stu-id="d86ce-274">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="d86ce-275">Per gli elementi di tipo riferimento, questo valore è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-275">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="d86ce-276">Per gli elementi di tipo valore, questo valore è 0, 0.0 o <see langword="false" />, a seconda del tipo di elemento specifico.</span><span class="sxs-lookup"><span data-stu-id="d86ce-276">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <summary><span data-ttu-id="d86ce-277">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Object[])" />.</span><span class="sxs-lookup"><span data-stu-id="d86ce-277">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Object[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="d86ce-278">Istanza del tipo.</span><span class="sxs-lookup"><span data-stu-id="d86ce-278">An instance of the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d86ce-279">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="d86ce-279">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d86ce-280">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Reflection.ConstructorInfo> a un'interfaccia <xref:System.Runtime.InteropServices._ConstructorInfo>.</span><span class="sxs-lookup"><span data-stu-id="d86ce-280">It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConstructorName">
      <MemberSignature Language="C#" Value="public static readonly string TypeConstructorName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string TypeConstructorName" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ConstructorInfo.TypeConstructorName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TypeConstructorName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ TypeConstructorName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d86ce-281">Rappresenta il nome del metodo del costruttore del tipo così come è memorizzato nei metadati.</span><span class="sxs-lookup"><span data-stu-id="d86ce-281">Represents the name of the type constructor method as it is stored in metadata.</span></span> <span data-ttu-id="d86ce-282">Questo nome è sempre ".cctor".</span><span class="sxs-lookup"><span data-stu-id="d86ce-282">This name is always ".cctor".</span></span> <span data-ttu-id="d86ce-283">Questa proprietà è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="d86ce-283">This property is read-only.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>