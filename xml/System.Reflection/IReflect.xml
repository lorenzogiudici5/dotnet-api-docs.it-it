<Type Name="IReflect" FullName="System.Reflection.IReflect">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0ee28236ed05b5e16c8562811a785e42e58bbe86" />
    <Meta Name="ms.sourcegitcommit" Value="fbb23bed4669409528ea7027eeaf88a8663d0851" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/11/2018" />
    <Meta Name="ms.locfileid" Value="49088643" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.IReflect" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReflect" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReflect" />
  <TypeSignature Language="F#" Value="type IReflect = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("AFBF15E5-C37C-11d2-B88E-00A0C9B471B8")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="36e6b-101">Interagisce con l'<see href="http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">interfaccia IDispatch</see>.</span>
      <span class="sxs-lookup">
        <span data-stu-id="36e6b-101">Interoperates with the <see href="http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch interface</see>.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36e6b-102">Il <xref:System.Reflection.IReflect> interfaccia viene utilizzata per interagire con il [IDispatch interface](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span><span class="sxs-lookup"><span data-stu-id="36e6b-102">The <xref:System.Reflection.IReflect> interface is used to interoperate with the [IDispatch interface](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span></span> <span data-ttu-id="36e6b-103"><xref:System.Reflection.IReflect> definisce un subset del <xref:System.Type> metodi di reflection.</span><span class="sxs-lookup"><span data-stu-id="36e6b-103"><xref:System.Reflection.IReflect> defines a subset of the <xref:System.Type> reflection methods.</span></span> <span data-ttu-id="36e6b-104">Implementazione di questa interfaccia consente a un tipo per personalizzarne il comportamento quando l'oggetto si accede da COM come un `IDispatch` oggetto.</span><span class="sxs-lookup"><span data-stu-id="36e6b-104">Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an `IDispatch` object.</span></span> <span data-ttu-id="36e6b-105">Il <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> classe può essere utilizzata per effettuare il marshalling di un oggetto che implementa <xref:System.Reflection.IReflect> oppure <xref:System.Runtime.InteropServices.Expando.IExpando> come COM `IDispatch` oggetto e viceversa.</span><span class="sxs-lookup"><span data-stu-id="36e6b-105">The <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> class can be used to marshal an object that implements <xref:System.Reflection.IReflect> or <xref:System.Runtime.InteropServices.Expando.IExpando> as a COM `IDispatch` object, and vice versa.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler" />
  </Docs>
  <Members>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="iReflect.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="36e6b-106">Nome del campo da trovare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-106">The name of the field to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="36e6b-107">Attributi di associazione utilizzati per controllare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-107">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36e6b-108">Restituisce l'oggetto <see cref="T:System.Reflection.FieldInfo" /> corrispondente al campo e al flag di associazione specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-108">Returns the <see cref="T:System.Reflection.FieldInfo" /> object that corresponds to the specified field and binding flag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36e6b-109">Oggetto <see cref="T:System.Reflection.FieldInfo" /> contenente le informazioni di campo per l'oggetto denominato che soddisfa i vincoli di ricerca specificati in <paramref name="bindingAttr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-109">A <see cref="T:System.Reflection.FieldInfo" /> object containing the field information for the named object that meets the search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="36e6b-110">L'oggetto implementa più campi con lo stesso nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-110">The object implements multiple fields with the same name.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="iReflect.GetFields bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="36e6b-111">Attributi di associazione utilizzati per controllare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-111">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36e6b-112">Restituisce una matrice di oggetti <see cref="T:System.Reflection.FieldInfo" /> corrispondenti a tutti i campi della classe corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-112">Returns an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the current class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36e6b-113">Matrice di oggetti <see cref="T:System.Reflection.FieldInfo" /> contenente le informazioni di campo per l'oggetto di reflection che soddisfa i vincoli di ricerca specificati in <paramref name="bindingAttr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-113">An array of <see cref="T:System.Reflection.FieldInfo" /> objects containing all the field information for this reflection object that meets the search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36e6b-114">La corrispondenza si basa su un nome.</span><span class="sxs-lookup"><span data-stu-id="36e6b-114">The match is based upon a name.</span></span> <span data-ttu-id="36e6b-115">Ogni campo deve avere un nome univoco.</span><span class="sxs-lookup"><span data-stu-id="36e6b-115">Each field must have a unique name.</span></span> <span data-ttu-id="36e6b-116">Il <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> flag specifica che i metodi non pubblici sono inclusi nella ricerca.</span><span class="sxs-lookup"><span data-stu-id="36e6b-116">The <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> flag specifies that non-public methods are included in the search.</span></span> <span data-ttu-id="36e6b-117">Il <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> flag specifica che i metodi pubblici vengono inclusi nella ricerca.</span><span class="sxs-lookup"><span data-stu-id="36e6b-117">The <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> flag specifies that public methods are included in the search.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="iReflect.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="36e6b-118">Nome del membro da ricercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-118">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="36e6b-119">Attributi di associazione utilizzati per controllare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-119">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36e6b-120">Recupera una matrice di oggetti <see cref="T:System.Reflection.MemberInfo" /> corrispondenti a tutti i membri pubblici o a tutti i membri che corrispondono a un nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-120">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects corresponding to all public members or to all members that match a specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36e6b-121">Matrice di oggetti <see cref="T:System.Reflection.MemberInfo" /> corrispondenti al parametro <paramref name="name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-121">An array of <see cref="T:System.Reflection.MemberInfo" /> objects matching the <paramref name="name" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36e6b-122">Il <xref:System.Reflection.IReflect.GetMember%2A> metodo recupera una matrice di <xref:System.Reflection.MemberInfo> oggetti usando il nome e un attributo di associazione che corrispondono a tutti i membri pubblici o a tutti i membri che corrispondono a un nome specificato.</span><span class="sxs-lookup"><span data-stu-id="36e6b-122">The <xref:System.Reflection.IReflect.GetMember%2A> method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name.</span></span> <span data-ttu-id="36e6b-123">Il caso il nome specificato è osservato o ignorato, come specificato da <xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="36e6b-123">The case of the specified name is observed or ignored, as specified by <xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="iReflect.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="36e6b-124">Attributi di associazione utilizzati per controllare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-124">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36e6b-125">Recupera una matrice di oggetti <see cref="T:System.Reflection.MemberInfo" /> corrispondenti a tutti i membri pubblici o a tutti i membri della classe corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-125">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond either to all public members or to all members of the current class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36e6b-126">Matrice di oggetti <see cref="T:System.Reflection.MemberInfo" /> che contiene tutte le informazioni dei membri per questo oggetto di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-126">An array of <see cref="T:System.Reflection.MemberInfo" /> objects containing all the member information for this reflection object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36e6b-127">Questo metodo recupera una matrice di <xref:System.Reflection.MemberInfo> oggetti utilizzando l'attributo di associazione che corrisponde a tutti i membri pubblici o a tutti i membri della classe corrente.</span><span class="sxs-lookup"><span data-stu-id="36e6b-127">This method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the binding attribute that corresponds either to all public members or to all members of the current class.</span></span> <span data-ttu-id="36e6b-128">Restituisce una matrice di tutti i membri definiti per questo oggetto.</span><span class="sxs-lookup"><span data-stu-id="36e6b-128">It returns an array of all of the members defined for this object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36e6b-129">Recupera un oggetto <see cref="T:System.Reflection.MethodInfo" /> corrispondente a un metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-129">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo" Usage="iReflect.GetMethod (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="36e6b-130">Nome del membro da ricercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-130">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="36e6b-131">Attributi di associazione utilizzati per controllare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-131">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36e6b-132">Recupera un oggetto <see cref="T:System.Reflection.MethodInfo" /> corrispondente a un metodo specificato in base ai vincoli di ricerca specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-132">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method under specified search constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36e6b-133">Oggetto <see cref="T:System.Reflection.MethodInfo" /> contenente le informazioni di metodo, con la corrispondenza basata sul nome del metodo e sui vincoli di ricerca specificati in <paramref name="bindingAttr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-133">A <see cref="T:System.Reflection.MethodInfo" /> object containing the method information, with the match being based on the method name and search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="36e6b-134">L'oggetto implementa più metodi con lo stesso nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-134">The object implements multiple methods with the same name.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="iReflect.GetMethod (name, bindingAttr, binder, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="36e6b-135">Nome del membro da ricercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-135">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="36e6b-136">Attributi di associazione utilizzati per controllare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-136">The binding attributes used to control the search.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="36e6b-137">Oggetto che implementa <see cref="T:System.Reflection.Binder" />, contenente le proprietà relative a questo metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-137">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="36e6b-138">Matrice utilizzata per scegliere uno dei metodi di overload.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-138">An array used to choose among overloaded methods.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="36e6b-139">Matrice di modificatori di parametro usata per creare associazioni con le firme del parametro in cui sono stati modificati i tipi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-139">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36e6b-140">Recupera un oggetto <see cref="T:System.Reflection.MethodInfo" /> corrispondente a un metodo specificato, utilizzando una matrice <see cref="T:System.Type" /> per scegliere uno dei metodi di overload.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-140">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object corresponding to a specified method, using a <see cref="T:System.Type" /> array to choose from among overloaded methods.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36e6b-141">Metodo richiesto che corrisponde a tutti i parametri specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-141">The requested method that matches all the specified parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36e6b-142">Il valore restituito è una corrispondenza in base al nome di metodo, <xref:System.Reflection.BindingFlags> membro di enumerazione, il tipo di conversione del tipo specificato dal `binder` parametro, l'overload e il <xref:System.Reflection.ParameterInfo> che descrive la firma del metodo.</span><span class="sxs-lookup"><span data-stu-id="36e6b-142">The return value is a match based on the method name, <xref:System.Reflection.BindingFlags> enum member, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo> that describes the signature of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="36e6b-143">L'oggetto implementa più metodi con lo stesso nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-143">The object implements multiple methods with the same name.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.ParameterModifier" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="iReflect.GetMethods bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="36e6b-144">Attributi di associazione utilizzati per controllare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-144">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36e6b-145">Recupera una matrice di oggetti <see cref="T:System.Reflection.MethodInfo" /> con tutti i metodi pubblici o tutti i metodi della classe corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-145">Retrieves an array of <see cref="T:System.Reflection.MethodInfo" /> objects with all public methods or all methods of the current class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36e6b-146">Matrice di oggetti <see cref="T:System.Reflection.MethodInfo" /> contenente tutti i metodi definiti per questo oggetto di reflection che soddisfano i vincoli di ricerca specificati in <paramref name="bindingAttr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-146">An array of <see cref="T:System.Reflection.MethodInfo" /> objects containing all the methods defined for this reflection object that meet the search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36e6b-147">L'attributo non pubblici di `bindingAttr` è indicato solo se vengono restituiti i metodi pubblici.</span><span class="sxs-lookup"><span data-stu-id="36e6b-147">The non-public attribute of `bindingAttr` is indicated only if public methods are returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]" Usage="iReflect.GetProperties bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="36e6b-148">Attributo di associazione utilizzato per controllare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-148">The binding attribute used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36e6b-149">Recupera una matrice di oggetti <see cref="T:System.Reflection.PropertyInfo" /> corrispondenti a tutte le proprietà pubbliche o a tutte le proprietà della classe corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-149">Retrieves an array of <see cref="T:System.Reflection.PropertyInfo" /> objects corresponding to all public properties or to all properties of the current class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36e6b-150">Matrice di oggetti <see cref="T:System.Reflection.PropertyInfo" /> per tutte le proprietà definite sull'oggetto di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-150">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects for all the properties defined on the reflection object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperty">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36e6b-151">Recupera un oggetto <see cref="T:System.Reflection.PropertyInfo" /> corrispondente a una proprietà specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-151">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo" Usage="iReflect.GetProperty (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="36e6b-152">Nome della proprietà da trovare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-152">The name of the property to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="36e6b-153">Attributi di associazione utilizzati per controllare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-153">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36e6b-154">Recupera un oggetto <see cref="T:System.Reflection.PropertyInfo" /> corrispondente a una proprietà definita in base ai vincoli di ricerca specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-154">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property under specified search constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36e6b-155">Oggetto <see cref="T:System.Reflection.PropertyInfo" /> per la proprietà individuata che soddisfa i vincoli di ricerca specificati in <paramref name="bindingAttr" /> oppure <see langword="null" /> se la proprietà non è stata individuata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-155">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property that meets the search constraints specified in <paramref name="bindingAttr" />, or <see langword="null" /> if the property was not located.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="36e6b-156">L'oggetto implementa più campi con lo stesso nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-156">The object implements multiple fields with the same name.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="iReflect.GetProperty (name, bindingAttr, binder, returnType, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="36e6b-157">Nome del membro da ricercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-157">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="36e6b-158">Attributo di associazione utilizzato per controllare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-158">The binding attribute used to control the search.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="36e6b-159">Oggetto che implementa <see cref="T:System.Reflection.Binder" />, contenente le proprietà relative a questo metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-159">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="36e6b-160">Tipo della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-160">The type of the property.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="36e6b-161">Matrice utilizzata per scegliere uno dei metodi di overload con lo stesso nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-161">An array used to choose among overloaded methods with the same name.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="36e6b-162">Matrice utilizzata per scegliere i modificatori di parametri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-162">An array used to choose the parameter modifiers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36e6b-163">Recupera un oggetto <see cref="T:System.Reflection.PropertyInfo" /> corrispondente a una proprietà specificata in base ai vincoli di ricerca specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-163">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object that corresponds to a specified property with specified search constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36e6b-164">Oggetto <see cref="T:System.Reflection.PropertyInfo" /> per la proprietà individuata, se ne è stata individuata una con il nome specificato in questo oggetto di reflection, oppure <see langword="null" /> se la proprietà non è stata individuata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-164">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property, if a property with the specified name was located in this reflection object, or <see langword="null" /> if the property was not located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36e6b-165">Questo metodo recupera un <xref:System.Reflection.PropertyInfo> oggetto corrispondente a una determinata proprietà in vincoli di ricerca specificati.</span><span class="sxs-lookup"><span data-stu-id="36e6b-165">This method retrieves a <xref:System.Reflection.PropertyInfo> object corresponding to a specified property under specified search constraints.</span></span> <span data-ttu-id="36e6b-166">Una matrice di tipo consente di scegliere uno dei metodi di overload.</span><span class="sxs-lookup"><span data-stu-id="36e6b-166">A type array is used to choose from among overloaded methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.ParameterModifier" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj" Usage="iReflect.InvokeMember (name, invokeAttr, binder, target, args, modifiers, culture, namedParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="36e6b-167">Nome del membro da ricercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-167">The name of the member to find.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="36e6b-168">Uno degli attributi di chiamata di <see cref="T:System.Reflection.BindingFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-168">One of the <see cref="T:System.Reflection.BindingFlags" /> invocation attributes.</span>
          </span>
          <span data-ttu-id="36e6b-169">Il parametro <c>invokeAttr</c> può essere un costruttore, un metodo, una proprietà o un campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-169">The <c>invokeAttr</c> parameter may be a constructor, method, property, or field.</span>
          </span>
          <span data-ttu-id="36e6b-170">È necessario specificare un attributo di chiamata appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-170">A suitable invocation attribute must be specified.</span>
          </span>
          <span data-ttu-id="36e6b-171">Richiamare il membro predefinito di una classe passando una stringa vuota ("") come nome del membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-171">Invoke the default member of a class by passing the empty string ("") as the name of the member.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="36e6b-172">Uno dei flag di bit di <see cref="T:System.Reflection.BindingFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-172">One of the <see cref="T:System.Reflection.BindingFlags" /> bit flags.</span>
          </span>
          <span data-ttu-id="36e6b-173">Implementa l'oggetto <see cref="T:System.Reflection.Binder" />, contenente le proprietà relative a questo metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-173">Implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="36e6b-174">Oggetto su cui richiamare il membro specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-174">The object on which to invoke the specified member.</span>
          </span>
          <span data-ttu-id="36e6b-175">Il parametro viene ignorato nel caso dei membri statici.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-175">This parameter is ignored for static members.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="36e6b-176">Matrice di oggetti che contiene il numero, l'ordine e il tipo dei parametri del membro da richiamare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-176">An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</span>
          </span>
          <span data-ttu-id="36e6b-177">Si tratta di una matrice vuota se non sono disponibili parametri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-177">This is an empty array if there are no parameters.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="36e6b-178">Matrice di oggetti <see cref="T:System.Reflection.ParameterModifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-178">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects.</span>
          </span>
          <span data-ttu-id="36e6b-179">Questa matrice ha la stessa lunghezza del parametro <c>args</c>, che rappresenta gli attributi degli argomenti del membro richiamato nei metadati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-179">This array has the same length as the <c>args</c> parameter, representing the invoked member's argument attributes in the metadata.</span>
          </span>
          <span data-ttu-id="36e6b-180">Un parametro può avere i seguenti attributi: <see langword="pdIn" />, <see langword="pdOut" />, <see langword="pdRetval" />, <see langword="pdOptional" /> e <see langword="pdHasDefault" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-180">A parameter can have the following attributes: <see langword="pdIn" />, <see langword="pdOut" />, <see langword="pdRetval" />, <see langword="pdOptional" />, and <see langword="pdHasDefault" />.</span>
          </span>
          <span data-ttu-id="36e6b-181">Questi rappresentano rispettivamente [In], [Out], [retval], [optional] e un parametro predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-181">These represent [In], [Out], [retval], [optional], and a default parameter, respectively.</span>
          </span>
          <span data-ttu-id="36e6b-182">Questi attributi sono utilizzati da vari servizi di interoperabilità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-182">These attributes are used by various interoperability services.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="36e6b-183">Istanza di <see cref="T:System.Globalization.CultureInfo" /> usata per regolare la coercizione dei tipi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-183">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="36e6b-184">Ad esempio, <c>culture</c> converte un oggetto <see langword="String" /> che rappresenta il numero 1000 in un valore <see langword="Double" />, dal momento che 1000 è rappresentato in modo diverso nelle diverse impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-184">For example, <c>culture</c> converts a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, since 1000 is represented differently by different cultures.</span>
          </span>
          <span data-ttu-id="36e6b-185">Se questo parametro è <see langword="null" />, viene utilizzato l'oggetto <see cref="T:System.Globalization.CultureInfo" /> per il thread corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-185">If this parameter is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="namedParameters">
          <span data-ttu-id="36e6b-186">Matrice di parametri <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-186">A <see langword="String" /> array of parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36e6b-187">Richiama un membro specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-187">Invokes a specified member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36e6b-188">Membro specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-188">The specified member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36e6b-189">Il metodo da richiamare deve essere accessibile e fornire massima corrispondenza con l'elenco di argomenti specificato, in conformità ai vincoli del binder e degli attributi di chiamata specificati.</span><span class="sxs-lookup"><span data-stu-id="36e6b-189">The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</span></span>  
  
 <span data-ttu-id="36e6b-190">Se il numero di parametri nella dichiarazione del metodo è uguale al numero di argomenti nell'elenco di argomenti specificato e il tipo di ciascun argomento può essere convertito dallo strumento di associazione per il tipo del parametro, viene richiamato un metodo.</span><span class="sxs-lookup"><span data-stu-id="36e6b-190">A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36e6b-191">La matrice di modificatori di parametro passato al <xref:System.Reflection.IReflect.InvokeMember%2A> il metodo deve contenere un modificatore di parametro singolo.</span><span class="sxs-lookup"><span data-stu-id="36e6b-191">The array of parameter modifiers passed to the <xref:System.Reflection.IReflect.InvokeMember%2A> method must contain a single parameter modifier.</span></span> <span data-ttu-id="36e6b-192">Viene considerato solo il primo modificatore di parametro quando si determina quale argomento deve essere passato per riferimento quando è esposto a COM.</span><span class="sxs-lookup"><span data-stu-id="36e6b-192">Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.</span></span>  
  
 <span data-ttu-id="36e6b-193">Lo strumento di associazione consente di trovare tutti i metodi di corrispondenza, in conformità con il tipo di associazione richiesti (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType>, <xref:System.Reflection.IReflect.GetProperties%2A>e così via).</span><span class="sxs-lookup"><span data-stu-id="36e6b-193">The binder finds all matching methods, in accordance with the type of binding requested (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType>, <xref:System.Reflection.IReflect.GetProperties%2A>, and so on).</span></span> <span data-ttu-id="36e6b-194">Il set di metodi verrà filtrato per il nome, numero di argomenti e un set di modificatori di ricerca definita nel gestore di associazione.</span><span class="sxs-lookup"><span data-stu-id="36e6b-194">The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</span></span> <span data-ttu-id="36e6b-195">Dopo aver selezionato il metodo, viene richiamato e accessibilità viene controllata a quel punto.</span><span class="sxs-lookup"><span data-stu-id="36e6b-195">After the method is selected, it is invoked, and accessibility is checked at that point.</span></span> <span data-ttu-id="36e6b-196">È possibile specificare quale set di metodi viene eseguita la ricerca in base all'attributo di accessibilità associata al metodo.</span><span class="sxs-lookup"><span data-stu-id="36e6b-196">The search may control which set of methods is searched based upon the accessibility attribute associated with the method.</span></span> <span data-ttu-id="36e6b-197"><xref:System.Reflection.Binder.BindToMethod%2A> Seleziona il metodo da richiamare.</span><span class="sxs-lookup"><span data-stu-id="36e6b-197"><xref:System.Reflection.Binder.BindToMethod%2A> selects the method to be invoked.</span></span> <span data-ttu-id="36e6b-198">Il binder predefinito consente di selezionare la corrispondenza più specifica.</span><span class="sxs-lookup"><span data-stu-id="36e6b-198">The default binder selects the most specific match.</span></span>  
  
 <span data-ttu-id="36e6b-199">Restrizioni di accesso vengono ignorate per un codice completamente attendibile.</span><span class="sxs-lookup"><span data-stu-id="36e6b-199">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="36e6b-200">Vale a dire, proprietà, metodi, campi e i costruttori privati accessibili e richiamate tramite reflection, ogni volta che il codice è completamente attendibile.</span><span class="sxs-lookup"><span data-stu-id="36e6b-200">That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36e6b-201">L'esempio seguente ottiene il valore della <xref:System.DateTime.Now%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="36e6b-201">The following example obtains the value of the <xref:System.DateTime.Now%2A> property.</span></span>  
  
 [!code-cpp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CPP/source.cpp#1)]
 [!code-csharp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CS/source.cs#1)]
 [!code-vb[Classic IReflect.InvokeMember Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="36e6b-202">Sono stati specificati più argomenti per un metodo <see langword="set" /> di campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-202">More than one argument is specified for a field <see langword="set" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingFieldException">
          <span data-ttu-id="36e6b-203">Non è possibile trovare il campo o la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-203">The field or property cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="36e6b-204">Impossibile trovare il metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-204">The method cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="36e6b-205">Viene richiamato un membro privato senza l'oggetto <see cref="T:System.Security.Permissions.ReflectionPermission" /> necessario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-205">A private member is invoked without the necessary <see cref="T:System.Security.Permissions.ReflectionPermission" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSystemType : Type" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36e6b-206">Ottiene il tipo sottostante che rappresenta l'oggetto <see cref="T:System.Reflection.IReflect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-206">Gets the underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36e6b-207">Tipo sottostante che rappresenta l'oggetto <see cref="T:System.Reflection.IReflect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36e6b-207">The underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>