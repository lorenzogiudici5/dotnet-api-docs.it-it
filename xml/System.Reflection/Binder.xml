<Type Name="Binder" FullName="System.Reflection.Binder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0c8b1993fab848c2a7c5f4c863cfd40a6da35251" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36543301" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Binder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Binder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Binder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Binder" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binder abstract" />
  <TypeSignature Language="F#" Value="type Binder = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="05b17-101">Selects a member from a list of candidates, and performs type conversion from actual argument type to formal argument type.</span>
      <span class="sxs-lookup">
        <span data-stu-id="05b17-101">Selects a member from a list of candidates, and performs type conversion from actual argument type to formal argument type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05b17-102">Le implementazioni del <xref:System.Reflection.Binder> classe vengono utilizzate da metodi quali <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>, che consente di selezionare da un set di possibili membri da eseguire, in base a un set di tipi di parametro e valori di argomento. <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>, che seleziona un metodo basato su tipi di parametro e così via.</span><span class="sxs-lookup"><span data-stu-id="05b17-102">Implementations of the <xref:System.Reflection.Binder> class are used by methods such as <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>, which selects from a set of possible members to execute, based on a set of parameter types and argument values; <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>, which selects a method based on parameter types; and so on.</span></span>  
  
 <span data-ttu-id="05b17-103">Un'implementazione predefinita del <xref:System.Reflection.Binder> classe viene fornita per il <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="05b17-103">A default implementation of the <xref:System.Reflection.Binder> class is provided by the <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05b17-104">Nell'esempio seguente implementa e illustra tutti i membri del `Binder` classe.</span><span class="sxs-lookup"><span data-stu-id="05b17-104">The following example implements and demonstrates all members of the `Binder` class.</span></span> <span data-ttu-id="05b17-105">Il metodo privato `CanConvertFrom` Trova tipi compatibili per un determinato tipo.</span><span class="sxs-lookup"><span data-stu-id="05b17-105">The private method `CanConvertFrom` finds compatible types for a given type.</span></span>  
  
 [!code-cpp[Binder_1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Binder_1/CPP/binder.cpp#1)]
 [!code-csharp[Binder_1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Binder_1/CS/binder.cs#1)]
 [!code-vb[Binder_1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Binder_1/VB/binder.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="05b17-106">
        <para>Quando si eredita da <see cref="T:System.Reflection.Binder" />, è necessario eseguire l'override dei membri seguenti: <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, <see cref="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />, <see cref="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />, <see cref="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />, e <see cref="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="05b17-106">
          <para>When you inherit from <see cref="T:System.Reflection.Binder" />, you must override the following members: <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, <see cref="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />, <see cref="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />, <see cref="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />, and <see cref="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Binder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Binder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05b17-107">Initializes a new instance of the <see cref="T:System.Reflection.Binder" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-107">Initializes a new instance of the <see cref="T:System.Reflection.Binder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05b17-108">Questo costruttore viene chiamato dai costruttori di classi derivate per inizializzare lo stato in questo tipo.</span><span class="sxs-lookup"><span data-stu-id="05b17-108">This constructor is called by the constructors of derived classes, to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToField">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.FieldInfo BindToField (System.Reflection.BindingFlags bindingAttr, System.Reflection.FieldInfo[] match, object value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo BindToField(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.FieldInfo[] match, object value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BindToField (bindingAttr As BindingFlags, match As FieldInfo(), value As Object, culture As CultureInfo) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::FieldInfo ^ BindToField(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ match, System::Object ^ value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member BindToField : System.Reflection.BindingFlags * System.Reflection.FieldInfo[] * obj * System.Globalization.CultureInfo -&gt; System.Reflection.FieldInfo" Usage="binder.BindToField (bindingAttr, match, value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.FieldInfo[]" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="05b17-109">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-109">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="05b17-110">The set of fields that are candidates for matching.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-110">The set of fields that are candidates for matching.</span>
          </span>
          <span data-ttu-id="05b17-111">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of fields that reflection has determined to be possible matches, typically because they have the correct member name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-111">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of fields that reflection has determined to be possible matches, typically because they have the correct member name.</span>
          </span>
          <span data-ttu-id="05b17-112">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-112">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="05b17-113">The field value used to locate a matching field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-113">The field value used to locate a matching field.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="05b17-114">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types, in binder implementations that coerce types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-114">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types, in binder implementations that coerce types.</span>
          </span>
          <span data-ttu-id="05b17-115">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-115">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
          <span data-ttu-id="05b17-116">Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-116">Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span>
          </span>
          <span data-ttu-id="05b17-117">The default binder does not do such string coercions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-117">The default binder does not do such string coercions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05b17-118">Selects a field from the given set of fields, based on the specified criteria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-118">Selects a field from the given set of fields, based on the specified criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05b17-119">The matching field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-119">The matching field.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05b17-120">Se `bindingAttr` non include <xref:System.Reflection.BindingFlags.SetField?displayProperty=nameWithType>, l'implementazione dello strumento di associazione predefiniti fornito da <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> restituisce semplicemente il primo elemento della `match`.</span><span class="sxs-lookup"><span data-stu-id="05b17-120">If `bindingAttr` does not include <xref:System.Reflection.BindingFlags.SetField?displayProperty=nameWithType>, the default binder implementation provided by <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> simply returns the first element of `match`.</span></span> <span data-ttu-id="05b17-121">Non viene eseguita alcuna selezione.</span><span class="sxs-lookup"><span data-stu-id="05b17-121">No selection is done.</span></span>  
  
 <span data-ttu-id="05b17-122">Questo metodo consente di controllare l'associazione fornita dal <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="05b17-122">This method controls the binding provided by <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="05b17-123">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> contains multiple fields that are equally good matches for <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-123">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> contains multiple fields that are equally good matches for <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="05b17-124">For example, <paramref name="value" /> contains a <c>MyClass</c> object that implements the <c>IMyClass</c> interface, and <paramref name="match" /> contains a field of type <c>MyClass</c> and a field of type <c>IMyClass</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-124">For example, <paramref name="value" /> contains a <c>MyClass</c> object that implements the <c>IMyClass</c> interface, and <paramref name="match" /> contains a field of type <c>MyClass</c> and a field of type <c>IMyClass</c>.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingFieldException">
          <span data-ttu-id="05b17-125">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> contains no fields that can accept <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-125">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> contains no fields that can accept <paramref name="value" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="05b17-126">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> is <see langword="null" /> or an empty array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-126">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> is <see langword="null" /> or an empty array.</span>
          </span>
          <span data-ttu-id="05b17-127">-or-  <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-127">-or-  <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="BindToMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodBase BindToMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, ref object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] names, out object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodBase BindToMethod(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MethodBase[] match, object[]&amp; args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] names, [out] object&amp; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BindToMethod (bindingAttr As BindingFlags, match As MethodBase(), ByRef args As Object(), modifiers As ParameterModifier(), culture As CultureInfo, names As String(), ByRef state As Object) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodBase ^ BindToMethod(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::MethodBase ^&gt; ^ match, cli::array &lt;System::Object ^&gt; ^ % args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ names, [Runtime::InteropServices::Out] System::Object ^ % state);" />
      <MemberSignature Language="F#" Value="abstract member BindToMethod : System.Reflection.BindingFlags * System.Reflection.MethodBase[] *  * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] *  -&gt; System.Reflection.MethodBase" Usage="binder.BindToMethod (bindingAttr, match, args, modifiers, culture, names, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.MethodBase[]" />
        <Parameter Name="args" Type="System.Object[]&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="names" Type="System.String[]" />
        <Parameter Name="state" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="05b17-128">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-128">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="05b17-129">The set of methods that are candidates for matching.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-129">The set of methods that are candidates for matching.</span>
          </span>
          <span data-ttu-id="05b17-130">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-130">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</span>
          </span>
          <span data-ttu-id="05b17-131">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-131">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="05b17-132">The arguments that are passed in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-132">The arguments that are passed in.</span>
          </span>
          <span data-ttu-id="05b17-133">The binder can change the order of the arguments in this array; for example, the default binder changes the order of arguments if the <c>names</c> parameter is used to specify an order other than positional order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-133">The binder can change the order of the arguments in this array; for example, the default binder changes the order of arguments if the <c>names</c> parameter is used to specify an order other than positional order.</span>
          </span>
          <span data-ttu-id="05b17-134">If a binder implementation coerces argument types, the types and values of the arguments can be changed as well.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-134">If a binder implementation coerces argument types, the types and values of the arguments can be changed as well.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="05b17-135">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-135">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span>
          </span>
          <span data-ttu-id="05b17-136">The default binder implementation does not use this parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-136">The default binder implementation does not use this parameter.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="05b17-137">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types, in binder implementations that coerce types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-137">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types, in binder implementations that coerce types.</span>
          </span>
          <span data-ttu-id="05b17-138">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-138">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
          <span data-ttu-id="05b17-139">Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-139">Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span>
          </span>
          <span data-ttu-id="05b17-140">The default binder does not do such string coercions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-140">The default binder does not do such string coercions.</span>
          </span>
        </param>
        <param name="names">
          <span data-ttu-id="05b17-141">The parameter names, if parameter names are to be considered when matching, or <see langword="null" /> if arguments are to be treated as purely positional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-141">The parameter names, if parameter names are to be considered when matching, or <see langword="null" /> if arguments are to be treated as purely positional.</span>
          </span>
          <span data-ttu-id="05b17-142">For example, parameter names must be used if arguments are not supplied in positional order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-142">For example, parameter names must be used if arguments are not supplied in positional order.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="05b17-143">After the method returns, <c>state</c> contains a binder-provided object that keeps track of argument reordering.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-143">After the method returns, <c>state</c> contains a binder-provided object that keeps track of argument reordering.</span>
          </span>
          <span data-ttu-id="05b17-144">The binder creates this object, and the binder is the sole consumer of this object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-144">The binder creates this object, and the binder is the sole consumer of this object.</span>
          </span>
          <span data-ttu-id="05b17-145">If <c>state</c> is not <see langword="null" /> when <see langword="BindToMethod" /> returns, you must pass <c>state</c> to the <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" /> method if you want to restore <c>args</c> to its original order, for example, so that you can retrieve the values of <see langword="ref" /> parameters (<see langword="ByRef" /> parameters in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-145">If <c>state</c> is not <see langword="null" /> when <see langword="BindToMethod" /> returns, you must pass <c>state</c> to the <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" /> method if you want to restore <c>args</c> to its original order, for example, so that you can retrieve the values of <see langword="ref" /> parameters (<see langword="ByRef" /> parameters in Visual Basic).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05b17-146">Selects a method to invoke from the given set of methods, based on the supplied arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-146">Selects a method to invoke from the given set of methods, based on the supplied arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05b17-147">The matching method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-147">The matching method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05b17-148">Il binder predefinito prende in considerazione entrambi i parametri con valori e `params` matrici (`ParamArray` matrici in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="05b17-148">The default binder takes into account both parameters that have values and `params` arrays (`ParamArray` arrays in Visual Basic).</span></span> <span data-ttu-id="05b17-149">Pertanto, è possibile trovare una corrispondenza nei casi in cui `args` e `match` non contengono lo stesso numero di elementi.</span><span class="sxs-lookup"><span data-stu-id="05b17-149">Thus, it is possible to find a match in cases where `args` and `match` do not contain the same number of elements.</span></span>  
  
 <span data-ttu-id="05b17-150">Lo strumento di associazione consente a un client eseguire il mapping della matrice di argomenti alla forma originale se la matrice di argomenti è stata modificata da <xref:System.Reflection.Binder.BindToMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="05b17-150">The binder enables a client to map the array of arguments back to its original form if the argument array has been manipulated by <xref:System.Reflection.Binder.BindToMethod%2A>.</span></span> <span data-ttu-id="05b17-151">Utilizzare questa funzionalità di modifica del mapping per ottenere nuovamente gli argomenti per riferimento quando sono presenti tali argomenti.</span><span class="sxs-lookup"><span data-stu-id="05b17-151">Use this remap capability to get back by-reference arguments when such arguments are present.</span></span> <span data-ttu-id="05b17-152">Quando si passano argomenti in base al nome, lo strumento di associazione Riordina la matrice di argomenti.</span><span class="sxs-lookup"><span data-stu-id="05b17-152">When you pass arguments by name, the binder reorders the argument array.</span></span> <span data-ttu-id="05b17-153">Il `state` parametro tiene traccia di riordino degli argomenti, rendendo il gestore di associazione <xref:System.Reflection.Binder.ReorderArgumentArray%2A> metodo per riordinare la matrice di argomenti alla forma originale.</span><span class="sxs-lookup"><span data-stu-id="05b17-153">The `state` parameter keeps track of argument reordering, thus enabling the binder's <xref:System.Reflection.Binder.ReorderArgumentArray%2A> method to reorder the argument array to its original form.</span></span>  
  
 <span data-ttu-id="05b17-154">Il <xref:System.Reflection.Binder.BindToMethod%2A> metodo viene utilizzato il <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="05b17-154">The <xref:System.Reflection.Binder.BindToMethod%2A> method is used by the <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="05b17-155">For the default binder, <paramref name="match" /> contains multiple methods that are equally good matches for <paramref name="args" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-155">For the default binder, <paramref name="match" /> contains multiple methods that are equally good matches for <paramref name="args" />.</span>
          </span>
          <span data-ttu-id="05b17-156">For example, <paramref name="args" /> contains a <c>MyClass</c> object that implements the <c>IMyClass</c> interface, and <paramref name="match" /> contains a method that takes <c>MyClass</c> and a method that takes <c>IMyClass</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-156">For example, <paramref name="args" /> contains a <c>MyClass</c> object that implements the <c>IMyClass</c> interface, and <paramref name="match" /> contains a method that takes <c>MyClass</c> and a method that takes <c>IMyClass</c>.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="05b17-157">For the default binder, <paramref name="match" /> contains no methods that can accept the arguments supplied in <paramref name="args" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-157">For the default binder, <paramref name="match" /> contains no methods that can accept the arguments supplied in <paramref name="args" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="05b17-158">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-158">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.MethodBase" />
      </Docs>
    </Member>
    <Member MemberName="CanChangeType">
      <MemberSignature Language="C#" Value="public virtual bool CanChangeType (object value, Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanChangeType(object value, class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.CanChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanChangeType(System::Object ^ value, Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member CanChangeType : obj * Type * System.Globalization.CultureInfo -&gt; bool&#xA;override this.CanChangeType : obj * Type * System.Globalization.CultureInfo -&gt; bool" Usage="binder.CanChangeType (value, type, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="type">To be added.</param>
        <param name="culture">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public abstract object ChangeType (object value, Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ChangeType(System::Object ^ value, Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ChangeType : obj * Type * System.Globalization.CultureInfo -&gt; obj" Usage="binder.ChangeType (value, type, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="05b17-159">The object to change into a new <see langword="Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-159">The object to change into a new <see langword="Type" />.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="05b17-160">The new <see langword="Type" /> that <c>value</c> will become.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-160">The new <see langword="Type" /> that <c>value</c> will become.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="05b17-161">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-161">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types.</span>
          </span>
          <span data-ttu-id="05b17-162">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-162">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
          <span data-ttu-id="05b17-163">Note   For example, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-163">Note   For example, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05b17-164">Changes the type of the given <see langword="Object" /> to the given <see langword="Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-164">Changes the type of the given <see langword="Object" /> to the given <see langword="Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05b17-165">An object that contains the given value as the new type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-165">An object that contains the given value as the new type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05b17-166">Reflection modella le regole di accessibilità di common type system.</span><span class="sxs-lookup"><span data-stu-id="05b17-166">Reflection models the accessibility rules of the common type system.</span></span> <span data-ttu-id="05b17-167">Ad esempio, se il chiamante è nello stesso assembly, il chiamante necessita di speciali autorizzazioni per i membri interni.</span><span class="sxs-lookup"><span data-stu-id="05b17-167">For example, if the caller is in the same assembly, the caller does not need special permissions for internal members.</span></span> <span data-ttu-id="05b17-168">In caso contrario, il chiamante deve <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="05b17-168">Otherwise, the caller needs <xref:System.Security.Permissions.ReflectionPermission>.</span></span> <span data-ttu-id="05b17-169">Ciò è coerente con la ricerca di membri che sono protetti, privato e così via.</span><span class="sxs-lookup"><span data-stu-id="05b17-169">This is consistent with lookup of members that are protected, private, and so on.</span></span>  
  
 <span data-ttu-id="05b17-170">Il principio generale è che `ChangeType` deve eseguire solo widening coercizioni, che non comportano la perdita dei dati.</span><span class="sxs-lookup"><span data-stu-id="05b17-170">The general principle is that `ChangeType` should perform only widening coercions, which never lose data.</span></span> <span data-ttu-id="05b17-171">Un esempio di una coercizione di ampliamento consiste nell'assegnare un valore che è un intero con segno a 32 bit su un valore che è un intero con segno a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="05b17-171">An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer.</span></span> <span data-ttu-id="05b17-172">Ciò si differenzia da un tipo di assegnazione forzata, che potrebbe perdere dati.</span><span class="sxs-lookup"><span data-stu-id="05b17-172">This is distinguished from a narrowing coercion, which may lose data.</span></span> <span data-ttu-id="05b17-173">Un esempio di una coercizione di restrizione consiste nell'assegnare un intero con segno a 64 bit in un intero con segno a 32 bit.</span><span class="sxs-lookup"><span data-stu-id="05b17-173">An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.</span></span>  
  
 <span data-ttu-id="05b17-174">La tabella seguente elenca le coercizioni eseguite dall'oggetto predefinito `ChangeType`.</span><span class="sxs-lookup"><span data-stu-id="05b17-174">The following table lists the coercions performed by the default `ChangeType`.</span></span>  
  
|<span data-ttu-id="05b17-175">Tipo di origine</span><span class="sxs-lookup"><span data-stu-id="05b17-175">Source type</span></span>|<span data-ttu-id="05b17-176">Tipo di destinazione</span><span class="sxs-lookup"><span data-stu-id="05b17-176">Target type</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="05b17-177">Qualsiasi tipo</span><span class="sxs-lookup"><span data-stu-id="05b17-177">Any type</span></span>|<span data-ttu-id="05b17-178">Il tipo di base.</span><span class="sxs-lookup"><span data-stu-id="05b17-178">Its base type.</span></span>|  
|<span data-ttu-id="05b17-179">Qualsiasi tipo</span><span class="sxs-lookup"><span data-stu-id="05b17-179">Any type</span></span>|<span data-ttu-id="05b17-180">Implementa l'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="05b17-180">The interface it implements.</span></span>|  
|<span data-ttu-id="05b17-181">Char</span><span class="sxs-lookup"><span data-stu-id="05b17-181">Char</span></span>|<span data-ttu-id="05b17-182">UInt16, UInt32, Int32, UInt64, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="05b17-182">UInt16, UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="05b17-183">Byte</span><span class="sxs-lookup"><span data-stu-id="05b17-183">Byte</span></span>|<span data-ttu-id="05b17-184">Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="05b17-184">Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="05b17-185">SByte</span><span class="sxs-lookup"><span data-stu-id="05b17-185">SByte</span></span>|<span data-ttu-id="05b17-186">Int16, Int32, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="05b17-186">Int16, Int32, Int64, Single, Double</span></span>|  
|<span data-ttu-id="05b17-187">UInt16</span><span class="sxs-lookup"><span data-stu-id="05b17-187">UInt16</span></span>|<span data-ttu-id="05b17-188">UInt32, Int32, UInt64, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="05b17-188">UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="05b17-189">Int16</span><span class="sxs-lookup"><span data-stu-id="05b17-189">Int16</span></span>|<span data-ttu-id="05b17-190">Int32, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="05b17-190">Int32, Int64, Single, Double</span></span>|  
|<span data-ttu-id="05b17-191">UInt32</span><span class="sxs-lookup"><span data-stu-id="05b17-191">UInt32</span></span>|<span data-ttu-id="05b17-192">UInt64, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="05b17-192">UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="05b17-193">Int32</span><span class="sxs-lookup"><span data-stu-id="05b17-193">Int32</span></span>|<span data-ttu-id="05b17-194">Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="05b17-194">Int64, Single, Double</span></span>|  
|<span data-ttu-id="05b17-195">UInt64</span><span class="sxs-lookup"><span data-stu-id="05b17-195">UInt64</span></span>|<span data-ttu-id="05b17-196">Single, Double</span><span class="sxs-lookup"><span data-stu-id="05b17-196">Single, Double</span></span>|  
|<span data-ttu-id="05b17-197">Int64</span><span class="sxs-lookup"><span data-stu-id="05b17-197">Int64</span></span>|<span data-ttu-id="05b17-198">Single, Double</span><span class="sxs-lookup"><span data-stu-id="05b17-198">Single, Double</span></span>|  
|<span data-ttu-id="05b17-199">Single</span><span class="sxs-lookup"><span data-stu-id="05b17-199">Single</span></span>|<span data-ttu-id="05b17-200">Double</span><span class="sxs-lookup"><span data-stu-id="05b17-200">Double</span></span>|  
|<span data-ttu-id="05b17-201">Non-riferimento</span><span class="sxs-lookup"><span data-stu-id="05b17-201">Non-reference</span></span>|<span data-ttu-id="05b17-202">In base al riferimento.</span><span class="sxs-lookup"><span data-stu-id="05b17-202">By-reference.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReorderArgumentArray">
      <MemberSignature Language="C#" Value="public abstract void ReorderArgumentArray (ref object[] args, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReorderArgumentArray(object[]&amp; args, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReorderArgumentArray (ByRef args As Object(), state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReorderArgumentArray(cli::array &lt;System::Object ^&gt; ^ % args, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member ReorderArgumentArray :  * obj -&gt; unit" Usage="binder.ReorderArgumentArray (args, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Object[]&amp;" RefType="ref" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="05b17-203">The actual arguments that are passed in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-203">The actual arguments that are passed in.</span>
          </span>
          <span data-ttu-id="05b17-204">Both the types and values of the arguments can be changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-204">Both the types and values of the arguments can be changed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="05b17-205">A binder-provided object that keeps track of argument reordering.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-205">A binder-provided object that keeps track of argument reordering.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05b17-206">Upon returning from <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, restores the <paramref name="args" /> argument to what it was when it came from <see langword="BindToMethod" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-206">Upon returning from <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, restores the <paramref name="args" /> argument to what it was when it came from <see langword="BindToMethod" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05b17-207">Common language runtime chiama questo metodo se `state` non è `null` dopo la restituzione da `BindToMethod`.</span><span class="sxs-lookup"><span data-stu-id="05b17-207">The common language runtime calls this method if `state` is not `null` after a return from `BindToMethod`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodBase SelectMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodBase SelectMethod(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MethodBase[] match, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SelectMethod (bindingAttr As BindingFlags, match As MethodBase(), types As Type(), modifiers As ParameterModifier()) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodBase ^ SelectMethod(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::MethodBase ^&gt; ^ match, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member SelectMethod : System.Reflection.BindingFlags * System.Reflection.MethodBase[] * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodBase" Usage="binder.SelectMethod (bindingAttr, match, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.MethodBase[]" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="05b17-208">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-208">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="05b17-209">The set of methods that are candidates for matching.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-209">The set of methods that are candidates for matching.</span>
          </span>
          <span data-ttu-id="05b17-210">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-210">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</span>
          </span>
          <span data-ttu-id="05b17-211">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-211">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="05b17-212">The parameter types used to locate a matching method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-212">The parameter types used to locate a matching method.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="05b17-213">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-213">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05b17-214">Selects a method from the given set of methods, based on the argument type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-214">Selects a method from the given set of methods, based on the argument type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05b17-215">The matching method, if found; otherwise, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-215">The matching method, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05b17-216">Questo metodo deve restituire `null` se nessun metodo corrisponde ai criteri.</span><span class="sxs-lookup"><span data-stu-id="05b17-216">This method should return `null` if no method matches the criteria.</span></span> <span data-ttu-id="05b17-217">Questo metodo controlla la selezione fornita per il `GetConstructor` e `GetMethod` metodi su `Type`.</span><span class="sxs-lookup"><span data-stu-id="05b17-217">This method controls the selection provided by the `GetConstructor` and `GetMethod` methods on `Type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="05b17-218">For the default binder, <paramref name="match" /> contains multiple methods that are equally good matches for the parameter types described by <paramref name="types" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-218">For the default binder, <paramref name="match" /> contains multiple methods that are equally good matches for the parameter types described by <paramref name="types" />.</span>
          </span>
          <span data-ttu-id="05b17-219">For example, the array in <paramref name="types" /> contains a <see cref="T:System.Type" /> object for <c>MyClass</c> and the array in <paramref name="match" /> contains a method that takes a base class of <c>MyClass</c> and a method that takes an interface that <c>MyClass</c> implements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-219">For example, the array in <paramref name="types" /> contains a <see cref="T:System.Type" /> object for <c>MyClass</c> and the array in <paramref name="match" /> contains a method that takes a base class of <c>MyClass</c> and a method that takes an interface that <c>MyClass</c> implements.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="05b17-220">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-220">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span>
          </span>
          <span data-ttu-id="05b17-221">-or-  An element of <paramref name="types" /> derives from <see cref="T:System.Type" />, but is not of type <see langword="RuntimeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-221">-or-  An element of <paramref name="types" /> derives from <see cref="T:System.Type" />, but is not of type <see langword="RuntimeType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectProperty">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.PropertyInfo SelectProperty (System.Reflection.BindingFlags bindingAttr, System.Reflection.PropertyInfo[] match, Type returnType, Type[] indexes, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo SelectProperty(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.PropertyInfo[] match, class System.Type returnType, class System.Type[] indexes, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SelectProperty (bindingAttr As BindingFlags, match As PropertyInfo(), returnType As Type, indexes As Type(), modifiers As ParameterModifier()) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::PropertyInfo ^ SelectProperty(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ match, Type ^ returnType, cli::array &lt;Type ^&gt; ^ indexes, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member SelectProperty : System.Reflection.BindingFlags * System.Reflection.PropertyInfo[] * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="binder.SelectProperty (bindingAttr, match, returnType, indexes, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.PropertyInfo[]" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="indexes" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="05b17-222">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-222">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="05b17-223">The set of properties that are candidates for matching.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-223">The set of properties that are candidates for matching.</span>
          </span>
          <span data-ttu-id="05b17-224">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of properties that reflection has determined to be possible matches, typically because they have the correct member name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-224">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of properties that reflection has determined to be possible matches, typically because they have the correct member name.</span>
          </span>
          <span data-ttu-id="05b17-225">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-225">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="05b17-226">The return value the matching property must have.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-226">The return value the matching property must have.</span>
          </span>
        </param>
        <param name="indexes">
          <span data-ttu-id="05b17-227">The index types of the property being searched for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-227">The index types of the property being searched for.</span>
          </span>
          <span data-ttu-id="05b17-228">Used for index properties such as the indexer for a class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-228">Used for index properties such as the indexer for a class.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="05b17-229">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-229">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05b17-230">Selects a property from the given set of properties, based on the specified criteria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-230">Selects a property from the given set of properties, based on the specified criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05b17-231">The matching property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-231">The matching property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05b17-232">Questo metodo controlla la selezione fornita per il `GetProperty` metodo su `Type`.</span><span class="sxs-lookup"><span data-stu-id="05b17-232">This method controls the selection provided by the `GetProperty` method on `Type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="05b17-233">For the default binder, <paramref name="match" /> contains multiple properties that are equally good matches for <paramref name="returnType" /> and <paramref name="indexes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-233">For the default binder, <paramref name="match" /> contains multiple properties that are equally good matches for <paramref name="returnType" /> and <paramref name="indexes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="05b17-234">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05b17-234">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.PropertyInfo" />
      </Docs>
    </Member>
  </Members>
</Type>