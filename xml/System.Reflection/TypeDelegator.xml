<Type Name="TypeDelegator" FullName="System.Reflection.TypeDelegator">
  <TypeSignature Language="C#" Value="public class TypeDelegator : System.Reflection.TypeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TypeDelegator extends System.Reflection.TypeInfo" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.TypeDelegator" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeDelegator&#xA;Inherits TypeInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDelegator : System::Reflection::TypeInfo" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.TypeInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1f4f4-101">Esegue il wrapping di un oggetto <see cref="T:System.Type" /> e delega i metodi a tale oggetto <see langword="Type" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-101">Wraps a <see cref="T:System.Type" /> object and delegates methods to that <see langword="Type" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-102">Derivano da questo tipo ed eseguire l'override solo i membri che è necessario fornire personalizzazione, più i membri richiesti dal programma e non è già implementati dalla <xref:System.Reflection.TypeDelegator>.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-102">Derive from this type and override only those members you have to provide customization in, plus any members that are required by your program and not already implemented by <xref:System.Reflection.TypeDelegator>.</span></span>  
  
 <span data-ttu-id="1f4f4-103"><xref:System.Reflection.TypeDelegator> deriva da <xref:System.Type?displayProperty=nameWithType> e implementa la maggior parte delle proprietà e metodi di <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-103"><xref:System.Reflection.TypeDelegator> derives from <xref:System.Type?displayProperty=nameWithType> and implements most of the properties and methods of <xref:System.Type>.</span></span> <span data-ttu-id="1f4f4-104">Per ogni membro implementa, <xref:System.Reflection.TypeDelegator> delega automaticamente al membro corrispondente di interna <xref:System.Type> oggetto, che viene fornito come argomento al costruttore.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-104">For each member it implements, <xref:System.Reflection.TypeDelegator> automatically delegates to the corresponding member of an internal <xref:System.Type> object, which is supplied as an argument to the constructor.</span></span> <span data-ttu-id="1f4f4-105">Questo interno <xref:System.Type> oggetto esposto per la derivazione di classi per la `protected` <xref:System.Reflection.TypeDelegator.typeImpl> campo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-105">This internal <xref:System.Type> object is exposed to deriving classes by the `protected`<xref:System.Reflection.TypeDelegator.typeImpl> field.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f4f4-106">Alcuni membri del <xref:System.Reflection.TypeDelegator> dispongono di implementazioni anche se i membri sono ereditati semplicemente da <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-106">Some members of <xref:System.Reflection.TypeDelegator> have implementations even though the members themselves are simply inherited from <xref:System.Type>.</span></span> <span data-ttu-id="1f4f4-107">In questi casi, l'implementazione è fornita dall'oggetto sottoposto a override `protected` metodo che presenta un nome che termina con "Impl".</span><span class="sxs-lookup"><span data-stu-id="1f4f4-107">In these cases, the implementation is provided by an overridden `protected` method that has a name that ends in "Impl".</span></span> <span data-ttu-id="1f4f4-108">Ad esempio, l'implementazione per tutti gli overload del <xref:System.Reflection.TypeDelegator.GetMethods%2A> metodo è fornito da sottoposto a override <xref:System.Reflection.TypeDelegator.GetMethodImpl%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-108">For example, the implementation for all overloads of the <xref:System.Reflection.TypeDelegator.GetMethods%2A> method is supplied by the overridden <xref:System.Reflection.TypeDelegator.GetMethodImpl%2A> method.</span></span> <span data-ttu-id="1f4f4-109">L'implementazione per le proprietà ereditate quale <xref:System.Type.IsPublic%2A> e <xref:System.Type.IsNestedAssembly%2A> viene fornito da sottoposto a override <xref:System.Reflection.TypeDelegator.GetAttributeFlagsImpl%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-109">The implementation for inherited properties such as <xref:System.Type.IsPublic%2A> and <xref:System.Type.IsNestedAssembly%2A> is provided by the overridden <xref:System.Reflection.TypeDelegator.GetAttributeFlagsImpl%2A> method.</span></span>  
  
 <span data-ttu-id="1f4f4-110">Derivazione di classi è possibile fornire un costruttore pubblico che accetta un <xref:System.Type> oggetto come parametro e semplicemente i passaggi che l'oggetto nel <xref:System.Reflection.TypeDelegator.%23ctor%28System.Type%29> costruttore, oppure impostare interno <xref:System.Type> oggetto in un altro modo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-110">Deriving classes can provide a public constructor that takes a <xref:System.Type> object as its parameter and simply passes that object to the <xref:System.Reflection.TypeDelegator.%23ctor%28System.Type%29> constructor, or can set the internal <xref:System.Type> object in some other way.</span></span>  
  
 <span data-ttu-id="1f4f4-111">Se una classe derivata utilizza un membro che non è implementato da <xref:System.Reflection.TypeDelegator>, deve eseguire l'override di tale membro e fornire un'implementazione.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-111">If a deriving class uses a member that is not implemented by <xref:System.Reflection.TypeDelegator>, it must override that member and provide an implementation.</span></span> <span data-ttu-id="1f4f4-112">L'implementazione più semplice consiste nel chiamare il membro corrispondente su interno <xref:System.Type> oggetto esposto dal <xref:System.Reflection.TypeDelegator.typeImpl> campo, ma è possibile fornire qualsiasi implementazione richiesta dall'applicazione.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-112">The simplest implementation is to call the corresponding member on the internal <xref:System.Type> object exposed by the <xref:System.Reflection.TypeDelegator.typeImpl> field, but you can provide any implementation your application requires.</span></span> <span data-ttu-id="1f4f4-113">Non è necessario eseguire l'override di questi membri, se non vengono utilizzate dall'applicazione o dalle funzioni della libreria le chiamate dell'applicazione (ad esempio, tramite il <xref:System.CodeDom.CodeTypeReference.%23ctor%28System.Type%29?displayProperty=nameWithType> costruttore).</span><span class="sxs-lookup"><span data-stu-id="1f4f4-113">It is not necessary to override these members if they are not used by your application or by library functions your application calls (for example, by the <xref:System.CodeDom.CodeTypeReference.%23ctor%28System.Type%29?displayProperty=nameWithType> constructor).</span></span>  
  
 <span data-ttu-id="1f4f4-114">I seguenti metodi virtuali (`Overridable` metodi in Visual Basic) di <xref:System.Type> non sono implementate da <xref:System.Reflection.TypeDelegator>: <xref:System.Type.MakeGenericType%2A>, <xref:System.Type.GetGenericTypeDefinition%2A>, <xref:System.Type.GetGenericArguments%2A>, <xref:System.Type.GetGenericParameterConstraints%2A>, <xref:System.Type.MakeArrayType%2A>, <xref:System.Type.MakeByRefType%2A>, <xref:System.Type.MakePointerType%2A> , <xref:System.Type.GetEnumNames%2A>, <xref:System.Type.GetEnumValues%2A>, <xref:System.Type.GetEnumUnderlyingType%2A>, <xref:System.Type.GetTypeCodeImpl%2A>, <xref:System.Type.IsEnumDefined%2A>, <xref:System.Type.IsEquivalentTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-114">The following virtual methods (`Overridable` methods in Visual Basic) of <xref:System.Type> are not implemented by <xref:System.Reflection.TypeDelegator>: <xref:System.Type.MakeGenericType%2A>, <xref:System.Type.GetGenericTypeDefinition%2A>, <xref:System.Type.GetGenericArguments%2A>, <xref:System.Type.GetGenericParameterConstraints%2A>, <xref:System.Type.MakeArrayType%2A>, <xref:System.Type.MakeByRefType%2A>, <xref:System.Type.MakePointerType%2A>, <xref:System.Type.GetEnumNames%2A>, <xref:System.Type.GetEnumValues%2A>, <xref:System.Type.GetEnumUnderlyingType%2A>, <xref:System.Type.GetTypeCodeImpl%2A>, <xref:System.Type.IsEnumDefined%2A>, <xref:System.Type.IsEquivalentTo%2A>.</span></span>  
  
 <span data-ttu-id="1f4f4-115">Le seguenti proprietà virtuali (`Overridable` proprietà in Visual Basic) di <xref:System.Type> non sono implementate da <xref:System.Reflection.TypeDelegator>: <xref:System.Type.IsGenericType%2A>, <xref:System.Type.IsGenericTypeDefinition%2A>, <xref:System.Type.IsGenericParameter%2A>, <xref:System.Type.ContainsGenericParameters%2A>, <xref:System.Type.DeclaringMethod%2A>, <xref:System.Type.GenericParameterAttributes%2A>, <xref:System.Type.GenericParameterPosition%2A> , <xref:System.Type.IsSecurityCritical%2A>, <xref:System.Type.IsSecuritySafeCritical%2A>, <xref:System.Type.IsSecurityTransparent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-115">The following virtual properties (`Overridable` properties in Visual Basic) of <xref:System.Type> are not implemented by <xref:System.Reflection.TypeDelegator>: <xref:System.Type.IsGenericType%2A>, <xref:System.Type.IsGenericTypeDefinition%2A>, <xref:System.Type.IsGenericParameter%2A>, <xref:System.Type.ContainsGenericParameters%2A>, <xref:System.Type.DeclaringMethod%2A>, <xref:System.Type.GenericParameterAttributes%2A>, <xref:System.Type.GenericParameterPosition%2A>, <xref:System.Type.IsSecurityCritical%2A>, <xref:System.Type.IsSecuritySafeCritical%2A>, <xref:System.Type.IsSecurityTransparent%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f4f4-116">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.TypeDelegator" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-116">Initializes a new instance of the <see cref="T:System.Reflection.TypeDelegator" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDelegator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDelegator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f4f4-117">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.TypeDelegator" /> con le proprietà predefinite.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-117">Initializes a new instance of the <see cref="T:System.Reflection.TypeDelegator" /> class with default properties.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeDelegator (Type delegatingType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type delegatingType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (delegatingType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeDelegator(Type ^ delegatingType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="delegatingType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="delegatingType"><span data-ttu-id="1f4f4-118">Istanza della classe <see cref="T:System.Type" /> che incapsula la chiamata al metodo di un oggetto.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-118">The instance of the class <see cref="T:System.Type" /> that encapsulates the call to the method of an object.</span></span></param>
        <summary><span data-ttu-id="1f4f4-119">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.TypeDelegator" /> che specifica l'istanza di incapsulamento.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-119">Initializes a new instance of the <see cref="T:System.Reflection.TypeDelegator" /> class specifying the encapsulating instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-120">Questo costruttore viene chiamato da una classe per generare un delegato in base al `Type` oggetto della classe che definisce il metodo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-120">This constructor is called from a class to generate a delegate based upon the `Type` object for the class defining the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1f4f4-121"><paramref name="delegatingType" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-121"><paramref name="delegatingType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f4f4-122">Ottiene l'assembly del tipo implementato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-122">Gets the assembly of the implemented type.</span></span></summary>
        <value><span data-ttu-id="1f4f4-123">Oggetto <see cref="T:System.Reflection.Assembly" /> che rappresenta l'assembly del tipo implementato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-123">An <see cref="T:System.Reflection.Assembly" /> object representing the assembly of the implemented type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-124">Gli assembly sono l'unità di distribuzione in common language runtime.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-124">Assemblies are the deployment units in the common language runtime.</span></span> <span data-ttu-id="1f4f4-125">Gli assembly stabilire lo spazio dei nomi per la risoluzione delle richieste e determinano le risorse esposte esternamente e che sono accessibili dall'interno dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-125">Assemblies establish the namespace for resolving requests and determine which resources are exposed externally and which are accessible from within the assembly.</span></span> <span data-ttu-id="1f4f4-126">Common language runtime può determinare e individuare l'assembly per qualsiasi oggetto in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-126">The common language runtime can determine and locate the assembly for any running object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyQualifiedName">
      <MemberSignature Language="C#" Value="public override string AssemblyQualifiedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyQualifiedName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.AssemblyQualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AssemblyQualifiedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AssemblyQualifiedName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f4f4-127">Ottiene il nome completo dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-127">Gets the assembly's fully qualified name.</span></span></summary>
        <value><span data-ttu-id="1f4f4-128">Oggetto <see langword="String" /> che contiene il nome completo dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-128">A <see langword="String" /> containing the assembly's fully qualified name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public override Type BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ BaseType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f4f4-129">Ottiene il tipo base per il tipo corrente.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-129">Gets the base type for the current type.</span></span></summary>
        <value><span data-ttu-id="1f4f4-130">Tipo base per un tipo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-130">The base type for a type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-131">Il tipo di base è il tipo da cui questo tipo eredita direttamente.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-131">The base type is the type from which this type directly inherits.</span></span> <span data-ttu-id="1f4f4-132">Poiché il <xref:System.Object> tipo di classe è la principale classe base di tutti gli altri tipi, è l'unico tipo che non dispone di un tipo di base.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-132">Since the <xref:System.Object> class type is the ultimate base class of all the other types, it is the only type that does not have a base type.</span></span> <span data-ttu-id="1f4f4-133">In questo caso, `null` viene restituito come tipo di base di `Object` tipo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-133">In this case, `null` is returned as the base type of the `Object` type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f4f4-134">Ottiene il nome completo del tipo implementato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-134">Gets the fully qualified name of the implemented type.</span></span></summary>
        <value><span data-ttu-id="1f4f4-135">Oggetto <see langword="String" /> che contiene il nome completo del tipo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-135">A <see langword="String" /> containing the type's fully qualified name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-136">Stringa contenente il nome completo dell'oggetto corrente `TypeDelegator`.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-136">A string containing the fully qualified name of the current `TypeDelegator`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeFlagsImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.TypeAttributes GetAttributeFlagsImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Reflection.TypeAttributes GetAttributeFlagsImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetAttributeFlagsImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetAttributeFlagsImpl () As TypeAttributes" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::TypeAttributes GetAttributeFlagsImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f4f4-137">Ottiene gli attributi assegnati all'oggetto <see langword="TypeDelegator" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-137">Gets the attributes assigned to the <see langword="TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-138">Oggetto <see langword="TypeAttributes" /> che rappresenta i flag di attributo dell'implementazione.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-138">A <see langword="TypeAttributes" /> object representing the implementation attribute flags.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-139">Questo metodo può essere utilizzato per determinare se il `TypeDelegator` è astratto, public e così via.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-139">This method can be used to determine if the `TypeDelegator` is abstract, public, and so on.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.TypeAttributes" />
      </Docs>
    </Member>
    <Member MemberName="GetConstructorImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.ConstructorInfo GetConstructorImpl (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.ConstructorInfo GetConstructorImpl(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::ConstructorInfo ^ GetConstructorImpl(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="1f4f4-140">Maschera di bit che influenza le modalità di esecuzione della ricerca.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-140">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="1f4f4-141">Il valore è una combinazione di zero o più flag di bit dall'oggetto <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-141">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <param name="binder"><span data-ttu-id="1f4f4-142">Oggetto che consente l'associazione, la coercizione dei tipi di argomento, la chiamata dei membri e il recupero di oggetti <see langword="MemberInfo" /> tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-142">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects using reflection.</span></span> <span data-ttu-id="1f4f4-143">Se <c>binder</c> è <see langword="null" />, verrà usato il binder predefinito.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-143">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="callConvention"><span data-ttu-id="1f4f4-144">Convenzioni di chiamata.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-144">The calling conventions.</span></span></param>
        <param name="types"><span data-ttu-id="1f4f4-145">Matrice di tipo <see langword="Type" /> contenente un elenco del numero, dell'ordine e dei tipi di parametri.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-145">An array of type <see langword="Type" /> containing a list of the parameter number, order, and types.</span></span> <span data-ttu-id="1f4f4-146">I tipi non possono essere <see langword="null" />; utilizzare un metodo <see langword="GetMethod" /> appropriato o una matrice vuota per cercare un metodo senza parametri.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-146">Types cannot be <see langword="null" />; use an appropriate <see langword="GetMethod" /> method or an empty array to search for a method without parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="1f4f4-147">Matrice di tipo <see langword="ParameterModifier" /> della stessa lunghezza della matrice <c>types</c>, i cui elementi rappresentano gli attributi associati ai parametri del metodo da ottenere.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-147">An array of type <see langword="ParameterModifier" /> having the same length as the <c>types</c> array, whose elements represent the attributes associated with the parameters of the method to get.</span></span></param>
        <summary><span data-ttu-id="1f4f4-148">Ottiene il costruttore che ha implementato l'oggetto <see langword="TypeDelegator" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-148">Gets the constructor that implemented the <see langword="TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-149">Oggetto <see langword="ConstructorInfo" /> per il metodo che corrisponde ai criteri specificati; oppure <see langword="null" /> se non è stata individuata alcuna corrispondenza.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-149">A <see langword="ConstructorInfo" /> object for the method that matches the specified criteria, or <see langword="null" /> if a match cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-150">Il `callConvention` parametro indica la convenzione di chiamata per il punto di ingresso.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-150">The `callConvention` parameter indicates the calling convention for the entry point.</span></span> <span data-ttu-id="1f4f4-151">Se non viene specificata alcuna convenzione di chiamata, valore predefinito è <xref:System.Reflection.CallingConventions> valore `Standard` viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-151">If no calling convention is specified, a default <xref:System.Reflection.CallingConventions> value of `Standard` is used.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.CallingConventions" />
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.Binder" />
      </Docs>
    </Member>
    <Member MemberName="GetConstructors">
      <MemberSignature Language="C#" Value="public override System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ConstructorInfo[] GetConstructors(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetConstructors(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetConstructors (bindingAttr As BindingFlags) As ConstructorInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::ConstructorInfo ^&gt; ^ GetConstructors(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="1f4f4-152">Maschera di bit che influenza le modalità di esecuzione della ricerca.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-152">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="1f4f4-153">Il valore è una combinazione di zero o più flag di bit dall'oggetto <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-153">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="1f4f4-154">Restituisce una matrice di oggetti <see cref="T:System.Reflection.ConstructorInfo" /> che rappresentano costruttori definiti per il tipo di cui è stato eseguito il wrapping nell'oggetto <see cref="T:System.Reflection.TypeDelegator" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-154">Returns an array of <see cref="T:System.Reflection.ConstructorInfo" /> objects representing constructors defined for the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-155">Matrice di tipo <see langword="ConstructorInfo" /> contenente i costruttori specificati definiti per la classe.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-155">An array of type <see langword="ConstructorInfo" /> containing the specified constructors defined for this class.</span></span> <span data-ttu-id="1f4f4-156">Se non è stato definito alcun costruttore, verrà restituita una matrice vuota.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-156">If no constructors are defined, an empty array is returned.</span></span> <span data-ttu-id="1f4f4-157">A seconda del valore di un parametro specificato, saranno restituiti i soli costruttori pubblici o quelli pubblici e non pubblici.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-157">Depending on the value of a specified parameter, only public constructors or both public and non-public constructors will be returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-158">Gli inizializzatori di classe sono disponibili solo tramite `GetMember`, `GetMembers`, `FindMembers`, e `GetConstructors`.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-158">Class initializers are available only through `GetMember`, `GetMembers`, `FindMembers`, and `GetConstructors`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f4f4-159">Restituisce tutti gli attributi personalizzati definiti per questo tipo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-159">Returns all the custom attributes defined for this type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="1f4f4-160">Specifica se effettuare una ricerca nella catena di ereditarietà di questo tipo per trovare gli attributi.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-160">Specifies whether to search this type's inheritance chain to find the attributes.</span></span></param>
        <summary><span data-ttu-id="1f4f4-161">Restituisce tutti gli attributi personalizzati definiti per questo tipo, specificando se ricercare la catena di ereditarietà del tipo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-161">Returns all the custom attributes defined for this type, specifying whether to search the type's inheritance chain.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-162">Matrice di oggetti contenente tutti gli attributi personalizzati definiti per questo tipo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-162">An array of objects containing all the custom attributes defined for this type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="1f4f4-163">Non è possibile caricare un tipo di attributo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-163">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="1f4f4-164">Matrice di attributi personalizzati identificati per tipo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-164">An array of custom attributes identified by type.</span></span></param>
        <param name="inherit"><span data-ttu-id="1f4f4-165">Specifica se effettuare una ricerca nella catena di ereditarietà di questo tipo per trovare gli attributi.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-165">Specifies whether to search this type's inheritance chain to find the attributes.</span></span></param>
        <summary><span data-ttu-id="1f4f4-166">Restituisce una matrice di attributi personalizzati identificati per tipo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-166">Returns an array of custom attributes identified by type.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-167">Matrice di oggetti che contiene gli attributi personalizzati definiti in questo tipo che corrispondono al parametro <paramref name="attributeType" /> e specifica se ricercare la catena di ereditarietà del tipo oppure <see langword="null" /> se non esistono attributi personalizzati definiti su questo tipo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-167">An array of objects containing the custom attributes defined in this type that match the <paramref name="attributeType" /> parameter, specifying whether to search the type's inheritance chain, or <see langword="null" /> if no custom attributes are defined on this type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1f4f4-168"><paramref name="attributeType" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-168"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="1f4f4-169">Non è possibile caricare un tipo di attributo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-169">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetElementType">
      <MemberSignature Language="C#" Value="public override Type GetElementType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetElementType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetElementType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetElementType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetElementType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f4f4-170">Restituisce l'oggetto <see cref="T:System.Type" /> dell'oggetto incluso o a cui fa riferimento la matrice corrente, il puntatore o ByRef.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-170">Returns the <see cref="T:System.Type" /> of the object encompassed or referred to by the current array, pointer or ByRef.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-171">Oggetto <see cref="T:System.Type" /> dell'oggetto incluso o a cui fa riferimento la matrice, il puntatore o <see langword="ByRef" /> oppure <see langword="null" /> se l'oggetto <see cref="T:System.Type" /> corrente non è una matrice, un puntatore o <see langword="ByRef" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-171">The <see cref="T:System.Type" /> of the object encompassed or referred to by the current array, pointer or <see langword="ByRef" />, or <see langword="null" /> if the current <see cref="T:System.Type" /> is not an array, a pointer or a <see langword="ByRef" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo GetEvent(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetEvent(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvent (name As String, bindingAttr As BindingFlags) As EventInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::EventInfo ^ GetEvent(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1f4f4-172">Nome dell'evento da ottenere.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-172">The name of the event to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="1f4f4-173">Maschera di bit che influenza le modalità di esecuzione della ricerca.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-173">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="1f4f4-174">Il valore è una combinazione di zero o più flag di bit dall'oggetto <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-174">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="1f4f4-175">Restituisce l'evento specificato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-175">Returns the specified event.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-176">Oggetto <see cref="T:System.Reflection.EventInfo" /> che rappresenta l'evento dichiarato o ereditato da questo tipo con il nome specificato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-176">An <see cref="T:System.Reflection.EventInfo" /> object representing the event declared or inherited by this type with the specified name.</span></span> <span data-ttu-id="1f4f4-177">Questo metodo restituisce <see langword="null" /> se non viene trovato alcun evento di questo tipo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-177">This method returns <see langword="null" /> if no such event is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-178">Se `bindingAttr` è <xref:System.Reflection.BindingFlags>.`IgnoreCase`, il case del `name` parametro viene ignorato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-178">If `bindingAttr` is <xref:System.Reflection.BindingFlags>.`IgnoreCase`, the case of the `name` parameter is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f4f4-179">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-179">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f4f4-180">Restituisce una matrice di oggetti <see cref="T:System.Reflection.EventInfo" /> che rappresentano tutti gli eventi pubblici dichiarati o ereditati dall'oggetto <see langword="TypeDelegator" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-180">Returns an array of <see cref="T:System.Reflection.EventInfo" /> objects representing all the public events declared or inherited by the current <see langword="TypeDelegator" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo[] GetEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo[] GetEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvents () As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f4f4-181">Restituisce una matrice di oggetti <see cref="T:System.Reflection.EventInfo" /> che rappresentano tutti gli eventi pubblici dichiarati o ereditati dall'oggetto <see langword="TypeDelegator" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-181">Returns an array of <see cref="T:System.Reflection.EventInfo" /> objects representing all the public events declared or inherited by the current <see langword="TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-182">Restituisce una matrice di tipo <see langword="EventInfo" /> contenente tutti gli eventi dichiarati o ereditati dal tipo corrente.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-182">Returns an array of type <see langword="EventInfo" /> containing all the events declared or inherited by the current type.</span></span> <span data-ttu-id="1f4f4-183">Se non sono presenti eventi, viene restituita una matrice vuota.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-183">If there are no events, an empty array is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo[] GetEvents(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetEvents(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvents (bindingAttr As BindingFlags) As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="1f4f4-184">Maschera di bit che influenza le modalità di esecuzione della ricerca.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-184">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="1f4f4-185">Il valore è una combinazione di zero o più flag di bit dall'oggetto <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-185">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="1f4f4-186">Restituisce gli eventi specificati in <paramref name="bindingAttr" /> che sono stati dichiarati o ereditati dall'oggetto <see langword="TypeDelegator" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-186">Returns the events specified in <paramref name="bindingAttr" /> that are declared or inherited by the current <see langword="TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-187">Una matrice di tipo <see langword="EventInfo" /> contenente gli eventi specificati in <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-187">An array of type <see langword="EventInfo" /> containing the events specified in <paramref name="bindingAttr" />.</span></span> <span data-ttu-id="1f4f4-188">Se non sono presenti eventi, viene restituita una matrice vuota.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-188">If there are no events, an empty array is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1f4f4-189">Nome del campo da trovare.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-189">The name of the field to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="1f4f4-190">Maschera di bit che influenza le modalità di esecuzione della ricerca.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-190">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="1f4f4-191">Il valore è una combinazione di zero o più flag di bit dall'oggetto <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-191">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="1f4f4-192">Restituisce un oggetto <see cref="T:System.Reflection.FieldInfo" /> che rappresenta il campo con il nome specificato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-192">Returns a <see cref="T:System.Reflection.FieldInfo" /> object representing the field with the specified name.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-193">Oggetto <see langword="FieldInfo" /> che rappresenta il campo dichiarato o ereditato da questo oggetto <see langword="TypeDelegator" /> con il nome specificato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-193">A <see langword="FieldInfo" /> object representing the field declared or inherited by this <see langword="TypeDelegator" /> with the specified name.</span></span> <span data-ttu-id="1f4f4-194">Restituisce <see langword="null" /> se non viene trovato alcun campo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-194">Returns <see langword="null" /> if no such field is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-195">Utilizzare un `bindingAttr` di <xref:System.Reflection.BindingFlags>. NonPublic per restituire tutti i campi pubblici e non pubblici.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-195">Use a `bindingAttr` of <xref:System.Reflection.BindingFlags>.NonPublic to return all public and nonpublic fields.</span></span> <span data-ttu-id="1f4f4-196">Utilizzare `BindingFlags.IgnoreCase` per ignorare la distinzione tra i campi, come la ricerca non fa distinzione maiuscole/minuscole per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-196">Use `BindingFlags.IgnoreCase` to ignore the case of the fields, as the search is case-sensitive by default.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f4f4-197">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-197">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="1f4f4-198">Maschera di bit che influenza le modalità di esecuzione della ricerca.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-198">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="1f4f4-199">Il valore è una combinazione di zero o più flag di bit dall'oggetto <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-199">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="1f4f4-200">Restituisce una matrice di oggetti <see cref="T:System.Reflection.FieldInfo" /> che rappresentano i campi dati definiti per il tipo di cui è stato eseguito il wrapping nell'oggetto <see cref="T:System.Reflection.TypeDelegator" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-200">Returns an array of <see cref="T:System.Reflection.FieldInfo" /> objects representing the data fields defined for the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-201">Matrice di tipo <see langword="FieldInfo" /> contenente i campi dichiarati o ereditati dall'oggetto <see langword="TypeDelegator" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-201">An array of type <see langword="FieldInfo" /> containing the fields declared or inherited by the current <see langword="TypeDelegator" />.</span></span> <span data-ttu-id="1f4f4-202">Se non sono presenti campi corrispondenti, viene restituita una matrice vuota.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-202">An empty array is returned if there are no matched fields.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-203">Il <xref:System.Reflection.TypeDelegator.GetFields%2A> metodo non restituisce i campi in un ordine specifico, ad esempio in ordine alfabetico o ordine di dichiarazione.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-203">The <xref:System.Reflection.TypeDelegator.GetFields%2A> method does not return fields in a particular order, such as alphabetical or declaration order.</span></span> <span data-ttu-id="1f4f4-204">Il codice non deve dipendere l'ordine in cui vengono restituiti i campi, poiché tale ordine può variare.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-204">Your code must not depend on the order in which fields are returned, because that order can vary.</span></span>  
  
 <span data-ttu-id="1f4f4-205">Utilizzare un `bindingAttr` di <xref:System.Reflection.BindingFlags>. NonPublic per restituire tutti i campi pubblici e non pubblici.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-205">Use a `bindingAttr` of <xref:System.Reflection.BindingFlags>.NonPublic to return all public and nonpublic fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterface">
      <MemberSignature Language="C#" Value="public override Type GetInterface (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetInterface(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetInterface(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterface (name As String, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetInterface(System::String ^ name, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1f4f4-206">Nome completo dell'interfaccia implementata dalla classe corrente.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-206">The fully qualified name of the interface implemented by the current class.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="1f4f4-207"><see langword="true" /> se la distinzione tra maiuscole e minuscole verrà ignorata; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-207"><see langword="true" /> if the case is to be ignored; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1f4f4-208">Restituisce l'interfaccia specificata implementata dal tipo di cui è stato eseguito il wrapping nell'oggetto <see cref="T:System.Reflection.TypeDelegator" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-208">Returns the specified interface implemented by the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-209">Oggetto <see langword="Type" /> che rappresenta l'interfaccia implementata, in modo diretto o indiretto, dalla classe corrente con il nome completo che corrisponde a quello specificato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-209">A <see langword="Type" /> object representing the interface implemented (directly or indirectly) by the current class with the fully qualified name matching the specified name.</span></span> <span data-ttu-id="1f4f4-210">Se non è possibile trovare alcuna interfaccia che corrisponda al nome, viene restituito null.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-210">If no interface that matches name is found, null is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f4f4-211">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-211">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaceMap">
      <MemberSignature Language="C#" Value="public override System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Reflection.InterfaceMapping GetInterfaceMap(class System.Type interfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetInterfaceMap(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterfaceMap (interfaceType As Type) As InterfaceMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::InterfaceMapping GetInterfaceMap(Type ^ interfaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.InterfaceMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="interfaceType"><span data-ttu-id="1f4f4-212">Oggetto <see cref="T:System.Type" /> dell'interfaccia da cui recuperare un mapping.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-212">The <see cref="T:System.Type" /> of the interface to retrieve a mapping of.</span></span></param>
        <summary><span data-ttu-id="1f4f4-213">Restituisce un mapping di interfaccia per il tipo di interfaccia specificato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-213">Returns an interface mapping for the specified interface type.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-214">Oggetto <see cref="T:System.Reflection.InterfaceMapping" /> che rappresenta il mapping di interfaccia per <paramref name="interfaceType" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-214">An <see cref="T:System.Reflection.InterfaceMapping" /> object representing the interface mapping for <paramref name="interfaceType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-215">La mappa dell'interfaccia indica la modalità di mapping di un'interfaccia nei metodi effettivi in una classe che implementa tale interfaccia.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-215">The interface map denotes how an interface is mapped into the actual methods on a class that implements that interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.InterfaceMapping" />
      </Docs>
    </Member>
    <Member MemberName="GetInterfaces">
      <MemberSignature Language="C#" Value="public override Type[] GetInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterfaces () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetInterfaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f4f4-216">Restituisce tutte le interfacce implementate sulla classe corrente e le relative classi base.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-216">Returns all the interfaces implemented on the current class and its base classes.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-217">Matrice di tipo <see langword="Type" /> contenente tutte le interfacce implementate sulla classe corrente e le relative classi base.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-217">An array of type <see langword="Type" /> containing all the interfaces implemented on the current class and its base classes.</span></span> <span data-ttu-id="1f4f4-218">Se non è stata definita alcuna interfaccia, viene restituita una matrice vuota.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-218">If none are defined, an empty array is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.MemberTypes type, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMember (name As String, type As MemberTypes, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::MemberTypes type, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Reflection.MemberTypes" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1f4f4-219">Nome del membro da ottenere.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-219">The name of the member to get.</span></span></param>
        <param name="type"><span data-ttu-id="1f4f4-220">Maschera di bit che influenza le modalità di esecuzione della ricerca.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-220">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="1f4f4-221">Il valore è una combinazione di zero o più flag di bit dall'oggetto <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-221">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="1f4f4-222">Tipo di membri da ottenere.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-222">The type of members to get.</span></span></param>
        <summary><span data-ttu-id="1f4f4-223">Restituisce i membri, ossia proprietà, metodi, costruttori, campi, eventi e tipi annidati, specificati dagli oggetti <paramref name="name" />, <paramref name="type" /> e <paramref name="bindingAttr" /> definiti.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-223">Returns members (properties, methods, constructors, fields, events, and nested types) specified by the given <paramref name="name" />, <paramref name="type" />, and <paramref name="bindingAttr" />.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-224">Matrice di tipo <see langword="MemberInfo" /> contenente tutti i membri della classe corrente e le relative classi base che soddisfano i criteri specificati.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-224">An array of type <see langword="MemberInfo" /> containing all the members of the current class and its base class meeting the specified criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-225">Se `bindingAttr` è <xref:System.Reflection.BindingFlags>. NonPublic, verranno considerati tutti i membri.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-225">If `bindingAttr` is <xref:System.Reflection.BindingFlags>.NonPublic, all the members will be considered.</span></span> <span data-ttu-id="1f4f4-226">Se non sono presenti corrispondenze, viene restituita una matrice vuota.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-226">If there are no matches, an empty array is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f4f4-227">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-227">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="1f4f4-228">Maschera di bit che influenza le modalità di esecuzione della ricerca.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-228">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="1f4f4-229">Il valore è una combinazione di zero o più flag di bit dall'oggetto <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-229">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="1f4f4-230">Restituisce i membri specificati da <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-230">Returns members specified by <paramref name="bindingAttr" />.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-231">Matrice di tipo <see langword="MemberInfo" /> contenente tutti i membri della classe corrente e le relative classi base che soddisfano il filtro <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-231">An array of type <see langword="MemberInfo" /> containing all the members of the current class and its base classes that meet the <paramref name="bindingAttr" /> filter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-232">Se `bindingAttr` è <xref:System.Reflection.BindingFlags>. NonPublic, verranno considerati tutti i membri.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-232">If `bindingAttr` is <xref:System.Reflection.BindingFlags>.NonPublic, all the members will be considered.</span></span> <span data-ttu-id="1f4f4-233">Se non sono presenti corrispondenze, viene restituita una matrice vuota.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-233">If there are no matches, an empty array is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo GetMethodImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ GetMethodImpl(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1f4f4-234">Nome del metodo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-234">The method name.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="1f4f4-235">Maschera di bit che influenza le modalità di esecuzione della ricerca.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-235">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="1f4f4-236">Il valore è una combinazione di zero o più flag di bit dall'oggetto <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-236">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <param name="binder"><span data-ttu-id="1f4f4-237">Oggetto che consente l'associazione, la coercizione dei tipi di argomento, la chiamata dei membri e il recupero di oggetti <see langword="MemberInfo" /> tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-237">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects using reflection.</span></span> <span data-ttu-id="1f4f4-238">Se <c>binder</c> è <see langword="null" />, verrà usato il binder predefinito.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-238">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="callConvention"><span data-ttu-id="1f4f4-239">Convenzioni di chiamata.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-239">The calling conventions.</span></span></param>
        <param name="types"><span data-ttu-id="1f4f4-240">Matrice di tipo <see langword="Type" /> contenente un elenco del numero, dell'ordine e dei tipi di parametri.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-240">An array of type <see langword="Type" /> containing a list of the parameter number, order, and types.</span></span> <span data-ttu-id="1f4f4-241">I tipi non possono essere <see langword="null" />; utilizzare un metodo <see langword="GetMethod" /> appropriato o una matrice vuota per cercare un metodo senza parametri.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-241">Types cannot be <see langword="null" />; use an appropriate <see langword="GetMethod" /> method or an empty array to search for a method without parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="1f4f4-242">Matrice di tipo <see langword="ParameterModifier" /> della stessa lunghezza della matrice <c>types</c>, i cui elementi rappresentano gli attributi associati ai parametri del metodo da ottenere.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-242">An array of type <see langword="ParameterModifier" /> having the same length as the <c>types</c> array, whose elements represent the attributes associated with the parameters of the method to get.</span></span></param>
        <summary><span data-ttu-id="1f4f4-243">Cerca il metodo specificato i cui parametri corrispondono ai tipi di argomenti e ai modificatori specificati, usando i vincoli di associazione e la convenzione di chiamata specificati.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-243">Searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-244">Oggetto <see langword="MethodInfoInfo" /> per il metodo di implementazione che corrisponde ai criteri specificati oppure <see langword="null" /> se non è stata individuata alcuna corrispondenza.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-244">A <see langword="MethodInfoInfo" /> object for the implementation method that matches the specified criteria, or <see langword="null" /> if a match cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-245">Il `callConvention` parametro indica la convenzione di chiamata per il punto di ingresso.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-245">The `callConvention` parameter indicates the calling convention for the entry point.</span></span> <span data-ttu-id="1f4f4-246">Se non <xref:System.Reflection.CallingConventions> è specificato, valore predefinito è `CallingConventions` valore `Standard` viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-246">If no <xref:System.Reflection.CallingConventions> is specified, a default `CallingConventions` value of `Standard` is used.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.CallingConventions" />
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.Binder" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="1f4f4-247">Maschera di bit che influenza le modalità di esecuzione della ricerca.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-247">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="1f4f4-248">Il valore è una combinazione di zero o più flag di bit dall'oggetto <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-248">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="1f4f4-249">Restituisce una matrice di oggetti <see cref="T:System.Reflection.MethodInfo" /> che rappresentano i metodi specificati del tipo di cui è stato eseguito il wrapping nell'oggetto <see cref="T:System.Reflection.TypeDelegator" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-249">Returns an array of <see cref="T:System.Reflection.MethodInfo" /> objects representing specified methods of the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-250">Matrice di oggetti <see langword="MethodInfo" /> che rappresentano i metodi definiti su questo oggetto <see langword="TypeDelegator" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-250">An array of <see langword="MethodInfo" /> objects representing the methods defined on this <see langword="TypeDelegator" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNestedType">
      <MemberSignature Language="C#" Value="public override Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetNestedType(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetNestedType(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNestedType (name As String, bindingAttr As BindingFlags) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetNestedType(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1f4f4-251">Nome del tipo annidato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-251">The nested type's name.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="1f4f4-252">Maschera di bit che influenza le modalità di esecuzione della ricerca.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-252">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="1f4f4-253">Il valore è una combinazione di zero o più flag di bit dall'oggetto <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-253">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="1f4f4-254">Restituisce un tipo annidato specificato da <paramref name="name" /> e in <paramref name="bindingAttr" /> che è stato dichiarato o ereditato dal tipo rappresentato dall'oggetto <see cref="T:System.Reflection.TypeDelegator" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-254">Returns a nested type specified by <paramref name="name" /> and in <paramref name="bindingAttr" /> that are declared or inherited by the type represented by the current <see cref="T:System.Reflection.TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-255">Oggetto <see langword="Type" /> che rappresenta il tipo annidato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-255">A <see langword="Type" /> object representing the nested type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f4f4-256">Il valore del parametro <paramref name="name" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-256">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNestedTypes">
      <MemberSignature Language="C#" Value="public override Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetNestedTypes(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetNestedTypes(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNestedTypes (bindingAttr As BindingFlags) As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetNestedTypes(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="1f4f4-257">Maschera di bit che influenza le modalità di esecuzione della ricerca.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-257">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="1f4f4-258">Il valore è una combinazione di zero o più flag di bit dall'oggetto <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-258">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="1f4f4-259">Restituisce i tipi annidati specificati in <paramref name="bindingAttr" /> che vengono dichiarati o ereditati dal tipo di cui è stato eseguito il wrapping nell'oggetto <see cref="T:System.Reflection.TypeDelegator" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-259">Returns the nested types specified in <paramref name="bindingAttr" /> that are declared or inherited by the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-260">Matrice di tipo <see langword="Type" /> contenente i tipi annidati.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-260">An array of type <see langword="Type" /> containing the nested types.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="1f4f4-261">Maschera di bit che influenza le modalità di esecuzione della ricerca.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-261">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="1f4f4-262">Il valore è una combinazione di zero o più flag di bit dall'oggetto <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-262">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <summary><span data-ttu-id="1f4f4-263">Restituisce una matrice di oggetti <see cref="T:System.Reflection.PropertyInfo" /> che rappresentano le proprietà del tipo di cui è stato eseguito il wrapping nell'oggetto <see cref="T:System.Reflection.TypeDelegator" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-263">Returns an array of <see cref="T:System.Reflection.PropertyInfo" /> objects representing properties of the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-264">Matrice di oggetti <see langword="PropertyInfo" /> che rappresentano le proprietà definite su questo oggetto <see langword="TypeDelegator" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-264">An array of <see langword="PropertyInfo" /> objects representing properties defined on this <see langword="TypeDelegator" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.PropertyInfo GetPropertyImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.PropertyInfo GetPropertyImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::PropertyInfo ^ GetPropertyImpl(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1f4f4-265">Proprietà da ottenere.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-265">The property to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="1f4f4-266">Maschera di bit che influenza le modalità di esecuzione della ricerca.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-266">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="1f4f4-267">Il valore è una combinazione di zero o più flag di bit dall'oggetto <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-267">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <param name="binder"><span data-ttu-id="1f4f4-268">Oggetto che consente il binding, la coercizione dei tipi di argomento, la chiamata dei membri e il recupero di oggetti <see langword="MemberInfo" /> tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-268">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects via reflection.</span></span> <span data-ttu-id="1f4f4-269">Se <c>binder</c> è <see langword="null" />, verrà usato il binder predefinito.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-269">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span> <span data-ttu-id="1f4f4-270">Vedere <see cref="T:System.Reflection.Binder" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-270">See <see cref="T:System.Reflection.Binder" />.</span></span></param>
        <param name="returnType"><span data-ttu-id="1f4f4-271">Tipo restituito della proprietà.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-271">The return type of the property.</span></span></param>
        <param name="types"><span data-ttu-id="1f4f4-272">Elenco di tipi di parametri.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-272">A list of parameter types.</span></span> <span data-ttu-id="1f4f4-273">L'elenco rappresenta il numero, l'ordine e i tipi dei parametri.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-273">The list represents the number, order, and types of the parameters.</span></span> <span data-ttu-id="1f4f4-274">I tipi non possono essere null; utilizzare un metodo <see langword="GetMethod" /> appropriato o una matrice vuota per cercare un metodo senza parametri.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-274">Types cannot be null; use an appropriate <see langword="GetMethod" /> method or an empty array to search for a method without parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="1f4f4-275">Matrice della stessa lunghezza dei tipi con elementi che rappresentano gli attributi associati ai parametri del metodo da ottenere.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-275">An array of the same length as types with elements that represent the attributes associated with the parameters of the method to get.</span></span></param>
        <summary><span data-ttu-id="1f4f4-276">Quando ne viene eseguito l'override in una classe derivata, cerca la proprietà specificata i cui parametri corrispondono ai modificatori e ai tipi di argomenti definiti, usando i vincoli di associazione specificati.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-276">When overridden in a derived class, searches for the specified property whose parameters match the specified argument types and modifiers, using the specified binding constraints.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-277">Oggetto <see cref="T:System.Reflection.PropertyInfo" /> per la proprietà che corrisponde ai criteri specificati oppure null se non è stata individuata alcuna corrispondenza.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-277">A <see cref="T:System.Reflection.PropertyInfo" /> object for the property that matches the specified criteria, or null if a match cannot be found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GUID">
      <MemberSignature Language="C#" Value="public override Guid GUID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid GUID" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.GUID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GUID As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid GUID { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f4f4-278">Ottiene il GUID (Global Unique identifier) del tipo implementato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-278">Gets the GUID (globally unique identifier) of the implemented type.</span></span></summary>
        <value><span data-ttu-id="1f4f4-279">Un valore GUID.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-279">A GUID.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-280">Il GUID (globally unique identifier) è una stringa di identificazione univoco a 128 bit usata per identificare una classe o un'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-280">The GUID (globally unique identifier) is a 128-bit unique identification string used to identify a class or an interface.</span></span> <span data-ttu-id="1f4f4-281">È utile principalmente per l'interoperabilità tra Microsoft .NET Framework e COM.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-281">It is primarily useful for interoperability between the Microsoft .NET Framework and COM.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
    <Member MemberName="HasElementTypeImpl">
      <MemberSignature Language="C#" Value="protected override bool HasElementTypeImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool HasElementTypeImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.HasElementTypeImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HasElementTypeImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool HasElementTypeImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f4f4-282">Ottiene un valore che indica se l'oggetto <see cref="T:System.Type" /> corrente comprende o fa riferimento a un altro tipo, ossia se l'oggetto <see cref="T:System.Type" /> corrente è una matrice, un puntatore o ByRef.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-282">Gets a value indicating whether the current <see cref="T:System.Type" /> encompasses or refers to another type; that is, whether the current <see cref="T:System.Type" /> is an array, a pointer or a ByRef.</span></span></summary>
        <returns>
          <span data-ttu-id="1f4f4-283"><see langword="true" /> se l'oggetto <see cref="T:System.Type" /> è una matrice, un puntatore o ByRef; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-283"><see langword="true" /> if the <see cref="T:System.Type" /> is an array, a pointer or a ByRef; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public override object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1f4f4-284">Nome del membro da richiamare.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-284">The name of the member to invoke.</span></span> <span data-ttu-id="1f4f4-285">Può essere un costruttore, un metodo, una proprietà o un campo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-285">This may be a constructor, method, property, or field.</span></span> <span data-ttu-id="1f4f4-286">Se viene passata un stringa vuota (""), viene richiamato il membro predefinito.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-286">If an empty string ("") is passed, the default member is invoked.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="1f4f4-287">Attributo di chiamata.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-287">The invocation attribute.</span></span> <span data-ttu-id="1f4f4-288">Deve essere uno dei seguenti oggetti <see cref="T:System.Reflection.BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" /> o <see langword="SetProperty" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-288">This must be one of the following <see cref="T:System.Reflection.BindingFlags" /> : <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span></span> <span data-ttu-id="1f4f4-289">È necessario specificare un attributo di chiamata appropriato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-289">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="1f4f4-290">Se verrà richiamato un membro statico, è necessario impostare il flag <see langword="Static" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-290">If a static member is to be invoked, the <see langword="Static" /> flag must be set.</span></span></param>
        <param name="binder"><span data-ttu-id="1f4f4-291">Oggetto che consente il binding, la coercizione dei tipi di argomento, la chiamata dei membri e il recupero di oggetti <see langword="MemberInfo" /> tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-291">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects via reflection.</span></span> <span data-ttu-id="1f4f4-292">Se <c>binder</c> è <see langword="null" />, verrà usato il binder predefinito.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-292">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span> <span data-ttu-id="1f4f4-293">Vedere <see cref="T:System.Reflection.Binder" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-293">See <see cref="T:System.Reflection.Binder" />.</span></span></param>
        <param name="target"><span data-ttu-id="1f4f4-294">Oggetto su cui richiamare il membro specificato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-294">The object on which to invoke the specified member.</span></span></param>
        <param name="args"><span data-ttu-id="1f4f4-295">Matrice di tipo <see langword="Object" /> che contiene il numero, l'ordine e il tipo dei parametri del membro da richiamare.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-295">An array of type <see langword="Object" /> that contains the number, order, and type of the parameters of the member to be invoked.</span></span> <span data-ttu-id="1f4f4-296">Se <c>args</c> contiene un oggetto <see langword="Object" /> non inizializzato, viene gestito come vuoto; con il binder predefinito può essere ampliato a 0, 0,0 o a una stringa.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-296">If <c>args</c> contains an uninitialized <see langword="Object" />, it is treated as empty, which, with the default binder, can be widened to 0, 0.0 or a string.</span></span></param>
        <param name="modifiers"><span data-ttu-id="1f4f4-297">Matrice di tipo <see langword="ParameterModifer" /> della stessa lunghezza di <c>args</c>, con elementi che rappresentano gli attributi associati agli argomenti del membro da richiamare.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-297">An array of type <see langword="ParameterModifer" /> that is the same length as <c>args</c>, with elements that represent the attributes associated with the arguments of the member to be invoked.</span></span> <span data-ttu-id="1f4f4-298">Nella firma del membro sono contenuti gli attributi associati a un parametro.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-298">A parameter has attributes associated with it in the member's signature.</span></span> <span data-ttu-id="1f4f4-299">Per ByRef, utilizzare <see langword="ParameterModifer.ByRef" />; per none, utilizzare <see langword="ParameterModifer.None" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-299">For ByRef, use <see langword="ParameterModifer.ByRef" />, and for none, use <see langword="ParameterModifer.None" />.</span></span> <span data-ttu-id="1f4f4-300">Il gestore di associazione predefinito esegue una corrispondenza esatta su questi elementi.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-300">The default binder does exact matching on these.</span></span> <span data-ttu-id="1f4f4-301">Attributi come <see langword="In" /> e <see langword="InOut" /> non sono utilizzati nell'associazione e possono essere visualizzati utilizzando <see langword="ParameterInfo" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-301">Attributes such as <see langword="In" /> and <see langword="InOut" /> are not used in binding, and can be viewed using <see langword="ParameterInfo" />.</span></span></param>
        <param name="culture"><span data-ttu-id="1f4f4-302">Istanza di <see langword="CultureInfo" /> usata per regolare la coercizione dei tipi.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-302">An instance of <see langword="CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="1f4f4-303">È un'istanza necessaria, ad esempio, per convertire una stringa che rappresenta il numero 1000 in un valore <see langword="Double" />, dal momento che questo numero è rappresentato in modo diverso nelle varie impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-303">This is necessary, for example, to convert a string that represents 1000 to a <see langword="Double" /> value, since 1000 is represented differently by different cultures.</span></span> <span data-ttu-id="1f4f4-304">Se <c>culture</c> è <see langword="null" />, verrà usato <see langword="CultureInfo" /> per l'oggetto <see langword="CultureInfo" /> del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-304">If <c>culture</c> is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread's <see langword="CultureInfo" /> is used.</span></span></param>
        <param name="namedParameters"><span data-ttu-id="1f4f4-305">Matrice di tipo <see langword="String" /> che contiene i nomi dei parametri corrispondenti, a partire dall'elemento zero, alla matrice <c>args</c>.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-305">An array of type <see langword="String" /> containing parameter names that match up, starting at element zero, with the <c>args</c> array.</span></span> <span data-ttu-id="1f4f4-306">La matrice non deve contenere spazi.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-306">There must be no holes in the array.</span></span> <span data-ttu-id="1f4f4-307">Se <c>args</c>.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-307">If <c>args</c>.</span></span> <span data-ttu-id="1f4f4-308"><see langword="Length" /> è maggiore di <c>namedParameters</c>.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-308"><see langword="Length" /> is greater than <c>namedParameters</c>.</span></span> <span data-ttu-id="1f4f4-309"><see langword="Length" />, i parametri rimanenti verranno compilati in ordine.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-309"><see langword="Length" />, the remaining parameters are filled in order.</span></span></param>
        <summary><span data-ttu-id="1f4f4-310">Richiama il membro specificato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-310">Invokes the specified member.</span></span> <span data-ttu-id="1f4f4-311">Il metodo da richiamare deve essere accessibile e fornire massima corrispondenza con l'elenco di argomenti specificato, in conformità ai vincoli del binder e degli attributi di chiamata specificati.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-311">The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</span></span></summary>
        <returns><span data-ttu-id="1f4f4-312">Oggetto <see langword="Object" /> che rappresenta il valore restituito del membro richiamato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-312">An <see langword="Object" /> representing the return value of the invoked member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-313">Verrà richiamato un metodo se entrambe le seguenti condizioni sono vere:</span><span class="sxs-lookup"><span data-stu-id="1f4f4-313">A method will be invoked if both the following conditions are true:</span></span>  
  
-   <span data-ttu-id="1f4f4-314">Il numero di parametri della dichiarazione del metodo è uguale al numero di argomenti nell'elenco di argomenti specificato (a meno che gli argomenti predefiniti vengono definiti sul membro).</span><span class="sxs-lookup"><span data-stu-id="1f4f4-314">The number of parameters in the method declaration equals the number of arguments in the specified argument list (unless default arguments are defined on the member).</span></span>  
  
-   <span data-ttu-id="1f4f4-315">Il tipo di ogni argomento può essere convertito dal gestore di associazione per il tipo del parametro.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-315">The type of each arguments can be converted by the binder to the type of the parameter.</span></span>  
  
 <span data-ttu-id="1f4f4-316">Lo strumento di associazione troverà tutti i metodi di corrispondenza.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-316">The binder will find all the matching methods.</span></span> <span data-ttu-id="1f4f4-317">Questi metodi vengono rilevati in base al tipo di associazione richiesta (`BindingFlags.MethodInvoke`, `BindingFlags.GetProperties`e così via).</span><span class="sxs-lookup"><span data-stu-id="1f4f4-317">These methods are found based upon the type of binding requested (`BindingFlags.MethodInvoke`, `BindingFlags.GetProperties`, and so on).</span></span> <span data-ttu-id="1f4f4-318">Il set di metodi verrà filtrato per il nome, numero di argomenti e un set di modificatori di ricerca definiti nel gestore di associazione.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-318">The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</span></span>  
  
 <span data-ttu-id="1f4f4-319">Dopo aver selezionato il metodo, verrà richiamato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-319">After the method is selected, it will be invoked.</span></span> <span data-ttu-id="1f4f4-320">A questo punto viene controllato l'accesso facilitato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-320">Accessibility is checked at that point.</span></span> <span data-ttu-id="1f4f4-321">È possibile specificare quale set di metodi vengono ricercati in base all'attributo di accessibilità associato al metodo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-321">The search may control which set of methods are searched based upon the accessibility attribute associated with the method.</span></span> <span data-ttu-id="1f4f4-322">Il <xref:System.Reflection.Binder.BindToMethod%2A?displayProperty=nameWithType> metodo è responsabile della selezione del metodo da richiamare.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-322">The <xref:System.Reflection.Binder.BindToMethod%2A?displayProperty=nameWithType> method is responsible for selecting the method to be invoked.</span></span> <span data-ttu-id="1f4f4-323">Il binder predefinito consente di selezionare la corrispondenza più specifica.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-323">The default binder selects the most specific match.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f4f4-324">Le restrizioni di accesso vengono ignorate per il codice completamente attendibile.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-324">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="1f4f4-325">Vale a dire, proprietà, metodi, campi e costruttori privati accessibili e richiamato tramite reflection, ogni volta che il codice è completamente attendibile.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-325">That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.</span></span>  
  
 <span data-ttu-id="1f4f4-326">Attualmente, `InvokeMember` esegue la semantica di reflection di Microsoft .NET Framework per ogni tipo di oggetto.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-326">Currently, `InvokeMember` performs the Microsoft .NET Framework reflection semantics for every type of object.</span></span>  
  
 <span data-ttu-id="1f4f4-327">Se il membro specificato in base al nome è una matrice e `BindingFlags.GetField` flag è impostato su `invokeAttr`, `args` matrice specifica gli elementi i cui valori devono essere restituiti.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-327">If the member specified by name is an array and the `BindingFlags.GetField` flag is set on `invokeAttr`, the `args` array specifies the elements whose values are to be returned.</span></span> <span data-ttu-id="1f4f4-328">Ad esempio, la seguente chiamata tramite `Type` oggetto `t` restituisce il valore del primo elemento della matrice di stringhe MyArray, ovvero un membro dell'oggetto chiamante:</span><span class="sxs-lookup"><span data-stu-id="1f4f4-328">For example, the following call through `Type` object `t` returns the value of the first element of the string array MyArray, which is a member of the calling object:</span></span>  
  
 `String ret = (String) t.InvokeMember ("MyArray", BindingFlags.GetField, null, this, new Variant[]{0});`  
  
 <span data-ttu-id="1f4f4-329">È possibile utilizzare `InvokeMember` per impostare uno o più elementi di una matrice di membri.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-329">You can use `InvokeMember` to set one or more elements of a member array.</span></span> <span data-ttu-id="1f4f4-330">Tutti gli elementi sono impostati sullo stesso valore.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-330">All elements are set to the same value.</span></span> <span data-ttu-id="1f4f4-331">Il `args` matrice deve essere formattata come segue:</span><span class="sxs-lookup"><span data-stu-id="1f4f4-331">The `args` array must be formatted as follows:</span></span>  
  
```  
{index1,  
    index2,, value}  
```  
  
 <span data-ttu-id="1f4f4-332">Ad esempio, per impostare il primo membro MyArray dell'esempio precedente, la sintassi è la seguente:</span><span class="sxs-lookup"><span data-stu-id="1f4f4-332">For example, to set the first member of MyArray from the previous example, the syntax is as follows:</span></span>  
  
```csharp  
t.InvokeMember ("MyArray", BindingFlags.SetField, null, this, new  
    Variant[]{0,"Updated"});  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsArrayImpl">
      <MemberSignature Language="C#" Value="protected override bool IsArrayImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsArrayImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsArrayImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsArrayImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsArrayImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f4f4-333">Restituisce un valore che indica se l'oggetto <see cref="T:System.Type" /> è una matrice.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-333">Returns a value that indicates whether the <see cref="T:System.Type" /> is an array.</span></span></summary>
        <returns>
          <span data-ttu-id="1f4f4-334"><see langword="true" /> se <see cref="T:System.Type" /> è una matrice. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-334"><see langword="true" /> if the <see cref="T:System.Type" /> is an array; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssignableFrom">
      <MemberSignature Language="C#" Value="public override bool IsAssignableFrom (System.Reflection.TypeInfo typeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAssignableFrom(class System.Reflection.TypeInfo typeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsAssignableFrom(System.Reflection.TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsAssignableFrom(System::Reflection::TypeInfo ^ typeInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Reflection.TypeInfo" />
      </Parameters>
      <Docs>
        <param name="typeInfo"><span data-ttu-id="1f4f4-335">Tipo da controllare.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-335">The type to check.</span></span></param>
        <summary><span data-ttu-id="1f4f4-336">Restituisce un valore che indica se il tipo specificato può essere assegnato a questo tipo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-336">Returns a value that indicates whether the specified type can be assigned to this type.</span></span></summary>
        <returns>
          <span data-ttu-id="1f4f4-337"><see langword="true" /> se il tipo specificato può essere assegnato a questo tipo; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-337"><see langword="true" /> if the specified type can be assigned to this type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByRefImpl">
      <MemberSignature Language="C#" Value="protected override bool IsByRefImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsByRefImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsByRefImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsByRefImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsByRefImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f4f4-338">Restituisce un valore che indica se l'oggetto <see cref="T:System.Type" /> viene passato per riferimento.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-338">Returns a value that indicates whether the <see cref="T:System.Type" /> is passed by reference.</span></span></summary>
        <returns>
          <span data-ttu-id="1f4f4-339"><see langword="true" /> se <see cref="T:System.Type" /> viene passato per riferimento. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-339"><see langword="true" /> if the <see cref="T:System.Type" /> is passed by reference; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByRefLike">
      <MemberSignature Language="C#" Value="public override bool IsByRefLike { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByRefLike" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsByRefLike" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsByRefLike As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsByRefLike { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCOMObjectImpl">
      <MemberSignature Language="C#" Value="protected override bool IsCOMObjectImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsCOMObjectImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsCOMObjectImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsCOMObjectImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsCOMObjectImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f4f4-340">Restituisce un valore che indica se l'oggetto <see cref="T:System.Type" /> è un oggetto COM.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-340">Returns a value that indicates whether the <see cref="T:System.Type" /> is a COM object.</span></span></summary>
        <returns>
          <span data-ttu-id="1f4f4-341"><see langword="true" /> se <see cref="T:System.Type" /> è un oggetto COM; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-341"><see langword="true" /> if the <see cref="T:System.Type" /> is a COM object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructedGenericType">
      <MemberSignature Language="C#" Value="public override bool IsConstructedGenericType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructedGenericType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsConstructedGenericType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsConstructedGenericType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsConstructedGenericType { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f4f4-342">Ottiene un valore che indica se l'oggetto rappresenta un tipo generico costruito.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-342">Gets a value that indicates whether this object represents a constructed generic type.</span></span></summary>
        <value>
          <span data-ttu-id="1f4f4-343"><see langword="true" /> se questo oggetto rappresenta una definizione di tipo generico; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-343"><see langword="true" /> if this object represents a constructed generic type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="1f4f4-344">Specifica se effettuare una ricerca nella catena di ereditarietà di questo tipo per trovare gli attributi.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-344">Specifies whether to search this type's inheritance chain to find the attributes.</span></span></param>
        <param name="inherit"><span data-ttu-id="1f4f4-345">Matrice di attributi personalizzati identificati per tipo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-345">An array of custom attributes identified by type.</span></span></param>
        <summary><span data-ttu-id="1f4f4-346">Indica se viene definito un attributo personalizzato identificato dall'oggetto <paramref name="attributeType" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-346">Indicates whether a custom attribute identified by <paramref name="attributeType" /> is defined.</span></span></summary>
        <returns>
          <span data-ttu-id="1f4f4-347"><see langword="true" /> se viene definito un attributo personalizzato identificato dall'oggetto <paramref name="attributeType" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-347"><see langword="true" /> if a custom attribute identified by <paramref name="attributeType" /> is defined; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1f4f4-348"><paramref name="attributeType" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-348"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException"><span data-ttu-id="1f4f4-349">Il tipo di attributo personalizzato non può essere caricato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-349">The custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsGenericMethodParameter">
      <MemberSignature Language="C#" Value="public override bool IsGenericMethodParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericMethodParameter" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsGenericMethodParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsGenericMethodParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGenericMethodParameter { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGenericTypeParameter">
      <MemberSignature Language="C#" Value="public override bool IsGenericTypeParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericTypeParameter" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsGenericTypeParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsGenericTypeParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGenericTypeParameter { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPointerImpl">
      <MemberSignature Language="C#" Value="protected override bool IsPointerImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsPointerImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsPointerImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsPointerImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsPointerImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f4f4-350">Restituisce un valore che indica se l'oggetto <see cref="T:System.Type" /> è un puntatore.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-350">Returns a value that indicates whether the <see cref="T:System.Type" /> is a pointer.</span></span></summary>
        <returns>
          <span data-ttu-id="1f4f4-351"><see langword="true" /> se <see cref="T:System.Type" /> è un puntatore. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-351"><see langword="true" /> if the <see cref="T:System.Type" /> is a pointer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimitiveImpl">
      <MemberSignature Language="C#" Value="protected override bool IsPrimitiveImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsPrimitiveImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsPrimitiveImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsPrimitiveImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsPrimitiveImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f4f4-352">Restituisce un valore che indica se <see cref="T:System.Type" /> è uno dei tipi primitivi.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-352">Returns a value that indicates whether the <see cref="T:System.Type" /> is one of the primitive types.</span></span></summary>
        <returns>
          <span data-ttu-id="1f4f4-353"><see langword="true" /> se <see cref="T:System.Type" /> è uno dei tipi primitivi. In caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-353"><see langword="true" /> if the <see cref="T:System.Type" /> is one of the primitive types; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSZArray">
      <MemberSignature Language="C#" Value="public override bool IsSZArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSZArray" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsSZArray" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSZArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSZArray { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTypeDefinition">
      <MemberSignature Language="C#" Value="public override bool IsTypeDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTypeDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsTypeDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsTypeDefinition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsTypeDefinition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValueTypeImpl">
      <MemberSignature Language="C#" Value="protected override bool IsValueTypeImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsValueTypeImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsValueTypeImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsValueTypeImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsValueTypeImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f4f4-354">Restituisce un valore che indica se il tipo è un tipo di valore, ovvero non è una classe o un'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-354">Returns a value that indicates whether the type is a value type; that is, not a class or an interface.</span></span></summary>
        <returns>
          <span data-ttu-id="1f4f4-355"><see langword="true" /> se il tipo è un tipo di valore; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-355"><see langword="true" /> if the type is a value type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVariableBoundArray">
      <MemberSignature Language="C#" Value="public override bool IsVariableBoundArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVariableBoundArray" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsVariableBoundArray" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsVariableBoundArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsVariableBoundArray { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataToken">
      <MemberSignature Language="C#" Value="public override int MetadataToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataToken" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.MetadataToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MetadataToken As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MetadataToken { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f4f4-356">Ottiene un valore che identifica questa entità in metadati.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-356">Gets a value that identifies this entity in metadata.</span></span></summary>
        <value><span data-ttu-id="1f4f4-357">Valore che, insieme al modulo, identifica in modo univoco questa entità in metadati.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-357">A value which, in combination with the module, uniquely identifies this entity in metadata.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-358">I token ottenuti tramite questa proprietà possono essere passati per l'API di reflection non gestita.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-358">The tokens obtained using this property can be passed to the unmanaged reflection API.</span></span> <span data-ttu-id="1f4f4-359">Per ulteriori informazioni, vedere [API Reflection non gestita](http://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span><span class="sxs-lookup"><span data-stu-id="1f4f4-359">For more information, see [Unmanaged Reflection API](http://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.Module" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f4f4-360">Ottiene il modulo che contiene il tipo implementato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-360">Gets the module that contains the implemented type.</span></span></summary>
        <value><span data-ttu-id="1f4f4-361">Oggetto <see cref="T:System.Reflection.Module" /> che rappresenta il modulo del tipo implementato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-361">A <see cref="T:System.Reflection.Module" /> object representing the module of the implemented type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-362">Un modulo è un'unità caricabile che può contenere dichiarazioni di tipo e le implementazioni.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-362">A module is a loadable unit that can contain type declarations and implementations.</span></span> <span data-ttu-id="1f4f4-363">Moduli contengono informazioni sufficienti per consentire di common language runtime individuare tutti i bit di implementazione quando viene caricato il modulo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-363">Modules contain enough information to enable the common language runtime to locate all implementation bits when the module is loaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f4f4-364">Ottiene il nome del tipo implementato, senza il percorso.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-364">Gets the name of the implemented type, with the path removed.</span></span></summary>
        <value><span data-ttu-id="1f4f4-365">Oggetto <see langword="String" /> che contiene il nome non completo del tipo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-365">A <see langword="String" /> containing the type's non-qualified name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-366">Stringa contenente il nome dell'oggetto `TypeDelegator` corrente.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-366">A string containing the name of the current `TypeDelegator`.</span></span> <span data-ttu-id="1f4f4-367">Viene restituito solo il nome semplice, non il nome completo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-367">Only the simple name, not the fully qualified name, is returned.</span></span> <span data-ttu-id="1f4f4-368">Per ottenere il nome e il percorso, utilizzare <xref:System.Reflection.TypeDelegator.FullName%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-368">To get the name and the path, use <xref:System.Reflection.TypeDelegator.FullName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public override string Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Namespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f4f4-369">Ottiene lo spazio dei nomi del tipo implementato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-369">Gets the namespace of the implemented type.</span></span></summary>
        <value><span data-ttu-id="1f4f4-370">Oggetto <see langword="String" /> che contiene lo spazio dei nomi del tipo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-370">A <see langword="String" /> containing the type's namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-371">Questa proprietà ottiene una stringa contenente lo spazio dei nomi dell'oggetto corrente `TypeDelegator`.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-371">This property gets a string containing the namespace of the current `TypeDelegator`.</span></span> <span data-ttu-id="1f4f4-372">Ad esempio, se il `TypeDelegator` è <xref:System.Reflection.TypeFilter>, lo spazio dei nomi restituito è <xref:System.Reflection>.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-372">For example, if the `TypeDelegator` is <xref:System.Reflection.TypeFilter>, the returned namespace is <xref:System.Reflection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeHandle">
      <MemberSignature Language="C#" Value="public override RuntimeTypeHandle TypeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeTypeHandle TypeHandle" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.TypeHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeHandle As RuntimeTypeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property RuntimeTypeHandle TypeHandle { RuntimeTypeHandle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeTypeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f4f4-373">Ottiene un handle alla rappresentazione interna dei metadati di un tipo implementato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-373">Gets a handle to the internal metadata representation of an implemented type.</span></span></summary>
        <value><span data-ttu-id="1f4f4-374">Un oggetto <see langword="RuntimeTypeHandle" />.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-374">A <see langword="RuntimeTypeHandle" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f4f4-375">Un handle di tipo è un valore integer univoco associato a ogni tipo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-375">A type handle is a unique integer value associated with each type.</span></span> <span data-ttu-id="1f4f4-376">L'handle è univoco durante la fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-376">The handle is unique during the runtime.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.RuntimeTypeHandle" />
      </Docs>
    </Member>
    <Member MemberName="typeImpl">
      <MemberSignature Language="C#" Value="protected Type typeImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Type typeImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.TypeDelegator.typeImpl" />
      <MemberSignature Language="VB.NET" Value="Protected typeImpl As Type " />
      <MemberSignature Language="C++ CLI" Value="protected: Type ^ typeImpl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f4f4-377">Valore che indica le informazioni sul tipo.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-377">A value indicating type information.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public override Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f4f4-378">Ottiene l'oggetto <see cref="T:System.Type" /> sottostante che rappresenta il tipo implementato.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-378">Gets the underlying <see cref="T:System.Type" /> that represents the implemented type.</span></span></summary>
        <value><span data-ttu-id="1f4f4-379">Tipo sottostante.</span><span class="sxs-lookup"><span data-stu-id="1f4f4-379">The underlying type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>