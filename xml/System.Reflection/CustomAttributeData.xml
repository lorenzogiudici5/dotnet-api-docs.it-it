<Type Name="CustomAttributeData" FullName="System.Reflection.CustomAttributeData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="622ed98c373d4f79a1f52caec483020eec6fb4d3" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39993258" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CustomAttributeData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CustomAttributeData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeData" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomAttributeData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeData" />
  <TypeSignature Language="F#" Value="type CustomAttributeData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce l'accesso ai dati degli attributi personalizzati per gli assembly, i moduli, i tipi, i membri e i parametri che vengono caricati nel contesto ReflectionOnly.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il codice che è in corso l'analisi nel contesto reflection-only non può essere eseguito, pertanto non è sempre possibile esaminare gli attributi personalizzati creando istanze della loro e quindi esaminando le relative proprietà, usando metodi come <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>e così via . Se il codice per il tipo di attributo viene caricato nel contesto reflection-only, non può essere eseguita.  
  
 Il <xref:System.Reflection.CustomAttributeData> classe consente di esaminare gli attributi personalizzati nel contesto reflection-only, fornendo un'astrazione per gli attributi. I membri di questa classe possono essere usati per ottenere gli argomenti posizionali e denominati argomenti dell'attributo. Usare il <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> proprietà da ottenere un elenco delle <xref:System.Reflection.CustomAttributeTypedArgument> strutture che rappresentano gli argomenti posizionali e utilizzano il <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> proprietà da ottenere un elenco di <xref:System.Reflection.CustomAttributeNamedArgument> strutture che rappresentano gli argomenti denominati.  
  
> [!NOTE]
>  Il <xref:System.Reflection.CustomAttributeNamedArgument> struttura fornisce solo le informazioni sulle proprietà dell'attributo utilizzata per ottenere e impostare il valore dell'argomento. Per ottenere il tipo e il valore dell'argomento, usare il <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> proprietà per ottenere un <xref:System.Reflection.CustomAttributeTypedArgument> struttura.  
  
 Quando si dispone di un <xref:System.Reflection.CustomAttributeTypedArgument> struttura per un argomento denominato o posizionale, usare il <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> proprietà da ottenere il tipo e il <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> proprietà da ottenere il valore.  
  
> [!NOTE]
>  Per un argomento di matrice, il <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> proprietà restituisce un oggetto generico <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> di <xref:System.Reflection.CustomAttributeTypedArgument> oggetti. Ogni <xref:System.Reflection.CustomAttributeTypedArgument> oggetto nella raccolta rappresenta l'elemento corrispondente della matrice.  
  
 <xref:System.Reflection.CustomAttributeData> può essere utilizzata nel contesto di esecuzione anche come nel contesto reflection-only. Ad esempio, è possibile evitare il caricamento dell'assembly che contiene il codice per un attributo personalizzato. Usando il <xref:System.Reflection.CustomAttributeData> classe è diversa dall'uso di metodi, ad esempio <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:  
  
-   Le proprietà e metodi di <xref:System.Reflection.CustomAttributeData> solo fornire i valori che sono stati specificati per l'istanza dell'attributo, non la semantica del costruttore. Ad esempio, un argomento di stringa di un attributo può essere convertito internamente in un'altra rappresentazione e restituito in una forma canonica; o una proprietà può avere effetti collaterali quando viene eseguito il codice di attributo effettivo.  
  
-   Le proprietà e metodi di <xref:System.Reflection.CustomAttributeData> non consentono di recuperare gli attributi personalizzati ereditati dalle classi di base.  
  
 Per creare istanze del <xref:System.Reflection.CustomAttributeData> classe, usare il `static` (`Shared` in Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> metodi factory.  
  
   
  
## Examples  
 L'esempio seguente definisce un attributo personalizzato con quattro costruttori e quattro le proprietà. Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori. Le altre due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate. Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.  
  
 L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo. I costruttori diversi vengono usati in questi casi. Quando viene eseguita, l'assembly caricato nel contesto reflection-only e consente di visualizzare informazioni sugli attributi personalizzati che sono state applicate ad esso e al tipo e membri in esso contenuti.  
  
 L'attributo applicato al tipo vengono illustrate le proprietà di matrice, con argomenti posizionali e denominati.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
    <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomAttributeData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomAttributeData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Reflection.CustomAttributeData" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore viene richiamato da classi derivate durante la costruzione di <xref:System.Reflection.CustomAttributeData> oggetti.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede l'attendibilità totale per il chiamante immediato. Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="AttributeType">
      <MemberSignature Language="C#" Value="public Type AttributeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AttributeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.AttributeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AttributeType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeType : Type" Usage="System.Reflection.CustomAttributeData.AttributeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tipo dell'attributo.</summary>
        <value>Tipo di attributo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constructor">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ConstructorInfo Constructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo Constructor" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.Constructor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Constructor As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ConstructorInfo ^ Constructor { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constructor : System.Reflection.ConstructorInfo" Usage="System.Reflection.CustomAttributeData.Constructor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Reflection.ConstructorInfo" /> che rappresenta il costruttore che avrebbe inizializzato l'attributo personalizzato.</summary>
        <value>Oggetto che rappresenta il costruttore che avrebbe inizializzato l'attributo personalizzato rappresentato dall'istanza corrente della classe <see cref="T:System.Reflection.CustomAttributeData" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se un tipo di attributo contiene più costruttori, questa proprietà restituisce solo il costruttore specifico che avrebbe inizializzato l'istanza dell'attributo rappresentato dall'oggetto corrente <xref:System.Reflection.CustomAttributeData> oggetto.  
  
   
  
## Examples  
 L'esempio seguente definisce un attributo personalizzato con quattro costruttori e quattro le proprietà. Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori. Le altre due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate. Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.  
  
 L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo. I costruttori diversi vengono usati in questi casi. Quando viene eseguita, l'assembly caricato nel contesto reflection-only e consente di visualizzare gli attributi personalizzati.  
  
 L'attributo applicato al tipo vengono illustrate le proprietà di matrice, con argomenti posizionali e denominati.  
  
 Il <xref:System.Reflection.CustomAttributeData.Constructor%2A> proprietà viene utilizzata la `ShowAttributeData` metodo che visualizza i dati dell'attributo personalizzato. In questo esempio di codice il <xref:System.Reflection.ConstructorInfo> restituita da questa proprietà viene utilizzata per visualizzare una stringa di testo che descrive il costruttore, dimostrando che la proprietà restituisce il costruttore che inizializzerà l'attributo.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ConstructorArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ ConstructorArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructorArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;" Usage="System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'elenco degli argomenti posizionali specificati per l'istanza dell'attributo rappresentata dall'oggetto <see cref="T:System.Reflection.CustomAttributeData" />.</summary>
        <value>Raccolta di strutture che rappresentano gli argomenti posizionali specificati per l'istanza dell'attributo personalizzato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo ottiene gli argomenti posizionali specificati per l'istanza dell'attributo personalizzato senza eseguire il codice di attributo personalizzato. Di conseguenza, può essere utilizzato nel contesto reflection-only.  
  
 Usare il <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> metodo per ottenere gli argomenti denominati specificati per l'istanza dell'attributo.  
  
   
  
## Examples  
 L'esempio seguente definisce un attributo personalizzato con quattro costruttori e quattro le proprietà. Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori. Le altre due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate. Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.  
  
 L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo. I costruttori diversi vengono usati in questi casi. Quando viene eseguita, l'assembly caricato nel contesto reflection-only e consente di visualizzare gli attributi personalizzati.  
  
 L'attributo applicato al tipo vengono illustrate le proprietà di matrice, con argomenti posizionali e denominati.  
  
 Il <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> proprietà viene utilizzata la `ShowAttributeData` metodo che visualizza i dati dell'attributo personalizzato. In questo esempio di codice, questa proprietà viene utilizzata per visualizzare l'elenco di argomenti passati al costruttore inizializzato l'attributo.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.NamedArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeData.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto da confrontare con questa istanza o <see langword="null" />.</param>
        <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
        <returns>
          <see langword="true" /> se <paramref name="obj" /> è uguale all'istanza corrente; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un elenco di oggetti <see cref="T:System.Reflection.CustomAttributeData" /> che rappresentano i dati sugli attributi applicati alla destinazione.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Assembly target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Assembly target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Assembly) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="target">Assembly di cui recuperare i dati relativi agli attributi personalizzati.</param>
        <summary>Restituisce un elenco di oggetti <see cref="T:System.Reflection.CustomAttributeData" /> che rappresentano i dati relativi agli attributi applicati all'assembly di destinazione.</summary>
        <returns>Elenco di oggetti che rappresentano i dati relativi agli attributi applicati all'assembly di destinazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo offre un'alternativa al <xref:System.Reflection.Assembly.GetCustomAttributes%2A> metodo che può essere utilizzato sempre nel contesto Reflection-only.  
  
   
  
## Examples  
 L'esempio seguente definisce un attributo personalizzato con quattro costruttori e quattro le proprietà. Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori. Le altre due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate. Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.  
  
 L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo. I costruttori diversi vengono usati in questi casi. Quando viene eseguita, l'assembly caricato nel contesto reflection-only e consente di visualizzare gli attributi personalizzati.  
  
 L'attributo applicato al tipo vengono illustrate le proprietà di matrice, con argomenti posizionali e denominati.  
  
 Il <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> metodo viene utilizzato in `Main()` per ottenere gli attributi personalizzati applicati all'assembly. Il valore restituito del metodo viene passato per il `ShowAttributeData` (metodo).  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> è <see langword="null" />.</exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.MemberInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.MemberInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As MemberInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="target">Membro di cui recuperare i dati relativi agli attributi.</param>
        <summary>Restituisce un elenco di oggetti <see cref="T:System.Reflection.CustomAttributeData" /> che rappresentano i dati relativi agli attributi applicati al membro di destinazione.</summary>
        <returns>Elenco di oggetti che rappresentano i dati relativi agli attributi applicati al membro di destinazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo overload del metodo ottiene dati dell'attributo personalizzato per i tipi, i tipi annidati e i membri dei tipi, in quanto il <xref:System.Type> classi e le classi nel <xref:System.Reflection> dello spazio dei nomi che rappresentano i membri dei tipi da cui derivano tutte <xref:System.Reflection.MemberInfo>.  
  
   
  
## Examples  
 L'esempio seguente definisce un attributo personalizzato con quattro costruttori e quattro le proprietà. Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori. Le altre due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate. Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.  
  
 L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo. I costruttori diversi vengono usati in questi casi. Quando viene eseguita, l'assembly caricato nel contesto reflection-only e consente di visualizzare gli attributi personalizzati.  
  
 L'attributo applicato al tipo vengono illustrate le proprietà di matrice, con argomenti posizionali e denominati.  
  
 Il <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> metodo viene utilizzato in `Main()` per ottenere gli attributi personalizzati applicati a un tipo e a un metodo di test (<xref:System.Type> deriva da <xref:System.Reflection.MemberInfo>). Il valore restituito di <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> viene passato per il `ShowAttributeData` (metodo).  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> è <see langword="null" />.</exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Module target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Module target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Module) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="target">Modulo di cui recuperare i dati relativi agli attributi personalizzati.</param>
        <summary>Restituisce un elenco di oggetti <see cref="T:System.Reflection.CustomAttributeData" /> che rappresentano i dati relativi agli attributi applicati al modulo di destinazione.</summary>
        <returns>Elenco di oggetti che rappresentano i dati relativi agli attributi applicati al modulo di destinazione.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.ParameterInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.ParameterInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As ParameterInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="target">Parametro di cui recuperare i dati relativi agli attributi.</param>
        <summary>Restituisce un elenco di oggetti <see cref="T:System.Reflection.CustomAttributeData" /> che rappresentano i dati relativi agli attributi applicati al parametro di destinazione.</summary>
        <returns>Elenco di oggetti che rappresentano i dati relativi agli attributi applicati al parametro di destinazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo offre un'alternativa al <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> metodo che può essere utilizzato sempre nel contesto Reflection-only.  
  
   
  
## Examples  
 L'esempio seguente definisce un attributo personalizzato con quattro costruttori e quattro le proprietà. Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori. Le altre due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate. Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.  
  
 L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo. I costruttori diversi vengono usati in questi casi. Quando viene eseguita, l'assembly caricato nel contesto reflection-only e consente di visualizzare gli attributi personalizzati.  
  
 L'attributo applicato al tipo vengono illustrate le proprietà di matrice, con argomenti posizionali e denominati.  
  
 Il <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> metodo viene utilizzato in `Main()` per recuperare gli attributi personalizzati applicati a un parametro di un metodo di test. Il valore restituito di <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> viene passato per il `ShowAttributeData` (metodo).  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> è <see langword="null" />.</exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeData.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Viene usato come funzione hash per un tipo specifico.</summary>
        <returns>Codice hash per l'oggetto <see cref="T:System.Object" /> corrente.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="NamedArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ NamedArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamedArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;" Usage="System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'elenco degli argomenti denominati specificati per l'istanza dell'attributo rappresentata dall'oggetto <see cref="T:System.Reflection.CustomAttributeData" />.</summary>
        <value>Raccolta di strutture che rappresentano gli argomenti denominati specificati per l'istanza dell'attributo personalizzato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo ottiene gli argomenti denominati specificati per l'istanza dell'attributo personalizzato senza eseguire il codice di attributo personalizzato. Di conseguenza, può essere utilizzato nel contesto Reflection-only.  
  
 L'elenco restituito contiene solo gli argomenti denominati specificati per l'istanza dell'attributo.  
  
 Usare il <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> metodo per ottenere gli argomenti posizionali specificati per l'istanza dell'attributo.  
  
   
  
## Examples  
 L'esempio seguente definisce un attributo personalizzato con quattro costruttori e quattro le proprietà. Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori. Le altre due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate. Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.  
  
 L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo. I costruttori diversi vengono usati in questi casi. Quando viene eseguita, l'assembly caricato nel contesto reflection-only e consente di visualizzare gli attributi personalizzati.  
  
 L'attributo applicato al tipo vengono illustrate le proprietà di matrice, con argomenti posizionali e denominati.  
  
 Il <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> proprietà viene utilizzata la `ShowAttributeData` metodo che visualizza i dati dell'attributo personalizzato. In questo esempio di codice, questa proprietà viene utilizzata per visualizzare l'elenco di argomenti denominati specificati per l'attributo.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeData.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una rappresentazione in formato stringa dell'attributo personalizzato.</summary>
        <returns>Valore stringa che rappresenta l'attributo personalizzato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di stringa include il tipo di attributo, i parametri dell'attributo e i parametri denominati.  
  
   
  
## Examples  
 L'esempio seguente definisce un attributo personalizzato con quattro costruttori e quattro le proprietà. Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori. Le altre due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate. Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.  
  
 L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo. I costruttori diversi vengono usati in questi casi. Quando viene eseguita, l'assembly caricato nel contesto reflection-only e consente di visualizzare gli attributi personalizzati.  
  
 L'attributo applicato al tipo vengono illustrate le proprietà di matrice, con argomenti posizionali e denominati.  
  
 In questo esempio, il <xref:System.Reflection.CustomAttributeData.ToString%2A> metodo viene utilizzato nel `ShowAttributeData` (metodo), per identificare l'attributo i cui dati viene visualizzati.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>