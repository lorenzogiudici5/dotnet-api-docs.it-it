<Type Name="CustomAttributeData" FullName="System.Reflection.CustomAttributeData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b81fc715a47a4fd76280f78c4364218e82b0390c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30480155" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CustomAttributeData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CustomAttributeData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeData" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomAttributeData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeData" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b13c9-101">Fornisce l'accesso ai dati degli attributi personalizzati per gli assembly, i moduli, i tipi, i membri e i parametri che vengono caricati nel contesto ReflectionOnly.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b13c9-101">Provides access to custom attribute data for assemblies, modules, types, members and parameters that are loaded into the reflection-only context.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b13c9-102">Impossibile eseguire il codice che viene esaminato nel contesto reflection-only, pertanto non è sempre possibile esaminare gli attributi personalizzati per la creazione di istanze di essi e quindi esaminare le relative proprietà, tramite metodi come <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>e così via .</span><span class="sxs-lookup"><span data-stu-id="b13c9-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="b13c9-103">Se il codice per il tipo di attributo è stato caricato nel contesto reflection-only, non può essere eseguita.</span><span class="sxs-lookup"><span data-stu-id="b13c9-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="b13c9-104">La <xref:System.Reflection.CustomAttributeData> classe consente di esaminare gli attributi personalizzati nel contesto reflection-only, fornendo un'astrazione per gli attributi.</span><span class="sxs-lookup"><span data-stu-id="b13c9-104">The <xref:System.Reflection.CustomAttributeData> class allows examination of custom attributes in the reflection-only context by providing an abstraction for attributes.</span></span> <span data-ttu-id="b13c9-105">I membri di questa classe possono essere utilizzati per ottenere gli argomenti posizionali e denominati argomenti dell'attributo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-105">The members of this class can be used to obtain the positional arguments and named arguments of the attribute.</span></span> <span data-ttu-id="b13c9-106">Utilizzare il <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> proprietà da ottenere un elenco di <xref:System.Reflection.CustomAttributeTypedArgument> strutture che rappresentano gli argomenti posizionali e utilizzano il <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> proprietà da ottenere un elenco di <xref:System.Reflection.CustomAttributeNamedArgument> strutture che rappresentano gli argomenti denominati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-106">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeTypedArgument> structures that represent the positional arguments, and use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeNamedArgument> structures that represent the named arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b13c9-107">Il <xref:System.Reflection.CustomAttributeNamedArgument> struttura fornisce solo informazioni sulla proprietà dell'attributo utilizzata per ottenere e impostare il valore dell'argomento.</span><span class="sxs-lookup"><span data-stu-id="b13c9-107">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only provides information about the attribute property used to get and set the argument value.</span></span> <span data-ttu-id="b13c9-108">Per ottenere il tipo e il valore dell'argomento, utilizzare il <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> proprietà per ottenere un <xref:System.Reflection.CustomAttributeTypedArgument> struttura.</span><span class="sxs-lookup"><span data-stu-id="b13c9-108">To obtain the type and value of the argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="b13c9-109">Quando si dispone di un <xref:System.Reflection.CustomAttributeTypedArgument> struttura per un argomento denominato o posizionale, utilizzare il <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> proprietà per ottenere il tipo e il <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> proprietà per ottenere il valore.</span><span class="sxs-lookup"><span data-stu-id="b13c9-109">When you have a <xref:System.Reflection.CustomAttributeTypedArgument> structure for an argument, whether named or positional, use the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> property to get the type and the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property to get the value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b13c9-110">Per un argomento di matrice, il <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> proprietà restituisce un oggetto generico <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> di <xref:System.Reflection.CustomAttributeTypedArgument> oggetti.</span><span class="sxs-lookup"><span data-stu-id="b13c9-110">For an array argument, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="b13c9-111">Ogni <xref:System.Reflection.CustomAttributeTypedArgument> oggetto nella raccolta rappresenta l'elemento corrispondente della matrice.</span><span class="sxs-lookup"><span data-stu-id="b13c9-111">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="b13c9-112"><xref:System.Reflection.CustomAttributeData> può essere utilizzato nel contesto di esecuzione anche come contesto reflection-only.</span><span class="sxs-lookup"><span data-stu-id="b13c9-112"><xref:System.Reflection.CustomAttributeData> can be used in the execution context as well as in the reflection-only context.</span></span> <span data-ttu-id="b13c9-113">Ad esempio, è necessario evitare il caricamento dell'assembly che contiene il codice per un attributo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="b13c9-113">For example, you might want to avoid loading the assembly that contains the code for a custom attribute.</span></span> <span data-ttu-id="b13c9-114">Utilizzo di <xref:System.Reflection.CustomAttributeData> classe è diversa dall'uso di metodi, ad esempio <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="b13c9-114">Using the <xref:System.Reflection.CustomAttributeData> class is different from using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span></span>  
  
-   <span data-ttu-id="b13c9-115">Le proprietà e metodi di <xref:System.Reflection.CustomAttributeData> forniscono solo con i valori che sono stati specificati per l'istanza dell'attributo, non la semantica del costruttore.</span><span class="sxs-lookup"><span data-stu-id="b13c9-115">The properties and methods of <xref:System.Reflection.CustomAttributeData> only provide you with the values that were specified for the attribute instance, not the semantics of the constructor.</span></span> <span data-ttu-id="b13c9-116">Ad esempio, un argomento di stringa di un attributo può essere convertito internamente in un'altra rappresentazione e restituito in una forma canonica; o una proprietà può avere effetti collaterali quando viene eseguito il codice di attributo effettivo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-116">For example, a string argument of an attribute might be converted internally to some other representation, and returned in a canonical form; or a property might have side effects when the actual attribute code is executed.</span></span>  
  
-   <span data-ttu-id="b13c9-117">Le proprietà e metodi di <xref:System.Reflection.CustomAttributeData> non consentono di recuperare gli attributi personalizzati ereditati dalle classi base.</span><span class="sxs-lookup"><span data-stu-id="b13c9-117">The properties and methods of <xref:System.Reflection.CustomAttributeData> do not allow you to retrieve the custom attributes inherited from base classes.</span></span>  
  
 <span data-ttu-id="b13c9-118">Per creare istanze del <xref:System.Reflection.CustomAttributeData> , utilizzare il `static` (`Shared` in Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> metodi factory.</span><span class="sxs-lookup"><span data-stu-id="b13c9-118">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b13c9-119">L'esempio seguente definisce un attributo personalizzato con quattro costruttori e quattro proprietà.</span><span class="sxs-lookup"><span data-stu-id="b13c9-119">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b13c9-120">Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori.</span><span class="sxs-lookup"><span data-stu-id="b13c9-120">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b13c9-121">Le due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate.</span><span class="sxs-lookup"><span data-stu-id="b13c9-121">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b13c9-122">Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.</span><span class="sxs-lookup"><span data-stu-id="b13c9-122">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b13c9-123">L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-123">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b13c9-124">Costruttori diversi vengono utilizzati in questi casi.</span><span class="sxs-lookup"><span data-stu-id="b13c9-124">Different constructors are used for these cases.</span></span> <span data-ttu-id="b13c9-125">Quando viene eseguita, l'assembly carica nel contesto reflection-only e visualizza le informazioni sugli attributi personalizzati applicati a esso e al tipo e contiene membri.</span><span class="sxs-lookup"><span data-stu-id="b13c9-125">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="b13c9-126">L'attributo applicato al tipo di seguito viene illustrato come proprietà di matrice, con gli argomenti posizionali e denominati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-126">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
    <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomAttributeData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomAttributeData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b13c9-127">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.CustomAttributeData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-127">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b13c9-128">Questo costruttore viene richiamato dalle classi derivate durante la costruzione di <xref:System.Reflection.CustomAttributeData> oggetti.</span><span class="sxs-lookup"><span data-stu-id="b13c9-128">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.CustomAttributeData> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="b13c9-129">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-129">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="b13c9-130">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-130">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AttributeType">
      <MemberSignature Language="C#" Value="public Type AttributeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AttributeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.AttributeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AttributeType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b13c9-131">Ottiene il tipo dell'attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-131">Gets the type of the attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b13c9-132">Tipo di attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-132">The type of the attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constructor">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ConstructorInfo Constructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo Constructor" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.Constructor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Constructor As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ConstructorInfo ^ Constructor { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b13c9-133">Ottiene un oggetto <see cref="T:System.Reflection.ConstructorInfo" /> che rappresenta il costruttore che avrebbe inizializzato l'attributo personalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-133">Gets a <see cref="T:System.Reflection.ConstructorInfo" /> object that represents the constructor that would have initialized the custom attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b13c9-134">Oggetto che rappresenta il costruttore che avrebbe inizializzato l'attributo personalizzato rappresentato dall'istanza corrente della classe <see cref="T:System.Reflection.CustomAttributeData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-134">An object that represents the constructor that would have initialized the custom attribute represented by the current instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b13c9-135">Se un tipo di attributo ha più costruttori, questa proprietà restituisce solo il costruttore specifico che inizializzerà l'istanza dell'attributo rappresentato dall'oggetto corrente <xref:System.Reflection.CustomAttributeData> oggetto.</span><span class="sxs-lookup"><span data-stu-id="b13c9-135">If an attribute type has multiple constructors, this property returns only the particular constructor that would have initialized the attribute instance represented by the current <xref:System.Reflection.CustomAttributeData> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b13c9-136">L'esempio seguente definisce un attributo personalizzato con quattro costruttori e quattro proprietà.</span><span class="sxs-lookup"><span data-stu-id="b13c9-136">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b13c9-137">Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori.</span><span class="sxs-lookup"><span data-stu-id="b13c9-137">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b13c9-138">Le due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate.</span><span class="sxs-lookup"><span data-stu-id="b13c9-138">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b13c9-139">Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.</span><span class="sxs-lookup"><span data-stu-id="b13c9-139">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b13c9-140">L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-140">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b13c9-141">Costruttori diversi vengono utilizzati in questi casi.</span><span class="sxs-lookup"><span data-stu-id="b13c9-141">Different constructors are used for these cases.</span></span> <span data-ttu-id="b13c9-142">Quando viene eseguita, l'assembly carica nel contesto reflection-only e consente di visualizzare gli attributi personalizzati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-142">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b13c9-143">L'attributo applicato al tipo di seguito viene illustrato come proprietà di matrice, con gli argomenti posizionali e denominati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-143">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b13c9-144">Il <xref:System.Reflection.CustomAttributeData.Constructor%2A> proprietà viene utilizzata la `ShowAttributeData` metodo che visualizza i dati dell'attributo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="b13c9-144">The <xref:System.Reflection.CustomAttributeData.Constructor%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="b13c9-145">In questo esempio di codice, il <xref:System.Reflection.ConstructorInfo> restituita da questa proprietà viene utilizzata per visualizzare una stringa di testo che descrive il costruttore, dimostrando che la proprietà restituisce il costruttore che inizializzerà l'attributo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-145">In this code example, the <xref:System.Reflection.ConstructorInfo> returned by this property is used to display a text string that describes the constructor, demonstrating that the property returns the constructor that would initialize the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ConstructorArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ ConstructorArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b13c9-146">Ottiene l'elenco degli argomenti posizionali specificati per l'istanza dell'attributo rappresentata dall'oggetto <see cref="T:System.Reflection.CustomAttributeData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-146">Gets the list of positional arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b13c9-147">Raccolta di strutture che rappresentano gli argomenti posizionali specificati per l'istanza dell'attributo personalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-147">A collection of structures that represent the positional arguments specified for the custom attribute instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b13c9-148">Questo metodo ottiene gli argomenti posizionali specificati per l'istanza dell'attributo personalizzato senza eseguire il codice dell'attributo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="b13c9-148">This method gets the positional arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="b13c9-149">Di conseguenza, può essere utilizzato nel contesto reflection-only.</span><span class="sxs-lookup"><span data-stu-id="b13c9-149">Thus, it can be used in the reflection-only context.</span></span>  
  
 <span data-ttu-id="b13c9-150">Utilizzare il <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> metodo per ottenere gli argomenti denominati specificati per l'istanza dell'attributo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-150">Use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> method to get the named arguments specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b13c9-151">L'esempio seguente definisce un attributo personalizzato con quattro costruttori e quattro proprietà.</span><span class="sxs-lookup"><span data-stu-id="b13c9-151">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b13c9-152">Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori.</span><span class="sxs-lookup"><span data-stu-id="b13c9-152">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b13c9-153">Le due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate.</span><span class="sxs-lookup"><span data-stu-id="b13c9-153">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b13c9-154">Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.</span><span class="sxs-lookup"><span data-stu-id="b13c9-154">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b13c9-155">L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-155">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b13c9-156">Costruttori diversi vengono utilizzati in questi casi.</span><span class="sxs-lookup"><span data-stu-id="b13c9-156">Different constructors are used for these cases.</span></span> <span data-ttu-id="b13c9-157">Quando viene eseguita, l'assembly carica nel contesto reflection-only e consente di visualizzare gli attributi personalizzati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-157">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b13c9-158">L'attributo applicato al tipo di seguito viene illustrato come proprietà di matrice, con gli argomenti posizionali e denominati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-158">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b13c9-159">Il <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> proprietà viene utilizzata la `ShowAttributeData` metodo che visualizza i dati dell'attributo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="b13c9-159">The <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="b13c9-160">In questo esempio di codice, questa proprietà viene utilizzata per visualizzare l'elenco di argomenti passati al costruttore dell'attributo di inizializzazione.</span><span class="sxs-lookup"><span data-stu-id="b13c9-160">In this code example, this property is used to display the list of arguments passed to the constructor that initialized the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.NamedArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="b13c9-161">Oggetto da confrontare con questa istanza o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-161">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b13c9-162">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-162">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b13c9-163">
            <see langword="true" /> se <paramref name="obj" /> è uguale all'istanza corrente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-163">
              <see langword="true" /> if <paramref name="obj" /> is equal to the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b13c9-164">Restituisce un elenco di oggetti <see cref="T:System.Reflection.CustomAttributeData" /> che rappresentano i dati sugli attributi applicati alla destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-164">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Assembly target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Assembly target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Assembly) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b13c9-165">Assembly di cui recuperare i dati relativi agli attributi personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-165">The assembly whose custom attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b13c9-166">Restituisce un elenco di oggetti <see cref="T:System.Reflection.CustomAttributeData" /> che rappresentano i dati relativi agli attributi applicati all'assembly di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-166">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b13c9-167">Elenco di oggetti che rappresentano i dati relativi agli attributi applicati all'assembly di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-167">A list of objects that represent data about the attributes that have been applied to the target assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b13c9-168">Questo metodo offre un'alternativa per il <xref:System.Reflection.Assembly.GetCustomAttributes%2A> metodo che può essere utilizzato sempre nel contesto Reflection-only.</span><span class="sxs-lookup"><span data-stu-id="b13c9-168">This method provides an alternative to the <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b13c9-169">L'esempio seguente definisce un attributo personalizzato con quattro costruttori e quattro proprietà.</span><span class="sxs-lookup"><span data-stu-id="b13c9-169">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b13c9-170">Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori.</span><span class="sxs-lookup"><span data-stu-id="b13c9-170">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b13c9-171">Le due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate.</span><span class="sxs-lookup"><span data-stu-id="b13c9-171">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b13c9-172">Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.</span><span class="sxs-lookup"><span data-stu-id="b13c9-172">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b13c9-173">L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-173">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b13c9-174">Costruttori diversi vengono utilizzati in questi casi.</span><span class="sxs-lookup"><span data-stu-id="b13c9-174">Different constructors are used for these cases.</span></span> <span data-ttu-id="b13c9-175">Quando viene eseguita, l'assembly carica nel contesto reflection-only e consente di visualizzare gli attributi personalizzati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-175">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b13c9-176">L'attributo applicato al tipo di seguito viene illustrato come proprietà di matrice, con gli argomenti posizionali e denominati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-176">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b13c9-177">Il <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> metodo viene utilizzato in `Main()` per ottenere gli attributi personalizzati applicati all'assembly.</span><span class="sxs-lookup"><span data-stu-id="b13c9-177">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes applied to the assembly.</span></span> <span data-ttu-id="b13c9-178">Il valore restituito del metodo viene passato per il `ShowAttributeData` metodo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-178">The return value of the method is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b13c9-179">
            <paramref name="target" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-179">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.MemberInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.MemberInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As MemberInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b13c9-180">Membro di cui recuperare i dati relativi agli attributi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-180">The member whose attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b13c9-181">Restituisce un elenco di oggetti <see cref="T:System.Reflection.CustomAttributeData" /> che rappresentano i dati relativi agli attributi applicati al membro di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-181">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b13c9-182">Elenco di oggetti che rappresentano i dati relativi agli attributi applicati al membro di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-182">A list of objects that represent data about the attributes that have been applied to the target member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b13c9-183">Overload di questo metodo ottiene dati degli attributi personalizzati per i tipi, i tipi annidati e membri di tipo perché il <xref:System.Type> classe e le classi di <xref:System.Reflection> dello spazio dei nomi che rappresentano i membri dei tipi derivano tutte dalla <xref:System.Reflection.MemberInfo>.</span><span class="sxs-lookup"><span data-stu-id="b13c9-183">This method overload gets custom attribute data for types, nested types, and type members, because the <xref:System.Type> class and the classes in the <xref:System.Reflection> namespace that represent type members all derive from <xref:System.Reflection.MemberInfo>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b13c9-184">L'esempio seguente definisce un attributo personalizzato con quattro costruttori e quattro proprietà.</span><span class="sxs-lookup"><span data-stu-id="b13c9-184">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b13c9-185">Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori.</span><span class="sxs-lookup"><span data-stu-id="b13c9-185">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b13c9-186">Le due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate.</span><span class="sxs-lookup"><span data-stu-id="b13c9-186">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b13c9-187">Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.</span><span class="sxs-lookup"><span data-stu-id="b13c9-187">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b13c9-188">L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-188">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b13c9-189">Costruttori diversi vengono utilizzati in questi casi.</span><span class="sxs-lookup"><span data-stu-id="b13c9-189">Different constructors are used for these cases.</span></span> <span data-ttu-id="b13c9-190">Quando viene eseguita, l'assembly carica nel contesto reflection-only e consente di visualizzare gli attributi personalizzati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-190">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b13c9-191">L'attributo applicato al tipo di seguito viene illustrato come proprietà di matrice, con gli argomenti posizionali e denominati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-191">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b13c9-192">Il <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> metodo viene utilizzato in `Main()` per ottenere gli attributi personalizzati applicati a un tipo e a un metodo di test (<xref:System.Type> deriva da <xref:System.Reflection.MemberInfo>).</span><span class="sxs-lookup"><span data-stu-id="b13c9-192">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes that were applied to a type and to a test method (<xref:System.Type> derives from <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="b13c9-193">Il valore restituito di <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> viene passato per il `ShowAttributeData` metodo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-193">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b13c9-194">
            <paramref name="target" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-194">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Module target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Module target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Module) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b13c9-195">Modulo di cui recuperare i dati relativi agli attributi personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-195">The module whose custom attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b13c9-196">Restituisce un elenco di oggetti <see cref="T:System.Reflection.CustomAttributeData" /> che rappresentano i dati relativi agli attributi applicati al modulo di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-196">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b13c9-197">Elenco di oggetti che rappresentano i dati relativi agli attributi applicati al modulo di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-197">A list of objects that represent data about the attributes that have been applied to the target module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b13c9-198">
            <paramref name="target" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-198">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.ParameterInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.ParameterInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As ParameterInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b13c9-199">Parametro di cui recuperare i dati relativi agli attributi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-199">The parameter whose attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b13c9-200">Restituisce un elenco di oggetti <see cref="T:System.Reflection.CustomAttributeData" /> che rappresentano i dati relativi agli attributi applicati al parametro di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-200">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b13c9-201">Elenco di oggetti che rappresentano i dati relativi agli attributi applicati al parametro di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-201">A list of objects that represent data about the attributes that have been applied to the target parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b13c9-202">Questo metodo offre un'alternativa per il <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> metodo che può essere utilizzato sempre nel contesto Reflection-only.</span><span class="sxs-lookup"><span data-stu-id="b13c9-202">This method provides an alternative to the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b13c9-203">L'esempio seguente definisce un attributo personalizzato con quattro costruttori e quattro proprietà.</span><span class="sxs-lookup"><span data-stu-id="b13c9-203">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b13c9-204">Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori.</span><span class="sxs-lookup"><span data-stu-id="b13c9-204">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b13c9-205">Le due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate.</span><span class="sxs-lookup"><span data-stu-id="b13c9-205">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b13c9-206">Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.</span><span class="sxs-lookup"><span data-stu-id="b13c9-206">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b13c9-207">L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-207">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b13c9-208">Costruttori diversi vengono utilizzati in questi casi.</span><span class="sxs-lookup"><span data-stu-id="b13c9-208">Different constructors are used for these cases.</span></span> <span data-ttu-id="b13c9-209">Quando viene eseguita, l'assembly carica nel contesto reflection-only e consente di visualizzare gli attributi personalizzati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-209">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b13c9-210">L'attributo applicato al tipo di seguito viene illustrato come proprietà di matrice, con gli argomenti posizionali e denominati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-210">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b13c9-211">Il <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> metodo viene utilizzato in `Main()` per recuperare gli attributi personalizzati applicati a un parametro di un metodo di test.</span><span class="sxs-lookup"><span data-stu-id="b13c9-211">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to retrieve the custom attributes applied to a parameter of a test method.</span></span> <span data-ttu-id="b13c9-212">Il valore restituito di <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> viene passato per il `ShowAttributeData` metodo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-212">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b13c9-213">
            <paramref name="target" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-213">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b13c9-214">Viene usato come funzione hash per un tipo specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-214">Serves as a hash function for a particular type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b13c9-215">Codice hash per l'oggetto <see cref="T:System.Object" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-215">A hash code for the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="NamedArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ NamedArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b13c9-216">Ottiene l'elenco degli argomenti denominati specificati per l'istanza dell'attributo rappresentata dall'oggetto <see cref="T:System.Reflection.CustomAttributeData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-216">Gets the list of named arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b13c9-217">Raccolta di strutture che rappresentano gli argomenti denominati specificati per l'istanza dell'attributo personalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-217">A collection of structures that represent the named arguments specified for the custom attribute instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b13c9-218">Questo metodo ottiene gli argomenti denominati che sono stati specificati per l'istanza dell'attributo personalizzato senza eseguire il codice dell'attributo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="b13c9-218">This method gets the named arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="b13c9-219">Di conseguenza, può essere utilizzato nel contesto Reflection-only.</span><span class="sxs-lookup"><span data-stu-id="b13c9-219">Thus, it can be used in the Reflection-only context.</span></span>  
  
 <span data-ttu-id="b13c9-220">L'elenco restituito contiene solo gli argomenti denominati che sono stati specificati per l'istanza dell'attributo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-220">The list that is returned contains only the named arguments that were specified for the attribute instance.</span></span>  
  
 <span data-ttu-id="b13c9-221">Utilizzare il <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> metodo per ottenere gli argomenti posizionali che sono stati specificati per l'istanza dell'attributo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-221">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> method to get the positional arguments that were specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b13c9-222">L'esempio seguente definisce un attributo personalizzato con quattro costruttori e quattro proprietà.</span><span class="sxs-lookup"><span data-stu-id="b13c9-222">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b13c9-223">Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori.</span><span class="sxs-lookup"><span data-stu-id="b13c9-223">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b13c9-224">Le due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate.</span><span class="sxs-lookup"><span data-stu-id="b13c9-224">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b13c9-225">Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.</span><span class="sxs-lookup"><span data-stu-id="b13c9-225">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b13c9-226">L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-226">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b13c9-227">Costruttori diversi vengono utilizzati in questi casi.</span><span class="sxs-lookup"><span data-stu-id="b13c9-227">Different constructors are used for these cases.</span></span> <span data-ttu-id="b13c9-228">Quando viene eseguita, l'assembly carica nel contesto reflection-only e consente di visualizzare gli attributi personalizzati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-228">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b13c9-229">L'attributo applicato al tipo di seguito viene illustrato come proprietà di matrice, con gli argomenti posizionali e denominati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-229">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b13c9-230">Il <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> proprietà viene utilizzata la `ShowAttributeData` metodo che visualizza i dati dell'attributo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="b13c9-230">The <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="b13c9-231">In questo esempio di codice, questa proprietà viene utilizzata per visualizzare l'elenco degli argomenti denominati specificati per l'attributo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-231">In this code example, this property is used to display the list of named arguments specified for the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b13c9-232">Restituisce una rappresentazione in formato stringa dell'attributo personalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-232">Returns a string representation of the custom attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b13c9-233">Valore stringa che rappresenta l'attributo personalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13c9-233">A string value that represents the custom attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b13c9-234">La stringa comprende il tipo di attributo, i parametri dell'attributo e i parametri denominati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-234">The string value includes the attribute type, the attribute parameters, and the named parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b13c9-235">L'esempio seguente definisce un attributo personalizzato con quattro costruttori e quattro proprietà.</span><span class="sxs-lookup"><span data-stu-id="b13c9-235">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b13c9-236">Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori.</span><span class="sxs-lookup"><span data-stu-id="b13c9-236">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b13c9-237">Le due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate.</span><span class="sxs-lookup"><span data-stu-id="b13c9-237">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b13c9-238">Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.</span><span class="sxs-lookup"><span data-stu-id="b13c9-238">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b13c9-239">L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo.</span><span class="sxs-lookup"><span data-stu-id="b13c9-239">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b13c9-240">Costruttori diversi vengono utilizzati in questi casi.</span><span class="sxs-lookup"><span data-stu-id="b13c9-240">Different constructors are used for these cases.</span></span> <span data-ttu-id="b13c9-241">Quando viene eseguita, l'assembly carica nel contesto reflection-only e consente di visualizzare gli attributi personalizzati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-241">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b13c9-242">L'attributo applicato al tipo di seguito viene illustrato come proprietà di matrice, con gli argomenti posizionali e denominati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-242">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b13c9-243">In questo esempio, il <xref:System.Reflection.CustomAttributeData.ToString%2A> metodo viene utilizzato il `ShowAttributeData` (metodo), per identificare l'attributo i cui dati vengono visualizzati.</span><span class="sxs-lookup"><span data-stu-id="b13c9-243">In this example, the <xref:System.Reflection.CustomAttributeData.ToString%2A> method is used in the `ShowAttributeData` method, to identify the attribute whose data is being displayed.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>