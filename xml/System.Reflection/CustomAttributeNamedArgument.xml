<Type Name="CustomAttributeNamedArgument" FullName="System.Reflection.CustomAttributeNamedArgument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2125644544d18847b69ed960310b235000a5582e" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48728877" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CustomAttributeNamedArgument" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit CustomAttributeNamedArgument extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeNamedArgument" />
  <TypeSignature Language="VB.NET" Value="Public Structure CustomAttributeNamedArgument" />
  <TypeSignature Language="C++ CLI" Value="public value class CustomAttributeNamedArgument" />
  <TypeSignature Language="F#" Value="type CustomAttributeNamedArgument = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="acfda-101">Rappresenta un argomento denominato di un attributo personalizzato nel contesto ReflectionOnly.</span>
      <span class="sxs-lookup">
        <span data-stu-id="acfda-101">Represents a named argument of a custom attribute in the reflection-only context.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acfda-102">Il codice che è in corso l'analisi nel contesto reflection-only non può essere eseguito, pertanto non è sempre possibile esaminare gli attributi personalizzati creando istanze della loro e quindi esaminando le relative proprietà, usando metodi come <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>e così via .</span><span class="sxs-lookup"><span data-stu-id="acfda-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="acfda-103">Se il codice per il tipo di attributo viene caricato nel contesto reflection-only, non può essere eseguita.</span><span class="sxs-lookup"><span data-stu-id="acfda-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="acfda-104">Il <xref:System.Reflection.CustomAttributeNamedArgument> struttura viene usata dal <xref:System.Reflection.CustomAttributeData> classe per fornire l'accesso a un argomento denominato specificato per un'istanza di attributo personalizzato, pur non eseguendo il codice della proprietà corrispondente del tipo di attributo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="acfda-104">The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to a named argument specified for a custom attribute instance, without executing the code of the corresponding property of the custom attribute type.</span></span> <span data-ttu-id="acfda-105">Il <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> proprietà restituisce un <xref:System.Reflection.CustomAttributeTypedArgument> struttura che contiene il tipo e il valore dell'argomento denominato.</span><span class="sxs-lookup"><span data-stu-id="acfda-105">The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property returns a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value of the named argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="acfda-106">Se un argomento denominato o posizionale, è necessario accedere al tipo e valore usando il <xref:System.Reflection.CustomAttributeTypedArgument> struttura.</span><span class="sxs-lookup"><span data-stu-id="acfda-106">Whether an argument is named or positional, you must access its type and value by using the <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="acfda-107">Per creare istanze del <xref:System.Reflection.CustomAttributeData> classe, usare il `static` <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> metodo factory.</span><span class="sxs-lookup"><span data-stu-id="acfda-107">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acfda-108">L'esempio seguente definisce un attributo personalizzato con quattro costruttori e quattro le proprietà.</span><span class="sxs-lookup"><span data-stu-id="acfda-108">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="acfda-109">Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori.</span><span class="sxs-lookup"><span data-stu-id="acfda-109">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="acfda-110">Le altre due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate.</span><span class="sxs-lookup"><span data-stu-id="acfda-110">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="acfda-111">Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.</span><span class="sxs-lookup"><span data-stu-id="acfda-111">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="acfda-112">L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo.</span><span class="sxs-lookup"><span data-stu-id="acfda-112">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="acfda-113">I costruttori diversi vengono usati in questi casi.</span><span class="sxs-lookup"><span data-stu-id="acfda-113">Different constructors are used for these cases.</span></span> <span data-ttu-id="acfda-114">Quando viene eseguita, l'assembly caricato nel contesto reflection-only e consente di visualizzare informazioni sugli attributi personalizzati che sono state applicate ad esso e al tipo e membri in esso contenuti.</span><span class="sxs-lookup"><span data-stu-id="acfda-114">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="acfda-115">L'attributo applicato al tipo vengono illustrate le proprietà di matrice, con argomenti posizionali e denominati.</span><span class="sxs-lookup"><span data-stu-id="acfda-115">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.CustomAttributeData" />
    <altmember cref="T:System.Reflection.CustomAttributeTypedArgument" />
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="acfda-116">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.CustomAttributeNamedArgument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-116">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeNamedArgument (System.Reflection.MemberInfo memberInfo, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MemberInfo memberInfo, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeNamedArgument(System::Reflection::MemberInfo ^ memberInfo, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeNamedArgument : System.Reflection.MemberInfo * obj -&gt; System.Reflection.CustomAttributeNamedArgument" Usage="new System.Reflection.CustomAttributeNamedArgument (memberInfo, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="memberInfo">
          <span data-ttu-id="acfda-117">Un campo o una proprietà dell'attributo personalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-117">A field or property of the custom attribute.</span>
          </span>
          <span data-ttu-id="acfda-118">Il nuovo oggetto <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> rappresenta questo membro e il suo valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-118">The new <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> object represents this member and its value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="acfda-119">Valore del campo o della proprietà dell'attributo personalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-119">The value of the field or property of the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acfda-120">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> che rappresenta il campo specificato o la proprietà dell'attributo personalizzato e specifica il valore del campo o della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-120">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class, which represents the specified field or property of the custom attribute, and specifies the value of the field or property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acfda-121">Questo costruttore viene utilizzato dagli eredi del <xref:System.Reflection.CustomAttributeNamedArgument> classe.</span><span class="sxs-lookup"><span data-stu-id="acfda-121">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class.</span></span> <span data-ttu-id="acfda-122">Non è destinato per l'uso nel codice dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="acfda-122">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="acfda-123">
            <paramref name="memberInfo" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-123">
              <paramref name="memberInfo" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="acfda-124">
            <paramref name="memberInfo" /> non è un campo o una proprietà dell'attributo personalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-124">
              <paramref name="memberInfo" /> is not a field or property of the custom attribute.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeNamedArgument (System.Reflection.MemberInfo memberInfo, System.Reflection.CustomAttributeTypedArgument typedArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MemberInfo memberInfo, valuetype System.Reflection.CustomAttributeTypedArgument typedArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeNamedArgument(System::Reflection::MemberInfo ^ memberInfo, System::Reflection::CustomAttributeTypedArgument typedArgument);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeNamedArgument : System.Reflection.MemberInfo * System.Reflection.CustomAttributeTypedArgument -&gt; System.Reflection.CustomAttributeNamedArgument" Usage="new System.Reflection.CustomAttributeNamedArgument (memberInfo, typedArgument)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="typedArgument" Type="System.Reflection.CustomAttributeTypedArgument" />
      </Parameters>
      <Docs>
        <param name="memberInfo">
          <span data-ttu-id="acfda-125">Un campo o una proprietà dell'attributo personalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-125">A field or property of the custom attribute.</span>
          </span>
          <span data-ttu-id="acfda-126">Il nuovo oggetto <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> rappresenta questo membro e il suo valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-126">The new <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> object represents this member and its value.</span>
          </span>
        </param>
        <param name="typedArgument">
          <span data-ttu-id="acfda-127">Un oggetto che descrive il tipo e il valore del campo o della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-127">An object that describes the type and value of the field or property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acfda-128">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.CustomAttributeNamedArgument" />, che rappresenta il campo specificato o la proprietà dell'attributo personalizzato e specifica un oggetto <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> che descrive il tipo e valore del campo o della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-128">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class, which represents the specified field or property of the custom attribute, and specifies a <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> object that describes the type and value of the field or property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acfda-129">Questo costruttore viene utilizzato dagli eredi del <xref:System.Reflection.CustomAttributeNamedArgument> classe.</span><span class="sxs-lookup"><span data-stu-id="acfda-129">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class.</span></span> <span data-ttu-id="acfda-130">Non è destinato per l'uso nel codice dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="acfda-130">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="acfda-131">
            <paramref name="memberInfo" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-131">
              <paramref name="memberInfo" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeNamedArgument.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="acfda-132">Oggetto da confrontare con questa istanza o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-132">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acfda-133">Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-133">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acfda-134">
            <see langword="true" /> se <paramref name="obj" /> è uguale al tipo e al valore di questa istanza; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-134">
              <see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeNamedArgument.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="acfda-135">Restituisce il codice hash per l'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-135">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acfda-136">Codice hash di un intero con segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-136">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsField">
      <MemberSignature Language="C#" Value="public bool IsField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsField" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.IsField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsField As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsField { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsField : bool" Usage="System.Reflection.CustomAttributeNamedArgument.IsField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acfda-137">Ottiene un valore che indica se l'argomento denominato è un campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-137">Gets a value that indicates whether the named argument is a field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acfda-138">
            <see langword="true" /> se l'argomento denominato è un campo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-138">
              <see langword="true" /> if the named argument is a field; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo MemberInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo MemberInfo" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.MemberInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberInfo As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ MemberInfo { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberInfo : System.Reflection.MemberInfo" Usage="System.Reflection.CustomAttributeNamedArgument.MemberInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acfda-139">Ottiene il membro dell'attributo che verrà utilizzato per impostare l'argomento denominato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-139">Gets the attribute member that would be used to set the named argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acfda-140">Membro dell'attributo che verrà utilizzato per impostare l'argomento denominato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-140">The attribute member that would be used to set the named argument.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acfda-141">Nella maggior parte dei casi, il membro è una proprietà.</span><span class="sxs-lookup"><span data-stu-id="acfda-141">In most cases, the member is a property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public string MemberName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.MemberName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MemberName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberName : string" Usage="System.Reflection.CustomAttributeNamedArgument.MemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acfda-142">Ottiene il nome dell'attributo che verrà utilizzato per impostare l'argomento denominato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-142">Gets the name of the attribute member that would be used to set the named argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acfda-143">Nome del membro dell'attributo che verrà utilizzato per impostare l'argomento denominato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-143">The name of the attribute member that would be used to set the named argument.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.CustomAttributeNamedArgument left, System.Reflection.CustomAttributeNamedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.CustomAttributeNamedArgument left, valuetype System.Reflection.CustomAttributeNamedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CustomAttributeNamedArgument, right As CustomAttributeNamedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::CustomAttributeNamedArgument left, System::Reflection::CustomAttributeNamedArgument right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.CustomAttributeNamedArgument * System.Reflection.CustomAttributeNamedArgument -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeNamedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeNamedArgument" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="acfda-144">Struttura a sinistra dell'operatore di uguaglianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-144">The structure to the left of the equality operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="acfda-145">Struttura a destra dell'operatore di uguaglianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-145">The structure to the right of the equality operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acfda-146">Verifica se due strutture <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> sono equivalenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-146">Tests whether two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acfda-147">
            <see langword="true" /> se le due strutture <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-147">
              <see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="acfda-148">Il metodo equivalente per l'operatore è <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="acfda-148">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.CustomAttributeNamedArgument left, System.Reflection.CustomAttributeNamedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.CustomAttributeNamedArgument left, valuetype System.Reflection.CustomAttributeNamedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CustomAttributeNamedArgument, right As CustomAttributeNamedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::CustomAttributeNamedArgument left, System::Reflection::CustomAttributeNamedArgument right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.CustomAttributeNamedArgument * System.Reflection.CustomAttributeNamedArgument -&gt; bool" Usage="System.Reflection.CustomAttributeNamedArgument.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeNamedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeNamedArgument" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="acfda-149">Struttura a sinistra dell'operatore di disuguaglianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-149">The structure to the left of the inequality operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="acfda-150">Struttura a destra dell'operatore di disuguaglianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-150">The structure to the right of the inequality operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acfda-151">Verifica se due strutture <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> sono diverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-151">Tests whether two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are different.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acfda-152">
            <see langword="true" /> se le due strutture <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> sono diverse; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-152">
              <see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are different; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="acfda-153">Il metodo equivalente per l'operatore è <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="acfda-153">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeNamedArgument.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="acfda-154">Restituisce una stringa composta dal nome dell'argomento, il segno di uguale e una rappresentazione di stringa del valore dell'argomento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-154">Returns a string that consists of the argument name, the equal sign, and a string representation of the argument value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acfda-155">Stringa composta dal nome dell'argomento, il segno di uguale e una rappresentazione di stringa del valore dell'argomento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-155">A string that consists of the argument name, the equal sign, and a string representation of the argument value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypedValue">
      <MemberSignature Language="C#" Value="public System.Reflection.CustomAttributeTypedArgument TypedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.CustomAttributeTypedArgument TypedValue" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.TypedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypedValue As CustomAttributeTypedArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::CustomAttributeTypedArgument TypedValue { System::Reflection::CustomAttributeTypedArgument get(); };" />
      <MemberSignature Language="F#" Value="member this.TypedValue : System.Reflection.CustomAttributeTypedArgument" Usage="System.Reflection.CustomAttributeNamedArgument.TypedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CustomAttributeTypedArgument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acfda-156">Ottiene una struttura <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> che può essere utilizzata per ottenere il tipo e il valore dell'argomento denominato corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-156">Gets a <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure that can be used to obtain the type and value of the current named argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acfda-157">Struttura che può essere utilizzata per ottenere il tipo e il valore dell'argomento denominato corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfda-157">A structure that can be used to obtain the type and value of the current named argument.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acfda-158">Il <xref:System.Reflection.CustomAttributeNamedArgument> struttura contiene solo informazioni sul modo in cui è stato impostato il valore dell'argomento.</span><span class="sxs-lookup"><span data-stu-id="acfda-158">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only contains information about how the argument value was set.</span></span> <span data-ttu-id="acfda-159">Utilizzare questa proprietà per ottenere un <xref:System.Reflection.CustomAttributeTypedArgument> struttura che contiene il tipo e il valore.</span><span class="sxs-lookup"><span data-stu-id="acfda-159">Use this property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acfda-160">Esempio di codice seguente definisce un attributo personalizzato con quattro costruttori e quattro le proprietà.</span><span class="sxs-lookup"><span data-stu-id="acfda-160">The following code example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="acfda-161">Due delle proprietà sono di sola lettura e vengono impostate utilizzando i parametri posizionali dei costruttori.</span><span class="sxs-lookup"><span data-stu-id="acfda-161">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="acfda-162">Le altre due proprietà sono di lettura/scrittura e possono essere impostate solo utilizzando argomenti denominate.</span><span class="sxs-lookup"><span data-stu-id="acfda-162">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="acfda-163">Una proprietà posizionale è una matrice di stringhe e una proprietà denominata è una matrice di interi.</span><span class="sxs-lookup"><span data-stu-id="acfda-163">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="acfda-164">L'attributo è applicato all'assembly, a un tipo dichiarato nell'assembly, a un metodo del tipo e a un parametro del metodo.</span><span class="sxs-lookup"><span data-stu-id="acfda-164">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="acfda-165">I costruttori diversi vengono usati in questi casi.</span><span class="sxs-lookup"><span data-stu-id="acfda-165">Different constructors are used for these cases.</span></span> <span data-ttu-id="acfda-166">Quando viene eseguita, l'assembly caricato nel contesto reflection-only e consente di visualizzare gli attributi personalizzati.</span><span class="sxs-lookup"><span data-stu-id="acfda-166">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="acfda-167">L'attributo applicato al tipo vengono illustrate le proprietà di matrice, con argomenti posizionali e denominati.</span><span class="sxs-lookup"><span data-stu-id="acfda-167">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="acfda-168">Il <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> proprietà viene utilizzata nel `ShowAttributeData` metodo che visualizza i dati per ottenere i tipi e i valori di attributo personalizzato denominato di attributi.</span><span class="sxs-lookup"><span data-stu-id="acfda-168">The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property is used in the `ShowAttributeData` method that displays custom attribute data, to obtain the types and values of named attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.CustomAttributeData" />
        <altmember cref="T:System.Reflection.CustomAttributeTypedArgument" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
  </Members>
</Type>