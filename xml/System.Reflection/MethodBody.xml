<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MethodBody.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54e22a412d8fff91a7c65aaaab079f7f7bbfbbed6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e22a412d8fff91a7c65aaaab079f7f7bbfbbed6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.MethodBody">
          <source>Provides access to the metadata and MSIL for the body of a method.</source>
          <target state="translated">Fornisce l'accesso ai metadati e al linguaggio MSIL (Microsoft Intermediate Language) relativi al corpo di un metodo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class provides access to information about the local variables and exception-handling clauses in a method body, and to the Microsoft intermediate language (MSIL) that makes up the method body.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> classe fornisce accesso alle informazioni sulle variabili locali e clausole di gestione delle eccezioni nel corpo di un metodo e in Microsoft intermediate language (MSIL) che costituisce il corpo del metodo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>You can use the token-resolution methods of the module class, such as <ph id="ph1">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.Module.ResolveMethod%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>, to resolve the tokens in the method body to <ph id="ph4">&lt;xref:System.Type&gt;</ph> objects, <ph id="ph5">&lt;xref:System.Reflection.MethodInfo&gt;</ph> objects, and <ph id="ph6">&lt;xref:System.Reflection.FieldInfo&gt;</ph> objects that provide detailed information about the types, methods, and fields accessed by the MSIL in the method body.</source>
          <target state="translated">È possibile utilizzare i metodi di risoluzione dei token della classe, modulo, ad esempio <ph id="ph1">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.Module.ResolveMethod%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>, per risolvere il token nel corpo del metodo <ph id="ph4">&lt;xref:System.Type&gt;</ph> oggetti, <ph id="ph5">&lt;xref:System.Reflection.MethodInfo&gt;</ph> oggetti, e <ph id="ph6">&lt;xref:System.Reflection.FieldInfo&gt;</ph> oggetti che forniscono informazioni dettagliate sui tipi, metodi e campi a cui accede il linguaggio MSIL nel corpo del metodo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>Parsing method bodies requires a thorough understanding of metadata and MSIL instruction formats.</source>
          <target state="translated">L'analisi di corpi di metodo richiede una conoscenza approfondita dei metadati e i formati di istruzioni MSIL.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">Informazioni disponibili nella documentazione di Common Language Infrastructure (CLI), in particolare "Partition II: metadati definizione e la semantica" e "Partizione III: CIL Instruction Set".</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">La documentazione è disponibile online; vedere <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> (ECMA C# e standard di Common Language Infrastructure) in MSDN e <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> nel sito Web internazionale Ecma.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>To obtain a <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for a given method, first obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodInfo&gt;</ph> object for the method, then call the <ph id="ph3">&lt;xref:System.Reflection.MethodInfo&gt;</ph> object's <ph id="ph4">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A&gt;</ph> method.</source>
          <target state="translated">Per ottenere un <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> per un determinato metodo di oggetto, prima di tutto ottenere un <ph id="ph2">&lt;xref:System.Reflection.MethodInfo&gt;</ph> oggetto per il metodo, chiamare il <ph id="ph3">&lt;xref:System.Reflection.MethodInfo&gt;</ph> dell'oggetto <ph id="ph4">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The following code example defines a test method named <ph id="ph1">`MethodBodyExample`</ph> and displays its local variable information and exception-handling clauses.</source>
          <target state="translated">Esempio di codice seguente definisce un metodo di test denominato <ph id="ph1">`MethodBodyExample`</ph> e vengono visualizzate le informazioni sulle variabili locali e clausole di gestione delle eccezioni.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> metodo viene utilizzato per ottenere un <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> oggetto per il metodo di test.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph> property to obtain a list of <ph id="ph2">&lt;xref:System.Reflection.LocalVariableInfo&gt;</ph> objects and then displays their types and index order.</source>
          <target state="translated">Nell'esempio viene utilizzato il <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph> proprietà per ottenere un elenco di <ph id="ph2">&lt;xref:System.Reflection.LocalVariableInfo&gt;</ph> oggetti e quindi Visualizza i tipi e l'ordine dell'indice.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> property is used to obtain a list of exception-handling clauses.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> proprietà viene utilizzata per ottenere un elenco di clausole di gestione delle eccezioni.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>Not all computer languages can generate <ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType&gt;</ph> clauses.</source>
          <target state="translated">Non tutti i linguaggi di programmazione è possibile generare <ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType&gt;</ph> clausole.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The Visual Basic example shows a filter clause, using a Visual Basic <ph id="ph1">`When`</ph> expression, which is omitted from the examples for other languages.</source>
          <target state="translated">Nell'esempio di Visual Basic viene illustrata una clausola di filtro, utilizzando un Visual Basic <ph id="ph1">`When`</ph> espressione, che viene omesso dagli esempi per le altre lingue.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Reflection.MethodBody.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.MethodBody" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Reflection.MethodBody" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.MethodBody.#ctor">
          <source>This constructor is invoked by derived classes during the construction of <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> objects.</source>
          <target state="translated">Questo costruttore viene richiamato dalle classi derivate durante la costruzione di <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>Gets a list that includes all the exception-handling clauses in the method body.</source>
          <target state="translated">Ottiene un elenco che include tutte le clausole di gestione delle eccezioni nel corpo del metodo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Reflection.ExceptionHandlingClause" /&gt;</ph> objects representing the exception-handling clauses in the body of the method.</source>
          <target state="translated">Elenco <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> di oggetti <ph id="ph2">&lt;see cref="T:System.Reflection.ExceptionHandlingClause" /&gt;</ph> che rappresentano le clausole di gestione delle eccezioni nel corpo del metodo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The list includes all clauses from all try blocks in the method body.</source>
          <target state="translated">L'elenco include tutte le clausole di tutti i blocchi try nel corpo del metodo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>Each <ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> object contains information that identifies the try block with which it is associated.</source>
          <target state="translated">Ogni <ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> oggetto contiene informazioni che identificano il blocco try a cui è associato.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>Working with exception-handling clauses requires a thorough understanding of metadata and MSIL instruction formats.</source>
          <target state="translated">Per utilizzare le clausole di gestione delle eccezioni richiede una conoscenza approfondita dei metadati e i formati di istruzioni MSIL.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">Informazioni disponibili nella documentazione di Common Language Infrastructure (CLI), in particolare "Partition II: metadati definizione e la semantica" e "Partizione III: CIL Instruction Set".</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">La documentazione è disponibile online; vedere <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> (ECMA C# e standard di Common Language Infrastructure) in MSDN e <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> nel sito Web internazionale Ecma.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The following code example defines a test method named <ph id="ph1">`MethodBodyExample`</ph> and displays information about its exception-handling clauses.</source>
          <target state="translated">Esempio di codice seguente definisce un metodo di test denominato <ph id="ph1">`MethodBodyExample`</ph> e visualizza le informazioni relative clausole di gestione delle eccezioni.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> metodo viene utilizzato per ottenere un <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> oggetto per il metodo di test.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> property is used to obtain a list of <ph id="ph2">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> objects.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> proprietà viene utilizzata per ottenere un elenco di <ph id="ph2">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>Not all computer languages can generate <ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType&gt;</ph> clauses.</source>
          <target state="translated">Non tutti i linguaggi di programmazione è possibile generare <ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType&gt;</ph> clausole.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The Visual Basic example shows a filter clause, using a Visual Basic <ph id="ph1">`When`</ph> expression, which is omitted from the examples for other languages.</source>
          <target state="translated">Nell'esempio di Visual Basic viene illustrata una clausola di filtro, utilizzando un Visual Basic <ph id="ph1">`When`</ph> espressione, che viene omesso dagli esempi per le altre lingue.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>Returns the MSIL for the method body, as an array of bytes.</source>
          <target state="translated">Restituisce il codice MSIL per il corpo del metodo come matrice di byte.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the MSIL for the method body.</source>
          <target state="translated">Matrice di tipo <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che contiene il codice MSIL per il corpo del metodo.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>You can use the token-resolution methods of the module class, such as <ph id="ph1">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.Module.ResolveMethod%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Reflection.Module.ResolveMember%2A&gt;</ph>, to resolve the tokens in the method body to <ph id="ph4">&lt;xref:System.Type&gt;</ph> objects, <ph id="ph5">&lt;xref:System.Reflection.MethodInfo&gt;</ph> objects, and <ph id="ph6">&lt;xref:System.Reflection.FieldInfo&gt;</ph> objects that provide detailed information about the types, methods, and fields accessed by the MSIL in the method body.</source>
          <target state="translated">È possibile utilizzare i metodi di risoluzione dei token della classe, modulo, ad esempio <ph id="ph1">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.Module.ResolveMethod%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Reflection.Module.ResolveMember%2A&gt;</ph>, per risolvere il token nel corpo del metodo <ph id="ph4">&lt;xref:System.Type&gt;</ph> oggetti, <ph id="ph5">&lt;xref:System.Reflection.MethodInfo&gt;</ph> oggetti, e <ph id="ph6">&lt;xref:System.Reflection.FieldInfo&gt;</ph> oggetti che forniscono informazioni dettagliate sui tipi, metodi e campi a cui accede il linguaggio MSIL nel corpo del metodo.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>Parsing method bodies requires a thorough understanding of metadata and MSIL instruction formats.</source>
          <target state="translated">L'analisi di corpi di metodo richiede una conoscenza approfondita dei metadati e i formati di istruzioni MSIL.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">Informazioni disponibili nella documentazione di Common Language Infrastructure (CLI), in particolare "Partition II: metadati definizione e la semantica" e "Partizione III: CIL Instruction Set".</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">La documentazione è disponibile online; vedere <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> (ECMA C# e standard di Common Language Infrastructure) in MSDN e <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> nel sito Web internazionale Ecma.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>Gets a value indicating whether local variables in the method body are initialized to the default values for their types.</source>
          <target state="translated">Ottiene un valore che indica se le variabili locali nel corpo del metodo sono inizializzate sui valori predefiniti dei tipi corrispondenti.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the method body contains code to initialize local variables to <ph id="ph2">&lt;see langword="null" /&gt;</ph> for reference types, or to the zero-initialized value for value types; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il corpo del metodo contiene il codice per inizializzare le variabili locali su <ph id="ph2">&lt;see langword="null" /&gt;</ph> per i tipi di riferimento o sul valore inizializzato su zero per i tipi di valore; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph> property refers to variables that are not explicitly initialized; that is, variables that are declared with syntax such as <ph id="ph2">`int x;`</ph> in C# or <ph id="ph3">`Dim x As Integer`</ph> in Visual Basic.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph> proprietà fa riferimento a variabili che non vengono inizializzati in modo esplicito, vale a dire, le variabili dichiarate con la sintassi, ad esempio <ph id="ph2">`int x;`</ph> in c# o <ph id="ph3">`Dim x As Integer`</ph> in Visual Basic.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>Reference variables are initialized to <ph id="ph1">`null`</ph> by default.</source>
          <target state="translated">Le variabili di riferimento sono inizializzate su <ph id="ph1">`null`</ph> per impostazione predefinita.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>Numeric variables are initialized to zero.</source>
          <target state="translated">Le variabili numeriche vengono inizializzate su zero.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>The following code example defines a test method named <ph id="ph1">`MethodBodyExample`</ph> and displays its local variable information and exception-handling clauses.</source>
          <target state="translated">Esempio di codice seguente definisce un metodo di test denominato <ph id="ph1">`MethodBodyExample`</ph> e vengono visualizzate le informazioni sulle variabili locali e clausole di gestione delle eccezioni.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> metodo viene utilizzato per ottenere un <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> oggetto per il metodo di test.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.MaxStackSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph> properties are displayed.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Reflection.MethodBody.MaxStackSize%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph> vengono visualizzate le proprietà.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Reflection.MethodBody.LocalSignatureMetadataToken">
          <source>Gets a metadata token for the signature that describes the local variables for the method in metadata.</source>
          <target state="translated">Ottiene un token di metadati per la firma che descrive le variabili locali per il metodo nei metadati.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalSignatureMetadataToken">
          <source>An integer that represents the metadata token.</source>
          <target state="translated">Intero che rappresenta il token di metadati.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalSignatureMetadataToken">
          <source>Use the <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph> property to obtain information about the method's local variables.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph> proprietà per ottenere informazioni sulle variabili locali del metodo.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalSignatureMetadataToken">
          <source>Information about local variable signatures can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</source>
          <target state="translated">Informazioni sulle firme delle variabili locali sono reperibile nella documentazione di Common Language Infrastructure (CLI), in particolare "partizione II: metadati definizione e la semantica".</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalSignatureMetadataToken">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">La documentazione è disponibile online; vedere <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> (ECMA C# e standard di Common Language Infrastructure) in MSDN e <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> nel sito Web internazionale Ecma.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>Gets the list of local variables declared in the method body.</source>
          <target state="translated">Ottiene l'elenco delle variabili locali dichiarate nel corpo del metodo.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Reflection.LocalVariableInfo" /&gt;</ph> objects that describe the local variables declared in the method body.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> di oggetti <ph id="ph2">&lt;see cref="T:System.Reflection.LocalVariableInfo" /&gt;</ph> che descrivono le variabili locali dichiarate nel corpo del metodo.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>You do not need the metadata token for the local variable signature provided by the <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalSignatureMetadataToken%2A&gt;</ph> property.</source>
          <target state="translated">Non è necessario il token di metadati per la firma della variabile locale per il <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalSignatureMetadataToken%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>The following code example defines a test method named <ph id="ph1">`MethodBodyExample`</ph> and displays its local variable information.</source>
          <target state="translated">Esempio di codice seguente definisce un metodo di test denominato <ph id="ph1">`MethodBodyExample`</ph> e visualizza le informazioni sulle variabili locali.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> metodo viene utilizzato per ottenere un <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> oggetto per il metodo di test.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph> property is used to obtain a list of <ph id="ph2">&lt;xref:System.Reflection.LocalVariableInfo&gt;</ph> objects.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph> proprietà viene utilizzata per ottenere un elenco di <ph id="ph2">&lt;xref:System.Reflection.LocalVariableInfo&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>Gets the maximum number of items on the operand stack when the method is executing.</source>
          <target state="translated">Ottiene il numero massimo di elementi nello stack di operandi durante l'esecuzione del metodo.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>The maximum number of items on the operand stack when the method is executing.</source>
          <target state="translated">Numero massimo di elementi nello stack di operandi durante l'esecuzione del metodo.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>For more information, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">Per ulteriori informazioni, vedere la documentazione di Common Language Infrastructure (CLI), in particolare "Partition II: metadati definizione e la semantica" e "Partizione III: CIL Instruction Set".</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">La documentazione è disponibile online; vedere <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> (ECMA C# e standard di Common Language Infrastructure) in MSDN e <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> nel sito Web internazionale Ecma.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>The following code example defines a test method named <ph id="ph1">`MethodBodyExample`</ph> and displays its local variable information and exception-handling clauses.</source>
          <target state="translated">Esempio di codice seguente definisce un metodo di test denominato <ph id="ph1">`MethodBodyExample`</ph> e vengono visualizzate le informazioni sulle variabili locali e clausole di gestione delle eccezioni.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> metodo viene utilizzato per ottenere un <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> oggetto per il metodo di test.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.MaxStackSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph> properties are displayed.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Reflection.MethodBody.MaxStackSize%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph> vengono visualizzate le proprietà.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class.</source>
          <target state="translated">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> classe.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>