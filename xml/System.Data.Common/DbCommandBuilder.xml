<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DbCommandBuilder.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55bfb54f7b76a4739f53cb9e965eb71e14aa89733.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5bfb54f7b76a4739f53cb9e965eb71e14aa89733</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Automatically generates single-table commands used to reconcile changes made to a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the associated database.</source>
          <target state="translated">Genera automaticamente comandi di tabella singola per risolvere le modifiche apportate a un oggetto <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> con il database associato.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>This is an abstract class that can only be inherited.</source>
          <target state="translated">Si tratta di una classe astratta che può soltanto essere ereditata.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> class is provided for the convenience of provider writers creating their own command builders.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> classe viene fornita per praticità di writer di provider, la creazione di propri compilatori di comandi.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>By inheriting from this class, developers can implement provider specific behavior in their own code.</source>
          <target state="translated">Tramite l'eredità da questa classe, gli sviluppatori possono implementare comportamento specifico del provider nel proprio codice.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> does not automatically generate the SQL statements required to reconcile changes made to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the associated data source.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> non genera automaticamente le istruzioni SQL necessarie per risolvere le modifiche apportate a un <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> con l'origine dati associata.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Tuttavia, è possibile creare un <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> oggetto per generare automaticamente le istruzioni SQL per gli aggiornamenti a tabella singola, se si imposta la <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> proprietà del <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Then, any additional SQL statements that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>.</source>
          <target state="translated">Quindi, generate da tutte le istruzioni SQL aggiuntive non si imposta la <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> events whenever you set the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> registra se stesso come un listener per <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> eventi ogni volta che si imposta la <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>You can only associate one <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> object with each other at one time.</source>
          <target state="translated">È possibile associare solo uno <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> oggetto tra loro in una sola volta.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>To generate INSERT, UPDATE, or DELETE statements, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> property to retrieve a required set of metadata automatically.</source>
          <target state="translated">Per generare istruzioni INSERT, UPDATE o DELETE, il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> utilizza il <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> proprietà da recuperare automaticamente un set di metadati richiesto.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If you change the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> after the metadata has been retrieved (for example, after the first update), you should call the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> method to update the metadata.</source>
          <target state="translated">Se si modifica il <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> dopo i metadati sono stati recuperati (ad esempio, dopo il primo aggiornamento), è necessario chiamare il <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> metodo per aggiornare i metadati.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">`SelectCommand`</ph> must also return at least one primary key or unique column.</source>
          <target state="translated">È inoltre necessario che <ph id="ph1">`SelectCommand`</ph> restituisca almeno una chiave primaria o una colonna univoca.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If none exist, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is generated, and the commands are not generated.</source>
          <target state="translated">In caso contrario, un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> viene generata l'eccezione e i comandi non vengono generati.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> also uses the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand.Connection%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Common.DbCommand.CommandTimeout%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.Common.DbCommand.Transaction%2A&gt;</ph> properties referenced by the <ph id="ph5">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> utilizza inoltre il <ph id="ph2">&lt;xref:System.Data.Common.DbCommand.Connection%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Common.DbCommand.CommandTimeout%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Data.Common.DbCommand.Transaction%2A&gt;</ph> proprietà a cui fa riferimento il <ph id="ph5">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The user should call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if any of these properties are modified, or if the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> itself is replaced.</source>
          <target state="translated">L'utente deve chiamare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se una di queste proprietà vengono modificata o se il <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> stessa viene sostituita.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Otherwise the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;</ph> properties retain their previous values.</source>
          <target state="translated">In caso contrario il <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;</ph> mantengono i valori precedenti.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If you call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> is disassociated from the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, and the generated commands are no longer used.</source>
          <target state="translated">Se si chiama <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> viene annullata l'associazione di <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, e i comandi generati non vengono più utilizzati.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.#ctor">
          <source>Initializes a new instance of a class that inherits from the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza di una classe che eredita dalla classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbParameter" /&gt;</ph> to which the additional modifications are applied.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbParameter" /&gt;</ph> al quale vengono applicate le modifiche aggiuntive.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> from the schema table provided by <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> della tabella dello schema fornito dal metodo <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>The type of command being generated; INSERT, UPDATE or DELETE.</source>
          <target state="translated">Tipo di comando generato: INSERT, UPDATE o DELETE.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the parameter is part of the update or delete WHERE clause, <ph id="ph2">&lt;see langword="false" /&gt;</ph> if it is part of the insert or update values.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il parametro fa parte della clausola WHERE di aggiornamento o eliminazione, <ph id="ph2">&lt;see langword="false" /&gt;</ph> se fa parte dei valori di inserimento o aggiornamento.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>Allows the provider implementation of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class to handle additional parameter properties.</source>
          <target state="translated">Attiva l'implementazione del provider per la classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> per consentire la gestione di proprietà aggiuntive dei parametri.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>This method allows an implementation of the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> class to handle provider-specific parameter properties.</source>
          <target state="translated">Questo metodo consente a un'implementazione del <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> classe per gestire le proprietà dei parametri specifici del provider.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
          <source>Sets or gets the <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> for an instance of the <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Ottiene o imposta l'oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> per un'istanza della classe <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> object.</source>
          <target state="translated">Un oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
          <source>Sets or gets a string used as the catalog separator for an instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Ottiene o imposta una stringa utilizzata come separatore di catalogo per un'istanza della classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
          <source>A string indicating the catalog separator for use with an instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Stringa che indica il separatore di catalogo da utilizzare con un'istanza della classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.ConflictOption">
          <source>Specifies which <ph id="ph1">&lt;see cref="T:System.Data.ConflictOption" /&gt;</ph> is to be used by the <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Specifica quale enumerazione <ph id="ph1">&lt;see cref="T:System.Data.ConflictOption" /&gt;</ph> deve essere utilizzata dalla classe <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.ConflictOption">
          <source>Returns one of the <ph id="ph1">&lt;see cref="T:System.Data.ConflictOption" /&gt;</ph> values describing the behavior of this <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Restituisce uno dei valori <ph id="ph1">&lt;see cref="T:System.Data.ConflictOption" /&gt;</ph> che descrivono il comportamento di questo oggetto <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.DataAdapter">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> object for which Transact-SQL statements are automatically generated.</source>
          <target state="translated">Ottiene o imposta un oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> per il quale sono generate automaticamente istruzioni Transact-SQL.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.DataAdapter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> object.</source>
          <target state="translated">Un oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.DataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> registra se stesso come un listener per <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> gli eventi generati dal <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> specificato in questa proprietà.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.DataAdapter">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> is released.</source>
          <target state="translated">Quando si crea una nuova istanza della <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>, qualsiasi esistente <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> associato a questo <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> viene rilasciato.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per rilasciare sia le risorse gestite sia quelle non gestite; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Rilascia le risorse non gestite usate da <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> e, facoltativamente, le risorse gestite.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Questo metodo viene chiamato dal metodo pubblico <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> (metodo) e <ph id="ph2">`Finalize`</ph> metodo.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> invokes the protected <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> method with the disposing parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> richiama il metodo protetto <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> metodo con il parametro disposing impostato su <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> richiama <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> impostato su <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> references.</source>
          <target state="translated">Se il parametro <ph id="ph1">`disposing`</ph> è <ph id="ph2">`true`</ph>, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> fa riferimento.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> method of each referenced object.</source>
          <target state="translated">Il metodo richiama il metodo <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> di ciascun oggetto cui viene fatto riferimento.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /&gt;</ph> può essere chiamato più volte da altri oggetti.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /&gt;</ph>.</source>
          <target state="translated">In caso di override di <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /&gt;</ph>, non fare riferimento a oggetti già eliminati in una chiamata precedente a <ph id="ph2">&lt;see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su come implementare <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /&gt;</ph>, vedere <bpt id="p1">[</bpt>implementazione di un metodo Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>si esegue l'override del metodo Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions at the data source.</source>
          <target state="translated">Ottiene l'oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generato automaticamente, richiesto per eseguire le operazioni di eliminazione nell'origine dati.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the associated command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> e modificare il testo del comando associato e quindi impostato in modo esplicito che il <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generata l'istruzione SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni SQL vengono prima generate quando l'applicazione chiama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">Durante la generazione di nomi di parametro, il comportamento predefinito consiste nell'usare <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, e così via per i diversi parametri.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If the overloaded version of <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> allows you to specify this behavior by supplying a Boolean value, you can cause the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead by passing <ph id="ph3">`True`</ph>.</source>
          <target state="translated">Se la versione di overload di <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> consente di specificare questo comportamento specificando un valore booleano, può causare il <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> generi i parametri in base ai nomi di colonna invece passando <ph id="ph3">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions at the data source.</source>
          <target state="translated">Ottiene l'oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generato automaticamente, richiesto per eseguire le operazioni di eliminazione nell'origine dati.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generato automaticamente richiesto per eseguire le operazioni di eliminazione.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> e modificare il testo del comando e quindi impostato in modo esplicito che il <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generata l'istruzione SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni SQL vengono prima generate quando l'applicazione chiama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if possible.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, genera i nomi dei parametri dai nomi delle colonne, se possibile.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="false" /&gt;</ph>, genera <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph> e così via.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions at the data source, optionally using columns for parameter names.</source>
          <target state="translated">Ottiene l'oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generato automaticamente, richiesto per eseguire le operazioni di eliminazione nell'origine dati, eventualmente utilizzando le colonne per i nomi dei parametri.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generato automaticamente richiesto per eseguire le operazioni di eliminazione.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> e modificare il testo del comando e quindi impostato in modo esplicito che il <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generata l'istruzione SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni SQL vengono prima generate quando l'applicazione chiama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">Durante la generazione di nomi di parametro, il comportamento predefinito consiste nell'usare <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, e così via per i diversi parametri.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Il passaggio di <ph id="ph1">`true`</ph> per il <ph id="ph2">`useColumnsForParameterNames`</ph> parametro consente di forzare il <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> generi i parametri in base ai nomi di colonna alternativa.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">Questo ha esito positivo solo se vengono soddisfatte le condizioni seguenti:</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> è stato specificato e la sua lunghezza è uguale o maggiore rispetto al nome di parametro generato.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">Il nome di parametro generato soddisfa i criteri specificati nel <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> espressione regolare.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions at the data source.</source>
          <target state="translated">Ottiene l'oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generato automaticamente, richiesto per eseguire le operazioni di inserimento nell'origine dati.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the text of the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il testo del <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> e modificare il testo del comando e quindi impostato in modo esplicito che il <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generata l'istruzione SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni SQL vengono prima generate quando l'applicazione chiama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">Durante la generazione di nomi di parametro, il comportamento predefinito consiste nell'usare <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, e così via per i diversi parametri.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If the overloaded version of <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> allows you to specify this behavior, you can cause the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Se la versione di overload di <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> consente di specificare questo comportamento, è possibile causare il <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> generi i parametri in base ai nomi di colonna alternativa.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions at the data source.</source>
          <target state="translated">Ottiene l'oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generato automaticamente, richiesto per eseguire le operazioni di inserimento nell'origine dati.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generato automaticamente, richiesto per eseguire le operazioni di inserimento.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the text of the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il testo del <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> e modificare il testo del comando e quindi impostato in modo esplicito che il <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generata l'istruzione SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni SQL vengono prima generate quando l'applicazione chiama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if possible.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, genera i nomi dei parametri dai nomi delle colonne, se possibile.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="false" /&gt;</ph>, genera <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph> e così via.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions at the data source, optionally using columns for parameter names.</source>
          <target state="translated">Ottiene l'oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generato automaticamente, richiesto per eseguire le operazioni di inserimento nell'origine dati, eventualmente utilizzando le colonne per i nomi dei parametri.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generato automaticamente, richiesto per eseguire le operazioni di inserimento.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the text of the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il testo del <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> e modificare il testo del comando e quindi impostato in modo esplicito che il <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generata l'istruzione SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni SQL vengono prima generate quando l'applicazione chiama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">Durante la generazione di nomi di parametro, il comportamento predefinito consiste nell'usare <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, e così via per i diversi parametri.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Il passaggio di <ph id="ph1">`true`</ph> per il <ph id="ph2">`useColumnsForParameterNames`</ph> parametro consente di forzare il <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> generi i parametri in base ai nomi di colonna alternativa.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Generation of the parameters based on column names succeeds only if the following conditions are met:</source>
          <target state="translated">Generazione dei parametri in base ai nomi di colonna ha esito positivo solo se vengono soddisfatte le condizioni seguenti:</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> è stato specificato e la sua lunghezza è uguale o maggiore rispetto al nome di parametro generato.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">Il nome di parametro generato soddisfa i criteri specificati nel <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> espressione regolare.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Returns the name of the specified parameter.</source>
          <target state="translated">Restituisce il nome del parametro specificato.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
          <source>The number to be included as part of the parameter's name..</source>
          <target state="translated">Numero da includere come parte del nome del parametro.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
          <source>Returns the name of the specified parameter in the format of <ph id="ph1">@p</ph><bpt id="p1">*</bpt><ph id="ph2">#</ph><ept id="p1">*</ept>.</source>
          <target state="translated">Restituisce il nome del parametro specificato nel formato <ph id="ph1">@p</ph><bpt id="p1">*</bpt><ph id="ph2">#</ph><ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
          <source>Use when building a custom command builder.</source>
          <target state="translated">Da utilizzare quando si compila un generatore di comandi personalizzato.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
          <source>The name of the parameter with the specified number appended as part of the parameter name.</source>
          <target state="translated">Nome del parametro con il numero specificato aggiunto a formarne parte integrante.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
          <source>The partial name of the parameter.</source>
          <target state="translated">Nome parziale del parametro.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
          <source>Returns the full parameter name, given the partial parameter name.</source>
          <target state="translated">Restituisce il nome completo del parametro, dato il suo nome parziale.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
          <source>The full parameter name corresponding to the partial parameter name requested.</source>
          <target state="translated">Nome completo del parametro corrispondente al nome parziale richiesto.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
          <source>The number to be included as part of the parameter's name.</source>
          <target state="translated">Numero da includere come parte del nome del parametro.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
          <source>Returns the placeholder for the parameter in the associated SQL statement.</source>
          <target state="translated">Restituisce il segnaposto del parametro nell'istruzione SQL associata.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
          <source>The name of the parameter with the specified number appended.</source>
          <target state="translated">Nome del parametro comprensivo del numero specificato.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">Questo metodo è destinato a un utilizzo dal writer di provider, la creazione di un generatore di comandi personalizzati.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> for which to retrieve the corresponding schema table.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> per il quale recuperare la tabella dello schema corrispondente.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
          <source>Returns the schema table for the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Restituisce la tabella dello schema della classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that represents the schema for the specific <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> che rappresenta lo schema dell'oggetto <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> specifico.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">Questo metodo è destinato a un utilizzo dal writer di provider, la creazione di un generatore di comandi personalizzati.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates at the data source.</source>
          <target state="translated">Ottiene l'oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generato automaticamente richiesto per eseguire le operazioni di aggiornamento nell'origine dati.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> e modificare il testo del comando e quindi impostato in modo esplicito che il <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generata l'istruzione SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni SQL vengono prima generate quando l'applicazione chiama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">Durante la generazione di nomi di parametro, il comportamento predefinito consiste nell'usare <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, e così via per i diversi parametri.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If the overloaded version of <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> allows you to specify this behavior, you can cause the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Se la versione di overload di <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> consente di specificare questo comportamento, è possibile causare il <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> generi i parametri in base ai nomi di colonna alternativa.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates at the data source.</source>
          <target state="translated">Ottiene l'oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generato automaticamente richiesto per eseguire le operazioni di aggiornamento nell'origine dati.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generato automaticamente richiesto per eseguire le operazioni di aggiornamento.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> e modificare il testo del comando e quindi impostato in modo esplicito che il <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generata l'istruzione SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni SQL vengono prima generate quando l'applicazione chiama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if possible.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, genera i nomi dei parametri dai nomi delle colonne, se possibile.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="false" /&gt;</ph>, genera <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph> e così via.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates at the data source, optionally using columns for parameter names.</source>
          <target state="translated">Ottiene l'oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generato automaticamente, richiesto per eseguire le operazioni di aggiornamento nell'origine dati, eventualmente utilizzando le colonne per i nomi dei parametri.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generato automaticamente richiesto per eseguire le operazioni di aggiornamento.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Un'applicazione può utilizzare il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> a scopo di metodo informativi o di risoluzione dei problemi in quanto restituisce il <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> oggetto da eseguire.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> come base di un comando modificato.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Ad esempio, è possibile chiamare <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> e modificare il testo del comando e quindi impostato in modo esplicito che il <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Dopo aver generata l'istruzione SQL, l'applicazione deve chiamare in modo esplicito <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se viene modificato l'istruzione in alcun modo.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> continuerà a utilizzare le informazioni dell'istruzione precedente, che potrebbe non essere corretto.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Le istruzioni SQL vengono prima generate quando l'applicazione chiama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">Durante la generazione di nomi di parametro, il comportamento predefinito consiste nell'usare <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, e così via per i diversi parametri.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Il passaggio di <ph id="ph1">`true`</ph> per il <ph id="ph2">`useColumnsForParameterNames`</ph> parametro consente di forzare il <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> generi i parametri in base ai nomi di colonna alternativa.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Generation of the parameters based on column names succeeds only if the following conditions are met:</source>
          <target state="translated">Generazione dei parametri in base ai nomi di colonna ha esito positivo solo se vengono soddisfatte le condizioni seguenti:</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> è stato specificato e la sua lunghezza è uguale o maggiore rispetto al nome di parametro generato.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">Il nome di parametro generato soddisfa i criteri specificati nel <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> espressione regolare.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> to be used by the command builder for the corresponding insert, update, or delete command.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> che dovrà essere utilizzato dal generatore di comandi per il comando di inserimento, aggiornamento o eliminazione corrispondente.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Data.Common.DbCommand.CommandTimeout" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Data.Common.DbCommand.Transaction" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Data.Common.DbCommand.CommandType" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> properties on the <ph id="ph5">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph>.</source>
          <target state="translated">Reimposta le proprietà <ph id="ph1">&lt;see cref="P:System.Data.Common.DbCommand.CommandTimeout" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Data.Common.DbCommand.Transaction" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Data.Common.DbCommand.CommandType" /&gt;</ph> e <ph id="ph4">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> sul valore <ph id="ph5">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> instance to use for each insert, update, or delete operation.</source>
          <target state="translated">Istanza di <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> da utilizzare per ciascuna operazione di inserimento, aggiornamento o eliminazione.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>Passing a null value allows the <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /&gt;</ph> method to create a <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object based on the Select command associated with the <ph id="ph3">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Se viene passato un valore null, il metodo <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /&gt;</ph> crea un oggetto <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> in base al comando Select associato all'oggetto <ph id="ph3">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">Questo metodo è destinato a un utilizzo dal writer di provider, la creazione di un generatore di comandi personalizzati.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
          <source>The original unquoted identifier.</source>
          <target state="translated">Identificatore originale non racchiuso tra virgolette.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</source>
          <target state="translated">Specificato un identificatore senza virgolette nel caso di catalogo corretto, viene restituito il formato corretto tra virgolette di quell'identificatore, incluso l'escape corretto di tutte le virgolette incorporate nell'identificatore.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
          <source>The quoted version of the identifier.</source>
          <target state="translated">Versione dell'identificatore racchiuso tra virgolette.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
          <source>Embedded quotes within the identifier are properly escaped.</source>
          <target state="translated">Le virgolette incorporate all'interno dell'identificatore sono sottoposte a escape in modo corretto.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">Ottiene o imposta il carattere o i caratteri iniziali da utilizzare quando si specificano oggetti di database, ad esempio tabelle o colonne, i cui nomi contengono caratteri quali spazi o token riservati.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>The beginning character or characters to use.</source>
          <target state="translated">Carattere o caratteri iniziali da utilizzare.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>The default is an empty string.</source>
          <target state="translated">Il valore predefinito è una stringa vuota.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</source>
          <target state="translated">Alcune origini dati siano presenti oggetti che possono contenere caratteri quali spazi, virgole e punti e virgola.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>To accommodate this capability, use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</source>
          <target state="translated">Per questa funzionalità, utilizzare il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> proprietà per specificare i delimitatori, ad esempio una parentesi quadra aperta e una parentesi per racchiudere il nome dell'oggetto.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>Although you cannot change the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete command has been generated, you can change their settings after calling the <ph id="ph3">`Update`</ph> method of a <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Anche se non è possibile modificare il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> proprietà dopo che un'istruzione insert, update o delete comando è stato generato, è possibile modificare le impostazioni dopo la chiamata di <ph id="ph3">`Update`</ph> metodo di un <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>This property cannot be changed after an insert, update, or delete command has been generated.</source>
          <target state="translated">Non è possibile modificare la proprietà dopo che è stato generato un comando di inserimento, aggiornamento o eliminazione.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">Ottiene o imposta il carattere o i caratteri finali da utilizzare quando si specificano oggetti di database, ad esempio tabelle o colonne, i cui nomi contengono caratteri quali spazi o token riservati.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>The ending character or characters to use.</source>
          <target state="translated">Carattere o caratteri finali da utilizzare.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>The default is an empty string.</source>
          <target state="translated">Il valore predefinito è una stringa vuota.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</source>
          <target state="translated">Alcune origini dati siano presenti oggetti che possono contenere caratteri quali spazi, virgole e punti e virgola.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>To accommodate this capability, use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</source>
          <target state="translated">Per questa funzionalità, utilizzare il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> proprietà per specificare i delimitatori, ad esempio una parentesi quadra aperta e una parentesi per racchiudere il nome dell'oggetto.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>Although you cannot change the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete command has been generated, you can change their settings after calling the <ph id="ph3">`Update`</ph> method of a <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Anche se non è possibile modificare il <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> proprietà dopo che un'istruzione insert, update o delete comando è stato generato, è possibile modificare le impostazioni dopo la chiamata di <ph id="ph3">`Update`</ph> metodo di un <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source>Clears the commands associated with this <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Elimina i comandi associati all'oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> method effectively removes all the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objects referred to by the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>,</source>
          <target state="translated">La chiamata di <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> metodo rimuove in modo efficace tutti il <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> oggetti a cui fa riferimento il <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;</ph>, and</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;</ph> e</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</ph> properties.</source>
          <target state="translated">Proprietà di <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph> instance containing information about the event.</source>
          <target state="translated">Istanza di <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph> contenente le informazioni sull'evento.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
          <source>Adds an event handler for the <ph id="ph1">&lt;see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /&gt;</ph> event.</source>
          <target state="translated">Aggiunge un gestore eventi per l'evento <ph id="ph1">&lt;see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</source>
          <target state="translated">Ottiene o imposta il carattere da utilizzare come separatore tra l'identificatore di schema e altri identificatori.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>The character to be used as the schema separator.</source>
          <target state="translated">Carattere da utilizzare come separatore di schema.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>Generally, database servers indicate the schema for an identifier by separating the schema name from the identifier with some character.</source>
          <target state="translated">In genere, i server di database indicano lo schema per un identificatore separando il nome dello schema dall'identificatore con un carattere.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>For example, SQL Server uses a colon, creating complete identifiers such as <bpt id="p1">**</bpt>Person:CustomerName<ept id="p1">**</ept>, where "Person" is the schema name and "CustomerName" is the identifier.</source>
          <target state="translated">Ad esempio, SQL Server utilizza i due punti, la creazione di identificatori completi, ad esempio <bpt id="p1">**</bpt>persona: NomeCliente<ept id="p1">**</ept>, dove "Person" è il nome dello schema e "CustomerName" è l'identificatore.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>Setting this property allows developers to modify this behavior.</source>
          <target state="translated">Impostazione di questa proprietà consente agli sviluppatori di modificare questo comportamento.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.SetAllValues">
          <source>Specifies whether all column values in an update statement are included or only changed ones.</source>
          <target state="translated">Specifica se in un'istruzione di aggiornamento sono inclusi tutti i valori delle colonne o soltanto quelli modificati.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SetAllValues">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the UPDATE statement generated by the <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> includes all columns; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if it includes only changed columns.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'istruzione UPDATE generata dalla classe <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> comprende tutte le colonne; <ph id="ph3">&lt;see langword="false" /&gt;</ph> se comprende solo le colonne modificate.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SetAllValues">
          <source>The UPDATE statement generated by a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> can include update information about all the columns, or it can include information only about those columns whose values have changed.</source>
          <target state="translated">L'istruzione UPDATE generata da un <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> possono includere informazioni di aggiornamento su tutte le colonne o può includere solo sulle colonne i cui valori sono stati modificati.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SetAllValues">
          <source>Setting the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A&gt;</ph> property to <ph id="ph2">`true`</ph> causes the generated UPDATE statement to include all the columns, whether their values have changed or not.</source>
          <target state="translated">L'impostazione di <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A&gt;</ph> proprietà <ph id="ph2">`true`</ph> , l'istruzione di aggiornamento generata includere tutte le colonne, se i relativi valori sono stati modificati o non.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> to be used for the update.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> da utilizzare per l'aggiornamento.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>Registers the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> to handle the <ph id="ph2">&lt;see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /&gt;</ph> event for a <ph id="ph3">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</source>
          <target state="translated">Registra l'oggetto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> per gestire l'evento <ph id="ph2">&lt;see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /&gt;</ph> per un oggetto <ph id="ph3">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">Questo metodo è destinato a un utilizzo dal writer di provider, la creazione di un generatore di comandi personalizzati.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>When a new <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>, it is registered for the DbDataAdapter's <bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept> event.</source>
          <target state="translated">Quando un nuovo <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> viene aggiunto al <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>, esso viene registrato per il DbDataAdapter <bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept> evento.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>If this method is called again with the same <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> is unregistered for that DbDataAdapter's <bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept> event.</source>
          <target state="translated">Se questo metodo viene chiamato nuovamente con lo stesso <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> è stata annullata per tale DbDataAdapter <bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept> evento.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The identifier that will have its embedded quotes removed.</source>
          <target state="translated">Identificatore dal quale rimuovere le virgolette incorporate.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</source>
          <target state="translated">Specificato un identificatore con virgolette, viene restituito il formato corretto senza virgolette di quell'identificatore, incluso il corretto utilizzo di caratteri non di escape per le virgolette incorporate nell'identificatore.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The unquoted identifier, with embedded quotes properly un-escaped.</source>
          <target state="translated">Identificatore senza virgolette, con virgolette incorporate sostituite da caratteri non di escape in modo corretto.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>