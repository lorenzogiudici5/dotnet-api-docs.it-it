<Type Name="DataAdapter" FullName="System.Data.Common.DataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c2ebaa8f380dc7733c8d56b9c4a0aaeacc1dfa2e" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32037826" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataAdapter : System.ComponentModel.Component, System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataAdapter extends System.ComponentModel.Component implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class DataAdapter&#xA;Inherits Component&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataAdapter : System::ComponentModel::Component, System::Data::IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Rappresenta un gruppo di comandi SQL e una connessione di database usati per riempire la classe <see cref="T:System.Data.DataSet" /> e aggiornare l'origine dati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.Common.DataAdapter> funge da ponte tra un <xref:System.Data.DataSet> e un'origine dati per il recupero e il salvataggio dei dati. Il <xref:System.Data.Common.DataAdapter> fornisce questo bridge eseguendo il mapping di <xref:System.Data.Common.DataAdapter.Fill%2A>, che modifica i dati nel <xref:System.Data.DataSet> affinché corrispondano ai dati nell'origine dati, e <xref:System.Data.IDataAdapter.Update%2A>, che modifica i dati nell'origine dati corrispondono ai dati il <xref:System.Data.DataSet>.  
  
 Se ci si connette a un database di SQL Server, è possibile aumentare le prestazioni complessive utilizzando il <xref:System.Data.SqlClient.SqlDataAdapter> insieme a essa associati <xref:System.Data.SqlClient.SqlCommand> e <xref:System.Data.SqlClient.SqlConnection> oggetti. Per le origini dati OLE DB supportati, utilizzare il <xref:System.Data.Common.DataAdapter> con l'identificatore associato <xref:System.Data.OleDb.OleDbCommand> e <xref:System.Data.OleDb.OleDbConnection> oggetti. Per le origini dati supportato da ODBC, utilizzare il <xref:System.Data.Common.DataAdapter> con l'identificatore associato <xref:System.Data.Odbc.OdbcCommand> e <xref:System.Data.Odbc.OdbcConnection> oggetti. Per database Oracle, utilizzare il <xref:System.Data.Common.DataAdapter> con l'identificatore associato <xref:System.Data.OracleClient.OracleCommand> e <xref:System.Data.OracleClient.OracleConnection> oggetti.  
  
 Quando un'istanza di <xref:System.Data.Common.DataAdapter> viene creata, la lettura/scrittura sono impostate sui valori iniziali. Per un elenco di questi valori, vedere il <xref:System.Data.Common.DataAdapter> costruttore.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza di una classe <see cref="T:System.Data.Common.DataAdapter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza di una classe <see cref="T:System.Data.Common.DataAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un'istanza di <xref:System.Data.Common.DataAdapter> viene creato, le seguenti proprietà vengono impostate sui valori iniziali di esempio di lettura/scrittura.  
  
|Proprietà|Valore iniziale|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
|<xref:System.Data.Common.DataAdapter.TableMappings%2A>|Matrice di oggetti <xref:System.Data.Common.DataAdapter.TableMappings%2A>.|  
  
 È possibile modificare il valore di una di queste proprietà tramite una chiamata distinta per la proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataAdapter (System.Data.Common.DataAdapter from);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DataAdapter from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (from As DataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataAdapter(System::Data::Common::DataAdapter ^ from);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.Data.Common.DataAdapter" />
      </Parameters>
      <Docs>
        <param name="from">Oggetto <see cref="T:System.Data.Common.DataAdapter" /> utilizzato per creare il nuovo <see cref="T:System.Data.Common.DataAdapter" />.</param>
        <summary>Inizializza una nuova istanza di una classe <see cref="T:System.Data.Common.DataAdapter" /> da un oggetto esistente dello stesso tipo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo overload del metodo di <xref:System.Data.Common.DataAdapter> costruttore è progettato per l'uso da un provider di dati .NET Framework, quando si implementa un costruttore simile da utilizzare in un'implementazione di clone.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChangesDuringFill">
      <MemberSignature Language="C#" Value="public bool AcceptChangesDuringFill { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptChangesDuringFill" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptChangesDuringFill As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptChangesDuringFill { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il metodo <see cref="M:System.Data.DataRow.AcceptChanges" /> viene chiamato per una classe <see cref="T:System.Data.DataRow" /> dopo che questa è stata aggiunta alla classe <see cref="T:System.Data.DataTable" />, durante un'operazione del metodo **Fill**.</summary>
        <value>
          <see langword="true" /> se <see cref="M:System.Data.DataRow.AcceptChanges" /> viene chiamato sull'oggetto <see cref="T:System.Data.DataRow" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `false`, <xref:System.Data.DataRow.AcceptChanges%2A> non viene chiamato, e le righe appena aggiunte sono considerate come righe inserite.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChangesDuringUpdate">
      <MemberSignature Language="C#" Value="public bool AcceptChangesDuringUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptChangesDuringUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptChangesDuringUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptChangesDuringUpdate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta se il metodo <see cref="M:System.Data.DataRow.AcceptChanges" /> viene chiamato durante un metodo <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />.</summary>
        <value>
          <see langword="true" /> se <see cref="M:System.Data.DataRow.AcceptChanges" /> viene chiamato durante il metodo <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante una chiamata al `Update` metodo di un `DataAdapter`, il database può inviare dati all'applicazione di ADO.NET come parametri di output o come il primo record restituito di un set di risultati. ADO.NET può recuperare questi valori e aggiornare le colonne corrispondenti nell'oggetto <xref:System.Data.DataRow> da aggiornare. Per impostazione predefinita, le chiamate ADO.NET il `AcceptChanges` metodo il `DataRow` dopo l'aggiornamento. Tuttavia, se si desidera unire la riga aggiornata eseguire il backup in un altro <xref:System.Data.DataTable>, si consiglia di mantenere intatto il valore originale di una colonna chiave primaria. Ad esempio, una colonna chiave primaria corrispondente a una colonna a incremento automatico del database, ad esempio una colonna identity, può contenere nuovi valori che sono assegnati per il database che non corrispondono ai valori originali assegnati nel `DataRow`. Per impostazione predefinita, `AcceptChanges` viene chiamato in modo implicito dopo un aggiornamento e i valori originali della riga, che potrebbe essere stato <xref:System.Data.DataColumn.AutoIncrement%2A> i valori assegnati da ADO.NET, vengono persi. È possibile mantenere i valori originali di `DataRow` impedendo `ADO.NET` dalla chiamata `AcceptChanges` dopo aver eseguito un aggiornamento su una riga, impostando il <xref:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate%2A> proprietà `false`, che consente di mantenere i valori originali.  
  
> [!NOTE]
>  L'impostazione di `AcceptChangesDuringUpdate` proprietà `false` si applica a tutte le modifiche di dati, non solo consente di inserire. Se si desidera modificare o eliminare righe nello stesso aggiornamento e, se si desidera eliminare la chiamata a `AcceptChanges` solo per gli inserimenti, quindi anziché impostare `AccceptChangesDuringUpdate` a `false`, utilizzare un gestore eventi per il `RowUpdated` evento del `DataAdapter`. Nel gestore eventi è possibile verificare il <xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A> per determinare se la modifica dei dati è un'operazione di inserimento e `true`, impostare il <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> proprietà del <xref:System.Data.Common.RowUpdatedEventArgs> a <xref:System.Data.UpdateStatus.SkipCurrentRow>. Per ulteriori informazioni e un esempio, vedere [il recupero dei valori di identità o contatore](~/docs/framework/data/adonet/retrieving-identity-or-autonumber-values.md).  
  
   
  
## Examples  
 In questo esempio vengono illustrati l'estrazione di righe modificate da un oggetto `DataTable` e l'uso di <xref:System.Data.SqlClient.SqlDataAdapter> per aggiornare l'origine dati e recuperare un nuovo valore per la colonna Identity. Impostando il `AcceptChangesDuringUpdate` proprietà del <xref:System.Data.SqlClient.SqlDataAdapter> a `false` per mantenere il valore di incremento automatico originale, i nuovi dati possono quindi essere uniti in originale <xref:System.Data.DataTable>, anche se il nuovo valore identity non corrisponde l'incremento automatico originale valore di `DataTable`.  
  
 [!code-csharp[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlClient.AcceptChangesDuringUpdate/CS/source.cs#1)]
 [!code-vb[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlClient.AcceptChangesDuringUpdate/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneInternals">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DataAdapter CloneInternals ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DataAdapter CloneInternals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.CloneInternals" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CloneInternals () As DataAdapter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DataAdapter ^ CloneInternals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("CloneInternals() has been deprecated.  Use the DataAdapter(DataAdapter from) constructor.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DataAdapter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia di questa istanza di <see cref="T:System.Data.Common.DataAdapter" />.</summary>
        <returns>Istanza duplicata di <see cref="T:System.Data.Common.DataAdapter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metodo deprecato. Il <xref:System.Data.Common.DataAdapter.%23ctor%2A> deve essere utilizzato costruttore anziché di questo metodo.  
  
 Tutti i comandi di <xref:System.Data.Common.DataAdapter.TableMappings%2A>, <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>e <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A> vengono clonati. Tuttavia, le connessioni per i comandi non vengono copiate, ma condiviso. Di conseguenza, il duplicato <xref:System.Data.Common.DataAdapter> può essere utilizzata con la stessa connessione originale.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Data.Common.DataAdapter.CloneInternals" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Data.Common.DataAdapter.CloneInternals" /> metodo.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ContinueUpdateOnError">
      <MemberSignature Language="C#" Value="public bool ContinueUpdateOnError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContinueUpdateOnError" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.ContinueUpdateOnError" />
      <MemberSignature Language="VB.NET" Value="Public Property ContinueUpdateOnError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContinueUpdateOnError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se generare un'eccezione quando viene rilevato un errore durante l'aggiornamento di una riga.</summary>
        <value>
          <see langword="true" /> per continuare l'aggiornamento senza generare un'eccezione; in caso contrario <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `ContinueUpdateOnError` è impostato su `true`, quando si verifica un errore durante l'aggiornamento di una riga, viene generata alcuna eccezione. L'aggiornamento della riga è stata ignorata e le informazioni sull'errore viene inseriti nella <xref:System.Data.DataRow.RowError%2A> proprietà della riga di errore. Il <xref:System.Data.Common.DataAdapter> continua ad aggiornare le righe successive.  
  
 Se `ContinueUpdateOnError` è impostato su `false`, viene generata un'eccezione quando si verifica un errore durante l'aggiornamento di una riga.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTableMappings">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DataTableMappingCollection CreateTableMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DataTableMappingCollection CreateTableMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.CreateTableMappings" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTableMappings () As DataTableMappingCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DataTableMappingCollection ^ CreateTableMappings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DataTableMappingCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un nuovo oggetto <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
        <returns>Nuova raccolta del mapping della tabella.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
        <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Data.Common.DataAdapter" /> e, facoltativamente, le risorse gestite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato dal metodo pubblico <xref:System.IDisposable.Dispose%2A> (metodo) e <xref:System.Object.Finalize%2A> metodo. `Dispose` richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`. <xref:System.Object.Finalize%2A> richiama `Dispose` con `disposing` impostato su `false`.  
  
 Se il parametro `disposing` è `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <xref:System.Data.Common.DataAdapter> fa riferimento. Il metodo richiama il metodo `Dispose` di ciascun oggetto cui viene fatto riferimento.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            Il metodo <see langword="Dispose" /> può essere chiamato più volte da altri oggetti. Quando si esegue l'override <see langword="Dispose(Boolean)" />, non fare riferimento a oggetti eliminati in una precedente chiamata a <see langword="Dispose" />. Per ulteriori informazioni su come implementare <see langword="Dispose(Boolean)" />, vedere [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 Per ulteriori informazioni su <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [si esegue l'override del metodo Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge o aggiorna righe nell'oggetto <see cref="T:System.Data.DataSet" /> in modo che corrispondano a quelle dell'origine dati.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public virtual int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">Oggetto <see cref="T:System.Data.DataSet" /> in cui inserire i record e, se necessario, lo schema.</param>
        <summary>Aggiunge o aggiorna righe nell'oggetto <see cref="T:System.Data.DataSet" /> in modo che corrispondano a quelle dell'origine dati.</summary>
        <returns>Numero di righe aggiunte o aggiornate correttamente nell'oggetto <see cref="T:System.Data.DataSet" />. Non sono incluse righe modificate da istruzioni che non restituiscono righe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.Common.DataAdapter.Fill%2A> che consente di recuperare le righe dall'origine dati utilizzando l'istruzione SELECT specificata da un oggetto associato <xref:System.Data.IDbDataAdapter.SelectCommand%2A> proprietà. L'oggetto connessione associato con l'istruzione SELECT deve essere valido, ma non devono essere aperte. Se la connessione viene chiusa prima <xref:System.Data.Common.DataAdapter.Fill%2A> viene chiamato, verrà aperta per recuperare i dati, quindi chiusa. Se la connessione è aperta prima <xref:System.Data.Common.DataAdapter.Fill%2A> viene chiamato, rimane aperto.  
  
 Il <xref:System.Data.Common.DataAdapter.Fill%2A> aggiunge quindi le righe di destinazione <xref:System.Data.DataTable> gli oggetti di <xref:System.Data.DataSet>, creando il <xref:System.Data.DataTable> oggetti se non sono già presenti. Quando si creano <xref:System.Data.DataTable> oggetti, il <xref:System.Data.Common.DataAdapter.Fill%2A> operazione consente di creare solo i metadati dei nomi di colonna. Tuttavia, se il <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> è impostata su `AddWithKey`, chiavi primarie appropriate e i vincoli vengono creati.  
  
 Se `SelectCommand` restituisce i risultati di un OUTER JOIN, mediante `DataAdapter` non viene impostato un valore di <xref:System.Data.DataTable.PrimaryKey%2A> per l'oggetto <xref:System.Data.DataTable> risultante. È necessario definire in modo esplicito la chiave primaria per garantire che le righe duplicate vengano risolte correttamente. Per ulteriori informazioni, vedere [la definizione di chiavi primarie](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).  
  
 Se l'adattatore dati di rileva colonne duplicate durante la compilazione di un <xref:System.Data.DataTable>, genera nomi per le colonne successive, utilizzando il modello "columnname1", "columnname2", "columnname3" e così via. Se i dati in ingresso contengano colonne senza nome, questi vengono collocati nel <xref:System.Data.DataSet> secondo il criterio "Column1", "Column2" e così via. Quando più set di risultati vengono aggiunti per il <xref:System.Data.DataSet> ogni set di risultati viene inserito in una tabella separata. Set di risultati aggiuntivi sono denominati aggiungendo i valori integrali per il nome della tabella specificato (ad esempio, "Table", "Table1", "Table2" e così via). Le applicazioni che utilizzano nomi di colonna e tabella è necessario assicurarsi che non si verifichino conflitti con questi modelli di denominazione.  
  
 Quando l'istruzione SELECT utilizzata per popolare il <xref:System.Data.DataSet> restituisce più risultati, ad esempio istruzioni batch SQL, se uno dei risultati contiene un errore, tutti i risultati successivi vengono ignorati e non aggiunti al <xref:System.Data.DataSet>.  
  
 È possibile utilizzare il <xref:System.Data.Common.DataAdapter.Fill%2A> metodo più volte sullo stesso <xref:System.Data.DataTable>. Se esiste una chiave primaria, le righe in ingresso vengono unite con le righe corrispondenti che esistono già. Se è presente alcuna chiave primaria, le righe in ingresso vengono aggiunti per il <xref:System.Data.DataTable>.  
  
> [!NOTE]
>  Quando si gestiscono istruzioni SQL batch che restituiscono più risultati, l'implementazione di <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> per il Provider di dati .NET Framework per OLE DB consente di recuperare informazioni sullo schema solo per il primo risultato. Per recuperare informazioni sullo schema per più risultati, utilizzare <xref:System.Data.Common.DbDataAdapter.Fill%2A> con il <xref:System.Data.MissingSchemaAction> impostato su `AddWithKey`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDataReader ^ dataReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="dataTable">Classe <see cref="T:System.Data.DataTable" /> in cui inserire record.</param>
        <param name="dataReader">Istanza di <see cref="T:System.Data.IDataReader" />.</param>
        <summary>Aggiunge o aggiorna righe nell'oggetto <see cref="T:System.Data.DataTable" /> affinché corrispondano a quelle dell'origine dati, utilizzando il nome di <see cref="T:System.Data.DataTable" /> e l'oggetto <see cref="T:System.Data.IDataReader" /> specificato.</summary>
        <returns>Numero di righe aggiunte o aggiornate correttamente nell'oggetto <see cref="T:System.Data.DataTable" />. Non sono incluse righe modificate da istruzioni che non restituiscono righe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vedere la sezione Osservazioni per `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` per ulteriori informazioni.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, System.Data.IDataReader dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, class System.Data.IDataReader dataReader, int32 startRecord, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), dataReader As IDataReader, startRecord As Integer, maxRecords As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, System::Data::IDataReader ^ dataReader, int startRecord, int maxRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataTables">Insieme di oggetti <see cref="T:System.Data.DataTable" /> in cui inserire record.</param>
        <param name="dataReader">Istanza di <see cref="T:System.Data.IDataReader" />.</param>
        <param name="startRecord">Indice iniziale in base zero del record di inizio.</param>
        <param name="maxRecords">Intero che indica il numero massimo di record.</param>
        <summary>Aggiunge o aggiorna righe in un intervallo specificato nell'insieme di oggetti <see cref="T:System.Data.DataTable" /> affinché corrispondano a quelle nell'origine dati.</summary>
        <returns>Numero di righe aggiunte o aggiornate correttamente nell'oggetto <see cref="T:System.Data.DataTable" />. Non sono incluse righe modificate da istruzioni che non restituiscono righe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vedere la sezione Osservazioni per `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` per ulteriori informazioni.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, string srcTable, class System.Data.IDataReader dataReader, int32 startRecord, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable, System::Data::IDataReader ^ dataReader, int startRecord, int maxRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataSet">Classe <see cref="T:System.Data.DataSet" /> in cui inserire record.</param>
        <param name="srcTable">Stringa che indica il nome della tabella di origine.</param>
        <param name="dataReader">Istanza di <see cref="T:System.Data.IDataReader" />.</param>
        <param name="startRecord">Indice iniziale in base zero del record di inizio.</param>
        <param name="maxRecords">Intero che indica il numero massimo di record.</param>
        <summary>Aggiunge o aggiorna righe in un intervallo specificato nell'oggetto <see cref="T:System.Data.DataSet" /> affinché corrispondano a quelle nell'origine dati mediante <see cref="T:System.Data.DataSet" /> e i nomi di <see cref="T:System.Data.DataTable" />.</summary>
        <returns>Numero di righe aggiunte o aggiornate correttamente nell'oggetto <see cref="T:System.Data.DataSet" />. Non sono incluse righe modificate da istruzioni che non restituiscono righe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vedere la sezione Osservazioni per `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` per ulteriori informazioni.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillError">
      <MemberSignature Language="C#" Value="public event System.Data.FillErrorEventHandler FillError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.FillErrorEventHandler FillError" />
      <MemberSignature Language="DocId" Value="E:System.Data.Common.DataAdapter.FillError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FillError As FillErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::FillErrorEventHandler ^ FillError;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.FillErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Restituito quando si verifica un errore durante un'operazione di riempimento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il **FillError** evento consente di determinare se l'operazione di riempimento deve continuare dopo l'errore si verifica. Esempi di quando il **FillError** evento può verificarsi sono:  
  
-   I dati aggiunti a un `DataSet` non può essere convertito in un tipo common language runtime senza perdita di precisione.  
  
-   La riga aggiunta contiene dati che viola un vincolo che deve essere applicato a un `DataColumn` nel `DataSet`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillLoadOption">
      <MemberSignature Language="C#" Value="public System.Data.LoadOption FillLoadOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.LoadOption FillLoadOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.FillLoadOption" />
      <MemberSignature Language="VB.NET" Value="Public Property FillLoadOption As LoadOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::LoadOption FillLoadOption { System::Data::LoadOption get(); void set(System::Data::LoadOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.LoadOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Data.LoadOption" /> che determina il modo in cui l'adattatore riempie l'oggetto <see cref="T:System.Data.DataTable" /> dall'oggetto <see cref="T:System.Data.Common.DbDataReader" />.</summary>
        <value>Valore <see cref="T:System.Data.LoadOption" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Data.LoadOption" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge una classe <see cref="T:System.Data.DataTable" /> alla classe <see cref="T:System.Data.DataSet" /> specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet">Oggetto <see cref="T:System.Data.DataSet" /> in cui inserire lo schema dall'origine dati.</param>
        <param name="schemaType">Uno dei valori di <see cref="T:System.Data.SchemaType" />.</param>
        <summary>Aggiunge un oggetto <see cref="T:System.Data.DataTable" /> all'oggetto <see cref="T:System.Data.DataSet" /> specificato e di configurare lo schema in modo che corrisponda a quello dell'origine dati basato sull'oggetto <see cref="T:System.Data.SchemaType" /> specificato.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataTable" /> che contiene informazioni di schema restituite dall'origine dati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.Common.DataAdapter.FillSchema%2A> che consente di recuperare lo schema dell'origine dati utilizzando il <xref:System.Data.IDbDataAdapter.SelectCommand%2A>. L'oggetto connessione associato il <xref:System.Data.IDbDataAdapter.SelectCommand%2A> deve essere valido, ma non deve essere aperto. Se la connessione viene chiusa prima <xref:System.Data.Common.DataAdapter.FillSchema%2A> viene chiamato, verrà aperto per recuperare i dati, quindi viene chiusa. Se la connessione è aperta prima <xref:System.Data.Common.DataAdapter.FillSchema%2A> viene chiamato, rimane aperto.  
  
 Oggetto <xref:System.Data.Common.DataAdapter.FillSchema%2A> consente di aggiungere un <xref:System.Data.DataTable> alla destinazione <xref:System.Data.DataSet>. Aggiunge quindi le colonne per la <xref:System.Data.DataColumnCollection> del <xref:System.Data.DataTable>e configura gli elementi seguenti <xref:System.Data.DataColumn> proprietà, se sono presenti nell'origine dati:  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <xref:System.Data.DataColumn.AutoIncrement%2A>. È necessario impostare <xref:System.Data.DataColumn.AutoIncrementStep%2A> e <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separatamente.  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <xref:System.Data.Common.DataAdapter.FillSchema%2A> Configura inoltre la <xref:System.Data.DataTable.PrimaryKey%2A> e <xref:System.Data.DataTable.Constraints%2A> proprietà secondo le regole seguenti:  
  
-   Se vengono restituite uno o più colonne chiave primaria per la <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, verranno utilizzate come colonne chiave primaria per la <xref:System.Data.DataTable>.  
  
-   Se viene restituita alcuna colonna di chiave primaria, ma sono colonne univoche, le colonne univoche vengono utilizzate come chiave primaria se e solo se tutte le colonne univoche sono ammessi valori null. Se una o più colonne ammettono valori null, un <xref:System.Data.UniqueConstraint> viene aggiunto per il <xref:System.Data.ConstraintCollection>, ma la <xref:System.Data.DataTable.PrimaryKey%2A> non è impostata.  
  
-   Se vengono restituite sia colonne chiave primaria che colonne univoche, le colonne chiave primaria vengono utilizzate come colonne chiave primaria per la <xref:System.Data.DataTable>.  
  
> [!NOTE]
>  Archivio dati sottostante può consentire gli attributi di colonna che non sono supportati in un <xref:System.Data.DataColumn>, alcuni attributi di colonna non corretta conversione. Ad esempio, SQL Server consente a una colonna identity con un tipo di dati tinyint mentre un <xref:System.Data.DataColumn> consente solo Int16, Int32 e Int64 per avere la <xref:System.Data.DataColumn.AutoIncrement%2A> set di proprietà. `FillSchema` Ignora senza avvisare i casi in cui il <xref:System.Data.DataColumn> non può eseguire un mirroring accurato dell'origine dati e viene generata alcuna eccezione.  
  
 Si noti che le chiavi primarie e i vincoli unique vengono aggiunti il <xref:System.Data.ConstraintCollection> in base alle regole precedenti, ma altri vincoli non vengono aggiunti i tipi.  
  
Se il cluster univoco viene definito l'indice in una colonna o colonne in una tabella di SQL Server e il vincolo di chiave primaria è definito in un set diverso di colonne, quindi verranno restituiti i nomi delle colonne nell'indice cluster. Per restituire il nome o i nomi delle colonne chiave primaria, utilizzare un hint per la query con l'istruzione SELECT che specifica il nome dell'indice di chiave primaria. Per ulteriori informazioni sulla specifica di hint per la query, vedere [Hint per la Query (Transact-SQL)](/sql/t-sql/queries/hints-transact-sql-query).  
  
 Se il <xref:System.Data.Common.DataAdapter> rileva colonne duplicate durante la compilazione di un <xref:System.Data.DataTable>, genera nomi per le colonne successive, usando il modello "*columnname*1", "*columnname*2", "*columnname*3" e così via. Se i dati in ingresso contengano colonne senza nome, questi vengono collocati nel <xref:System.Data.DataSet> secondo il criterio "Column1", "Column2" e così via. Quando più set di risultati vengono aggiunti per il <xref:System.Data.DataSet> ogni set di risultati viene inserito in una tabella separata. Set di risultati aggiuntivi sono denominati aggiungendo i valori integrali per il nome della tabella specificato (ad esempio, "Table", "Table1", "Table2" e così via). Le applicazioni che utilizzano nomi di colonna e tabella è necessario assicurarsi che non si verifichino conflitti con questi modelli di denominazione.  
  
 <xref:System.Data.Common.DataAdapter.FillSchema%2A> non restituisce alcuna riga. Utilizzare il <xref:System.Data.Common.DataAdapter.Fill%2A> metodo per aggiungere righe a un <xref:System.Data.DataTable>.  
  
> [!NOTE]
>  Quando si gestiscono istruzioni SQL batch che restituiscono più risultati, l'implementazione di <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> per il Provider di dati .NET Framework per OLE DB consente di recuperare informazioni sullo schema solo per il primo risultato. Per recuperare informazioni sullo schema per più risultati, utilizzare <xref:System.Data.Common.DbDataAdapter.Fill%2A> con il <xref:System.Data.MissingSchemaAction> impostato su `AddWithKey`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" />
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDataReader ^ dataReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="dataTable">Classe <see cref="T:System.Data.DataTable" /> da riempire dall'interfaccia <see cref="T:System.Data.IDataReader" />.</param>
        <param name="schemaType">Uno dei valori di <see cref="T:System.Data.SchemaType" />.</param>
        <param name="dataReader">Interfaccia <see cref="T:System.Data.IDataReader" /> da utilizzare come origine dati durante il riempimento della classe <see cref="T:System.Data.DataTable" />.</param>
        <summary>Aggiunge una classe <see cref="T:System.Data.DataTable" /> alla classe <see cref="T:System.Data.DataSet" /> specificata.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataTable" /> che contiene informazioni di schema restituite dall'origine dati.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable, System::Data::IDataReader ^ dataReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="dataSet">Classe <see cref="T:System.Data.DataTable" /> da riempire dall'interfaccia <see cref="T:System.Data.IDataReader" />.</param>
        <param name="schemaType">Uno dei valori di <see cref="T:System.Data.SchemaType" />.</param>
        <param name="srcTable">Nome della tabella di origine da usare per il mapping di tabelle.</param>
        <param name="dataReader">Interfaccia <see cref="T:System.Data.IDataReader" /> da utilizzare come origine dati durante il riempimento della classe <see cref="T:System.Data.DataTable" />.</param>
        <summary>Aggiunge una classe <see cref="T:System.Data.DataTable" /> alla classe <see cref="T:System.Data.DataSet" /> specificata.</summary>
        <returns>Riferimento a un insieme di oggetti <see cref="T:System.Data.DataTable" /> che sono stati aggiunti al <see cref="T:System.Data.DataSet" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public virtual System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene i parametri impostati dall'utente durante l'esecuzione di un'istruzione SQL SELECT.</summary>
        <returns>Matrice di oggetti <see cref="T:System.Data.IDataParameter" /> che contiene i parametri impostati dall'utente.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTableMappings">
      <MemberSignature Language="C#" Value="protected bool HasTableMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool HasTableMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.HasTableMappings" />
      <MemberSignature Language="VB.NET" Value="Protected Function HasTableMappings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool HasTableMappings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica se è stata creata una classe <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
        <returns>
          <see langword="true" /> se è stata creata una classe <see cref="T:System.Data.Common.DataTableMappingCollection" />; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingMappingAction">
      <MemberSignature Language="C#" Value="public System.Data.MissingMappingAction MissingMappingAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MissingMappingAction MissingMappingAction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.MissingMappingAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingMappingAction As MissingMappingAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::MissingMappingAction MissingMappingAction { System::Data::MissingMappingAction get(); void set(System::Data::MissingMappingAction value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataAdapter.MissingMappingAction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MissingMappingAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determina l'operazione da eseguire quando per i dati in arrivo non è presente una tabella o una colonna corrispondente.</summary>
        <value>Uno dei valori di <see cref="T:System.Data.MissingMappingAction" />. Il valore predefinito è <see langword="Passthrough" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.Common.DataAdapter.TableMappings%2A> proprietà fornisce il mapping master tra i record restituiti e <xref:System.Data.DataSet>.  
  
   
  
## Examples  
 Nell'esempio seguente viene creata una classe derivata, <xref:System.Data.OleDb.OleDbDataAdapter> e vengono impostate alcune delle relative proprietà.  
  
 [!code-csharp[Classic WebData DataAdapter.MissingMappingAction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataAdapter.MissingMappingAction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataAdapter.MissingMappingAction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore impostato non è uno dei valori di <see cref="T:System.Data.MissingMappingAction" />.</exception>
        <altmember cref="P:System.Data.Common.DataAdapter.MissingSchemaAction" />
      </Docs>
    </Member>
    <Member MemberName="MissingSchemaAction">
      <MemberSignature Language="C#" Value="public System.Data.MissingSchemaAction MissingSchemaAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MissingSchemaAction MissingSchemaAction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.MissingSchemaAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingSchemaAction As MissingSchemaAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::MissingSchemaAction MissingSchemaAction { System::Data::MissingSchemaAction get(); void set(System::Data::MissingSchemaAction value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataAdapter.MissingSchemaAction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MissingSchemaAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determina l'operazione da eseguire quando per lo schema <see cref="T:System.Data.DataSet" /> esistente non esistono dati in arrivo corrispondenti.</summary>
        <value>Uno dei valori di <see cref="T:System.Data.MissingSchemaAction" />. Il valore predefinito è <see langword="Add" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene creata una classe derivata, <xref:System.Data.OleDb.OleDbDataAdapter> e vengono impostate alcune delle relative proprietà.  
  
 [!code-csharp[Classic WebData DataAdapter.MissingMappingAction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataAdapter.MissingMappingAction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataAdapter.MissingMappingAction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore impostato non è uno dei valori di <see cref="T:System.Data.MissingSchemaAction" />.</exception>
        <altmember cref="P:System.Data.Common.DataAdapter.MissingMappingAction" />
      </Docs>
    </Member>
    <Member MemberName="OnFillError">
      <MemberSignature Language="C#" Value="protected virtual void OnFillError (System.Data.FillErrorEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFillError(class System.Data.FillErrorEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFillError (value As FillErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFillError(System::Data::FillErrorEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.FillErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">Un oggetto <see cref="T:System.Data.FillErrorEventArgs" />.</param>
        <summary>Richiamato quando si verifica un errore durante l'utilizzo del metodo <see langword="Fill" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetFillLoadOption">
      <MemberSignature Language="C#" Value="public void ResetFillLoadOption ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetFillLoadOption() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.ResetFillLoadOption" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetFillLoadOption ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetFillLoadOption();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reimposta la proprietà <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> allo stato predefinito e fa in modo che il metodo <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /> rispetti la proprietà <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnProviderSpecificTypes">
      <MemberSignature Language="C#" Value="public virtual bool ReturnProviderSpecificTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnProviderSpecificTypes" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReturnProviderSpecificTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReturnProviderSpecificTypes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il metodo <see langword="Fill" /> deve restituire valori specifici del provider o valori comuni conformi a CLS.</summary>
        <value>
          <see langword="true" /> se il metodo <see langword="Fill" /> deve restituire valori specifici del provider; in caso contrario, <see langword="false" /> affinché restituisca valori comuni conformi a CLS.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore predefinito è `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAcceptChangesDuringFill">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSerializeAcceptChangesDuringFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSerializeAcceptChangesDuringFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeAcceptChangesDuringFill () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldSerializeAcceptChangesDuringFill();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se la proprietà <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> deve essere mantenuta.</summary>
        <returns>
          <see langword="true" /> se la proprietà <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> è resa persistente; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeFillLoadOption">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSerializeFillLoadOption ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSerializeFillLoadOption() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeFillLoadOption () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldSerializeFillLoadOption();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se la proprietà <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> deve essere mantenuta.</summary>
        <returns>
          <see langword="true" /> se la proprietà <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> è resa persistente; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTableMappings">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeTableMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeTableMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeTableMappings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeTableMappings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se sono presenti più oggetti <see cref="T:System.Data.Common.DataTableMapping" /> e se è necessario conservarli.</summary>
        <returns>
          <see langword="true" /> se sono presenti uno o più oggetti <see cref="T:System.Data.Common.DataTableMapping" />; in caso contrario <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataAdapter.TableMappings">
      <MemberSignature Language="C#" Value="System.Data.ITableMappingCollection System.Data.IDataAdapter.TableMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ITableMappingCollection System.Data.IDataAdapter.TableMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property TableMappings As ITableMappingCollection Implements IDataAdapter.TableMappings" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::ITableMappingCollection ^ System.Data.IDataAdapter.TableMappings { System::Data::ITableMappingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataAdapter.TableMappings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ITableMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica come viene eseguito il mapping tra una tabella di origine e una tabella dataset.</summary>
        <value>Insieme che fornisce il mapping principale tra i record restituiti e l'oggetto <see cref="T:System.Data.DataSet" />. Il valore predefinito è una raccolta vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Data.Common.DataAdapter> a un'interfaccia <xref:System.Data.IDataAdapter>.  
  
 Per ulteriori informazioni, vedere <xref:System.Data.IDataAdapter.TableMappings%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableMappings">
      <MemberSignature Language="C#" Value="public System.Data.Common.DataTableMappingCollection TableMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DataTableMappingCollection TableMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.TableMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableMappings As DataTableMappingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DataTableMappingCollection ^ TableMappings { System::Data::Common::DataTableMappingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DataTableMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme che contiene il mapping principale tra una tabella di origine e un oggetto <see cref="T:System.Data.DataTable" />.</summary>
        <value>Insieme che fornisce il mapping principale tra i record restituiti e l'oggetto <see cref="T:System.Data.DataSet" />. Il valore predefinito è una raccolta vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si risolvono le modifiche, il <xref:System.Data.Common.DataAdapter> utilizza il <xref:System.Data.Common.DataTableMappingCollection> insieme per associare i nomi delle colonne utilizzate dall'origine dei dati con i nomi di colonna utilizzati dal <xref:System.Data.DataSet>.  
  
   
  
## Examples  
 Nell'esempio seguente viene utilizzata una classe derivata, <xref:System.Data.OleDb.OleDbDataAdapter>, per aggiungere <xref:System.Data.Common.DataTableMapping> oggetti relativi <xref:System.Data.Common.DataAdapter.TableMappings%2A> insieme e visualizzare il mapping di un elenco delle tabelle di origine. In questo esempio si presuppone che un <xref:System.Data.OleDb.OleDbDataAdapter> è già stato creato.  
  
 [!code-csharp[Classic WebData DataAdapter.TableMappings Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataAdapter.TableMappings Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataAdapter.TableMappings Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataAdapter.TableMappings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Update(System::Data::DataSet ^ dataSet);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">L'oggetto <see cref="T:System.Data.DataSet" /> utilizzato per aggiornare l'origine dati.</param>
        <summary>Chiama le corrispondenti istruzioni INSERT, UPDATE o DELETE per ciascuna riga inserita, aggiornata o eliminata nell'oggetto <see cref="T:System.Data.DataSet" /> specificato da un oggetto <see cref="T:System.Data.DataTable" /> denominato "Table."</summary>
        <returns>Numero di righe aggiornate correttamente dall'oggetto <see cref="T:System.Data.DataSet" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'aggiornamento viene eseguito dalla riga. Per ogni riga inserita, modificata ed eliminata, i <xref:System.Data.Common.DataAdapter.Update%2A> metodo determina il tipo di modifica che è stata eseguita su di esso (Insert, Update o Delete). A seconda del tipo di modifica, il `Insert`, `Update,` o `Delete` modello di comando viene eseguito per propagare la riga modificata l'origine dati. Quando un'applicazione chiama il <xref:System.Data.Common.DataAdapter.Update%2A> (metodo), il <xref:System.Data.Common.DataAdapter> esamina il <xref:System.Data.DataRow.RowState%2A> , proprietà ed esegue le istruzioni INSERT, UPDATE o DELETE necessarie in modo iterativo per ogni riga, in base all'ordine degli indici configurati nel <xref:System.Data.DataSet>. Ad esempio, <xref:System.Data.Common.DataAdapter.Update%2A> potrebbe eseguire un'istruzione DELETE, seguita da un'istruzione INSERT e quindi un'altra istruzione DELETE, a causa dell'ordinamento delle righe di <xref:System.Data.DataTable>.  
  
 Si noti che queste istruzioni non vengono eseguite come un processo batch. ogni riga viene aggiornata singolarmente. Un'applicazione può chiamare il <xref:System.Data.DataSet.GetChanges%2A> in situazioni in cui è necessario controllare la sequenza di tipi di istruzione (ad esempio, inserire prima dell'aggiornamento). Per ulteriori informazioni, vedere [l'aggiornamento di origini dati con DataAdapter](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).  
  
 Se le istruzioni INSERT, UPDATE o DELETE non sono state specificate, il <xref:System.Data.Common.DataAdapter.Update%2A> metodo genera un'eccezione. Tuttavia, è possibile creare un <xref:System.Data.SqlClient.SqlCommandBuilder> o <xref:System.Data.OleDb.OleDbCommandBuilder> oggetto per generare automaticamente le istruzioni SQL per gli aggiornamenti a tabella singola, se si imposta la `SelectCommand` proprietà di un provider di dati .NET Framework. Quindi, generate da tutte le istruzioni SQL aggiuntive non si imposta la **CommandBuilder**. Questa logica di generazione richiede informazioni della colonna chiave deve essere presente nel <xref:System.Data.DataSet>. Per ulteriori informazioni vedere [la generazione di comandi tramite commandbuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Il <xref:System.Data.Common.DataAdapter.Update%2A> che consente di recuperare le righe dalla tabella elencata nel primo mapping prima di eseguire un aggiornamento. Il <xref:System.Data.Common.DataAdapter.Update%2A> quindi aggiorna la riga utilizzando il valore di <xref:System.Data.IDbCommand.UpdatedRowSource%2A> proprietà. Tutte le eventuali righe restituite vengono ignorate.  
  
 Dopo che tutti i dati vengono caricati nuovamente il <xref:System.Data.DataSet>, il <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> evento viene generato, consentendo all'utente di controllare il riconciliato <xref:System.Data.DataSet> riga e le eventuali parametri di output restituiti dal comando. Dopo una riga viene aggiornata correttamente, vengono accettate le modifiche di tale riga.  
  
 Quando si utilizza <xref:System.Data.Common.DataAdapter.Update%2A>, l'ordine di esecuzione è il seguente:  
  
1.  I valori di <xref:System.Data.DataRow> vengono spostati i valori dei parametri.  
  
2.  Viene generato l'evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>.  
  
3.  Esegue il comando.  
  
4.  Se il comando è impostato su `FirstReturnedRecord`, quindi il primo risultato restituito è inserito nel <xref:System.Data.DataRow>.  
  
5.  Se sono presenti parametri di output, questi vengono collocati nel <xref:System.Data.DataRow>.  
  
6.  Viene generato l'evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>.  
  
7.  Chiamata del metodo <xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=nameWithType>. Questo caso verrà generato sia il <xref:System.Data.DataTable.RowChanging?displayProperty=nameWithType> e <xref:System.Data.DataTable.RowChanged?displayProperty=nameWithType> gli eventi per l'aggiornamento <xref:System.Data.DataRow>.  
  
 Ogni comando associato il <xref:System.Data.Common.DataAdapter> in genere è una raccolta di parametri associata. I parametri sono mappati alla riga corrente tramite il `SourceColumn` e `SourceVersion` le proprietà di un provider di dati .NET `Parameter` classe. `SourceColumn` fa riferimento a un <xref:System.Data.DataTable> colonna che il <xref:System.Data.Common.DataAdapter> riferimenti per ottenere i valori dei parametri per la riga corrente.  
  
 `SourceColumn` fa riferimento al nome della colonna non mappata prima i mapping delle tabelle sono stati applicati. Se `SourceColumn` fa riferimento a una colonna inesistente, l'azione eseguita dipende da uno dei seguenti <xref:System.Data.MissingMappingAction> valori.  
  
|Valore di enumerazione|Azione eseguita|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|Utilizzare i nomi di tabella in e i nomi di colonna di origine di <xref:System.Data.DataSet> se è presente alcun mapping.|  
|`MissingMappingAction.Ignore`|Oggetto <xref:System.SystemException> viene generato. Quando i mapping vengono impostati in modo esplicito, la mancanza di mapping per un parametro di input è in genere il risultato di un errore.|  
|`MissingMappingAction.Error`|Oggetto <xref:System.SystemException> viene generato.|  
  
 Il `SourceColumn` proprietà viene utilizzata anche per il mapping del valore per l'output o i parametri di input/output del `DataSet`. Se fa riferimento a una colonna inesistente, viene generata un'eccezione.  
  
 Il `SourceVersion` proprietà di un provider di dati .NET `Parameter` classe determina se utilizzare la versione Original, Current o Proposed del valore della colonna. Questa funzionalità viene spesso utilizzata per includere i valori originali nella clausola WHERE di un'istruzione UPDATE per verificare la presenza di eventuali violazioni alla concorrenza ottimistica.  
  
 La chiamata di <xref:System.Data.DataSet.AcceptChanges%2A> metodo o <xref:System.Data.DataTable.AcceptChanges%2A> metodo verrà eseguito il commit di tutte le modifiche nel <xref:System.Data.DataSet> o <xref:System.Data.DataTable>. Se uno di questi metodi vengono chiamato prima di <xref:System.Data.Common.DbDataAdapter.Update%2A> metodo viene chiamato, nessuna modifica verrà eseguito il commit quando il <xref:System.Data.Common.DbDataAdapter.Update%2A> metodo viene chiamato, a meno che non sono state apportate altre modifiche <xref:System.Data.DataSet.AcceptChanges%2A> o <xref:System.Data.DataTable.AcceptChanges%2A> è stato chiamato.  
  
> [!NOTE]
>  Se si verifica un errore durante l'aggiornamento di una riga, viene generata un'eccezione e l'esecuzione dell'aggiornamento non è più disponibile. Per continuare l'operazione di aggiornamento senza generare eccezioni quando viene rilevato un errore, impostare il <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> proprietà `true` prima di chiamare <xref:System.Data.Common.DbDataAdapter.Update%2A>. È anche possibile rispondere agli errori in una riga all'interno di `RowUpdated` evento di un oggetto DataAdapter. Per continuare l'operazione di aggiornamento senza generare un'eccezione all'interno di `RowUpdated` set di eventi, il <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> proprietà del <xref:System.Data.Common.RowUpdatedEventArgs> a <xref:System.Data.UpdateStatus.Continue>.  
>   
>  Per ogni colonna che viene propagata all'origine dati nel <xref:System.Data.Common.DataAdapter.Update%2A>, è necessario aggiungere un parametro per il `InsertCommand`, `UpdateCommand`, o `DeleteCommand`. Il `SourceColumn` proprietà del parametro deve essere impostata sul nome della colonna. Questa impostazione indica che il valore del parametro non è impostato manualmente, ma da cui proviene la colonna specifica nella riga attualmente elaborata.  
  
   
  
## Examples  
 Nell'esempio seguente viene utilizzata la classe derivata, <xref:System.Data.OleDb.OleDbDataAdapter>a <xref:System.Data.Common.DataAdapter.Update%2A> l'origine dati.  
  
 [!code-csharp[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataAdapter.IDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataAdapter.IDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Tabella di origine non valida.</exception>
        <exception cref="T:System.Data.DBConcurrencyException">Un tentativo di esecuzione di un'istruzione INSERT, UPDATE o DELETE non ha avuto effetto su alcun record.</exception>
      </Docs>
    </Member>
  </Members>
</Type>