<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DbProviderServices.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ce0d0df986ee3200f4eb6f71535ee4608a56f099.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ce0d0df986ee3200f4eb6f71535ee4608a56f099</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbProviderServices">
          <source>The factory for building command definitions; use the type of this object as the argument to the IServiceProvider.GetService method on the provider factory;</source>
          <target state="translated">La factory per compilare le definizioni dei comandi; utilizzare il tipo di questo oggetto come argomento al metodo di IServiceProvider.GetService sulla factory del provider.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbProviderServices">
          <source>No content here will be updated; please do not add material here.</source>
          <target state="translated">Nessun contenuto verrà aggiornato qui. Non aggiungere materiale qui.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderServices" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderServices" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbProviderServices">
          <source>Creates a command definition object from the specified command definition.</source>
          <target state="translated">Crea un oggetto definizione dei comandi dalla definizione dei comandi specificata.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.CommandTrees.DbCommandTree)">
          <source>The command tree.</source>
          <target state="translated">Albero dei comandi.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.CommandTrees.DbCommandTree)">
          <source>Creates command definition from command tree.</source>
          <target state="translated">Crea una definizione dei comandi dall'albero dei comandi.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.CommandTrees.DbCommandTree)">
          <source>The created command definition.</source>
          <target state="translated">La definizione di comando creata.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbCommand)">
          <source>The command used to create command definition.</source>
          <target state="translated">Il comando utilizzato per creare una definizione di comando.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbCommand)">
          <source>Creates a command definition that uses a specified command.</source>
          <target state="translated">Crea una definizione di comando che utilizza un comando specificato.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbCommand)">
          <source>The created command definition that uses a specified command.</source>
          <target state="translated">Definizione di comando che utilizza un comando specificato.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
          <source>The manifest.</source>
          <target state="translated">Manifesto.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
          <source>The command tree.</source>
          <target state="translated">Albero dei comandi.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
          <source>Creates command definition from specified manifest andcommand tree.</source>
          <target state="translated">Crea una definizione dei comandi dal manifesto specificato e dall'albero dei comandi.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
          <source>The created command definition.</source>
          <target state="translated">La definizione di comando creata.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Connection to a non-existent database that needs to be created and populated with the store objects indicated with the storeItemCollection parameter.</source>
          <target state="translated">Connessione a un database inesistente che deve essere creato e popolato con gli oggetti dell'archivio indicati dal parametro storeItemCollection.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Execution timeout for any commands needed to create the database.</source>
          <target state="translated">Timeout dell'esecuzione per tutti i comandi necessari per creare il database.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>The collection of all store items based on which the script should be created.</source>
          <target state="translated">Insieme di tutti gli elementi dell'archivio in base ai quali dovrà essere creato lo script.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Creates a database indicated by connection and creates schema objects.</source>
          <target state="translated">Crea un database indicato dalla connessione e crea gli oggetti dello schema.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)">
          <source>The provider manifest token identifying the target version.</source>
          <target state="translated">Token del manifesto del provider che identifica la versione di destinazione.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)">
          <source>The structure of the database.</source>
          <target state="translated">Struttura del database.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Generates a data definition langauge (DDL script that creates schema objects (tables, primary keys, foreign keys) based on the contents of the StoreItemCollection parameter and targeted for the version of the database corresponding to the provider manifest token.</source>
          <target state="translated">Genera uno script Data Definition Language (DDL) che crea oggetti dello schema (tabelle, chiavi primarie, chiavi esterne) in base al contenuto del parametro StoreItemCollection e la cui destinazione è la versione del database corrispondente al token del manifesto del provider.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)">
          <source>A DDL script that creates schema objects based on the contents of the StoreItemCollection parameter and targeted for the version of the database corresponding to the provider manifest token.</source>
          <target state="translated">Script DDL che crea oggetti dello schema in base al contenuto del parametro StoreItemCollection e la cui destinazione è la versione del database corrispondente al token del manifesto del provider.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
          <source>Provider manifest previously retrieved from the store provider.</source>
          <target state="translated">Manifesto del provider recuperato precedentemente dal provider dell'archivio.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
          <source>Command tree for the statement.</source>
          <target state="translated">Struttura ad albero comandi per l'istruzione.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
          <source>Creates a command definition object for the specified provider manifest and command tree.</source>
          <target state="translated">Crea un oggetto definizione dei comandi per il manifesto del provider e la struttura ad albero comandi specificati.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
          <source>An executable command definition object.</source>
          <target state="translated">Oggetto definizione dei comandi eseguibile.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Connection to a database whose existence is verified by this method.</source>
          <target state="translated">Connessione a un database la cui esistenza viene verificata da questo metodo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Execution timeout for any commands needed to determine the existence of the database.</source>
          <target state="translated">Timeout dell'esecuzione per tutti i comandi necessari per determinare l'esistenza del database.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>The collection of all store items contained in the database whose existence is determined by this method.</source>
          <target state="translated">Insieme di tutti gli elementi dell'archivio contenuti nel database la cui esistenza è determinata da questo metodo.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Returns a value indicating whether a given database exists on the server and whether schema objects contained in the storeItemCollection have been created.</source>
          <target state="translated">Restituisce un valore che indica se un determinato database esiste nel server e se sono stati creati oggetti dello schema contenuti in storeItemCollection.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>True if the provider can deduce the database only based on the connection.</source>
          <target state="translated">True se il provider può dedurre il database solo in base alla connessione.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbCreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Connection to a non-existent database that needs to be created and populated with the store objects indicated with the storeItemCollection parameter.</source>
          <target state="translated">Connessione a un database inesistente che deve essere creato e popolato con gli oggetti dell'archivio indicati dal parametro storeItemCollection.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbCreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Execution timeout for any commands needed to create the database.</source>
          <target state="translated">Timeout dell'esecuzione per tutti i comandi necessari per creare il database.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbCreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>The collection of all store items based on which the script should be created.</source>
          <target state="translated">Insieme di tutti gli elementi dell'archivio in base ai quali dovrà essere creato lo script.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbCreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Creates a database indicated by connection and creates schema objects (tables, primary keys, foreign keys) based on the contents of a StoreItemCollection.</source>
          <target state="translated">Crea un database indicato dalla connessione e crea oggetti dello schema (tabelle, chiavi primarie, chiavi esterne) in base al contenuto di un StoreItemCollection.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbCreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)">
          <source>The provider manifest token identifying the target version.</source>
          <target state="translated">Token del manifesto del provider che identifica la versione di destinazione.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbCreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)">
          <source>The structure of the database.</source>
          <target state="translated">Struttura del database.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbCreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Generates a data definition langauge (DDL script that creates schema objects (tables, primary keys, foreign keys) based on the contents of the StoreItemCollection parameter and targeted for the version of the database corresponding to the provider manifest token.</source>
          <target state="translated">Genera uno script Data Definition Language (DDL) che crea oggetti dello schema (tabelle, chiavi primarie, chiavi esterne) in base al contenuto del parametro StoreItemCollection e la cui destinazione è la versione del database corrispondente al token del manifesto del provider.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbCreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)">
          <source>A DDL script that creates schema objects based on the contents of the StoreItemCollection parameter and targeted for the version of the database corresponding to the provider manifest token.</source>
          <target state="translated">Script DDL che crea oggetti dello schema in base al contenuto del parametro StoreItemCollection e la cui destinazione è la versione del database corrispondente al token del manifesto del provider.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Connection to a database whose existence is verified by this method.</source>
          <target state="translated">Connessione a un database la cui esistenza viene verificata da questo metodo.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Execution timeout for any commands needed to determine the existence of the database.</source>
          <target state="translated">Timeout dell'esecuzione per tutti i comandi necessari per determinare l'esistenza del database.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>The structure of the database whose existence is determined by this method.</source>
          <target state="translated">Struttura del database la cui esistenza è determinata da questo metodo.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Returns a value indicating whether a given database exists on the server and whether schema objects contained in the storeItemCollection have been created.</source>
          <target state="translated">Restituisce un valore che indica se un determinato database esiste nel server e se sono stati creati oggetti dello schema contenuti in storeItemCollection.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if the database indicated by the connection and the storeItemCollection parameter exists; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph> se il database indicato dalla connessione e il parametro storeItemCollection esistono; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbDeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Connection to an existing database that needs to be deleted.</source>
          <target state="translated">Connessione a un database esistente che deve essere eliminato.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbDeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Execution timeout for any commands needed to delete the database.</source>
          <target state="translated">Timeout dell'esecuzione per tutti i comandi necessari per eliminare il database.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbDeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>The structure of the database to be deleted.</source>
          <target state="translated">Struttura del database da eliminare.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbDeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Deletes all store objects specified in the store item collection from the database and the database itself.</source>
          <target state="translated">Elimina dal database tutti gli oggetti dell'archivio specificati nell'insieme di elementi dell'archivio e il database stesso.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbGetSpatialServices(System.String)">
          <source>The token information associated with the provider manifest.</source>
          <target state="translated">Informazioni del token associate al manifesto del provider.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbGetSpatialServices(System.String)">
          <source>Gets the spatial services for the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderServices" /&gt;</ph>.</source>
          <target state="translated">Ottiene i servizi spaziali per <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderServices" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DbGetSpatialServices(System.String)">
          <source>The spatial services.</source>
          <target state="translated">Servizi spaziali.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Connection to an existing database that needs to be deleted.</source>
          <target state="translated">Connessione a un database esistente che deve essere eliminato.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Execution timeout for any commands needed to delete the database.</source>
          <target state="translated">Timeout dell'esecuzione per tutti i comandi necessari per eliminare il database.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>The structure of the database to be deleted.</source>
          <target state="translated">Struttura del database da eliminare.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.DeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
          <source>Deletes all store objects specified in the store item collection from the database and the database itself.</source>
          <target state="translated">Elimina dal database tutti gli oggetti dell'archivio specificati nell'insieme di elementi dell'archivio e il database stesso.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetDbProviderManifest(System.String)">
          <source>The token information associated with the provider manifest.</source>
          <target state="translated">Informazioni del token associate al manifesto del provider.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetDbProviderManifest(System.String)">
          <source>When overridden in a derived class, returns an instance of a class that derives from the DbProviderManifest.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, restituisce un'istanza di una classe che deriva da DbProviderManifest.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetDbProviderManifest(System.String)">
          <source>A DbProviderManifest object that represents the provider manifest.</source>
          <target state="translated">Oggetto DbProviderManifest che rappresenta il manifesto del provider.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetDbProviderManifestToken(System.Data.Common.DbConnection)">
          <source>Connection to provider.</source>
          <target state="translated">Connessione al provider.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetDbProviderManifestToken(System.Data.Common.DbConnection)">
          <source>Returns provider manifest token given a connection.</source>
          <target state="translated">Restituisce il token del manifesto del provider corrispondente a una connessione.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetDbProviderManifestToken(System.Data.Common.DbConnection)">
          <source>The provider manifest token for the specified connection.</source>
          <target state="translated">Token del manifesto del provider corrispondente alla connessione specificata.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetDbSpatialDataReader(System.Data.Common.DbDataReader,System.String)">
          <source>The reader where the spatial data came from.</source>
          <target state="translated">Lettore da cui provengono i dati spaziali.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetDbSpatialDataReader(System.Data.Common.DbDataReader,System.String)">
          <source>The token information associated with the provider manifest.</source>
          <target state="translated">Informazioni del token associate al manifesto del provider.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetDbSpatialDataReader(System.Data.Common.DbDataReader,System.String)">
          <source>Gets the spatial data reader for the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderServices" /&gt;</ph>.</source>
          <target state="translated">Ottiene il lettore di dati spaziali per <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderServices" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetDbSpatialDataReader(System.Data.Common.DbDataReader,System.String)">
          <source>The spatial data reader.</source>
          <target state="translated">Lettori dati spaziali.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetProviderFactory(System.Data.Common.DbConnection)">
          <source>The connection to use.</source>
          <target state="translated">Connessione da utilizzare.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetProviderFactory(System.Data.Common.DbConnection)">
          <source>Retrieves the DbProviderFactory based on the specified DbConnection.</source>
          <target state="translated">Recupera l'elemento DbProviderFactory in base all'elemento DbConnection specificato.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetProviderFactory(System.Data.Common.DbConnection)">
          <source>The retrieved DbProviderFactory.</source>
          <target state="translated">Oggetto DbProviderFactory recuperato.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetProviderManifest(System.String)">
          <source>The token information associated with the provider manifest.</source>
          <target state="translated">Informazioni del token associate al manifesto del provider.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetProviderManifest(System.String)">
          <source>Returns the provider manifest by using the specified version information.</source>
          <target state="translated">Restituisce il manifesto del provider utilizzando le informazioni sulla versione specificate.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetProviderManifest(System.String)">
          <source>The provider manifest by using the specified version information.</source>
          <target state="translated">Il manifesto del provider utilizzando le informazioni sulla versione specificate.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetProviderManifestToken(System.Data.Common.DbConnection)">
          <source>Connection to provider.</source>
          <target state="translated">Connessione al provider.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetProviderManifestToken(System.Data.Common.DbConnection)">
          <source>Returns provider manifest token.</source>
          <target state="translated">Restituisce il token del manifesto del provider.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetProviderManifestToken(System.Data.Common.DbConnection)">
          <source>The provider manifest token.</source>
          <target state="translated">Token del manifesto del provider.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetProviderServices(System.Data.Common.DbConnection)">
          <source>Connection to provider.</source>
          <target state="translated">Connessione al provider.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetProviderServices(System.Data.Common.DbConnection)">
          <source>Returns providers given a connection.</source>
          <target state="translated">Restituisce i provider corrispondenti a una connessione.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetProviderServices(System.Data.Common.DbConnection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderServices" /&gt;</ph> instanced based on the specified connection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderServices" /&gt;</ph> istanziato in base alla connessione specificata.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetSpatialDataReader(System.Data.Common.DbDataReader,System.String)">
          <source>The reader where the spatial data came from.</source>
          <target state="translated">Lettore da cui provengono i dati spaziali.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetSpatialDataReader(System.Data.Common.DbDataReader,System.String)">
          <source>The token information associated with the provider manifest.</source>
          <target state="translated">Informazioni del token associate al manifesto del provider.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetSpatialDataReader(System.Data.Common.DbDataReader,System.String)">
          <source>Gets the spatial data reader for the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderServices" /&gt;</ph>.</source>
          <target state="translated">Ottiene il lettore di dati spaziali per <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderServices" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetSpatialDataReader(System.Data.Common.DbDataReader,System.String)">
          <source>The spatial data reader.</source>
          <target state="translated">Lettori dati spaziali.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetSpatialServices(System.String)">
          <source>The token information associated with the provider manifest.</source>
          <target state="translated">Informazioni del token associate al manifesto del provider.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetSpatialServices(System.String)">
          <source>Gets the spatial services for the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderServices" /&gt;</ph>.</source>
          <target state="translated">Ottiene i servizi spaziali per <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderServices" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.GetSpatialServices(System.String)">
          <source>The spatial services.</source>
          <target state="translated">Servizi spaziali.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.SetDbParameterValue(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Object)">
          <source>The parameter.</source>
          <target state="translated">Parametro.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.SetDbParameterValue(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Object)">
          <source>The type of the parameter.</source>
          <target state="translated">Tipo del parametro.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.SetDbParameterValue(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Object)">
          <source>The value of the parameter.</source>
          <target state="translated">Valore del parametro.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderServices.SetDbParameterValue(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Object)">
          <source>Sets the parameter values for the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderServices" /&gt;</ph>.</source>
          <target state="translated">Imposta i valori del parametro per <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderServices" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>