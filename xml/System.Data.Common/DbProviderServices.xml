<Type Name="DbProviderServices" FullName="System.Data.Common.DbProviderServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="58def4e7f57364b6b298824d19a2c495f7dd3388" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36691728" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbProviderServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbProviderServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbProviderServices" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbProviderServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbProviderServices abstract" />
  <TypeSignature Language="F#" Value="type DbProviderServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>La factory per compilare le definizioni dei comandi; utilizzare il tipo di questo oggetto come argomento al metodo di IServiceProvider.GetService sulla factory del provider.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nessun contenuto verrÃ  aggiornato qui. Non aggiungere materiale qui.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbProviderServices ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbProviderServices();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Common.DbProviderServices" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateCommandDefinition">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un oggetto definizione dei comandi dalla definizione dei comandi specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateCommandDefinition">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommandDefinition CreateCommandDefinition (System.Data.Common.CommandTrees.DbCommandTree commandTree);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommandDefinition CreateCommandDefinition(class System.Data.Common.CommandTrees.DbCommandTree commandTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.CommandTrees.DbCommandTree)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommandDefinition (commandTree As DbCommandTree) As DbCommandDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommandDefinition ^ CreateCommandDefinition(System::Data::Common::CommandTrees::DbCommandTree ^ commandTree);" />
      <MemberSignature Language="F#" Value="member this.CreateCommandDefinition : System.Data.Common.CommandTrees.DbCommandTree -&gt; System.Data.Common.DbCommandDefinition" Usage="dbProviderServices.CreateCommandDefinition commandTree" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommandDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandTree" Type="System.Data.Common.CommandTrees.DbCommandTree" />
      </Parameters>
      <Docs>
        <param name="commandTree">Albero dei comandi.</param>
        <summary>Crea una definizione dei comandi dall'albero dei comandi.</summary>
        <returns>La definizione di comando creata.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCommandDefinition">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.DbCommandDefinition CreateCommandDefinition (System.Data.Common.DbCommand prototype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Common.DbCommandDefinition CreateCommandDefinition(class System.Data.Common.DbCommand prototype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCommandDefinition (prototype As DbCommand) As DbCommandDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::Common::DbCommandDefinition ^ CreateCommandDefinition(System::Data::Common::DbCommand ^ prototype);" />
      <MemberSignature Language="F#" Value="abstract member CreateCommandDefinition : System.Data.Common.DbCommand -&gt; System.Data.Common.DbCommandDefinition&#xA;override this.CreateCommandDefinition : System.Data.Common.DbCommand -&gt; System.Data.Common.DbCommandDefinition" Usage="dbProviderServices.CreateCommandDefinition prototype" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommandDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prototype" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="prototype">Il comando utilizzato per creare una definizione di comando.</param>
        <summary>Crea una definizione di comando che utilizza un comando specificato.</summary>
        <returns>Definizione di comando che utilizza un comando specificato.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCommandDefinition">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommandDefinition CreateCommandDefinition (System.Data.Common.DbProviderManifest providerManifest, System.Data.Common.CommandTrees.DbCommandTree commandTree);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommandDefinition CreateCommandDefinition(class System.Data.Common.DbProviderManifest providerManifest, class System.Data.Common.CommandTrees.DbCommandTree commandTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommandDefinition (providerManifest As DbProviderManifest, commandTree As DbCommandTree) As DbCommandDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommandDefinition ^ CreateCommandDefinition(System::Data::Common::DbProviderManifest ^ providerManifest, System::Data::Common::CommandTrees::DbCommandTree ^ commandTree);" />
      <MemberSignature Language="F#" Value="member this.CreateCommandDefinition : System.Data.Common.DbProviderManifest * System.Data.Common.CommandTrees.DbCommandTree -&gt; System.Data.Common.DbCommandDefinition" Usage="dbProviderServices.CreateCommandDefinition (providerManifest, commandTree)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommandDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerManifest" Type="System.Data.Common.DbProviderManifest" />
        <Parameter Name="commandTree" Type="System.Data.Common.CommandTrees.DbCommandTree" />
      </Parameters>
      <Docs>
        <param name="providerManifest">Manifesto.</param>
        <param name="commandTree">Albero dei comandi.</param>
        <summary>Crea una definizione dei comandi dal manifesto specificato e dall'albero dei comandi.</summary>
        <returns>La definizione di comando creata.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabase">
      <MemberSignature Language="C#" Value="public void CreateDatabase (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateDatabase(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateDatabase(System::Data::Common::DbConnection ^ connection, Nullable&lt;int&gt; commandTimeout, System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection);" />
      <MemberSignature Language="F#" Value="member this.CreateDatabase : System.Data.Common.DbConnection * Nullable&lt;int&gt; * System.Data.Metadata.Edm.StoreItemCollection -&gt; unit" Usage="dbProviderServices.CreateDatabase (connection, commandTimeout, storeItemCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">Connessione a un database inesistente che deve essere creato e popolato con gli oggetti dell'archivio indicati dal parametro storeItemCollection.</param>
        <param name="commandTimeout">Timeout dell'esecuzione per tutti i comandi necessari per creare il database.</param>
        <param name="storeItemCollection">Insieme di tutti gli elementi dell'archivio in base ai quali dovrÃ  essere creato lo script.</param>
        <summary>Crea un database indicato dalla connessione e crea gli oggetti dello schema.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabaseScript">
      <MemberSignature Language="C#" Value="public string CreateDatabaseScript (string providerManifestToken, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string CreateDatabaseScript(string providerManifestToken, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateDatabaseScript(System::String ^ providerManifestToken, System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection);" />
      <MemberSignature Language="F#" Value="member this.CreateDatabaseScript : string * System.Data.Metadata.Edm.StoreItemCollection -&gt; string" Usage="dbProviderServices.CreateDatabaseScript (providerManifestToken, storeItemCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerManifestToken" Type="System.String" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="providerManifestToken">Token del manifesto del provider che identifica la versione di destinazione.</param>
        <param name="storeItemCollection">Struttura del database.</param>
        <summary>Genera uno script Data Definition Language (DDL) che crea oggetti dello schema (tabelle, chiavi primarie, chiavi esterne) in base al contenuto del parametro StoreItemCollection e la cui destinazione Ã¨ la versione del database corrispondente al token del manifesto del provider.</summary>
        <returns>Script DDL che crea oggetti dello schema in base al contenuto del parametro StoreItemCollection e la cui destinazione Ã¨ la versione del database corrispondente al token del manifesto del provider.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommandDefinition">
      <MemberSignature Language="C#" Value="protected abstract System.Data.Common.DbCommandDefinition CreateDbCommandDefinition (System.Data.Common.DbProviderManifest providerManifest, System.Data.Common.CommandTrees.DbCommandTree commandTree);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbCommandDefinition CreateDbCommandDefinition(class System.Data.Common.DbProviderManifest providerManifest, class System.Data.Common.CommandTrees.DbCommandTree commandTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateDbCommandDefinition (providerManifest As DbProviderManifest, commandTree As DbCommandTree) As DbCommandDefinition" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Data::Common::DbCommandDefinition ^ CreateDbCommandDefinition(System::Data::Common::DbProviderManifest ^ providerManifest, System::Data::Common::CommandTrees::DbCommandTree ^ commandTree);" />
      <MemberSignature Language="F#" Value="abstract member CreateDbCommandDefinition : System.Data.Common.DbProviderManifest * System.Data.Common.CommandTrees.DbCommandTree -&gt; System.Data.Common.DbCommandDefinition" Usage="dbProviderServices.CreateDbCommandDefinition (providerManifest, commandTree)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommandDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerManifest" Type="System.Data.Common.DbProviderManifest" />
        <Parameter Name="commandTree" Type="System.Data.Common.CommandTrees.DbCommandTree" />
      </Parameters>
      <Docs>
        <param name="providerManifest">Manifesto del provider recuperato precedentemente dal provider dell'archivio.</param>
        <param name="commandTree">Struttura ad albero comandi per l'istruzione.</param>
        <summary>Crea un oggetto definizione dei comandi per il manifesto del provider e la struttura ad albero comandi specificati.</summary>
        <returns>Oggetto definizione dei comandi eseguibile.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseExists">
      <MemberSignature Language="C#" Value="public bool DatabaseExists (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DatabaseExists(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DatabaseExists(System::Data::Common::DbConnection ^ connection, Nullable&lt;int&gt; commandTimeout, System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection);" />
      <MemberSignature Language="F#" Value="member this.DatabaseExists : System.Data.Common.DbConnection * Nullable&lt;int&gt; * System.Data.Metadata.Edm.StoreItemCollection -&gt; bool" Usage="dbProviderServices.DatabaseExists (connection, commandTimeout, storeItemCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">Connessione a un database la cui esistenza viene verificata da questo metodo.</param>
        <param name="commandTimeout">Timeout dell'esecuzione per tutti i comandi necessari per determinare l'esistenza del database.</param>
        <param name="storeItemCollection">Insieme di tutti gli elementi dell'archivio contenuti nel database la cui esistenza Ã¨ determinata da questo metodo.</param>
        <summary>Restituisce un valore che indica se un determinato database esiste nel server e se sono stati creati oggetti dello schema contenuti in storeItemCollection.</summary>
        <returns>True se il provider puÃ² dedurre il database solo in base alla connessione.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbCreateDatabase">
      <MemberSignature Language="C#" Value="protected virtual void DbCreateDatabase (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DbCreateDatabase(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DbCreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DbCreateDatabase(System::Data::Common::DbConnection ^ connection, Nullable&lt;int&gt; commandTimeout, System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection);" />
      <MemberSignature Language="F#" Value="abstract member DbCreateDatabase : System.Data.Common.DbConnection * Nullable&lt;int&gt; * System.Data.Metadata.Edm.StoreItemCollection -&gt; unit&#xA;override this.DbCreateDatabase : System.Data.Common.DbConnection * Nullable&lt;int&gt; * System.Data.Metadata.Edm.StoreItemCollection -&gt; unit" Usage="dbProviderServices.DbCreateDatabase (connection, commandTimeout, storeItemCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">Connessione a un database inesistente che deve essere creato e popolato con gli oggetti dell'archivio indicati dal parametro storeItemCollection.</param>
        <param name="commandTimeout">Timeout dell'esecuzione per tutti i comandi necessari per creare il database.</param>
        <param name="storeItemCollection">Insieme di tutti gli elementi dell'archivio in base ai quali dovrÃ  essere creato lo script.</param>
        <summary>Crea un database indicato dalla connessione e crea oggetti dello schema (tabelle, chiavi primarie, chiavi esterne) in base al contenuto di un StoreItemCollection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbCreateDatabaseScript">
      <MemberSignature Language="C#" Value="protected virtual string DbCreateDatabaseScript (string providerManifestToken, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string DbCreateDatabaseScript(string providerManifestToken, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DbCreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ DbCreateDatabaseScript(System::String ^ providerManifestToken, System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection);" />
      <MemberSignature Language="F#" Value="abstract member DbCreateDatabaseScript : string * System.Data.Metadata.Edm.StoreItemCollection -&gt; string&#xA;override this.DbCreateDatabaseScript : string * System.Data.Metadata.Edm.StoreItemCollection -&gt; string" Usage="dbProviderServices.DbCreateDatabaseScript (providerManifestToken, storeItemCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerManifestToken" Type="System.String" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="providerManifestToken">Token del manifesto del provider che identifica la versione di destinazione.</param>
        <param name="storeItemCollection">Struttura del database.</param>
        <summary>Genera uno script Data Definition Language (DDL) che crea oggetti dello schema (tabelle, chiavi primarie, chiavi esterne) in base al contenuto del parametro StoreItemCollection e la cui destinazione Ã¨ la versione del database corrispondente al token del manifesto del provider.</summary>
        <returns>Script DDL che crea oggetti dello schema in base al contenuto del parametro StoreItemCollection e la cui destinazione Ã¨ la versione del database corrispondente al token del manifesto del provider.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbDatabaseExists">
      <MemberSignature Language="C#" Value="protected virtual bool DbDatabaseExists (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DbDatabaseExists(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool DbDatabaseExists(System::Data::Common::DbConnection ^ connection, Nullable&lt;int&gt; commandTimeout, System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection);" />
      <MemberSignature Language="F#" Value="abstract member DbDatabaseExists : System.Data.Common.DbConnection * Nullable&lt;int&gt; * System.Data.Metadata.Edm.StoreItemCollection -&gt; bool&#xA;override this.DbDatabaseExists : System.Data.Common.DbConnection * Nullable&lt;int&gt; * System.Data.Metadata.Edm.StoreItemCollection -&gt; bool" Usage="dbProviderServices.DbDatabaseExists (connection, commandTimeout, storeItemCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">Connessione a un database la cui esistenza viene verificata da questo metodo.</param>
        <param name="commandTimeout">Timeout dell'esecuzione per tutti i comandi necessari per determinare l'esistenza del database.</param>
        <param name="storeItemCollection">Struttura del database la cui esistenza Ã¨ determinata da questo metodo.</param>
        <summary>Restituisce un valore che indica se un determinato database esiste nel server e se sono stati creati oggetti dello schema contenuti in storeItemCollection.</summary>
        <returns>
          <see langword="True" /> se il database indicato dalla connessione e il parametro storeItemCollection esistono; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbDeleteDatabase">
      <MemberSignature Language="C#" Value="protected virtual void DbDeleteDatabase (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DbDeleteDatabase(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DbDeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DbDeleteDatabase(System::Data::Common::DbConnection ^ connection, Nullable&lt;int&gt; commandTimeout, System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection);" />
      <MemberSignature Language="F#" Value="abstract member DbDeleteDatabase : System.Data.Common.DbConnection * Nullable&lt;int&gt; * System.Data.Metadata.Edm.StoreItemCollection -&gt; unit&#xA;override this.DbDeleteDatabase : System.Data.Common.DbConnection * Nullable&lt;int&gt; * System.Data.Metadata.Edm.StoreItemCollection -&gt; unit" Usage="dbProviderServices.DbDeleteDatabase (connection, commandTimeout, storeItemCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">Connessione a un database esistente che deve essere eliminato.</param>
        <param name="commandTimeout">Timeout dell'esecuzione per tutti i comandi necessari per eliminare il database.</param>
        <param name="storeItemCollection">Struttura del database da eliminare.</param>
        <summary>Elimina dal database tutti gli oggetti dell'archivio specificati nell'insieme di elementi dell'archivio e il database stesso.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbGetSpatialServices">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Spatial.DbSpatialServices DbGetSpatialServices (string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Spatial.DbSpatialServices DbGetSpatialServices(string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DbGetSpatialServices(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DbGetSpatialServices (manifestToken As String) As DbSpatialServices" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Spatial::DbSpatialServices ^ DbGetSpatialServices(System::String ^ manifestToken);" />
      <MemberSignature Language="F#" Value="abstract member DbGetSpatialServices : string -&gt; System.Data.Spatial.DbSpatialServices&#xA;override this.DbGetSpatialServices : string -&gt; System.Data.Spatial.DbSpatialServices" Usage="dbProviderServices.DbGetSpatialServices manifestToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Spatial.DbSpatialServices</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="manifestToken">Informazioni del token associate al manifesto del provider.</param>
        <summary>Ottiene i servizi spaziali per <see cref="T:System.Data.Common.DbProviderServices" />.</summary>
        <returns>Servizi spaziali.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabase">
      <MemberSignature Language="C#" Value="public void DeleteDatabase (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteDatabase(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteDatabase(System::Data::Common::DbConnection ^ connection, Nullable&lt;int&gt; commandTimeout, System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection);" />
      <MemberSignature Language="F#" Value="member this.DeleteDatabase : System.Data.Common.DbConnection * Nullable&lt;int&gt; * System.Data.Metadata.Edm.StoreItemCollection -&gt; unit" Usage="dbProviderServices.DeleteDatabase (connection, commandTimeout, storeItemCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">Connessione a un database esistente che deve essere eliminato.</param>
        <param name="commandTimeout">Timeout dell'esecuzione per tutti i comandi necessari per eliminare il database.</param>
        <param name="storeItemCollection">Struttura del database da eliminare.</param>
        <summary>Elimina dal database tutti gli oggetti dell'archivio specificati nell'insieme di elementi dell'archivio e il database stesso.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbProviderManifest">
      <MemberSignature Language="C#" Value="protected abstract System.Data.Common.DbProviderManifest GetDbProviderManifest (string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbProviderManifest GetDbProviderManifest(string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetDbProviderManifest(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetDbProviderManifest (manifestToken As String) As DbProviderManifest" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Data::Common::DbProviderManifest ^ GetDbProviderManifest(System::String ^ manifestToken);" />
      <MemberSignature Language="F#" Value="abstract member GetDbProviderManifest : string -&gt; System.Data.Common.DbProviderManifest" Usage="dbProviderServices.GetDbProviderManifest manifestToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderManifest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="manifestToken">Informazioni del token associate al manifesto del provider.</param>
        <summary>Quando sottoposto a override in una classe derivata, restituisce un'istanza di una classe che deriva da DbProviderManifest.</summary>
        <returns>Oggetto DbProviderManifest che rappresenta il manifesto del provider.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbProviderManifestToken">
      <MemberSignature Language="C#" Value="protected abstract string GetDbProviderManifestToken (System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetDbProviderManifestToken(class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetDbProviderManifestToken(System.Data.Common.DbConnection)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetDbProviderManifestToken (connection As DbConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetDbProviderManifestToken(System::Data::Common::DbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="abstract member GetDbProviderManifestToken : System.Data.Common.DbConnection -&gt; string" Usage="dbProviderServices.GetDbProviderManifestToken connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">Connessione al provider.</param>
        <summary>Restituisce il token del manifesto del provider corrispondente a una connessione.</summary>
        <returns>Token del manifesto del provider corrispondente alla connessione specificata.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbSpatialDataReader">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Spatial.DbSpatialDataReader GetDbSpatialDataReader (System.Data.Common.DbDataReader fromReader, string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Spatial.DbSpatialDataReader GetDbSpatialDataReader(class System.Data.Common.DbDataReader fromReader, string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetDbSpatialDataReader(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbSpatialDataReader (fromReader As DbDataReader, manifestToken As String) As DbSpatialDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Spatial::DbSpatialDataReader ^ GetDbSpatialDataReader(System::Data::Common::DbDataReader ^ fromReader, System::String ^ manifestToken);" />
      <MemberSignature Language="F#" Value="abstract member GetDbSpatialDataReader : System.Data.Common.DbDataReader * string -&gt; System.Data.Spatial.DbSpatialDataReader&#xA;override this.GetDbSpatialDataReader : System.Data.Common.DbDataReader * string -&gt; System.Data.Spatial.DbSpatialDataReader" Usage="dbProviderServices.GetDbSpatialDataReader (fromReader, manifestToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Spatial.DbSpatialDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromReader" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fromReader">Lettore da cui provengono i dati spaziali.</param>
        <param name="manifestToken">Informazioni del token associate al manifesto del provider.</param>
        <summary>Ottiene il lettore di dati spaziali per <see cref="T:System.Data.Common.DbProviderServices" />.</summary>
        <returns>Lettori dati spaziali.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderFactory">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbProviderFactory GetProviderFactory (System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbProviderFactory GetProviderFactory(class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetProviderFactory(System.Data.Common.DbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProviderFactory (connection As DbConnection) As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::DbProviderFactory ^ GetProviderFactory(System::Data::Common::DbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="static member GetProviderFactory : System.Data.Common.DbConnection -&gt; System.Data.Common.DbProviderFactory" Usage="System.Data.Common.DbProviderServices.GetProviderFactory connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">Connessione da utilizzare.</param>
        <summary>Recupera l'elemento DbProviderFactory in base all'elemento DbConnection specificato.</summary>
        <returns>Oggetto DbProviderFactory recuperato.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderManifest">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbProviderManifest GetProviderManifest (string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbProviderManifest GetProviderManifest(string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetProviderManifest(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProviderManifest (manifestToken As String) As DbProviderManifest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbProviderManifest ^ GetProviderManifest(System::String ^ manifestToken);" />
      <MemberSignature Language="F#" Value="member this.GetProviderManifest : string -&gt; System.Data.Common.DbProviderManifest" Usage="dbProviderServices.GetProviderManifest manifestToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderManifest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="manifestToken">Informazioni del token associate al manifesto del provider.</param>
        <summary>Restituisce il manifesto del provider utilizzando le informazioni sulla versione specificate.</summary>
        <returns>Il manifesto del provider utilizzando le informazioni sulla versione specificate.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderManifestToken">
      <MemberSignature Language="C#" Value="public string GetProviderManifestToken (System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetProviderManifestToken(class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetProviderManifestToken(System.Data.Common.DbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProviderManifestToken (connection As DbConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetProviderManifestToken(System::Data::Common::DbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="member this.GetProviderManifestToken : System.Data.Common.DbConnection -&gt; string" Usage="dbProviderServices.GetProviderManifestToken connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">Connessione al provider.</param>
        <summary>Restituisce il token del manifesto del provider.</summary>
        <returns>Token del manifesto del provider.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderServices">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbProviderServices GetProviderServices (System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbProviderServices GetProviderServices(class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetProviderServices(System.Data.Common.DbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProviderServices (connection As DbConnection) As DbProviderServices" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::DbProviderServices ^ GetProviderServices(System::Data::Common::DbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="static member GetProviderServices : System.Data.Common.DbConnection -&gt; System.Data.Common.DbProviderServices" Usage="System.Data.Common.DbProviderServices.GetProviderServices connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderServices</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">Connessione al provider.</param>
        <summary>Restituisce i provider corrispondenti a una connessione.</summary>
        <returns>
          <see cref="T:System.Data.Common.DbProviderServices" /> istanziato in base alla connessione specificata.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpatialDataReader">
      <MemberSignature Language="C#" Value="public System.Data.Spatial.DbSpatialDataReader GetSpatialDataReader (System.Data.Common.DbDataReader fromReader, string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Spatial.DbSpatialDataReader GetSpatialDataReader(class System.Data.Common.DbDataReader fromReader, string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetSpatialDataReader(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpatialDataReader (fromReader As DbDataReader, manifestToken As String) As DbSpatialDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Spatial::DbSpatialDataReader ^ GetSpatialDataReader(System::Data::Common::DbDataReader ^ fromReader, System::String ^ manifestToken);" />
      <MemberSignature Language="F#" Value="member this.GetSpatialDataReader : System.Data.Common.DbDataReader * string -&gt; System.Data.Spatial.DbSpatialDataReader" Usage="dbProviderServices.GetSpatialDataReader (fromReader, manifestToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Spatial.DbSpatialDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromReader" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fromReader">Lettore da cui provengono i dati spaziali.</param>
        <param name="manifestToken">Informazioni del token associate al manifesto del provider.</param>
        <summary>Ottiene il lettore di dati spaziali per <see cref="T:System.Data.Common.DbProviderServices" />.</summary>
        <returns>Lettori dati spaziali.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpatialServices">
      <MemberSignature Language="C#" Value="public System.Data.Spatial.DbSpatialServices GetSpatialServices (string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Spatial.DbSpatialServices GetSpatialServices(string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetSpatialServices(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpatialServices (manifestToken As String) As DbSpatialServices" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Spatial::DbSpatialServices ^ GetSpatialServices(System::String ^ manifestToken);" />
      <MemberSignature Language="F#" Value="member this.GetSpatialServices : string -&gt; System.Data.Spatial.DbSpatialServices" Usage="dbProviderServices.GetSpatialServices manifestToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Spatial.DbSpatialServices</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="manifestToken">Informazioni del token associate al manifesto del provider.</param>
        <summary>Ottiene i servizi spaziali per <see cref="T:System.Data.Common.DbProviderServices" />.</summary>
        <returns>Servizi spaziali.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDbParameterValue">
      <MemberSignature Language="C#" Value="protected virtual void SetDbParameterValue (System.Data.Common.DbParameter parameter, System.Data.Metadata.Edm.TypeUsage parameterType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDbParameterValue(class System.Data.Common.DbParameter parameter, class System.Data.Metadata.Edm.TypeUsage parameterType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.SetDbParameterValue(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetDbParameterValue (parameter As DbParameter, parameterType As TypeUsage, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetDbParameterValue(System::Data::Common::DbParameter ^ parameter, System::Data::Metadata::Edm::TypeUsage ^ parameterType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetDbParameterValue : System.Data.Common.DbParameter * System.Data.Metadata.Edm.TypeUsage * obj -&gt; unit&#xA;override this.SetDbParameterValue : System.Data.Common.DbParameter * System.Data.Metadata.Edm.TypeUsage * obj -&gt; unit" Usage="dbProviderServices.SetDbParameterValue (parameter, parameterType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="parameterType" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">Parametro.</param>
        <param name="parameterType">Tipo del parametro.</param>
        <param name="value">Valore del parametro.</param>
        <summary>Imposta i valori del parametro per <see cref="T:System.Data.Common.DbProviderServices" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>