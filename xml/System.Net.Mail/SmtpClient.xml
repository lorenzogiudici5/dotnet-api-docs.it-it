<Type Name="SmtpClient" FullName="System.Net.Mail.SmtpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a08441f0337d38154de70b59c934c2ded049518e" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34285223" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SmtpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SmtpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.SmtpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SmtpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SmtpClient : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("SmtpClient and its network of types are poorly designed, we strongly recommend you use https://github.com/jstedfast/MailKit and https://github.com/jstedfast/MimeKit instead")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Consente alle applicazioni di inviare posta elettronica mediante il protocollo SMTP (Simple Mail Transfer Protocol).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Net.Mail.SmtpClient> classe viene utilizzata per inviare posta elettronica a un server SMTP per il recapito. Il protocollo SMTP è definito in RFC 2821, disponibile all'indirizzo [ https://www.ietf.org ](https://www.ietf.org/).  
  
 Le classi illustrate nella tabella seguente vengono utilizzate per costruire messaggi di posta elettronica che possono essere inviati tramite <xref:System.Net.Mail.SmtpClient>.  
  
|Classe|Descrizione|  
|-----------|-----------------|  
|<xref:System.Net.Mail.Attachment>|Rappresenta i file allegati. Questa classe consente di allegare file, flussi o testo a un messaggio di posta elettronica.|  
|<xref:System.Net.Mail.MailAddress>|Rappresenta l'indirizzo di posta elettronica del mittente e destinatari.|  
|<xref:System.Net.Mail.MailMessage>|Rappresenta un messaggio di posta elettronica.|  
  
 Per creare e inviare un messaggio di posta elettronica tramite <xref:System.Net.Mail.SmtpClient>, è necessario specificare le informazioni seguenti:  
  
-   Il server host SMTP che si utilizza per inviare posta elettronica. Vedere il <xref:System.Net.Mail.SmtpClient.Host%2A> e <xref:System.Net.Mail.SmtpClient.Port%2A> proprietà.  
  
-   Credenziali per l'autenticazione, se richiesto dal server SMTP. Vedere la proprietà <xref:System.Net.Mail.SmtpClient.Credentials%2A>.  
  
-   L'indirizzo di posta elettronica del mittente. Vedere il <xref:System.Net.Mail.SmtpClient.Send%2A> e <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metodi che accettano un `from` parametro. Vedere anche il <xref:System.Net.Mail.MailMessage.From%2A?displayProperty=nameWithType> proprietà.  
  
-   L'indirizzo di posta elettronica o gli indirizzi dei destinatari. Vedere il <xref:System.Net.Mail.SmtpClient.Send%2A> e <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metodi che accettano un `recipient` parametro. Vedere anche il <xref:System.Net.Mail.MailMessage.To%2A?displayProperty=nameWithType> proprietà.  
  
-   Il contenuto del messaggio. Vedere il <xref:System.Net.Mail.SmtpClient.Send%2A> e <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metodi che accettano un `body` parametro. Vedere anche il <xref:System.Net.Mail.MailMessage.Body%2A?displayProperty=nameWithType> proprietà.  
  
 Per includere un allegato con un messaggio di posta elettronica, creare innanzitutto l'allegato utilizzando il <xref:System.Net.Mail.Attachment> classe e quindi aggiungerlo al messaggio utilizzando il <xref:System.Net.Mail.MailMessage.Attachments%2A?displayProperty=nameWithType> proprietà. A seconda del lettore di posta elettronica utilizzato dai destinatari e il tipo di file dell'allegato, alcuni destinatari potrebbero non essere in grado di leggere l'allegato. Per i client che non è possibile visualizzare l'allegato nel formato originale, è possibile specificare visualizzazioni alternative usando la <xref:System.Net.Mail.MailMessage.AlternateViews%2A?displayProperty=nameWithType> proprietà.  
  
 In .NET Framework, è possibile utilizzare l'applicazione o file di configurazione macchina per specificare default host, porta e valori delle credenziali per tutti i <xref:System.Net.Mail.SmtpClient> oggetti. Per ulteriori informazioni, vedere [ &lt;mailSettings&gt; elemento (impostazioni di rete)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). .NET core non consente di configurare impostazioni predefinite. In alternativa, è necessario impostare le proprietà rilevanti in <xref:System.Net.Mail.SmtpClient> direttamente.  
  
 Per inviare il messaggio di posta elettronica e il blocco durante l'attesa per il messaggio di posta elettronica deve essere trasmesso al server SMTP, utilizzare uno dei sincroni <xref:System.Net.Mail.SmtpClient.Send%2A> metodi. Per consentire al thread del programma principale di continuare l'esecuzione mentre viene trasmesso il messaggio di posta elettronica, utilizzare uno dei asincrona <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metodi. Il <xref:System.Net.Mail.SmtpClient.SendCompleted> evento viene generato quando un <xref:System.Net.Mail.SmtpClient.SendAsync%2A> al completamento dell'operazione. Per ricevere questo evento, è necessario aggiungere un <xref:System.Net.Mail.SendCompletedEventHandler> delegare <xref:System.Net.Mail.SmtpClient.SendCompleted>. Il <xref:System.Net.Mail.SendCompletedEventHandler> delegato deve fare riferimento a un metodo di callback che gestisce la notifica di <xref:System.Net.Mail.SmtpClient.SendCompleted> eventi. Per annullare una trasmissione del messaggio di posta elettronica asincrona, utilizzare il <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> metodo.  
  
> [!NOTE]
>  Se è in corso la trasmissione di un messaggio di posta elettronica e si chiama <xref:System.Net.Mail.SmtpClient.SendAsync%2A> o <xref:System.Net.Mail.SmtpClient.Send%2A> nuovamente, si riceverà un <xref:System.InvalidOperationException>.  
  
 La connessione stabilita dall'istanza corrente del <xref:System.Net.Mail.SmtpClient> classe al server SMTP può essere utilizzata nuovamente se un'applicazione desidera inviare più messaggi nello stesso server SMTP. Questo è particolarmente utile se si utilizza l'autenticazione o crittografia stabilire una connessione al server SMTP. Il processo di autenticazione e di stabilire una sessione TLS può essere operazioni dispendiose. Un requisito per ristabilire la connessione per ogni messaggio durante l'invio di una grande quantità di posta elettronica allo stesso server SMTP potrebbe avere un impatto significativo sulle prestazioni. Esistono numerose applicazioni di posta elettronica con volumi elevati che inviano gli aggiornamenti di stato tramite posta elettronica, distribuzioni newsletter, o avvisi di posta elettronica. Numerose applicazioni client di posta elettronica supportano anche una modalità non in linea in cui gli utenti possono creare molti messaggi di posta elettronica vengono inviati in un secondo momento quando viene stabilita una connessione al server SMTP. È tipico per un client di posta elettronica inviare tutti i messaggi SMTP a un server SMTP specifico (fornito dal provider di servizi Internet) che quindi inoltra il messaggio di posta elettronica ad altri server SMTP.  
  
 Il <xref:System.Net.Mail.SmtpClient> implementazione della classe in un pool le connessioni SMTP in modo da evitare il sovraccarico di ristabilire una connessione per ogni messaggio allo stesso server. Un'applicazione può riutilizzare lo stesso <xref:System.Net.Mail.SmtpClient> oggetto per l'invio di molti messaggi di posta elettronica diversi nello stesso server SMTP e in più server SMTP diversi. Di conseguenza, non è possibile determinare quando un'applicazione viene completata utilizzando il <xref:System.Net.Mail.SmtpClient> oggetto e deve essere pulite.  
  
 Quando viene terminata una sessione di SMTP e il client desidera terminare la connessione, è necessario inviare un messaggio QUIT al server per indicare che è non disponibile alcun più messaggi da inviare. In questo modo il server di liberare le risorse associate alla connessione dal client ed elaborare i messaggi inviati dal client.  
  
 Il <xref:System.Net.Mail.SmtpClient> classe non ha alcun `Finalize` (metodo), in modo un'applicazione deve chiamare <xref:System.Net.Mail.SmtpClient.Dispose%2A> liberare le risorse in modo esplicito. Il <xref:System.Net.Mail.SmtpClient.Dispose%2A> metodo scorre tutte le connessioni stabilite per il server SMTP specificato nella <xref:System.Net.Mail.SmtpClient.Host%2A> proprietà e invia un messaggio QUIT aggiungendo la connessione TCP termina correttamente. Il <xref:System.Net.Mail.SmtpClient.Dispose%2A> metodo inoltre rilascia le risorse non gestite usate dal <xref:System.Net.Sockets.Socket> e, facoltativamente, Elimina le risorse gestite.  
  
 Chiamare il metodo <xref:System.Net.Mail.SmtpClient.Dispose%2A> dopo aver terminato di utilizzare l'oggetto <xref:System.Net.Mail.SmtpClient>. Il metodo <xref:System.Net.Mail.SmtpClient.Dispose%2A> lascia l'oggetto <xref:System.Net.Mail.SmtpClient> in una condizione di inutilizzabilità. Dopo la chiamata <xref:System.Net.Mail.SmtpClient.Dispose%2A>, è necessario rilasciare tutti i riferimenti al <xref:System.Net.Mail.SmtpClient> in modo che il garbage collector può recuperare la memoria che di <xref:System.Net.Mail.SmtpClient> occupata.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come inviare un messaggio di posta elettronica in modo asincrono.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Net.Mime" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Mail.SmtpClient" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Mail.SmtpClient" /> tramite le impostazioni del file di configurazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza la <xref:System.Net.Mail.SmtpClient.Host%2A>, <xref:System.Net.Mail.SmtpClient.Credentials%2A>, e <xref:System.Net.Mail.SmtpClient.Port%2A> proprietà per il nuovo <xref:System.Net.Mail.SmtpClient> utilizzando le impostazioni dell'applicazione o un file di configurazione macchina. Per ulteriori informazioni, vedere [ &lt;mailSettings&gt; elemento (impostazioni di rete)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come inviare un messaggio di posta elettronica.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 Per un esempio di \<mailSettings > nodo all'applicazione o un file di configurazione di computer, vedere [ &lt;mailSettings&gt; elemento (impostazioni di rete)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">per costruire un <see cref="T:System.Net.Mail.SmtpClient" />. Enumerazione associata: <see cref="F:System.Net.Mail.SmtpAccess.Connect" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">Classe <see cref="T:System.String" /> contenente il nome o l'indirizzo IP del computer host utilizzato per le transazioni SMTP.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Mail.SmtpClient" /> che invia la posta elettronica mediante il server SMTP specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `host` parametro viene utilizzato per inizializzare il valore della <xref:System.Net.Mail.SmtpClient.Host%2A> proprietà. Il <xref:System.Net.Mail.SmtpClient.Credentials%2A> e <xref:System.Net.Mail.SmtpClient.Port%2A> vengono inizializzate utilizzando le impostazioni dell'applicazione o un file di configurazione macchina. Se `host` è `null` o uguale a <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.SmtpClient.Host%2A> viene inizializzato con le impostazioni dell'applicazione o un file di configurazione macchina.  
  
 Per ulteriori informazioni sull'utilizzo dell'applicazione e file di configurazione macchina, vedere [ &lt;mailSettings&gt; elemento (impostazioni di rete)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Se vengono specificate informazioni mediante <xref:System.Net.Mail.SmtpClient> costruttori o le proprietà, le impostazioni del file di configurazione esegue l'override di queste informazioni.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come chiamare questo costruttore.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">per costruire un <see cref="T:System.Net.Mail.SmtpClient" />. Enumerazione associata: <see cref="F:System.Net.Mail.SmtpAccess.Connect" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host, int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">Classe <see cref="T:System.String" /> contenente il nome o l'indirizzo IP dell'host utilizzato per le transazioni SMTP.</param>
        <param name="port">
          <see cref="T:System.Int32" /> maggiore di zero che contiene la porta da usare in <c>host</c>.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Mail.SmtpClient" /> che invia la posta elettronica usando la porta e il server SMTP specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `host` e `port` parametri impostare il valore della <xref:System.Net.Mail.SmtpClient.Host%2A> e <xref:System.Net.Mail.SmtpClient.Port%2A> proprietà, rispettivamente. Se `host` è `null` o uguale a <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.SmtpClient.Host%2A> viene inizializzato con le impostazioni dell'applicazione o un file di configurazione macchina. Se `port` è zero, <xref:System.Net.Mail.SmtpClient.Port%2A> viene inizializzato con le impostazioni dell'applicazione o un file di configurazione macchina. Il <xref:System.Net.Mail.SmtpClient.Credentials%2A> proprietà viene inizializzata utilizzando le impostazioni dell'applicazione o un file di configurazione macchina.  
  
 Per ulteriori informazioni sull'utilizzo dell'applicazione e file di configurazione macchina, vedere [ &lt;mailSettings&gt; elemento (impostazioni di rete)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Se vengono specificate informazioni mediante <xref:System.Net.Mail.SmtpClient> costruttori o le proprietà, le impostazioni del file di configurazione esegue l'override di queste informazioni.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come chiamare questo costruttore.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="port" /> non può essere minore di zero.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Per specificare la porta. Enumerazione associata: <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Client certificates not used")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specificare i certificati da utilizzare per stabilire la connessione SSL (Secure Sockets Layer).</summary>
        <value>Classe <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />, contenente uno o più certificati client. Il valore predefinito viene derivato dagli attributi di configurazione dei messaggi in un file di configurazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I certificati client sono, per impostazione predefinita, facoltativo. Tuttavia, la configurazione del server potrebbe richiedere che il client di presentare un certificato valido come parte della negoziazione della connessione iniziale.  
  
> [!NOTE]
>  Il Framework memorizza nella cache le sessioni SSL quando vengono creati e tenta di riutilizzare una sessione memorizzati nella cache per una nuova richiesta, se possibile. Durante il tentativo di riutilizzare una sessione SSL, il Framework utilizza il primo elemento della <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> (se è presente uno), o tenta di riutilizzare una sessione anonima se <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> è vuoto.  
  
   
  
## Examples  
 Esempio di codice seguente consente di stabilire una connessione SSL con il server SMTP e utilizza la connessione per inviare un messaggio di posta elettronica.  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentialsByHost Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentialsByHost Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentialsByHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentialsByHost ^ Credentials { System::Net::ICredentialsByHost ^ get(); void set(System::Net::ICredentialsByHost ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialsByHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta le credenziali utilizzate per autenticare il mittente.</summary>
        <value>Interfaccia <see cref="T:System.Net.ICredentialsByHost" /> che rappresenta le credenziali da utilizzare per l'autenticazione oppure <see langword="null" /> se non è stata specificata alcuna credenziale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alcuni server SMTP richiedono che l'autenticazione del client prima che il server Invia messaggio di posta elettronica per suo conto. Per utilizzare le credenziali di rete predefinito, è possibile impostare il <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> a `true` anziché l'impostazione di questa proprietà. Se il <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> è impostata su `false,` quindi il valore impostato nel <xref:System.Net.Mail.SmtpClient.Credentials%2A> proprietà da utilizzare per le credenziali quando ci si connette al server. Se il <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> è impostata su `false` e <xref:System.Net.Mail.SmtpClient.Credentials%2A> proprietà non è stata impostata, la posta elettronica viene inviato al server in modo anonimo.  
  
 Le informazioni sulle credenziali può essere specificati utilizzando l'applicazione e i file di configurazione macchina. Per ulteriori informazioni, vedere [ &lt;mailSettings&gt; elemento (impostazioni di rete)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Se vengono specificate informazioni mediante il <xref:System.Net.Mail.SmtpClient.Credentials%2A> le impostazioni del file di configurazione esegue l'override di proprietà, queste informazioni.  
  
> [!CAUTION]
>  Se si specificano le credenziali per l'autenticazione di base, sono inviati al server in testo non crittografato. Questo può costituire un problema di sicurezza perché le credenziali possono essere visualizzate e quindi usate da altri utenti.  
  
   
  
## Examples  
 L'esempio di codice seguente viene illustrato come impostare le credenziali utilizzate per inviare un messaggio di posta elettronica.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Non è possibile modificare il valore di questa proprietà mentre viene inviato un messaggio di posta elettronica.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeliveryFormat">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryFormat DeliveryFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryFormat DeliveryFormat" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryFormat As SmtpDeliveryFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryFormat DeliveryFormat { System::Net::Mail::SmtpDeliveryFormat get(); void set(System::Net::Mail::SmtpDeliveryFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il formato di consegna usato da <see cref="T:System.Net.Mail.SmtpClient" /> per inviare la posta elettronica.</summary>
        <value>Restituisce <see cref="T:System.Net.Mail.SmtpDeliveryFormat" />.  Il formato di consegna utilizzato da <see cref="T:System.Net.Mail.SmtpClient" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliveryMethod">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryMethod DeliveryMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryMethod DeliveryMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryMethod As SmtpDeliveryMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryMethod DeliveryMethod { System::Net::Mail::SmtpDeliveryMethod get(); void set(System::Net::Mail::SmtpDeliveryMethod value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica la modalità di gestione dei messaggi di posta elettronica in uscita.</summary>
        <value>Enumerazione <see cref="T:System.Net.Mail.SmtpDeliveryMethod" /> che indica la modalità di recapito dei messaggi di posta elettronica.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metodi di recapito includono:  
  
-   Un server SMTP.  
  
-   Spostare il messaggio di posta elettronica nella directory di prelievo per IIS, che quindi invia il messaggio.  
  
-   Spostamento del messaggio in una directory specificata da <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> per il successivo recapito da un'altra applicazione.  
  
 Il valore predefinito per questa proprietà può essere impostato anche in una macchina o file di configurazione dell'applicazione. Qualsiasi modifica apportata al <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> override le impostazioni del file di configurazione delle proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Invia un messaggio QUIT al server SMTP, normalmente termina la connessione TCP e rilascia tutte le risorse utilizzate dall'istanza corrente della classe <see cref="T:System.Net.Mail.SmtpClient" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La connessione stabilita dall'istanza corrente del <xref:System.Net.Mail.SmtpClient> classe al server SMTP può essere utilizzata nuovamente se un'applicazione desidera inviare più messaggi nello stesso server SMTP. Questo è particolarmente utile se si utilizza l'autenticazione o crittografia stabilire una connessione al server SMTP. Il processo di autenticazione e di stabilire una sessione TLS può essere operazioni dispendiose. Un requisito per ristabilire la connessione per ogni messaggio durante l'invio di una grande quantità di posta elettronica allo stesso server SMTP potrebbe avere un impatto significativo sulle prestazioni. Esistono numerose applicazioni di posta elettronica con volumi elevati che inviano gli aggiornamenti di stato tramite posta elettronica, distribuzioni newsletter, o avvisi di posta elettronica. Numerose applicazioni client di posta elettronica supportano anche una modalità non in linea in cui gli utenti possono creare molti messaggi di posta elettronica vengono inviati in un secondo momento quando viene stabilita una connessione al server SMTP. È tipico per un client di posta elettronica inviare tutti i messaggi SMTP a un server SMTP specifico (fornito dal provider di servizi Internet) che quindi inoltra il messaggio di posta elettronica ad altri server SMTP.  
  
 Il <xref:System.Net.Mail.SmtpClient> implementazione della classe in un pool le connessioni SMTP in modo da evitare il sovraccarico di ristabilire una connessione per ogni messaggio allo stesso server. Un'applicazione può riutilizzare lo stesso <xref:System.Net.Mail.SmtpClient> oggetto per l'invio di molti messaggi di posta elettronica diversi nello stesso server SMTP e in più server SMTP diversi. Di conseguenza, non è possibile determinare quando un'applicazione viene completata utilizzando il <xref:System.Net.Mail.SmtpClient> oggetto e deve essere pulite.  
  
 Quando viene terminata una sessione di SMTP e il client desidera terminare la connessione, è necessario inviare un messaggio QUIT al server per indicare che è non disponibile alcun più messaggi da inviare. In questo modo il server di liberare le risorse associate alla connessione dal client ed elaborare i messaggi inviati dal client.  
  
 Il <xref:System.Net.Mail.SmtpClient.Dispose%2A> metodi scorre tutte le connessioni stabilite e inviare un messaggio QUIT a ogni server SMTP, aggiungendo la connessione TCP termina correttamente. Questi metodi anche rilasciano le risorse non gestite usate dal <xref:System.Net.Sockets.Socket> e, facoltativamente, eliminare le risorse gestite.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invia un messaggio QUIT al server SMTP, normalmente termina la connessione TCP e rilascia tutte le risorse utilizzate dall'istanza corrente della classe <see cref="T:System.Net.Mail.SmtpClient" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La connessione stabilita dall'istanza corrente del <xref:System.Net.Mail.SmtpClient> classe al server SMTP può essere utilizzata nuovamente se un'applicazione desidera inviare più messaggi nello stesso server SMTP. Questo è particolarmente utile se si utilizza l'autenticazione o crittografia stabilire una connessione al server SMTP. Il processo di autenticazione e di stabilire una sessione TLS può essere operazioni dispendiose. Un requisito per ristabilire la connessione per ogni messaggio durante l'invio di una grande quantità di posta elettronica allo stesso server SMTP potrebbe avere un impatto significativo sulle prestazioni. Esistono numerose applicazioni di posta elettronica con volumi elevati che inviano gli aggiornamenti di stato tramite posta elettronica, distribuzioni newsletter, o avvisi di posta elettronica. Numerose applicazioni client di posta elettronica supportano anche una modalità non in linea in cui gli utenti possono creare molti messaggi di posta elettronica vengono inviati in un secondo momento quando viene stabilita una connessione al server SMTP. È tipico per un client di posta elettronica inviare tutti i messaggi SMTP a un server SMTP specifico (fornito dal provider di servizi Internet) che quindi inoltra il messaggio di posta elettronica ad altri server SMTP.  
  
 Il <xref:System.Net.Mail.SmtpClient> implementazione della classe in un pool le connessioni SMTP in modo da evitare il sovraccarico di ristabilire una connessione per ogni messaggio allo stesso server. Un'applicazione può riutilizzare lo stesso <xref:System.Net.Mail.SmtpClient> oggetto per l'invio di molti messaggi di posta elettronica diversi nello stesso server SMTP e in più server SMTP diversi. Di conseguenza, non è possibile determinare quando un'applicazione viene completata utilizzando il <xref:System.Net.Mail.SmtpClient> oggetto e deve essere pulite.  
  
 Quando viene terminata una sessione di SMTP e il client desidera terminare la connessione, è necessario inviare un messaggio QUIT al server per indicare che è non disponibile alcun più messaggi da inviare. In questo modo il server di liberare le risorse associate alla connessione dal client ed elaborare i messaggi inviati dal client.  
  
 La chiamata di <xref:System.Net.Mail.SmtpClient.Dispose%2A> metodo su un <xref:System.Net.Mail.SmtpClient> oggetto che è in esecuzione asincrona <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operazione verrà annullata l'operazione di invio come se il <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> al metodo chiamato.  
  
 Il <xref:System.Net.Mail.SmtpClient> classe non ha alcun `Finalize` metodo. In modo un'applicazione deve chiamare <xref:System.Net.Mail.SmtpClient.Dispose%2A> liberare le risorse in modo esplicito.  
  
 Il <xref:System.Net.Mail.SmtpClient.Dispose%2A> metodo scorre tutte le connessioni stabilite per il server SMTP specificato nella <xref:System.Net.Mail.SmtpClient.Host%2A> proprietà e invia un messaggio QUIT aggiungendo la connessione TCP termina correttamente. Il <xref:System.Net.Mail.SmtpClient.Dispose%2A> metodo inoltre rilascia le risorse non gestite usate da sottostante <xref:System.Net.Sockets.Socket>.  
  
 Chiamare il metodo <xref:System.Net.Mail.SmtpClient.Dispose%2A> dopo aver terminato di utilizzare l'oggetto <xref:System.Net.Mail.SmtpClient>. Il metodo <xref:System.Net.Mail.SmtpClient.Dispose%2A> lascia l'oggetto <xref:System.Net.Mail.SmtpClient> in una condizione di inutilizzabilità. Dopo la chiamata <xref:System.Net.Mail.SmtpClient.Dispose%2A>, è necessario rilasciare tutti i riferimenti al <xref:System.Net.Mail.SmtpClient> in modo che il garbage collector può recuperare la memoria che di <xref:System.Net.Mail.SmtpClient> occupata.  
  
 Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Chiamare sempre il metodo <xref:System.Net.Mail.SmtpClient.Dispose%2A> prima di rilasciare l'ultimo riferimento a <xref:System.Net.Mail.SmtpClient>. In caso contrario, le risorse utilizzate non verranno liberate in modo che il garbage collector può recuperare la memoria.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Does nothing at the moment.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
        <summary>Invia un messaggio QUIT al server SMTP, normalmente termina la connessione TCP, rilascia tutte le risorse utilizzate dall'istanza corrente della classe <see cref="T:System.Net.Mail.SmtpClient" /> ed eventualmente elimina le risorse gestite. </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La connessione stabilita dall'istanza corrente del <xref:System.Net.Mail.SmtpClient> classe al server SMTP può essere utilizzata nuovamente se un'applicazione desidera inviare più messaggi nello stesso server SMTP. Questo è particolarmente utile se si utilizza l'autenticazione o crittografia stabilire una connessione al server SMTP. Il processo di autenticazione e di stabilire una sessione TLS può essere operazioni dispendiose. Un requisito per ristabilire la connessione per ogni messaggio durante l'invio di una grande quantità di posta elettronica allo stesso server SMTP potrebbe avere un impatto significativo sulle prestazioni. Esistono numerose applicazioni di posta elettronica con volumi elevati che inviano gli aggiornamenti di stato tramite posta elettronica, distribuzioni newsletter, o avvisi di posta elettronica. Numerose applicazioni client di posta elettronica supportano anche una modalità non in linea in cui gli utenti possono creare molti messaggi di posta elettronica vengono inviati in un secondo momento quando viene stabilita una connessione al server SMTP. È tipico per un client di posta elettronica inviare tutti i messaggi SMTP a un server SMTP specifico (fornito dal provider di servizi Internet) che quindi inoltra il messaggio di posta elettronica ad altri server SMTP.  
  
 Il <xref:System.Net.Mail.SmtpClient> implementazione della classe in un pool le connessioni SMTP in modo da evitare il sovraccarico di ristabilire una connessione per ogni messaggio allo stesso server. Un'applicazione può riutilizzare lo stesso <xref:System.Net.Mail.SmtpClient> oggetto per l'invio di molti messaggi di posta elettronica diversi nello stesso server SMTP e in più server SMTP diversi. Di conseguenza, non è possibile determinare quando un'applicazione viene completata utilizzando il <xref:System.Net.Mail.SmtpClient> oggetto e deve essere pulite.  
  
 Quando viene terminata una sessione di SMTP e il client desidera terminare la connessione, è necessario inviare un messaggio QUIT al server per indicare che è non disponibile alcun più messaggi da inviare. In questo modo il server di liberare le risorse associate alla connessione dal client ed elaborare i messaggi inviati dal client.  
  
 La chiamata di <xref:System.Net.Mail.SmtpClient.Dispose%2A> metodo su un <xref:System.Net.Mail.SmtpClient> oggetto che è in esecuzione asincrona <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operazione verrà annullata l'operazione di invio come se il <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> al metodo chiamato.  
  
 Il <xref:System.Net.Mail.SmtpClient> classe non ha alcun `Finalize` metodo. In modo un'applicazione deve chiamare <xref:System.Net.Mail.SmtpClient.Dispose%2A> liberare le risorse in modo esplicito.  
  
 Il <xref:System.Net.Mail.SmtpClient.Dispose%2A> metodo scorre tutte le connessioni stabilite per il server SMTP specificato nella <xref:System.Net.Mail.SmtpClient.Host%2A> proprietà e invia un messaggio QUIT aggiungendo la connessione TCP termina correttamente. Il <xref:System.Net.Mail.SmtpClient.Dispose%2A> metodo inoltre rilascia le risorse non gestite usate dal <xref:System.Net.Sockets.Socket> e, facoltativamente, Elimina le risorse gestite.  
  
 Chiamare il metodo <xref:System.Net.Mail.SmtpClient.Dispose%2A> dopo aver terminato di utilizzare l'oggetto <xref:System.Net.Mail.SmtpClient>. Il metodo <xref:System.Net.Mail.SmtpClient.Dispose%2A> lascia l'oggetto <xref:System.Net.Mail.SmtpClient> in una condizione di inutilizzabilità. Dopo la chiamata <xref:System.Net.Mail.SmtpClient.Dispose%2A>, è necessario rilasciare tutti i riferimenti al <xref:System.Net.Mail.SmtpClient> in modo che il garbage collector può recuperare la memoria che di <xref:System.Net.Mail.SmtpClient> occupata.  
  
 Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Chiamare sempre il metodo <xref:System.Net.Mail.SmtpClient.Dispose%2A> prima di rilasciare l'ultimo riferimento a <xref:System.Net.Mail.SmtpClient>. In caso contrario, le risorse utilizzate non verranno liberate in modo che il garbage collector può recuperare la memoria.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specificare se la classe <see cref="T:System.Net.Mail.SmtpClient" /> utilizza SSL (Secure Sockets Layer) per crittografare la connessione.</summary>
        <value>
          <see langword="true" /> se la classe <see cref="T:System.Net.Mail.SmtpClient" /> utilizza SSL. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> proprietà specifica se viene utilizzato SSL per accedere al server di posta elettronica SMTP specificato.  
  
 Il valore predefinito per questa proprietà può essere impostato anche in una macchina o file di configurazione dell'applicazione. Qualsiasi modifica apportata al <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> override le impostazioni del file di configurazione delle proprietà.  
  
 La <xref:System.Net.Mail.SmtpClient> classe supporta solo l'estensione del servizio SMTP per il protocollo SMTP protetto su Transport Layer Security come definito in RFC 3207. In questa modalità, la sessione SMTP inizia in un canale non crittografato, quindi viene eseguito un comando STARTTLS dal client al server per passare alla comunicazione protetta con SSL. Vedere RFC 3207 pubblicato da Internet Engineering Task Force (IETF) per ulteriori informazioni.  
  
 Un metodo di connessione alternativo è in una sessione SSL viene stabilita in anticipo prima di qualsiasi protocollo di comandi vengono inviati. Questo metodo di connessione viene talvolta chiamato SMTP/SSL, SMTP su SSL o SMTPS e per impostazione predefinita utilizza la porta 465. Questo metodo di connessione alternativo tramite SSL non è attualmente supportato.  
  
 È possibile utilizzare <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> per specificare i certificati client devono essere usati per stabilire la connessione SSL. Il <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> consente di rifiutare il certificato fornito dal server SMTP. Il <xref:System.Net.ServicePointManager.SecurityProtocol%2A> proprietà consente di specificare la versione del protocollo SSL da utilizzare.  
  
> [!NOTE]
>  Se il <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> è impostata su `true`, e il server di posta elettronica SMTP non annuncia STARTTLS nella risposta EHLO comando, quindi una chiamata al <xref:System.Net.Mail.SmtpClient.Send%2A> o <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metodi genererà un <xref:System.Net.Mail.SmtpException>.  
  
   
  
## Examples  
 Esempio di codice seguente consente di stabilire una connessione SSL con il server SMTP e utilizza la connessione per inviare un messaggio di posta elettronica.  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.EnableSsl" />
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Host" />
      <MemberSignature Language="VB.NET" Value="Public Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome o l'indirizzo IP dell'host utilizzato per le transazioni SMTP.</summary>
        <value>Classe <see cref="T:System.String" /> contenente il nome o l'indirizzo IP del computer da utilizzare per le transazioni SMTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Net.Mail.SmtpClient.Host%2A> proprietà può essere impostata inoltre mediante i costruttori o l'applicazione o file di configurazione macchina. Per ulteriori informazioni, vedere [ &lt;mailSettings&gt; elemento (impostazioni di rete)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 Se le informazioni vengono specificate mediante questa proprietà, queste informazioni sostituiscono le impostazioni del file di configurazione.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come inviare un messaggio di posta elettronica con l'host e la porta specificata in un file di configurazione dell'applicazione.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore specificato per un'operazione set è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il valore specificato per un'operazione di impostazione è uguale a <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.InvalidOperationException">Non è possibile modificare il valore di questa proprietà mentre viene inviato un messaggio di posta elettronica.</exception>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Host" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Port" />
      </Docs>
    </Member>
    <Member MemberName="OnSendCompleted">
      <MemberSignature Language="C#" Value="protected void OnSendCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSendCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSendCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSendCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che ereditano dal <xref:System.Net.Mail.SmtpClient> classe può eseguire l'override di <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> metodo per eseguire altre attività quando il <xref:System.Net.Mail.SmtpClient.SendCompleted> evento si verifica.  
  
 <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> consente inoltre alle classi derivate di gestire <xref:System.Net.Mail.SmtpClient.SendCompleted> senza associare un delegato. Questa è la tecnica consigliata per la gestione <xref:System.Net.Mail.SmtpClient.SendCompleted> in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> metodo in modo che i delegati registrati possano ricevere il <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PickupDirectoryLocation">
      <MemberSignature Language="C#" Value="public string PickupDirectoryLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PickupDirectoryLocation" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property PickupDirectoryLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PickupDirectoryLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la cartella in cui le applicazioni salvano i messaggi di posta che devono essere elaborati dal server SMTP locale.</summary>
        <value>Stringa <see cref="T:System.String" /> che specifica la directory di prelievo per i messaggi di posta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Messaggi di posta elettronica nella directory di prelievo vengono inviati automaticamente da un server SMTP locale (se presente), ad esempio IIS.  
  
 Il valore predefinito per questa proprietà può essere impostato anche in una macchina o file di configurazione dell'applicazione. Qualsiasi modifica apportata al <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> override le impostazioni del file di configurazione delle proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la porta utilizzata per le transazioni SMTP.</summary>
        <value>Struttura <see cref="T:System.Int32" /> contenente il numero della porta sull'host SMTP. Il valore predefinito è 25.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Net.Mail.SmtpClient.Port%2A> proprietà può essere impostata inoltre mediante i costruttori o l'applicazione o file di configurazione macchina. Per ulteriori informazioni sull'utilizzo dei file di configurazione, vedere [ &lt;mailSettings&gt; elemento (impostazioni di rete)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Se le informazioni vengono specificate mediante questa proprietà, queste informazioni sostituiscono le impostazioni del file di configurazione.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come inviare un messaggio di posta elettronica con l'host e la porta specificata in un file di configurazione dell'applicazione.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato per un'operazione di impostazione è minore o uguale a zero.</exception>
        <exception cref="T:System.InvalidOperationException">Non è possibile modificare il valore di questa proprietà mentre viene inviato un messaggio di posta elettronica.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Per impostare il <see cref="P:System.Net.Mail.SmtpClient.Port" /> proprietà. Enumerazione associata: <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />.</permission>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Port" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Host" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Invia un messaggio di posta elettronica a un server SMTP per la consegna. Questi metodi effettuano il blocco mentre il messaggio viene trasmesso.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As MailMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Net::Mail::MailMessage ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message">Classe <see cref="T:System.Net.Mail.MailMessage" /> contenente il messaggio da inviare.</param>
        <summary>Invia il messaggio specificato a un server SMTP per il recapito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo blocca quando viene trasmesso il messaggio di posta elettronica. È possibile specificare un valore di timeout utilizzando il <xref:System.Net.Mail.SmtpClient.Timeout%2A> proprietà per assicurarsi che il metodo restituisce dopo un determinato periodo di tempo specificato.  
  
 Prima di chiamare questo metodo, il <xref:System.Net.Mail.SmtpClient.Host%2A> e <xref:System.Net.Mail.SmtpClient.Port%2A> devono essere impostate tramite i file di configurazione impostando le relative proprietà o passando queste informazioni nel <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> costruttore.  
  
 È possibile chiamare questo metodo se è presente un messaggio inviato in modo asincrono.  
  
 Se l'host SMTP richiede le credenziali, è necessario impostare prima di chiamare questo metodo. Per specificare le credenziali, utilizzare il <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> o <xref:System.Net.Mail.SmtpClient.Credentials%2A> proprietà.  
  
 Se si riceve un <xref:System.Net.Mail.SmtpException> eccezione, controllare il <xref:System.Net.Mail.SmtpException.StatusCode%2A> della proprietà per individuare il motivo l'operazione non riuscita. Il <xref:System.Net.Mail.SmtpException> può inoltre contenere un'eccezione interna che indica il motivo per l'operazione non riuscita.  
  
 Quando si invia tramite posta elettronica <xref:System.Net.Mail.SmtpClient.Send%2A> a più destinatari e il protocollo SMTP server accetta alcuni destinatari come validi e rifiuta altri, <xref:System.Net.Mail.SmtpClient.Send%2A> Invia messaggio di posta elettronica ai destinatari accettati e quindi un <xref:System.Net.Mail.SmtpFailedRecipientsException> viene generata un'eccezione (o un <xref:System.Net.Mail.SmtpFailedRecipientException> se solo uno destinatario viene rifiutato). Oggetto <xref:System.Net.Mail.SmtpFailedRecipientsException> contiene un elenco di destinatari che sono stati rifiutati.
  
> [!NOTE]
>  Se il <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> è impostata su `true`, e il server di posta elettronica SMTP non annuncia STARTTLS nella risposta EHLO comando, quindi una chiamata al <xref:System.Net.Mail.SmtpClient.Send%2A> o <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metodi genererà un <xref:System.Net.Mail.SmtpException>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questo metodo.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">È in corso una chiamata a <see cref="T:System.Net.Mail.SmtpClient" /> da parte della classe <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" />.  - oppure - <see cref="P:System.Net.Mail.MailMessage.From" /> è <see langword="null" />.  - oppure - Non esistono destinatari specificati nelle proprietà <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> e <see cref="P:System.Net.Mail.MailMessage.Bcc" />.  - oppure - La proprietà <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> è impostata su <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> e <see cref="P:System.Net.Mail.SmtpClient.Host" /> è <see langword="null" />.  - oppure - La proprietà <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> è impostata su <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> e <see cref="P:System.Net.Mail.SmtpClient.Host" /> è uguale alla stringa vuota ("").  - oppure - La proprietà <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> è impostata su <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> e <see cref="P:System.Net.Mail.SmtpClient.Port" /> è zero, un numero negativo o un numero maggiore di 65.535.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">La connessione al server SMTP ha avuto esito negativo.  - oppure - L'autenticazione non è riuscita.  - oppure - Si è verificato un timeout dell'operazione.  - oppure - <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> è impostato su <see langword="true" /> ma la proprietà <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> è impostata su <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> o <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  - oppure - <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> è impostato su <see langword="true," /> ma il server di posta SMTP non annuncia STARTTLS nella risposta al comando EHLO.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">Non è possibile recapitare <paramref name="message" /> a uno dei destinatari in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> o <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">Non è possibile recapitare <paramref name="message" /> a due o più destinatari in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> o <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Per connettersi al server SMTP. Enumerazione associata: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string from, string recipients, string subject, string body);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string recipients, string subject, string body) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" FrameworkAlternate="netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, recipients As String, subject As String, body As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void Send (string from, string to, string subject, string body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string to, string subject, string body) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" FrameworkAlternate="netframework-4.7;netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, to As String, subject As String, body As String)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="from">Classe <see cref="T:System.String" /> contenente le informazioni sull'indirizzo del mittente del messaggio.</param>
        <param name="recipients">To be added.</param>
        <param name="to">To be added.</param>
        <param name="subject">Classe <see cref="T:System.String" /> contenente l'oggetto del messaggio.</param>
        <param name="body">Classe <see cref="T:System.String" /> contenente il corpo del messaggio.</param>
        <summary>Invia il messaggio di posta elettronica specificato a un server SMTP per la consegna. Il mittente, i destinatari, l'oggetto e il corpo del messaggio vengono specificati mediante gli oggetti <see cref="T:System.String" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo blocca quando viene trasmesso il messaggio di posta elettronica. È possibile specificare un valore di timeout utilizzando il <xref:System.Net.Mail.SmtpClient.Timeout%2A> proprietà per assicurarsi che il metodo restituisce dopo un determinato periodo di tempo specificato.  
  
 Prima di chiamare questo metodo, il <xref:System.Net.Mail.SmtpClient.Host%2A> e <xref:System.Net.Mail.SmtpClient.Port%2A> devono essere impostate tramite i file di configurazione impostando le relative proprietà o passando queste informazioni nel <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> costruttore.  
  
 È possibile chiamare questo metodo se è presente un messaggio inviato in modo asincrono.  
  
 Se l'host SMTP richiede le credenziali, è necessario impostare prima di chiamare questo metodo. Per specificare le credenziali, utilizzare il <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> o <xref:System.Net.Mail.SmtpClient.Credentials%2A> proprietà.  
  
 Se si riceve un <xref:System.Net.Mail.SmtpException> eccezione, controllare il <xref:System.Net.Mail.SmtpException.StatusCode%2A> della proprietà per individuare il motivo l'operazione non riuscita. Il <xref:System.Net.Mail.SmtpException> può inoltre contenere un'eccezione interna che indica il motivo per l'operazione non riuscita.  

 Quando si invia tramite posta elettronica <xref:System.Net.Mail.SmtpClient.Send%2A> a più destinatari e il protocollo SMTP server accetta alcuni destinatari come validi e rifiuta altri, <xref:System.Net.Mail.SmtpClient.Send%2A> Invia messaggio di posta elettronica ai destinatari accettati e quindi un <xref:System.Net.Mail.SmtpFailedRecipientsException> viene generata un'eccezione (o un <xref:System.Net.Mail.SmtpFailedRecipientException> se solo uno destinatario viene rifiutato). Oggetto <xref:System.Net.Mail.SmtpFailedRecipientsException> contiene un elenco di destinatari che sono stati rifiutati.
 
> [!NOTE]
>  Se il <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> è impostata su `true`, e il server di posta elettronica SMTP non annuncia STARTTLS nella risposta EHLO comando, quindi una chiamata al <xref:System.Net.Mail.SmtpClient.Send%2A> o <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metodi genererà un <xref:System.Net.Mail.SmtpException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> è <see langword="null" />.  - oppure - <paramref name="recipients" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" /> è <see cref="F:System.String.Empty" />.  - oppure - <paramref name="recipients" /> è <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">È in corso una chiamata a <see cref="T:System.Net.Mail.SmtpClient" /> da parte della classe <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" />.  - oppure - La proprietà <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> è impostata su <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> e <see cref="P:System.Net.Mail.SmtpClient.Host" /> è <see langword="null" />.  - oppure - La proprietà <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> è impostata su <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> e <see cref="P:System.Net.Mail.SmtpClient.Host" /> è uguale alla stringa vuota ("").  - oppure - La proprietà <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> è impostata su <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> e <see cref="P:System.Net.Mail.SmtpClient.Port" /> è zero, un numero negativo o un numero maggiore di 65.535.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">La connessione al server SMTP ha avuto esito negativo.  - oppure - L'autenticazione non è riuscita.  - oppure - Si è verificato un timeout dell'operazione.  - oppure - <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> è impostato su <see langword="true" /> ma la proprietà <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> è impostata su <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> o <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  - oppure - <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> è impostato su <see langword="true," /> ma il server di posta SMTP non annuncia STARTTLS nella risposta al comando EHLO.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">Non è possibile recapitare <paramref name="message" /> a uno dei destinatari in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> o <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">Non è possibile recapitare <paramref name="message" /> a due o più destinatari in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> o <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Per connettersi al server SMTP. Enumerazione associata: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Invia un messaggio di posta elettronica. Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.Mail.MailMessage message, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.Mail.MailMessage message, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (message As MailMessage, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::Mail::MailMessage ^ message, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">Classe <see cref="T:System.Net.Mail.MailMessage" /> contenente il messaggio da inviare.</param>
        <param name="userToken">Oggetto definito dall'utente passato al metodo richiamato al completamento dell'operazione asincrona.</param>
        <summary>Invia il messaggio di posta elettronica specificato a un server SMTP per la consegna. Questo metodo non blocca il thread chiamante e consente al chiamante di passare un oggetto al metodo richiamato al completamento dell'operazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ricevere notifica quando è stato inviato il messaggio di posta elettronica o l'operazione è stata annullata, aggiungere un gestore eventi per il <xref:System.Net.Mail.SmtpClient.SendCompleted> evento. È possibile annullare un <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operazione chiamando il <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> metodo.  
  
 Dopo la chiamata <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, è necessario attendere che la trasmissione del messaggio di posta elettronica da completare prima di tentare di inviare un altro messaggio di posta elettronica mediante <xref:System.Net.Mail.SmtpClient.Send%2A> o <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.  
  
 Prima di chiamare questo metodo, il <xref:System.Net.Mail.SmtpClient.Host%2A> e <xref:System.Net.Mail.SmtpClient.Port%2A> deve essere impostato tramite i file di configurazione impostando le relative proprietà o passando queste informazioni nel <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> costruttore.  
  
 Se l'host SMTP richiede le credenziali, è necessario impostare prima di chiamare questo metodo. Per specificare le credenziali, utilizzare il <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> o <xref:System.Net.Mail.SmtpClient.Credentials%2A> proprietà.  
  
 Se si riceve un <xref:System.Net.Mail.SmtpException> eccezione, controllare il <xref:System.Net.Mail.SmtpException.StatusCode%2A> della proprietà per individuare il motivo l'operazione non riuscita. Il <xref:System.Net.Mail.SmtpException> può inoltre contenere un'eccezione interna che indica il motivo per l'operazione non riuscita.  
  
 Quando si invia tramite posta elettronica <xref:System.Net.Mail.SmtpClient.SendAsync%2A> a più destinatari, se il server SMTP accetta alcuni destinatari come validi e rifiuta altri, un <xref:System.Net.Mail.SmtpException> viene generata un'eccezione con un <xref:System.NullReferenceException> per l'eccezione interna. In questo caso, <xref:System.Net.Mail.SmtpClient.SendAsync%2A> non riesce a inviare posta elettronica a uno dei destinatari.  
  
 L'applicazione può rilevare un errore di convalida certificato server esaminando il <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> proprietà passato il <xref:System.Net.Mail.SendCompletedEventHandler> delegato.  
  
 Il <xref:System.Net.Mail.SmtpClient.Timeout%2A> proprietà non ha alcun effetto un <xref:System.Net.Mail.SmtpClient.SendAsync%2A> chiamare.  
  
 Per inviare posta elettronica e blocco durante la trasmissione al server SMTP, utilizzare uno del <xref:System.Net.Mail.SmtpClient.Send%2A> metodi.  
  
> [!NOTE]
>  Se il <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> è impostata su `true`, e il server di posta elettronica SMTP non annuncia STARTTLS nella risposta EHLO comando, quindi una chiamata al <xref:System.Net.Mail.SmtpClient.Send%2A> o <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metodi genererà un <xref:System.Net.Mail.SmtpException>.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come chiamare questo metodo.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> è <see langword="null" />.  - oppure - <see cref="P:System.Net.Mail.MailMessage.From" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">È in corso una chiamata a <see cref="T:System.Net.Mail.SmtpClient" /> da parte della classe <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" />.  - oppure - Non esistono destinatari specificati nelle proprietà <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> e <see cref="P:System.Net.Mail.MailMessage.Bcc" />.  - oppure - La proprietà <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> è impostata su <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> e <see cref="P:System.Net.Mail.SmtpClient.Host" /> è <see langword="null" />.  - oppure - La proprietà <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> è impostata su <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> e <see cref="P:System.Net.Mail.SmtpClient.Host" /> è uguale alla stringa vuota ("").  - oppure - La proprietà <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> è impostata su <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> e <see cref="P:System.Net.Mail.SmtpClient.Port" /> è zero, un numero negativo o un numero maggiore di 65.535.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">La connessione al server SMTP ha avuto esito negativo.  - oppure - L'autenticazione non è riuscita.  - oppure - Si è verificato un timeout dell'operazione.  - oppure - <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> è impostato su <see langword="true" /> ma la proprietà <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> è impostata su <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> o <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  - oppure - <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> è impostato su <see langword="true," /> ma il server di posta SMTP non annuncia STARTTLS nella risposta al comando EHLO.  - oppure - Non è possibile recapitare <paramref name="message" /> a uno o più destinatari in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> o <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Per connettersi al server SMTP. Enumerazione associata: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string recipients, string subject, string body, object userToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string recipients, string subject, string body, object userToken) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" FrameworkAlternate="netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, recipients As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string to, string subject, string body, object userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string to, string subject, string body, object userToken) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" FrameworkAlternate="netframework-4.7;netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, to As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
        <Parameter Name="userToken" Type="System.Object" Index="4" />
      </Parameters>
      <Docs>
        <param name="from">Classe <see cref="T:System.String" /> contenente le informazioni sull'indirizzo del mittente del messaggio.</param>
        <param name="recipients">To be added.</param>
        <param name="to">To be added.</param>
        <param name="subject">Classe <see cref="T:System.String" /> contenente l'oggetto del messaggio.</param>
        <param name="body">Classe <see cref="T:System.String" /> contenente il corpo del messaggio.</param>
        <param name="userToken">Oggetto definito dall'utente passato al metodo richiamato al completamento dell'operazione asincrona.</param>
        <summary>Invia un messaggio di posta elettronica a un server SMTP per la consegna. Il mittente, i destinatari, l'oggetto e il corpo del messaggio vengono specificati mediante gli oggetti <see cref="T:System.String" />. Questo metodo non blocca il thread chiamante e consente al chiamante di passare un oggetto al metodo richiamato al completamento dell'operazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ricevere notifica quando è stato inviato il messaggio di posta elettronica o l'operazione è stata annullata, aggiungere un gestore eventi per il <xref:System.Net.Mail.SmtpClient.SendCompleted> evento. È possibile annullare un <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operazione chiamando il <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> metodo.  
  
 Dopo la chiamata <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, è necessario attendere che la trasmissione del messaggio di posta elettronica da completare prima di tentare di inviare un altro messaggio di posta elettronica mediante <xref:System.Net.Mail.SmtpClient.Send%2A> o <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.  
  
 Prima di chiamare questo metodo, il <xref:System.Net.Mail.SmtpClient.Host%2A> e <xref:System.Net.Mail.SmtpClient.Port%2A> devono essere impostate tramite i file di configurazione o impostando le proprietà o il passaggio di informazioni nel <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> costruttore.  
  
 Se l'host SMTP richiede le credenziali, è necessario impostare prima di chiamare questo metodo. Per specificare le credenziali, utilizzare il <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> o <xref:System.Net.Mail.SmtpClient.Credentials%2A> proprietà.  
  
 Se si riceve un <xref:System.Net.Mail.SmtpException> eccezione, controllare il <xref:System.Net.Mail.SmtpException.StatusCode%2A> della proprietà per individuare il motivo l'operazione non riuscita. Il <xref:System.Net.Mail.SmtpException> può inoltre contenere un'eccezione interna che indica il motivo per l'operazione non riuscita.  
  
 Quando si invia tramite posta elettronica <xref:System.Net.Mail.SmtpClient.SendAsync%2A> a più destinatari, se il server SMTP accetta alcuni destinatari come validi e rifiuta altri, un <xref:System.Net.Mail.SmtpException> viene generata un'eccezione con un <xref:System.NullReferenceException> per l'eccezione interna. In questo caso, <xref:System.Net.Mail.SmtpClient.SendAsync%2A> non riesce a inviare posta elettronica a uno dei destinatari.  
  
 L'applicazione può rilevare un errore di convalida certificato server esaminando il <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> proprietà passato il <xref:System.Net.Mail.SendCompletedEventHandler> delegato.  
  
 Il <xref:System.Net.Mail.SmtpClient.Timeout%2A> proprietà non ha alcun effetto un <xref:System.Net.Mail.SmtpClient.SendAsync%2A> chiamare.  
  
 Per inviare posta elettronica e blocco durante la trasmissione al server SMTP, utilizzare uno del <xref:System.Net.Mail.SmtpClient.Send%2A> metodi.  
  
> [!NOTE]
>  Se il <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> è impostata su `true`, e il server di posta elettronica SMTP non annuncia STARTTLS nella risposta EHLO comando, quindi una chiamata al <xref:System.Net.Mail.SmtpClient.Send%2A> o <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metodi genererà un <xref:System.Net.Mail.SmtpException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> è <see langword="null" />.  - oppure - <paramref name="recipient" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" /> è <see cref="F:System.String.Empty" />.  - oppure - <paramref name="recipient" /> è <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">È in corso una chiamata a <see cref="T:System.Net.Mail.SmtpClient" /> da parte della classe <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" />.  - oppure - La proprietà <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> è impostata su <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> e <see cref="P:System.Net.Mail.SmtpClient.Host" /> è <see langword="null" />.  - oppure - La proprietà <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> è impostata su <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> e <see cref="P:System.Net.Mail.SmtpClient.Host" /> è uguale alla stringa vuota ("").  - oppure - La proprietà <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> è impostata su <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> e <see cref="P:System.Net.Mail.SmtpClient.Port" /> è zero, un numero negativo o un numero maggiore di 65.535.</exception>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">La connessione al server SMTP ha avuto esito negativo.  - oppure - L'autenticazione non è riuscita.  - oppure - Si è verificato un timeout dell'operazione.  - oppure - <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> è impostato su <see langword="true" /> ma la proprietà <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> è impostata su <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> o <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  - oppure - <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> è impostato su <see langword="true," /> ma il server di posta SMTP non annuncia STARTTLS nella risposta al comando EHLO.  - oppure - Non è possibile recapitare il messaggio a uno o più destinatari in <paramref name="recipients" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Per connettersi al server SMTP. Enumerazione associata: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCancel">
      <MemberSignature Language="C#" Value="public void SendAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsyncCancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annulla un'operazione asincrona di invio di un messaggio di posta elettronica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> metodo per annullare un in sospeso <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operazione. Se è in attesa di essere inviati messaggi, questo metodo rilascia le risorse utilizzate per memorizzare il messaggio. Se è presente alcun messaggio da inviare, questo metodo non esegue alcuna operazione.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come inviare un messaggio di posta elettronica in modo asincrono. L'utente ha la possibilità di annullare la posta elettronica se non sono stati inviato.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">L'oggetto è stato eliminato.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.Mail.SendCompletedEventHandler SendCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.Mail.SendCompletedEventHandler SendCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.Mail.SmtpClient.SendCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendCompleted As SendCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::Mail::SendCompletedEventHandler ^ SendCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SendCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando viene completata un'operazione asincrona di invio di un messaggio di posta elettronica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Mail.SmtpClient.SendCompleted> evento viene generato ogni volta che un messaggio di posta elettronica viene inviato in modo asincrono al completamento dell'operazione di trasmissione. Per inviare un messaggio di posta elettronica in modo asincrono, utilizzare il <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metodi.  
  
 <xref:System.Net.Mail.SendCompletedEventHandler> è il delegato per <xref:System.Net.Mail.SmtpClient.SendCompleted>. La <xref:System.ComponentModel.AsyncCompletedEventArgs> classe fornisce il gestore eventi con i dati dell'evento.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come inviare un messaggio di posta elettronica in modo asincrono.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendMailAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Invia il messaggio specificato a un server SMTP per il recapito come operazione asincrona.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (message As MailMessage) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::Net::Mail::MailMessage ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message">Classe <see cref="T:System.Net.Mail.MailMessage" /> contenente il messaggio da inviare.</param>
        <summary>Invia il messaggio specificato a un server SMTP per il recapito come operazione asincrona.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task" />.  Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task>> oggetto verrà completato dopo che è stato inviato il messaggio.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (string from, string recipients, string subject, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(string from, string recipients, string subject, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (from As String, recipients As String, subject As String, body As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="recipients" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from">Classe <see cref="T:System.String" /> contenente le informazioni sull'indirizzo del mittente del messaggio.</param>
        <param name="recipients">Classe <see cref="T:System.String" /> contenente gli indirizzi a cui viene inviato il messaggio.</param>
        <param name="subject">Classe <see cref="T:System.String" /> contenente l'oggetto del messaggio.</param>
        <param name="body">Classe <see cref="T:System.String" /> contenente il corpo del messaggio.</param>
        <summary>Invia il messaggio specificato a un server SMTP per il recapito come operazione asincrona. . Il mittente, i destinatari, l'oggetto e il corpo del messaggio vengono specificati mediante gli oggetti <see cref="T:System.String" />.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task" />.  Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task>> oggetto verrà completato dopo che è stato inviato il messaggio.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> è <see langword="null" />.  - oppure - <paramref name="recipients" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" /> è <see cref="F:System.String.Empty" />.  - oppure - <paramref name="recipients" /> è <see cref="F:System.String.Empty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la connessione di rete usata per trasmettere il messaggio di posta elettronica.</summary>
        <value>Classe <see cref="T:System.Net.ServicePoint" /> che connette alla proprietà <see cref="P:System.Net.Mail.SmtpClient.Host" /> utilizzata per SMTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le impostazioni per il <xref:System.Net.Mail.SmtpClient.ServicePoint%2A> proprietà vengono create utilizzando le impostazioni predefinite specificate all'applicazione o un file di configurazione macchina e <xref:System.Net.ServicePointManager> classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'accesso di <xref:System.Net.Mail.SmtpClient.ServicePoint%2A> proprietà.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il valore di <see cref="P:System.Net.Mail.SmtpClient.Host" /> è <see langword="null" /> oppure la stringa vuota ("").  - oppure - <see cref="P:System.Net.Mail.SmtpClient.Port" /> è zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="public string TargetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.TargetName" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del provider di servizi (SPN, Service Provider Name) da utilizzare per l'autenticazione quando si utilizza la protezione estesa.</summary>
        <value>Oggetto <see cref="T:System.String" /> che specifica il nome SPN da utilizzare per la protezione estesa. Il valore predefinito per questo nome SPN è nel formato "SMTPSVC /&lt;host&gt;" in cui &lt;host&gt; è il nome host del server di posta SMTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Mail.SmtpClient.TargetName%2A> proprietà viene utilizzata con l'autenticazione integrata di Windows quando un'applicazione utilizza la protezione estesa. Il <xref:System.Net.Mail.SmtpClient> può fornire protezione estesa per assicurarsi che le credenziali di verifica / risposta contengono informazioni specifiche del servizio (un SPN) e, se necessario, di canale specifiche informazioni (un token di associazione di canale o CBT). Con queste informazioni negli scambi di credenziali, i servizi sono in grado di migliorare la protezione contro l'uso dannoso di credenziali di verifica / risposta che potrebbe essere stato ottenuto in modo non corretto.  
  
 Il valore predefinito per questa proprietà può essere impostato anche in una macchina o file di configurazione dell'applicazione. Qualsiasi modifica apportata al <xref:System.Net.Mail.SmtpClient.TargetName%2A> override le impostazioni del file di configurazione delle proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica il periodo di tempo dopo il quale si verifica il timeout di una chiamata sincrona a <see cref="Overload:System.Net.Mail.SmtpClient.Send" />.</summary>
        <value>Struttura <see cref="T:System.Int32" /> che specifica il valore di timeout in millisecondi. Il valore predefinito è 100.000 (100 secondi).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, le chiamate al <xref:System.Net.Mail.SmtpClient.Send%2A> blocco di metodi fino al completamento dell'operazione. Se si imposta la <xref:System.Net.Mail.SmtpClient.Timeout%2A> proprietà su un valore positivo e un <xref:System.Net.Mail.SmtpClient.Send%2A> Impossibile completare l'operazione nel tempo stabilito, il <xref:System.Net.Mail.SmtpClient> classe genera un <xref:System.Net.Mail.SmtpException> eccezione.  
  
 Per inviare un messaggio e continuare l'esecuzione nel thread dell'applicazione, utilizzare il <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metodo.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come ottenere e impostare il valore di timeout.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato per un'operazione di impostazione è minore di zero.</exception>
        <exception cref="T:System.InvalidOperationException">Non è possibile modificare il valore di questa proprietà mentre viene inviato un messaggio di posta elettronica.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.MonoNotSupported("no DefaultCredential support in Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore <see cref="T:System.Boolean" /> che controlla se insieme alle richieste viene inviata la proprietà <see cref="P:System.Net.CredentialCache.DefaultCredentials" />.</summary>
        <value>
          <see langword="true" /> se vengono usate le credenziali predefinite; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alcuni server SMTP richiedono che l'autenticazione del client prima che il server Invia messaggio di posta elettronica per suo conto. Impostare questa proprietà su `true` quando questo <xref:System.Net.Mail.SmtpClient> oggetto, se richiesto dal server, l'autenticazione utilizzando le credenziali predefinite dell'utente attualmente connesso. Per le applicazioni client, questo è il comportamento desiderato nella maggior parte degli scenari.  
  
 Le informazioni sulle credenziali può essere specificati utilizzando l'applicazione e i file di configurazione macchina. Per ulteriori informazioni, vedere [ &lt;mailSettings&gt; elemento (impostazioni di rete)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 Se il <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> è impostata su `false,` quindi il valore impostato nel <xref:System.Net.Mail.SmtpClient.Credentials%2A> proprietà da utilizzare per le credenziali quando ci si connette al server. Se il <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> è impostata su `false` e <xref:System.Net.Mail.SmtpClient.Credentials%2A> proprietà non è stata impostata, la posta elettronica viene inviato al server in modo anonimo.  
  
> [!CAUTION]
>  Se si specificano le credenziali per l'autenticazione di base, sono inviati al server in testo non crittografato. Questo può costituire un problema di sicurezza perché le credenziali possono essere visualizzate e quindi usate da altri utenti.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo di questa proprietà.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Non è possibile modificare il valore di questa proprietà mentre viene inviato un messaggio di posta elettronica.</exception>
      </Docs>
    </Member>
  </Members>
</Type>