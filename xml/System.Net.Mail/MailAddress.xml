<Type Name="MailAddress" FullName="System.Net.Mail.MailAddress">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="762353f1ded7fc016489bf03175a6e5d2e2a0000" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34244580" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MailAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class MailAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailAddress" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta l'indirizzo di un mittente o di un destinatario di posta elettronica.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
Il <xref:System.Net.Mail.MailAddress> classe viene utilizzata per la <xref:System.Net.Mail.SmtpClient> e <xref:System.Net.Mail.MailMessage> classi per archiviare informazioni sull'indirizzo per messaggi di posta elettronica.  
  
È costituito da un indirizzo di posta elettronica un <xref:System.Net.Mail.MailAddress.User%2A> nome <xref:System.Net.Mail.MailAddress.Host%2A> nome e, facoltativamente, un <xref:System.Net.Mail.MailAddress.DisplayName%2A>. Il <xref:System.Net.Mail.MailAddress.DisplayName%2A> può contenere caratteri non ASCII se li si codifica.  
  
La <xref:System.Net.Mail.MailAddress> classe supporta i formati di indirizzo di posta elettronica seguenti:  
  
-   Un formato di indirizzo semplice di `user@host`. Se un <xref:System.Net.Mail.MailAddress.DisplayName%2A> non è impostata, questo è il formato dell'indirizzo di posta elettronica generato.  
  
-   Il formato del nome visualizzato tra virgolette standard per `"display name" <user@host>`. Se un <xref:System.Net.Mail.MailAddress.DisplayName%2A> è impostato, questo è il formato generato.  
  
-   Parentesi acute vengono aggiunti intorno il <xref:System.Net.Mail.MailAddress.User%2A> nome, <xref:System.Net.Mail.MailAddress.Host%2A> nome `"display name" user@host` se questi non sono inclusi.  
  
-   Virgolette vengono aggiunte prima il <xref:System.Net.Mail.MailAddress.DisplayName%2A> per `display name <user@host>`, se questi non sono inclusi.  
  
-   Caratteri Unicode sono supportati nel <xref:System.Net.Mail.MailAddress.DisplayName%2A> proprietà.  
  
-   Oggetto <xref:System.Net.Mail.MailAddress.User%2A> nome tra virgolette. Ad esempio `"user name"@host`.  
  
-   Punti consecutivi e finali nei nomi utente. Ad esempio `user...name..@host`.  
  
-   Valori letterali di dominio tra parentesi. Ad esempio `<user@[my domain]>`.  
  
-   Commenti. Ad esempio `(comment)"display name"(comment)<(comment)user(comment)@(comment)domain(comment)>(comment)`. I commenti vengono rimossi prima della trasmissione.  
  
Viene utilizzata una virgola per separare gli elementi in un elenco di indirizzi di posta elettronica. Di conseguenza, una virgola non debba essere utilizzata nei nomi di visualizzazione non racchiusi tra virgolette in un elenco. Sia possibile usare i seguenti indirizzi di posta elettronica:
  
`"John, Doe" <user@host>, "Bob, Smith" <user2@host>`  
  
L'indirizzo di posta elettronica seguente non è consentito:  
  
`John, Doe <user@host>, Bob, Smith <user2@host>`  
  
Le virgolette possono essere incorporate in una stringa tra virgolette, ma è necessario sottoporli a escape. Sia possibile usare i seguenti indirizzi di posta elettronica:
  
`"John \"Jr\" Doe" <user@host>`  
  
`"\"John \\\"Jr\\\" Doe\" <user@host>"`  
  
L'indirizzo di posta elettronica seguente non è consentito:  
  
`"John "Jr" Doe" <user@host>`  
  
Quando il nome utente è nota racchiuso tra virgolette, tutto il testo compreso tra l'inizio della stringa (o da virgole) e l'indirizzo sono considerati parte del <xref:System.Net.Mail.MailAddress.DisplayName%2A>, comprensivo di commenti. Ad esempio:
  
`(non comment) unquoted display (non comment) name (non comment) <user@host>`
  
Sebbene la <xref:System.Net.Mail.MailAddress> classe accetta un indirizzo di posta elettronica come server di posta elettronica valido, gli altri potrebbero non accettare l'indirizzo di posta elettronica.  
  
La <xref:System.Net.Mail.MailAddress> classe non supporta i formati di indirizzo di posta elettronica seguente:  
  
- Combinare i nomi visualizzati e senza virgolette. Ad esempio `display "name" <user@host>`.
  
- Gruppi, come definito in RFC 2822 sezione 3.4 pubblicati da IETF.  
  
- I formati di nome utente obsoleti di `"user"."name"@host`, `user."name"@host` o `"user".name@host`.
  
   
  
## Examples  
Esempio di codice riportato di seguito viene illustrato come inviare un messaggio di posta elettronica utilizzando il <xref:System.Net.Mail.SmtpClient>, <xref:System.Net.Mail.MailAddress>, e <xref:System.Net.Mail.MailMessage> classi.  
  
[!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
[!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Mail.MailAddress" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Oggetto <see cref="T:System.String" /> che contiene un indirizzo di posta elettronica.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Mail.MailAddress" /> utilizzando l'indirizzo specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `address` parametro può contenere un nome visualizzato e l'indirizzo di posta elettronica associato se l'indirizzo racchiusi tra parentesi quadre. Ad esempio:  
  
 `"Tom Smith <tsmith@contoso.com>"`  
  
 Lo spazio vuoto è consentito tra il nome visualizzato e le parentesi uncinate.  
  
 Nella tabella seguente vengono illustrati i valori di proprietà per un <xref:System.Net.Mail.MailAddress> oggetto costruito utilizzando l'indirizzo dell'esempio precedente.  
  
|Proprietà|Valore|  
|--------------|-----------|  
|<xref:System.Net.Mail.MailAddress.DisplayName%2A>|`"Tom Smith"`|  
|<xref:System.Net.Mail.MailAddress.Host%2A>|`"contoso.com"`|  
|<xref:System.Net.Mail.MailAddress.User%2A>|`"tsmith"`|  
|<xref:System.Net.Mail.MailAddress.Address%2A>|`"tsmith@contoso.com"`|  
  
   
  
## Examples  
 Esempio di codice seguente utilizza questo costruttore per creare un <xref:System.Net.Mail.MailAddress> dell'oggetto per il <xref:System.Net.Mail.MailMessage.Bcc%2A> destinatario di un messaggio di posta elettronica.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> è <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> non è in un formato riconosciuto.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Oggetto <see cref="T:System.String" /> che contiene un indirizzo di posta elettronica.</param>
        <param name="displayName">Oggetto <see cref="T:System.String" /> contenente il nome visualizzato associato ad <c>address</c>. Questo parametro può essere <see langword="null" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Mail.MailAddress" /> con l'indirizzo e il nome visualizzato specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Spazi iniziali e finali nel nome da visualizzare viene mantenuto.  
  
 Se `displayName` contiene caratteri non ASCII, viene utilizzato il set di caratteri iso-8859-1 per il `displayName` codifica. Codifica dei caratteri non ASCII è descritto in RFC 1522, disponibile all'indirizzo [ https://www.ietf.org/ ](https://www.ietf.org/).  
  
 Se `address` contiene un nome visualizzato e `displayName` non `null` e non è uguale a <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` sostituisce il valore specificato in `address`.  
  
   
  
## Examples  
 Esempio di codice seguente utilizza questo costruttore per creare <xref:System.Net.Mail.MailAddress> per il mittente e destinatario di un messaggio di posta elettronica.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> è <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> non è in un formato riconosciuto.  - oppure - <paramref name="address" /> contiene caratteri non ASCII.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName, System.Text.Encoding displayNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName, class System.Text.Encoding displayNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String, displayNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName, System::Text::Encoding ^ displayNameEncoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("We don't do anything with displayNameEncoding")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="displayNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="address">Oggetto <see cref="T:System.String" /> che contiene un indirizzo di posta elettronica.</param>
        <param name="displayName">Oggetto <see cref="T:System.String" /> contenente il nome visualizzato associato ad <c>address</c>.</param>
        <param name="displayNameEncoding">Oggetto <see cref="T:System.Text.Encoding" /> che definisce il set di caratteri usato per <c>displayName</c>.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Mail.MailAddress" /> utilizzando l'indirizzo, il nome visualizzato e la codifica specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Spazi iniziali e finali nel nome da visualizzare viene mantenuto.  
  
 Se `address` contiene un nome visualizzato e `displayName` non `null` e non è uguale a <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` sostituisce il valore specificato in `address`.  
  
 Il <xref:System.Net.Mail.MailAddress.%23ctor%2A> metodo non verifica se il `displayName` parametro è valido. Questo metodo rimuove le virgolette non visualizzate per il <xref:System.Net.Mail.MailAddress.DisplayName%2A> proprietà. Le virgolette verranno aggiunte prima della trasmissione, tranne nel caso in <xref:System.Text.Encoding.ASCII%2A> o <xref:System.Text.Encoding.Unicode%2A> è incluso il `displayNameEncoding` parametro. La codifica specificata nella `displayNameEncoding` verrà applicato al parametro il <xref:System.Net.Mail.MailAddress.DisplayName%2A> proprietà prima della trasmissione <xref:System.Text.Encoding.ASCII%2A> o <xref:System.Text.Encoding.Unicode%2A> specificato nella `displayNameEncoding` parametro. <xref:System.Text.Encoding.UTF8%2A> è la codifica predefinita se non è specificato.  
  
 Per ulteriori informazioni sui formati di indirizzo di posta supportati, vedere <xref:System.Net.Mail.MailAddress>.  
  
   
  
## Examples  
 Esempio di codice seguente utilizza questo costruttore per creare <xref:System.Net.Mail.MailAddress> istanze per il mittente di un messaggio di posta elettronica.  
  
 [!code-cpp[NclMailASync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#2)]
 [!code-csharp[NclMailASync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#2)]
 [!code-vb[NclMailASync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> è <see langword="null" />.  - oppure - <paramref name="displayName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> è <see cref="F:System.String.Empty" /> ("").  - oppure - <paramref name="displayName" /> è <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> non è in un formato riconosciuto.  - oppure - <paramref name="address" /> contiene caratteri non ASCII.</exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'indirizzo di posta elettronica specificato quando è stata creata questa istanza.</summary>
        <value>Classe <see cref="T:System.String" /> contenente l'indirizzo di posta elettronica.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito da questa proprietà non include il <xref:System.Net.Mail.MailAddress.DisplayName%2A> informazioni.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare l'indirizzo per un destinatario del messaggio di posta elettronica.  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome visualizzato composto dalle informazioni sul nome visualizzato e sull'indirizzo specificate quando è stata creata questa istanza.</summary>
        <value>Classe <see cref="T:System.String" /> contenente il nome visualizzato. In caso contrario, <see cref="F:System.String.Empty" /> ("") se non è stata specificata alcuna informazione sul nome visualizzato quando è stata creata questa istanza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I nomi visualizzati contenenti caratteri non ASCII vengono restituiti in formato leggibile. Utilizzare il <xref:System.Net.Mail.MailAddress.ToString%2A> metodo per ottenere la forma codificata del <xref:System.Net.Mail.MailAddress.DisplayName%2A>.  
  
 Visualizzazione di alcuni programmi software utilizzati per la lettura di posta elettronica di <xref:System.Net.Mail.MailAddress.DisplayName%2A> valore della proprietà anziché o in aggiunta, l'indirizzo di posta elettronica.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene visualizza la <xref:System.Net.Mail.MailAddress.DisplayName%2A> per il destinatario di un messaggio di posta elettronica.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="netframework-4.7;netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="obj">To be added.</param>
        <summary>Confronta due indirizzi di posta.</summary>
        <returns>
          <see langword="true" /> se i due indirizzi di posta sono uguali. In caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore hash per un indirizzo di posta.</summary>
        <returns>Valore hash intero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Mail.MailAddress.GetHashCode%2A> metodo restituisce un codice hash dell'indirizzo di posta elettronica. Questo valore può essere utilizzato come chiave nelle tabelle hash.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la parte che definisce l'host dell'indirizzo specificato quando è stata creata questa istanza.</summary>
        <value>Oggetto <see cref="T:System.String" /> che contiene il nome del computer host che accetta posta elettronica per il <see cref="P:System.Net.Mail.MailAddress.User" /> proprietà.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un indirizzo di posta elettronica tipica, la stringa di host include tutte le informazioni che seguono il "`@`" sign. Ad esempio, in `"tsmith@contoso.com"`, l'host è `"contoso.com"`.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare la destinazione di un messaggio di posta elettronica.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una rappresentazione in forma di stringa di questa istanza.</summary>
        <returns>Classe <see cref="T:System.String" /> che comprende in contenuto di questa classe <see cref="T:System.Net.Mail.MailAddress" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La stringa restituita da questo metodo non è necessariamente identica alla stringa specificata quando è stata creata l'istanza. Se il <xref:System.Net.Mail.MailAddress.DisplayName%2A> proprietà non è `null` e non è uguale a <xref:System.String.Empty?displayProperty=nameWithType> (""), <xref:System.Net.Mail.MailAddress.ToString%2A> restituisce una stringa composta utilizzando la sintassi seguente:  
  
 <xref:System.Net.Mail.MailAddress.DisplayName%2A> \<<xref:System.Net.Mail.MailAddress.User%2A>@<xref:System.Net.Mail.MailAddress.Host%2A>>  
  
 Se <xref:System.Net.Mail.MailAddress.DisplayName%2A> è `null` o è uguale a <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.MailAddress.ToString%2A> restituisce il valore della <xref:System.Net.Mail.MailAddress.Address%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare la destinazione di un messaggio di posta elettronica.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public string User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string User" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ User { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le informazioni sull'utente dall'indirizzo specificato quando è stata creata questa istanza.</summary>
        <value>Classe <see cref="T:System.String" /> contenente la parte relativa al nome utente della proprietà <see cref="P:System.Net.Mail.MailAddress.Address" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In un indirizzo di posta elettronica tipica, la stringa utente include tutte le informazioni precedenti la "`@`" sign. Ad esempio, in `"tsmith@contoso.com"`, l'utente è `"tsmith"`.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare la destinazione di un messaggio di posta elettronica.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>