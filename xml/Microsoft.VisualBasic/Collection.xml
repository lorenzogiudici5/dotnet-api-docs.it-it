<Type Name="Collection" FullName="Microsoft.VisualBasic.Collection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c543b4d3675346a6dbc3cb17e964f74762b1c01e" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48660003" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Collection : System.Collections.IList, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed Collection extends System.Object implements class System.Collections.ICollection, class System.Collections.IList, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Collection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Collection&#xA;Implements IDeserializationCallback, IList, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Collection sealed : System::Collections::IList, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Collection = class&#xA;    interface ICollection&#xA;    interface IList&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(Microsoft.VisualBasic.Collection/CollectionDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ef097-101">Un oggetto <see langword="Collection" /> di Visual Basic è un set ordinato di elementi a cui è possibile fare riferimento come singola unità.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef097-101">A Visual Basic <see langword="Collection" /> is an ordered set of items that can be referred to as a unit.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ef097-102">Quando possibile, utilizzare le raccolte generiche negli spazi dei nomi <xref:System.Collections.Generic?displayProperty=nameWithType> o <xref:System.Collections.Concurrent> anziché una `Collection` di Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="ef097-102">Whenever possible, you should use the generic collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace or the <xref:System.Collections.Concurrent> namespace instead of a Visual Basic `Collection`.</span></span> <span data-ttu-id="ef097-103">Per altre informazioni, vedere [raccolte](http://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b).</span><span class="sxs-lookup"><span data-stu-id="ef097-103">For more information, see [Collections](http://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b).</span></span>  
  
 <span data-ttu-id="ef097-104">Visual Basic `Collection` oggetto fornisce un modo pratico per fare riferimento a un gruppo di elementi correlato come un singolo oggetto.</span><span class="sxs-lookup"><span data-stu-id="ef097-104">The Visual Basic `Collection` object provides a convenient way to refer to a related group of items as a single object.</span></span> <span data-ttu-id="ef097-105">Gli elementi, oppure *elementi*, in una raccolta devono avere solo in comune il fatto di esistere nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="ef097-105">The items, or *elements*, in a collection need only be related by the fact that they exist in the collection.</span></span> <span data-ttu-id="ef097-106">Elementi di una raccolta non sono necessario condividere lo stesso tipo di dati.</span><span class="sxs-lookup"><span data-stu-id="ef097-106">Elements of a collection do not have to share the same data type.</span></span>  
  
 <span data-ttu-id="ef097-107">È possibile creare una raccolta allo stesso modo di creare oggetti, come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="ef097-107">You can create a collection the same way you create other objects, as the following example illustrates.</span></span>  
  
```vb  
Dim coll As New Microsoft.VisualBasic.Collection()  
```  
  
 <span data-ttu-id="ef097-108">Dopo aver creato una raccolta, è possibile eseguire una delle operazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="ef097-108">Once you have created a collection, you can do any of the following:</span></span>  
  
-   <span data-ttu-id="ef097-109">Aggiungere un elemento con la <xref:Microsoft.VisualBasic.Collection.Add%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ef097-109">Add an element with the <xref:Microsoft.VisualBasic.Collection.Add%2A> method.</span></span>  
  
-   <span data-ttu-id="ef097-110">Rimuovere un elemento con la <xref:Microsoft.VisualBasic.Collection.Remove%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ef097-110">Remove an element with the <xref:Microsoft.VisualBasic.Collection.Remove%2A> method.</span></span>  
  
-   <span data-ttu-id="ef097-111">Rimuovere tutti gli elementi con la <xref:Microsoft.VisualBasic.Collection.Clear%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ef097-111">Remove all elements with the <xref:Microsoft.VisualBasic.Collection.Clear%2A> method.</span></span>  
  
-   <span data-ttu-id="ef097-112">Trovare il numero di elementi contenuti nell'insieme con il <xref:Microsoft.VisualBasic.Collection.Count%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="ef097-112">Find out how many elements the collection contains with the <xref:Microsoft.VisualBasic.Collection.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="ef097-113">Controllare se un elemento specifico è presente con la <xref:Microsoft.VisualBasic.Collection.Contains%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ef097-113">Check whether a specific element is present with the <xref:Microsoft.VisualBasic.Collection.Contains%2A> method.</span></span>  
  
-   <span data-ttu-id="ef097-114">Restituisce un elemento specifico dalla raccolta con il <xref:Microsoft.VisualBasic.Collection.Item%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="ef097-114">Return a specific element from the collection with the <xref:Microsoft.VisualBasic.Collection.Item%2A> property.</span></span>  
  
-   <span data-ttu-id="ef097-115">Eseguire l'iterazione attraverso l'intera raccolta con il [For Each... Istruzione Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span><span class="sxs-lookup"><span data-stu-id="ef097-115">Iterate through the entire collection with the [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="ef097-116">Anche se Visual Basic `Collection` oggetto ha le stesse funzionalità di `Collection` dell'oggetto in Visual Basic 6.0, i due oggetti non possono interagire in un ambiente COM.</span><span class="sxs-lookup"><span data-stu-id="ef097-116">Although the Visual Basic `Collection` object has functionality identical to the `Collection` object in Visual Basic 6.0, the two cannot interoperate in a COM environment.</span></span>  
  
    > [!CAUTION]
    >  <span data-ttu-id="ef097-117">Iterazione di Visual Basic `Collection` non è una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="ef097-117">Iterating through a Visual Basic `Collection` is not a thread-safe procedure.</span></span> <span data-ttu-id="ef097-118">Anche se la raccolta è sincronizzata, altri thread possa ancora modificare la raccolta, causando l'enumeratore generare un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="ef097-118">Even if the collection is synchronized, other threads can still modify the collection, causing the enumerator to throw an exception.</span></span> <span data-ttu-id="ef097-119">Per garantire la sicurezza dei thread durante l'enumerazione, bloccare la raccolta o intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="ef097-119">To guarantee thread safety during enumeration, either lock the collection or catch the exceptions resulting from changes made by other threads.</span></span> <span data-ttu-id="ef097-120">Per altre informazioni sul blocco di un elemento di programmazione, vedere [istruzione SyncLock](~/docs/visual-basic/language-reference/statements/synclock-statement.md).</span><span class="sxs-lookup"><span data-stu-id="ef097-120">For more information on locking a programming element, see [SyncLock Statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef097-121">L'esempio seguente crea il `Collection` oggetto `names` e una finestra di dialogo in cui un utente può aggiungere oggetti (nomi) alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="ef097-121">The following example creates the `Collection` object `names` and a dialog box with which a user can add objects (names) to the collection.</span></span> <span data-ttu-id="ef097-122">Quindi Visualizza i nomi nella raccolta e infine Svuota la raccolta senza tuttavia eliminare il `Collection` oggetto stesso.</span><span class="sxs-lookup"><span data-stu-id="ef097-122">It then displays the names in the collection, and finally empties the collection without disposing of the `Collection` object itself.</span></span>  
  
 <span data-ttu-id="ef097-123">Per visualizzarne il funzionamento, scegliere il **Aggiungi classe** dal **Project** dal menu e dichiarare una variabile pubblica denominata `instanceName` a livello di modulo di `nameClass` (tipo `Public instanceName`) per contenere i nomi di ogni istanza.</span><span class="sxs-lookup"><span data-stu-id="ef097-123">To see how this works, choose the **Add Class** command from the **Project** menu and declare a public variable called `instanceName` at the module level of `nameClass` (type `Public instanceName`) to hold the names of each instance.</span></span> <span data-ttu-id="ef097-124">Lasciare il nome predefinito come `nameClass`.</span><span class="sxs-lookup"><span data-stu-id="ef097-124">Leave the default name as `nameClass`.</span></span> <span data-ttu-id="ef097-125">Copiare e incollare il codice seguente nel **generali** sezione di un altro modulo, e quindi avviarla tramite l'istruzione `classNamer` in un'altra routine.</span><span class="sxs-lookup"><span data-stu-id="ef097-125">Copy and paste the following code into the **General** section of another module, and then start it with the statement `classNamer` in another procedure.</span></span> <span data-ttu-id="ef097-126">(In questo esempio funziona solo con le applicazioni host che supportano le classi).</span><span class="sxs-lookup"><span data-stu-id="ef097-126">(This example works only with host applications that support classes.)</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Collection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef097-127">Crea e restituisce un nuovo oggetto <see cref="T:Microsoft.VisualBasic.Collection" /> Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-127">Creates and returns a new Visual Basic <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-128">La raccolta di Visual Basic restituita da questo costruttore è vuota e non è assegnata qualsiasi capacità iniziale.</span><span class="sxs-lookup"><span data-stu-id="ef097-128">The Visual Basic collection returned by this constructor is empty and does not have any initial capacity allocated.</span></span>  
  
 <span data-ttu-id="ef097-129">Le raccolte di Visual Basic non sono compatibili con la [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] raccolte disponibili nel <xref:System.Collections?displayProperty=nameWithType>, <xref:System.Collections.Generic?displayProperty=nameWithType>, e <xref:System.Collections.Specialized?displayProperty=nameWithType> gli spazi dei nomi.</span><span class="sxs-lookup"><span data-stu-id="ef097-129">Visual Basic collections are not compatible with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] collections available in the <xref:System.Collections?displayProperty=nameWithType>, <xref:System.Collections.Generic?displayProperty=nameWithType>, and <xref:System.Collections.Specialized?displayProperty=nameWithType> namespaces.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef097-130">Nell'esempio seguente crea una nuova raccolta di Visual Basic e assegnarlo alla variabile `coll`:</span><span class="sxs-lookup"><span data-stu-id="ef097-130">The following example creates a new Visual Basic collection and assigns it to the variable `coll`:</span></span>  
  
```vb  
Dim coll As New Microsoft.VisualBasic.Collection()  
```  
  
 <span data-ttu-id="ef097-131">Ciò `Collection` oggetto è in base uno, vale a dire che i valori di indice dell'intervallo compreso tra 1 e il valore di elementi di `Count` proprietà.</span><span class="sxs-lookup"><span data-stu-id="ef097-131">This `Collection` object is one-based, which means that the index values of the elements range from 1 through the value of the `Count` property.</span></span> <span data-ttu-id="ef097-132">Le raccolte di Visual Basic contengono gli elementi di tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="ef097-132">Visual Basic collections hold elements of type <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object Item, string Key = null, object Before = null, object After = null);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Add(object Item, string Key, object Before, object After) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (Item As Object, Optional Key As String = null, Optional Before As Object = null, Optional After As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Add : obj * string * obj * obj -&gt; unit" Usage="collection.Add (Item, Key, Before, After)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="Key" Type="System.String" />
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Item">
          <span data-ttu-id="ef097-133">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-133">Required.</span>
          </span>
          <span data-ttu-id="ef097-134">Oggetto di qualsiasi tipo che specifica l'elemento da aggiungere alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-134">An object of any type that specifies the element to add to the collection.</span>
          </span>
        </param>
        <param name="Key">
          <span data-ttu-id="ef097-135">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-135">Optional.</span>
          </span>
          <span data-ttu-id="ef097-136">Espressione <see langword="String" /> univoca che specifica una stringa chiave utilizzabile al posto di un indice di posizione per accedere a questo nuovo elemento della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-136">A unique <see langword="String" /> expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.</span>
          </span>
        </param>
        <param name="Before">
          <span data-ttu-id="ef097-137">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-137">Optional.</span>
          </span>
          <span data-ttu-id="ef097-138">Espressione che specifica una posizione relativa nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-138">An expression that specifies a relative position in the collection.</span>
          </span>
          <span data-ttu-id="ef097-139">L'elemento da aggiungere viene inserito nella raccolta prima dell'elemento identificato dall'argomento <c>Before</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-139">The element to be added is placed in the collection before the element identified by the <c>Before</c> argument.</span>
          </span>
          <span data-ttu-id="ef097-140">Se <c>Before</c> è un'espressione numerica, deve essere un numero compreso tra 1 e il valore della proprietà <see cref="P:Microsoft.VisualBasic.Collection.Count" /> della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-140">If <c>Before</c> is a numeric expression, it must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span>
          </span>
          <span data-ttu-id="ef097-141">Se <c>Before</c> è un'espressione <see langword="String" />, deve corrispondere alla stringa della chiave specificata quando l'elemento a cui viene fatto riferimento è stato aggiunto alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-141">If <c>Before</c> is a <see langword="String" /> expression, it must correspond to the key string specified when the element being referred to was added to the collection.</span>
          </span>
          <span data-ttu-id="ef097-142">Non è possibile specificare sia <c>Before</c> che <c>After</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-142">You cannot specify both <c>Before</c> and <c>After</c>.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="ef097-143">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-143">Optional.</span>
          </span>
          <span data-ttu-id="ef097-144">Espressione che specifica una posizione relativa nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-144">An expression that specifies a relative position in the collection.</span>
          </span>
          <span data-ttu-id="ef097-145">L'elemento da aggiungere viene inserito nella raccolta dopo l'elemento identificato dall'argomento <c>After</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-145">The element to be added is placed in the collection after the element identified by the <c>After</c> argument.</span>
          </span>
          <span data-ttu-id="ef097-146">Se <c>After</c> è un'espressione numerica, deve essere un numero compreso tra 1 e il valore della proprietà <see langword="Count" /> della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-146">If <c>After</c> is a numeric expression, it must be a number from 1 through the value of the collection's <see langword="Count" /> property.</span>
          </span>
          <span data-ttu-id="ef097-147">Se <c>After</c> è un'espressione <see langword="String" />, deve corrispondere alla stringa della chiave specificata quando l'elemento a cui viene fatto riferimento è stato aggiunto alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-147">If <c>After</c> is a <see langword="String" /> expression, it must correspond to the key string specified when the element referred to was added to the collection.</span>
          </span>
          <span data-ttu-id="ef097-148">Non è possibile specificare sia <c>Before</c> che <c>After</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-148">You cannot specify both <c>Before</c> and <c>After</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef097-149">Aggiunge un elemento all'oggetto <see langword="Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-149">Adds an element to a <see langword="Collection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-150">Il `Before` o `After` argomento deve fare riferimento a un elemento della raccolta esistente; in caso contrario, si verifica un errore.</span><span class="sxs-lookup"><span data-stu-id="ef097-150">The `Before` or `After` argument must refer to an existing element of the collection; otherwise, an error occurs.</span></span>  
  
 <span data-ttu-id="ef097-151">Se entrambi i `Before` e `After` argomenti vengono omessi, il nuovo oggetto viene aggiunto alla fine della raccolta.</span><span class="sxs-lookup"><span data-stu-id="ef097-151">If both the `Before` and `After` arguments are omitted, the new object is added to the end of the collection.</span></span>  
  
 <span data-ttu-id="ef097-152">Anche se un oggetto specificato si verifica un errore `Key` valore corrisponde alla chiave di un elemento della raccolta esistente.</span><span class="sxs-lookup"><span data-stu-id="ef097-152">An error also occurs if a specified `Key` value matches the key for an existing element of the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef097-153">L'esempio seguente usa il `Add` metodo per aggiungere `child` oggetti, ovvero istanze di una classe denominata `child` contenente una `Public` proprietà `name` , a una raccolta denominata `family`.</span><span class="sxs-lookup"><span data-stu-id="ef097-153">The following example uses the `Add` method to add `child` objects — instances of a class called `child` containing a `Public` property `name` — to a collection called `family`.</span></span> <span data-ttu-id="ef097-154">Per visualizzarne il funzionamento, creare un <xref:System.Windows.Forms.Form> con due <xref:System.Windows.Forms.Button> controlli e impostare le <xref:System.Windows.Forms.Control.Text%2A> delle proprietà per `Add` e `List`.</span><span class="sxs-lookup"><span data-stu-id="ef097-154">To see how this works, create a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.Button> controls and set their <xref:System.Windows.Forms.Control.Text%2A> properties to `Add` and `List`.</span></span> <span data-ttu-id="ef097-155">Aggiungere il `child` definizione di classe e il `family` dichiarazione per il codice del modulo.</span><span class="sxs-lookup"><span data-stu-id="ef097-155">Add the `child` class definition and the `family` declaration to the form code.</span></span> <span data-ttu-id="ef097-156">Modificare il `_Click` gestori eventi per il **Add** e **elenco** pulsanti come illustrato.</span><span class="sxs-lookup"><span data-stu-id="ef097-156">Modify the `_Click` event handlers for the **Add** and **List** buttons as shown.</span></span> <span data-ttu-id="ef097-157">Il **Add** pulsante consente di aggiungere elementi figlio.</span><span class="sxs-lookup"><span data-stu-id="ef097-157">The **Add** button allows you to add children.</span></span> <span data-ttu-id="ef097-158">Il **elenco** pulsante Visualizza i nomi di tutti i nodi figlio.</span><span class="sxs-lookup"><span data-stu-id="ef097-158">The **List** button displays the names of all the children.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="collection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef097-159">Elimina tutti gli elementi di un oggetto <see langword="Collection" /> di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-159">Deletes all elements of a Visual Basic <see langword="Collection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-160">Il `Clear` metodo svuota la raccolta e reimposta il <xref:Microsoft.VisualBasic.Collection.Count%2A> proprietà su 0.</span><span class="sxs-lookup"><span data-stu-id="ef097-160">The `Clear` method empties the collection and resets its <xref:Microsoft.VisualBasic.Collection.Count%2A> property to 0.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrCollectionObject#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string Key);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Contains(string Key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (Key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ Key);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="collection.Contains Key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Key">
          <span data-ttu-id="ef097-161">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-161">Required.</span>
          </span>
          <span data-ttu-id="ef097-162">Espressione <see langword="String" /> che specifica la chiave per la ricerca degli elementi della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-162">A <see langword="String" /> expression that specifies the key for which to search the elements of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef097-163">Restituisce un valore <see langword="Boolean" /> che indica se un oggetto <see langword="Collection" /> di Visual Basic contiene un elemento con una chiave specifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-163">Returns a <see langword="Boolean" /> value indicating whether a Visual Basic <see langword="Collection" /> object contains an element with a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef097-164">Restituisce un valore <see langword="Boolean" /> che indica se un oggetto <see langword="Collection" /> di Visual Basic contiene un elemento con una chiave specifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-164">Returns a <see langword="Boolean" /> value indicating whether a Visual Basic <see langword="Collection" /> object contains an element with a specific key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-165">`Contains` Restituisce `True` se la raccolta contiene un elemento con una chiave che corrisponde esattamente a `Key`.</span><span class="sxs-lookup"><span data-stu-id="ef097-165">`Contains` returns `True` if the collection contains an element with a key exactly matching `Key`.</span></span> <span data-ttu-id="ef097-166">In caso contrario, `Contains` restituisce `False`.</span><span class="sxs-lookup"><span data-stu-id="ef097-166">Otherwise, `Contains` returns `False`.</span></span> <span data-ttu-id="ef097-167">Maiuscole e minuscole durante l'associazione di valori di chiave.</span><span class="sxs-lookup"><span data-stu-id="ef097-167">Case is ignored when matching key values.</span></span>  
  
 <span data-ttu-id="ef097-168">Visual Basic `Collection` può contenere alcuni elementi che dispongono di chiavi e altri elementi senza chiavi.</span><span class="sxs-lookup"><span data-stu-id="ef097-168">A Visual Basic `Collection` can hold some elements that have keys and other elements without keys.</span></span> <span data-ttu-id="ef097-169">Ciò dipende dal fatto che la chiamata per il <xref:Microsoft.VisualBasic.Collection.Add%2A> metodo fornisce un argomento per l'opzione facoltativa `Key` parametro.</span><span class="sxs-lookup"><span data-stu-id="ef097-169">This depends on whether the call to the <xref:Microsoft.VisualBasic.Collection.Add%2A> method supplies an argument to the optional `Key` parameter.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrCollectionObject#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#4)]  
  
 <span data-ttu-id="ef097-170">Se si desidera cercare nella raccolta degli elementi utilizzando le proprie chiavi, è necessario fornire il `Key` argomento ogni volta che si chiama il `Add` (metodo).</span><span class="sxs-lookup"><span data-stu-id="ef097-170">If you intend to search the collection for elements using their keys, remember to supply the `Key` argument every time you call the `Add` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.VisualBasic.Collection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef097-171">Restituisce un valore <see langword="Integer" /> contenente il numero di elementi di una raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-171">Returns an <see langword="Integer" /> containing the number of elements in a collection.</span>
          </span>
          <span data-ttu-id="ef097-172">Sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-172">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef097-173">Restituisce un valore <see langword="Integer" /> contenente il numero di elementi di una raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-173">Returns an <see langword="Integer" /> containing the number of elements in a collection.</span>
          </span>
          <span data-ttu-id="ef097-174">Sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-174">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-175">Usare la `Count` proprietà per determinare il numero di elementi in un `Collection` oggetto.</span><span class="sxs-lookup"><span data-stu-id="ef097-175">Use the `Count` property to determine the number of elements in a `Collection` object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef097-176">In questo esempio viene illustrato l'utilizzo dei `Count` proprietà per visualizzare il numero di elementi in un <xref:Microsoft.VisualBasic.Collection> oggetto nella variabile `birthdays`.</span><span class="sxs-lookup"><span data-stu-id="ef097-176">This example illustrates the use of the `Count` property to display the number of elements in a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#6)]  
  
 <span data-ttu-id="ef097-177">Il `Collection` oggetto è in base uno, vale a dire che i valori di indice dell'intervallo compreso tra 1 e il valore di elementi di `Count` proprietà.</span><span class="sxs-lookup"><span data-stu-id="ef097-177">The `Collection` object is one-based, which means that the index values of the elements range from 1 through the value of the `Count` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="collection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef097-178">Restituisce un riferimento a un oggetto enumeratore, che viene utilizzato per scorrere un oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-178">Returns a reference to an enumerator object, which is used to iterate over a <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef097-179">Restituisce un riferimento a un oggetto enumeratore, che viene utilizzato per scorrere un oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-179">Returns a reference to an enumerator object, which is used to iterate over a <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-180">Il [For Each... Istruzione successiva](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) chiamate `GetEnumerator` per ottenere un oggetto enumeratore per consentire l'iterazione degli elementi della raccolta.</span><span class="sxs-lookup"><span data-stu-id="ef097-180">The [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) calls `GetEnumerator` to obtain an enumerator object to support iteration over a collection's elements.</span></span> <span data-ttu-id="ef097-181">In genere, si utilizza un `For Each`... `Next` per scorrere una raccolta o una matrice e non è necessario chiamare `GetEnumerator` in modo esplicito.</span><span class="sxs-lookup"><span data-stu-id="ef097-181">Normally, you use a `For Each`...`Next` loop to traverse a collection or array, and you do not need to call `GetEnumerator` explicitly.</span></span>  
  
 <span data-ttu-id="ef097-182">Se è necessario un maggiore controllo sull'iterazione rispetto di `For Each`... `Next` fornire le istruzioni, è possibile usare il `GetEnumerator` metodo per eseguire uno scorrimento personalizzato.</span><span class="sxs-lookup"><span data-stu-id="ef097-182">If you need closer control over the iteration than the `For Each`...`Next` statements provide, you can use the `GetEnumerator` method to perform a customized traversal.</span></span> <span data-ttu-id="ef097-183">Di seguito sono alcuni casi in cui potrebbe essere necessario eseguire questa operazione.</span><span class="sxs-lookup"><span data-stu-id="ef097-183">The following are some cases in which you might need to do this.</span></span>  
  
-   <span data-ttu-id="ef097-184">Si potrebbe voler tornare all'inizio della raccolta e avviare nuovamente l'iterazione, prima del completamento.</span><span class="sxs-lookup"><span data-stu-id="ef097-184">You might want to return to the beginning of the collection and start the iteration again before it is finished.</span></span>  
  
-   <span data-ttu-id="ef097-185">È possibile ignorare uno o più elementi per svariati motivi.</span><span class="sxs-lookup"><span data-stu-id="ef097-185">You might want to skip over one or more elements for a variety of reasons.</span></span>  
  
-   <span data-ttu-id="ef097-186">Potrebbe essere necessario modificare gli elementi della raccolta durante un attraversamento.</span><span class="sxs-lookup"><span data-stu-id="ef097-186">You might need to change the elements of the collection in the middle of a traversal.</span></span> <span data-ttu-id="ef097-187">In questo caso è necessario ottenere un nuovo oggetto enumeratore perché quello precedente è stato invalidato.</span><span class="sxs-lookup"><span data-stu-id="ef097-187">In this case you must obtain a new enumerator object because the previous one is invalidated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef097-188">Nell'esempio seguente viene illustrato come utilizzare `GetEnumerator` per recuperare tutti gli elementi di un `Collection` oggetto.</span><span class="sxs-lookup"><span data-stu-id="ef097-188">The following example shows how to use `GetEnumerator` to retrieve all the elements of a `Collection` object.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#7)]  
  
 <span data-ttu-id="ef097-189">`GetEnumerator` Costruisce e restituisce un oggetto enumeratore, che implementa il <xref:System.Collections.IEnumerator> interfaccia del <xref:System.Collections> dello spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="ef097-189">`GetEnumerator` constructs and returns an enumerator object, which implements the <xref:System.Collections.IEnumerator> interface of the <xref:System.Collections> namespace.</span></span> <span data-ttu-id="ef097-190">L'oggetto enumeratore espone il <xref:System.Collections.IEnumerator.Current%2A> proprietà e i <xref:System.Collections.IEnumerator.MoveNext%2A> e <xref:System.Collections.IEnumerator.Reset%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="ef097-190">The enumerator object exposes the <xref:System.Collections.IEnumerator.Current%2A> property and the <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Reset%2A> methods.</span></span> <span data-ttu-id="ef097-191">Per altre informazioni, vedere [For Each... Istruzione Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span><span class="sxs-lookup"><span data-stu-id="ef097-191">For more information, see [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ef097-192">Restituisce un elemento specifico di un oggetto <see langword="Collection" /> in base alla posizione o alla chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-192">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="ef097-193">Sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-193">Read-only.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="Microsoft.VisualBasic.Collection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="ef097-194">(A) Espressione numerica che specifica la posizione di un elemento della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-194">(A) A numeric expression that specifies the position of an element of the collection.</span>
          </span>
          <span data-ttu-id="ef097-195">
            <c>Index</c> deve essere un numero compreso tra 1 e il valore della proprietà <see cref="P:Microsoft.VisualBasic.Collection.Count" /> della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-195">
              <c>Index</c> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span>
          </span>
          <span data-ttu-id="ef097-196">Oppure (B) un'espressione <see langword="Object" /> che specifica la posizione o la stringa della chiave di un elemento della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-196">Or (B) An <see langword="Object" /> expression that specifies the position or key string of an element of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef097-197">Restituisce un elemento specifico di un oggetto <see langword="Collection" /> in base alla posizione o alla chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-197">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="ef097-198">Sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-198">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef097-199">Restituisce un elemento specifico di un oggetto <see langword="Collection" /> in base alla posizione o alla chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-199">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="ef097-200">Sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-200">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-201">Se `Index` JE typu `Object`, il `Item` proprietà tenta di considerarlo come un `String`, `Char`, `Char` matrice o un valore integer.</span><span class="sxs-lookup"><span data-stu-id="ef097-201">If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value.</span></span> <span data-ttu-id="ef097-202">Se `Item` non è possibile convertire `Index` al `String` oppure `Integer`, genera un <xref:System.ArgumentException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="ef097-202">If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.</span></span>  
  
 <span data-ttu-id="ef097-203">Il `Item` proprietà la proprietà predefinita per una raccolta.</span><span class="sxs-lookup"><span data-stu-id="ef097-203">The `Item` property is the default property for a collection.</span></span> <span data-ttu-id="ef097-204">Di conseguenza, le righe di codice seguenti sono equivalenti.</span><span class="sxs-lookup"><span data-stu-id="ef097-204">Therefore, the following lines of code are equivalent.</span></span>  
  
```  
MsgBox(CStr(customers.Item(1)))  
MsgBox(CStr(customers(1)))  
```  
  
   
  
## Examples  
 <span data-ttu-id="ef097-205">L'esempio seguente usa il `Item` proprietà per recuperare un riferimento a un oggetto in una raccolta.</span><span class="sxs-lookup"><span data-stu-id="ef097-205">The following example uses the `Item` property to retrieve a reference to an object in a collection.</span></span> <span data-ttu-id="ef097-206">Viene creato `birthdays` come un `Collection` dell'oggetto e quindi recupera l'oggetto che rappresenta il compleanno, usando la chiave `"Bill"` come il `Index` argomento.</span><span class="sxs-lookup"><span data-stu-id="ef097-206">It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `"Bill"` as the `Index` argument.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  
  
 <span data-ttu-id="ef097-207">Si noti che la prima chiamata specifica in modo esplicito il `Item` proprietà, ma la seconda non esiste.</span><span class="sxs-lookup"><span data-stu-id="ef097-207">Note that the first call explicitly specifies the `Item` property, but the second does not.</span></span> <span data-ttu-id="ef097-208">Entrambe le chiamate funzionano perché i `Item` proprietà è la proprietà predefinita per un `Collection` oggetto.</span><span class="sxs-lookup"><span data-stu-id="ef097-208">Both calls work because the `Item` property is the default property for a `Collection` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj" Usage="Microsoft.VisualBasic.Collection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="ef097-209">(A) Espressione numerica che specifica la posizione di un elemento della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-209">(A) A numeric expression that specifies the position of an element of the collection.</span>
          </span>
          <span data-ttu-id="ef097-210">
            <c>Index</c> deve essere un numero compreso tra 1 e il valore della proprietà <see cref="P:Microsoft.VisualBasic.Collection.Count" /> della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-210">
              <c>Index</c> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span>
          </span>
          <span data-ttu-id="ef097-211">Oppure (B) un'espressione <see langword="Object" /> che specifica la posizione o la stringa della chiave di un elemento della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-211">Or (B) An <see langword="Object" /> expression that specifies the position or key string of an element of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef097-212">Restituisce un elemento specifico di un oggetto <see langword="Collection" /> in base alla posizione o alla chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-212">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="ef097-213">Sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-213">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef097-214">Restituisce un elemento specifico di un oggetto <see langword="Collection" /> in base alla posizione o alla chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-214">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="ef097-215">Sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-215">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-216">Se `Index` JE typu `Object`, il `Item` proprietà tenta di considerarlo come un `String`, `Char`, `Char` matrice o un valore integer.</span><span class="sxs-lookup"><span data-stu-id="ef097-216">If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value.</span></span> <span data-ttu-id="ef097-217">Se `Item` non è possibile convertire `Index` al `String` oppure `Integer`, genera un <xref:System.ArgumentException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="ef097-217">If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.</span></span>  
  
 <span data-ttu-id="ef097-218">Il `Item` proprietà la proprietà predefinita per una raccolta.</span><span class="sxs-lookup"><span data-stu-id="ef097-218">The `Item` property is the default property for a collection.</span></span> <span data-ttu-id="ef097-219">Di conseguenza, le righe di codice seguenti sono equivalenti.</span><span class="sxs-lookup"><span data-stu-id="ef097-219">Therefore, the following lines of code are equivalent.</span></span>  
  
```  
MsgBox(CStr(customers.Item(1)))  
MsgBox(CStr(customers(1)))  
```  
  
   
  
## Examples  
 <span data-ttu-id="ef097-220">L'esempio seguente usa il `Item` proprietà per recuperare un riferimento a un oggetto in una raccolta.</span><span class="sxs-lookup"><span data-stu-id="ef097-220">The following example uses the `Item` property to retrieve a reference to an object in a collection.</span></span> <span data-ttu-id="ef097-221">Viene creato `birthdays` come un `Collection` dell'oggetto e quindi recupera l'oggetto che rappresenta il compleanno, usando la chiave `"Bill"` come il `Index` argomento.</span><span class="sxs-lookup"><span data-stu-id="ef097-221">It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `"Bill"` as the `Index` argument.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  
  
 <span data-ttu-id="ef097-222">Si noti che la prima chiamata specifica in modo esplicito il `Item` proprietà, ma la seconda non esiste.</span><span class="sxs-lookup"><span data-stu-id="ef097-222">Note that the first call explicitly specifies the `Item` property, but the second does not.</span></span> <span data-ttu-id="ef097-223">Entrambe le chiamate funzionano perché i `Item` proprietà è la proprietà predefinita per un `Collection` oggetto.</span><span class="sxs-lookup"><span data-stu-id="ef097-223">Both calls work because the `Item` property is the default property for a `Collection` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string Key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ Key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="Microsoft.VisualBasic.Collection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Key">
          <span data-ttu-id="ef097-224">Espressione <see langword="String" /> univoca che specifica una stringa chiave utilizzabile al posto di un indice di posizione per accedere a un elemento della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-224">A unique <see langword="String" /> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.</span>
          </span>
          <span data-ttu-id="ef097-225">
            <c>Key</c> deve corrispondere all'argomento <c>Key</c> specificato quando l'elemento è stato aggiunto alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-225">
              <c>Key</c> must correspond to the <c>Key</c> argument specified when the element was added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef097-226">Restituisce un elemento specifico di un oggetto <see langword="Collection" /> in base alla posizione o alla chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-226">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="ef097-227">Sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-227">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef097-228">Restituisce un elemento specifico di un oggetto <see langword="Collection" /> in base alla posizione o alla chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-228">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="ef097-229">Sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-229">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-230">Se `Index` JE typu `Object`, il `Item` proprietà tenta di considerarlo come un `String`, `Char`, `Char` matrice o un valore integer.</span><span class="sxs-lookup"><span data-stu-id="ef097-230">If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value.</span></span> <span data-ttu-id="ef097-231">Se `Item` non è possibile convertire `Index` al `String` oppure `Integer`, genera un <xref:System.ArgumentException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="ef097-231">If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.</span></span>  
  
 <span data-ttu-id="ef097-232">Il `Item` proprietà la proprietà predefinita per una raccolta.</span><span class="sxs-lookup"><span data-stu-id="ef097-232">The `Item` property is the default property for a collection.</span></span> <span data-ttu-id="ef097-233">Di conseguenza, le righe di codice seguenti sono equivalenti.</span><span class="sxs-lookup"><span data-stu-id="ef097-233">Therefore, the following lines of code are equivalent.</span></span>  
  
```  
MsgBox(CStr(customers.Item(1)))  
MsgBox(CStr(customers(1)))  
```  
  
   
  
## Examples  
 <span data-ttu-id="ef097-234">L'esempio seguente usa il `Item` proprietà per recuperare un riferimento a un oggetto in una raccolta.</span><span class="sxs-lookup"><span data-stu-id="ef097-234">The following example uses the `Item` property to retrieve a reference to an object in a collection.</span></span> <span data-ttu-id="ef097-235">Viene creato `birthdays` come un `Collection` dell'oggetto e quindi recupera l'oggetto che rappresenta il compleanno, usando la chiave `"Bill"` come il `Index` argomento.</span><span class="sxs-lookup"><span data-stu-id="ef097-235">It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `"Bill"` as the `Index` argument.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  
  
 <span data-ttu-id="ef097-236">Si noti che la prima chiamata specifica in modo esplicito il `Item` proprietà, ma la seconda non esiste.</span><span class="sxs-lookup"><span data-stu-id="ef097-236">Note that the first call explicitly specifies the `Item` property, but the second does not.</span></span> <span data-ttu-id="ef097-237">Entrambe le chiamate funzionano perché i `Item` proprietà è la proprietà predefinita per un `Collection` oggetto.</span><span class="sxs-lookup"><span data-stu-id="ef097-237">Both calls work because the `Item` property is the default property for a `Collection` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ef097-238">Rimuove un elemento dall'oggetto <see langword="Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-238">Removes an element from a <see langword="Collection" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (Index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(int Index);" />
      <MemberSignature Language="F#" Value="member this.Remove : int -&gt; unit" Usage="collection.Remove Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="ef097-239">Espressione numerica che specifica la posizione di un elemento della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-239">A numeric expression that specifies the position of an element of the collection.</span>
          </span>
          <span data-ttu-id="ef097-240">
            <c>Index</c> deve essere un numero compreso tra 1 e il valore della proprietà <see cref="P:Microsoft.VisualBasic.Collection.Count" /> della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-240">
              <c>Index</c> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef097-241">Rimuove un elemento dall'oggetto <see langword="Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-241">Removes an element from a <see langword="Collection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-242">Quando `Remove` Elimina un elemento da una raccolta, si decrementa la raccolta <xref:Microsoft.VisualBasic.Collection.Count%2A> proprietà da uno.</span><span class="sxs-lookup"><span data-stu-id="ef097-242">When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one.</span></span> <span data-ttu-id="ef097-243">Si riduce anche il `Index` pari a tutti gli elementi che seguiva l'elemento eliminato nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="ef097-243">It also decrements the `Index` value of every element that formerly followed the deleted element in the collection.</span></span>  
  
 <span data-ttu-id="ef097-244">Se un elemento è stato aggiunto alla raccolta senza una `Key`, è necessario usare relativo `Index` per rimuoverlo.</span><span class="sxs-lookup"><span data-stu-id="ef097-244">If an element was added to the collection without a `Key`, you must use its `Index` to remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef097-245">In questo esempio viene illustrato l'utilizzo dei `Remove` metodo per rimuovere gli oggetti da un <xref:Microsoft.VisualBasic.Collection> oggetto nella variabile `birthdays`.</span><span class="sxs-lookup"><span data-stu-id="ef097-245">This example illustrates the use of the `Remove` method to remove objects from a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#9)]  
  
 <span data-ttu-id="ef097-246">Dopo le quattro chiamate per il `Add` metodo, il `Count` proprietà contiene 4, elemento `"Bill"` presenta il valore di indice 1 ed elemento `"Pete"` presenta il valore di indice 4.</span><span class="sxs-lookup"><span data-stu-id="ef097-246">Following the four calls to the `Add` method, the `Count` property contains 4, element `"Bill"` has index value 1, and element `"Pete"` has index value 4.</span></span>  
  
 <span data-ttu-id="ef097-247">Dopo la prima chiamata a `Remove`, `Count` è 3, elemento `"Bill"` viene eliminata e l'elemento `"Pete"` presenta il valore di indice 3.</span><span class="sxs-lookup"><span data-stu-id="ef097-247">Following the first call to `Remove`, `Count` is 3, element `"Bill"` is deleted, and element `"Pete"` has index value 3.</span></span>  
  
 <span data-ttu-id="ef097-248">Dopo la seconda chiamata a `Remove`, `Count` è 2, elemento `"Mike"` viene eliminata e l'elemento `"Pete"` presenta il valore di indice 2.</span><span class="sxs-lookup"><span data-stu-id="ef097-248">Following the second call to `Remove`, `Count` is 2, element `"Mike"` is deleted, and element `"Pete"` has index value 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string Key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string Key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (Key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ Key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="collection.Remove Key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Key">
          <span data-ttu-id="ef097-249">Espressione <see langword="String" /> univoca che specifica una stringa chiave utilizzabile al posto di un indice di posizione per accedere a un elemento della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-249">A unique <see langword="String" /> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.</span>
          </span>
          <span data-ttu-id="ef097-250">
            <c>Key</c> deve corrispondere all'argomento <c>Key</c> specificato quando l'elemento è stato aggiunto alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-250">
              <c>Key</c> must correspond to the <c>Key</c> argument specified when the element was added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef097-251">Rimuove un elemento dall'oggetto <see langword="Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-251">Removes an element from a <see langword="Collection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-252">Quando `Remove` Elimina un elemento da una raccolta, si decrementa la raccolta <xref:Microsoft.VisualBasic.Collection.Count%2A> proprietà da uno.</span><span class="sxs-lookup"><span data-stu-id="ef097-252">When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one.</span></span> <span data-ttu-id="ef097-253">Si riduce anche il `Index` pari a tutti gli elementi che seguiva l'elemento eliminato nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="ef097-253">It also decrements the `Index` value of every element that formerly followed the deleted element in the collection.</span></span>  
  
 <span data-ttu-id="ef097-254">Se un elemento è stato aggiunto alla raccolta senza una `Key`, è necessario usare relativo `Index` per rimuoverlo.</span><span class="sxs-lookup"><span data-stu-id="ef097-254">If an element was added to the collection without a `Key`, you must use its `Index` to remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef097-255">In questo esempio viene illustrato l'utilizzo dei `Remove` metodo per rimuovere gli oggetti da un <xref:Microsoft.VisualBasic.Collection> oggetto nella variabile `birthdays`.</span><span class="sxs-lookup"><span data-stu-id="ef097-255">This example illustrates the use of the `Remove` method to remove objects from a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#9)]  
  
 <span data-ttu-id="ef097-256">Dopo le quattro chiamate per il `Add` metodo, il `Count` proprietà contiene 4, elemento `"Bill"` presenta il valore di indice 1 ed elemento `"Pete"` presenta il valore di indice 4.</span><span class="sxs-lookup"><span data-stu-id="ef097-256">Following the four calls to the `Add` method, the `Count` property contains 4, element `"Bill"` has index value 1, and element `"Pete"` has index value 4.</span></span>  
  
 <span data-ttu-id="ef097-257">Dopo la prima chiamata a `Remove`, `Count` è 3, elemento `"Bill"` viene eliminata e l'elemento `"Pete"` presenta il valore di indice 3.</span><span class="sxs-lookup"><span data-stu-id="ef097-257">Following the first call to `Remove`, `Count` is 3, element `"Bill"` is deleted, and element `"Pete"` has index value 3.</span></span>  
  
 <span data-ttu-id="ef097-258">Dopo la seconda chiamata a `Remove`, `Count` è 2, elemento `"Mike"` viene eliminata e l'elemento `"Pete"` presenta il valore di indice 2.</span><span class="sxs-lookup"><span data-stu-id="ef097-258">Following the second call to `Remove`, `Count` is 2, element `"Mike"` is deleted, and element `"Pete"` has index value 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo" ExplicitInterfaceMemberName="ICollectionCopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void ICollectionCopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void ICollectionCopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="ef097-259">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-259">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="ef097-260">L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-260">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="ef097-261">Indice in base zero in <c>array</c> in corrispondenza del quale ha inizio la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-261">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef097-262">Copia gli elementi di <see cref="T:Microsoft.VisualBasic.Collection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-262">Copies the elements of the <see cref="T:Microsoft.VisualBasic.Collection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
          <span data-ttu-id="ef097-263">Implementa l'interfaccia <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-263">Implements the <see cref="T:System.Collections.ICollection" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-264">Vengono copiati gli elementi per il <xref:System.Array> nello stesso ordine in cui l'enumeratore esegue l'iterazione attraverso la <xref:Microsoft.VisualBasic.Collection> oggetto.</span><span class="sxs-lookup"><span data-stu-id="ef097-264">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 <span data-ttu-id="ef097-265">Questo metodo è un'operazione O (`n`) operazione, in cui `n` ottenuto dal <xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count>.</span><span class="sxs-lookup"><span data-stu-id="ef097-265">This method is an O(`n`) operation, where `n` is obtained from the <xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ef097-266">
            <paramref name="array" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-266">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ef097-267">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-267">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ef097-268">
            <paramref name="array" /> è multidimensionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-268">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="ef097-269">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-269">-or-</span>
          </span>
          <span data-ttu-id="ef097-270">Il numero degli elementi dell'oggetto <see cref="T:Microsoft.VisualBasic.Collection" /> di origine è maggiore dello spazio disponibile tra il parametro <paramref name="index" /> e la fine del parametro <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-270">The number of elements in the source <see cref="T:Microsoft.VisualBasic.Collection" /> object is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ef097-271">Non è possibile eseguire automaticamente il cast del tipo dell'oggetto <see cref="T:Microsoft.VisualBasic.Collection" /> di origine nel tipo dell'oggetto <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-271">The type of the source <see cref="T:Microsoft.VisualBasic.Collection" /> object cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count" ExplicitInterfaceMemberName="ICollectionCount">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ICollectionCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.ICollectionCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ICollectionCount As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized" ExplicitInterfaceMemberName="ICollectionIsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ICollectionIsSynchronized" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.ICollectionIsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ICollectionIsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot" ExplicitInterfaceMemberName="ICollectionSyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ICollectionSyncRoot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.ICollectionSyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ICollectionSyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator" ExplicitInterfaceMemberName="ICollectionGetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance class System.Collections.IEnumerator ICollectionGetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function ICollectionGetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ ICollectionGetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef097-272">Restituisce un enumeratore che consente di scorrere la raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-272">Returns an enumerator that iterates through the collection.</span>
          </span>
          <span data-ttu-id="ef097-273">Implementa l'interfaccia <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-273">Implements the <see cref="T:System.Collections.ICollection" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef097-274">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-274">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-275">[Visual Basic, c#]</span><span class="sxs-lookup"><span data-stu-id="ef097-275">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="ef097-276">L'istruzione `foreach` del linguaggio C# (`for each` in Visual Basic) nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="ef097-276">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="ef097-277">Pertanto, si consiglia l'utilizzo di `foreach`, anziché la modifica diretta dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="ef097-277">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="ef097-278">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="ef097-278">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="ef097-279">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="ef097-279">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="ef097-280">Il <xref:System.Collections.IEnumerator.Reset%2A> metodo riporta l'enumeratore in questa posizione.</span><span class="sxs-lookup"><span data-stu-id="ef097-280">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="ef097-281">In questa posizione, la <xref:System.Collections.IEnumerator.Current%2A> proprietà non è definita.</span><span class="sxs-lookup"><span data-stu-id="ef097-281">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="ef097-282">Pertanto, è necessario chiamare il <xref:System.Collections.IEnumerator.MoveNext%2A> per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore del metodo <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef097-282">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="ef097-283"><xref:System.Collections.IEnumerator.Current%2A> restituisce lo stesso oggetto finché non viene chiamato il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef097-283"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="ef097-284"><xref:System.Collections.IEnumerator.MoveNext%2A> imposta <xref:System.Collections.IEnumerator.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="ef097-284"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="ef097-285">Se <xref:System.Collections.IEnumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="ef097-285">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="ef097-286">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <xref:System.Collections.IEnumerator.MoveNext%2A> restituire anche `false`.</span><span class="sxs-lookup"><span data-stu-id="ef097-286">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="ef097-287">Se l'ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`, <xref:System.Collections.IEnumerator.Current%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="ef097-287">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="ef097-288">Per impostare nuovamente la proprietà <xref:System.Collections.IEnumerator.Current%2A> sul primo elemento della raccolta, è possibile chiamare il metodo <xref:System.Collections.IEnumerator.Reset%2A> seguito da <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef097-288">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="ef097-289">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="ef097-289">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="ef097-290">In caso di modifiche alla raccolta, ad esempio aggiunta, modifica o eliminazione di elementi, l'enumeratore sarà reso non valido in modo irreversibile e il comportamento corrispondente non sarà definito.</span><span class="sxs-lookup"><span data-stu-id="ef097-290">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="ef097-291">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="ef097-291">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ef097-292">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="ef097-292">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="ef097-293">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="ef097-293">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add" ExplicitInterfaceMemberName="IListAdd">
      <MemberSignature Language="C#" Value="int IList.Add (object Item);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance int32 IListAdd(object Item) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListAdd(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IListAdd (Item As Object) As Integer Implements IList.Add" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value=" virtual int IListAdd(System::Object ^ Item) = System::Collections::IList::Add;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="int IList.Add (object value);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance int32 IListAdd(object value) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Function IListAdd (value As Object) As Integer Implements IList.Add" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value=" virtual int IListAdd(System::Object ^ value) = System::Collections::IList::Add;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Item" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ef097-294">
            <see cref="T:System.Object" /> da aggiungere all'oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-294">The <see cref="T:System.Object" /> to add to the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <param name="Item">To be added.</param>
        <summary>
          <span data-ttu-id="ef097-295">Aggiunge un elemento all'oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-295">Adds an item to the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="ef097-296">Implementa l'interfaccia <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-296">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef097-297">Posizione in cui è stato inserito il nuovo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-297">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-298">È anche possibile usare la <xref:Microsoft.VisualBasic.Collection.Item%2A> proprietà per aggiungere nuovi elementi impostando il valore di una chiave che non esiste nel <xref:Microsoft.VisualBasic.Collection> oggetto.</span><span class="sxs-lookup"><span data-stu-id="ef097-298">You can also use the <xref:Microsoft.VisualBasic.Collection.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ef097-299">L'oggetto <see cref="T:Microsoft.VisualBasic.Collection" /> è in sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-299">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span>
          </span>
          <span data-ttu-id="ef097-300">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-300">-or-</span>
          </span>
          <span data-ttu-id="ef097-301">L'oggetto <see cref="T:Microsoft.VisualBasic.Collection" /> è di dimensioni fisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-301">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
        <altmember cref="P:Microsoft.VisualBasic.Collection.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear" ExplicitInterfaceMemberName="IListClear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListClear" />
      <MemberSignature Language="VB.NET" Value="Sub IListClear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListClear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef097-302">Consente di rimuovere tutti gli elementi dall'oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-302">Removes all items from the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="ef097-303">Implementa l'interfaccia <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-303">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-304">Questo metodo rimuove tutti gli elementi dal <xref:Microsoft.VisualBasic.Collection> oggetto.</span><span class="sxs-lookup"><span data-stu-id="ef097-304">This method removes all items from the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ef097-305">La classe <see cref="T:System.Collections.IList" /> è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-305">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.Hashtable.Clear" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains" ExplicitInterfaceMemberName="IListContains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance bool IListContains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListContains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IListContains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool IListContains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ef097-306">Oggetto <see cref="T:System.Object" /> da individuare nell'oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-306">The <see cref="T:System.Object" /> to locate in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef097-307">Stabilisce se l'oggetto <see cref="T:Microsoft.VisualBasic.Collection" /> contiene un valore specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-307">Determines whether the <see cref="T:Microsoft.VisualBasic.Collection" /> object contains a specific value.</span>
          </span>
          <span data-ttu-id="ef097-308">Implementa l'interfaccia <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-308">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef097-309">Restituisce <see langword="True" /> se <see cref="T:System.Object" /> viene trovato nell'oggetto <see cref="T:Microsoft.VisualBasic.Collection" />; in caso contrario, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-309">Returns <see langword="True" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:Microsoft.VisualBasic.Collection" /> object; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-310">Questo metodo determina se il <xref:Microsoft.VisualBasic.Collection> oggetto contiene un valore specifico.</span><span class="sxs-lookup"><span data-stu-id="ef097-310">This method determines whether the <xref:Microsoft.VisualBasic.Collection> object contains a specific value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf" ExplicitInterfaceMemberName="IListIndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance int32 IListIndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IListIndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int IListIndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ef097-311">Oggetto <see cref="T:System.Object" /> da individuare nell'oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-311">The <see cref="T:System.Object" /> to locate in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef097-312">Consente di determinare l'indice di un elemento specifico dell'oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-312">Determines the index of a specific item in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="ef097-313">Implementa l'interfaccia <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-313">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef097-314">Indice di <paramref name="value" /> se si trova nella raccolta; in caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-314">The index of <paramref name="value" /> if found in the collection; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-315">Questo metodo determina l'indice di un elemento specifico di <xref:Microsoft.VisualBasic.Collection> oggetto.</span><span class="sxs-lookup"><span data-stu-id="ef097-315">This method determines the index of a specific item in the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert" ExplicitInterfaceMemberName="IListInsert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListInsert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub IListInsert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListInsert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ef097-316">Indice in base zero in corrispondenza del quale deve essere inserito <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-316">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ef097-317">
            <see cref="T:System.Object" /> da inserire nell'oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-317">The <see cref="T:System.Object" /> to insert into the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef097-318">Inserisce un elemento nell'oggetto <see cref="T:Microsoft.VisualBasic.Collection" /> in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-318">Inserts an item to the <see cref="T:Microsoft.VisualBasic.Collection" /> object at the specified index.</span>
          </span>
          <span data-ttu-id="ef097-319">Implementa l'interfaccia <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-319">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-320">Se `index` è uguale al numero di elementi nel <xref:Microsoft.VisualBasic.Collection> dell'oggetto, quindi `value` viene aggiunto alla fine.</span><span class="sxs-lookup"><span data-stu-id="ef097-320">If `index` equals the number of items in the <xref:Microsoft.VisualBasic.Collection> object, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="ef097-321">In raccolte di elementi adiacenti, quali gli elenchi, gli elementi successivi al punto di inserimento vengono spostati verso il basso per consentire l'inserimento del nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="ef097-321">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="ef097-322">Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati.</span><span class="sxs-lookup"><span data-stu-id="ef097-322">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="ef097-323">Questo comportamento non viene applicato alle raccolte in cui gli elementi sono raggruppati concettualmente in bucket, come accade ad esempio per le tabelle hash.</span><span class="sxs-lookup"><span data-stu-id="ef097-323">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ef097-324">
            <paramref name="index" /> non è un indice valido nell'oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-324">
              <paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ef097-325">L'oggetto <see cref="T:Microsoft.VisualBasic.Collection" /> è in sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-325">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span>
          </span>
          <span data-ttu-id="ef097-326">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-326">-or-</span>
          </span>
          <span data-ttu-id="ef097-327">L'oggetto <see cref="T:Microsoft.VisualBasic.Collection" /> è di dimensioni fisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-327">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ef097-328">
            <paramref name="value" /> è un riferimento null nell'oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-328">
              <paramref name="value" /> is null reference in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize" ExplicitInterfaceMemberName="IListIsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IListIsFixedSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.IListIsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IListIsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly" ExplicitInterfaceMemberName="IListIsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IListIsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.IListIsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IListIsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item" ExplicitInterfaceMemberName="IListItem">
      <MemberSignature Language="C#" Value="object System.Collections.IList.IListItem[int Index] { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance object IListItem(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.IListItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property IListItem(Index As Integer) As Object Implements IList.IListItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.IListItem[int] { System::Object ^ get(int Index); void set(int Index, System::Object ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Usage="Microsoft.VisualBasic.Collection.IListItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="object System.Collections.IList.IListItem[int index] { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value=" Property IListItem(index As Integer) As Object Implements IList.IListItem" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.IListItem[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="F#" Usage="Microsoft.VisualBasic.Collection.IListItem" FrameworkAlternate="netframework-2.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove" ExplicitInterfaceMemberName="IListRemove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListRemove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListRemove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub IListRemove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListRemove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ef097-329">Oggetto <see cref="T:System.Object" /> che deve essere rimosso dall'oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-329">The <see cref="T:System.Object" /> to remove from the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef097-330">Consente di rimuovere la prima occorrenza di un oggetto specifico dall'oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-330">Removes the first occurrence of a specific object from the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="ef097-331">Implementa l'interfaccia <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-331">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-332">In raccolte di elementi adiacenti, quali gli elenchi, gli elementi successivi al punto di inserimento vengono spostati verso il basso per consentire l'inserimento del nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="ef097-332">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="ef097-333">Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati.</span><span class="sxs-lookup"><span data-stu-id="ef097-333">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="ef097-334">Questo comportamento non viene applicato alle raccolte in cui gli elementi sono raggruppati concettualmente in bucket, come accade ad esempio per le tabelle hash.</span><span class="sxs-lookup"><span data-stu-id="ef097-334">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span> <span data-ttu-id="ef097-335">Se `value` non viene trovato nel <xref:Microsoft.VisualBasic.Collection> oggetto, il <xref:Microsoft.VisualBasic.Collection> oggetto rimane invariato e viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="ef097-335">If `value` is not found in the <xref:Microsoft.VisualBasic.Collection> object, the <xref:Microsoft.VisualBasic.Collection> object remains unchanged and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ef097-336">L'oggetto <see cref="T:Microsoft.VisualBasic.Collection" /> è in sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-336">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span>
          </span>
          <span data-ttu-id="ef097-337">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-337">-or-</span>
          </span>
          <span data-ttu-id="ef097-338">L'oggetto <see cref="T:Microsoft.VisualBasic.Collection" /> è di dimensioni fisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-338">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt" ExplicitInterfaceMemberName="IListRemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListRemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListRemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub IListRemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListRemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ef097-339">Indice in base zero dell'elemento da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-339">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef097-340">Rimuove l'oggetto <see cref="T:Microsoft.VisualBasic.Collection" /> in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-340">Removes the <see cref="T:Microsoft.VisualBasic.Collection" /> object item at the specified index.</span>
          </span>
          <span data-ttu-id="ef097-341">Implementa l'interfaccia <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-341">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-342">In raccolte di elementi adiacenti, quali gli elenchi, gli elementi successivi al punto di inserimento vengono spostati verso il basso per consentire l'inserimento del nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="ef097-342">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="ef097-343">Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati.</span><span class="sxs-lookup"><span data-stu-id="ef097-343">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="ef097-344">Questo comportamento non viene applicato alle raccolte in cui gli elementi sono raggruppati concettualmente in bucket, come accade ad esempio per le tabelle hash.</span><span class="sxs-lookup"><span data-stu-id="ef097-344">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ef097-345">
            <paramref name="index" /> non è un indice valido nell'oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-345">
              <paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ef097-346">L'oggetto <see cref="T:Microsoft.VisualBasic.Collection" /> è in sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-346">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span>
          </span>
          <span data-ttu-id="ef097-347">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-347">-or-</span>
          </span>
          <span data-ttu-id="ef097-348">L'oggetto <see cref="T:Microsoft.VisualBasic.Collection" /> è di dimensioni fisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-348">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization" ExplicitInterfaceMemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="ef097-349">Oggetto che ha avviato il callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-349">The object that initiated the callback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef097-350">Viene eseguito dopo che tutto l'oggetto grafico <see cref="T:Microsoft.VisualBasic.Collection" /> è stato deserializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-350">Runs after the entire <see cref="T:Microsoft.VisualBasic.Collection" /> object graph has been deserialized.</span>
          </span>
          <span data-ttu-id="ef097-351">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.IDeserializationCallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-351">Implements the <see cref="T:System.Runtime.Serialization.IDeserializationCallback" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-352">Questo metodo viene chiamato dopo che tutto <xref:Microsoft.VisualBasic.Collection> oggetto grafico è stato deserializzato.</span><span class="sxs-lookup"><span data-stu-id="ef097-352">This method is called after the entire <xref:Microsoft.VisualBasic.Collection> object graph has been deserialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Runtime.Serialization.IDeserializationCallback" />
        <altmember cref="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData" ExplicitInterfaceMemberName="GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="ef097-353">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente le informazioni necessarie per serializzare l'oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-353">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="ef097-354">Un oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente l'origine e la destinazione del flusso serializzato associato all'oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-354">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef097-355">Restituisce i dati necessari per la serializzazione dell'oggetto <see cref="T:Microsoft.VisualBasic.Collection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-355">Returns the data needed to serialize the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="ef097-356">Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef097-356">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef097-357">Questo metodo restituisce i dati necessari per serializzare il <xref:Microsoft.VisualBasic.Collection> oggetto.</span><span class="sxs-lookup"><span data-stu-id="ef097-357">This method returns the data needed to serialize the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>