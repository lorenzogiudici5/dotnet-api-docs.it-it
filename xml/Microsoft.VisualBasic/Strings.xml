<Type Name="Strings" FullName="Microsoft.VisualBasic.Strings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d280d7091deccbfedb3ef79e964a4134a7f6da28" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52206113" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Strings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Strings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Strings" />
  <TypeSignature Language="VB.NET" Value="Public Module Strings" />
  <TypeSignature Language="C++ CLI" Value="public ref class Strings sealed" />
  <TypeSignature Language="F#" Value="type Strings = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.2">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="01e6c-101">Il modulo <see langword="Strings" /> contiene procedure che consentono di eseguire operazioni sulle stringhe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="01e6c-101">The <see langword="Strings" /> module contains procedures used to perform string operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-102">Questo modulo supporta le parole chiave del linguaggio Visual Basic e membri delle librerie di runtime che modificano le stringhe.</span><span class="sxs-lookup"><span data-stu-id="01e6c-102">This module supports the Visual Basic language keywords and run-time library members that manipulate strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-103">Nell'esempio seguente viene illustrato come suddividere una stringa in corrispondenza degli spazi.</span><span class="sxs-lookup"><span data-stu-id="01e6c-103">The following example demonstrates how to split a string at its spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#13)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
      <span data-ttu-id="01e6c-104">Riepilogo della modifica delle stringhe</span>
      <span class="sxs-lookup">
        <span data-stu-id="01e6c-104">String Manipulation Summary</span>
      </span>
    </related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md">
      <span data-ttu-id="01e6c-105">Parole chiave (Visual Basic)</span>
      <span class="sxs-lookup">
        <span data-stu-id="01e6c-105">Keywords (Visual Basic)</span>
      </span>
    </related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md">
      <span data-ttu-id="01e6c-106">Membri della libreria Run-Time Visual Basic</span>
      <span class="sxs-lookup">
        <span data-stu-id="01e6c-106">Visual Basic Run-Time Library Members</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Asc">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01e6c-107">Restituisce un <see langword="Integer" /> che rappresenta il codice carattere corrispondente a un carattere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-107">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Asc">
      <MemberSignature Language="C#" Value="public static int Asc (char String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Asc(char String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Asc(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Asc (String As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Asc(char String);" />
      <MemberSignature Language="F#" Value="static member Asc : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.Asc String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="String">
          <span data-ttu-id="01e6c-108">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-108">Required.</span>
          </span>
          <span data-ttu-id="01e6c-109">Qualsiasi espressione <see langword="Char" /> o <see langword="String" /> valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-109">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-110">Se <paramref name="String" /> è un'espressione <see langword="String" />, per l'input viene utilizzato solo il primo carattere della stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-110">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span>
          </span>
          <span data-ttu-id="01e6c-111">Se <paramref name="String" /> è <see langword="Nothing" /> o non contiene caratteri, si verifica un errore <see cref="T:System.ArgumentException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-111">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-112">Restituisce un <see langword="Integer" /> che rappresenta il codice carattere corrispondente a un carattere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-112">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-113">Restituisce un <see langword="Integer" /> che rappresenta il codice carattere corrispondente a un carattere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-113">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-114">`Asc` Restituisce il *punto di codice*, o il codice carattere per il carattere di input.</span><span class="sxs-lookup"><span data-stu-id="01e6c-114">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="01e6c-115">Può trattarsi di 0 e 255 per i valori di carattere a byte singolo (SBCS) di set e da -32768 e 32767 per i valori double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-115">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="01e6c-116">`AscW` Restituisce il punto di codice Unicode del carattere di input.</span><span class="sxs-lookup"><span data-stu-id="01e6c-116">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="01e6c-117">Può trattarsi di 0 e 65535.</span><span class="sxs-lookup"><span data-stu-id="01e6c-117">This can be 0 through 65535.</span></span> <span data-ttu-id="01e6c-118">Il valore restituito è indipendente dalle impostazioni di pagina delle impostazioni cultura e il codice per il thread corrente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-118">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-119">Il `AscB` funzione delle versioni precedenti di Visual Basic restituisce un codice per un byte, anziché un carattere.</span><span class="sxs-lookup"><span data-stu-id="01e6c-119">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="01e6c-120">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-120">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-121">Tutte le stringhe di Visual Basic 2005 sono in formato Unicode, e `AscB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-121">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-122">L'esempio seguente usa il `Asc` funzione restituisca `Integer` codici corrispondente alla prima lettera di ogni stringa di caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-122">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/index.md">
          <span data-ttu-id="01e6c-123">Funzioni (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-123">Functions (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Asc">
      <MemberSignature Language="C#" Value="public static int Asc (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Asc(string String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Asc(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Asc(System::String ^ String);" />
      <MemberSignature Language="F#" Value="static member Asc : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.Asc String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String">
          <span data-ttu-id="01e6c-124">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-124">Required.</span>
          </span>
          <span data-ttu-id="01e6c-125">Qualsiasi espressione <see langword="Char" /> o <see langword="String" /> valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-125">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-126">Se <paramref name="String" /> è un'espressione <see langword="String" />, per l'input viene utilizzato solo il primo carattere della stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-126">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span>
          </span>
          <span data-ttu-id="01e6c-127">Se <paramref name="String" /> è <see langword="Nothing" /> o non contiene caratteri, si verifica un errore <see cref="T:System.ArgumentException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-127">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-128">Restituisce un <see langword="Integer" /> che rappresenta il codice carattere corrispondente a un carattere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-128">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-129">Restituisce un <see langword="Integer" /> che rappresenta il codice carattere corrispondente a un carattere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-129">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-130">`Asc` Restituisce il *punto di codice*, o il codice carattere per il carattere di input.</span><span class="sxs-lookup"><span data-stu-id="01e6c-130">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="01e6c-131">Può trattarsi di 0 e 255 per i valori di carattere a byte singolo (SBCS) di set e da -32768 e 32767 per i valori double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-131">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="01e6c-132">`AscW` Restituisce il punto di codice Unicode del carattere di input.</span><span class="sxs-lookup"><span data-stu-id="01e6c-132">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="01e6c-133">Può trattarsi di 0 e 65535.</span><span class="sxs-lookup"><span data-stu-id="01e6c-133">This can be 0 through 65535.</span></span> <span data-ttu-id="01e6c-134">Il valore restituito è indipendente dalle impostazioni di pagina delle impostazioni cultura e il codice per il thread corrente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-134">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-135">Il `AscB` funzione delle versioni precedenti di Visual Basic restituisce un codice per un byte, anziché un carattere.</span><span class="sxs-lookup"><span data-stu-id="01e6c-135">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="01e6c-136">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-136">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-137">Tutte le stringhe di Visual Basic 2005 sono in formato Unicode, e `AscB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-137">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-138">L'esempio seguente usa il `Asc` funzione restituisca `Integer` codici corrispondente alla prima lettera di ogni stringa di caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-138">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/index.md">
          <span data-ttu-id="01e6c-139">Funzioni (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-139">Functions (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AscW">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01e6c-140">Restituisce un <see langword="Integer" /> che rappresenta il codice carattere corrispondente a un carattere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-140">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AscW">
      <MemberSignature Language="C#" Value="public static int AscW (char String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 AscW(char String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.AscW(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function AscW (String As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AscW(char String);" />
      <MemberSignature Language="F#" Value="static member AscW : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.AscW String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="String">
          <span data-ttu-id="01e6c-141">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-141">Required.</span>
          </span>
          <span data-ttu-id="01e6c-142">Qualsiasi espressione <see langword="Char" /> o <see langword="String" /> valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-142">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-143">Se <paramref name="String" /> è un'espressione <see langword="String" />, per l'input viene utilizzato solo il primo carattere della stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-143">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span>
          </span>
          <span data-ttu-id="01e6c-144">Se <paramref name="String" /> è <see langword="Nothing" /> o non contiene caratteri, si verifica un errore <see cref="T:System.ArgumentException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-144">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-145">Restituisce un <see langword="Integer" /> che rappresenta il codice carattere corrispondente a un carattere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-145">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-146">Restituisce un <see langword="Integer" /> che rappresenta il codice carattere corrispondente a un carattere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-146">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-147">`Asc` Restituisce il *punto di codice*, o il codice carattere per il carattere di input.</span><span class="sxs-lookup"><span data-stu-id="01e6c-147">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="01e6c-148">Può trattarsi di 0 e 255 per i valori di carattere a byte singolo (SBCS) di set e da -32768 e 32767 per i valori double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-148">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="01e6c-149">`AscW` Restituisce il punto di codice Unicode del carattere di input.</span><span class="sxs-lookup"><span data-stu-id="01e6c-149">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="01e6c-150">Può trattarsi di 0 e 65535.</span><span class="sxs-lookup"><span data-stu-id="01e6c-150">This can be 0 through 65535.</span></span> <span data-ttu-id="01e6c-151">Il valore restituito è indipendente dalle impostazioni di pagina delle impostazioni cultura e il codice per il thread corrente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-151">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-152">Il `AscB` funzione delle versioni precedenti di Visual Basic restituisce un codice per un byte, anziché un carattere.</span><span class="sxs-lookup"><span data-stu-id="01e6c-152">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="01e6c-153">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-153">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-154">Tutte le stringhe di Visual Basic 2005 sono in formato Unicode, e `AscB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-154">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-155">L'esempio seguente usa il `Asc` funzione restituisca `Integer` codici corrispondente alla prima lettera di ogni stringa di caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-155">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/index.md">
          <span data-ttu-id="01e6c-156">Funzioni (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-156">Functions (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AscW">
      <MemberSignature Language="C#" Value="public static int AscW (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 AscW(string String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.AscW(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AscW(System::String ^ String);" />
      <MemberSignature Language="F#" Value="static member AscW : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.AscW String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String">
          <span data-ttu-id="01e6c-157">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-157">Required.</span>
          </span>
          <span data-ttu-id="01e6c-158">Qualsiasi espressione <see langword="Char" /> o <see langword="String" /> valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-158">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-159">Se <paramref name="String" /> è un'espressione <see langword="String" />, per l'input viene utilizzato solo il primo carattere della stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-159">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span>
          </span>
          <span data-ttu-id="01e6c-160">Se <paramref name="String" /> è <see langword="Nothing" /> o non contiene caratteri, si verifica un errore <see cref="T:System.ArgumentException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-160">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-161">Restituisce un <see langword="Integer" /> che rappresenta il codice carattere corrispondente a un carattere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-161">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-162">Restituisce un <see langword="Integer" /> che rappresenta il codice carattere corrispondente a un carattere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-162">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-163">`Asc` Restituisce il *punto di codice*, o il codice carattere per il carattere di input.</span><span class="sxs-lookup"><span data-stu-id="01e6c-163">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="01e6c-164">Può trattarsi di 0 e 255 per i valori di carattere a byte singolo (SBCS) di set e da -32768 e 32767 per i valori double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-164">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="01e6c-165">`AscW` Restituisce il punto di codice Unicode del carattere di input.</span><span class="sxs-lookup"><span data-stu-id="01e6c-165">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="01e6c-166">Può trattarsi di 0 e 65535.</span><span class="sxs-lookup"><span data-stu-id="01e6c-166">This can be 0 through 65535.</span></span> <span data-ttu-id="01e6c-167">Il valore restituito è indipendente dalle impostazioni di pagina delle impostazioni cultura e il codice per il thread corrente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-167">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-168">Il `AscB` funzione delle versioni precedenti di Visual Basic restituisce un codice per un byte, anziché un carattere.</span><span class="sxs-lookup"><span data-stu-id="01e6c-168">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="01e6c-169">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-169">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-170">Tutte le stringhe di Visual Basic 2005 sono in formato Unicode, e `AscB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-170">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-171">L'esempio seguente usa il `Asc` funzione restituisca `Integer` codici corrispondente alla prima lettera di ogni stringa di caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-171">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/index.md">
          <span data-ttu-id="01e6c-172">Funzioni (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-172">Functions (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Chr">
      <MemberSignature Language="C#" Value="public static char Chr (int CharCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static char Chr(int32 CharCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Chr (CharCode As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Chr(int CharCode);" />
      <MemberSignature Language="F#" Value="static member Chr : int -&gt; char" Usage="Microsoft.VisualBasic.Strings.Chr CharCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="CharCode">
          <span data-ttu-id="01e6c-173">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-173">Required.</span>
          </span>
          <span data-ttu-id="01e6c-174">Espressione <see langword="Integer" /> che rappresenta il <c>punto di codice</c> o il codice carattere del carattere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-174">An <see langword="Integer" /> expression representing the <c>code point</c>, or character code, for the character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-175">Restituisce il carattere associato al codice carattere specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-175">Returns the character associated with the specified character code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-176">Restituisce il carattere associato al codice carattere specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-176">Returns the character associated with the specified character code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-177">L'intervallo asimmetrica accettato per `CharCode` consente di compensare le differenze tra archiviazione la `Short` e il `Integer`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-177">The asymmetric range accepted for `CharCode` compensates for the storage differences between the `Short` and the `Integer`.</span></span> <span data-ttu-id="01e6c-178">Ad esempio, 29183 è una `Short` ma è 36353 un `Integer`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-178">For example, -29183 is a `Short` but +36353 is an `Integer`.</span></span> <span data-ttu-id="01e6c-179">Ciò semplifica anche la compatibilità con Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="01e6c-179">This also facilitates compatibility with Visual Basic 6.0.</span></span>  
  
 <span data-ttu-id="01e6c-180">`Chr` Usa il <xref:System.Text.Encoding> classe di <xref:System.Text?displayProperty=nameWithType> dello spazio dei nomi per determinare se il thread corrente sta usando un set di caratteri a byte singolo (SBCS) o un double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-180">`Chr` uses the <xref:System.Text.Encoding> class in the <xref:System.Text?displayProperty=nameWithType> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</span></span> <span data-ttu-id="01e6c-181">Accetta quindi `CharCode` come punto di codice del set appropriato.</span><span class="sxs-lookup"><span data-stu-id="01e6c-181">It then takes `CharCode` as a code point in the appropriate set.</span></span> <span data-ttu-id="01e6c-182">L'intervallo può essere 0 e 255 caratteri SBCS e compreso tra -32768 e 65535 per caratteri DBCS.</span><span class="sxs-lookup"><span data-stu-id="01e6c-182">The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</span></span>  
  
 <span data-ttu-id="01e6c-183">Il valore restituito dipende dalla tabella codici per il thread corrente, incluso nel <xref:System.Globalization.TextInfo.ANSICodePage%2A> proprietà del <xref:System.Globalization.TextInfo> classe la <xref:System.Globalization> dello spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="01e6c-183">The returned value depends on the code page for the current thread, which is contained in the <xref:System.Globalization.TextInfo.ANSICodePage%2A> property of the <xref:System.Globalization.TextInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="01e6c-184">È possibile ottenere <xref:System.Globalization.TextInfo.ANSICodePage%2A> specificando `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-184">You can obtain <xref:System.Globalization.TextInfo.ANSICodePage%2A> by specifying `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span></span>  
  
 <span data-ttu-id="01e6c-185">`ChrW` accetta `CharCode` punto di codice come Unicode.</span><span class="sxs-lookup"><span data-stu-id="01e6c-185">`ChrW` takes `CharCode` as a Unicode code point.</span></span> <span data-ttu-id="01e6c-186">L'intervallo è indipendente dalle impostazioni di pagina delle impostazioni cultura e il codice per il thread corrente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-186">The range is independent of the culture and code page settings for the current thread.</span></span> <span data-ttu-id="01e6c-187">I valori compresi tra -32768 e-1 vengono trattati come valori 32768 e + 65535 compreso nell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="01e6c-187">Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</span></span>  
  
 <span data-ttu-id="01e6c-188">I numeri da 0 a 31 sono le stesse standard codici ASCII stampabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-188">Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</span></span> <span data-ttu-id="01e6c-189">Ad esempio, `Chr(10)` restituisce una riga di carattere di avanzamento.</span><span class="sxs-lookup"><span data-stu-id="01e6c-189">For example, `Chr(10)` returns a line feed character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-190">Il `ChrB` funzione nelle versioni precedenti di Visual Basic restituisce un singolo byte.</span><span class="sxs-lookup"><span data-stu-id="01e6c-190">The `ChrB` function in earlier versions of Visual Basic returns a single byte.</span></span> <span data-ttu-id="01e6c-191">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-191">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-192">Tutte le stringhe in Visual Basic e .NET Framework sono in formato Unicode, e `ChrB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-192">All strings in Visual Basic and the .NET Framework are in Unicode, and `ChrB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-193">L'esempio seguente usa il `Chr` funzione restituisce il carattere associato al codice carattere specificato.</span><span class="sxs-lookup"><span data-stu-id="01e6c-193">The following example uses the `Chr` function to return the character associated with the specified character code.</span></span>  
  
 [!code-vb[VbVbalrStrings#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-194">
            <paramref name="CharCode" /> &lt; 0 o &gt; 255 per <see langword="Chr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-194">
              <paramref name="CharCode" /> &lt; 0 or &gt; 255 for <see langword="Chr" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Asc" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.AscW" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-195">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-195">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ChrW">
      <MemberSignature Language="C#" Value="public static char ChrW (int CharCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static char ChrW(int32 CharCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChrW (CharCode As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ChrW(int CharCode);" />
      <MemberSignature Language="F#" Value="static member ChrW : int -&gt; char" Usage="Microsoft.VisualBasic.Strings.ChrW CharCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="CharCode">
          <span data-ttu-id="01e6c-196">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-196">Required.</span>
          </span>
          <span data-ttu-id="01e6c-197">Espressione <see langword="Integer" /> che rappresenta il <c>punto di codice</c> o il codice carattere del carattere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-197">An <see langword="Integer" /> expression representing the <c>code point</c>, or character code, for the character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-198">Restituisce il carattere associato al codice carattere specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-198">Returns the character associated with the specified character code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-199">Restituisce il carattere associato al codice carattere specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-199">Returns the character associated with the specified character code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-200">L'intervallo asimmetrica accettato per `CharCode` consente di compensare le differenze tra archiviazione la `Short` e il `Integer`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-200">The asymmetric range accepted for `CharCode` compensates for the storage differences between the `Short` and the `Integer`.</span></span> <span data-ttu-id="01e6c-201">Ad esempio, 29183 è una `Short` ma è 36353 un `Integer`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-201">For example, -29183 is a `Short` but +36353 is an `Integer`.</span></span> <span data-ttu-id="01e6c-202">Ciò semplifica anche la compatibilità con Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="01e6c-202">This also facilitates compatibility with Visual Basic 6.0.</span></span>  
  
 <span data-ttu-id="01e6c-203">`Chr` Usa il <xref:System.Text.Encoding> classe di <xref:System.Text?displayProperty=nameWithType> dello spazio dei nomi per determinare se il thread corrente sta usando un set di caratteri a byte singolo (SBCS) o un double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-203">`Chr` uses the <xref:System.Text.Encoding> class in the <xref:System.Text?displayProperty=nameWithType> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</span></span> <span data-ttu-id="01e6c-204">Accetta quindi `CharCode` come punto di codice del set appropriato.</span><span class="sxs-lookup"><span data-stu-id="01e6c-204">It then takes `CharCode` as a code point in the appropriate set.</span></span> <span data-ttu-id="01e6c-205">L'intervallo può essere 0 e 255 caratteri SBCS e compreso tra -32768 e 65535 per caratteri DBCS.</span><span class="sxs-lookup"><span data-stu-id="01e6c-205">The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</span></span>  
  
 <span data-ttu-id="01e6c-206">Il valore restituito dipende dalla tabella codici per il thread corrente, incluso nel <xref:System.Globalization.TextInfo.ANSICodePage%2A> proprietà del <xref:System.Globalization.TextInfo> classe la <xref:System.Globalization> dello spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="01e6c-206">The returned value depends on the code page for the current thread, which is contained in the <xref:System.Globalization.TextInfo.ANSICodePage%2A> property of the <xref:System.Globalization.TextInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="01e6c-207">È possibile ottenere <xref:System.Globalization.TextInfo.ANSICodePage%2A> specificando `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-207">You can obtain <xref:System.Globalization.TextInfo.ANSICodePage%2A> by specifying `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span></span>  
  
 <span data-ttu-id="01e6c-208">`ChrW` accetta `CharCode` punto di codice come Unicode.</span><span class="sxs-lookup"><span data-stu-id="01e6c-208">`ChrW` takes `CharCode` as a Unicode code point.</span></span> <span data-ttu-id="01e6c-209">L'intervallo è indipendente dalle impostazioni di pagina delle impostazioni cultura e il codice per il thread corrente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-209">The range is independent of the culture and code page settings for the current thread.</span></span> <span data-ttu-id="01e6c-210">I valori compresi tra -32768 e-1 vengono trattati come valori 32768 e + 65535 compreso nell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="01e6c-210">Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</span></span>  
  
 <span data-ttu-id="01e6c-211">I numeri da 0 a 31 sono le stesse standard codici ASCII stampabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-211">Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</span></span> <span data-ttu-id="01e6c-212">Ad esempio, `Chr(10)` restituisce una riga di carattere di avanzamento.</span><span class="sxs-lookup"><span data-stu-id="01e6c-212">For example, `Chr(10)` returns a line feed character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-213">Il `ChrB` funzione nelle versioni precedenti di Visual Basic restituisce un singolo byte.</span><span class="sxs-lookup"><span data-stu-id="01e6c-213">The `ChrB` function in earlier versions of Visual Basic returns a single byte.</span></span> <span data-ttu-id="01e6c-214">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-214">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-215">Tutte le stringhe in Visual Basic e .NET Framework sono in formato Unicode, e `ChrB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-215">All strings in Visual Basic and the .NET Framework are in Unicode, and `ChrB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-216">L'esempio seguente usa il `Chr` funzione restituisce il carattere associato al codice carattere specificato.</span><span class="sxs-lookup"><span data-stu-id="01e6c-216">The following example uses the `Chr` function to return the character associated with the specified character code.</span></span>  
  
 [!code-vb[VbVbalrStrings#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-217">
            <paramref name="CharCode" /> &lt; -32768 o &gt; 65535 per <see langword="ChrW" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-217">
              <paramref name="CharCode" /> &lt; -32768 or &gt; 65535 for <see langword="ChrW" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Asc" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.AscW" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-218">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-218">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Filter">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01e6c-219">Restituisce una matrice con indice in base zero che contiene un sottoinsieme di una matrice <see langword="String" /> definito in base ai criteri di filtro specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-219">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static string[] Filter (object[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Filter(object[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Filter (Source As Object(), Match As String, Optional Include As Boolean = true, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Filter : obj[] * string * bool * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Filter (Source, Match, Include, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object[]" />
        <Parameter Name="Match" Type="System.String" />
        <Parameter Name="Include" Type="System.Boolean" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="01e6c-220">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-220">Required.</span>
          </span>
          <span data-ttu-id="01e6c-221">Matrice unidimensionale delle stringhe da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-221">One-dimensional array of strings to be searched.</span>
          </span>
        </param>
        <param name="Match">
          <span data-ttu-id="01e6c-222">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-222">Required.</span>
          </span>
          <span data-ttu-id="01e6c-223">Stringa da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-223">String to search for.</span>
          </span>
        </param>
        <param name="Include">
          <span data-ttu-id="01e6c-224">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-224">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-225">Valore <see langword="Boolean" /> che indica se restituire sottostringhe che includono o escludono il parametro <paramref name="Match" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-225">
              <see langword="Boolean" /> value indicating whether to return substrings that include or exclude <paramref name="Match" />.</span>
          </span>
          <span data-ttu-id="01e6c-226">Se <paramref name="Include" /> è <see langword="True" />, la funzione <see langword="Filter" /> restituisce il sottoinsieme della matrice che contiene <paramref name="Match" /> in formato di sottostringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-226">If <paramref name="Include" /> is <see langword="True" />, the <see langword="Filter" /> function returns the subset of the array that contains <paramref name="Match" /> as a substring.</span>
          </span>
          <span data-ttu-id="01e6c-227">Se <paramref name="Include" /> è <see langword="False" />, la funzione <see langword="Filter" /> restituisce il sottoinsieme della matrice che non contiene <paramref name="Match" /> in formato di sottostringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-227">If <paramref name="Include" /> is <see langword="False" />, the <see langword="Filter" /> function returns the subset of the array that does not contain <paramref name="Match" /> as a substring.</span>
          </span>
        </param>
        <param name="Compare">
          <span data-ttu-id="01e6c-228">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-228">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-229">Valore numerico che indica il tipo di confronto da utilizzare per le stringhe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-229">Numeric value indicating the kind of string comparison to use.</span>
          </span>
          <span data-ttu-id="01e6c-230">Per un elenco dei valori possibili, vedere "Impostazioni".</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-230">See "Settings" for values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-231">Restituisce una matrice con indice in base zero che contiene un sottoinsieme di una matrice <see langword="String" /> definito in base ai criteri di filtro specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-231">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-232">Restituisce una matrice con indice in base zero che contiene un sottoinsieme di una matrice <see langword="String" /> definito in base ai criteri di filtro specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-232">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-233">Se nessuna corrispondenza di `Match` si trovano all'interno `Source`, il `Filter` funzione restituisce una matrice vuota.</span><span class="sxs-lookup"><span data-stu-id="01e6c-233">If no matches of `Match` are found within `Source`, the `Filter` function returns an empty array.</span></span> <span data-ttu-id="01e6c-234">Se si verifica un errore `Source` è impostata su `Nothing` o non è una matrice unidimensionale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-234">An error occurs if `Source` is set to `Nothing` or is not a one-dimensional array.</span></span>  
  
 <span data-ttu-id="01e6c-235">La matrice restituita dal `Filter` funzione contiene solo un numero di elementi sufficienti per contenere il numero di elementi corrispondenti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-235">The array returned by the `Filter` function contains only enough elements to contain the number of matched items.</span></span>  
  
 <span data-ttu-id="01e6c-236">Il `Compare` argomento può avere i valori seguenti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-236">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="01e6c-237">Costante</span><span class="sxs-lookup"><span data-stu-id="01e6c-237">Constant</span></span>|<span data-ttu-id="01e6c-238">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-238">Description</span></span>|  
|-|-|  
|<span data-ttu-id="01e6c-239">Costante</span><span class="sxs-lookup"><span data-stu-id="01e6c-239">Constant</span></span>|<span data-ttu-id="01e6c-240">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-240">Description</span></span>|  
|`CompareMethod.Binary`|<span data-ttu-id="01e6c-241">Esegue un confronto binario</span><span class="sxs-lookup"><span data-stu-id="01e6c-241">Performs a binary comparison</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="01e6c-242">Esegue un confronto di testo</span><span class="sxs-lookup"><span data-stu-id="01e6c-242">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-243">In questo esempio illustra l'uso della `Filter` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-243">This example demonstrates the use of the `Filter` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-244">
            <paramref name="Source" /> è <see langword="Nothing" /> oppure non è una matrice unidimensionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-244">
              <paramref name="Source" /> is <see langword="Nothing" /> or is not a one-dimensional array.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-245">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-245">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static string[] Filter (string[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Filter(string[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Filter (Source As String(), Match As String, Optional Include As Boolean = true, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Filter : string[] * string * bool * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Filter (Source, Match, Include, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String[]" />
        <Parameter Name="Match" Type="System.String" />
        <Parameter Name="Include" Type="System.Boolean" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="01e6c-246">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-246">Required.</span>
          </span>
          <span data-ttu-id="01e6c-247">Matrice unidimensionale delle stringhe da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-247">One-dimensional array of strings to be searched.</span>
          </span>
        </param>
        <param name="Match">
          <span data-ttu-id="01e6c-248">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-248">Required.</span>
          </span>
          <span data-ttu-id="01e6c-249">Stringa da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-249">String to search for.</span>
          </span>
        </param>
        <param name="Include">
          <span data-ttu-id="01e6c-250">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-250">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-251">Valore <see langword="Boolean" /> che indica se restituire sottostringhe che includono o escludono il parametro <paramref name="Match" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-251">
              <see langword="Boolean" /> value indicating whether to return substrings that include or exclude <paramref name="Match" />.</span>
          </span>
          <span data-ttu-id="01e6c-252">Se <paramref name="Include" /> è <see langword="True" />, la funzione <see langword="Filter" /> restituisce il sottoinsieme della matrice che contiene <paramref name="Match" /> in formato di sottostringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-252">If <paramref name="Include" /> is <see langword="True" />, the <see langword="Filter" /> function returns the subset of the array that contains <paramref name="Match" /> as a substring.</span>
          </span>
          <span data-ttu-id="01e6c-253">Se <paramref name="Include" /> è <see langword="False" />, la funzione <see langword="Filter" /> restituisce il sottoinsieme della matrice che non contiene <paramref name="Match" /> in formato di sottostringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-253">If <paramref name="Include" /> is <see langword="False" />, the <see langword="Filter" /> function returns the subset of the array that does not contain <paramref name="Match" /> as a substring.</span>
          </span>
        </param>
        <param name="Compare">
          <span data-ttu-id="01e6c-254">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-254">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-255">Valore numerico che indica il tipo di confronto da utilizzare per le stringhe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-255">Numeric value indicating the kind of string comparison to use.</span>
          </span>
          <span data-ttu-id="01e6c-256">Per un elenco dei valori possibili, vedere "Impostazioni".</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-256">See "Settings" for values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-257">Restituisce una matrice con indice in base zero che contiene un sottoinsieme di una matrice <see langword="String" /> definito in base ai criteri di filtro specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-257">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-258">Restituisce una matrice con indice in base zero che contiene un sottoinsieme di una matrice <see langword="String" /> definito in base ai criteri di filtro specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-258">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-259">Se nessuna corrispondenza di `Match` si trovano all'interno `Source`, il `Filter` funzione restituisce una matrice vuota.</span><span class="sxs-lookup"><span data-stu-id="01e6c-259">If no matches of `Match` are found within `Source`, the `Filter` function returns an empty array.</span></span> <span data-ttu-id="01e6c-260">Se si verifica un errore `Source` è impostata su `Nothing` o non è una matrice unidimensionale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-260">An error occurs if `Source` is set to `Nothing` or is not a one-dimensional array.</span></span>  
  
 <span data-ttu-id="01e6c-261">La matrice restituita dal `Filter` funzione contiene solo un numero di elementi sufficienti per contenere il numero di elementi corrispondenti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-261">The array returned by the `Filter` function contains only enough elements to contain the number of matched items.</span></span>  
  
 <span data-ttu-id="01e6c-262">Il `Compare` argomento può avere i valori seguenti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-262">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="01e6c-263">Costante</span><span class="sxs-lookup"><span data-stu-id="01e6c-263">Constant</span></span>|<span data-ttu-id="01e6c-264">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-264">Description</span></span>|  
|-|-|  
|`CompareMethod.Binary`|<span data-ttu-id="01e6c-265">Esegue un confronto binario</span><span class="sxs-lookup"><span data-stu-id="01e6c-265">Performs a binary comparison</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="01e6c-266">Esegue un confronto di testo</span><span class="sxs-lookup"><span data-stu-id="01e6c-266">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-267">In questo esempio illustra l'uso della `Filter` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-267">This example demonstrates the use of the `Filter` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-268">
            <paramref name="Source" /> è <see langword="Nothing" /> oppure non è una matrice unidimensionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-268">
              <paramref name="Source" /> is <see langword="Nothing" /> or is not a one-dimensional array.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-269">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-269">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (object Expression, string Style = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Format(object Expression, string Style) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Format (Expression As Object, Optional Style As String = &quot;&quot;) As String" />
      <MemberSignature Language="F#" Value="static member Format : obj * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Format (Expression, Style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="Style" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-270">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-270">Required.</span>
          </span>
          <span data-ttu-id="01e6c-271">Qualsiasi espressione valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-271">Any valid expression.</span>
          </span>
        </param>
        <param name="Style">
          <span data-ttu-id="01e6c-272">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-272">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-273">Un'espressione <see langword="String" /> di formato denominata o definita dall'utente valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-273">A valid named or user-defined format <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-274">Restituisce una stringa formattata in base alle istruzioni contenute in un'espressione <see langword="String" /> di formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-274">Returns a string formatted according to instructions contained in a format <see langword="String" /> expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-275">Restituisce una stringa formattata in base alle istruzioni contenute in un'espressione <see langword="String" /> di formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-275">Returns a string formatted according to instructions contained in a format <see langword="String" /> expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-276">Il <xref:System.String.Format%2A?displayProperty=nameWithType> metodo fornisce inoltre una funzionalità simile.</span><span class="sxs-lookup"><span data-stu-id="01e6c-276">The <xref:System.String.Format%2A?displayProperty=nameWithType> method also provides similar functionality.</span></span>  
  
 <span data-ttu-id="01e6c-277">Se si formatta una stringa numerica non localizzata, è necessario utilizzare un formato numerico definito dall'utente per assicurarsi di ottenere l'aspetto desiderato.</span><span class="sxs-lookup"><span data-stu-id="01e6c-277">If you are formatting a nonlocalized numeric string, you should use a user-defined numeric format to ensure that you get the look you want.</span></span>  
  
 <span data-ttu-id="01e6c-278">Se si tenta di formattare un numero senza specificare `Style`, il `Format` funzione fornisce funzionalità simili a quelle di `Str` funzionare, sebbene sia a livello internazionale con riconoscimento.</span><span class="sxs-lookup"><span data-stu-id="01e6c-278">If you try to format a number without specifying `Style`, the `Format` function provides functionality similar to the `Str` function, although it is internationally aware.</span></span> <span data-ttu-id="01e6c-279">Tuttavia, i numeri positivi formattato come stringhe usando il `Format` funzione non includere uno spazio iniziale riservato per il segno del valore; quelli convertito mediante il `Str` funzione conservare lo spazio iniziale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-279">However, positive numbers formatted as strings using the `Format` function don't include a leading space reserved for the sign of the value; those converted using the `Str` function retain the leading space.</span></span>  
  
## <a name="different-formats-for-different-numeric-values"></a><span data-ttu-id="01e6c-280">Formati diversi per diversi valori numerici</span><span class="sxs-lookup"><span data-stu-id="01e6c-280">Different Formats for Different Numeric Values</span></span>  
 <span data-ttu-id="01e6c-281">Un'espressione di formato definita dall'utente per i numeri può includere da una a tre sezioni separate da punti e virgola.</span><span class="sxs-lookup"><span data-stu-id="01e6c-281">A user-defined format expression for numbers can have from one to three sections separated by semicolons.</span></span> <span data-ttu-id="01e6c-282">Se il `Style` argomento del `Format` funzione contiene uno dei formati numerici predefiniti, è consentita una sola sezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-282">If the `Style` argument of the `Format` function contains one of the predefined numeric formats, only one section is allowed.</span></span>  
  
|<span data-ttu-id="01e6c-283">Se si usa</span><span class="sxs-lookup"><span data-stu-id="01e6c-283">If you use</span></span>|<span data-ttu-id="01e6c-284">Questo è il risultato</span><span class="sxs-lookup"><span data-stu-id="01e6c-284">This is the result</span></span>|  
|-|-|  
|<span data-ttu-id="01e6c-285">Una sola sezione</span><span class="sxs-lookup"><span data-stu-id="01e6c-285">One section only</span></span>|<span data-ttu-id="01e6c-286">L'espressione di formato viene applicata a tutti i valori.</span><span class="sxs-lookup"><span data-stu-id="01e6c-286">The format expression applies to all values.</span></span>|  
|<span data-ttu-id="01e6c-287">Due</span><span class="sxs-lookup"><span data-stu-id="01e6c-287">Two sections</span></span>|<span data-ttu-id="01e6c-288">La prima sezione viene applicata ai valori positivi e agli zeri; il secondo si applica ai valori negativi.</span><span class="sxs-lookup"><span data-stu-id="01e6c-288">The first section applies to positive values and zeros; the second applies to negative values.</span></span>|  
|<span data-ttu-id="01e6c-289">Tre</span><span class="sxs-lookup"><span data-stu-id="01e6c-289">Three sections</span></span>|<span data-ttu-id="01e6c-290">La prima sezione viene applicata ai valori positivi, il secondo si applica ai valori negativi e si applica la terza agli zeri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-290">The first section applies to positive values, the second applies to negative values, and the third applies to zeros.</span></span>|  
  
 <span data-ttu-id="01e6c-291">L'esempio seguente contiene due sezioni: il primo definisce il formato per i valori positivi e gli zeri; la seconda sezione definisce il formato per i valori negativi.</span><span class="sxs-lookup"><span data-stu-id="01e6c-291">The following example has two sections: the first defines the format for positive values and zeros; the second section defines the format for negative values.</span></span> <span data-ttu-id="01e6c-292">Poiché il `Style` argomento del `Format` funzione accetta una stringa, è racchiuso tra virgolette.</span><span class="sxs-lookup"><span data-stu-id="01e6c-292">Since the `Style` argument of the `Format` function takes a string, it is enclosed by quotation marks.</span></span>  
  
 [!code-vb[VbVbalrStrings#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#18)]  
  
 <span data-ttu-id="01e6c-293">Se si include un punto e virgola consecutivi, la sezione mancante viene stampata utilizzando il formato del valore positivo.</span><span class="sxs-lookup"><span data-stu-id="01e6c-293">If you include semicolons with nothing between them, the missing section is printed using the format of the positive value.</span></span> <span data-ttu-id="01e6c-294">Ad esempio, il formato seguente visualizza positivi e negativi utilizzando il formato nella prima sezione e di visualizzare `Zero` se il valore è zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-294">For example, the following format displays positive and negative values using the format in the first section and displays `Zero` if the value is zero.</span></span>  
  
 [!code-vb[VbVbalrStrings#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#19)]  
  
## <a name="predefined-numeric-formats"></a><span data-ttu-id="01e6c-295">Formati numerici predefiniti</span><span class="sxs-lookup"><span data-stu-id="01e6c-295">Predefined Numeric Formats</span></span>  
 <span data-ttu-id="01e6c-296">Nella tabella seguente identifica i nomi di formati numerici predefiniti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-296">The following table identifies the predefined numeric format names.</span></span> <span data-ttu-id="01e6c-297">Possono essere utilizzati in base al nome come le `Style` argomento per il `Format` funzione:</span><span class="sxs-lookup"><span data-stu-id="01e6c-297">These may be used by name as the `Style` argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="01e6c-298">Nome del formato</span><span class="sxs-lookup"><span data-stu-id="01e6c-298">Format name</span></span>|<span data-ttu-id="01e6c-299">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-299">Description</span></span>|  
|-|-|  
|<span data-ttu-id="01e6c-300">`General Number`, `G`o `g`</span><span class="sxs-lookup"><span data-stu-id="01e6c-300">`General Number`, `G`, or `g`</span></span>|<span data-ttu-id="01e6c-301">Numero viene visualizzato alcun separatore delle migliaia.</span><span class="sxs-lookup"><span data-stu-id="01e6c-301">Displays number with no thousand separator.</span></span><br /><br /> <span data-ttu-id="01e6c-302">Ad esempio, `Format(&H3FA, "g")` restituisce `1018`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-302">For example, `Format(&H3FA, "g")` returns `1018`.</span></span>|  
|<span data-ttu-id="01e6c-303">`Currency`, `C`o `c`</span><span class="sxs-lookup"><span data-stu-id="01e6c-303">`Currency`, `C`, or `c`</span></span>|<span data-ttu-id="01e6c-304">Il numero viene visualizzato il separatore delle migliaia, se appropriato; Consente di visualizzare due cifre a destra del separatore decimale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-304">Displays number with thousand separator, if appropriate; displays two digits to the right of the decimal separator.</span></span> <span data-ttu-id="01e6c-305">Output si basa sulle impostazioni locali del sistema.</span><span class="sxs-lookup"><span data-stu-id="01e6c-305">Output is based on system locale settings.</span></span><br /><br /> <span data-ttu-id="01e6c-306">Ad esempio, `Format(1234567, "c")` restituisce `$1,234,567.00`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-306">For example, `Format(1234567, "c")` returns `$1,234,567.00`.</span></span>|  
|<span data-ttu-id="01e6c-307">`Fixed`, `F`o `f`</span><span class="sxs-lookup"><span data-stu-id="01e6c-307">`Fixed`, `F`, or `f`</span></span>|<span data-ttu-id="01e6c-308">Consente di visualizzare almeno una cifra a sinistra e due cifre a destra del separatore decimale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-308">Displays at least one digit to the left and two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="01e6c-309">Ad esempio, `Format(1234567, "f")` restituisce `1234567.00`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-309">For example, `Format(1234567, "f")` returns `1234567.00`.</span></span>|  
|<span data-ttu-id="01e6c-310">`Standard`, `N`o `n`</span><span class="sxs-lookup"><span data-stu-id="01e6c-310">`Standard`, `N`, or `n`</span></span>|<span data-ttu-id="01e6c-311">Visualizza numeri con separatore delle migliaia, almeno una cifra a sinistra e due cifre a destra del separatore decimale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-311">Displays number with thousand separator, at least one digit to the left and two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="01e6c-312">Ad esempio, `Format(1234567, "n")` restituisce `1,234,567.00`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-312">For example, `Format(1234567, "n")` returns `1,234,567.00`.</span></span>|  
|`Percent`|<span data-ttu-id="01e6c-313">Visualizza numero moltiplicato per 100 con un segno di percentuale (%) aggiunto immediatamente a destra; sempre seguito da due cifre a destra del separatore decimale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-313">Displays number multiplied by 100 with a percent sign (%) appended immediately to the right; always displays two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="01e6c-314">Ad esempio, `Format(0.4744, "Percent")` restituisce `47.44%`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-314">For example, `Format(0.4744, "Percent")` returns `47.44%`.</span></span>|  
|<span data-ttu-id="01e6c-315">`P`, o `p`</span><span class="sxs-lookup"><span data-stu-id="01e6c-315">`P`, or `p`</span></span>|<span data-ttu-id="01e6c-316">Il numero viene visualizzato moltiplicato per 100 con un segno di percentuale (%) aggiunto a destra e separato da uno spazio singolo separatore delle migliaia; sempre seguito da due cifre a destra del separatore decimale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-316">Displays number with thousandths separator multiplied by 100 with a percent sign (%) appended to the right and separated by a single space; always displays two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="01e6c-317">Ad esempio, `Format(0.80345, "p")` restituisce `80.35 %`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-317">For example, `Format(0.80345, "p")` returns `80.35 %`.</span></span>|  
|`Scientific`|<span data-ttu-id="01e6c-318">Usa la notazione scientifica standard, specificando due cifre significative.</span><span class="sxs-lookup"><span data-stu-id="01e6c-318">Uses standard scientific notation, providing two significant digits.</span></span><br /><br /> <span data-ttu-id="01e6c-319">Ad esempio, `Format(1234567, "Scientific")` restituisce `1.23E+06`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-319">For example, `Format(1234567, "Scientific")` returns `1.23E+06`.</span></span>|  
|<span data-ttu-id="01e6c-320">`E`, o `e`</span><span class="sxs-lookup"><span data-stu-id="01e6c-320">`E`, or `e`</span></span>|<span data-ttu-id="01e6c-321">Usa la notazione scientifica standard, specificando sei cifre significative.</span><span class="sxs-lookup"><span data-stu-id="01e6c-321">Uses standard scientific notation, providing six significant digits.</span></span><br /><br /> <span data-ttu-id="01e6c-322">Ad esempio, `Format(1234567, "e")` restituisce `1.234567e+006`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-322">For example, `Format(1234567, "e")` returns `1.234567e+006`.</span></span>|  
|<span data-ttu-id="01e6c-323">`D`, o `d`</span><span class="sxs-lookup"><span data-stu-id="01e6c-323">`D`, or `d`</span></span>|<span data-ttu-id="01e6c-324">Visualizza il numero sotto forma di stringa che contiene il valore del numero in formato decimale (base 10).</span><span class="sxs-lookup"><span data-stu-id="01e6c-324">Displays number as a string that contains the value of the number in Decimal (base 10) format.</span></span> <span data-ttu-id="01e6c-325">Questa opzione è supportata per i tipi integrali (`Byte`, `Short`, `Integer`, `Long`) solo.</span><span class="sxs-lookup"><span data-stu-id="01e6c-325">This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.</span></span><br /><br /> <span data-ttu-id="01e6c-326">Ad esempio, `Format(&H7F, "d")` restituisce `127`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-326">For example, `Format(&H7F, "d")` returns `127`.</span></span>|  
|<span data-ttu-id="01e6c-327">`X`, o `x`</span><span class="sxs-lookup"><span data-stu-id="01e6c-327">`X`, or `x`</span></span>|<span data-ttu-id="01e6c-328">Visualizza il numero sotto forma di stringa che contiene il valore del numero in formato esadecimale (base 16).</span><span class="sxs-lookup"><span data-stu-id="01e6c-328">Displays number as a string that contains the value of the number in Hexadecimal (base 16) format.</span></span> <span data-ttu-id="01e6c-329">Questa opzione è supportata per i tipi integrali (`Byte`, `Short`, `Integer`, `Long`) solo.</span><span class="sxs-lookup"><span data-stu-id="01e6c-329">This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.</span></span><br /><br /> <span data-ttu-id="01e6c-330">Ad esempio, `Format(127, "x")` restituisce `7f`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-330">For example, `Format(127, "x")` returns `7f`.</span></span>|  
|`Yes/No`|<span data-ttu-id="01e6c-331">Consente di visualizzare `No` se il numero è 0; in caso contrario, viene visualizzato `Yes`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-331">Displays `No` if number is 0; otherwise, displays `Yes`.</span></span><br /><br /> <span data-ttu-id="01e6c-332">Ad esempio, `Format(0, "Yes/No")` restituisce `No`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-332">For example, `Format(0, "Yes/No")` returns `No`.</span></span>|  
|`True/False`|<span data-ttu-id="01e6c-333">Consente di visualizzare `False` se il numero è 0; in caso contrario, viene visualizzato `True`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-333">Displays `False` if number is 0; otherwise, displays `True`.</span></span><br /><br /> <span data-ttu-id="01e6c-334">Ad esempio, `Format(1, "True/False")` restituisce `True`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-334">For example, `Format(1, "True/False")` returns `True`.</span></span>|  
|`On/Off`|<span data-ttu-id="01e6c-335">Consente di visualizzare `Off` se il numero è 0; in caso contrario, viene visualizzato `On`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-335">Displays `Off` if number is 0; otherwise, displays `On`.</span></span><br /><br /> <span data-ttu-id="01e6c-336">Ad esempio, `Format(1, "On/Off")` restituisce `On`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-336">For example, `Format(1, "On/Off")` returns `On`.</span></span>|  
  
### <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-337">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-337">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-338">Il `Yes/No`, `True/False`, e `On/Off` formati non sono supportati.</span><span class="sxs-lookup"><span data-stu-id="01e6c-338">The `Yes/No`, `True/False`, and `On/Off` formats are not supported.</span></span>  
  
## <a name="user-defined-numeric-formats"></a><span data-ttu-id="01e6c-339">Formati numerici definiti dall'utente</span><span class="sxs-lookup"><span data-stu-id="01e6c-339">User-Defined Numeric Formats</span></span>  
 <span data-ttu-id="01e6c-340">Nella tabella seguente sono indicati i caratteri che è possibile usare per creare formati di numero definiti dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-340">The following table identifies characters you can use to create user-defined number formats.</span></span> <span data-ttu-id="01e6c-341">Possono essere utilizzati per compilare il `Style` argomento per il `Format` funzione:</span><span class="sxs-lookup"><span data-stu-id="01e6c-341">These may be used to build the `Style` argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="01e6c-342">Carattere</span><span class="sxs-lookup"><span data-stu-id="01e6c-342">Character</span></span>|<span data-ttu-id="01e6c-343">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-343">Description</span></span>|  
|-|-|  
|<span data-ttu-id="01e6c-344">nessuno</span><span class="sxs-lookup"><span data-stu-id="01e6c-344">None</span></span>|<span data-ttu-id="01e6c-345">Visualizza il numero senza formattazione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-345">Displays the number with no formatting.</span></span>|  
|<span data-ttu-id="01e6c-346">(`0`)</span><span class="sxs-lookup"><span data-stu-id="01e6c-346">(`0`)</span></span>|<span data-ttu-id="01e6c-347">Segnaposto per cifre.</span><span class="sxs-lookup"><span data-stu-id="01e6c-347">Digit placeholder.</span></span> <span data-ttu-id="01e6c-348">Viene visualizzata una cifra o uno zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-348">Displays a digit or a zero.</span></span> <span data-ttu-id="01e6c-349">Se l'espressione è presente una cifra nella posizione in cui è presente lo zero nella stringa di formato, visualizzarlo; in caso contrario, viene visualizzato uno zero in tale posizione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-349">If the expression has a digit in the position where the zero appears in the format string, display it; otherwise, displays a zero in that position.</span></span><br /><br /> <span data-ttu-id="01e6c-350">Se il numero ha meno cifre di quanti sono gli zeri (su entrambi i lati del separatore decimale) nell'espressione di formato, consente di visualizzare zeri iniziali o finali.</span><span class="sxs-lookup"><span data-stu-id="01e6c-350">If the number has fewer digits than there are zeros (on either side of the decimal) in the format expression, displays leading or trailing zeros.</span></span> <span data-ttu-id="01e6c-351">Se il numero include più cifre a destra del separatore decimale rispetto a quanti sono gli zeri a destra del separatore decimale nell'espressione di formato, arrotondare le tante cifre decimali quanti sono gli zeri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-351">If the number has more digits to the right of the decimal separator than there are zeros to the right of the decimal separator in the format expression, rounds the number to as many decimal places as there are zeros.</span></span> <span data-ttu-id="01e6c-352">Se il numero include più cifre a sinistra del separatore decimale rispetto a quanti sono gli zeri a sinistra del separatore decimale nell'espressione di formato, consente di visualizzare le cifre aggiuntive senza modifiche.</span><span class="sxs-lookup"><span data-stu-id="01e6c-352">If the number has more digits to the left of the decimal separator than there are zeros to the left of the decimal separator in the format expression, displays the extra digits without modification.</span></span>|  
|<span data-ttu-id="01e6c-353">(`#`)</span><span class="sxs-lookup"><span data-stu-id="01e6c-353">(`#`)</span></span>|<span data-ttu-id="01e6c-354">Segnaposto per cifre.</span><span class="sxs-lookup"><span data-stu-id="01e6c-354">Digit placeholder.</span></span> <span data-ttu-id="01e6c-355">Viene visualizzata una cifra o nulla.</span><span class="sxs-lookup"><span data-stu-id="01e6c-355">Displays a digit or nothing.</span></span> <span data-ttu-id="01e6c-356">Se l'espressione è presente una cifra nella posizione in cui il `#` carattere viene visualizzato nella stringa di formato, viene visualizzato; in caso contrario, non visualizzerà niente in tale posizione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-356">If the expression has a digit in the position where the `#` character appears in the format string, displays it; otherwise, displays nothing in that position.</span></span><br /><br /> <span data-ttu-id="01e6c-357">Questo simbolo funziona come le `0` segnaposto cifra, ad eccezione del fatto che zeri iniziali e finali non vengono visualizzati se il numero ha meno cifre di quanti sono `#` caratteri ai lati del separatore decimale nell'espressione di formato.</span><span class="sxs-lookup"><span data-stu-id="01e6c-357">This symbol works like the `0` digit placeholder, except that leading and trailing zeros aren't displayed if the number has fewer digits than there are `#` characters on either side of the decimal separator in the format expression.</span></span>|  
|<span data-ttu-id="01e6c-358">(`.`)</span><span class="sxs-lookup"><span data-stu-id="01e6c-358">(`.`)</span></span>|<span data-ttu-id="01e6c-359">Segnaposto decimale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-359">Decimal placeholder.</span></span> <span data-ttu-id="01e6c-360">Il segnaposto decimale determina il numero di cifre visualizzato a sinistra e a destra del separatore decimale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-360">The decimal placeholder determines how many digits are displayed to the left and right of the decimal separator.</span></span> <span data-ttu-id="01e6c-361">Se l'espressione di formato contiene solo `#` caratteri alla sinistra di questo simbolo; i numeri inferiori a 1 iniziano con un separatore decimale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-361">If the format expression contains only `#` characters to the left of this symbol; numbers smaller than 1 begin with a decimal separator.</span></span> <span data-ttu-id="01e6c-362">Per visualizzare uno zero iniziale con i numeri frazionari, utilizzare zero come primo segnaposto di cifra a sinistra del separatore decimale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-362">To display a leading zero displayed with fractional numbers, use zero as the first digit placeholder to the left of the decimal separator.</span></span> <span data-ttu-id="01e6c-363">In alcune impostazioni locali, viene utilizzata una virgola come separatore decimale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-363">In some locales, a comma is used as the decimal separator.</span></span> <span data-ttu-id="01e6c-364">Il carattere effettivo utilizzato come segnaposto decimale nell'output formattato dipende dal formato numerico riconosciuto dal sistema in uso.</span><span class="sxs-lookup"><span data-stu-id="01e6c-364">The actual character used as a decimal placeholder in the formatted output depends on the number format recognized by your system.</span></span> <span data-ttu-id="01e6c-365">Pertanto, utilizzare il periodo come segnaposto decimale nei formati in uso anche se trovano in impostazioni locali configurate viene utilizzata una virgola come segnaposto decimale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-365">Thus, you should use the period as the decimal placeholder in your formats even if you are in a locale that uses a comma as a decimal placeholder.</span></span> <span data-ttu-id="01e6c-366">La stringa formattata verrà visualizzato nel formato corretto per le impostazioni locali.</span><span class="sxs-lookup"><span data-stu-id="01e6c-366">The formatted string will appear in the format correct for the locale.</span></span>|  
|<span data-ttu-id="01e6c-367">(`%`)</span><span class="sxs-lookup"><span data-stu-id="01e6c-367">(`%`)</span></span>|<span data-ttu-id="01e6c-368">Segnaposto percentuale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-368">Percent placeholder.</span></span> <span data-ttu-id="01e6c-369">Moltiplica l'espressione per 100.</span><span class="sxs-lookup"><span data-stu-id="01e6c-369">Multiplies the expression by 100.</span></span> <span data-ttu-id="01e6c-370">Il carattere di percentuale (`%`) viene inserito nella posizione in cui presente nella stringa di formato.</span><span class="sxs-lookup"><span data-stu-id="01e6c-370">The percent character (`%`) is inserted in the position where it appears in the format string.</span></span>|  
|<span data-ttu-id="01e6c-371">(`,`)</span><span class="sxs-lookup"><span data-stu-id="01e6c-371">(`,`)</span></span>|<span data-ttu-id="01e6c-372">Separatore delle migliaia.</span><span class="sxs-lookup"><span data-stu-id="01e6c-372">Thousand separator.</span></span> <span data-ttu-id="01e6c-373">Il separatore delle migliaia separa le migliaia dalle centinaia all'interno di un numero con quattro o più posizioni a sinistra del separatore decimale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-373">The thousand separator separates thousands from hundreds within a number that has four or more places to the left of the decimal separator.</span></span> <span data-ttu-id="01e6c-374">Utilizzo standard del separatore delle migliaia viene specificato se il formato include un separatore delle migliaia racchiuso da segnaposti cifra (`0` o `#`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-374">Standard use of the thousand separator is specified if the format contains a thousand separator surrounded by digit placeholders (`0` or `#`).</span></span><br /><br /> <span data-ttu-id="01e6c-375">Un separatore delle migliaia immediatamente a sinistra del separatore decimale (se viene specificato un numero decimale) o come più a destra di caratteri della stringa indica che "ridimensionare il numero essere diviso per 1000 e arrotondato se necessario."</span><span class="sxs-lookup"><span data-stu-id="01e6c-375">A thousand separator immediately to the left of the decimal separator (whether or not a decimal is specified) or as the rightmost character in the string means "scale the number by dividing it by 1,000, rounding as needed."</span></span> <span data-ttu-id="01e6c-376">I numeri inferiori a 1000 ma maggiori o uguali a 500 vengono visualizzati come `1`e i numeri inferiori a 500 vengono visualizzati come `0`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-376">Numbers smaller than 1,000 but greater or equal to 500 are displayed as `1`, and numbers smaller than 500 are displayed as `0`.</span></span> <span data-ttu-id="01e6c-377">Due separatori delle migliaia adiacenti in questa posizione puoi ridimensionare un fattore pari a 1 milione e un fattore aggiuntivo pari a 1.000 per ogni separatore aggiuntivo.</span><span class="sxs-lookup"><span data-stu-id="01e6c-377">Two adjacent thousand separators in this position scale by a factor of 1 million, and an additional factor of 1,000 for each additional separator.</span></span><br /><br /> <span data-ttu-id="01e6c-378">Più separatori in qualsiasi posizione diversa da quella immediatamente a sinistra del separatore decimale o all'estrema destra nella stringa vengono trattati come semplici che specificano l'utilizzo di un separatore delle migliaia.</span><span class="sxs-lookup"><span data-stu-id="01e6c-378">Multiple separators in any position other than immediately to the left of the decimal separator or the rightmost position in the string are treated simply as specifying the use of a thousand separator.</span></span> <span data-ttu-id="01e6c-379">In alcune impostazioni locali, viene utilizzato un punto come separatore delle migliaia.</span><span class="sxs-lookup"><span data-stu-id="01e6c-379">In some locales, a period is used as a thousand separator.</span></span> <span data-ttu-id="01e6c-380">Il carattere effettivo utilizzato come separatore delle migliaia nell'output formattato dipende dal formato numerico riconosciuto dal sistema in uso.</span><span class="sxs-lookup"><span data-stu-id="01e6c-380">The actual character used as the thousand separator in the formatted output depends on the Number Format recognized by your system.</span></span> <span data-ttu-id="01e6c-381">In questo modo, si deve usare la virgola come separatore delle migliaia nei formati in uso anche se trovano in delle impostazioni locali che viene utilizzato un punto come separatore delle migliaia.</span><span class="sxs-lookup"><span data-stu-id="01e6c-381">Thus, you should use the comma as the thousand separator in your formats even if you are in a locale that uses a period as a thousand separator.</span></span> <span data-ttu-id="01e6c-382">La stringa formattata verrà visualizzato nel formato corretto per le impostazioni locali.</span><span class="sxs-lookup"><span data-stu-id="01e6c-382">The formatted string will appear in the format correct for the locale.</span></span><br /><br /> <span data-ttu-id="01e6c-383">Ad esempio, considerare le tre stringhe di formato seguenti:</span><span class="sxs-lookup"><span data-stu-id="01e6c-383">For example, consider the three following format strings:</span></span><br /><br /> <span data-ttu-id="01e6c-384">-   `"#,0."`, utilizza il separatore delle migliaia per formattare il numero 100 milioni come stringa "100.000.000".</span><span class="sxs-lookup"><span data-stu-id="01e6c-384">-   `"#,0."`, which uses the thousands separator to format the number 100 million as the string "100,000,000".</span></span><br /><span data-ttu-id="01e6c-385">-   `"#0,."`, che usa l'implementazione della scalabilità tramite un fattore di mille per formattare il numero 100 milioni come stringa "100000".</span><span class="sxs-lookup"><span data-stu-id="01e6c-385">-   `"#0,."`, which uses scaling by a factor of one thousand to format the number 100 million as the string "100000".</span></span><br /><span data-ttu-id="01e6c-386">-   `"#,0,."`, che utilizza il separatore delle migliaia e la riduzione di mille per formattare il numero 100 milioni come stringa "100.000".</span><span class="sxs-lookup"><span data-stu-id="01e6c-386">-   `"#,0,."`, which uses the thousands separator and scaling by one thousand to format the number 100 million as the string "100,000".</span></span>|  
|<span data-ttu-id="01e6c-387">(`:`)</span><span class="sxs-lookup"><span data-stu-id="01e6c-387">(`:`)</span></span>|<span data-ttu-id="01e6c-388">Separatore dell'ora.</span><span class="sxs-lookup"><span data-stu-id="01e6c-388">Time separator.</span></span> <span data-ttu-id="01e6c-389">In alcune impostazioni locali, possono essere utilizzati altri caratteri per rappresentare il separatore dell'ora.</span><span class="sxs-lookup"><span data-stu-id="01e6c-389">In some locales, other characters may be used to represent the time separator.</span></span> <span data-ttu-id="01e6c-390">Il separatore dell'ora separa le ore, minuti e secondi nei valori di ora formattati.</span><span class="sxs-lookup"><span data-stu-id="01e6c-390">The time separator separates hours, minutes, and seconds when time values are formatted.</span></span> <span data-ttu-id="01e6c-391">Il carattere effettivo utilizzato come separatore dell'ora nell'output formattato è determinato dalle impostazioni del sistema.</span><span class="sxs-lookup"><span data-stu-id="01e6c-391">The actual character used as the time separator in formatted output is determined by your system settings.</span></span>|  
|<span data-ttu-id="01e6c-392">(`/`)</span><span class="sxs-lookup"><span data-stu-id="01e6c-392">(`/`)</span></span>|<span data-ttu-id="01e6c-393">Separatore della data.</span><span class="sxs-lookup"><span data-stu-id="01e6c-393">Date separator.</span></span> <span data-ttu-id="01e6c-394">In alcune impostazioni locali, possono essere utilizzati altri caratteri per rappresentare il separatore della data.</span><span class="sxs-lookup"><span data-stu-id="01e6c-394">In some locales, other characters may be used to represent the date separator.</span></span> <span data-ttu-id="01e6c-395">Il separatore della data separa il giorno, mese e anno nei valori di data formattati.</span><span class="sxs-lookup"><span data-stu-id="01e6c-395">The date separator separates the day, month, and year when date values are formatted.</span></span> <span data-ttu-id="01e6c-396">Il carattere effettivo utilizzato come separatore della data nell'output formattato è determinato dalle impostazioni del sistema.</span><span class="sxs-lookup"><span data-stu-id="01e6c-396">The actual character used as the date separator in formatted output is determined by your system settings.</span></span>|  
|<span data-ttu-id="01e6c-397">(`E-``E+``e-``e+`)</span><span class="sxs-lookup"><span data-stu-id="01e6c-397">(`E-``E+``e-``e+`)</span></span>|<span data-ttu-id="01e6c-398">Formato scientifico.</span><span class="sxs-lookup"><span data-stu-id="01e6c-398">Scientific format.</span></span> <span data-ttu-id="01e6c-399">Se l'espressione di formato contiene almeno un segnaposto di cifra (`0` oppure `#`) a sinistra del `E-`, `E+`, `e-`, oppure `e+`, il numero viene visualizzato in formato scientifico e `E` o `e` tra il numero e il relativo esponente verrà inserito.</span><span class="sxs-lookup"><span data-stu-id="01e6c-399">If the format expression contains at least one digit placeholder (`0` or `#`) to the left of `E-`, `E+`, `e-`, or `e+`, the number is displayed in scientific format and `E` or `e` is inserted between the number and its exponent.</span></span> <span data-ttu-id="01e6c-400">Il numero di segnaposti cifra a sinistra determina il numero di cifre nell'esponente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-400">The number of digit placeholders to the left determines the number of digits in the exponent.</span></span> <span data-ttu-id="01e6c-401">Uso `E-` o `e-` per inserire un segno meno accanto agli esponenti negativi.</span><span class="sxs-lookup"><span data-stu-id="01e6c-401">Use `E-` or `e-` to place a minus sign next to negative exponents.</span></span> <span data-ttu-id="01e6c-402">Uso `E+` o `e+` per inserire un segno meno accanto agli esponenti negativi e un segno più accanto agli esponenti positivi.</span><span class="sxs-lookup"><span data-stu-id="01e6c-402">Use `E+` or `e+` to place a minus sign next to negative exponents and a plus sign next to positive exponents.</span></span> <span data-ttu-id="01e6c-403">È necessario includere anche segnaposti cifra a destra del simbolo per ottenere una formattazione corretta.</span><span class="sxs-lookup"><span data-stu-id="01e6c-403">You must also include digit placeholders to the right of this symbol to get correct formatting.</span></span>|  
|<span data-ttu-id="01e6c-404">`-` `+` `$` ( )</span><span class="sxs-lookup"><span data-stu-id="01e6c-404">`-` `+` `$` ( )</span></span>|<span data-ttu-id="01e6c-405">Caratteri letterali.</span><span class="sxs-lookup"><span data-stu-id="01e6c-405">Literal characters.</span></span> <span data-ttu-id="01e6c-406">Questi caratteri vengono visualizzati esattamente come vengono digitati nella stringa di formato.</span><span class="sxs-lookup"><span data-stu-id="01e6c-406">These characters are displayed exactly as typed in the format string.</span></span> <span data-ttu-id="01e6c-407">Per visualizzare un carattere diverso da quelli elencati, anteporvi una barra rovesciata (`\`) o racchiuderlo tra virgolette doppie ("").</span><span class="sxs-lookup"><span data-stu-id="01e6c-407">To display a character other than one of those listed, precede it with a backslash (`\`) or enclose it in double quotation marks (" ").</span></span>|  
|<span data-ttu-id="01e6c-408">(`\`)</span><span class="sxs-lookup"><span data-stu-id="01e6c-408">(`\`)</span></span>|<span data-ttu-id="01e6c-409">Visualizza il carattere successivo nella stringa di formato.</span><span class="sxs-lookup"><span data-stu-id="01e6c-409">Displays the next character in the format string.</span></span> <span data-ttu-id="01e6c-410">Per visualizzare un carattere dotato di significato speciale come carattere letterale, anteporvi una barra rovesciata (`\`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-410">To display a character that has special meaning as a literal character, precede it with a backslash (`\`).</span></span> <span data-ttu-id="01e6c-411">Non viene visualizzata la barra rovesciata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-411">The backslash itself isn't displayed.</span></span> <span data-ttu-id="01e6c-412">Con una barra rovesciata equivale racchiudere il carattere successivo tra virgolette doppie.</span><span class="sxs-lookup"><span data-stu-id="01e6c-412">Using a backslash is the same as enclosing the next character in double quotation marks.</span></span> <span data-ttu-id="01e6c-413">Per visualizzare una barra rovesciata, utilizzare due barre rovesciate (`\\`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-413">To display a backslash, use two backslashes (`\\`).</span></span><br /><br /> <span data-ttu-id="01e6c-414">Esempi di caratteri che non possono essere visualizzati come caratteri letterali sono i caratteri di formattazione delle date e formattazione dell'ora (`a`, `c`, `d`, `h`, `m`, `n`, `p`, `q`, `s`, `t`, `w`, `y`, `/`, e `:`), i caratteri di formattazione di numeri (`#`, `0`, `%`, `E`, `e`, virgola e punto) e i caratteri di formattazione di stringhe (`@`, `&`, `<`, `>`, e `!`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-414">Examples of characters that can't be displayed as literal characters are the date-formatting and time-formatting characters (`a`, `c`, `d`, `h`, `m`, `n`, `p`, `q`, `s`, `t`, `w`, `y`, `/`, and `:`), the numeric-formatting characters (`#`, `0`, `%`, `E`, `e`, comma, and period), and the string-formatting characters (`@`, `&`, `<`, `>`, and `!`).</span></span>|  
|<span data-ttu-id="01e6c-415">(`"``ABC``"`)</span><span class="sxs-lookup"><span data-stu-id="01e6c-415">(`"``ABC``"`)</span></span>|<span data-ttu-id="01e6c-416">Visualizza la stringa racchiusa tra virgolette doppie ("").</span><span class="sxs-lookup"><span data-stu-id="01e6c-416">Displays the string inside the double quotation marks (" ").</span></span> <span data-ttu-id="01e6c-417">Per includere una stringa nell'argomento dello stile all'interno del codice, è necessario utilizzare `Chr(34)` racchiudere il testo (`34` è il codice carattere per un segno di virgolette (")).</span><span class="sxs-lookup"><span data-stu-id="01e6c-417">To include a string in the style argument from within code, you must use `Chr(34)` to enclose the text (`34` is the character code for a quotation mark (")).</span></span>|  
  
### <a name="legacy-code-example"></a><span data-ttu-id="01e6c-418">Esempio di codice precedente</span><span class="sxs-lookup"><span data-stu-id="01e6c-418">Legacy Code Example</span></span>  
 <span data-ttu-id="01e6c-419">Nella tabella seguente contiene alcuni esempi di espressioni di formato per i numeri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-419">The following table contains some sample format expressions for numbers.</span></span> <span data-ttu-id="01e6c-420">(Questi esempi si presuppone che le impostazioni del sistema dalle impostazioni locali sono inglese-Stati Uniti) La prima colonna contiene le stringhe di formato per il `Style` argomento del `Format` funzione; le altre colonne contengono l'output risultante se i dati formattati dispongono del valore fornito nelle intestazioni di colonna.</span><span class="sxs-lookup"><span data-stu-id="01e6c-420">(These examples all assume that your system's locale setting is English-U.S.) The first column contains the format strings for the `Style` argument of the `Format` function; the other columns contain the resulting output if the formatted data has the value given in the column headings.</span></span>  
  
|<span data-ttu-id="01e6c-421">Formato (`Style`)</span><span class="sxs-lookup"><span data-stu-id="01e6c-421">Format (`Style`)</span></span>|<span data-ttu-id="01e6c-422">"5" nel formato</span><span class="sxs-lookup"><span data-stu-id="01e6c-422">"5" formatted as</span></span>|<span data-ttu-id="01e6c-423">"-5" nel formato</span><span class="sxs-lookup"><span data-stu-id="01e6c-423">"-5" formatted as</span></span>|<span data-ttu-id="01e6c-424">"0,5" nel formato</span><span class="sxs-lookup"><span data-stu-id="01e6c-424">"0.5" formatted as</span></span>|  
|-|-|-|-|  
|`Zero-length string ("")`|`5`|`-5`|`0.5`|  
|`0`|`5`|`-5`|`1`|  
|`0.00`|`5.00`|`-5.00`|`0.50`|  
|`#,##0`|`5`|`-5`|`1`|  
|`$#,##0;($#,##0)`|`$5`|`($5)`|`$1`|  
|`$#,##0.00;($#,##0.00)`|`$5.00`|`($5.00)`|`$0.50`|  
|`0%`|`500%`|`-500%`|`50%`|  
|`0.00%`|`500.00%`|`-500.00%`|`50.00%`|  
|`0.00E+00`|`5.00E+00`|`-5.00E+00`|`5.00E-01`|  
|`0.00E-00`|`5.00E00`|`-5.00E00`|`5.00E-01`|  
  
## <a name="predefined-datetime-formats"></a><span data-ttu-id="01e6c-425">Formati di data/ora predefiniti</span><span class="sxs-lookup"><span data-stu-id="01e6c-425">Predefined Date/Time Formats</span></span>  
 <span data-ttu-id="01e6c-426">Nella tabella seguente identifica il data predefiniti e i nomi di formato di ora.</span><span class="sxs-lookup"><span data-stu-id="01e6c-426">The following table identifies the predefined date and time format names.</span></span> <span data-ttu-id="01e6c-427">Questi possono essere usati in base al nome come argomento dello stile per il `Format` funzione:</span><span class="sxs-lookup"><span data-stu-id="01e6c-427">These may be used by name as the style argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="01e6c-428">Nome del formato</span><span class="sxs-lookup"><span data-stu-id="01e6c-428">Format Name</span></span>|<span data-ttu-id="01e6c-429">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-429">Description</span></span>|  
|-|-|  
|<span data-ttu-id="01e6c-430">`General Date`, o `G`</span><span class="sxs-lookup"><span data-stu-id="01e6c-430">`General Date`, or `G`</span></span>|<span data-ttu-id="01e6c-431">Visualizza una data o ora.</span><span class="sxs-lookup"><span data-stu-id="01e6c-431">Displays a date and/or time.</span></span> <span data-ttu-id="01e6c-432">Ad esempio `3/12/2008 11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-432">For example, `3/12/2008 11:07:31 AM`.</span></span> <span data-ttu-id="01e6c-433">Visualizzazione della data è determinata dal valore delle impostazioni cultura correnti dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-433">Date display is determined by your application's current culture value.</span></span>|  
|<span data-ttu-id="01e6c-434">`Long Date`, `Medium Date`o `D`</span><span class="sxs-lookup"><span data-stu-id="01e6c-434">`Long Date`, `Medium Date`, or `D`</span></span>|<span data-ttu-id="01e6c-435">Visualizza la data in base al formato di data estesa di cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-435">Displays a date according to your current culture's long date format.</span></span> <span data-ttu-id="01e6c-436">Ad esempio `Wednesday, March 12, 2008`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-436">For example, `Wednesday, March 12, 2008`.</span></span>|  
|<span data-ttu-id="01e6c-437">`Short Date`, o `d`</span><span class="sxs-lookup"><span data-stu-id="01e6c-437">`Short Date`, or `d`</span></span>|<span data-ttu-id="01e6c-438">Visualizza la data utilizzando il formato di data breve di cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-438">Displays a date using your current culture's short date format.</span></span> <span data-ttu-id="01e6c-439">Ad esempio `3/12/2008`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-439">For example, `3/12/2008`.</span></span><br /><br /> <span data-ttu-id="01e6c-440">Il `d` carattere consente di visualizzare il giorno in un formato di data definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-440">The `d` character displays the day in a user-defined date format.</span></span>|  
|<span data-ttu-id="01e6c-441">`Long Time`, `Medium Time`o `T`</span><span class="sxs-lookup"><span data-stu-id="01e6c-441">`Long Time`, `Medium Time`, or `T`</span></span>|<span data-ttu-id="01e6c-442">Visualizza l'ora utilizzando il formato di ora estesa le impostazioni cultura correnti; in genere comprende ore, minuti, secondi.</span><span class="sxs-lookup"><span data-stu-id="01e6c-442">Displays a time using your current culture's long time format; typically includes hours, minutes, seconds.</span></span> <span data-ttu-id="01e6c-443">Ad esempio `11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-443">For example, `11:07:31 AM`.</span></span>|  
|<span data-ttu-id="01e6c-444">`Short Time` o `t`</span><span class="sxs-lookup"><span data-stu-id="01e6c-444">`Short Time` or `t`</span></span>|<span data-ttu-id="01e6c-445">Visualizza l'ora utilizzando il formato di ora breve di cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-445">Displays a time using your current culture's short time format.</span></span> <span data-ttu-id="01e6c-446">Ad esempio `11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-446">For example, `11:07 AM`.</span></span><br /><br /> <span data-ttu-id="01e6c-447">Il `t` carattere consente di visualizzare `AM` o `PM` valori per le impostazioni locali che usano un formato a 12 ore in un formato ora definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-447">The `t` character displays `AM` or `PM` values for locales that use a 12-hour clock in a user-defined time format.</span></span>|  
|`f`|<span data-ttu-id="01e6c-448">Visualizza la data estesa e ora breve in base al formato di cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-448">Displays the long date and short time according to your current culture's format.</span></span> <span data-ttu-id="01e6c-449">Ad esempio `Wednesday, March 12, 2008 11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-449">For example, `Wednesday, March 12, 2008 11:07 AM`.</span></span>|  
|`F`|<span data-ttu-id="01e6c-450">Visualizza la data estesa e ora estesa in base al formato di cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-450">Displays the long date and long time according to your current culture's format.</span></span> <span data-ttu-id="01e6c-451">Ad esempio `Wednesday, March 12, 2008 11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-451">For example, `Wednesday, March 12, 2008 11:07:31 AM`.</span></span>|  
|`g`|<span data-ttu-id="01e6c-452">Visualizza la data breve e ora breve in base al formato di cultura correnti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-452">Displays the short date and short time according to your current culture's format.</span></span> <span data-ttu-id="01e6c-453">Ad esempio `3/12/2008 11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-453">For example, `3/12/2008 11:07 AM`.</span></span>|  
|<span data-ttu-id="01e6c-454">`M`, `m`</span><span class="sxs-lookup"><span data-stu-id="01e6c-454">`M`, `m`</span></span>|<span data-ttu-id="01e6c-455">Visualizza il mese e giorno di una data.</span><span class="sxs-lookup"><span data-stu-id="01e6c-455">Displays the month and the day of a date.</span></span> <span data-ttu-id="01e6c-456">Ad esempio `March 12`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-456">For example, `March 12`.</span></span><br /><br /> <span data-ttu-id="01e6c-457">Il `M` carattere consente di visualizzare il mese in un formato di data definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-457">The `M` character displays the month in a user-defined date format.</span></span> <span data-ttu-id="01e6c-458">Il `m` carattere consente di visualizzare i minuti in un formato ora definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-458">The `m` character displays the minutes in a user-defined time format.</span></span>|  
|<span data-ttu-id="01e6c-459">`R`, `r`</span><span class="sxs-lookup"><span data-stu-id="01e6c-459">`R`, `r`</span></span>|<span data-ttu-id="01e6c-460">Consente di formattare la data in base al <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="01e6c-460">Formats the date according to the <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> property.</span></span> <span data-ttu-id="01e6c-461">Ad esempio `Wed, 12 Mar 2008 11:07:31 GMT`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-461">For example, `Wed, 12 Mar 2008 11:07:31 GMT`.</span></span> <span data-ttu-id="01e6c-462">La data formattata non modificare il valore di data e ora.</span><span class="sxs-lookup"><span data-stu-id="01e6c-462">The formatted date does not adjust the value of the date and time.</span></span> <span data-ttu-id="01e6c-463">È necessario modificare il valore di data/ora in GMT prima di chiamare il `Format` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-463">You must adjust the Date/Time value to GMT before calling the `Format` function.</span></span>|  
|`s`|<span data-ttu-id="01e6c-464">Formattare la data e ora come indice ordinabile.</span><span class="sxs-lookup"><span data-stu-id="01e6c-464">Formats the date and time as a sortable index.</span></span> <span data-ttu-id="01e6c-465">Ad esempio `2008-03-12T11:07:31`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-465">For example, `2008-03-12T11:07:31`.</span></span><br /><br /> <span data-ttu-id="01e6c-466">Il `s` carattere consente di visualizzare i secondi in un formato ora definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-466">The `s` character displays the seconds in a user-defined time format.</span></span>|  
|`u`|<span data-ttu-id="01e6c-467">Formattare la data e ora come indice ordinabile GMT.</span><span class="sxs-lookup"><span data-stu-id="01e6c-467">Formats the date and time as a GMT sortable index.</span></span> <span data-ttu-id="01e6c-468">Ad esempio `2008-03-12 11:07:31Z`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-468">For example, `2008-03-12 11:07:31Z`.</span></span>|  
|`U`|<span data-ttu-id="01e6c-469">Formattare la data e ora con la data e ora estesa come GMT.</span><span class="sxs-lookup"><span data-stu-id="01e6c-469">Formats the date and time with the long date and long time as GMT.</span></span> <span data-ttu-id="01e6c-470">Ad esempio `Wednesday, March 12, 2008 6:07:31 PM`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-470">For example, `Wednesday, March 12, 2008 6:07:31 PM`.</span></span>|  
|<span data-ttu-id="01e6c-471">`Y`, `y`</span><span class="sxs-lookup"><span data-stu-id="01e6c-471">`Y`, `y`</span></span>|<span data-ttu-id="01e6c-472">Formattare la data come anno e mese.</span><span class="sxs-lookup"><span data-stu-id="01e6c-472">Formats the date as the year and month.</span></span> <span data-ttu-id="01e6c-473">Ad esempio `March, 2008`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-473">For example, `March, 2008`.</span></span><br /><br /> <span data-ttu-id="01e6c-474">Il `Y` e `y` caratteri visualizzare l'anno in un formato di data definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-474">The `Y` and `y` characters display the year in a user-defined date format.</span></span>|  
  
 <span data-ttu-id="01e6c-475">Per altre informazioni sulle impostazioni cultura correnti dell'applicazione, vedere [modo in cui le impostazioni cultura influisce sulle stringhe in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="01e6c-475">For more information about the application's current culture information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
## <a name="user-defined-datetime-formats"></a><span data-ttu-id="01e6c-476">Formati di data/ora definiti dall'utente</span><span class="sxs-lookup"><span data-stu-id="01e6c-476">User-Defined Date/Time Formats</span></span>  
 <span data-ttu-id="01e6c-477">Nella tabella seguente Mostra caratteri che è possibile usare per creare formati di data/ora definiti dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-477">The following table shows characters you can use to create user-defined date/time formats.</span></span> <span data-ttu-id="01e6c-478">A differenza nelle versioni precedenti di Visual Basic, i caratteri di formattazione sono tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="01e6c-478">Unlike in earlier versions of Visual Basic, these format characters are case-sensitive.</span></span>  
  
|<span data-ttu-id="01e6c-479">Carattere</span><span class="sxs-lookup"><span data-stu-id="01e6c-479">Character</span></span>|<span data-ttu-id="01e6c-480">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-480">Description</span></span>|  
|-|-|  
|<span data-ttu-id="01e6c-481">(`:`)</span><span class="sxs-lookup"><span data-stu-id="01e6c-481">(`:`)</span></span>|<span data-ttu-id="01e6c-482">Separatore dell'ora.</span><span class="sxs-lookup"><span data-stu-id="01e6c-482">Time separator.</span></span> <span data-ttu-id="01e6c-483">In alcune impostazioni locali, possono essere utilizzati altri caratteri per rappresentare il separatore dell'ora.</span><span class="sxs-lookup"><span data-stu-id="01e6c-483">In some locales, other characters may be used to represent the time separator.</span></span> <span data-ttu-id="01e6c-484">Il separatore dell'ora separa le ore, minuti e secondi nei valori di ora formattati.</span><span class="sxs-lookup"><span data-stu-id="01e6c-484">The time separator separates hours, minutes, and seconds when time values are formatted.</span></span> <span data-ttu-id="01e6c-485">Il carattere effettivo utilizzato come separatore dell'ora nell'output formattato è determinato dal valore delle impostazioni cultura correnti dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-485">The actual character that is used as the time separator in formatted output is determined by your application's current culture value.</span></span>|  
|<span data-ttu-id="01e6c-486">(`/`)</span><span class="sxs-lookup"><span data-stu-id="01e6c-486">(`/`)</span></span>|<span data-ttu-id="01e6c-487">Separatore della data.</span><span class="sxs-lookup"><span data-stu-id="01e6c-487">Date separator.</span></span> <span data-ttu-id="01e6c-488">In alcune impostazioni locali, possono essere utilizzati altri caratteri per rappresentare il separatore della data.</span><span class="sxs-lookup"><span data-stu-id="01e6c-488">In some locales, other characters may be used to represent the date separator.</span></span> <span data-ttu-id="01e6c-489">Il separatore della data separa il giorno, mese e anno nei valori di data formattati.</span><span class="sxs-lookup"><span data-stu-id="01e6c-489">The date separator separates the day, month, and year when date values are formatted.</span></span> <span data-ttu-id="01e6c-490">Il carattere effettivo utilizzato come separatore della data nell'output formattato è determinato dalle impostazioni cultura correnti dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-490">The actual character that is used as the date separator in formatted output is determined by your application's current culture.</span></span>|  
|<span data-ttu-id="01e6c-491">(`%`)</span><span class="sxs-lookup"><span data-stu-id="01e6c-491">(`%`)</span></span>|<span data-ttu-id="01e6c-492">Utilizzato per indicare che il carattere seguente deve essere letto come un formato a lettera singola indipendentemente dalle lettere finali.</span><span class="sxs-lookup"><span data-stu-id="01e6c-492">Used to indicate that the following character should be read as a single-letter format without regard to any trailing letters.</span></span> <span data-ttu-id="01e6c-493">Usato anche per indicare che un formato a lettera singola viene letto come un formato definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-493">Also used to indicate that a single-letter format is read as a user-defined format.</span></span> <span data-ttu-id="01e6c-494">Vedere di seguito per altri dettagli.</span><span class="sxs-lookup"><span data-stu-id="01e6c-494">See what follows for additional details.</span></span>|  
|`d`|<span data-ttu-id="01e6c-495">Visualizza il giorno sotto forma di numero senza zero iniziale (ad esempio, `1`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-495">Displays the day as a number without a leading zero (for example, `1`).</span></span> <span data-ttu-id="01e6c-496">Usare `%d` se questo è l'unico carattere nel formato numerico definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-496">Use `%d` if this is the only character in your user-defined numeric format.</span></span>|  
|`dd`|<span data-ttu-id="01e6c-497">Visualizza il giorno sotto forma di numero con uno zero iniziale (ad esempio, `01`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-497">Displays the day as a number with a leading zero (for example, `01`).</span></span>|  
|`ddd`|<span data-ttu-id="01e6c-498">Visualizza il giorno nella forma abbreviata (ad esempio, `Sun`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-498">Displays the day as an abbreviation (for example, `Sun`).</span></span>|  
|`dddd`|<span data-ttu-id="01e6c-499">Visualizza il giorno con un nome completo (ad esempio, `Sunday`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-499">Displays the day as a full name (for example, `Sunday`).</span></span>|  
|`M`|<span data-ttu-id="01e6c-500">Visualizza il mese sotto forma di numero senza zero iniziale (ad esempio gennaio viene rappresentato come `1`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-500">Displays the month as a number without a leading zero (for example, January is represented as `1`).</span></span> <span data-ttu-id="01e6c-501">Usare `%M` se questo è l'unico carattere nel formato numerico definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-501">Use `%M` if this is the only character in your user-defined numeric format.</span></span>|  
|`MM`|<span data-ttu-id="01e6c-502">Visualizza il mese sotto forma di numero con uno zero iniziale (ad esempio, `01/12/01`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-502">Displays the month as a number with a leading zero (for example, `01/12/01`).</span></span>|  
|`MMM`|<span data-ttu-id="01e6c-503">Visualizza il mese nella forma abbreviata (ad esempio, `Jan`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-503">Displays the month as an abbreviation (for example, `Jan`).</span></span>|  
|`MMMM`|<span data-ttu-id="01e6c-504">Visualizza il mese come nome completo del mese (ad esempio, `January`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-504">Displays the month as a full month name (for example, `January`).</span></span>|  
|`gg`|<span data-ttu-id="01e6c-505">Visualizza la stringa di periodo/era (ad esempio, `A.D.`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-505">Displays the period/era string (for example, `A.D.`).</span></span>|  
|`h`|<span data-ttu-id="01e6c-506">Visualizza l'ora sotto forma di numero senza zeri iniziali tramite il formato a 12 ore (ad esempio, `1:15:15 PM`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-506">Displays the hour as a number without leading zeros using the 12-hour clock (for example, `1:15:15 PM`).</span></span> <span data-ttu-id="01e6c-507">Usare `%h` se questo è l'unico carattere nel formato numerico definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-507">Use `%h` if this is the only character in your user-defined numeric format.</span></span>|  
|`hh`|<span data-ttu-id="01e6c-508">Visualizza l'ora sotto forma di numero con zeri iniziali tramite il formato a 12 ore (ad esempio, `01:15:15 PM`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-508">Displays the hour as a number with leading zeros using the 12-hour clock (for example, `01:15:15 PM`).</span></span>|  
|`H`|<span data-ttu-id="01e6c-509">Visualizza l'ora sotto forma di numero senza zeri iniziali tramite il formato a 24 ore (ad esempio, `1:15:15`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-509">Displays the hour as a number without leading zeros using the 24-hour clock (for example, `1:15:15`).</span></span> <span data-ttu-id="01e6c-510">Usare `%H` se questo è l'unico carattere nel formato numerico definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-510">Use `%H` if this is the only character in your user-defined numeric format.</span></span>|  
|`HH`|<span data-ttu-id="01e6c-511">Visualizza l'ora sotto forma di numero con zeri iniziali tramite il formato a 24 ore (ad esempio, `01:15:15`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-511">Displays the hour as a number with leading zeros using the 24-hour clock (for example, `01:15:15`).</span></span>|  
|`m`|<span data-ttu-id="01e6c-512">Visualizza il minuto sotto forma di numero senza zeri iniziali (ad esempio, `12:1:15`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-512">Displays the minute as a number without leading zeros (for example, `12:1:15`).</span></span> <span data-ttu-id="01e6c-513">Usare `%m` se questo è l'unico carattere nel formato numerico definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-513">Use `%m` if this is the only character in your user-defined numeric format.</span></span>|  
|`mm`|<span data-ttu-id="01e6c-514">Visualizza il minuto sotto forma di numero con zeri iniziali (ad esempio, `12:01:15`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-514">Displays the minute as a number with leading zeros (for example, `12:01:15`).</span></span>|  
|`s`|<span data-ttu-id="01e6c-515">Visualizza il secondo sotto forma di numero senza zeri iniziali (ad esempio, `12:15:5`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-515">Displays the second as a number without leading zeros (for example, `12:15:5`).</span></span> <span data-ttu-id="01e6c-516">Usare `%s` se questo è l'unico carattere nel formato numerico definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-516">Use `%s` if this is the only character in your user-defined numeric format.</span></span>|  
|`ss`|<span data-ttu-id="01e6c-517">Visualizza il secondo sotto forma di numero con zeri iniziali (ad esempio, `12:15:05`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-517">Displays the second as a number with leading zeros (for example, `12:15:05`).</span></span>|  
|`f`|<span data-ttu-id="01e6c-518">Visualizza le frazioni di secondo.</span><span class="sxs-lookup"><span data-stu-id="01e6c-518">Displays fractions of seconds.</span></span> <span data-ttu-id="01e6c-519">Ad esempio `ff` consente di visualizzare i centesimi di secondi, mentre `ffff` i decimillesimi di secondi.</span><span class="sxs-lookup"><span data-stu-id="01e6c-519">For example `ff` displays hundredths of seconds, whereas `ffff` displays ten-thousandths of seconds.</span></span> <span data-ttu-id="01e6c-520">È possibile usare fino a sette `f` simboli nel formato definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-520">You may use up to seven `f` symbols in your user-defined format.</span></span> <span data-ttu-id="01e6c-521">Usare `%f` se questo è l'unico carattere nel formato numerico definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-521">Use `%f` if this is the only character in your user-defined numeric format.</span></span>|  
|`t`|<span data-ttu-id="01e6c-522">Usa il formato a 12 ore e maiuscolo `A` per qualsiasi ora prima di mezzogiorno Visualizza maiuscolo `P` per qualsiasi ora tra mezzogiorno e le 11:59 P.M.</span><span class="sxs-lookup"><span data-stu-id="01e6c-522">Uses the 12-hour clock and displays an uppercase `A` for any hour before noon; displays an uppercase `P` for any hour between noon and 11:59 P.M.</span></span> <span data-ttu-id="01e6c-523">Usare `%t` se questo è l'unico carattere nel formato numerico definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-523">Use `%t` if this is the only character in your user-defined numeric format.</span></span>|  
|`tt`|<span data-ttu-id="01e6c-524">Per impostazioni locali che usano un formato a 12 ore, viene visualizzato un maiuscolo `AM` con qualsiasi ora prima di mezzogiorno vengono visualizzate in maiuscolo `PM` con qualsiasi ora tra mezzogiorno e le 11:59 P.M.</span><span class="sxs-lookup"><span data-stu-id="01e6c-524">For locales that use a 12-hour clock, displays an uppercase `AM` with any hour before noon; displays an uppercase `PM` with any hour between noon and 11:59 P.M.</span></span><br /><br /> <span data-ttu-id="01e6c-525">Per le impostazioni locali che usano un formato a 24 ore, verrà visualizzato nulla.</span><span class="sxs-lookup"><span data-stu-id="01e6c-525">For locales that use a 24-hour clock, displays nothing.</span></span>|  
|`y`|<span data-ttu-id="01e6c-526">Visualizza il numero dell'anno (0-9) senza zeri iniziali.</span><span class="sxs-lookup"><span data-stu-id="01e6c-526">Displays the year number (0-9) without leading zeros.</span></span> <span data-ttu-id="01e6c-527">Usare `%y` se questo è l'unico carattere nel formato numerico definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-527">Use `%y` if this is the only character in your user-defined numeric format.</span></span>|  
|`yy`|<span data-ttu-id="01e6c-528">Visualizza l'anno in formato numerico a due cifre con uno zero iniziale, se applicabile.</span><span class="sxs-lookup"><span data-stu-id="01e6c-528">Displays the year in two-digit numeric format with a leading zero, if applicable.</span></span>|  
|`yyy`|<span data-ttu-id="01e6c-529">Visualizza l'anno nel formato numerico a quattro cifre.</span><span class="sxs-lookup"><span data-stu-id="01e6c-529">Displays the year in four-digit numeric format.</span></span>|  
|`yyyy`|<span data-ttu-id="01e6c-530">Visualizza l'anno nel formato numerico a quattro cifre.</span><span class="sxs-lookup"><span data-stu-id="01e6c-530">Displays the year in four-digit numeric format.</span></span>|  
|`z`|<span data-ttu-id="01e6c-531">Visualizza la differenza di fuso orario senza zero iniziale (ad esempio, `-8`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-531">Displays the timezone offset without a leading zero (for example, `-8`).</span></span> <span data-ttu-id="01e6c-532">Usare `%z` se questo è l'unico carattere nel formato numerico definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-532">Use `%z` if this is the only character in your user-defined numeric format.</span></span>|  
|`zz`|<span data-ttu-id="01e6c-533">Visualizza la differenza di fuso orario con uno zero iniziale (ad esempio, `-08`)</span><span class="sxs-lookup"><span data-stu-id="01e6c-533">Displays the timezone offset with a leading zero (for example, `-08`)</span></span>|  
|`zzz`|<span data-ttu-id="01e6c-534">Consente di visualizzare la differenza di fuso orario completa (ad esempio, `-08:00`)</span><span class="sxs-lookup"><span data-stu-id="01e6c-534">Displays the full timezone offset (for example, `-08:00`)</span></span>|  
  
### <a name="legacy-code-example"></a><span data-ttu-id="01e6c-535">Esempio di codice precedente</span><span class="sxs-lookup"><span data-stu-id="01e6c-535">Legacy Code Example</span></span>  
 <span data-ttu-id="01e6c-536">Di seguito sono riportati esempi di data definito dall'utente e formati di ora per `December 7, 1958, 8:50 PM, 35 seconds`:</span><span class="sxs-lookup"><span data-stu-id="01e6c-536">The following are examples of user-defined date and time formats for `December 7, 1958, 8:50 PM, 35 seconds`:</span></span>  
  
|<span data-ttu-id="01e6c-537">Formato</span><span class="sxs-lookup"><span data-stu-id="01e6c-537">Format</span></span>|<span data-ttu-id="01e6c-538">Visualizza</span><span class="sxs-lookup"><span data-stu-id="01e6c-538">Displays</span></span>|  
|-|-|  
|`M/d/yy`|`12/7/58`|  
|`d-MMM`|`7-Dec`|  
|`d-MMMM-yy`|`7-December-58`|  
|`d MMMM`|`7 December`|  
|`MMMM yy`|`December 58`|  
|`hh:mm tt`|`08:50 PM`|  
|`h:mm:ss t`|`8:50:35 P`|  
|`H:mm`|`20:50`|  
|`H:mm:ss`|`20:50:35`|  
|`M/d/yyyy H:mm`|`12/7/1958 20:50`|  
  
### <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-539">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-539">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-540">La risoluzione di tempo minimo per un dispositivo viene determinata dal produttore del dispositivo.</span><span class="sxs-lookup"><span data-stu-id="01e6c-540">The minimum time resolution for a device is determined by the manufacturer of the device.</span></span> <span data-ttu-id="01e6c-541">Se il tempo di risoluzione per il dispositivo non è sufficientemente, precisa di `f` formato carattere restituisce 0 quando viene eseguito sul dispositivo.</span><span class="sxs-lookup"><span data-stu-id="01e6c-541">If the time resolution for the device is coarse enough, the `f` format character returns 0 when run on that device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-542">In questo esempio sono presentati vari utilizzi della funzione `Format` per formattare valori mediante formati sia di tipo `String` che definiti dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-542">This example shows various uses of the `Format` function to format values using both `String` formats and user-defined formats.</span></span> <span data-ttu-id="01e6c-543">Per quanto riguarda il separatore della data (`/`), dell'ora (`:`) e gli indicatori AM/PM (`t` e `tt`), l'output formattato visualizzato dal sistema dipende dalle impostazioni locali utilizzate per il codice.</span><span class="sxs-lookup"><span data-stu-id="01e6c-543">For the date separator (`/`), time separator (`:`), and the AM/PM indicators (`t` and `tt`), the actual formatted output displayed by your system depends on the locale settings the code is using.</span></span> <span data-ttu-id="01e6c-544">Nell'ambiente di sviluppo la data e l'ora vengono visualizzate nel formato breve delle impostazioni locali.</span><span class="sxs-lookup"><span data-stu-id="01e6c-544">When times and dates are displayed in the development environment, the short time format and short date format of the code locale are used.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-545">Per le impostazioni locali che utilizzano il formato 24 ore, gli indicatori AM/PM (`t` e `tt`) non visualizzano alcun output.</span><span class="sxs-lookup"><span data-stu-id="01e6c-545">For locales that use a 24-hour clock, the AM/PM indicators (`t` and `tt`) display nothing.</span></span>  
  
 [!code-vb[VbVbalrStrings#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-546">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-546">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FormatCurrency">
      <MemberSignature Language="C#" Value="public static string FormatCurrency (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatCurrency(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatCurrency (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatCurrency : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatCurrency (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-547">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-547">Required.</span>
          </span>
          <span data-ttu-id="01e6c-548">Espressione da formattare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-548">Expression to be formatted.</span>
          </span>
        </param>
        <param name="NumDigitsAfterDecimal">
          <span data-ttu-id="01e6c-549">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-549">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-550">Valore numerico che indica quante cifre vengono visualizzate a destra del segno decimale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-550">Numeric value indicating how many places are displayed to the right of the decimal.</span>
          </span>
          <span data-ttu-id="01e6c-551">Il valore predefinito è –1, che indica che vengono utilizzate le impostazioni internazionali del computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-551">Default value is –1, which indicates that the computer's regional settings are used.</span>
          </span>
        </param>
        <param name="IncludeLeadingDigit">
          <span data-ttu-id="01e6c-552">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-552">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-553">Enumerazione <see cref="T:Microsoft.VisualBasic.TriState" /> che indica se visualizzare o meno uno zero iniziale per i valori frazionari.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-553">
              <see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not a leading zero is displayed for fractional values.</span>
          </span>
          <span data-ttu-id="01e6c-554">Per informazioni sui valori, vedere la sezione "Osservazioni".</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-554">See "Remarks" for values.</span>
          </span>
        </param>
        <param name="UseParensForNegativeNumbers">
          <span data-ttu-id="01e6c-555">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-555">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-556">Enumerazione <see cref="T:Microsoft.VisualBasic.TriState" /> che indica se racchiudere i valori negativi tra parentesi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-556">
              <see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not to place negative values within parentheses.</span>
          </span>
          <span data-ttu-id="01e6c-557">Per informazioni sui valori, vedere la sezione "Osservazioni".</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-557">See "Remarks" for values.</span>
          </span>
        </param>
        <param name="GroupDigits">
          <span data-ttu-id="01e6c-558">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-558">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-559">Enumerazione <see cref="T:Microsoft.VisualBasic.TriState" /> che indica se raggruppare i numeri utilizzando il delimitatore di gruppo specificato nelle impostazioni internazionali del computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-559">
              <see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings.</span>
          </span>
          <span data-ttu-id="01e6c-560">Per informazioni sui valori, vedere la sezione "Osservazioni".</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-560">See "Remarks" for values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-561">Restituisce un'espressione nel formato valore di valuta utilizzando il simbolo di valuta impostato nel Pannello di controllo del sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-561">Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-562">Restituisce un'espressione nel formato valore di valuta utilizzando il simbolo di valuta impostato nel Pannello di controllo del sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-562">Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-563">Quando uno o più argomenti facoltativi vengono omessi, vengono utilizzati corrispondenti valori delle impostazioni internazionali del computer.</span><span class="sxs-lookup"><span data-stu-id="01e6c-563">When one or more optional arguments are omitted, the computer's matching regional-settings values are used instead.</span></span>  
  
 <span data-ttu-id="01e6c-564">La posizione del simbolo di valuta rispetto al valore di valuta viene determinata dalle impostazioni internazionali del sistema.</span><span class="sxs-lookup"><span data-stu-id="01e6c-564">The position of the currency symbol relative to the currency value is determined by the system's regional settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-565">Tutte le informazioni delle impostazioni provengono dalle impostazioni locali dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-565">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="01e6c-566">Per impostazione predefinita, che saranno le impostazioni locali configurate nel Pannello di controllo.</span><span class="sxs-lookup"><span data-stu-id="01e6c-566">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="01e6c-567">Tuttavia, può essere modificato a livello di programmazione usando .NET Framework, tranne zero iniziale, che deriva dal `Number` scheda.</span><span class="sxs-lookup"><span data-stu-id="01e6c-567">However, it may be changed programmatically by using the .NET Framework, except leading zero, which comes from the `Number` tab.</span></span>  
  
 <span data-ttu-id="01e6c-568">Il `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, e `GroupDigits` accettano i valori di enumerazione a tre stati seguenti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-568">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments take the following TriState enumeration values.</span></span>  
  
|<span data-ttu-id="01e6c-569">Valore</span><span class="sxs-lookup"><span data-stu-id="01e6c-569">Value</span></span>|<span data-ttu-id="01e6c-570">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-570">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="01e6c-571">True</span><span class="sxs-lookup"><span data-stu-id="01e6c-571">True</span></span>|  
|`TriState.False`|<span data-ttu-id="01e6c-572">False</span><span class="sxs-lookup"><span data-stu-id="01e6c-572">False</span></span>|  
|`TriState.UseDefault`|<span data-ttu-id="01e6c-573">Impostazioni internazionali del computer</span><span class="sxs-lookup"><span data-stu-id="01e6c-573">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-574">L'esempio seguente illustra l'uso della funzione `FormatCurrency`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-574">The following example illustrates the use of the `FormatCurrency` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-575">Il numero di cifre dopo il separatore decimale è maggiore di 99.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-575">Number of digits after decimal point is greater than 99.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="01e6c-576">Tipo non numerico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-576">Type is not numeric.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.InvalidCastException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-577">Modifica di stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-577">String Manipulation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FormatDateTime">
      <MemberSignature Language="C#" Value="public static string FormatDateTime (DateTime Expression, Microsoft.VisualBasic.DateFormat NamedFormat = Microsoft.VisualBasic.DateFormat.GeneralDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatDateTime(valuetype System.DateTime Expression, valuetype Microsoft.VisualBasic.DateFormat NamedFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatDateTime (Expression As DateTime, Optional NamedFormat As DateFormat = Microsoft.VisualBasic.DateFormat.GeneralDate) As String" />
      <MemberSignature Language="F#" Value="static member FormatDateTime : DateTime * Microsoft.VisualBasic.DateFormat -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatDateTime (Expression, NamedFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.DateTime" />
        <Parameter Name="NamedFormat" Type="Microsoft.VisualBasic.DateFormat" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-578">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-578">Required.</span>
          </span>
          <span data-ttu-id="01e6c-579">Espressione <see langword="Date" /> da formattare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-579">
              <see langword="Date" /> expression to be formatted.</span>
          </span>
        </param>
        <param name="NamedFormat">
          <span data-ttu-id="01e6c-580">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-580">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-581">Valore numerico che indica il formato di data e ora utilizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-581">Numeric value that indicates the date/time format used.</span>
          </span>
          <span data-ttu-id="01e6c-582">Se omesso, viene utilizzato <see langword="DateFormat.GeneralDate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-582">If omitted, <see langword="DateFormat.GeneralDate" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-583">Restituisce un'espressione stringa che rappresenta un valore data/ora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-583">Returns a string expression representing a date/time value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-584">Restituisce un'espressione stringa che rappresenta un valore data/ora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-584">Returns a string expression representing a date/time value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-585">Il `Date` tipo di dati contiene sempre le informazioni sia data e ora.</span><span class="sxs-lookup"><span data-stu-id="01e6c-585">The `Date` data type always contains both date and time information.</span></span> <span data-ttu-id="01e6c-586">Ai fini di conversione del tipo, Visual Basic considera come 1/1/1 (1 ° gennaio dell'anno 1) da un valore neutro per la data e 00:00:00 (mezzanotte) su un valore neutro per il periodo di tempo.</span><span class="sxs-lookup"><span data-stu-id="01e6c-586">For purposes of type conversion, Visual Basic considers 1/1/1 (January 1 of the year 1) to be a neutral value for the date, and 00:00:00 (midnight) to be a neutral value for the time.</span></span> <span data-ttu-id="01e6c-587">Se si formatta un `Date` valore come stringa data/ora, `FormatDateTime` non include valori neutri nella stringa risultante.</span><span class="sxs-lookup"><span data-stu-id="01e6c-587">If you format a `Date` value as a date/time string, `FormatDateTime` does not include neutral values in the resulting string.</span></span> <span data-ttu-id="01e6c-588">Ad esempio, se si converte & 1/1/0001 30: ore 9.00 & in una stringa, il risultato è "30: 9.00"; le informazioni sulla data viene eliminate.</span><span class="sxs-lookup"><span data-stu-id="01e6c-588">For example, if you convert #1/1/0001 9:30:00# to a string, the result is "9:30:00 AM"; the date information is suppressed.</span></span> <span data-ttu-id="01e6c-589">Tuttavia, le informazioni sulla data è ancora presente nell'originale `Date` valore e possono essere recuperate con le funzioni, ad esempio `DatePart`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-589">However, the date information is still present in the original `Date` value and can be recovered with functions such as `DatePart`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-590">Se si passa il `Expression` argomento come un `String` letterale, `FormatDateTime` interpreta in base al <xref:System.Globalization.CultureInfo.CurrentCulture%2A> impostazione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-590">If you pass the `Expression` argument as a `String` literal, `FormatDateTime` interprets it according to the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> setting of your application.</span></span> <span data-ttu-id="01e6c-591">Tuttavia, se viene passato come un `Date` letterale, usare # formato mm/gg/aaaa #, perché `FormatDateTime` sempre interpreta un `Date` letterale secondo la cultura inglese (Stati Uniti).</span><span class="sxs-lookup"><span data-stu-id="01e6c-591">However, if you pass it as a `Date` literal, use the format #mm/dd/yyyy#, because `FormatDateTime` always interprets a `Date` literal according to the English (US) culture.</span></span> <span data-ttu-id="01e6c-592">Questa operazione è necessaria perché, se un'applicazione viene sviluppata e codificati utilizzando `Date` valori letterali da una delle impostazioni cultura, ma viene quindi eseguita su una piattaforma con una lingua diversa, il `Date` valori letterali è stato possibile analizzare in modo non corretto.</span><span class="sxs-lookup"><span data-stu-id="01e6c-592">This is necessary because, if an application is developed and coded using `Date` literals from one culture, but is then executed on a platform with a different culture, the `Date` literals could be parsed incorrectly.</span></span>  
  
 <span data-ttu-id="01e6c-593">Il `NamedFormat` argomento presenta le impostazioni seguenti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-593">The `NamedFormat` argument has the following settings.</span></span>  
  
|<span data-ttu-id="01e6c-594">Costante</span><span class="sxs-lookup"><span data-stu-id="01e6c-594">Constant</span></span>|<span data-ttu-id="01e6c-595">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-595">Description</span></span>|  
|-|-|  
|`DateFormat.GeneralDate`|<span data-ttu-id="01e6c-596">Visualizzare una data o ora.</span><span class="sxs-lookup"><span data-stu-id="01e6c-596">Display a date and/or time.</span></span> <span data-ttu-id="01e6c-597">Visualizzare una parte della data come data breve.</span><span class="sxs-lookup"><span data-stu-id="01e6c-597">Display a date part as a short date.</span></span> <span data-ttu-id="01e6c-598">Se è presente una parte dell'ora, è possibile visualizzarlo come molto tempo.</span><span class="sxs-lookup"><span data-stu-id="01e6c-598">If there is a time part, display it as a long time.</span></span> <span data-ttu-id="01e6c-599">Se presente, vengono visualizzate entrambe le parti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-599">If present, both parts display.</span></span>|  
|`DateFormat.LongDate`|<span data-ttu-id="01e6c-600">Visualizzare una data utilizzando il formato di data lungo specificato nelle impostazioni internazionali del computer.</span><span class="sxs-lookup"><span data-stu-id="01e6c-600">Display a date using the long date format specified in your computer's regional settings.</span></span>|  
|`DateFormat.ShortDate`|<span data-ttu-id="01e6c-601">Visualizzare una data utilizzando il formato di data breve specificato nelle impostazioni internazionali del computer.</span><span class="sxs-lookup"><span data-stu-id="01e6c-601">Display a date using the short date format specified in your computer's regional settings.</span></span>|  
|`DateFormat.LongTime`|<span data-ttu-id="01e6c-602">Visualizza l'ora utilizzando il formato di ora specificato nelle impostazioni internazionali del computer.</span><span class="sxs-lookup"><span data-stu-id="01e6c-602">Display a time using the time format specified in your computer's regional settings.</span></span>|  
|`DateFormat.ShortTime`|<span data-ttu-id="01e6c-603">Visualizza l'ora utilizzando il formato di 24 ore (hh: mm).</span><span class="sxs-lookup"><span data-stu-id="01e6c-603">Display a time using the 24-hour format (hh:mm).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-604">In questo esempio illustra l'uso della `FormatDateTime` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-604">This example demonstrates the use of the `FormatDateTime` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-605">L'impostazione <paramref name="NamedFormat" /> non è valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-605">
              <paramref name="NamedFormat" /> setting is not valid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-606">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-606">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FormatNumber">
      <MemberSignature Language="C#" Value="public static string FormatNumber (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatNumber(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatNumber (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatNumber : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatNumber (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-607">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-607">Required.</span>
          </span>
          <span data-ttu-id="01e6c-608">Espressione da formattare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-608">Expression to be formatted.</span>
          </span>
        </param>
        <param name="NumDigitsAfterDecimal">
          <span data-ttu-id="01e6c-609">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-609">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-610">Valore numerico che indica quante cifre vengono visualizzate a destra del segno decimale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-610">Numeric value indicating how many places are displayed to the right of the decimal.</span>
          </span>
          <span data-ttu-id="01e6c-611">Il valore predefinito è –1, che indica che vengono utilizzate le impostazioni internazionali del computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-611">The default value is –1, which indicates that the computer's regional settings are used.</span>
          </span>
        </param>
        <param name="IncludeLeadingDigit">
          <span data-ttu-id="01e6c-612">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-612">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-613">Costante <see cref="T:Microsoft.VisualBasic.TriState" /> che indica se visualizzare uno zero iniziale per i valori frazionari.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-613">
              <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether a leading 0 is displayed for fractional values.</span>
          </span>
          <span data-ttu-id="01e6c-614">Per un elenco dei valori possibili, vedere "Impostazioni".</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-614">See "Settings" for values.</span>
          </span>
        </param>
        <param name="UseParensForNegativeNumbers">
          <span data-ttu-id="01e6c-615">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-615">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-616">Costante <see cref="T:Microsoft.VisualBasic.TriState" /> che indica se racchiudere i valori negativi tra parentesi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-616">
              <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether to place negative values within parentheses.</span>
          </span>
          <span data-ttu-id="01e6c-617">Per un elenco dei valori possibili, vedere "Impostazioni".</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-617">See "Settings" for values.</span>
          </span>
        </param>
        <param name="GroupDigits">
          <span data-ttu-id="01e6c-618">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-618">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-619">Costante <see cref="T:Microsoft.VisualBasic.TriState" /> che consente di specificare se raggruppare o meno i numeri usando il carattere di delimitazione di gruppo specificato nelle impostazioni locali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-619">
              <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</span>
          </span>
          <span data-ttu-id="01e6c-620">Per un elenco dei valori possibili, vedere "Impostazioni".</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-620">See "Settings" for values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-621">Restituisce un'espressione in formato di numero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-621">Returns an expression formatted as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-622">Restituisce un'espressione in formato di numero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-622">Returns an expression formatted as a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-623">Quando uno o più argomenti facoltativi vengono omessi dalle impostazioni locali vengono forniti i valori per gli argomenti omessi.</span><span class="sxs-lookup"><span data-stu-id="01e6c-623">When one or more optional arguments are omitted the values for omitted arguments are provided by the locale settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-624">Tutte le informazioni delle impostazioni provengono dalle impostazioni locali dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-624">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="01e6c-625">Per impostazione predefinita, che saranno le impostazioni locali configurate nel Pannello di controllo.</span><span class="sxs-lookup"><span data-stu-id="01e6c-625">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="01e6c-626">Tuttavia, informazioni possono essere modificate a livello di programmazione usando .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="01e6c-626">However, it may be changed programmatically by using the .NET Framework.</span></span>  
  
 <span data-ttu-id="01e6c-627">Il `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, e `GroupDigits` argomenti hanno le seguenti impostazioni.</span><span class="sxs-lookup"><span data-stu-id="01e6c-627">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments have the following settings.</span></span>  
  
|<span data-ttu-id="01e6c-628">Costante</span><span class="sxs-lookup"><span data-stu-id="01e6c-628">Constant</span></span>|<span data-ttu-id="01e6c-629">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-629">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="01e6c-630">True</span><span class="sxs-lookup"><span data-stu-id="01e6c-630">True</span></span>|  
|`TriState.False`|<span data-ttu-id="01e6c-631">False</span><span class="sxs-lookup"><span data-stu-id="01e6c-631">False</span></span>|  
|`TriState.UseDefault`|<span data-ttu-id="01e6c-632">Impostazioni internazionali del computer</span><span class="sxs-lookup"><span data-stu-id="01e6c-632">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-633">Questo esempio viene illustrato il `FormatNumber` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-633">This example demonstrates the `FormatNumber` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="01e6c-634">Tipo non numerico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-634">Type is not numeric.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="T:System.InvalidCastException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-635">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-635">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FormatPercent">
      <MemberSignature Language="C#" Value="public static string FormatPercent (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatPercent(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatPercent (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatPercent : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatPercent (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-636">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-636">Required.</span>
          </span>
          <span data-ttu-id="01e6c-637">Espressione da formattare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-637">Expression to be formatted.</span>
          </span>
        </param>
        <param name="NumDigitsAfterDecimal">
          <span data-ttu-id="01e6c-638">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-638">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-639">Valore numerico che indica il numero di cifre da visualizzare a destra del separatore decimale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-639">Numeric value indicating how many places to the right of the decimal are displayed.</span>
          </span>
          <span data-ttu-id="01e6c-640">Il valore predefinito -1 indica che vengono usate le impostazioni locali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-640">Default value is –1, which indicates that the locale settings are used.</span>
          </span>
        </param>
        <param name="IncludeLeadingDigit">
          <span data-ttu-id="01e6c-641">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-641">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-642">Costante <see cref="T:Microsoft.VisualBasic.TriState" /> che consente di specificare se visualizzare o meno uno zero davanti ai valori frazionari.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-642">
              <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not a leading zero displays for fractional values.</span>
          </span>
          <span data-ttu-id="01e6c-643">Per un elenco dei valori possibili, vedere "Impostazioni".</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-643">See "Settings" for values.</span>
          </span>
        </param>
        <param name="UseParensForNegativeNumbers">
          <span data-ttu-id="01e6c-644">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-644">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-645">Costante <see cref="T:Microsoft.VisualBasic.TriState" /> che consente di specificare se racchiudere o meno i valori negativi tra parentesi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-645">
              <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not to place negative values within parentheses.</span>
          </span>
          <span data-ttu-id="01e6c-646">Per un elenco dei valori possibili, vedere "Impostazioni".</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-646">See "Settings" for values.</span>
          </span>
        </param>
        <param name="GroupDigits">
          <span data-ttu-id="01e6c-647">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-647">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-648">Costante <see cref="T:Microsoft.VisualBasic.TriState" /> che consente di specificare se raggruppare o meno i numeri usando il carattere di delimitazione di gruppo specificato nelle impostazioni locali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-648">
              <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</span>
          </span>
          <span data-ttu-id="01e6c-649">Per un elenco dei valori possibili, vedere "Impostazioni".</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-649">See "Settings" for values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-650">Restituisce un'espressione formattata come percentuale (ovvero moltiplicata per 100) con un carattere % finale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-650">Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-651">Restituisce un'espressione formattata come percentuale (ovvero moltiplicata per 100) con un carattere % finale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-651">Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-652">Quando uno o più argomenti facoltativi vengono omessi, le impostazioni locali vengono forniti i valori per gli argomenti omessi.</span><span class="sxs-lookup"><span data-stu-id="01e6c-652">When one or more optional arguments are omitted, the values for omitted arguments are provided by the locale settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-653">Tutte le informazioni delle impostazioni provengono dalle impostazioni locali dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-653">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="01e6c-654">Per impostazione predefinita, che saranno le impostazioni locali configurate nel Pannello di controllo.</span><span class="sxs-lookup"><span data-stu-id="01e6c-654">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="01e6c-655">Tuttavia, informazioni possono essere modificate a livello di programmazione usando .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="01e6c-655">However, it may be changed programmatically by using the .NET Framework.</span></span>  
  
 <span data-ttu-id="01e6c-656">Il `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, e `GroupDigits` argomenti hanno le seguenti impostazioni.</span><span class="sxs-lookup"><span data-stu-id="01e6c-656">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments have the following settings.</span></span>  
  
|<span data-ttu-id="01e6c-657">Costante</span><span class="sxs-lookup"><span data-stu-id="01e6c-657">Constant</span></span>|<span data-ttu-id="01e6c-658">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-658">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="01e6c-659">True</span><span class="sxs-lookup"><span data-stu-id="01e6c-659">True</span></span>|  
|`TriState.False`|<span data-ttu-id="01e6c-660">False</span><span class="sxs-lookup"><span data-stu-id="01e6c-660">False</span></span>|  
|`TriState.Default`|<span data-ttu-id="01e6c-661">Impostazioni internazionali del computer</span><span class="sxs-lookup"><span data-stu-id="01e6c-661">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-662">In questo esempio viene illustrato l'utilizzo del `FormatPercent` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-662">This example illustrates the use of the `FormatPercent` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="01e6c-663">Tipo non numerico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-663">Type is not numeric.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="T:System.InvalidCastException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-664">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-664">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public static char GetChar (string str, int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public static char GetChar(string str, int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChar (str As String, Index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char GetChar(System::String ^ str, int Index);" />
      <MemberSignature Language="F#" Value="static member GetChar : string * int -&gt; char" Usage="Microsoft.VisualBasic.Strings.GetChar (str, Index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="01e6c-665">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-665">Required.</span>
          </span>
          <span data-ttu-id="01e6c-666">Qualsiasi espressione <see langword="String" /> valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-666">Any valid <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Index">
          <span data-ttu-id="01e6c-667">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-667">Required.</span>
          </span>
          <span data-ttu-id="01e6c-668">Espressione <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-668">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-669">L'indice (in base 1) del carattere di <paramref name="str" /> da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-669">The (1-based) index of the character in <paramref name="str" /> to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-670">Restituisce un valore <see langword="Char" /> che rappresenta il carattere dell'indice specificato nella stringa fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-670">Returns a <see langword="Char" /> value representing the character from the specified index in the supplied string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-671">Valore <see langword="Char" /> che rappresenta il carattere dell'indice specificato nella stringa fornita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-671">
              <see langword="Char" /> value representing the character from the specified index in the supplied string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-672">Se `Index` è minore di 1 o maggiore dell'indice dell'ultimo carattere in `str`, un `ArgumentException` viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-672">If `Index` is less than 1 or greater than the index of the last character in `str`, an `ArgumentException` is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-673">Questo esempio illustra come usare il `GetChar` funzione per restituire un carattere da un indice specificato in un `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-673">This example shows how to use the `GetChar` function to return a character from a specified index in a `String`.</span></span>  
  
 [!code-vb[VbVbalrStrings#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-674">
            <paramref name="str" /> è <see langword="Nothing" />, <paramref name="Index" /> &lt; 1 o <paramref name="Index" /> è maggiore dell'indice dell'ultimo carattere di <paramref name="str" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-674">
              <paramref name="str" /> is <see langword="Nothing" />, <paramref name="Index" /> &lt; 1, or <paramref name="Index" /> is greater than index of last character of <paramref name="str" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-675">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-675">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="InStr">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01e6c-676">Restituisce un Integer che specifica la posizione di inizio della prima occorrenza di una stringa in un'altra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-676">Returns an integer specifying the start position of the first occurrence of one string within another.</span>
          </span>
          <span data-ttu-id="01e6c-677">Il numero intero è un indice a base uno se viene individuata una corrispondenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-677">The integer is a one-based index if a match is found.</span>
          </span>
          <span data-ttu-id="01e6c-678">Se non viene rilevata alcuna corrispondenza, la funzione restituisce zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-678">If no match is found, the function returns zero.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InStr">
      <MemberSignature Language="C#" Value="public static int InStr (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStr(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStr (String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member InStr : string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStr (String1, String2, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String1" Type="System.String" />
        <Parameter Name="String2" Type="System.String" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="String1">
          <span data-ttu-id="01e6c-679">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-679">Required.</span>
          </span>
          <span data-ttu-id="01e6c-680">Espressione <see langword="String" /> in cui cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-680">
              <see langword="String" /> expression being searched.</span>
          </span>
        </param>
        <param name="String2">
          <span data-ttu-id="01e6c-681">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-681">Required.</span>
          </span>
          <span data-ttu-id="01e6c-682">Espressione <see langword="String" /> cercata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-682">
              <see langword="String" /> expression sought.</span>
          </span>
        </param>
        <param name="Compare">
          <span data-ttu-id="01e6c-683">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-683">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-684">Specifica il tipo di confronto delle stringhe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-684">Specifies the type of string comparison.</span>
          </span>
          <span data-ttu-id="01e6c-685">Se <paramref name="Compare" /> viene omesso, il tipo di confronto viene determinato dall'impostazione di <see langword="Option Compare" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-685">If <paramref name="Compare" /> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-686">Restituisce un Integer che specifica la posizione di inizio della prima occorrenza di una stringa in un'altra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-686">Returns an integer specifying the start position of the first occurrence of one string within another.</span>
          </span>
        </summary>
        <returns>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="01e6c-687">Se</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-687">If</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-688">InStr restituirà</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-688">InStr returns</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-689">
                  <paramref name="String1" /> è di lunghezza zero o <see langword="Nothing" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-689">
                    <paramref name="String1" /> is zero length or <see langword="Nothing" /></span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-690">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-690">0</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-691">
                  <paramref name="String2" /> è di lunghezza zero o <see langword="Nothing" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-691">
                    <paramref name="String2" /> is zero length or <see langword="Nothing" /></span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-692">Posizione iniziale per la ricerca, che viene impostata come predefinita in corrispondenza del primo carattere.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-692">The starting position for the search, which defaults to the first character position.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-693">
                  <paramref name="String2" /> non trovato.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-693">
                    <paramref name="String2" /> is not found</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-694">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-694">0</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-695">
                  <paramref name="String2" /> si trova all'interno di <paramref name="String1" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-695">
                    <paramref name="String2" /> is found within <paramref name="String1" /></span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-696">La posizione di inizio della corrispondenza</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-696">Position where match begins</span>
                </span>
              </description>
            </item>
            <item>
              <term></term>
              <description></description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-697">In genere, il `InStr` funzione viene utilizzata durante l'analisi di stringhe.</span><span class="sxs-lookup"><span data-stu-id="01e6c-697">Typically, the `InStr` function is used when parsing strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-698">Il `InStrB` funzione nelle versioni precedenti di Visual Basic restituisce un numero di byte anziché in una posizione del carattere.</span><span class="sxs-lookup"><span data-stu-id="01e6c-698">The `InStrB` function in previous versions of Visual Basic returns a number of bytes rather than a character position.</span></span> <span data-ttu-id="01e6c-699">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-699">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-700">Tutte le stringhe di Visual Basic 2005 sono in formato Unicode, e `InStrB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-700">All Visual Basic 2005 strings are in Unicode, and `InStrB` is no longer supported.</span></span>  
  
 <span data-ttu-id="01e6c-701">Le impostazioni dell'argomento `Compare` sono le seguenti:</span><span class="sxs-lookup"><span data-stu-id="01e6c-701">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="01e6c-702">Costante</span><span class="sxs-lookup"><span data-stu-id="01e6c-702">Constant</span></span>|<span data-ttu-id="01e6c-703">Valore</span><span class="sxs-lookup"><span data-stu-id="01e6c-703">Value</span></span>|<span data-ttu-id="01e6c-704">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-704">Description</span></span>|  
|-|-|-|  
|`Binary`|<span data-ttu-id="01e6c-705">0</span><span class="sxs-lookup"><span data-stu-id="01e6c-705">0</span></span>|<span data-ttu-id="01e6c-706">Esegue un confronto binario</span><span class="sxs-lookup"><span data-stu-id="01e6c-706">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="01e6c-707">1</span><span class="sxs-lookup"><span data-stu-id="01e6c-707">1</span></span>|<span data-ttu-id="01e6c-708">Esegue un confronto di testo</span><span class="sxs-lookup"><span data-stu-id="01e6c-708">Performs a text comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-709">Nell'esempio riportato di seguito la funzione `InStr` viene utilizzata per restituire la posizione della prima occorrenza di una stringa in un'altra:</span><span class="sxs-lookup"><span data-stu-id="01e6c-709">This example uses the `InStr` function to return the position of the first occurrence of one string within another.</span></span>  
  
 [!code-vb[VbVbalrStrings#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md">
          <span data-ttu-id="01e6c-710">Stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-710">Strings in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md">
          <span data-ttu-id="01e6c-711">Introduzione alle stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-711">Introduction to Strings in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/option-compare-statement.md">
          <span data-ttu-id="01e6c-712">Istruzione Option Compare</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-712">Option Compare Statement</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="InStr">
      <MemberSignature Language="C#" Value="public static int InStr (int Start, string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStr(int32 Start, string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStr (Start As Integer, String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member InStr : int * string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStr (Start, String1, String2, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="String1" Type="System.String" />
        <Parameter Name="String2" Type="System.String" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Start">
          <span data-ttu-id="01e6c-713">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-713">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-714">Espressione numerica che imposta la posizione iniziale di ogni ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-714">Numeric expression that sets the starting position for each search.</span>
          </span>
          <span data-ttu-id="01e6c-715">Se omesso, la ricerca inizia a partire dalla posizione del primo carattere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-715">If omitted, search begins at the first character position.</span>
          </span>
          <span data-ttu-id="01e6c-716">L'indice è in base 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-716">The start index is 1-based.</span>
          </span>
        </param>
        <param name="String1">
          <span data-ttu-id="01e6c-717">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-717">Required.</span>
          </span>
          <span data-ttu-id="01e6c-718">Espressione <see langword="String" /> in cui cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-718">
              <see langword="String" /> expression being searched.</span>
          </span>
        </param>
        <param name="String2">
          <span data-ttu-id="01e6c-719">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-719">Required.</span>
          </span>
          <span data-ttu-id="01e6c-720">Espressione <see langword="String" /> cercata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-720">
              <see langword="String" /> expression sought.</span>
          </span>
        </param>
        <param name="Compare">
          <span data-ttu-id="01e6c-721">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-721">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-722">Specifica il tipo di confronto delle stringhe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-722">Specifies the type of string comparison.</span>
          </span>
          <span data-ttu-id="01e6c-723">Se <paramref name="Compare" /> viene omesso, il tipo di confronto viene determinato dall'impostazione di <see langword="Option Compare" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-723">If <paramref name="Compare" /> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-724">Restituisce un Integer che specifica la posizione di inizio della prima occorrenza di una stringa in un'altra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-724">Returns an integer specifying the start position of the first occurrence of one string within another.</span>
          </span>
        </summary>
        <returns>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="01e6c-725">Se</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-725">If</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-726">InStr restituirà</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-726">InStr returns</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-727">
                  <paramref name="String1" /> è di lunghezza zero o <see langword="Nothing" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-727">
                    <paramref name="String1" /> is zero length or <see langword="Nothing" /></span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-728">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-728">0</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-729">
                  <paramref name="String2" /> è di lunghezza zero o <see langword="Nothing" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-729">
                    <paramref name="String2" /> is zero length or <see langword="Nothing" /></span>
                </span>
              </term>
              <description>
                <paramref name="start" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-730">
                  <paramref name="String2" /> non trovato.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-730">
                    <paramref name="String2" /> is not found</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-731">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-731">0</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-732">
                  <paramref name="String2" /> si trova all'interno di <paramref name="String1" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-732">
                    <paramref name="String2" /> is found within <paramref name="String1" /></span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-733">La posizione di inizio della corrispondenza</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-733">Position where match begins</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-734">
                  <paramref name="Start" /> &gt; lunghezza di <paramref name="String1" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-734">
                    <paramref name="Start" /> &gt; length of <paramref name="String1" /></span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-735">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-735">0</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-736">In genere, il `InStr` funzione viene utilizzata durante l'analisi di stringhe.</span><span class="sxs-lookup"><span data-stu-id="01e6c-736">Typically, the `InStr` function is used when parsing strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-737">Il `InStrB` funzione nelle versioni precedenti di Visual Basic restituisce un numero di byte anziché in una posizione del carattere.</span><span class="sxs-lookup"><span data-stu-id="01e6c-737">The `InStrB` function in previous versions of Visual Basic returns a number of bytes rather than a character position.</span></span> <span data-ttu-id="01e6c-738">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-738">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-739">Tutte le stringhe di Visual Basic 2005 sono in formato Unicode, e `InStrB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-739">All Visual Basic 2005 strings are in Unicode, and `InStrB` is no longer supported.</span></span>  
  
 <span data-ttu-id="01e6c-740">Le impostazioni dell'argomento `Compare` sono le seguenti:</span><span class="sxs-lookup"><span data-stu-id="01e6c-740">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="01e6c-741">Costante</span><span class="sxs-lookup"><span data-stu-id="01e6c-741">Constant</span></span>|<span data-ttu-id="01e6c-742">Valore</span><span class="sxs-lookup"><span data-stu-id="01e6c-742">Value</span></span>|<span data-ttu-id="01e6c-743">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-743">Description</span></span>|  
|-|-|-|  
|`Binary`|<span data-ttu-id="01e6c-744">0</span><span class="sxs-lookup"><span data-stu-id="01e6c-744">0</span></span>|<span data-ttu-id="01e6c-745">Esegue un confronto binario</span><span class="sxs-lookup"><span data-stu-id="01e6c-745">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="01e6c-746">1</span><span class="sxs-lookup"><span data-stu-id="01e6c-746">1</span></span>|<span data-ttu-id="01e6c-747">Esegue un confronto di testo</span><span class="sxs-lookup"><span data-stu-id="01e6c-747">Performs a text comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-748">Nell'esempio riportato di seguito la funzione `InStr` viene utilizzata per restituire la posizione della prima occorrenza di una stringa in un'altra:</span><span class="sxs-lookup"><span data-stu-id="01e6c-748">This example uses the `InStr` function to return the position of the first occurrence of one string within another.</span></span>  
  
 [!code-vb[VbVbalrStrings#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-749">
            <paramref name="Start" /> &lt; 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-749">
              <paramref name="Start" /> &lt; 1.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md">
          <span data-ttu-id="01e6c-750">Stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-750">Strings in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md">
          <span data-ttu-id="01e6c-751">Introduzione alle stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-751">Introduction to Strings in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/option-compare-statement.md">
          <span data-ttu-id="01e6c-752">Istruzione Option Compare</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-752">Option Compare Statement</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="InStrRev">
      <MemberSignature Language="C#" Value="public static int InStrRev (string StringCheck, string StringMatch, int Start = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStrRev(string StringCheck, string StringMatch, int32 Start, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStrRev (StringCheck As String, StringMatch As String, Optional Start As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member InStrRev : string * string * int * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStrRev (StringCheck, StringMatch, Start, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringCheck" Type="System.String" />
        <Parameter Name="StringMatch" Type="System.String" />
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="StringCheck">
          <span data-ttu-id="01e6c-753">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-753">Required.</span>
          </span>
          <span data-ttu-id="01e6c-754">Espressione String da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-754">String expression being searched.</span>
          </span>
        </param>
        <param name="StringMatch">
          <span data-ttu-id="01e6c-755">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-755">Required.</span>
          </span>
          <span data-ttu-id="01e6c-756">Espressione String da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-756">String expression being searched for.</span>
          </span>
        </param>
        <param name="Start">
          <span data-ttu-id="01e6c-757">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-757">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-758">Espressione numerica che imposta la posizione iniziale in base 1 di ogni ricerca, a partire dal lato sinistro della stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-758">Numeric expression setting the one-based starting position for each search, starting from the left side of the string.</span>
          </span>
          <span data-ttu-id="01e6c-759">Se <paramref name="Start" /> viene omesso, viene utilizzato –1, a indicare che la ricerca inizia dalla posizione dell'ultimo carattere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-759">If <paramref name="Start" /> is omitted then –1 is used, meaning the search begins at the last character position.</span>
          </span>
          <span data-ttu-id="01e6c-760">La ricerca procede quindi da destra a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-760">Search then proceeds from right to left.</span>
          </span>
        </param>
        <param name="Compare">
          <span data-ttu-id="01e6c-761">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-761">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-762">Valore numerico che indica il tipo di confronto da utilizzare per la valutazione delle sottostringhe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-762">Numeric value indicating the kind of comparison to use when evaluating substrings.</span>
          </span>
          <span data-ttu-id="01e6c-763">Se omesso, viene eseguito un confronto binario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-763">If omitted, a binary comparison is performed.</span>
          </span>
          <span data-ttu-id="01e6c-764">Per informazioni sui valori, vedere "Impostazioni".</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-764">See Settings for values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-765">Restituisce la posizione della prima occorrenza di una stringa inclusa in un'altra a partire dalla destra della stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-765">Returns the position of the first occurrence of one string within another, starting from the right side of the string.</span>
          </span>
        </summary>
        <returns>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="01e6c-766">Se</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-766">If</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-767">InStrRev restituirà</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-767">InStrRev returns</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-768">
                  <paramref name="StringCheck" /> è di lunghezza zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-768">
                    <paramref name="StringCheck" /> is zero-length</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-769">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-769">0</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-770">
                  <paramref name="StringMatch" /> è di lunghezza zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-770">
                    <paramref name="StringMatch" /> is zero-length</span>
                </span>
              </term>
              <description>
                <paramref name="Start" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-771">
                  <paramref name="StringMatch" /> non trovato.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-771">
                    <paramref name="StringMatch" /> is not found</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-772">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-772">0</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-773">
                  <paramref name="StringMatch" /> si trova all'interno di <paramref name="StringCheck" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-773">
                    <paramref name="StringMatch" /> is found within <paramref name="StringCheck" /></span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-774">La posizione della prima corrispondenza, iniziando dalla destra della stringa.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-774">Position at which the first match is found, starting with the right side of the string.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-775">
                  <paramref name="Start" /> è maggiore della lunghezza di <paramref name="StringMatch" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-775">
                    <paramref name="Start" /> is greater than length of <paramref name="StringMatch" /></span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-776">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-776">0</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-777">Si noti che la sintassi per la `InStrRev` funzione non è uguale alla sintassi per il `InStr` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-777">Note that the syntax for the `InStrRev` function is not the same as the syntax for the `InStr` function.</span></span>  
  
 <span data-ttu-id="01e6c-778">Il `Compare` argomento può avere i valori seguenti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-778">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="01e6c-779">Costante</span><span class="sxs-lookup"><span data-stu-id="01e6c-779">Constant</span></span>|<span data-ttu-id="01e6c-780">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-780">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="01e6c-781">Esegue un confronto binario.</span><span class="sxs-lookup"><span data-stu-id="01e6c-781">Performs a binary comparison.</span></span>|  
|`Text`|<span data-ttu-id="01e6c-782">Esegue un confronto di testo.</span><span class="sxs-lookup"><span data-stu-id="01e6c-782">Performs a textual comparison.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-783">In questo esempio illustra l'uso della `InStrRev` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-783">This example demonstrates the use of the `InStrRev` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-784">
            <paramref name="Start" /> = 0 o <paramref name="Start" /> &lt; -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-784">
              <paramref name="Start" /> = 0 or <paramref name="Start" /> &lt; -1.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.InStr" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md">
          <span data-ttu-id="01e6c-785">Stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-785">Strings in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md">
          <span data-ttu-id="01e6c-786">Introduzione alle stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-786">Introduction to Strings in Visual Basic</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Join">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01e6c-787">Restituisce una stringa creata unendo un certo numero di sottostringhe di una matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-787">Returns a string created by joining a number of substrings contained in an array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (object[] SourceArray, string Delimiter = &quot; &quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Join(object[] SourceArray, string Delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (SourceArray As Object(), Optional Delimiter As String = &quot; &quot;) As String" />
      <MemberSignature Language="F#" Value="static member Join : obj[] * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Join (SourceArray, Delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.Object[]" />
        <Parameter Name="Delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="SourceArray">
          <span data-ttu-id="01e6c-788">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-788">Required.</span>
          </span>
          <span data-ttu-id="01e6c-789">Matrice unidimensionale di sottostringhe da unire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-789">One-dimensional array containing substrings to be joined.</span>
          </span>
        </param>
        <param name="Delimiter">
          <span data-ttu-id="01e6c-790">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-790">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-791">Qualsiasi stringa, utilizzata per separare le sottostringhe nella stringa restituita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-791">Any string, used to separate the substrings in the returned string.</span>
          </span>
          <span data-ttu-id="01e6c-792">Se omesso, viene utilizzato il carattere spazio (" ").</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-792">If omitted, the space character (" ") is used.</span>
          </span>
          <span data-ttu-id="01e6c-793">Se <paramref name="Delimiter" /> è una stringa di lunghezza zero ("") o <see langword="Nothing" />, tutti gli elementi dell'elenco vengono concatenati senza delimitatori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-793">If <paramref name="Delimiter" /> is a zero-length string ("") or <see langword="Nothing" />, all items in the list are concatenated with no delimiters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-794">Restituisce una stringa creata unendo un certo numero di sottostringhe di una matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-794">Returns a string created by joining a number of substrings contained in an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-795">Restituisce una stringa creata unendo un certo numero di sottostringhe di una matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-795">Returns a string created by joining a number of substrings contained in an array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-796">È presente una parità tra i `Join` e `Split` funzioni.</span><span class="sxs-lookup"><span data-stu-id="01e6c-796">There is a parity between the `Join` and `Split` functions.</span></span> <span data-ttu-id="01e6c-797">Il `Join` funzione accetta una matrice di stringhe e le unisce usando una stringa delimitatore, per restituire una singola stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-797">The `Join` function takes an array of strings and joins them using a delimiter string, to return a single string.</span></span> <span data-ttu-id="01e6c-798">Il `Split` funzione accetta una stringa e separa in corrispondenza del delimitatore per restituire una matrice di stringhe.</span><span class="sxs-lookup"><span data-stu-id="01e6c-798">The `Split` function takes a string and separates it at the delimiter, to return an array of strings.</span></span> <span data-ttu-id="01e6c-799">Tuttavia, una differenza fondamentale è che `Join` possibile concatenare le stringhe con qualsiasi stringa delimitatore, `Split` può separare stringhe usando un delimitatore dei singoli caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-799">However, a key difference is that `Join` can concatenate strings with any delimiter string, `Split` can only separate strings using a single character delimiter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-800">Nell'esempio seguente viene illustrato come utilizzare il `Join` funzione per creare un elenco di varie stringhe.</span><span class="sxs-lookup"><span data-stu-id="01e6c-800">The following example demonstrates how to use the `Join` function to create a list from several strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-801">
            <paramref name="SourceArray" /> non è unidimensionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-801">
              <paramref name="SourceArray" /> is not one dimensional.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-802">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-802">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string[] SourceArray, string Delimiter = &quot; &quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Join(string[] SourceArray, string Delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (SourceArray As String(), Optional Delimiter As String = &quot; &quot;) As String" />
      <MemberSignature Language="F#" Value="static member Join : string[] * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Join (SourceArray, Delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.String[]" />
        <Parameter Name="Delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="SourceArray">
          <span data-ttu-id="01e6c-803">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-803">Required.</span>
          </span>
          <span data-ttu-id="01e6c-804">Matrice unidimensionale di sottostringhe da unire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-804">One-dimensional array containing substrings to be joined.</span>
          </span>
        </param>
        <param name="Delimiter">
          <span data-ttu-id="01e6c-805">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-805">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-806">Qualsiasi stringa, utilizzata per separare le sottostringhe nella stringa restituita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-806">Any string, used to separate the substrings in the returned string.</span>
          </span>
          <span data-ttu-id="01e6c-807">Se omesso, viene utilizzato il carattere spazio (" ").</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-807">If omitted, the space character (" ") is used.</span>
          </span>
          <span data-ttu-id="01e6c-808">Se <paramref name="Delimiter" /> è una stringa di lunghezza zero ("") o <see langword="Nothing" />, tutti gli elementi dell'elenco vengono concatenati senza delimitatori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-808">If <paramref name="Delimiter" /> is a zero-length string ("") or <see langword="Nothing" />, all items in the list are concatenated with no delimiters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-809">Restituisce una stringa creata unendo un certo numero di sottostringhe di una matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-809">Returns a string created by joining a number of substrings contained in an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-810">Restituisce una stringa creata unendo un certo numero di sottostringhe di una matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-810">Returns a string created by joining a number of substrings contained in an array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-811">È presente una parità tra i `Join` e `Split` funzioni.</span><span class="sxs-lookup"><span data-stu-id="01e6c-811">There is a parity between the `Join` and `Split` functions.</span></span> <span data-ttu-id="01e6c-812">Il `Join` funzione accetta una matrice di stringhe e le unisce usando una stringa delimitatore, per restituire una singola stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-812">The `Join` function takes an array of strings and joins them using a delimiter string, to return a single string.</span></span> <span data-ttu-id="01e6c-813">Il `Split` funzione accetta una stringa e separa in corrispondenza del delimitatore per restituire una matrice di stringhe.</span><span class="sxs-lookup"><span data-stu-id="01e6c-813">The `Split` function takes a string and separates it at the delimiter, to return an array of strings.</span></span> <span data-ttu-id="01e6c-814">Tuttavia, una differenza fondamentale è che `Join` possibile concatenare le stringhe con qualsiasi stringa delimitatore, `Split` può separare stringhe usando un delimitatore dei singoli caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-814">However, a key difference is that `Join` can concatenate strings with any delimiter string, `Split` can only separate strings using a single character delimiter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-815">Nell'esempio seguente viene illustrato come utilizzare il `Join` funzione per creare un elenco di varie stringhe.</span><span class="sxs-lookup"><span data-stu-id="01e6c-815">The following example demonstrates how to use the `Join` function to create a list from several strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-816">
            <paramref name="SourceArray" /> non è unidimensionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-816">
              <paramref name="SourceArray" /> is not one dimensional.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-817">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-817">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="LCase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01e6c-818">Restituisce una stringa o un carattere convertito in minuscolo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-818">Returns a string or character converted to lowercase.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LCase">
      <MemberSignature Language="C#" Value="public static char LCase (char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static char LCase(char Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LCase(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function LCase (Value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char LCase(char Value);" />
      <MemberSignature Language="F#" Value="static member LCase : char -&gt; char" Usage="Microsoft.VisualBasic.Strings.LCase Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Value">
          <span data-ttu-id="01e6c-819">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-819">Required.</span>
          </span>
          <span data-ttu-id="01e6c-820">Qualsiasi espressione <see langword="String" /> o <see langword="Char" /> valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-820">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-821">Restituisce una stringa o un carattere convertito in minuscolo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-821">Returns a string or character converted to lowercase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-822">Restituisce una stringa o un carattere convertito in minuscolo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-822">Returns a string or character converted to lowercase.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-823">Solo le lettere maiuscole vengono convertite in minuscolo; tutte le lettere minuscole e i caratteri rimangono invariati.</span><span class="sxs-lookup"><span data-stu-id="01e6c-823">Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="01e6c-824">Questa funzione utilizza le informazioni dell'applicazione delle impostazioni cultura quando si modifica la stringa in modo che le modifiche delle lettere maiuscole sono appropriate per le impostazioni locali in cui viene utilizzata l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-824">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01e6c-825">Se decisioni relative alla sicurezza in base al risultato di un'operazione di modifica di maiuscole o confronto effettuate dall'applicazione, quindi l'operazione deve usare la <xref:System.String.Compare%2A?displayProperty=nameWithType> metodo e passare <xref:System.StringComparison.Ordinal> o <xref:System.StringComparison.OrdinalIgnoreCase> per il `comparisonType` argomento.</span><span class="sxs-lookup"><span data-stu-id="01e6c-825">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="01e6c-826">Per altre informazioni, vedere [modo in cui le impostazioni cultura influisce sulle stringhe in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="01e6c-826">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-827">Questo esempio viene usato il `LCase` funzione per restituire una versione in caratteri minuscoli di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-827">This example uses the `LCase` function to return a lowercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.UCase" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md">
          <span data-ttu-id="01e6c-828">Stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-828">Strings in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md">
          <span data-ttu-id="01e6c-829">Introduzione alle stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-829">Introduction to Strings in Visual Basic</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LCase">
      <MemberSignature Language="C#" Value="public static string LCase (string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LCase(string Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LCase (Value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LCase(System::String ^ Value);" />
      <MemberSignature Language="F#" Value="static member LCase : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.LCase Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Value">
          <span data-ttu-id="01e6c-830">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-830">Required.</span>
          </span>
          <span data-ttu-id="01e6c-831">Qualsiasi espressione <see langword="String" /> o <see langword="Char" /> valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-831">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-832">Restituisce una stringa o un carattere convertito in minuscolo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-832">Returns a string or character converted to lowercase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-833">Restituisce una stringa o un carattere convertito in minuscolo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-833">Returns a string or character converted to lowercase.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-834">Solo le lettere maiuscole vengono convertite in minuscolo; tutte le lettere minuscole e i caratteri rimangono invariati.</span><span class="sxs-lookup"><span data-stu-id="01e6c-834">Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="01e6c-835">Questa funzione utilizza le informazioni dell'applicazione delle impostazioni cultura quando si modifica la stringa in modo che le modifiche delle lettere maiuscole sono appropriate per le impostazioni locali in cui viene utilizzata l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-835">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01e6c-836">Se decisioni relative alla sicurezza in base al risultato di un'operazione di modifica di maiuscole o confronto effettuate dall'applicazione, quindi l'operazione deve usare la <xref:System.String.Compare%2A?displayProperty=nameWithType> metodo e passare <xref:System.StringComparison.Ordinal> o <xref:System.StringComparison.OrdinalIgnoreCase> per il `comparisonType` argomento.</span><span class="sxs-lookup"><span data-stu-id="01e6c-836">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="01e6c-837">Per altre informazioni, vedere [modo in cui le impostazioni cultura influisce sulle stringhe in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="01e6c-837">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-838">Questo esempio viene usato il `LCase` funzione per restituire una versione in caratteri minuscoli di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-838">This example uses the `LCase` function to return a lowercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.UCase" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md">
          <span data-ttu-id="01e6c-839">Stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-839">Strings in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md">
          <span data-ttu-id="01e6c-840">Introduzione alle stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-840">Introduction to Strings in Visual Basic</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public static string Left (string str, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Left(string str, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Left (str As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Left(System::String ^ str, int Length);" />
      <MemberSignature Language="F#" Value="static member Left : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Left (str, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="01e6c-841">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-841">Required.</span>
          </span>
          <span data-ttu-id="01e6c-842">Espressione <see langword="String" /> da cui vengono restituiti i primi caratteri a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-842">
              <see langword="String" /> expression from which the leftmost characters are returned.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="01e6c-843">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-843">Required.</span>
          </span>
          <span data-ttu-id="01e6c-844">Espressione <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-844">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-845">Espressione numerica che indica quanti caratteri restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-845">Numeric expression indicating how many characters to return.</span>
          </span>
          <span data-ttu-id="01e6c-846">Se 0, viene restituita una stringa di lunghezza zero ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-846">If 0, a zero-length string ("") is returned.</span>
          </span>
          <span data-ttu-id="01e6c-847">Se maggiore o uguale al numero di caratteri di <paramref name="str" />, viene restituita l'intera stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-847">If greater than or equal to the number of characters in <paramref name="str" />, the entire string is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-848">Restituisce una stringa contenente un numero specificato di caratteri a partire dal lato sinistro di una stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-848">Returns a string containing a specified number of characters from the left side of a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-849">Restituisce una stringa contenente un numero specificato di caratteri a partire dal lato sinistro di una stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-849">Returns a string containing a specified number of characters from the left side of a string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-850">Per determinare il numero di caratteri in `str`, usare il `Len` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-850">To determine the number of characters in `str`, use the `Len` function.</span></span> <span data-ttu-id="01e6c-851">Se utilizzata in un'applicazione Windows Forms o qualsiasi altra classe che ha un `Left` proprietà, è necessario qualificare completamente la funzione con `Microsoft.VisualBasic.Left`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-851">If used in a Windows Forms application, or any other class that has a `Left` property, you must fully qualify the function with `Microsoft.VisualBasic.Left`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-852">Il `LeftB` funzione nelle versioni precedenti di Visual Basic restituisce una stringa in byte anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-852">The `LeftB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="01e6c-853">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-853">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-854">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `LeftB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-854">All current Visual Basic strings are in Unicode, and `LeftB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-855">In questo esempio illustra l'uso del `Left` funzione per restituire una sottostringa di un determinato `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-855">This example demonstrates the use of the `Left` function to return a substring of a given `String`.</span></span> <span data-ttu-id="01e6c-856">In una classe che ha un `Left` proprietà, potrebbe essere necessario qualificare completamente il `Left` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-856">In a class that has a `Left` property, it may be necessary to fully qualify the `Left` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-857">
            <paramref name="Length" /> &lt; 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-857">
              <paramref name="Length" /> &lt; 0.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-858">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-858">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Len">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01e6c-859">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-859">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (bool Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(bool Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(bool Expression);" />
      <MemberSignature Language="F#" Value="static member Len : bool -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-860">Qualsiasi espressione <see langword="String" /> o nome di variabile valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-860">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="01e6c-861">Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-861">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-862">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-862">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-863">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-863">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-864">Tipi definiti dall'utente e `Object` variabili, le `Len` funzione restituisce la dimensione così come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-864">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="01e6c-865">Se un' `Object` contiene un `String`, verrà restituito la lunghezza della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-865">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="01e6c-866">Se un' `Object` contiene qualsiasi altro tipo, verrà restituito le dimensioni dell'oggetto come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-866">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="01e6c-867">Il `VBFixedString` attributo può essere applicato ai campi stringa in oggetti per indicare le dimensioni della stringa, in byte, quando viene scritta su disco.</span><span class="sxs-lookup"><span data-stu-id="01e6c-867">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="01e6c-868">Il `Len` funzione Usa le `VBFixedString` dell'attributo, se disponibile, per determinare la dimensione di `Object` variabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-868">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-869">Il `Len` funzione potrebbe non essere in grado di determinare il numero effettivo di byte per l'archiviazione necessari quando viene utilizzata con le stringhe a lunghezza variabile nei tipi di dati definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-869">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-870">Il `LenB` funzione nelle versioni precedenti di Visual Basic restituisce il numero di byte in una stringa anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-870">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="01e6c-871">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-871">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-872">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `LenB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-872">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-873">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-873">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-874">Il `Len` funzione accetta solo `String` e `Object` le variabili come parametri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-874">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="01e6c-875">Se un' `Object` contiene un `String`, verrà restituito la lunghezza del `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-875">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="01e6c-876">Se un parametro è un valore NULL `Object` riferimento, la funzione restituisce zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-876">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="01e6c-877">Se un `Object` contiene qualsiasi altro tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-877">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-878">Nell'esempio riportato di seguito la funzione `Len` viene utilizzata per restituire il numero di caratteri di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-878">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-879">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-879">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-880">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-880">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (byte Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int8 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Byte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Byte Expression);" />
      <MemberSignature Language="F#" Value="static member Len : byte -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-881">Qualsiasi espressione <see langword="String" /> o nome di variabile valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-881">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="01e6c-882">Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-882">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-883">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-883">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-884">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-884">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-885">Tipi definiti dall'utente e `Object` variabili, le `Len` funzione restituisce la dimensione così come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-885">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="01e6c-886">Se un' `Object` contiene un `String`, verrà restituito la lunghezza della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-886">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="01e6c-887">Se un' `Object` contiene qualsiasi altro tipo, verrà restituito le dimensioni dell'oggetto come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-887">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="01e6c-888">Il `VBFixedString` attributo può essere applicato ai campi stringa in oggetti per indicare le dimensioni della stringa, in byte, quando viene scritta su disco.</span><span class="sxs-lookup"><span data-stu-id="01e6c-888">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="01e6c-889">Il `Len` funzione Usa le `VBFixedString` dell'attributo, se disponibile, per determinare la dimensione di `Object` variabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-889">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-890">Il `Len` funzione potrebbe non essere in grado di determinare il numero effettivo di byte per l'archiviazione necessari quando viene utilizzata con le stringhe a lunghezza variabile nei tipi di dati definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-890">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-891">Il `LenB` funzione nelle versioni precedenti di Visual Basic restituisce il numero di byte in una stringa anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-891">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="01e6c-892">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-892">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-893">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `LenB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-893">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-894">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-894">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-895">Il `Len` funzione accetta solo `String` e `Object` le variabili come parametri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-895">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="01e6c-896">Se un' `Object` contiene un `String`, verrà restituito la lunghezza del `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-896">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="01e6c-897">Se un parametro è un valore NULL `Object` riferimento, la funzione restituisce zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-897">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="01e6c-898">Se un `Object` contiene qualsiasi altro tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-898">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-899">Nell'esempio riportato di seguito la funzione `Len` viene utilizzata per restituire il numero di caratteri di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-899">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-900">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-900">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-901">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-901">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (char Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(char Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(char Expression);" />
      <MemberSignature Language="F#" Value="static member Len : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-902">Qualsiasi espressione <see langword="String" /> o nome di variabile valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-902">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="01e6c-903">Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-903">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-904">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-904">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-905">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-905">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-906">Tipi definiti dall'utente e `Object` variabili, le `Len` funzione restituisce la dimensione così come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-906">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="01e6c-907">Se un' `Object` contiene un `String`, verrà restituito la lunghezza della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-907">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="01e6c-908">Se un' `Object` contiene qualsiasi altro tipo, verrà restituito le dimensioni dell'oggetto come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-908">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="01e6c-909">Il `VBFixedString` attributo può essere applicato ai campi stringa in oggetti per indicare le dimensioni della stringa, in byte, quando viene scritta su disco.</span><span class="sxs-lookup"><span data-stu-id="01e6c-909">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="01e6c-910">Il `Len` funzione Usa le `VBFixedString` dell'attributo, se disponibile, per determinare la dimensione di `Object` variabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-910">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-911">Il `Len` funzione potrebbe non essere in grado di determinare il numero effettivo di byte per l'archiviazione necessari quando viene utilizzata con le stringhe a lunghezza variabile nei tipi di dati definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-911">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-912">Il `LenB` funzione nelle versioni precedenti di Visual Basic restituisce il numero di byte in una stringa anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-912">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="01e6c-913">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-913">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-914">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `LenB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-914">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-915">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-915">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-916">Il `Len` funzione accetta solo `String` e `Object` le variabili come parametri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-916">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="01e6c-917">Se un' `Object` contiene un `String`, verrà restituito la lunghezza del `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-917">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="01e6c-918">Se un parametro è un valore NULL `Object` riferimento, la funzione restituisce zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-918">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="01e6c-919">Se un `Object` contiene qualsiasi altro tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-919">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-920">Nell'esempio riportato di seguito la funzione `Len` viene utilizzata per restituire il numero di caratteri di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-920">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-921">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-921">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-922">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-922">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (DateTime Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(valuetype System.DateTime Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(DateTime Expression);" />
      <MemberSignature Language="F#" Value="static member Len : DateTime -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-923">Qualsiasi espressione <see langword="String" /> o nome di variabile valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-923">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="01e6c-924">Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-924">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-925">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-925">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-926">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-926">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-927">Tipi definiti dall'utente e `Object` variabili, le `Len` funzione restituisce la dimensione così come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-927">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="01e6c-928">Se un' `Object` contiene un `String`, verrà restituito la lunghezza della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-928">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="01e6c-929">Se un' `Object` contiene qualsiasi altro tipo, verrà restituito le dimensioni dell'oggetto come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-929">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="01e6c-930">Il `VBFixedString` attributo può essere applicato ai campi stringa in oggetti per indicare le dimensioni della stringa, in byte, quando viene scritta su disco.</span><span class="sxs-lookup"><span data-stu-id="01e6c-930">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="01e6c-931">Il `Len` funzione Usa le `VBFixedString` dell'attributo, se disponibile, per determinare la dimensione di `Object` variabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-931">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-932">Il `Len` funzione potrebbe non essere in grado di determinare il numero effettivo di byte per l'archiviazione necessari quando viene utilizzata con le stringhe a lunghezza variabile nei tipi di dati definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-932">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-933">Il `LenB` funzione nelle versioni precedenti di Visual Basic restituisce il numero di byte in una stringa anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-933">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="01e6c-934">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-934">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-935">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `LenB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-935">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-936">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-936">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-937">Il `Len` funzione accetta solo `String` e `Object` le variabili come parametri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-937">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="01e6c-938">Se un' `Object` contiene un `String`, verrà restituito la lunghezza del `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-938">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="01e6c-939">Se un parametro è un valore NULL `Object` riferimento, la funzione restituisce zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-939">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="01e6c-940">Se un `Object` contiene qualsiasi altro tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-940">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-941">Nell'esempio riportato di seguito la funzione `Len` viene utilizzata per restituire il numero di caratteri di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-941">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-942">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-942">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-943">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-943">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (decimal Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(valuetype System.Decimal Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Decimal Expression);" />
      <MemberSignature Language="F#" Value="static member Len : decimal -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-944">Qualsiasi espressione <see langword="String" /> o nome di variabile valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-944">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="01e6c-945">Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-945">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-946">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-946">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-947">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-947">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-948">Tipi definiti dall'utente e `Object` variabili, le `Len` funzione restituisce la dimensione così come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-948">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="01e6c-949">Se un' `Object` contiene un `String`, verrà restituito la lunghezza della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-949">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="01e6c-950">Se un' `Object` contiene qualsiasi altro tipo, verrà restituito le dimensioni dell'oggetto come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-950">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="01e6c-951">Il `VBFixedString` attributo può essere applicato ai campi stringa in oggetti per indicare le dimensioni della stringa, in byte, quando viene scritta su disco.</span><span class="sxs-lookup"><span data-stu-id="01e6c-951">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="01e6c-952">Il `Len` funzione Usa le `VBFixedString` dell'attributo, se disponibile, per determinare la dimensione di `Object` variabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-952">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-953">Il `Len` funzione potrebbe non essere in grado di determinare il numero effettivo di byte per l'archiviazione necessari quando viene utilizzata con le stringhe a lunghezza variabile nei tipi di dati definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-953">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-954">Il `LenB` funzione nelle versioni precedenti di Visual Basic restituisce il numero di byte in una stringa anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-954">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="01e6c-955">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-955">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-956">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `LenB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-956">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-957">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-957">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-958">Il `Len` funzione accetta solo `String` e `Object` le variabili come parametri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-958">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="01e6c-959">Se un' `Object` contiene un `String`, verrà restituito la lunghezza del `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-959">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="01e6c-960">Se un parametro è un valore NULL `Object` riferimento, la funzione restituisce zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-960">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="01e6c-961">Se un `Object` contiene qualsiasi altro tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-961">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-962">Nell'esempio riportato di seguito la funzione `Len` viene utilizzata per restituire il numero di caratteri di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-962">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-963">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-963">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-964">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-964">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (double Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(float64 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(double Expression);" />
      <MemberSignature Language="F#" Value="static member Len : double -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-965">Qualsiasi espressione <see langword="String" /> o nome di variabile valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-965">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="01e6c-966">Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-966">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-967">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-967">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-968">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-968">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-969">Tipi definiti dall'utente e `Object` variabili, le `Len` funzione restituisce la dimensione così come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-969">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="01e6c-970">Se un' `Object` contiene un `String`, verrà restituito la lunghezza della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-970">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="01e6c-971">Se un' `Object` contiene qualsiasi altro tipo, verrà restituito le dimensioni dell'oggetto come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-971">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="01e6c-972">Il `VBFixedString` attributo può essere applicato ai campi stringa in oggetti per indicare le dimensioni della stringa, in byte, quando viene scritta su disco.</span><span class="sxs-lookup"><span data-stu-id="01e6c-972">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="01e6c-973">Il `Len` funzione Usa le `VBFixedString` dell'attributo, se disponibile, per determinare la dimensione di `Object` variabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-973">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-974">Il `Len` funzione potrebbe non essere in grado di determinare il numero effettivo di byte per l'archiviazione necessari quando viene utilizzata con le stringhe a lunghezza variabile nei tipi di dati definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-974">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-975">Il `LenB` funzione nelle versioni precedenti di Visual Basic restituisce il numero di byte in una stringa anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-975">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="01e6c-976">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-976">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-977">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `LenB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-977">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-978">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-978">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-979">Il `Len` funzione accetta solo `String` e `Object` le variabili come parametri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-979">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="01e6c-980">Se un' `Object` contiene un `String`, verrà restituito la lunghezza del `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-980">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="01e6c-981">Se un parametro è un valore NULL `Object` riferimento, la funzione restituisce zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-981">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="01e6c-982">Se un `Object` contiene qualsiasi altro tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-982">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-983">Nell'esempio riportato di seguito la funzione `Len` viene utilizzata per restituire il numero di caratteri di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-983">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-984">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-984">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-985">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-985">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (short Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int16 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(short Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int16 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-986">Qualsiasi espressione <see langword="String" /> o nome di variabile valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-986">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="01e6c-987">Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-987">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-988">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-988">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-989">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-989">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-990">Tipi definiti dall'utente e `Object` variabili, le `Len` funzione restituisce la dimensione così come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-990">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="01e6c-991">Se un' `Object` contiene un `String`, verrà restituito la lunghezza della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-991">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="01e6c-992">Se un' `Object` contiene qualsiasi altro tipo, verrà restituito le dimensioni dell'oggetto come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-992">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="01e6c-993">Il `VBFixedString` attributo può essere applicato ai campi stringa in oggetti per indicare le dimensioni della stringa, in byte, quando viene scritta su disco.</span><span class="sxs-lookup"><span data-stu-id="01e6c-993">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="01e6c-994">Il `Len` funzione Usa le `VBFixedString` dell'attributo, se disponibile, per determinare la dimensione di `Object` variabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-994">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-995">Il `Len` funzione potrebbe non essere in grado di determinare il numero effettivo di byte per l'archiviazione necessari quando viene utilizzata con le stringhe a lunghezza variabile nei tipi di dati definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-995">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-996">Il `LenB` funzione nelle versioni precedenti di Visual Basic restituisce il numero di byte in una stringa anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-996">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="01e6c-997">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-997">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-998">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `LenB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-998">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-999">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-999">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-1000">Il `Len` funzione accetta solo `String` e `Object` le variabili come parametri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1000">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="01e6c-1001">Se un' `Object` contiene un `String`, verrà restituito la lunghezza del `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1001">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="01e6c-1002">Se un parametro è un valore NULL `Object` riferimento, la funzione restituisce zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1002">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="01e6c-1003">Se un `Object` contiene qualsiasi altro tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1003">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1004">Nell'esempio riportato di seguito la funzione `Len` viene utilizzata per restituire il numero di caratteri di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1004">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1005">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1005">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-1006">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1006">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (int Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int32 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(int Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-1007">Qualsiasi espressione <see langword="String" /> o nome di variabile valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1007">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="01e6c-1008">Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1008">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1009">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1009">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1010">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1010">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1011">Tipi definiti dall'utente e `Object` variabili, le `Len` funzione restituisce la dimensione così come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1011">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="01e6c-1012">Se un' `Object` contiene un `String`, verrà restituito la lunghezza della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1012">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="01e6c-1013">Se un' `Object` contiene qualsiasi altro tipo, verrà restituito le dimensioni dell'oggetto come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1013">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="01e6c-1014">Il `VBFixedString` attributo può essere applicato ai campi stringa in oggetti per indicare le dimensioni della stringa, in byte, quando viene scritta su disco.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1014">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="01e6c-1015">Il `Len` funzione Usa le `VBFixedString` dell'attributo, se disponibile, per determinare la dimensione di `Object` variabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1015">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1016">Il `Len` funzione potrebbe non essere in grado di determinare il numero effettivo di byte per l'archiviazione necessari quando viene utilizzata con le stringhe a lunghezza variabile nei tipi di dati definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1016">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1017">Il `LenB` funzione nelle versioni precedenti di Visual Basic restituisce il numero di byte in una stringa anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1017">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="01e6c-1018">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1018">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-1019">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `LenB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1019">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-1020">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-1020">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-1021">Il `Len` funzione accetta solo `String` e `Object` le variabili come parametri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1021">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="01e6c-1022">Se un' `Object` contiene un `String`, verrà restituito la lunghezza del `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1022">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="01e6c-1023">Se un parametro è un valore NULL `Object` riferimento, la funzione restituisce zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1023">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="01e6c-1024">Se un `Object` contiene qualsiasi altro tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1024">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1025">Nell'esempio riportato di seguito la funzione `Len` viene utilizzata per restituire il numero di caratteri di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1025">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1026">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1026">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-1027">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1027">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (long Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int64 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(long Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int64 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-1028">Qualsiasi espressione <see langword="String" /> o nome di variabile valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1028">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="01e6c-1029">Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1029">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1030">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1030">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1031">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1031">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1032">Tipi definiti dall'utente e `Object` variabili, le `Len` funzione restituisce la dimensione così come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1032">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="01e6c-1033">Se un' `Object` contiene un `String`, verrà restituito la lunghezza della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1033">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="01e6c-1034">Se un' `Object` contiene qualsiasi altro tipo, verrà restituito le dimensioni dell'oggetto come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1034">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="01e6c-1035">Il `VBFixedString` attributo può essere applicato ai campi stringa in oggetti per indicare le dimensioni della stringa, in byte, quando viene scritta su disco.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1035">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="01e6c-1036">Il `Len` funzione Usa le `VBFixedString` dell'attributo, se disponibile, per determinare la dimensione di `Object` variabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1036">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1037">Il `Len` funzione potrebbe non essere in grado di determinare il numero effettivo di byte per l'archiviazione necessari quando viene utilizzata con le stringhe a lunghezza variabile nei tipi di dati definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1037">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1038">Il `LenB` funzione nelle versioni precedenti di Visual Basic restituisce il numero di byte in una stringa anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1038">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="01e6c-1039">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1039">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-1040">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `LenB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1040">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-1041">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-1041">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-1042">Il `Len` funzione accetta solo `String` e `Object` le variabili come parametri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1042">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="01e6c-1043">Se un' `Object` contiene un `String`, verrà restituito la lunghezza del `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1043">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="01e6c-1044">Se un parametro è un valore NULL `Object` riferimento, la funzione restituisce zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1044">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="01e6c-1045">Se un `Object` contiene qualsiasi altro tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1045">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1046">Nell'esempio riportato di seguito la funzione `Len` viene utilizzata per restituire il numero di caratteri di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1046">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1047">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1047">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-1048">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1048">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member Len : obj -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-1049">Qualsiasi espressione <see langword="String" /> o nome di variabile valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1049">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="01e6c-1050">Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1050">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1051">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1051">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1052">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1052">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1053">Tipi definiti dall'utente e `Object` variabili, le `Len` funzione restituisce la dimensione così come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1053">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="01e6c-1054">Se un' `Object` contiene un `String`, verrà restituito la lunghezza della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1054">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="01e6c-1055">Se un' `Object` contiene qualsiasi altro tipo, verrà restituito le dimensioni dell'oggetto come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1055">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="01e6c-1056">Il `VBFixedString` attributo può essere applicato ai campi stringa in oggetti per indicare le dimensioni della stringa, in byte, quando viene scritta su disco.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1056">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="01e6c-1057">Il `Len` funzione Usa le `VBFixedString` dell'attributo, se disponibile, per determinare la dimensione di `Object` variabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1057">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1058">Il `Len` funzione potrebbe non essere in grado di determinare il numero effettivo di byte per l'archiviazione necessari quando viene utilizzata con le stringhe a lunghezza variabile nei tipi di dati definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1058">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1059">Il `LenB` funzione nelle versioni precedenti di Visual Basic restituisce il numero di byte in una stringa anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1059">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="01e6c-1060">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1060">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-1061">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `LenB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1061">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-1062">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-1062">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-1063">Il `Len` funzione accetta solo `String` e `Object` le variabili come parametri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1063">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="01e6c-1064">Se un' `Object` contiene un `String`, verrà restituito la lunghezza del `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1064">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="01e6c-1065">Se un parametro è un valore NULL `Object` riferimento, la funzione restituisce zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1065">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="01e6c-1066">Se un `Object` contiene qualsiasi altro tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1066">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1067">Nell'esempio riportato di seguito la funzione `Len` viene utilizzata per restituire il numero di caratteri di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1067">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1068">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1068">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-1069">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1069">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (sbyte Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int8 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::SByte Expression);" />
      <MemberSignature Language="F#" Value="static member Len : sbyte -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-1070">Qualsiasi espressione <see langword="String" /> o nome di variabile valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1070">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="01e6c-1071">Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1071">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1072">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1072">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1073">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1073">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1074">Tipi definiti dall'utente e `Object` variabili, le `Len` funzione restituisce la dimensione così come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1074">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="01e6c-1075">Se un' `Object` contiene un `String`, verrà restituito la lunghezza della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1075">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="01e6c-1076">Se un' `Object` contiene qualsiasi altro tipo, verrà restituito le dimensioni dell'oggetto come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1076">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="01e6c-1077">Il `VBFixedString` attributo può essere applicato ai campi stringa in oggetti per indicare le dimensioni della stringa, in byte, quando viene scritta su disco.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1077">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="01e6c-1078">Il `Len` funzione Usa le `VBFixedString` dell'attributo, se disponibile, per determinare la dimensione di `Object` variabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1078">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1079">Il `Len` funzione potrebbe non essere in grado di determinare il numero effettivo di byte per l'archiviazione necessari quando viene utilizzata con le stringhe a lunghezza variabile nei tipi di dati definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1079">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1080">Il `LenB` funzione nelle versioni precedenti di Visual Basic restituisce il numero di byte in una stringa anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1080">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="01e6c-1081">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1081">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-1082">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `LenB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1082">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-1083">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-1083">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-1084">Il `Len` funzione accetta solo `String` e `Object` le variabili come parametri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1084">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="01e6c-1085">Se un' `Object` contiene un `String`, verrà restituito la lunghezza del `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1085">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="01e6c-1086">Se un parametro è un valore NULL `Object` riferimento, la funzione restituisce zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1086">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="01e6c-1087">Se un `Object` contiene qualsiasi altro tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1087">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1088">Nell'esempio riportato di seguito la funzione `Len` viene utilizzata per restituire il numero di caratteri di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1088">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Byte)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1089">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1089">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-1090">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1090">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (float Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(float32 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(float Expression);" />
      <MemberSignature Language="F#" Value="static member Len : single -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-1091">Qualsiasi espressione <see langword="String" /> o nome di variabile valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1091">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="01e6c-1092">Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1092">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1093">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1093">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1094">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1094">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1095">Tipi definiti dall'utente e `Object` variabili, le `Len` funzione restituisce la dimensione così come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1095">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="01e6c-1096">Se un' `Object` contiene un `String`, verrà restituito la lunghezza della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1096">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="01e6c-1097">Se un' `Object` contiene qualsiasi altro tipo, verrà restituito le dimensioni dell'oggetto come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1097">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="01e6c-1098">Il `VBFixedString` attributo può essere applicato ai campi stringa in oggetti per indicare le dimensioni della stringa, in byte, quando viene scritta su disco.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1098">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="01e6c-1099">Il `Len` funzione Usa le `VBFixedString` dell'attributo, se disponibile, per determinare la dimensione di `Object` variabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1099">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1100">Il `Len` funzione potrebbe non essere in grado di determinare il numero effettivo di byte per l'archiviazione necessari quando viene utilizzata con le stringhe a lunghezza variabile nei tipi di dati definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1100">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1101">Il `LenB` funzione nelle versioni precedenti di Visual Basic restituisce il numero di byte in una stringa anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1101">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="01e6c-1102">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1102">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-1103">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `LenB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1103">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-1104">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-1104">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-1105">Il `Len` funzione accetta solo `String` e `Object` le variabili come parametri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1105">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="01e6c-1106">Se un' `Object` contiene un `String`, verrà restituito la lunghezza del `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1106">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="01e6c-1107">Se un parametro è un valore NULL `Object` riferimento, la funzione restituisce zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1107">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="01e6c-1108">Se un `Object` contiene qualsiasi altro tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1108">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1109">Nell'esempio riportato di seguito la funzione `Len` viene utilizzata per restituire il numero di caratteri di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1109">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1110">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1110">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-1111">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1111">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (string Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(string Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::String ^ Expression);" />
      <MemberSignature Language="F#" Value="static member Len : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-1112">Qualsiasi espressione <see langword="String" /> o nome di variabile valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1112">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="01e6c-1113">Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1113">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1114">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1114">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1115">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1115">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1116">Tipi definiti dall'utente e `Object` variabili, le `Len` funzione restituisce la dimensione così come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1116">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="01e6c-1117">Se un' `Object` contiene un `String`, verrà restituito la lunghezza della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1117">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="01e6c-1118">Se un' `Object` contiene qualsiasi altro tipo, verrà restituito le dimensioni dell'oggetto come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1118">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="01e6c-1119">Il `VBFixedString` attributo può essere applicato ai campi stringa in oggetti per indicare le dimensioni della stringa, in byte, quando viene scritta su disco.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1119">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="01e6c-1120">Il `Len` funzione Usa le `VBFixedString` dell'attributo, se disponibile, per determinare la dimensione di `Object` variabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1120">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1121">Il `Len` funzione potrebbe non essere in grado di determinare il numero effettivo di byte per l'archiviazione necessari quando viene utilizzata con le stringhe a lunghezza variabile nei tipi di dati definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1121">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1122">Il `LenB` funzione nelle versioni precedenti di Visual Basic restituisce il numero di byte in una stringa anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1122">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="01e6c-1123">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1123">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-1124">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `LenB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1124">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-1125">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-1125">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-1126">Il `Len` funzione accetta solo `String` e `Object` le variabili come parametri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1126">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="01e6c-1127">Se un' `Object` contiene un `String`, verrà restituito la lunghezza del `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1127">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="01e6c-1128">Se un parametro è un valore NULL `Object` riferimento, la funzione restituisce zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1128">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="01e6c-1129">Se un `Object` contiene qualsiasi altro tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1129">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1130">Nell'esempio riportato di seguito la funzione `Len` viene utilizzata per restituire il numero di caratteri di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1130">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1131">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1131">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-1132">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1132">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (ushort Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int16 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As UShort) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt16 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint16 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-1133">Qualsiasi espressione <see langword="String" /> o nome di variabile valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1133">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="01e6c-1134">Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1134">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1135">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1135">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1136">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1136">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1137">Tipi definiti dall'utente e `Object` variabili, le `Len` funzione restituisce la dimensione così come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1137">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="01e6c-1138">Se un' `Object` contiene un `String`, verrà restituito la lunghezza della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1138">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="01e6c-1139">Se un' `Object` contiene qualsiasi altro tipo, verrà restituito le dimensioni dell'oggetto come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1139">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="01e6c-1140">Il `VBFixedString` attributo può essere applicato ai campi stringa in oggetti per indicare le dimensioni della stringa, in byte, quando viene scritta su disco.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1140">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="01e6c-1141">Il `Len` funzione Usa le `VBFixedString` dell'attributo, se disponibile, per determinare la dimensione di `Object` variabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1141">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1142">Il `Len` funzione potrebbe non essere in grado di determinare il numero effettivo di byte per l'archiviazione necessari quando viene utilizzata con le stringhe a lunghezza variabile nei tipi di dati definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1142">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1143">Il `LenB` funzione nelle versioni precedenti di Visual Basic restituisce il numero di byte in una stringa anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1143">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="01e6c-1144">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1144">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-1145">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `LenB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1145">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-1146">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-1146">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-1147">Il `Len` funzione accetta solo `String` e `Object` le variabili come parametri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1147">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="01e6c-1148">Se un' `Object` contiene un `String`, verrà restituito la lunghezza del `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1148">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="01e6c-1149">Se un parametro è un valore NULL `Object` riferimento, la funzione restituisce zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1149">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="01e6c-1150">Se un `Object` contiene qualsiasi altro tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1150">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1151">Nell'esempio riportato di seguito la funzione `Len` viene utilizzata per restituire il numero di caratteri di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1151">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1152">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1152">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-1153">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1153">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (uint Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int32 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt32 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint32 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-1154">Qualsiasi espressione <see langword="String" /> o nome di variabile valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1154">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="01e6c-1155">Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1155">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1156">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1156">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1157">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1157">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1158">Tipi definiti dall'utente e `Object` variabili, le `Len` funzione restituisce la dimensione così come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1158">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="01e6c-1159">Se un' `Object` contiene un `String`, verrà restituito la lunghezza della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1159">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="01e6c-1160">Se un' `Object` contiene qualsiasi altro tipo, verrà restituito le dimensioni dell'oggetto come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1160">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="01e6c-1161">Il `VBFixedString` attributo può essere applicato ai campi stringa in oggetti per indicare le dimensioni della stringa, in byte, quando viene scritta su disco.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1161">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="01e6c-1162">Il `Len` funzione Usa le `VBFixedString` dell'attributo, se disponibile, per determinare la dimensione di `Object` variabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1162">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1163">Il `Len` funzione potrebbe non essere in grado di determinare il numero effettivo di byte per l'archiviazione necessari quando viene utilizzata con le stringhe a lunghezza variabile nei tipi di dati definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1163">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1164">Il `LenB` funzione nelle versioni precedenti di Visual Basic restituisce il numero di byte in una stringa anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1164">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="01e6c-1165">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1165">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-1166">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `LenB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1166">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-1167">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-1167">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-1168">Il `Len` funzione accetta solo `String` e `Object` le variabili come parametri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1168">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="01e6c-1169">Se un' `Object` contiene un `String`, verrà restituito la lunghezza del `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1169">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="01e6c-1170">Se un parametro è un valore NULL `Object` riferimento, la funzione restituisce zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1170">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="01e6c-1171">Se un `Object` contiene qualsiasi altro tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1171">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1172">Nell'esempio riportato di seguito la funzione `Len` viene utilizzata per restituire il numero di caratteri di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1172">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1173">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1173">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-1174">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1174">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (ulong Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int64 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt64 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint64 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-1175">Qualsiasi espressione <see langword="String" /> o nome di variabile valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1175">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="01e6c-1176">Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1176">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1177">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1177">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1178">Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1178">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1179">Tipi definiti dall'utente e `Object` variabili, le `Len` funzione restituisce la dimensione così come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1179">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="01e6c-1180">Se un' `Object` contiene un `String`, verrà restituito la lunghezza della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1180">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="01e6c-1181">Se un' `Object` contiene qualsiasi altro tipo, verrà restituito le dimensioni dell'oggetto come verrà scritta nel file dal `FilePut` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1181">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="01e6c-1182">Il `VBFixedString` attributo può essere applicato ai campi stringa in oggetti per indicare le dimensioni della stringa, in byte, quando viene scritta su disco.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1182">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="01e6c-1183">Il `Len` funzione Usa le `VBFixedString` dell'attributo, se disponibile, per determinare la dimensione di `Object` variabili.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1183">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1184">Il `Len` funzione potrebbe non essere in grado di determinare il numero effettivo di byte per l'archiviazione necessari quando viene utilizzata con le stringhe a lunghezza variabile nei tipi di dati definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1184">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1185">Il `LenB` funzione nelle versioni precedenti di Visual Basic restituisce il numero di byte in una stringa anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1185">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="01e6c-1186">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1186">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-1187">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `LenB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1187">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="01e6c-1188">Note per gli sviluppatori di Smart Device</span><span class="sxs-lookup"><span data-stu-id="01e6c-1188">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="01e6c-1189">Il `Len` funzione accetta solo `String` e `Object` le variabili come parametri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1189">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="01e6c-1190">Se un' `Object` contiene un `String`, verrà restituito la lunghezza del `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1190">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="01e6c-1191">Se un parametro è un valore NULL `Object` riferimento, la funzione restituisce zero.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1191">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="01e6c-1192">Se un `Object` contiene qualsiasi altro tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1192">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1193">Nell'esempio riportato di seguito la funzione `Len` viene utilizzata per restituire il numero di caratteri di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1193">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int64)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1194">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1194">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-1195">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1195">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LSet">
      <MemberSignature Language="C#" Value="public static string LSet (string Source, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LSet(string Source, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LSet (Source As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LSet(System::String ^ Source, int Length);" />
      <MemberSignature Language="F#" Value="static member LSet : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.LSet (Source, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="01e6c-1196">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1196">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1197">Espressione <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1197">
              <see langword="String" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-1198">Nome della variabile String.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1198">Name of string variable.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="01e6c-1199">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1199">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1200">Espressione <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1200">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-1201">Lunghezza della stringa restituita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1201">Length of returned string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1202">Restituisce una stringa allineata a sinistra contenente la stringa specificata adeguata alla lunghezza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1202">Returns a left-aligned string containing the specified string adjusted to the specified length.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1203">Restituisce una stringa allineata a sinistra contenente la stringa specificata adeguata alla lunghezza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1203">Returns a left-aligned string containing the specified string adjusted to the specified length.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1204">Se la stringa specificata è maggiore della lunghezza specificata, la stringa restituita è passata alla lunghezza specificata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1204">If the specified string is longer than the specified length, the returned string is shortened to the specified length.</span></span> <span data-ttu-id="01e6c-1205">Se la stringa specificata è inferiore alla lunghezza specificata, vengono aggiunti spazi per l'estremità destra della stringa restituita da ottenere la lunghezza appropriata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1205">If the specified string is shorter than the specified length, spaces are added to the right end of the returned string to produce the appropriate length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1206">In questo esempio illustra l'uso della `LSet` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1206">This example demonstrates the use of the `LSet` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1207">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1207">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-1208">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1208">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md">
          <span data-ttu-id="01e6c-1209">Utilizzo efficiente dei tipi di dati</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1209">Efficient Use of Data Types</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LTrim">
      <MemberSignature Language="C#" Value="public static string LTrim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LTrim(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LTrim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LTrim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member LTrim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.LTrim str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="01e6c-1210">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1210">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1211">Qualsiasi espressione <see langword="String" /> valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1211">Any valid <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1212">Restituisce una stringa contenente una copia di una stringa specificata senza spazi iniziali (<see langword="LTrim" />), senza spazi finali (<see langword="RTrim" />) o senza spazi iniziali o finali (<see langword="Trim" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1212">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1213">Restituisce una stringa contenente una copia di una stringa specificata senza spazi iniziali (<see langword="LTrim" />), senza spazi finali (<see langword="RTrim" />) o senza spazi iniziali o finali (<see langword="Trim" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1213">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1214">Il `LTrim`, `RTrim`, e `Trim` funzioni rimuovono gli spazi alla fine delle stringhe.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1214">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1215">In questo esempio vengono utilizzate la funzione `LTrim` per rimuovere gli spazi iniziali e la funzione `RTrim` per rimuovere gli spazi finali da una variabile String.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1215">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="01e6c-1216">Viene utilizzata la funzione `Trim` per eliminare entrambi i tipi di spazi.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1216">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1217">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1217">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Mid">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01e6c-1218">Restituisce una stringa contenente caratteri provenienti da una stringa specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1218">Returns a string that contains characters from a specified string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Mid">
      <MemberSignature Language="C#" Value="public static string Mid (string str, int Start);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Mid(string str, int32 Start) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mid (str As String, Start As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Mid(System::String ^ str, int Start);" />
      <MemberSignature Language="F#" Value="static member Mid : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Mid (str, Start)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="01e6c-1219">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1219">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1220">Espressione <see langword="String" /> da cui vengono restituiti i caratteri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1220">
              <see langword="String" /> expression from which characters are returned.</span>
          </span>
        </param>
        <param name="Start">
          <span data-ttu-id="01e6c-1221">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1221">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1222">Espressione <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1222">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-1223">Posizione iniziale dei caratteri da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1223">Starting position of the characters to return.</span>
          </span>
          <span data-ttu-id="01e6c-1224">Se <paramref name="Start" /> è maggiore del numero di caratteri di <paramref name="str" />, la funzione <see langword="Mid" /> restituisce una stringa di lunghezza zero ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1224">If <paramref name="Start" /> is greater than the number of characters in <paramref name="str" />, the <see langword="Mid" /> function returns a zero-length string ("").</span>
          </span>
          <span data-ttu-id="01e6c-1225">Il parametro <paramref name="Start" /> è in base uno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1225">
              <paramref name="Start" /> is one-based.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1226">Restituisce una stringa che contiene tutti i caratteri a partire da una posizione specificata in una stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1226">Returns a string that contains all the characters starting from a specified position in a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1227">Una stringa che consiste di tutti i caratteri a partire dalla posizione specificata nella stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1227">A string that consists of all the characters starting from the specified position in the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1228">Per determinare il numero di caratteri in `str`, usare il `Len` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1228">To determine the number of characters in `str`, use the `Len` function.</span></span>  
  
 <span data-ttu-id="01e6c-1229">Visual Basic ha un `Mid` funzione e un `Mid` istruzione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1229">Visual Basic has a `Mid` function and a `Mid` statement.</span></span> <span data-ttu-id="01e6c-1230">Questi elementi funzionano entrambi in un numero specificato di caratteri in una stringa, ma il `Mid` funzione restituisce i caratteri, mentre il `Mid` istruzione sostituisce i caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1230">These elements both operate on a specified number of characters in a string, but the `Mid` function returns the characters while the `Mid` statement replaces the characters.</span></span> <span data-ttu-id="01e6c-1231">Per altre informazioni, vedere [istruzione Mid](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1231">For more information, see [Mid Statement](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1232">Il `MidB` funzione nelle versioni precedenti di Visual Basic restituisce una stringa in byte anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1232">The `MidB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="01e6c-1233">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1233">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-1234">Tutte le stringhe di Visual Basic sono in formato Unicode, e `MidB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1234">All Visual Basic strings are in Unicode, and `MidB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1235">L'ultima riga di questo esempio utilizza questo overload della funzione `Mid` per restituire il quinto carattere e quelli successivi di una stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1235">The last line in this example uses this overload of the `Mid` function to return the fifth and subsequent characters from a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-1236">
            <paramref name="Start" /> &lt;= 0 o <paramref name="Length" /> &lt; 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1236">
              <paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1237">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1237">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md">
          <span data-ttu-id="01e6c-1238">Stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1238">Strings in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md">
          <span data-ttu-id="01e6c-1239">Introduzione alle stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1239">Introduction to Strings in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/mid-statement.md">
          <span data-ttu-id="01e6c-1240">Istruzione Mid</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1240">Mid Statement</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Mid">
      <MemberSignature Language="C#" Value="public static string Mid (string str, int Start, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Mid(string str, int32 Start, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mid (str As String, Start As Integer, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Mid(System::String ^ str, int Start, int Length);" />
      <MemberSignature Language="F#" Value="static member Mid : string * int * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Mid (str, Start, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="01e6c-1241">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1241">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1242">Espressione <see langword="String" /> da cui vengono restituiti i caratteri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1242">
              <see langword="String" /> expression from which characters are returned.</span>
          </span>
        </param>
        <param name="Start">
          <span data-ttu-id="01e6c-1243">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1243">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1244">Espressione <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1244">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-1245">Posizione iniziale dei caratteri da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1245">Starting position of the characters to return.</span>
          </span>
          <span data-ttu-id="01e6c-1246">Se <paramref name="Start" /> è maggiore del numero di caratteri di <paramref name="str" />, la funzione <see langword="Mid" /> restituisce una stringa di lunghezza zero ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1246">If <paramref name="Start" /> is greater than the number of characters in <paramref name="str" />, the <see langword="Mid" /> function returns a zero-length string ("").</span>
          </span>
          <span data-ttu-id="01e6c-1247">Il parametro <paramref name="Start" /> è in base uno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1247">
              <paramref name="Start" /> is one based.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="01e6c-1248">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1248">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-1249">Espressione <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1249">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-1250">Numero dei caratteri da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1250">Number of characters to return.</span>
          </span>
          <span data-ttu-id="01e6c-1251">Se omesso o se il numero di caratteri del testo (incluso il carattere nella posizione indicata da <paramref name="Length" />) è minore di <paramref name="Start" />, vengono restituiti tutti i caratteri dalla posizione iniziale fino alla fine della stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1251">If omitted or if there are fewer than <paramref name="Length" /> characters in the text (including the character at position <paramref name="Start" />), all characters from the start position to the end of the string are returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1252">Restituisce una stringa che contiene un numero specificato di caratteri a partire da una posizione specificata in una stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1252">Returns a string that contains a specified number of characters starting from a specified position in a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1253">Una stringa che consiste del numero specificato di caratteri a partire dalla posizione specificata nella stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1253">A string that consists of the specified number of characters starting from the specified position in the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1254">Per determinare il numero di caratteri in `str`, usare il `Len` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1254">To determine the number of characters in `str`, use the `Len` function.</span></span>  
  
 <span data-ttu-id="01e6c-1255">Visual Basic ha un `Mid` funzione e un `Mid` istruzione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1255">Visual Basic has a `Mid` function and a `Mid` statement.</span></span> <span data-ttu-id="01e6c-1256">Questi elementi funzionano entrambi in un numero specificato di caratteri in una stringa, ma il `Mid` funzione restituisce i caratteri, mentre il `Mid` istruzione sostituisce i caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1256">These elements both operate on a specified number of characters in a string, but the `Mid` function returns the characters while the `Mid` statement replaces the characters.</span></span> <span data-ttu-id="01e6c-1257">Per altre informazioni, vedere [istruzione Mid](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1257">For more information, see [Mid Statement](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1258">Il `MidB` funzione nelle versioni precedenti di Visual Basic restituisce una stringa in byte anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1258">The `MidB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="01e6c-1259">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1259">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-1260">Tutte le stringhe di Visual Basic sono in formato Unicode, e `MidB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1260">All Visual Basic strings are in Unicode, and `MidB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1261">Le prime due funzioni `Mid` di questo esempio restituiscono il numero di caratteri specificato da una stringa, a partire dalle posizioni specificate.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1261">The first two `Mid` functions in this example return the specified number of characters from a string, starting from the given positions.</span></span> <span data-ttu-id="01e6c-1262">L'ultima funzione illustra l'overload di <xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29> e specifica solamente il punto iniziale per l'estrazione della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1262">(The last function illustrates the <xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29> overload and only specifies the starting point for the string extraction.)</span></span>  
  
 [!code-vb[VbVbalrStrings#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-1263">
            <paramref name="Start" /> &lt;= 0 o <paramref name="Length" /> &lt; 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1263">
              <paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1264">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1264">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md">
          <span data-ttu-id="01e6c-1265">Stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1265">Strings in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md">
          <span data-ttu-id="01e6c-1266">Introduzione alle stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1266">Introduction to Strings in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/mid-statement.md">
          <span data-ttu-id="01e6c-1267">Istruzione Mid</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1267">Mid Statement</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string Expression, string Find, string Replacement, int Start = 1, int Count = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Replace(string Expression, string Find, string Replacement, int32 Start, int32 Count, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (Expression As String, Find As String, Replacement As String, Optional Start As Integer = 1, Optional Count As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * string * int * int * Microsoft.VisualBasic.CompareMethod -&gt; string" Usage="Microsoft.VisualBasic.Strings.Replace (Expression, Find, Replacement, Start, Count, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" />
        <Parameter Name="Find" Type="System.String" />
        <Parameter Name="Replacement" Type="System.String" />
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Count" Type="System.Int32" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-1268">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1268">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1269">Espressione String contenente la sottostringa da sostituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1269">String expression containing substring to replace.</span>
          </span>
        </param>
        <param name="Find">
          <span data-ttu-id="01e6c-1270">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1270">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1271">Sottostringa da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1271">Substring being searched for.</span>
          </span>
        </param>
        <param name="Replacement">
          <span data-ttu-id="01e6c-1272">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1272">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1273">Sottostringa di sostituzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1273">Replacement substring.</span>
          </span>
        </param>
        <param name="Start">
          <span data-ttu-id="01e6c-1274">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1274">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-1275">Posizione all'interno di <paramref name="Expression" /> in cui inizia una sottostringa utilizzata per la sostituzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1275">Position within <paramref name="Expression" /> that starts a substring used for replacement.</span>
          </span>
          <span data-ttu-id="01e6c-1276">Il valore restituito di <see langword="Replace" /> è una stringa che inizia in corrispondenza di <paramref name="Start" />, con le sostituzioni appropriate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1276">The return value of <see langword="Replace" /> is a string that begins at <paramref name="Start" />, with appropriate substitutions.</span>
          </span>
          <span data-ttu-id="01e6c-1277">Se omesso, viene usato il valore 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1277">If omitted, 1 is assumed.</span>
          </span>
        </param>
        <param name="Count">
          <span data-ttu-id="01e6c-1278">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1278">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-1279">Numero di sostituzioni della sottostringa da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1279">Number of substring substitutions to perform.</span>
          </span>
          <span data-ttu-id="01e6c-1280">Se omesso, il valore predefinito è -1, che indica di eseguire tutte le sostituzioni possibili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1280">If omitted, the default value is –1, which means "make all possible substitutions."</span>
          </span>
        </param>
        <param name="Compare">
          <span data-ttu-id="01e6c-1281">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1281">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-1282">Valore numerico che indica il tipo di confronto da utilizzare per la valutazione delle sottostringhe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1282">Numeric value indicating the kind of comparison to use when evaluating substrings.</span>
          </span>
          <span data-ttu-id="01e6c-1283">Per informazioni sui valori, vedere "Impostazioni".</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1283">See Settings for values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1284">Restituisce una stringa nella quale la sottostringa specificata è stata sostituita con un'altra sottostringa per il numero di volte indicato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1284">Returns a string in which a specified substring has been replaced with another substring a specified number of times.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1285">
            <see langword="Replace" /> restituisce i valori seguenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1285">
              <see langword="Replace" /> returns the following values.</span>
          </span>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="01e6c-1286">Se</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-1286">If</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-1287">Replace restituirà</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-1287">Replace returns</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-1288">
                  <paramref name="Find" /> è di lunghezza zero o <see langword="Nothing" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-1288">
                    <paramref name="Find" /> is zero-length or <see langword="Nothing" /></span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-1289">Copia di <paramref name="Expression" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-1289">Copy of <paramref name="Expression" /></span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-1290">
                  <paramref name="Replace" /> è di lunghezza zero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-1290">
                    <paramref name="Replace" /> is zero-length</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-1291">Copia di <paramref name="Expression" /> senza occorrenze di <paramref name="Find" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-1291">Copy of <paramref name="Expression" /> with no occurrences of <paramref name="Find" /></span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-1292">
                  <paramref name="Expression" /> è di lunghezza zero o <see langword="Nothing" /> oppure <paramref name="Start" /> è di lunghezza maggiore rispetto a <paramref name="Expression" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-1292">
                    <paramref name="Expression" /> is zero-length or <see langword="Nothing" />, or <paramref name="Start" /> is greater than length of <paramref name="Expression" /></span>
                </span>
              </term>
              <description>
                <see langword="Nothing" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-1293">
                  <paramref name="Count" /> è 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-1293">
                    <paramref name="Count" /> is 0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-1294">Copia di <paramref name="Expression" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-1294">Copy of <paramref name="Expression" /></span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1295">Il valore restituito del `Replace` funzione è una stringa che inizia in corrispondenza della posizione specificata da `Start` e termina alla fine del `Expression` stringa, con le sostituzioni eseguite come specificato dal `Find` e `Replace` valori.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1295">The return value of the `Replace` function is a string that begins at the position specified by `Start` and concludes at the end of the `Expression` string, with the substitutions made as specified by the `Find` and `Replace` values.</span></span>  
  
 <span data-ttu-id="01e6c-1296">Il `Compare` argomento può avere i valori seguenti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1296">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="01e6c-1297">Costante</span><span class="sxs-lookup"><span data-stu-id="01e6c-1297">Constant</span></span>|<span data-ttu-id="01e6c-1298">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-1298">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="01e6c-1299">Esegue un confronto binario</span><span class="sxs-lookup"><span data-stu-id="01e6c-1299">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="01e6c-1300">Esegue un confronto di testo</span><span class="sxs-lookup"><span data-stu-id="01e6c-1300">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1301">Questo esempio viene illustrato il `Replace` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1301">This example demonstrates the `Replace` function.</span></span>  
  
```vb  
Dim TestString As String = "Shopping List"  
' Returns "Shipping List".  
Dim aString As String = Replace(TestString, "o", "i")  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-1302">
            <paramref name="Count" /> &lt; -1 o <paramref name="Start" /> &lt;= 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1302">
              <paramref name="Count" /> &lt; -1 or <paramref name="Start" /> &lt;= 0.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Filter" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1303">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1303">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public static string Right (string str, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Right(string str, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Right (str As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Right(System::String ^ str, int Length);" />
      <MemberSignature Language="F#" Value="static member Right : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Right (str, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="01e6c-1304">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1304">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1305">Espressione <see langword="String" /> da cui vengono restituiti gli ultimi caratteri a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1305">
              <see langword="String" /> expression from which the rightmost characters are returned.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="01e6c-1306">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1306">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1307">
            <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1307">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="01e6c-1308">Espressione numerica che indica quanti caratteri restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1308">Numeric expression indicating how many characters to return.</span>
          </span>
          <span data-ttu-id="01e6c-1309">Se 0, viene restituita una stringa di lunghezza zero ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1309">If 0, a zero-length string ("") is returned.</span>
          </span>
          <span data-ttu-id="01e6c-1310">Se maggiore o uguale al numero di caratteri di <paramref name="str" />, viene restituita l'intera stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1310">If greater than or equal to the number of characters in <paramref name="str" />, the entire string is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1311">Restituisce una stringa contenente un numero di caratteri specificato a partire dalla destra della stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1311">Returns a string containing a specified number of characters from the right side of a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1312">Restituisce una stringa contenente un numero di caratteri specificato a partire dalla destra della stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1312">Returns a string containing a specified number of characters from the right side of a string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1313">Per determinare il numero di caratteri in `str`, usare il `Len` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1313">To determine the number of characters in `str`, use the `Len` function.</span></span> <span data-ttu-id="01e6c-1314">Se usato in un Windows Form o qualsiasi altra classe che ha un `Right` proprietà, è necessario qualificare completamente la funzione con `Microsoft.VisualBasic.Strings.Right`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1314">If used in a Windows Form, or any other class that has a `Right` property, you must fully qualify the function with `Microsoft.VisualBasic.Strings.Right`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1315">Il `RightB` funzione nelle versioni precedenti di Visual Basic restituisce una stringa in byte, anziché in caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1315">The `RightB` function in earlier versions of Visual Basic returns a string in bytes, rather than characters.</span></span> <span data-ttu-id="01e6c-1316">Viene utilizzato principalmente per la conversione di stringhe nelle applicazioni di double byte character set (DBCS).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1316">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="01e6c-1317">Tutte le stringhe di Visual Basic corrente sono in formato Unicode, e `RightB` non è più supportata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1317">All current Visual Basic strings are in Unicode, and `RightB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1318">In questo esempio illustra l'uso del `Right` funzione per restituire una sottostringa di un determinato `String`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1318">This example demonstrates the use of the `Right` function to return a substring of a given `String`.</span></span> <span data-ttu-id="01e6c-1319">In una classe che ha un `Right` proprietà, potrebbe essere necessario qualificare completamente il `Right` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1319">In a class that has a `Right` property, it may be necessary to fully qualify the `Right` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-1320">
            <paramref name="Length" /> &lt; 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1320">
              <paramref name="Length" /> &lt; 0.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1321">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1321">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RSet">
      <MemberSignature Language="C#" Value="public static string RSet (string Source, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string RSet(string Source, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RSet (Source As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RSet(System::String ^ Source, int Length);" />
      <MemberSignature Language="F#" Value="static member RSet : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.RSet (Source, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="01e6c-1322">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1322">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1323">Espressione <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1323">
              <see langword="String" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-1324">Nome della variabile String.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1324">Name of string variable.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="01e6c-1325">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1325">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1326">Espressione <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1326">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-1327">Lunghezza della stringa restituita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1327">Length of returned string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1328">Restituisce una stringa allineata a destra contenente la stringa specificata adattata alla lunghezza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1328">Returns a right-aligned string containing the specified string adjusted to the specified length.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1329">Restituisce una stringa allineata a destra contenente la stringa specificata adattata alla lunghezza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1329">Returns a right-aligned string containing the specified string adjusted to the specified length.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1330">Se `Source` supera `Length`, `RSet` inserisce solo i caratteri più a sinistra, fino alla lunghezza di `Source`, nella stringa restituita.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1330">If `Source` is longer than `Length`, `RSet` places only the leftmost characters, up to the length of `Source`, in the returned string.</span></span> <span data-ttu-id="01e6c-1331">Se la stringa specificata è inferiore alla lunghezza specificata, vengono aggiunti spazi a sinistra della stringa da ottenere la lunghezza appropriata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1331">If the specified string is shorter than the specified length, spaces are added to the left end of the string to produce the appropriate length.</span></span> <span data-ttu-id="01e6c-1332">Se la stringa specificata è maggiore della lunghezza specificata, si è passato alla lunghezza specificata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1332">If the specified string is longer than the specified length, it is shortened to the specified length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1333">In questo esempio illustra l'uso della `RSet` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1333">This example demonstrates the use of the `RSet` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1334">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1334">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="01e6c-1335">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1335">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md">
          <span data-ttu-id="01e6c-1336">Utilizzo efficiente dei tipi di dati</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1336">Efficient Use of Data Types</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RTrim">
      <MemberSignature Language="C#" Value="public static string RTrim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static string RTrim(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RTrim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RTrim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member RTrim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.RTrim str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="01e6c-1337">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1337">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1338">Qualsiasi espressione <see langword="String" /> valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1338">Any valid <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1339">Restituisce una stringa contenente una copia di una stringa specificata senza spazi iniziali (<see langword="LTrim" />), senza spazi finali (<see langword="RTrim" />) o senza spazi iniziali o finali (<see langword="Trim" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1339">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1340">Restituisce una stringa contenente una copia di una stringa specificata senza spazi iniziali (<see langword="LTrim" />), senza spazi finali (<see langword="RTrim" />) o senza spazi iniziali o finali (<see langword="Trim" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1340">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1341">Il `LTrim`, `RTrim`, e `Trim` funzioni rimuovono gli spazi alla fine delle stringhe.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1341">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1342">In questo esempio vengono utilizzate la funzione `LTrim` per rimuovere gli spazi iniziali e la funzione `RTrim` per rimuovere gli spazi finali da una variabile String.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1342">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="01e6c-1343">Viene utilizzata la funzione `Trim` per eliminare entrambi i tipi di spazi.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1343">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1344">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1344">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Space">
      <MemberSignature Language="C#" Value="public static string Space (int Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Space(int32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Space (Number As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Space(int Number);" />
      <MemberSignature Language="F#" Value="static member Space : int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Space Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="01e6c-1345">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1345">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1346">Espressione <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1346">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-1347">Numero di spazi desiderati nella stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1347">The number of spaces you want in the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1348">Restituisce una stringa composta dal numero di spazi specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1348">Returns a string consisting of the specified number of spaces.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1349">Restituisce una stringa composta dal numero di spazi specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1349">Returns a string consisting of the specified number of spaces.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1350">Il `Space` funzione è utile per la formattazione dell'output e cancellare i dati nelle stringhe di lunghezza fissa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1350">The `Space` function is useful for formatting output and clearing data in fixed-length strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1351">Questo esempio viene usato il `Space` funzione per restituire una stringa costituita da un numero specificato di spazi.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1351">This example uses the `Space` function to return a string consisting of a specified number of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-1352">
            <paramref name="Number" /> &lt; 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1352">
              <paramref name="Number" /> &lt; 0.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1353">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1353">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static string[] Split (string Expression, string Delimiter = &quot; &quot;, int Limit = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Split(string Expression, string Delimiter, int32 Limit, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (Expression As String, Optional Delimiter As String = &quot; &quot;, Optional Limit As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Split : string * string * int * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Split (Expression, Delimiter, Limit, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" />
        <Parameter Name="Delimiter" Type="System.String" />
        <Parameter Name="Limit" Type="System.Int32" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-1354">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1354">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1355">Espressione <see langword="String" /> contenente sottostringhe e delimitatori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1355">
              <see langword="String" /> expression containing substrings and delimiters.</span>
          </span>
        </param>
        <param name="Delimiter">
          <span data-ttu-id="01e6c-1356">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1356">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-1357">Qualsiasi carattere singolo utilizzato per identificare i limiti delle sottostringhe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1357">Any single character used to identify substring limits.</span>
          </span>
          <span data-ttu-id="01e6c-1358">Se <paramref name="Delimiter" /> viene omesso, come delimitatore viene utilizzato il carattere spazio (" ").</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1358">If <paramref name="Delimiter" /> is omitted, the space character (" ") is assumed to be the delimiter.</span>
          </span>
        </param>
        <param name="Limit">
          <span data-ttu-id="01e6c-1359">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1359">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-1360">Numero massimo di sottostringhe in cui suddividere la stringa di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1360">Maximum number of substrings into which the input string should be split.</span>
          </span>
          <span data-ttu-id="01e6c-1361">Il valore predefinito, –1, indica che la stringa di input deve essere suddivisa a ogni occorrenza della stringa <paramref name="Delimiter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1361">The default, –1, indicates that the input string should be split at every occurrence of the <paramref name="Delimiter" /> string.</span>
          </span>
        </param>
        <param name="Compare">
          <span data-ttu-id="01e6c-1362">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1362">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-1363">Valore numerico che indica il tipo di confronto da utilizzare per la valutazione delle sottostringhe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1363">Numeric value indicating the comparison to use when evaluating substrings.</span>
          </span>
          <span data-ttu-id="01e6c-1364">Per un elenco dei valori possibili, vedere "Impostazioni".</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1364">See "Settings" for values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1365">Restituisce una matrice unidimensionale con indice in base zero che contiene il numero di sottostringhe specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1365">Returns a zero-based, one-dimensional array containing a specified number of substrings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1366">Matrice<see langword="String" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1366">
              <see langword="String" /> array.</span>
          </span>
          <span data-ttu-id="01e6c-1367">Se <paramref name="Expression" /> è una stringa di lunghezza zero (""), <see langword="Split" /> restituisce una matrice costituita da un solo elemento contenente una stringa di lunghezza zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1367">If <paramref name="Expression" /> is a zero-length string (""), <see langword="Split" /> returns a single-element array containing a zero-length string.</span>
          </span>
          <span data-ttu-id="01e6c-1368">Se <paramref name="Delimiter" /> è una stringa di lunghezza zero, oppure se non compare mai nella stringa <paramref name="Expression" />, <see langword="Split" /> restituisce una matrice con un solo elemento contenente l'intera stringa <paramref name="Expression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1368">If <paramref name="Delimiter" /> is a zero-length string, or if it does not appear anywhere in <paramref name="Expression" />, <see langword="Split" /> returns a single-element array containing the entire <paramref name="Expression" /> string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1369">Per impostazione predefinita, oppure quando `Limit` è uguale a -1, il `Split` funzione suddivide la stringa di input a ogni occorrenza della stringa di delimitazione e restituisce la lunghezza delle sottostringhe in una matrice.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1369">By default, or when `Limit` equals -1, the `Split` function splits the input string at every occurrence of the delimiter string, and returns the substrings in an array.</span></span> <span data-ttu-id="01e6c-1370">Quando la `Limit` parametro è maggiore di zero, il `Split` funzione suddivide la stringa in corrispondenza del primo `Limit`-1 occorrenze del delimitatore e restituisce una matrice con le sottostringhe risultanti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1370">When the `Limit` parameter is greater than zero, the `Split` function splits the string at the first `Limit`-1 occurrences of the delimiter, and returns an array with the resulting substrings.</span></span> <span data-ttu-id="01e6c-1371">Ad esempio, `Split("a:b:c", ":")` restituisce la matrice `{"a", "b", "c"}`, mentre `Split("a:b:c", ":", 2)` restituisce la matrice `{"a", "b:c"}`.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1371">For example, `Split("a:b:c", ":")` returns the array `{"a", "b", "c"}`, while `Split("a:b:c", ":", 2)` returns the array `{"a", "b:c"}`.</span></span>  
  
 <span data-ttu-id="01e6c-1372">Quando il `Split` funzione rileva due delimitatori di una riga o un delimitatore all'inizio o alla fine della stringa, li interpreta come delimitatori di una stringa vuota ("").</span><span class="sxs-lookup"><span data-stu-id="01e6c-1372">When the `Split` function encounters two delimiters in a row, or a delimiter at the beginning or end of the string, it interprets them as surrounding an empty string ("").</span></span> <span data-ttu-id="01e6c-1373">Ad esempio, `Split("xx", "x")` restituisce la matrice che contiene tre stringhe vuote: uno tra l'inizio della stringa e il primo "x", una tra le due "stringhe x" e uno tra l'ultimo "x" e la fine della stringa.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1373">For example, `Split("xx", "x")` returns the array containing three empty strings: one from between the beginning of the string and the first "x", one from between the two "x" strings, and one from between the last "x" and the end of the string.</span></span>  
  
 <span data-ttu-id="01e6c-1374">Questa tabella viene illustrato come facoltativo `Delimiter`, `Limit`, e `Compare` parametri possono modificare il comportamento del `Split` (funzione).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1374">This table demonstrates how the optional `Delimiter`, `Limit`, and `Compare` parameters can change the behavior of the `Split` function.</span></span>  
  
|<span data-ttu-id="01e6c-1375">Chiamata di divisione</span><span class="sxs-lookup"><span data-stu-id="01e6c-1375">Split Call</span></span>|<span data-ttu-id="01e6c-1376">Valore restituito</span><span class="sxs-lookup"><span data-stu-id="01e6c-1376">Return Value</span></span>|  
|-|-|  
|`Split("42, 12, 19")`|<span data-ttu-id="01e6c-1377">{"42," , "12," , "19"}</span><span class="sxs-lookup"><span data-stu-id="01e6c-1377">{"42," , "12," , "19"}</span></span>|  
|`Split("42, 12, 19", ", ")`|<span data-ttu-id="01e6c-1378">{"42", "12", "19"}</span><span class="sxs-lookup"><span data-stu-id="01e6c-1378">{"42", "12", "19"}</span></span>|  
|`Split("42, 12, 19", ", ", 2)`|<span data-ttu-id="01e6c-1379">{"42", "12, 19"}</span><span class="sxs-lookup"><span data-stu-id="01e6c-1379">{"42", "12, 19"}</span></span>|  
|`Split("192.168.0.1", ".")`|<span data-ttu-id="01e6c-1380">{"192", "168", "0", "1"}</span><span class="sxs-lookup"><span data-stu-id="01e6c-1380">{"192", "168", "0", "1"}</span></span>|  
|`Split("Alice and Bob", " AND ")`|<span data-ttu-id="01e6c-1381">{"Bob e Alice"}</span><span class="sxs-lookup"><span data-stu-id="01e6c-1381">{"Alice and Bob"}</span></span>|  
|`Split("Alice and Bob", " AND ", ,CompareMethod.Text)`|<span data-ttu-id="01e6c-1382">{"Alice", "Bob"}</span><span class="sxs-lookup"><span data-stu-id="01e6c-1382">{"Alice", "Bob"}</span></span>|  
|`Split("someone@example.com", "@",1)`|<span data-ttu-id="01e6c-1383">{"someone@example.com"}</span><span class="sxs-lookup"><span data-stu-id="01e6c-1383">{"someone@example.com"}</span></span>|  
|`Split("someone@example.com", "@",2)`|<span data-ttu-id="01e6c-1384">{"someone", "example.com"}</span><span class="sxs-lookup"><span data-stu-id="01e6c-1384">{"someone", "example.com"}</span></span>|  
  
 <span data-ttu-id="01e6c-1385">Il `Compare` argomento può avere i valori seguenti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1385">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="01e6c-1386">Costante</span><span class="sxs-lookup"><span data-stu-id="01e6c-1386">Constant</span></span>|<span data-ttu-id="01e6c-1387">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-1387">Description</span></span>|<span data-ttu-id="01e6c-1388">Valore</span><span class="sxs-lookup"><span data-stu-id="01e6c-1388">Value</span></span>|  
|-|-|-|  
|`CompareMethod.Binary`|<span data-ttu-id="01e6c-1389">Esegue un confronto binario</span><span class="sxs-lookup"><span data-stu-id="01e6c-1389">Performs a binary comparison</span></span>|<span data-ttu-id="01e6c-1390">0</span><span class="sxs-lookup"><span data-stu-id="01e6c-1390">0</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="01e6c-1391">Esegue un confronto di testo</span><span class="sxs-lookup"><span data-stu-id="01e6c-1391">Performs a textual comparison</span></span>|<span data-ttu-id="01e6c-1392">1</span><span class="sxs-lookup"><span data-stu-id="01e6c-1392">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1393">Nell'esempio seguente viene illustrato come suddividere una stringa in corrispondenza degli spazi.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1393">The following example demonstrates how to split a string at its spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#13)]  
  
 <span data-ttu-id="01e6c-1394">Nell'esempio seguente viene illustrato come suddividere le stringhe con delimitatori di più di una riga e filtrare le stringhe vuote.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1394">The following example demonstrates how to split strings with multiple delimiters in a row and filter out the empty strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Join" />
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1395">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1395">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StrComp">
      <MemberSignature Language="C#" Value="public static int StrComp (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 StrComp(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrComp (String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member StrComp : string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.StrComp (String1, String2, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String1" Type="System.String" />
        <Parameter Name="String2" Type="System.String" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="String1">
          <span data-ttu-id="01e6c-1396">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1396">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1397">Qualsiasi espressione <see langword="String" /> valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1397">Any valid <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="String2">
          <span data-ttu-id="01e6c-1398">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1398">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1399">Qualsiasi espressione <see langword="String" /> valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1399">Any valid <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Compare">
          <span data-ttu-id="01e6c-1400">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1400">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-1401">Specifica il tipo di confronto delle stringhe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1401">Specifies the type of string comparison.</span>
          </span>
          <span data-ttu-id="01e6c-1402">Se <paramref name="Compare" /> viene omesso, il tipo di confronto viene determinato dall'impostazione di <see langword="Option Compare" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1402">If <paramref name="Compare" /> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1403">Restituisce -1, 0 o 1 in base al risultato di un confronto tra stringhe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1403">Returns -1, 0, or 1, based on the result of a string comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1404">La funzione <see langword="StrComp" /> restituisce i seguenti valori:</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1404">The <see langword="StrComp" /> function has the following return values.</span>
          </span>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="01e6c-1405">Se</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-1405">If</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-1406">StrComp restituirà</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-1406">StrComp returns</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-1407">
                  <paramref name="String1" /> si trova nell'ordine prima di <paramref name="String2" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-1407">
                    <paramref name="String1" /> sorts ahead of <paramref name="String2" /></span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-1408">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-1408">-1</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-1409">
                  <paramref name="String1" /> è uguale a <paramref name="String2" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-1409">
                    <paramref name="String1" /> is equal to <paramref name="String2" /></span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-1410">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-1410">0</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="01e6c-1411">
                  <paramref name="String1" /> si trova nell'ordine dopo <paramref name="String2" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-1411">
                    <paramref name="String1" /> sorts after <paramref name="String2" /></span>
                </span>
              </term>
              <description>
                <span data-ttu-id="01e6c-1412">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="01e6c-1412">1</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1413">Le stringhe vengono confrontate in valori di ordinamento alfanumerico a partire dal primo carattere.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1413">The strings are compared by alphanumeric sort values beginning with the first character.</span></span> <span data-ttu-id="01e6c-1414">Per ulteriori informazioni sui confronti binari, testo e di ordinamento, vedere [istruzione Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1414">For further information on binary comparisons, textual comparisons, and sort order, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 <span data-ttu-id="01e6c-1415">Le impostazioni dell'argomento `Compare` sono le seguenti:</span><span class="sxs-lookup"><span data-stu-id="01e6c-1415">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="01e6c-1416">Costante</span><span class="sxs-lookup"><span data-stu-id="01e6c-1416">Constant</span></span>|<span data-ttu-id="01e6c-1417">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-1417">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="01e6c-1418">Esegue un confronto binario, basato su un ordinamento derivato dalle rappresentazioni binarie interne dei caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1418">Performs a binary comparison, based on a sort order derived from the internal binary representations of the characters.</span></span>|  
|`Text`|<span data-ttu-id="01e6c-1419">Esegue un confronto di testo, in base all'ordinamento senza distinzione tra maiuscole varia a seconda del sistema `LocaleID` valore.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1419">Performs a text comparison, based on a case-insensitive text sort order determined by your system's `LocaleID` value.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1420">Questo esempio viene usato il `StrComp` funzione per restituire i risultati di un confronto tra stringhe.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1420">This example uses the `StrComp` function to return the results of a string comparison.</span></span>  
  
 [!code-vb[VbVbalrStrings#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-1421">Il valore <paramref name="Compare" /> non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1421">
              <paramref name="Compare" /> value is not valid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.InStr" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1422">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1422">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md">
          <span data-ttu-id="01e6c-1423">Stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1423">Strings in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md">
          <span data-ttu-id="01e6c-1424">Introduzione alle stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1424">Introduction to Strings in Visual Basic</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StrConv">
      <MemberSignature Language="C#" Value="public static string StrConv (string str, Microsoft.VisualBasic.VbStrConv Conversion, int LocaleID = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrConv(string str, valuetype Microsoft.VisualBasic.VbStrConv Conversion, int32 LocaleID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrConv (str As String, Conversion As VbStrConv, Optional LocaleID As Integer = 0) As String" />
      <MemberSignature Language="F#" Value="static member StrConv : string * Microsoft.VisualBasic.VbStrConv * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrConv (str, Conversion, LocaleID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Conversion" Type="Microsoft.VisualBasic.VbStrConv" />
        <Parameter Name="LocaleID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="01e6c-1425">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1425">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1426">Espressione <see langword="String" /> da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1426">
              <see langword="String" /> expression to be converted.</span>
          </span>
        </param>
        <param name="Conversion">
          <span data-ttu-id="01e6c-1427">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1427">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1428">Membro <see cref="T:Microsoft.VisualBasic.VbStrConv" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1428">
              <see cref="T:Microsoft.VisualBasic.VbStrConv" /> member.</span>
          </span>
          <span data-ttu-id="01e6c-1429">Valore dell'enumerazione che specifica il tipo di conversione da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1429">The enumeration value specifying the type of conversion to perform.</span>
          </span>
        </param>
        <param name="LocaleID">
          <span data-ttu-id="01e6c-1430">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1430">Optional.</span>
          </span>
          <span data-ttu-id="01e6c-1431">Valore di <see langword="LocaleID" />, se diverso dal valore di <see langword="LocaleID" /> del sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1431">The <see langword="LocaleID" /> value, if different from the system <see langword="LocaleID" /> value.</span>
          </span>
          <span data-ttu-id="01e6c-1432">(Il valore predefinito è il valore di <see langword="LocaleID" /> del sistema.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1432">(The system <see langword="LocaleID" /> value is the default.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1433">Restituisce una stringa convertita come specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1433">Returns a string converted as specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1434">Restituisce una stringa convertita come specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1434">Returns a string converted as specified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1435">Le costanti `VbStrConv.Wide`, `VbStrConv.Narrow`, `VbStrConv.SimplifiedChinese`, `VbStrConv.TraditionalChinese`, `VbStrConv.Katakana`, e `VbStrConv.Hiragana` possono causare errori di run-time quando usato in impostazioni locali in cui non si applicano, ma non sempre: le costanti `VbStrConv.Katakana` e`VbStrConv.Hiragana`può essere usato in un sistema non giapponese con installato il Language Pack in giapponese.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1435">The constants `VbStrConv.Wide`, `VbStrConv.Narrow`, `VbStrConv.SimplifiedChinese`, `VbStrConv.TraditionalChinese`, `VbStrConv.Katakana`, and `VbStrConv.Hiragana` can cause run-time errors when used in locales where they do not apply, but not always: the constants `VbStrConv.Katakana` and `VbStrConv.Hiragana` can be used in a non-Japanese system with the Japanese Language Pack installed.</span></span> <span data-ttu-id="01e6c-1436">Inoltre, l'utilizzo delle costanti `VbStrConv.Wide` e `VbStrConv.Narrow` è supportata in qualsiasi sistema con una lingua orientale asiatica installata.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1436">In addition, use of the constants `VbStrConv.Wide` and `VbStrConv.Narrow` is supported on any system with an East Asian language installed.</span></span>  
  
 <span data-ttu-id="01e6c-1437">Questa funzione utilizza le informazioni dell'applicazione delle impostazioni cultura quando si modifica la stringa in modo che le modifiche delle lettere maiuscole sono appropriate per le impostazioni locali in cui viene utilizzata l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1437">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01e6c-1438">Se decisioni relative alla sicurezza in base al risultato di un'operazione di modifica di maiuscole o confronto effettuate dall'applicazione, quindi l'operazione deve usare la <xref:System.String.Compare%2A?displayProperty=nameWithType> metodo e passare <xref:System.StringComparison.Ordinal> o <xref:System.StringComparison.OrdinalIgnoreCase> per il `comparisonType` argomento.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1438">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="01e6c-1439">Per altre informazioni, vedere [modo in cui le impostazioni cultura influisce sulle stringhe in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1439">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
 <span data-ttu-id="01e6c-1440">Le impostazioni dell'argomento `Conversion` sono le seguenti:</span><span class="sxs-lookup"><span data-stu-id="01e6c-1440">The `Conversion` argument settings are:</span></span>  
  
|<span data-ttu-id="01e6c-1441">Membro di enumerazione</span><span class="sxs-lookup"><span data-stu-id="01e6c-1441">Enumeration member</span></span>|<span data-ttu-id="01e6c-1442">Descrizione</span><span class="sxs-lookup"><span data-stu-id="01e6c-1442">Description</span></span>|  
|-|-|  
|`VbStrConv.None`|<span data-ttu-id="01e6c-1443">Non esegue alcuna conversione</span><span class="sxs-lookup"><span data-stu-id="01e6c-1443">Performs no conversion</span></span>|  
|`VbStrConv.LinguisticCasing`|<span data-ttu-id="01e6c-1444">Usa regole linguistiche per le maiuscole e minuscole, invece del File System (impostazione predefinita).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1444">Uses linguistic rules for casing, rather than File System (default).</span></span> <span data-ttu-id="01e6c-1445">Valido con `VbStrConv.UpperCase` e `VbStrConv.LowerCase` solo.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1445">Valid with `VbStrConv.UpperCase` and `VbStrConv.LowerCase` only.</span></span>|  
|`VbStrConv.UpperCase`|<span data-ttu-id="01e6c-1446">Converte la stringa in lettere maiuscole.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1446">Converts the string to uppercase characters.</span></span>|  
|`VbStrConv.LowerCase`|<span data-ttu-id="01e6c-1447">Converte la stringa specificata in lettere minuscole.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1447">Converts the string to lowercase characters.</span></span>|  
|`VbStrConv.ProperCase`|<span data-ttu-id="01e6c-1448">Converte la prima lettera di ogni parola nella stringa in lettere maiuscole.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1448">Converts the first letter of every word in string to uppercase.</span></span>|  
|<span data-ttu-id="01e6c-1449">`VbStrConv.Wide` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="01e6c-1449">`VbStrConv.Wide` <sup>\*</sup></span></span>|<span data-ttu-id="01e6c-1450">Converte i caratteri narrow ovvero a metà larghezza, caratteri nella stringa a caratteri wide (a larghezza intera).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1450">Converts narrow (half-width) characters in the string to wide (full-width) characters.</span></span> [!INCLUDE[vbstrconv-wide](~/includes/vbstrconv-wide-md.md)]|  
|<span data-ttu-id="01e6c-1451">`VbStrConv.Narrow` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="01e6c-1451">`VbStrConv.Narrow` <sup>\*</sup></span></span>|<span data-ttu-id="01e6c-1452">Converte i caratteri wide (a larghezza intera) della stringa in caratteri stretti (metà larghezza).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1452">Converts wide (full-width) characters in the string to narrow (half-width) characters.</span></span>|  
|<span data-ttu-id="01e6c-1453">`VbStrConv.Katakana` <sup>\*\*</sup></span><span class="sxs-lookup"><span data-stu-id="01e6c-1453">`VbStrConv.Katakana` <sup>\*\*</sup></span></span>|<span data-ttu-id="01e6c-1454">Converte i caratteri Hiragana della stringa in caratteri Katakana.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1454">Converts Hiragana characters in the string to Katakana characters.</span></span>|  
|<span data-ttu-id="01e6c-1455">`VbStrConv.Hiragana` <sup>\*\*</sup></span><span class="sxs-lookup"><span data-stu-id="01e6c-1455">`VbStrConv.Hiragana` <sup>\*\*</sup></span></span>|<span data-ttu-id="01e6c-1456">Converte i caratteri Katakana della stringa in caratteri Hiragana.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1456">Converts Katakana characters in the string to Hiragana characters.</span></span>|  
|<span data-ttu-id="01e6c-1457">`VbStrConv.SimplifiedChinese` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="01e6c-1457">`VbStrConv.SimplifiedChinese` <sup>\*</sup></span></span>|<span data-ttu-id="01e6c-1458">Converte i caratteri in cinese tradizionale a cinese semplificato.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1458">Converts Traditional Chinese characters to Simplified Chinese.</span></span>|  
|<span data-ttu-id="01e6c-1459">`VbStrConv.TraditionalChinese` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="01e6c-1459">`VbStrConv.TraditionalChinese` <sup>\*</sup></span></span>|<span data-ttu-id="01e6c-1460">Converte i caratteri in cinese semplificato al cinese tradizionale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1460">Converts Simplified Chinese characters to Traditional Chinese.</span></span>|  
  
 <span data-ttu-id="01e6c-1461"><sup>\*</sup> Si applica alle lingue asiatiche.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1461"><sup>\*</sup> Applies to Asian locales.</span></span>  
  
 <span data-ttu-id="01e6c-1462"><sup>\*\*</sup> Si applica solo a Giappone.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1462"><sup>\*\*</sup> Applies to Japan only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01e6c-1463">Queste costanti vengono specificate in .NET Framework common language runtime.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1463">These constants are specified in the .NET Framework common language runtime.</span></span> <span data-ttu-id="01e6c-1464">Di conseguenza, possono essere utilizzati in qualsiasi punto nel codice al posto dei valori effettivi.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1464">As a result, they can be used anywhere in your code in place of the actual values.</span></span> <span data-ttu-id="01e6c-1465">La maggior parte può essere combinata (ad esempio, `UpperCase + Wide`), tranne quando sono si escludono a vicenda (ad esempio, `VbStrConv.Wide + VbStrConv.Narrow`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1465">Most can be combined (for example, `UpperCase + Wide`), except when they are mutually exclusive (for example, `VbStrConv.Wide + VbStrConv.Narrow`).</span></span>  
  
 <span data-ttu-id="01e6c-1466">Di seguito sono separatori delle parole valido per le maiuscole e minuscole appropriata: Null (`Chr$(0)`), tabulazione orizzontale (`Chr$(9)`), avanzamento riga (`Chr$(10)`), tabulazione verticale (`Chr$(11)`), avanzamento modulo (`Chr$(12)`), ritorno a capo (`Chr$(13)`), spazio ( Single byte character set) (`Chr$(32)`).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1466">The following are valid word separators for proper casing: Null (`Chr$(0)`), horizontal tab (`Chr$(9)`), line feed (`Chr$(10)`), vertical tab (`Chr$(11)`), form feed (`Chr$(12)`), carriage return (`Chr$(13)`), space (single-byte character set) (`Chr$(32)`).</span></span> <span data-ttu-id="01e6c-1467">Il valore effettivo di uno spazio, che può essere completo o metà larghezza, varia da paese/area geografica per le lingue dell'Asia orientale.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1467">The actual value for a space, which can be full or half width, varies by country/region for East Asian cultures.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1468">In questo esempio converte il testo in lettere minuscole.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1468">This example converts text into all lowercase letters.</span></span>  
  
 [!code-vb[VbVbalrStrings#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-1469">Oggetto <paramref name="LocaleID" /> non supportato, <paramref name="Conversion" /> &lt; 0 o &gt; 2048 oppure conversione non supportata per le impostazioni locali specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1469">Unsupported <paramref name="LocaleID" />, <paramref name="Conversion" /> &lt; 0 or &gt; 2048, or unsupported conversion for specified locale.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1470">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1470">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="01e6c-1471">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1471">Type Conversion Functions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="StrDup">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01e6c-1472">Restituisce una stringa o un oggetto composto dal carattere specificato ripetuto per il numero di volte specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1472">Returns a string or object consisting of the specified character repeated the specified number of times.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static string StrDup (int Number, char Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrDup(int32 Number, char Character) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrDup(int Number, char Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * char -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Character" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="01e6c-1473">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1473">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1474">Espressione <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1474">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-1475">Lunghezza della stringa da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1475">The length to the string to be returned.</span>
          </span>
        </param>
        <param name="Character">
          <span data-ttu-id="01e6c-1476">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1476">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1477">Qualsiasi espressione <see langword="Char" />, <see langword="String" /> o <see langword="Object" /> valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1477">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-1478">Verrà utilizzato solo il primo carattere dell'espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1478">Only the first character of the expression will be used.</span>
          </span>
          <span data-ttu-id="01e6c-1479">Se Character è di tipo <see langword="Object" />, deve contenere un oggetto <see langword="Char" /> o un valore <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1479">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1480">Restituisce una stringa o un oggetto composto dal carattere specificato ripetuto per il numero di volte specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1480">Returns a string or object consisting of the specified character repeated the specified number of times.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1481">Restituisce una stringa o un oggetto composto dal carattere specificato ripetuto per il numero di volte specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1481">Returns a string or object consisting of the specified character repeated the specified number of times.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1482">Questa funzione restituisce un `String` costituito da caratteri ripetuti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1482">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="01e6c-1483">Il carattere che costituisce la stringa è il primo carattere il `Character` argomento che viene duplicato `Number` volte.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1483">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1484">Questo esempio viene usato il `StrDup` duplicati di funzione per restituire una stringa di caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1484">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-1485">
            <paramref name="Number" /> è minore di 0 o il tipo di <paramref name="Character" /> non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1485">
              <paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01e6c-1486">
            <paramref name="Character" /> è <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1486">
              <paramref name="Character" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1487">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1487">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static object StrDup (int Number, object Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static object StrDup(int32 Number, object Character) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ StrDup(int Number, System::Object ^ Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * obj -&gt; obj" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Character" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="01e6c-1488">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1488">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1489">Espressione <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1489">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-1490">Lunghezza della stringa da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1490">The length to the string to be returned.</span>
          </span>
        </param>
        <param name="Character">
          <span data-ttu-id="01e6c-1491">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1491">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1492">Qualsiasi espressione <see langword="Char" />, <see langword="String" /> o <see langword="Object" /> valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1492">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-1493">Verrà utilizzato solo il primo carattere dell'espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1493">Only the first character of the expression will be used.</span>
          </span>
          <span data-ttu-id="01e6c-1494">Se Character è di tipo <see langword="Object" />, deve contenere un oggetto <see langword="Char" /> o un valore <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1494">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1495">Restituisce una stringa o un oggetto composto dal carattere specificato ripetuto per il numero di volte specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1495">Returns a string or object consisting of the specified character repeated the specified number of times.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1496">Restituisce una stringa o un oggetto composto dal carattere specificato ripetuto per il numero di volte specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1496">Returns a string or object consisting of the specified character repeated the specified number of times.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1497">Questa funzione restituisce un `String` costituito da caratteri ripetuti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1497">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="01e6c-1498">Il carattere che costituisce la stringa è il primo carattere il `Character` argomento che viene duplicato `Number` volte.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1498">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1499">Questo esempio viene usato il `StrDup` duplicati di funzione per restituire una stringa di caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1499">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-1500">
            <paramref name="Number" /> è minore di 0 o il tipo di <paramref name="Character" /> non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1500">
              <paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01e6c-1501">
            <paramref name="Character" /> è <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1501">
              <paramref name="Character" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1502">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1502">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static string StrDup (int Number, string Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrDup(int32 Number, string Character) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrDup(int Number, System::String ^ Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Character" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="01e6c-1503">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1503">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1504">Espressione <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1504">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-1505">Lunghezza della stringa da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1505">The length to the string to be returned.</span>
          </span>
        </param>
        <param name="Character">
          <span data-ttu-id="01e6c-1506">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1506">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1507">Qualsiasi espressione <see langword="Char" />, <see langword="String" /> o <see langword="Object" /> valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1507">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span>
          </span>
          <span data-ttu-id="01e6c-1508">Verrà utilizzato solo il primo carattere dell'espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1508">Only the first character of the expression will be used.</span>
          </span>
          <span data-ttu-id="01e6c-1509">Se Character è di tipo <see langword="Object" />, deve contenere un oggetto <see langword="Char" /> o un valore <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1509">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1510">Restituisce una stringa o un oggetto composto dal carattere specificato ripetuto per il numero di volte specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1510">Returns a string or object consisting of the specified character repeated the specified number of times.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1511">Restituisce una stringa o un oggetto composto dal carattere specificato ripetuto per il numero di volte specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1511">Returns a string or object consisting of the specified character repeated the specified number of times.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1512">Questa funzione restituisce un `String` costituito da caratteri ripetuti.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1512">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="01e6c-1513">Il carattere che costituisce la stringa è il primo carattere il `Character` argomento che viene duplicato `Number` volte.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1513">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1514">Questo esempio viene usato il `StrDup` duplicati di funzione per restituire una stringa di caratteri.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1514">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01e6c-1515">
            <paramref name="Number" /> è minore di 0 o il tipo di <paramref name="Character" /> non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1515">
              <paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01e6c-1516">
            <paramref name="Character" /> è <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1516">
              <paramref name="Character" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1517">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1517">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="StrReverse">
      <MemberSignature Language="C#" Value="public static string StrReverse (string Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrReverse(string Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrReverse (Expression As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrReverse(System::String ^ Expression);" />
      <MemberSignature Language="F#" Value="static member StrReverse : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrReverse Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="01e6c-1518">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1518">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1519">Espressione String contenente i caratteri da invertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1519">String expression whose characters are to be reversed.</span>
          </span>
          <span data-ttu-id="01e6c-1520">Se <paramref name="Expression" /> è una stringa di lunghezza zero (""), viene restituita una stringa di lunghezza zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1520">If <paramref name="Expression" /> is a zero-length string (""), a zero-length string is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1521">Restituisce una stringa nella quale è stato invertito l'ordine dei caratteri della stringa specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1521">Returns a string in which the character order of a specified string is reversed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1522">Restituisce una stringa nella quale è stato invertito l'ordine dei caratteri della stringa specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1522">Returns a string in which the character order of a specified string is reversed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1523">Il `StrReverse` funzione restituisce una stringa che contiene gli stessi caratteri `Expression`, ma in ordine inverso.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1523">The `StrReverse` function returns a string that contains the same characters as `Expression`, but in the opposite order.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrStrings#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1524">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1524">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static string Trim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Trim(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Trim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Trim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Trim str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="01e6c-1525">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1525">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1526">Qualsiasi espressione <see langword="String" /> valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1526">Any valid <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1527">Restituisce una stringa contenente una copia di una stringa specificata senza spazi iniziali (<see langword="LTrim" />), senza spazi finali (<see langword="RTrim" />) o senza spazi iniziali o finali (<see langword="Trim" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1527">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1528">Restituisce una stringa contenente una copia di una stringa specificata senza spazi iniziali (<see langword="LTrim" />), senza spazi finali (<see langword="RTrim" />) o senza spazi iniziali o finali (<see langword="Trim" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1528">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1529">Il `LTrim`, `RTrim`, e `Trim` funzioni rimuovono gli spazi alla fine delle stringhe.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1529">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1530">In questo esempio vengono utilizzate la funzione `LTrim` per rimuovere gli spazi iniziali e la funzione `RTrim` per rimuovere gli spazi finali da una variabile String.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1530">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="01e6c-1531">Viene utilizzata la funzione `Trim` per eliminare entrambi i tipi di spazi.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1531">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1532">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1532">String Manipulation Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UCase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01e6c-1533">Restituisce una stringa o un carattere contenente la stringa specificata convertita in lettere maiuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1533">Returns a string or character containing the specified string converted to uppercase.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UCase">
      <MemberSignature Language="C#" Value="public static char UCase (char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static char UCase(char Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.UCase(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function UCase (Value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char UCase(char Value);" />
      <MemberSignature Language="F#" Value="static member UCase : char -&gt; char" Usage="Microsoft.VisualBasic.Strings.UCase Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Value">
          <span data-ttu-id="01e6c-1534">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1534">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1535">Qualsiasi espressione <see langword="String" /> o <see langword="Char" /> valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1535">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1536">Restituisce una stringa o un carattere contenente la stringa specificata convertita in lettere maiuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1536">Returns a string or character containing the specified string converted to uppercase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1537">Restituisce una stringa o un carattere contenente la stringa specificata convertita in lettere maiuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1537">Returns a string or character containing the specified string converted to uppercase.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1538">Solo lettere minuscole vengono convertite in maiuscole. le lettere maiuscole e i caratteri rimangono invariati.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1538">Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="01e6c-1539">Questa funzione utilizza le informazioni dell'applicazione delle impostazioni cultura quando si modifica la stringa in modo che le modifiche delle lettere maiuscole sono appropriate per le impostazioni locali in cui viene utilizzata l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1539">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01e6c-1540">Se decisioni relative alla sicurezza in base al risultato di un'operazione di modifica di maiuscole o confronto effettuate dall'applicazione, quindi l'operazione deve usare la <xref:System.String.Compare%2A?displayProperty=nameWithType> metodo e passare <xref:System.StringComparison.Ordinal> o <xref:System.StringComparison.OrdinalIgnoreCase> per il `comparisonType` argomento.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1540">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="01e6c-1541">Per altre informazioni, vedere [modo in cui le impostazioni cultura influisce sulle stringhe in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1541">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1542">Nell'esempio seguente la funzione `UCase` viene utilizzata per restituire una versione in lettere maiuscole di una stringa:</span><span class="sxs-lookup"><span data-stu-id="01e6c-1542">This example uses the `UCase` function to return an uppercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.LCase" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1543">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1543">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md">
          <span data-ttu-id="01e6c-1544">Stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1544">Strings in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md">
          <span data-ttu-id="01e6c-1545">Introduzione alle stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1545">Introduction to Strings in Visual Basic</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="UCase">
      <MemberSignature Language="C#" Value="public static string UCase (string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string UCase(string Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.UCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UCase (Value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UCase(System::String ^ Value);" />
      <MemberSignature Language="F#" Value="static member UCase : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.UCase Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Value">
          <span data-ttu-id="01e6c-1546">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1546">Required.</span>
          </span>
          <span data-ttu-id="01e6c-1547">Qualsiasi espressione <see langword="String" /> o <see langword="Char" /> valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1547">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01e6c-1548">Restituisce una stringa o un carattere contenente la stringa specificata convertita in lettere maiuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1548">Returns a string or character containing the specified string converted to uppercase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01e6c-1549">Restituisce una stringa o un carattere contenente la stringa specificata convertita in lettere maiuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1549">Returns a string or character containing the specified string converted to uppercase.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01e6c-1550">Solo lettere minuscole vengono convertite in maiuscole. le lettere maiuscole e i caratteri rimangono invariati.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1550">Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="01e6c-1551">Questa funzione utilizza le informazioni dell'applicazione delle impostazioni cultura quando si modifica la stringa in modo che le modifiche delle lettere maiuscole sono appropriate per le impostazioni locali in cui viene utilizzata l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1551">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01e6c-1552">Se decisioni relative alla sicurezza in base al risultato di un'operazione di modifica di maiuscole o confronto effettuate dall'applicazione, quindi l'operazione deve usare la <xref:System.String.Compare%2A?displayProperty=nameWithType> metodo e passare <xref:System.StringComparison.Ordinal> o <xref:System.StringComparison.OrdinalIgnoreCase> per il `comparisonType` argomento.</span><span class="sxs-lookup"><span data-stu-id="01e6c-1552">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="01e6c-1553">Per altre informazioni, vedere [modo in cui le impostazioni cultura influisce sulle stringhe in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="01e6c-1553">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01e6c-1554">Nell'esempio seguente la funzione `UCase` viene utilizzata per restituire una versione in lettere maiuscole di una stringa:</span><span class="sxs-lookup"><span data-stu-id="01e6c-1554">This example uses the `UCase` function to return an uppercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.LCase" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md">
          <span data-ttu-id="01e6c-1555">Riepilogo della modifica delle stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1555">String Manipulation Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md">
          <span data-ttu-id="01e6c-1556">Stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1556">Strings in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md">
          <span data-ttu-id="01e6c-1557">Introduzione alle stringhe in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="01e6c-1557">Introduction to Strings in Visual Basic</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>