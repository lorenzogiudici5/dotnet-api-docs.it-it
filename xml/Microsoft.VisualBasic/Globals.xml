<Type Name="Globals" FullName="Microsoft.VisualBasic.Globals">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5f9b6c0a0c82cbfe3ed05a5c498df5c3f1787fe6" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34173885" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Globals" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Globals extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Globals" />
  <TypeSignature Language="VB.NET" Value="Public Module Globals" />
  <TypeSignature Language="C++ CLI" Value="public ref class Globals sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Il modulo <see langword="Globals" /> contiene funzioni del motore di script.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo modulo supporta le parole chiave del linguaggio Visual Basic e membri delle librerie di runtime che forniscono informazioni sul runtime attualmente in uso.  
  
   
  
## Examples  
 L'esempio seguente usa il `ScriptEngineMajorVersion` proprietà e relative proprietà per restituire una stringa che descrive le informazioni di runtime corrente:  
  
```vb  
Function getRuntimeInfo() As String  
    Dim runtime As String = ScriptEngine & " Version "  
    runtime &= CStr(ScriptEngineMajorVersion) & "."  
    runtime &= CStr(ScriptEngineMinorVersion) & "."  
    runtime &= CStr(ScriptEngineBuildVersion)  
    ' Return the current runtime information.  
    Return runtime  
End Function  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.Globals.ScriptEngine" />
    <altmember cref="P:Microsoft.VisualBasic.Globals.ScriptEngineBuildVersion" />
    <altmember cref="P:Microsoft.VisualBasic.Globals.ScriptEngineMajorVersion" />
    <altmember cref="P:Microsoft.VisualBasic.Globals.ScriptEngineMinorVersion" />
  </Docs>
  <Members>
    <Member MemberName="ScriptEngine">
      <MemberSignature Language="C#" Value="public static string ScriptEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ScriptEngine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Globals.ScriptEngine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScriptEngine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ScriptEngine { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Restituisce un valore <see langword="String" /> che rappresenta il runtime correntemente in uso.</summary>
        <value>Restituisce un valore <see langword="String" /> che rappresenta il runtime correntemente in uso.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `ScriptEngine` proprietà restituisce la stringa "VB".  
  
 È possibile utilizzare `ScriptEngine` quando l'applicazione è in esecuzione come programma autonomo, in uno script o in un'applicazione host.  
  
   
  
## Examples  
 L'esempio seguente usa il `ScriptEngine` proprietà e relative proprietà per restituire una stringa che descrive le informazioni in fase di esecuzione corrente:  
  
 [!code-vb[VbVbalrScriptEngineProperties#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrScriptEngineProperties/VB/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Globals.ScriptEngineBuildVersion" />
        <altmember cref="P:Microsoft.VisualBasic.Globals.ScriptEngineMajorVersion" />
        <altmember cref="P:Microsoft.VisualBasic.Globals.ScriptEngineMinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="ScriptEngineBuildVersion">
      <MemberSignature Language="C#" Value="public static int ScriptEngineBuildVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 ScriptEngineBuildVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Globals.ScriptEngineBuildVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScriptEngineBuildVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int ScriptEngineBuildVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Restituisce un valore <see langword="Integer" /> contenente il numero della versione build del runtime correntemente utilizzato.</summary>
        <value>Restituisce un valore <see langword="Integer" /> contenente il numero della versione build del runtime correntemente utilizzato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito corrisponde direttamente alle informazioni sulla versione contenute nella DLL per il runtime corrente.  
  
 È possibile utilizzare `ScriptEngineBuildVersion` quando l'applicazione è in esecuzione come programma autonomo, in uno script o in un'applicazione host.  
  
   
  
## Examples  
 L'esempio seguente usa il `ScriptEngineBuildVersion` proprietà e relative proprietà per restituire una stringa che descrive le informazioni in fase di esecuzione corrente:  
  
 [!code-vb[VbVbalrScriptEngineProperties#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrScriptEngineProperties/VB/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Globals.ScriptEngine" />
        <altmember cref="P:Microsoft.VisualBasic.Globals.ScriptEngineMajorVersion" />
        <altmember cref="P:Microsoft.VisualBasic.Globals.ScriptEngineMinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="ScriptEngineMajorVersion">
      <MemberSignature Language="C#" Value="public static int ScriptEngineMajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 ScriptEngineMajorVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Globals.ScriptEngineMajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScriptEngineMajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int ScriptEngineMajorVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Restituisce un valore <see langword="Integer" /> contenente il numero di versione principale del runtime correntemente utilizzato.</summary>
        <value>Restituisce un valore <see langword="Integer" /> contenente il numero di versione principale del runtime correntemente utilizzato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito corrisponde direttamente alle informazioni sulla versione contenute nella DLL per il runtime corrente.  
  
 È possibile utilizzare `ScriptEngineMajorVersion` quando l'applicazione è in esecuzione come programma autonomo, in uno script o in un'applicazione host.  
  
   
  
## Examples  
 L'esempio seguente usa il `ScriptEngineMajorVersion` proprietà e relative proprietà per restituire una stringa che descrive le informazioni in fase di esecuzione corrente:  
  
 [!code-vb[VbVbalrScriptEngineProperties#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrScriptEngineProperties/VB/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Globals.ScriptEngine" />
        <altmember cref="P:Microsoft.VisualBasic.Globals.ScriptEngineBuildVersion" />
        <altmember cref="P:Microsoft.VisualBasic.Globals.ScriptEngineMinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="ScriptEngineMinorVersion">
      <MemberSignature Language="C#" Value="public static int ScriptEngineMinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 ScriptEngineMinorVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Globals.ScriptEngineMinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScriptEngineMinorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int ScriptEngineMinorVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Restituisce un valore <see langword="Integer" /> contenente il numero di versione secondario del runtime in uso.</summary>
        <value>Restituisce un valore <see langword="Integer" /> contenente il numero di versione secondario del runtime in uso.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore restituito corrisponde direttamente alle informazioni sulla versione contenute nella DLL per il runtime corrente.  
  
 È possibile utilizzare `ScriptEngineMinorVersion` quando l'applicazione è in esecuzione come programma autonomo, in uno script o in un'applicazione host.  
  
   
  
## Examples  
 L'esempio seguente usa il `ScriptEngineMinorVersion` proprietà e relative proprietà per restituire una stringa che descrive le informazioni in fase di esecuzione corrente:  
  
 [!code-vb[VbVbalrScriptEngineProperties#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrScriptEngineProperties/VB/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Globals.ScriptEngine" />
        <altmember cref="P:Microsoft.VisualBasic.Globals.ScriptEngineBuildVersion" />
        <altmember cref="P:Microsoft.VisualBasic.Globals.ScriptEngineMajorVersion" />
      </Docs>
    </Member>
  </Members>
</Type>