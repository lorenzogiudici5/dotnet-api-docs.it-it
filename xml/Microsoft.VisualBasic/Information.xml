<Type Name="Information" FullName="Microsoft.VisualBasic.Information">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f658f503442775d2317520becc43ff928f032244" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48597090" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Information" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Information extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Information" />
  <TypeSignature Language="VB.NET" Value="Public Module Information" />
  <TypeSignature Language="C++ CLI" Value="public ref class Information sealed" />
  <TypeSignature Language="F#" Value="type Information = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="252b5-101">Il modulo <see langword="Information" /> contiene procedure che consentono di restituire, testare o verificare informazioni.</span>
      <span class="sxs-lookup">
        <span data-stu-id="252b5-101">The <see langword="Information" /> module contains the procedures used to return, test for, or verify information.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-102">Questo modulo supporta le parole chiave del linguaggio Visual Basic e membri delle librerie di runtime che forniscono informazioni sull'errore, convalidano i dati, determinano i limiti della matrice e recuperano le informazioni sul tipo e il colore dei dati.</span><span class="sxs-lookup"><span data-stu-id="252b5-102">This module supports the Visual Basic language keywords and run-time library members that provide error information, validate data, determine array bounds, and retrieve data type and color information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="252b5-103">L'esempio seguente usa il `VbTypeName` funzione per restituire i nomi dei tipi di dati per diverse variabili.</span><span class="sxs-lookup"><span data-stu-id="252b5-103">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
```vb  
Dim sysDateName As String = "System.DateTime"  
Dim sysShortName As String = "Int16"  
Dim sysBadName As String = "Nonsense"  
Dim testVbName As String  
testVbName = VbTypeName(sysDateName)   
' Returns "Date".  
testVbName = VbTypeName(sysShortName)   
' Returns "Short".  
testVbName = VbTypeName(sysBadName)   
' Returns Nothing.  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/information-and-interaction-summary.md">
      <span data-ttu-id="252b5-104">Riepilogo delle informazioni e dell'interazione</span>
      <span class="sxs-lookup">
        <span data-stu-id="252b5-104">Information and Interaction Summary</span>
      </span>
    </related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/data-types-summary.md">
      <span data-ttu-id="252b5-105">Data Types Summary</span>
      <span class="sxs-lookup">
        <span data-stu-id="252b5-105">Data Types Summary</span>
      </span>
    </related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/declarations-and-constants-summary.md">
      <span data-ttu-id="252b5-106">Riepilogo delle dichiarazioni e delle costanti</span>
      <span class="sxs-lookup">
        <span data-stu-id="252b5-106">Declarations and Constants Summary</span>
      </span>
    </related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md">
      <span data-ttu-id="252b5-107">Parole chiave (Visual Basic)</span>
      <span class="sxs-lookup">
        <span data-stu-id="252b5-107">Keywords (Visual Basic)</span>
      </span>
    </related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md">
      <span data-ttu-id="252b5-108">Membri della libreria Run-Time Visual Basic</span>
      <span class="sxs-lookup">
        <span data-stu-id="252b5-108">Visual Basic Run-Time Library Members</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public static int Erl ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Erl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Erl" />
      <MemberSignature Language="VB.NET" Value="Public Function Erl () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Erl();" />
      <MemberSignature Language="F#" Value="static member Erl : unit -&gt; int" Usage="Microsoft.VisualBasic.Information.Erl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="252b5-109">Restituisce un valore intero che indica il numero di riga dell'ultima istruzione eseguita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-109">Returns an integer indicating the line number of the last executed statement.</span>
          </span>
          <span data-ttu-id="252b5-110">Sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-110">Read-only.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="252b5-111">Restituisce un valore intero che indica il numero di riga dell'ultima istruzione eseguita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-111">Returns an integer indicating the line number of the last executed statement.</span>
          </span>
          <span data-ttu-id="252b5-112">Sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-112">Read-only.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-113">Se Visual Basic non rileva Nessun numero di riga, restituisce 0.</span><span class="sxs-lookup"><span data-stu-id="252b5-113">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="252b5-114">Questo esempio viene usato il `Erl` propriet√† per indicare il numero di riga.</span><span class="sxs-lookup"><span data-stu-id="252b5-114">This example uses the `Erl` property to indicate the line number.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ErrObject" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Err">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.ErrObject Err ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.VisualBasic.ErrObject Err() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Err" />
      <MemberSignature Language="VB.NET" Value="Public Function Err () As ErrObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::ErrObject ^ Err();" />
      <MemberSignature Language="F#" Value="static member Err : unit -&gt; Microsoft.VisualBasic.ErrObject" Usage="Microsoft.VisualBasic.Information.Err " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ErrObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="252b5-115">Contiene informazioni sugli errori di runtime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-115">Contains information about run-time errors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="252b5-116">Contiene informazioni sugli errori di runtime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-116">Contains information about run-time errors.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-117">Le propriet√† del `Err` oggetto vengono impostate dal generatore di un errore, Visual Basic, un oggetto o il programmatore.</span><span class="sxs-lookup"><span data-stu-id="252b5-117">The properties of the `Err` object are set by the generator of an error‚ÄîVisual Basic, an object, or the programmer.</span></span>  
  
 <span data-ttu-id="252b5-118">Quando si verifica un errore di run-time, le propriet√† del `Err` dell'oggetto vengono inserite le informazioni che identifica in modo univoco l'errore e che √® possibile usare per gestire l'errore.</span><span class="sxs-lookup"><span data-stu-id="252b5-118">When a run-time error occurs, the properties of the `Err` object are filled with information that uniquely identifies the error and that you can use to handle the error.</span></span> <span data-ttu-id="252b5-119">Per generare un errore di run-time nel codice, usare il `Raise` (metodo).</span><span class="sxs-lookup"><span data-stu-id="252b5-119">To generate a run-time error in your code, use the `Raise` method.</span></span>  
  
 <span data-ttu-id="252b5-120">Il `Err` le propriet√† dell'oggetto vengono reimpostate su zero o stringhe di lunghezza zero ("") dopo un' `Exit Sub`, `Exit Function`, `Exit Property`, o `Resume Next` istruzione all'interno di una routine di gestione degli errori.</span><span class="sxs-lookup"><span data-stu-id="252b5-120">The `Err` object's properties are reset to zero or zero-length strings ("") after an `Exit Sub`, `Exit Function`, `Exit Property`, or `Resume Next` statement within an error-handling routine.</span></span> <span data-ttu-id="252b5-121">Usando qualsiasi forma del `Resume` istruzione di fuori di una routine di gestione degli errori non vengono reimpostate il `Err` propriet√† dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="252b5-121">Using any form of the `Resume` statement outside of an error-handling routine will not reset the `Err` object's properties.</span></span> <span data-ttu-id="252b5-122">√à possibile usare la `Clear` metodo reimpostare in modo esplicito `Err`.</span><span class="sxs-lookup"><span data-stu-id="252b5-122">You can use the `Clear` method to explicitly reset `Err`.</span></span>  
  
 <span data-ttu-id="252b5-123">Usare la `Raise` metodo anzich√© il `Error` istruzione per generare errori di runtime per gli errori di sistema e i moduli di classe.</span><span class="sxs-lookup"><span data-stu-id="252b5-123">Use the `Raise` method rather than the `Error` statement to generate run-time errors for system errors and class modules.</span></span> <span data-ttu-id="252b5-124">La decisione sull'opportunit√† di utilizzare il `Raise` metodo in un altro codice dipende dalla complessit√† delle informazioni si desidera restituire.</span><span class="sxs-lookup"><span data-stu-id="252b5-124">Your decision about whether to use the `Raise` method in other code depends on the richness of the information you want to return.</span></span>  
  
 <span data-ttu-id="252b5-125">Il `Err` √® un oggetto funzione intrinseco con ambito globale.</span><span class="sxs-lookup"><span data-stu-id="252b5-125">The `Err` object is an intrinsic object with global scope.</span></span> <span data-ttu-id="252b5-126">Pertanto, non occorre creare un'istanza nel codice.</span><span class="sxs-lookup"><span data-stu-id="252b5-126">Therefore, you do not need to create an instance of it in your code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="252b5-127">Questo esempio Usa le propriet√† del `Err` oggetto per la costruzione di una finestra di dialogo del messaggio di errore.</span><span class="sxs-lookup"><span data-stu-id="252b5-127">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="252b5-128">Si noti che se si usa il `Clear` metodo prima, quando si genera un errore di Visual Basic con il `Raise` metodo, i valori predefiniti di Visual Basic diventano le propriet√† del `Err` oggetto.</span><span class="sxs-lookup"><span data-stu-id="252b5-128">Notice that if you use the `Clear` method first, when you generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/error-statement.md">
          <span data-ttu-id="252b5-129">Istruzione Error</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-129">Error Statement</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md">
          <span data-ttu-id="252b5-130">Istruzione On Error (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-130">On Error Statement (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/exit-statement.md">
          <span data-ttu-id="252b5-131">Istruzione Exit (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-131">Exit Statement (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/resume-statement.md">
          <span data-ttu-id="252b5-132">Istruzione Resume</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-132">Resume Statement</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/error-messages/index.md">
          <span data-ttu-id="252b5-133">Messaggi di errore (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-133">Error Messages (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md">
          <span data-ttu-id="252b5-134">Istruzione Try...Catch...Finally (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-134">Try...Catch...Finally Statement (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public static bool IsArray (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsArray(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsArray (VarName As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsArray(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member IsArray : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsArray VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName">
          <span data-ttu-id="252b5-135">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-135">Required.</span>
          </span>
          <span data-ttu-id="252b5-136">Variabile <see langword="Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-136">
              <see langword="Object" /> variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="252b5-137">Restituisce un valore <see langword="Boolean" /> che indica se una variabile rimanda a una matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-137">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="252b5-138">Restituisce un valore <see langword="Boolean" /> che indica se una variabile rimanda a una matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-138">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-139">`IsArray` Restituisce `True` se la variabile punta a una matrice; in caso contrario, restituisce `False`.</span><span class="sxs-lookup"><span data-stu-id="252b5-139">`IsArray` returns `True` if the variable points to an array; otherwise, it returns `False`.</span></span> <span data-ttu-id="252b5-140">`IsArray` √® particolarmente utile con gli oggetti che possono contenere matrici.</span><span class="sxs-lookup"><span data-stu-id="252b5-140">`IsArray` is especially useful with objects that might contain arrays.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="252b5-141">Questo esempio viene usato il `IsArray` funzione per verificare se alcune variabili fanno riferimento a una matrice.</span><span class="sxs-lookup"><span data-stu-id="252b5-141">This example uses the `IsArray` function to check if several variables refer to an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/arrays/index.md">
          <span data-ttu-id="252b5-142">Matrici in Visual Basic</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-142">Arrays in Visual Basic</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsDate">
      <MemberSignature Language="C#" Value="public static bool IsDate (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDate(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDate (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDate(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsDate : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsDate Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="252b5-143">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-143">Required.</span>
          </span>
          <span data-ttu-id="252b5-144">Espressione <see langword="Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-144">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="252b5-145">Restituisce un valore <see langword="Boolean" /> che indica se un'espressione rappresenta un valore <see langword="Date" /> valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-145">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="252b5-146">Restituisce un valore <see langword="Boolean" /> che indica se un'espressione rappresenta un valore <see langword="Date" /> valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-146">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-147">`IsDate` Restituisce `True` se `Expression` √® la <xref:System.DateTime> dati digitare oppure pu√≤ essere convertito a esso; in caso contrario, restituisce `False`.</span><span class="sxs-lookup"><span data-stu-id="252b5-147">`IsDate` returns `True` if `Expression` is of the <xref:System.DateTime> data type or can be converted to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="252b5-148">Il <xref:System.DateTime> tipo di dati contiene un valore di data e un valore di ora.</span><span class="sxs-lookup"><span data-stu-id="252b5-148">The <xref:System.DateTime> data type holds both a date value and a time value.</span></span> <span data-ttu-id="252b5-149">`IsDate` Restituisce `True` se `Expression` rappresenta una data valida, un'ora valida o una data valida e ora.</span><span class="sxs-lookup"><span data-stu-id="252b5-149">`IsDate` returns `True` if `Expression` represents a valid date, a valid time, or a valid date and time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="252b5-150">L'esempio seguente usa il `IsDate` funzione per determinare se alcune variabili rappresentano valido <xref:System.DateTime> valori.</span><span class="sxs-lookup"><span data-stu-id="252b5-150">The following example uses the `IsDate` function to determine if several variables represent valid <xref:System.DateTime> values.</span></span>  
  
 [!code-vb[VbVbalrFunctions#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#35)]  
  
 <span data-ttu-id="252b5-151">Nell'esempio precedente, `IsDate` restituisce `True` per le prime quattro chiamate e `False` per l'ultima chiamata.</span><span class="sxs-lookup"><span data-stu-id="252b5-151">In the preceding example, `IsDate` returns `True` for the first four calls and `False` for the last call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDBNull(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDBNull (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDBNull(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsDBNull : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsDBNull Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="252b5-152">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-152">Required.</span>
          </span>
          <span data-ttu-id="252b5-153">Espressione <see langword="Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-153">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="252b5-154">Restituisce un valore <see langword="Boolean" /> che indica se un'espressione restituisce la classe <see cref="T:System.DBNull" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-154">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="252b5-155">Restituisce un valore <see langword="Boolean" /> che indica se un'espressione restituisce la classe <see cref="T:System.DBNull" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-155">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-156">`IsDBNull` Restituisce `True` se il tipo di dati `Expression` restituisce il <xref:System.DBNull> tipo; in caso contrario, `IsDBNull` restituisce `False`.</span><span class="sxs-lookup"><span data-stu-id="252b5-156">`IsDBNull` returns `True` if the data type of `Expression` evaluates to the <xref:System.DBNull> type; otherwise, `IsDBNull` returns `False`.</span></span>  
  
 <span data-ttu-id="252b5-157">Il <xref:System.DBNull?displayProperty=nameWithType> valore indica che il `Object` rappresenta dati inesistenti o mancanti.</span><span class="sxs-lookup"><span data-stu-id="252b5-157">The <xref:System.DBNull?displayProperty=nameWithType> value indicates that the `Object` represents missing or nonexistent data.</span></span> <span data-ttu-id="252b5-158">`DBNull` non √® identico `Nothing`, che indica che una variabile non √® ancora stata inizializzata.</span><span class="sxs-lookup"><span data-stu-id="252b5-158">`DBNull` is not the same as `Nothing`, which indicates that a variable has not yet been initialized.</span></span> <span data-ttu-id="252b5-159">`DBNull` Inoltre non √® lo stesso come una stringa di lunghezza zero (`""`), talvolta detta una stringa null.</span><span class="sxs-lookup"><span data-stu-id="252b5-159">`DBNull` is also not the same as a zero-length string (`""`), which is sometimes referred to as a null string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="252b5-160">Questo esempio Usa la `IsDBNull` funzione per determinare se una variabile viene valutato `DBNull`.</span><span class="sxs-lookup"><span data-stu-id="252b5-160">This example uses the `IsDBNull` function to determine if a variable evaluates to `DBNull`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DBNull" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsError">
      <MemberSignature Language="C#" Value="public static bool IsError (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsError(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsError (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsError(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsError : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsError Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="252b5-161">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-161">Required.</span>
          </span>
          <span data-ttu-id="252b5-162">Espressione <see langword="Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-162">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="252b5-163">Restituisce un valore <see langword="Boolean" /> che indica se un'espressione √® un tipo di eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-163">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="252b5-164">Restituisce un valore <see langword="Boolean" /> che indica se un'espressione √® un tipo di eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-164">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-165">`IsError` Restituisce `True` se l'espressione rappresenta un `Object` variabile da cui deriva il <xref:System.Exception> classe il <xref:System> dello spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="252b5-165">`IsError` returns `True` if the expression represents an `Object` variable that derives from the <xref:System.Exception> class in the <xref:System> namespace.</span></span>  
  
 <span data-ttu-id="252b5-166">Un'eccezione che deriva da <xref:System.Exception?displayProperty=nameWithType> possono essere rilevate con la `Try...Catch...Finally` istruzioni.</span><span class="sxs-lookup"><span data-stu-id="252b5-166">An exception that derives from <xref:System.Exception?displayProperty=nameWithType> can be caught with the `Try...Catch...Finally` statements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="252b5-167">L'esempio seguente usa il `IsError` funzione per verificare se un'espressione rappresenta un'eccezione di sistema.</span><span class="sxs-lookup"><span data-stu-id="252b5-167">The following example uses the `IsError` function to check if an expression represents a system exception.</span></span>  
  
 [!code-vb[VbVbalrFunctions#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsNothing">
      <MemberSignature Language="C#" Value="public static bool IsNothing (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNothing(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNothing (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNothing(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsNothing : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsNothing Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="252b5-168">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-168">Required.</span>
          </span>
          <span data-ttu-id="252b5-169">Espressione <see langword="Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-169">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="252b5-170">Restituisce un valore <see langword="Boolean" /> che indica se a un'espressione non √® associato alcun oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-170">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="252b5-171">Restituisce un valore <see langword="Boolean" /> che indica se a un'espressione non √® associato alcun oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-171">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-172">`IsNothing` Restituisce `True` se l'espressione rappresenta una variabile oggetto che ha attualmente alcun oggetto assegnato a esso; in caso contrario, restituisce `False`.</span><span class="sxs-lookup"><span data-stu-id="252b5-172">`IsNothing` returns `True` if the expression represents an object variable that currently has no object assigned to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="252b5-173">`IsNothing` √® progettato per funzionare su tipi di riferimento.</span><span class="sxs-lookup"><span data-stu-id="252b5-173">`IsNothing` is intended to work on reference types.</span></span> <span data-ttu-id="252b5-174">Un tipo di valore non pu√≤ contenere un valore di e viene ripristinato il valore predefinito se si assegna `Nothing` ad esso.</span><span class="sxs-lookup"><span data-stu-id="252b5-174">A value type cannot hold a value of  and reverts to its default value if you assign `Nothing` to it.</span></span> <span data-ttu-id="252b5-175">Se si fornisce un tipo di valore in `Expression`, `IsNothing` restituisce sempre `False`.</span><span class="sxs-lookup"><span data-stu-id="252b5-175">If you supply a value type in `Expression`, `IsNothing` always returns `False`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="252b5-176">L'esempio seguente usa il `IsNothing` funzione per determinare se una variabile oggetto √® associata a un'istanza dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="252b5-176">The following example uses the `IsNothing` function to determine if an object variable is associated with any object instance.</span></span>  
  
 [!code-vb[VbVbalrFunctions#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md">
          <span data-ttu-id="252b5-177">Value Types and Reference Types</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-177">Value Types and Reference Types</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsNumeric">
      <MemberSignature Language="C#" Value="public static bool IsNumeric (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNumeric(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNumeric (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumeric(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsNumeric : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsNumeric Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="252b5-178">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-178">Required.</span>
          </span>
          <span data-ttu-id="252b5-179">Espressione <see langword="Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-179">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="252b5-180">Restituisce un valore <see langword="Boolean" /> che indica se un'espressione pu√≤ essere valutata come numero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-180">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="252b5-181">Restituisce un valore <see langword="Boolean" /> che indica se un'espressione pu√≤ essere valutata come numero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-181">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-182">`IsNumeric` Restituisce `True` se il tipo di dati `Expression` viene `Boolean`, `Byte`, `Decimal`, `Double`, `Integer`, `Long`, `SByte`, `Short`, `Single`, `UInteger`, `ULong`, o `UShort`.</span><span class="sxs-lookup"><span data-stu-id="252b5-182">`IsNumeric` returns `True` if the data type of `Expression` is `Boolean`, `Byte`, `Decimal`, `Double`, `Integer`, `Long`, `SByte`, `Short`, `Single`, `UInteger`, `ULong`, or `UShort`.</span></span> <span data-ttu-id="252b5-183">Restituisce inoltre `True` se `Expression` √® un `Char`, `String`, o `Object` che pu√≤ essere convertito in un numero.</span><span class="sxs-lookup"><span data-stu-id="252b5-183">It also returns `True` if `Expression` is a `Char`, `String`, or `Object` that can be successfully converted to a number.</span></span> <span data-ttu-id="252b5-184">`Expression` pu√≤ contenere caratteri non numerici.</span><span class="sxs-lookup"><span data-stu-id="252b5-184">`Expression` can contain non-numeric characters.</span></span> <span data-ttu-id="252b5-185">`IsNumeric` Restituisce `True` se `Expression` √® una stringa che contiene un numero ottale o esadecimale valido.</span><span class="sxs-lookup"><span data-stu-id="252b5-185">`IsNumeric` returns `True` if `Expression` is a string that contains a valid hexadecimal or octal number.</span></span> <span data-ttu-id="252b5-186">`IsNumeric` Restituisce inoltre `True` se `Expression` contiene un'espressione numerica valida che inizia con un + o - caratteri o contiene virgole.</span><span class="sxs-lookup"><span data-stu-id="252b5-186">`IsNumeric` also returns `True` if `Expression` contains a valid numeric expression that begins with a + or - character or contains commas.</span></span>  
  
 <span data-ttu-id="252b5-187">`IsNumeric` Restituisce `False` se `Expression` √® del tipo di dati `Date`.</span><span class="sxs-lookup"><span data-stu-id="252b5-187">`IsNumeric` returns `False` if `Expression` is of data type `Date`.</span></span> <span data-ttu-id="252b5-188">Viene restituito `False` se `Expression` √® un `Char`, `String`, o `Object` che non pu√≤ essere convertito in un numero.</span><span class="sxs-lookup"><span data-stu-id="252b5-188">It returns `False` if `Expression` is a `Char`, `String`, or `Object` that cannot be successfully converted to a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="252b5-189">L'esempio seguente usa il `IsNumeric` funzione per determinare se il contenuto di una variabile pu√≤ essere valutato come numero.</span><span class="sxs-lookup"><span data-stu-id="252b5-189">The following example uses the `IsNumeric` function to determine if the contents of a variable can be evaluated as a number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#39)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public static bool IsReference (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsReference(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReference (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsReference(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsReference : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsReference Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="252b5-190">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-190">Required.</span>
          </span>
          <span data-ttu-id="252b5-191">Espressione <see langword="Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-191">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="252b5-192">Restituisce un valore <see langword="Boolean" /> che indica se un'espressione restituisce un tipo di riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-192">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="252b5-193">Restituisce un valore <see langword="Boolean" /> che indica se un'espressione restituisce un tipo di riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-193">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-194">`IsReference` Restituisce `True` se `Expression` rappresenta un tipo riferimento, ad esempio un'istanza della classe, una `String` tipo o una matrice di qualsiasi tipo; in caso contrario, restituisce `False`.</span><span class="sxs-lookup"><span data-stu-id="252b5-194">`IsReference` returns `True` if `Expression` represents a reference type, such as a class instance, a `String` type, or an array of any type; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="252b5-195">Un tipo di riferimento contiene un puntatore ai dati archiviati in un' posizione in memoria.</span><span class="sxs-lookup"><span data-stu-id="252b5-195">A reference type contains a pointer to data stored elsewhere in memory.</span></span> <span data-ttu-id="252b5-196">Un tipo di valore contiene i propri dati.</span><span class="sxs-lookup"><span data-stu-id="252b5-196">A value type contains its own data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="252b5-197">Questo esempio viene usato il `IsReference` funzione per verificare se alcune variabili fanno riferimento ai tipi di riferimento.</span><span class="sxs-lookup"><span data-stu-id="252b5-197">This example uses the `IsReference` function to check if several variables refer to reference types.</span></span>  
  
 [!code-vb[VbVbalrFunctions#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#40)]  
  
 <span data-ttu-id="252b5-198">Nell'esempio precedente, i primi tre chiamate a `IsReference` restituire `True`.</span><span class="sxs-lookup"><span data-stu-id="252b5-198">In the preceding example, the first three calls to `IsReference` return `True`.</span></span> <span data-ttu-id="252b5-199">Restituisce l'ultima chiamata `False`, in quanto `Integer` √® un tipo di valore, non un tipo di riferimento.</span><span class="sxs-lookup"><span data-stu-id="252b5-199">The last call returns `False`, because `Integer` is a value type, not a reference type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md">
          <span data-ttu-id="252b5-200">Value Types and Reference Types</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-200">Value Types and Reference Types</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LBound">
      <MemberSignature Language="C#" Value="public static int LBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 LBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
      <MemberSignature Language="F#" Value="static member LBound : Array * int -&gt; int" Usage="Microsoft.VisualBasic.Information.LBound (Array, Rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array">
          <span data-ttu-id="252b5-201">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-201">Required.</span>
          </span>
          <span data-ttu-id="252b5-202">Matrice di qualsiasi tipo di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-202">Array of any data type.</span>
          </span>
          <span data-ttu-id="252b5-203">Matrice in cui si desidera trovare l'indice pi√π basso possibile di una dimensione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-203">The array in which you want to find the lowest possible subscript of a dimension.</span>
          </span>
        </param>
        <param name="Rank">
          <span data-ttu-id="252b5-204">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-204">Optional.</span>
          </span>
          <span data-ttu-id="252b5-205">
            <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-205">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="252b5-206">Dimensione per cui deve essere restituito l'indice pi√π basso possibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-206">The dimension for which the lowest possible subscript is to be returned.</span>
          </span>
          <span data-ttu-id="252b5-207">Utilizzare 1 per la prima dimensione, 2 per la seconda e cos√¨ via.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-207">Use 1 for the first dimension, 2 for the second, and so on.</span>
          </span>
          <span data-ttu-id="252b5-208">Se <c>Rank</c> viene omesso, viene usato il valore 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-208">If <c>Rank</c> is omitted, 1 is assumed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="252b5-209">Restituisce l'indice pi√π basso disponibile per la dimensione indicata di una matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-209">Returns the lowest available subscript for the indicated dimension of an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="252b5-210">
            <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-210">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="252b5-211">Valore pi√π basso che pu√≤ essere contenuto nell'indice per la dimensione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-211">The lowest value the subscript for the specified dimension can contain.</span>
          </span>
          <span data-ttu-id="252b5-212">
            <see langword="LBound" /> restituisce sempre 0 purch√© <paramref name="Array" /> sia stato inizializzato, anche se privo di elementi, ad esempio se √® una stringa di lunghezza zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-212">
              <see langword="LBound" /> always returns 0 as long as <paramref name="Array" /> has been initialized, even if it has no elements, for example if it is a zero-length string.</span>
          </span>
          <span data-ttu-id="252b5-213">Se <paramref name="Array" /> √® <see langword="Nothing" />, <see langword="LBound" /> genera un oggetto <see cref="T:System.ArgumentNullException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-213">If <paramref name="Array" /> is <see langword="Nothing" />, <see langword="LBound" /> throws an <see cref="T:System.ArgumentNullException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-214">Dato che gli indici di matrice partono da 0, l'indice minimo di qualsiasi dimensione √® sempre 0.</span><span class="sxs-lookup"><span data-stu-id="252b5-214">Since array subscripts start at 0, the lowest available subscript for every dimension is always 0.</span></span>  
  
 <span data-ttu-id="252b5-215">Per una matrice con le dimensioni seguenti, `LBound` restituisce i valori nella tabella seguente:</span><span class="sxs-lookup"><span data-stu-id="252b5-215">For an array with the following dimensions, `LBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="252b5-216">Le chiamate a LBound</span><span class="sxs-lookup"><span data-stu-id="252b5-216">Call to LBound</span></span>|<span data-ttu-id="252b5-217">Valore restituito</span><span class="sxs-lookup"><span data-stu-id="252b5-217">Return value</span></span>|  
|--------------------|------------------|  
|`LBound(a, 1)`|<span data-ttu-id="252b5-218">0</span><span class="sxs-lookup"><span data-stu-id="252b5-218">0</span></span>|  
|`LBound(a, 2)`|<span data-ttu-id="252b5-219">0</span><span class="sxs-lookup"><span data-stu-id="252b5-219">0</span></span>|  
|`LBound(a, 3)`|<span data-ttu-id="252b5-220">0</span><span class="sxs-lookup"><span data-stu-id="252b5-220">0</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="252b5-221">L'esempio seguente usa il `LBound` funzione per determinare l'indice pi√π basso disponibile per la dimensione indicata di una matrice.</span><span class="sxs-lookup"><span data-stu-id="252b5-221">The following example uses the `LBound` function to determine the lowest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="252b5-222">
            <paramref name="Array" /> √® <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-222">
              <paramref name="Array" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="252b5-223">
            <paramref name="Rank" /> √® minore di 1 oppure <paramref name="Rank" /> √® maggiore del numero di dimensioni di <paramref name="Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-223">
              <paramref name="Rank" /> less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/dim-statement.md">
          <span data-ttu-id="252b5-224">Istruzione Dim (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-224">Dim Statement (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/redim-statement.md">
          <span data-ttu-id="252b5-225">Istruzione ReDim (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-225">ReDim Statement (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="QBColor">
      <MemberSignature Language="C#" Value="public static int QBColor (int Color);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 QBColor(int32 Color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function QBColor (Color As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int QBColor(int Color);" />
      <MemberSignature Language="F#" Value="static member QBColor : int -&gt; int" Usage="Microsoft.VisualBasic.Information.QBColor Color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Color" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Color">
          <span data-ttu-id="252b5-226">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-226">Required.</span>
          </span>
          <span data-ttu-id="252b5-227">Numero intero compreso nell'intervallo tra 0 e 15.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-227">A whole number in the range 0‚Äì15.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="252b5-228">Restituisce un <see langword="Integer" /> che rappresenta il codice di colore RGB corrispondente al numero di colore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-228">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="252b5-229">Restituisce un <see langword="Integer" /> che rappresenta il codice di colore RGB corrispondente al numero di colore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-229">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-230">Iniziando con il byte meno significativo, il valore restituito specifica i valori di colore rosso, verdi e blu, utilizzati per impostare il colore appropriato nel sistema RGB usato dal linguaggio Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="252b5-230">Starting with the least-significant byte, the returned value specifies the red, green, and blue values used to set the appropriate color in the RGB system used by the Visual Basic language.</span></span>  
  
 <span data-ttu-id="252b5-231">Il `Color` argomento presenta le impostazioni.</span><span class="sxs-lookup"><span data-stu-id="252b5-231">The `Color` argument has these settings.</span></span>  
  
|<span data-ttu-id="252b5-232">Number</span><span class="sxs-lookup"><span data-stu-id="252b5-232">Number</span></span>|<span data-ttu-id="252b5-233">Colore</span><span class="sxs-lookup"><span data-stu-id="252b5-233">Color</span></span>|<span data-ttu-id="252b5-234">Number</span><span class="sxs-lookup"><span data-stu-id="252b5-234">Number</span></span>|<span data-ttu-id="252b5-235">Colore</span><span class="sxs-lookup"><span data-stu-id="252b5-235">Color</span></span>|  
|------------|-----------|------------|-----------|  
|<span data-ttu-id="252b5-236">0</span><span class="sxs-lookup"><span data-stu-id="252b5-236">0</span></span>|<span data-ttu-id="252b5-237">Nero</span><span class="sxs-lookup"><span data-stu-id="252b5-237">Black</span></span>|<span data-ttu-id="252b5-238">8</span><span class="sxs-lookup"><span data-stu-id="252b5-238">8</span></span>|<span data-ttu-id="252b5-239">Grigio</span><span class="sxs-lookup"><span data-stu-id="252b5-239">Gray</span></span>|  
|<span data-ttu-id="252b5-240">1</span><span class="sxs-lookup"><span data-stu-id="252b5-240">1</span></span>|<span data-ttu-id="252b5-241">Blu</span><span class="sxs-lookup"><span data-stu-id="252b5-241">Blue</span></span>|<span data-ttu-id="252b5-242">9</span><span class="sxs-lookup"><span data-stu-id="252b5-242">9</span></span>|<span data-ttu-id="252b5-243">Blu chiaro</span><span class="sxs-lookup"><span data-stu-id="252b5-243">Light blue</span></span>|  
|<span data-ttu-id="252b5-244">2</span><span class="sxs-lookup"><span data-stu-id="252b5-244">2</span></span>|<span data-ttu-id="252b5-245">Verde</span><span class="sxs-lookup"><span data-stu-id="252b5-245">Green</span></span>|<span data-ttu-id="252b5-246">10</span><span class="sxs-lookup"><span data-stu-id="252b5-246">10</span></span>|<span data-ttu-id="252b5-247">Verde chiaro</span><span class="sxs-lookup"><span data-stu-id="252b5-247">Light green</span></span>|  
|<span data-ttu-id="252b5-248">3</span><span class="sxs-lookup"><span data-stu-id="252b5-248">3</span></span>|<span data-ttu-id="252b5-249">Azzurro</span><span class="sxs-lookup"><span data-stu-id="252b5-249">Cyan</span></span>|<span data-ttu-id="252b5-250">11</span><span class="sxs-lookup"><span data-stu-id="252b5-250">11</span></span>|<span data-ttu-id="252b5-251">Azzurro tenue</span><span class="sxs-lookup"><span data-stu-id="252b5-251">Light cyan</span></span>|  
|<span data-ttu-id="252b5-252">4</span><span class="sxs-lookup"><span data-stu-id="252b5-252">4</span></span>|<span data-ttu-id="252b5-253">Rosso</span><span class="sxs-lookup"><span data-stu-id="252b5-253">Red</span></span>|<span data-ttu-id="252b5-254">12</span><span class="sxs-lookup"><span data-stu-id="252b5-254">12</span></span>|<span data-ttu-id="252b5-255">Rosso</span><span class="sxs-lookup"><span data-stu-id="252b5-255">Light red</span></span>|  
|<span data-ttu-id="252b5-256">5</span><span class="sxs-lookup"><span data-stu-id="252b5-256">5</span></span>|<span data-ttu-id="252b5-257">Magenta</span><span class="sxs-lookup"><span data-stu-id="252b5-257">Magenta</span></span>|<span data-ttu-id="252b5-258">13</span><span class="sxs-lookup"><span data-stu-id="252b5-258">13</span></span>|<span data-ttu-id="252b5-259">Magenta chiaro</span><span class="sxs-lookup"><span data-stu-id="252b5-259">Light magenta</span></span>|  
|<span data-ttu-id="252b5-260">6</span><span class="sxs-lookup"><span data-stu-id="252b5-260">6</span></span>|<span data-ttu-id="252b5-261">Giallo</span><span class="sxs-lookup"><span data-stu-id="252b5-261">Yellow</span></span>|<span data-ttu-id="252b5-262">14</span><span class="sxs-lookup"><span data-stu-id="252b5-262">14</span></span>|<span data-ttu-id="252b5-263">Giallo chiaro</span><span class="sxs-lookup"><span data-stu-id="252b5-263">Light yellow</span></span>|  
|<span data-ttu-id="252b5-264">7</span><span class="sxs-lookup"><span data-stu-id="252b5-264">7</span></span>|<span data-ttu-id="252b5-265">Bianco</span><span class="sxs-lookup"><span data-stu-id="252b5-265">White</span></span>|<span data-ttu-id="252b5-266">15</span><span class="sxs-lookup"><span data-stu-id="252b5-266">15</span></span>|<span data-ttu-id="252b5-267">Sfondo bianco</span><span class="sxs-lookup"><span data-stu-id="252b5-267">Bright white</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="252b5-268">Questo esempio Usa la `QBColor` funzione per modificare il colore indicato da `colorInteger`.</span><span class="sxs-lookup"><span data-stu-id="252b5-268">This example uses the `QBColor` function to change to the color indicated by `colorInteger`.</span></span> <span data-ttu-id="252b5-269">`QBColor` accetta valori interi compresi tra 0 e 15.</span><span class="sxs-lookup"><span data-stu-id="252b5-269">`QBColor` accepts integer values between 0 and 15.</span></span>  
  
 [!code-vb[VbVbalrCatRef#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="252b5-270">
            <paramref name="Color" /> non rientra nell'intervallo compreso tra 0 e 15, estremi inclusi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-270">
              <paramref name="Color" /> is outside of range 0 to 15, inclusive.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="RGB">
      <MemberSignature Language="C#" Value="public static int RGB (int Red, int Green, int Blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 RGB(int32 Red, int32 Green, int32 Blue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RGB (Red As Integer, Green As Integer, Blue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int RGB(int Red, int Green, int Blue);" />
      <MemberSignature Language="F#" Value="static member RGB : int * int * int -&gt; int" Usage="Microsoft.VisualBasic.Information.RGB (Red, Green, Blue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Red" Type="System.Int32" />
        <Parameter Name="Green" Type="System.Int32" />
        <Parameter Name="Blue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Red">
          <span data-ttu-id="252b5-271">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-271">Required.</span>
          </span>
          <span data-ttu-id="252b5-272">
            <see langword="Integer" /> nell'intervallo compreso tra 0 e 255 inclusi, che rappresenta l'intensit√† del componente rosso del colore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-272">
              <see langword="Integer" /> in the range 0‚Äì255, inclusive, that represents the intensity of the red component of the color.</span>
          </span>
        </param>
        <param name="Green">
          <span data-ttu-id="252b5-273">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-273">Required.</span>
          </span>
          <span data-ttu-id="252b5-274">
            <see langword="Integer" /> nell'intervallo compreso tra 0 e 255 inclusi, che rappresenta l'intensit√† del componente verde del colore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-274">
              <see langword="Integer" /> in the range 0‚Äì255, inclusive, that represents the intensity of the green component of the color.</span>
          </span>
        </param>
        <param name="Blue">
          <span data-ttu-id="252b5-275">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-275">Required.</span>
          </span>
          <span data-ttu-id="252b5-276">
            <see langword="Integer" /> nell'intervallo compreso tra 0 e 255 inclusi, che rappresenta l'intensit√† del componente blu del colore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-276">
              <see langword="Integer" /> in the range 0‚Äì255, inclusive, that represents the intensity of the blue component of the color.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="252b5-277">Restituisce un <see langword="Integer" /> che rappresenta un valore di colore RGB da un set di componenti rosso, verde e blu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-277">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="252b5-278">Restituisce un <see langword="Integer" /> che rappresenta un valore di colore RGB da un set di componenti rosso, verde e blu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-278">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-279">Per i metodi e propriet√† che accettano una specifica di colori aspettarsi che specifica un numero che rappresenta un RGB valore del colore.</span><span class="sxs-lookup"><span data-stu-id="252b5-279">Application methods and properties that accept a color specification expect that specification to be a number representing an RGB color value.</span></span> <span data-ttu-id="252b5-280">Un valore di colore RGB specifica l'intensit√† di colore rosso, verde e blu a causa di un colore specifico da visualizzare.</span><span class="sxs-lookup"><span data-stu-id="252b5-280">An RGB color value specifies the relative intensity of red, green, and blue to cause a specific color to be displayed.</span></span>  
  
 <span data-ttu-id="252b5-281">Se il valore per qualsiasi argomento a `RGB` √® maggiore di 255, 255 viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="252b5-281">If the value for any argument to `RGB` is greater than 255, 255 is used.</span></span>  
  
 <span data-ttu-id="252b5-282">La tabella seguente elenca alcuni colori standard e i valori di colore rosso, verdi e blu che includono.</span><span class="sxs-lookup"><span data-stu-id="252b5-282">The following table lists some standard colors and the red, green, and blue values they include.</span></span>  
  
|<span data-ttu-id="252b5-283">Colore</span><span class="sxs-lookup"><span data-stu-id="252b5-283">Color</span></span>|<span data-ttu-id="252b5-284">Valore del rosso</span><span class="sxs-lookup"><span data-stu-id="252b5-284">Red value</span></span>|<span data-ttu-id="252b5-285">Valore di colore verde</span><span class="sxs-lookup"><span data-stu-id="252b5-285">Green value</span></span>|<span data-ttu-id="252b5-286">Valore di colore blu</span><span class="sxs-lookup"><span data-stu-id="252b5-286">Blue value</span></span>|  
|-----------|---------------|-----------------|----------------|  
|<span data-ttu-id="252b5-287">Nero</span><span class="sxs-lookup"><span data-stu-id="252b5-287">Black</span></span>|<span data-ttu-id="252b5-288">0</span><span class="sxs-lookup"><span data-stu-id="252b5-288">0</span></span>|<span data-ttu-id="252b5-289">0</span><span class="sxs-lookup"><span data-stu-id="252b5-289">0</span></span>|<span data-ttu-id="252b5-290">0</span><span class="sxs-lookup"><span data-stu-id="252b5-290">0</span></span>|  
|<span data-ttu-id="252b5-291">Blu</span><span class="sxs-lookup"><span data-stu-id="252b5-291">Blue</span></span>|<span data-ttu-id="252b5-292">0</span><span class="sxs-lookup"><span data-stu-id="252b5-292">0</span></span>|<span data-ttu-id="252b5-293">0</span><span class="sxs-lookup"><span data-stu-id="252b5-293">0</span></span>|<span data-ttu-id="252b5-294">255</span><span class="sxs-lookup"><span data-stu-id="252b5-294">255</span></span>|  
|<span data-ttu-id="252b5-295">Verde</span><span class="sxs-lookup"><span data-stu-id="252b5-295">Green</span></span>|<span data-ttu-id="252b5-296">0</span><span class="sxs-lookup"><span data-stu-id="252b5-296">0</span></span>|<span data-ttu-id="252b5-297">255</span><span class="sxs-lookup"><span data-stu-id="252b5-297">255</span></span>|<span data-ttu-id="252b5-298">0</span><span class="sxs-lookup"><span data-stu-id="252b5-298">0</span></span>|  
|<span data-ttu-id="252b5-299">Azzurro</span><span class="sxs-lookup"><span data-stu-id="252b5-299">Cyan</span></span>|<span data-ttu-id="252b5-300">0</span><span class="sxs-lookup"><span data-stu-id="252b5-300">0</span></span>|<span data-ttu-id="252b5-301">255</span><span class="sxs-lookup"><span data-stu-id="252b5-301">255</span></span>|<span data-ttu-id="252b5-302">255</span><span class="sxs-lookup"><span data-stu-id="252b5-302">255</span></span>|  
|<span data-ttu-id="252b5-303">Rosso</span><span class="sxs-lookup"><span data-stu-id="252b5-303">Red</span></span>|<span data-ttu-id="252b5-304">255</span><span class="sxs-lookup"><span data-stu-id="252b5-304">255</span></span>|<span data-ttu-id="252b5-305">0</span><span class="sxs-lookup"><span data-stu-id="252b5-305">0</span></span>|<span data-ttu-id="252b5-306">0</span><span class="sxs-lookup"><span data-stu-id="252b5-306">0</span></span>|  
|<span data-ttu-id="252b5-307">Magenta</span><span class="sxs-lookup"><span data-stu-id="252b5-307">Magenta</span></span>|<span data-ttu-id="252b5-308">255</span><span class="sxs-lookup"><span data-stu-id="252b5-308">255</span></span>|<span data-ttu-id="252b5-309">0</span><span class="sxs-lookup"><span data-stu-id="252b5-309">0</span></span>|<span data-ttu-id="252b5-310">255</span><span class="sxs-lookup"><span data-stu-id="252b5-310">255</span></span>|  
|<span data-ttu-id="252b5-311">Giallo</span><span class="sxs-lookup"><span data-stu-id="252b5-311">Yellow</span></span>|<span data-ttu-id="252b5-312">255</span><span class="sxs-lookup"><span data-stu-id="252b5-312">255</span></span>|<span data-ttu-id="252b5-313">255</span><span class="sxs-lookup"><span data-stu-id="252b5-313">255</span></span>|<span data-ttu-id="252b5-314">0</span><span class="sxs-lookup"><span data-stu-id="252b5-314">0</span></span>|  
|<span data-ttu-id="252b5-315">Bianco</span><span class="sxs-lookup"><span data-stu-id="252b5-315">White</span></span>|<span data-ttu-id="252b5-316">255</span><span class="sxs-lookup"><span data-stu-id="252b5-316">255</span></span>|<span data-ttu-id="252b5-317">255</span><span class="sxs-lookup"><span data-stu-id="252b5-317">255</span></span>|<span data-ttu-id="252b5-318">255</span><span class="sxs-lookup"><span data-stu-id="252b5-318">255</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="252b5-319">Questo esempio viene illustrato come la `RGB` funzione viene utilizzata per restituire un numero intero che rappresenta un `RGB` valore del colore.</span><span class="sxs-lookup"><span data-stu-id="252b5-319">This example shows how the `RGB` function is used to return a whole number representing an `RGB` color value.</span></span>  
  
 [!code-vb[VbVbalrCatRef#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="252b5-320">
            <paramref name="Green" />, <paramref name="Blue" /> o <paramref name="Red" /> non rientra nell'intervallo compreso tra 0 e 255, estremi inclusi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-320">
              <paramref name="Green" />, <paramref name="Blue" />, or <paramref name="Red" /> is outside of range 0 to 255, inclusive.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SystemTypeName">
      <MemberSignature Language="C#" Value="public static string SystemTypeName (string VbName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string SystemTypeName(string VbName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SystemTypeName (VbName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SystemTypeName(System::String ^ VbName);" />
      <MemberSignature Language="F#" Value="static member SystemTypeName : string -&gt; string" Usage="Microsoft.VisualBasic.Information.SystemTypeName VbName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VbName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="VbName">
          <span data-ttu-id="252b5-321">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-321">Required.</span>
          </span>
          <span data-ttu-id="252b5-322">Variabile <see langword="String" /> contenente un nome di tipo di Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-322">A <see langword="String" /> variable containing a Visual Basic type name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="252b5-323">Restituisce un valore <see langword="String" /> contenente il nome del tipo di dati di sistema di una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-323">Returns a <see langword="String" /> value containing the system data type name of a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="252b5-324">Restituisce un valore <see langword="String" /> contenente il nome del tipo di dati di sistema di una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-324">Returns a <see langword="String" /> value containing the system data type name of a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-325">`SystemTypeName` Restituisce il common language runtime (CLR) digitare nome completo corrispondente al nome di tipo Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="252b5-325">`SystemTypeName` returns the fully qualified common language runtime (CLR) type name corresponding to the Visual Basic type name.</span></span> <span data-ttu-id="252b5-326">Ad esempio, se `VbName` contiene "Data", `SystemTypeName` restituisce "DateTime".</span><span class="sxs-lookup"><span data-stu-id="252b5-326">For example, if `VbName` contains "Date", `SystemTypeName` returns "System.DateTime".</span></span> <span data-ttu-id="252b5-327">Se `SystemTypeName` non riconosce il valore di `VbName`, viene restituito `Nothing` (non la stringa "Nothing").</span><span class="sxs-lookup"><span data-stu-id="252b5-327">If `SystemTypeName` does not recognize the value of `VbName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="252b5-328">L'esempio seguente usa il `SystemTypeName` funzione per restituire i nomi dei tipi di dati per diverse variabili.</span><span class="sxs-lookup"><span data-stu-id="252b5-328">The following example uses the `SystemTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#49)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="252b5-329">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-329">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public static string TypeName (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string TypeName(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TypeName (VarName As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TypeName(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member TypeName : obj -&gt; string" Usage="Microsoft.VisualBasic.Information.TypeName VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName">
          <span data-ttu-id="252b5-330">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-330">Required.</span>
          </span>
          <span data-ttu-id="252b5-331">Variabile <see langword="Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-331">
              <see langword="Object" /> variable.</span>
          </span>
          <span data-ttu-id="252b5-332">Se <see langword="Option Strict" /> √® <see langword="Off" />, √® possibile passare una variabile di qualsiasi tipo di dati tranne una struttura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-332">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="252b5-333">Restituisce un valore <see langword="String" /> contenente informazioni relative al tipo di dati per una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-333">Returns a <see langword="String" /> value containing data-type information about a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="252b5-334">Restituisce un valore <see langword="String" /> contenente informazioni relative al tipo di dati per una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-334">Returns a <see langword="String" /> value containing data-type information about a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-335">La tabella seguente illustra il `String` valori restituiti dalle `TypeName` per diversi tipi di contenuto di `VarName`.</span><span class="sxs-lookup"><span data-stu-id="252b5-335">The following table shows the `String` values returned by `TypeName` for different contents of `VarName`.</span></span>  
  
|<span data-ttu-id="252b5-336">`VarName` Contenuto</span><span class="sxs-lookup"><span data-stu-id="252b5-336">`VarName` contents</span></span>|<span data-ttu-id="252b5-337">Stringa restituita</span><span class="sxs-lookup"><span data-stu-id="252b5-337">String returned</span></span>|  
|------------------------|---------------------|  
|<span data-ttu-id="252b5-338">16-bit `True` o `False` tipo valore</span><span class="sxs-lookup"><span data-stu-id="252b5-338">16-bit `True` or `False` value type</span></span>|<span data-ttu-id="252b5-339">"Boolean"</span><span class="sxs-lookup"><span data-stu-id="252b5-339">"Boolean"</span></span>|  
|<span data-ttu-id="252b5-340">tipo di valore binario a 8 bit</span><span class="sxs-lookup"><span data-stu-id="252b5-340">8-bit binary value type</span></span>|<span data-ttu-id="252b5-341">"Byte"</span><span class="sxs-lookup"><span data-stu-id="252b5-341">"Byte"</span></span>|  
|<span data-ttu-id="252b5-342">tipo di valore di carattere a 16 bit</span><span class="sxs-lookup"><span data-stu-id="252b5-342">16-bit character value type</span></span>|<span data-ttu-id="252b5-343">"Char"</span><span class="sxs-lookup"><span data-stu-id="252b5-343">"Char"</span></span>|  
|<span data-ttu-id="252b5-344">tipo di valore a 64 bit data e ora</span><span class="sxs-lookup"><span data-stu-id="252b5-344">64-bit date and time value type</span></span>|<span data-ttu-id="252b5-345">"Data"</span><span class="sxs-lookup"><span data-stu-id="252b5-345">"Date"</span></span>|  
|<span data-ttu-id="252b5-346">Tipo di riferimento che indica dati mancanti o non esistenti</span><span class="sxs-lookup"><span data-stu-id="252b5-346">Reference type indicating missing or nonexistent data</span></span>|<span data-ttu-id="252b5-347">"DBNull"</span><span class="sxs-lookup"><span data-stu-id="252b5-347">"DBNull"</span></span>|  
|<span data-ttu-id="252b5-348">tipo di valore numerico a virgola fissa a 128 bit</span><span class="sxs-lookup"><span data-stu-id="252b5-348">128-bit fixed-point numeric value type</span></span>|<span data-ttu-id="252b5-349">"Decimale"</span><span class="sxs-lookup"><span data-stu-id="252b5-349">"Decimal"</span></span>|  
|<span data-ttu-id="252b5-350">tipo di valore numerico a virgola mobile a 64 bit</span><span class="sxs-lookup"><span data-stu-id="252b5-350">64-bit floating-point numeric value type</span></span>|<span data-ttu-id="252b5-351">"Double"</span><span class="sxs-lookup"><span data-stu-id="252b5-351">"Double"</span></span>|  
|<span data-ttu-id="252b5-352">tipo di valore integer a 32 bit</span><span class="sxs-lookup"><span data-stu-id="252b5-352">32-bit integer value type</span></span>|<span data-ttu-id="252b5-353">"Integer"</span><span class="sxs-lookup"><span data-stu-id="252b5-353">"Integer"</span></span>|  
|<span data-ttu-id="252b5-354">Tipo di riferimento che punta a un oggetto non specializzato</span><span class="sxs-lookup"><span data-stu-id="252b5-354">Reference type pointing to an unspecialized object</span></span>|<span data-ttu-id="252b5-355">"Object"</span><span class="sxs-lookup"><span data-stu-id="252b5-355">"Object"</span></span>|  
|<span data-ttu-id="252b5-356">Tipo di riferimento che punta a un oggetto specifico creato dalla classe *objectclass*</span><span class="sxs-lookup"><span data-stu-id="252b5-356">Reference type pointing to a specialized object created from class *objectclass*</span></span>|<span data-ttu-id="252b5-357">"*objectclass*"</span><span class="sxs-lookup"><span data-stu-id="252b5-357">"*objectclass*"</span></span>|  
|<span data-ttu-id="252b5-358">tipo di valore integer a 64 bit</span><span class="sxs-lookup"><span data-stu-id="252b5-358">64-bit integer value type</span></span>|<span data-ttu-id="252b5-359">"Long"</span><span class="sxs-lookup"><span data-stu-id="252b5-359">"Long"</span></span>|  
|<span data-ttu-id="252b5-360">Tipo di riferimento con alcun oggetto attualmente assegnato</span><span class="sxs-lookup"><span data-stu-id="252b5-360">Reference type with no object currently assigned to it</span></span>|<span data-ttu-id="252b5-361">"Nothing"</span><span class="sxs-lookup"><span data-stu-id="252b5-361">"Nothing"</span></span>|  
|<span data-ttu-id="252b5-362">tipo di valore intero con segno a 8 bit</span><span class="sxs-lookup"><span data-stu-id="252b5-362">8-bit signed integer value type</span></span>|<span data-ttu-id="252b5-363">"SByte"</span><span class="sxs-lookup"><span data-stu-id="252b5-363">"SByte"</span></span>|  
|<span data-ttu-id="252b5-364">tipo di valore integer a 16 bit</span><span class="sxs-lookup"><span data-stu-id="252b5-364">16-bit integer value type</span></span>|<span data-ttu-id="252b5-365">"Short"</span><span class="sxs-lookup"><span data-stu-id="252b5-365">"Short"</span></span>|  
|<span data-ttu-id="252b5-366">tipo di valore numerico a virgola mobile a 32 bit</span><span class="sxs-lookup"><span data-stu-id="252b5-366">32-bit floating-point numeric value type</span></span>|<span data-ttu-id="252b5-367">"Single"</span><span class="sxs-lookup"><span data-stu-id="252b5-367">"Single"</span></span>|  
|<span data-ttu-id="252b5-368">Tipo di riferimento che punta a una stringa di caratteri a 16 bit</span><span class="sxs-lookup"><span data-stu-id="252b5-368">Reference type pointing to a string of 16-bit characters</span></span>|<span data-ttu-id="252b5-369">"String"</span><span class="sxs-lookup"><span data-stu-id="252b5-369">"String"</span></span>|  
|<span data-ttu-id="252b5-370">tipo di valore intero senza segno a 32 bit</span><span class="sxs-lookup"><span data-stu-id="252b5-370">32-bit unsigned integer value type</span></span>|<span data-ttu-id="252b5-371">"UInteger"</span><span class="sxs-lookup"><span data-stu-id="252b5-371">"UInteger"</span></span>|  
|<span data-ttu-id="252b5-372">tipo di valore intero senza segno a 64 bit</span><span class="sxs-lookup"><span data-stu-id="252b5-372">64-bit unsigned integer value type</span></span>|<span data-ttu-id="252b5-373">"ULong"</span><span class="sxs-lookup"><span data-stu-id="252b5-373">"ULong"</span></span>|  
|<span data-ttu-id="252b5-374">tipo di valore intero senza segno a 16 bit</span><span class="sxs-lookup"><span data-stu-id="252b5-374">16-bit unsigned integer value type</span></span>|<span data-ttu-id="252b5-375">"UShort"</span><span class="sxs-lookup"><span data-stu-id="252b5-375">"UShort"</span></span>|  
  
 <span data-ttu-id="252b5-376">Se `VarName` √® una matrice, la stringa restituita pu√≤ essere una delle stringhe nella tabella precedente con parentesi vuote.</span><span class="sxs-lookup"><span data-stu-id="252b5-376">If `VarName` is an array, the returned string can be any one of the strings in the preceding table with empty parentheses appended.</span></span> <span data-ttu-id="252b5-377">Ad esempio, se `VarName` punta a una matrice di numeri interi, `TypeName` restituisce "Integer".</span><span class="sxs-lookup"><span data-stu-id="252b5-377">For example, if `VarName` points to an array of integers, `TypeName` returns "Integer()".</span></span>  
  
 <span data-ttu-id="252b5-378">Quando si `TypeName` restituisce il nome di un tipo riferimento, ad esempio una classe, viene restituito solo il nome, non il nome completo.</span><span class="sxs-lookup"><span data-stu-id="252b5-378">When `TypeName` returns the name of a reference type such as a class, it returns only the name itself, not the qualified name.</span></span> <span data-ttu-id="252b5-379">Ad esempio, se `VarName` punta a un oggetto della classe <xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>, `TypeName` restituisce "PaperSource".</span><span class="sxs-lookup"><span data-stu-id="252b5-379">For example, if `VarName` points to an object of class <xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>, `TypeName` returns "PaperSource".</span></span> <span data-ttu-id="252b5-380">Si noti che se la variabile √® dichiarata di un determinato tipo di classe ma non dispone di un oggetto assegnato, `TypeName` restituisce "Nothing".</span><span class="sxs-lookup"><span data-stu-id="252b5-380">Note that if the variable is declared to be of a certain class type but does not have an object assigned to it, `TypeName` returns "Nothing".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="252b5-381">L'esempio seguente usa il `TypeName` funzione per restituire informazioni sul tipo di dati su diverse variabili.</span><span class="sxs-lookup"><span data-stu-id="252b5-381">The following example uses the `TypeName` function to return data type information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="252b5-382">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-382">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="UBound">
      <MemberSignature Language="C#" Value="public static int UBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 UBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
      <MemberSignature Language="F#" Value="static member UBound : Array * int -&gt; int" Usage="Microsoft.VisualBasic.Information.UBound (Array, Rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array">
          <span data-ttu-id="252b5-383">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-383">Required.</span>
          </span>
          <span data-ttu-id="252b5-384">Matrice di qualsiasi tipo di dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-384">Array of any data type.</span>
          </span>
          <span data-ttu-id="252b5-385">Matrice in cui si desidera trovare l'indice pi√π alto possibile di una dimensione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-385">The array in which you want to find the highest possible subscript of a dimension.</span>
          </span>
        </param>
        <param name="Rank">
          <span data-ttu-id="252b5-386">Facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-386">Optional.</span>
          </span>
          <span data-ttu-id="252b5-387">
            <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-387">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="252b5-388">Dimensione per cui deve essere restituito l'indice pi√π alto possibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-388">The dimension for which the highest possible subscript is to be returned.</span>
          </span>
          <span data-ttu-id="252b5-389">Utilizzare 1 per la prima dimensione, 2 per la seconda e cos√¨ via.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-389">Use 1 for the first dimension, 2 for the second, and so on.</span>
          </span>
          <span data-ttu-id="252b5-390">Se <c>Rank</c> viene omesso, viene usato il valore 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-390">If <c>Rank</c> is omitted, 1 is assumed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="252b5-391">Restituisce l'indice pi√π alto disponibile per la dimensione indicata di una matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-391">Returns the highest available subscript for the indicated dimension of an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="252b5-392">
            <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-392">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="252b5-393">Il valore pi√π alto possibile che pu√≤ essere contenuto nell'indice per la dimensione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-393">The highest value the subscript for the specified dimension can contain.</span>
          </span>
          <span data-ttu-id="252b5-394">Se <paramref name="Array" /> ha un solo elemento, <see langword="UBound" /> restituisce 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-394">If <paramref name="Array" /> has only one element, <see langword="UBound" /> returns 0.</span>
          </span>
          <span data-ttu-id="252b5-395">Se <paramref name="Array" /> non ha elementi, ad esempio se √® una stringa di lunghezza zero, <see langword="UBound" /> restituisce -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-395">If <paramref name="Array" /> has no elements, for example if it is a zero-length string, <see langword="UBound" /> returns -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-396">Poich√© gli indici di matrice iniziano da 0, la lunghezza di una dimensione √® maggiore di quello l'indice pi√π alto disponibile per la dimensione.</span><span class="sxs-lookup"><span data-stu-id="252b5-396">Since array subscripts start at 0, the length of a dimension is greater by one than the highest available subscript for that dimension.</span></span>  
  
 <span data-ttu-id="252b5-397">Per una matrice con le dimensioni seguenti, `UBound` restituisce i valori nella tabella seguente:</span><span class="sxs-lookup"><span data-stu-id="252b5-397">For an array with the following dimensions, `UBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="252b5-398">Le chiamate a UBound</span><span class="sxs-lookup"><span data-stu-id="252b5-398">Call to UBound</span></span>|<span data-ttu-id="252b5-399">Valore restituito</span><span class="sxs-lookup"><span data-stu-id="252b5-399">Return value</span></span>|  
|--------------------|------------------|  
|`UBound(a, 1)`|<span data-ttu-id="252b5-400">100</span><span class="sxs-lookup"><span data-stu-id="252b5-400">100</span></span>|  
|`UBound(a, 2)`|<span data-ttu-id="252b5-401">5</span><span class="sxs-lookup"><span data-stu-id="252b5-401">5</span></span>|  
|`UBound(a, 3)`|<span data-ttu-id="252b5-402">4</span><span class="sxs-lookup"><span data-stu-id="252b5-402">4</span></span>|  
  
 <span data-ttu-id="252b5-403">√à possibile usare `UBound` per determinare il totale numero di elementi in una matrice, ma √® necessario modificare il valore restituito per conto del fatto che gli indici iniziano da 0.</span><span class="sxs-lookup"><span data-stu-id="252b5-403">You can use `UBound` to determine the total number of elements in an array, but you must adjust the value it returns to account for the fact that the subscripts start at 0.</span></span> <span data-ttu-id="252b5-404">L'esempio seguente calcola la dimensione totale della matrice `a` nell'esempio precedente:</span><span class="sxs-lookup"><span data-stu-id="252b5-404">The following example calculates the total size of the array `a` in the preceding example:</span></span>  
  
```vb  
Dim total As Integer  
total = (UBound(A, 1) + 1) * (UBound(A, 2) + 1) * (UBound(A, 3) + 1)  
```  
  
 <span data-ttu-id="252b5-405">Il valore calcolato per `total` √® 3030, vale a dire 101 \* 6 \* 5.</span><span class="sxs-lookup"><span data-stu-id="252b5-405">The value calculated for `total` is 3030, which is 101 \* 6 \* 5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="252b5-406">L'esempio seguente usa il `UBound` funzione per determinare l'indice pi√π alto disponibile per la dimensione indicata di una matrice.</span><span class="sxs-lookup"><span data-stu-id="252b5-406">The following example uses the `UBound` function to determine the highest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="252b5-407">
            <paramref name="Array" /> √® <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-407">
              <paramref name="Array" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="252b5-408">
            <paramref name="Rank" /> √® minore di 1 oppure <paramref name="Rank" /> √® maggiore del numero di dimensioni di <paramref name="Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-408">
              <paramref name="Rank" /> is less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/dim-statement.md">
          <span data-ttu-id="252b5-409">Istruzione Dim (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-409">Dim Statement (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/redim-statement.md">
          <span data-ttu-id="252b5-410">Istruzione ReDim (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-410">ReDim Statement (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="VarType">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.VariantType VarType (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.VariantType VarType(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function VarType (VarName As Object) As VariantType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::VariantType VarType(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member VarType : obj -&gt; Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Information.VarType VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName">
          <span data-ttu-id="252b5-411">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-411">Required.</span>
          </span>
          <span data-ttu-id="252b5-412">Variabile <see langword="Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-412">
              <see langword="Object" /> variable.</span>
          </span>
          <span data-ttu-id="252b5-413">Se <see langword="Option Strict" /> √® <see langword="Off" />, √® possibile passare una variabile di qualsiasi tipo di dati tranne una struttura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-413">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="252b5-414">Restituisce un valore <see langword="Integer" /> contenente la classificazione del tipo di dati di una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-414">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="252b5-415">Restituisce un valore <see langword="Integer" /> contenente la classificazione del tipo di dati di una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-415">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-416">Il valore intero restituito da `VarType` √® un membro del <xref:Microsoft.VisualBasic.VariantType>.</span><span class="sxs-lookup"><span data-stu-id="252b5-416">The integer value returned by `VarType` is a member of the <xref:Microsoft.VisualBasic.VariantType>.</span></span>  
  
 <span data-ttu-id="252b5-417">La tabella seguente illustra i valori restituiti da `VarType` per i casi speciali di `VarName`.</span><span class="sxs-lookup"><span data-stu-id="252b5-417">The following table shows the values returned by `VarType` for special cases of `VarName`.</span></span>  
  
|<span data-ttu-id="252b5-418">Tipo di dati rappresentato da `VarName`</span><span class="sxs-lookup"><span data-stu-id="252b5-418">Data type represented by `VarName`</span></span>|<span data-ttu-id="252b5-419">Valore restituito da `VarType`</span><span class="sxs-lookup"><span data-stu-id="252b5-419">Value returned by `VarType`</span></span>|  
|----------------------------------------|---------------------------------|  
|[<span data-ttu-id="252b5-420">Nothing</span><span class="sxs-lookup"><span data-stu-id="252b5-420">Nothing</span></span>](~/docs/visual-basic/language-reference/nothing.md)|`VariantType.Object`|  
|<xref:System.DBNull>|`VariantType.Null`|  
|<span data-ttu-id="252b5-421">Enumerazione</span><span class="sxs-lookup"><span data-stu-id="252b5-421">Enumeration</span></span>|<span data-ttu-id="252b5-422">Tipo di dati sottostante (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, o `ULong`)</span><span class="sxs-lookup"><span data-stu-id="252b5-422">Underlying data type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`)</span></span>|  
|<span data-ttu-id="252b5-423">Matrice</span><span class="sxs-lookup"><span data-stu-id="252b5-423">Array</span></span>|<span data-ttu-id="252b5-424">OR bit per bit del tipo di elemento di matrice e `VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="252b5-424">Bitwise OR of array element type and `VariantType.Array`</span></span>|  
|<span data-ttu-id="252b5-425">Matrice di matrici</span><span class="sxs-lookup"><span data-stu-id="252b5-425">Array of arrays</span></span>|<span data-ttu-id="252b5-426">OR bit per bit di `VariantType.Object` e `VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="252b5-426">Bitwise OR of `VariantType.Object` and `VariantType.Array`</span></span>|  
|<span data-ttu-id="252b5-427">Struttura (<xref:System.ValueType?displayProperty=nameWithType>)</span><span class="sxs-lookup"><span data-stu-id="252b5-427">Structure (<xref:System.ValueType?displayProperty=nameWithType>)</span></span>|`VariantType.UserDefinedType`|  
|<xref:System.Exception>|`VariantType.Error`|  
|<span data-ttu-id="252b5-428">Sconosciuto</span><span class="sxs-lookup"><span data-stu-id="252b5-428">Unknown</span></span>|`VariantType.Object`|  
  
   
  
## Examples  
 <span data-ttu-id="252b5-429">L'esempio seguente usa il `VarType` funzione per restituire informazioni di classificazione del tipo di dati su diverse variabili.</span><span class="sxs-lookup"><span data-stu-id="252b5-429">The following example uses the `VarType` function to return data type classification information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="252b5-430">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-430">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="VbTypeName">
      <MemberSignature Language="C#" Value="public static string VbTypeName (string UrtName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string VbTypeName(string UrtName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VbTypeName (UrtName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VbTypeName(System::String ^ UrtName);" />
      <MemberSignature Language="F#" Value="static member VbTypeName : string -&gt; string" Usage="Microsoft.VisualBasic.Information.VbTypeName UrtName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="UrtName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="UrtName">
          <span data-ttu-id="252b5-431">Obbligatorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-431">Required.</span>
          </span>
          <span data-ttu-id="252b5-432">Variabile <see langword="String" /> contenente un nome del tipo utilizzato da Common Language Runtime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-432">
              <see langword="String" /> variable containing a type name used by the common language runtime.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="252b5-433">Restituisce un valore <see langword="String" /> contenente il nome del tipo di dati di Visual Basic di una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-433">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="252b5-434">Restituisce un valore <see langword="String" /> contenente il nome del tipo di dati di Visual Basic di una variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-434">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="252b5-435">`VbTypeName` Restituisce il nome di tipo Visual Basic corrispondente al nome del tipo common language runtime.</span><span class="sxs-lookup"><span data-stu-id="252b5-435">`VbTypeName` returns the Visual Basic type name corresponding to the common language runtime type name.</span></span> <span data-ttu-id="252b5-436">Ad esempio, se `UrtName` contiene "Int32" o "Int32", `VbTypeName` restituisce "Integer".</span><span class="sxs-lookup"><span data-stu-id="252b5-436">For example, if `UrtName` contains "Int32" or "System.Int32", `VbTypeName` returns "Integer".</span></span> <span data-ttu-id="252b5-437">Se `VbTypeName` non riconosce il valore di `UrtName`, viene restituito `Nothing` (non la stringa "Nothing").</span><span class="sxs-lookup"><span data-stu-id="252b5-437">If `VbTypeName` does not recognize the value of `UrtName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
 <span data-ttu-id="252b5-438">Il nome del tipo in `UrtName` pu√≤ essere ottenuto da diverse origini, ad esempio dal <xref:System.Reflection.MemberInfo.Name%2A> propriet√† nel <xref:System.Reflection.MemberInfo> matrice del <xref:System.Type> classe.</span><span class="sxs-lookup"><span data-stu-id="252b5-438">The type name in `UrtName` can be obtained from various sources, for example from the <xref:System.Reflection.MemberInfo.Name%2A> property in the <xref:System.Reflection.MemberInfo> array of the <xref:System.Type> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="252b5-439">L'esempio seguente usa il `VbTypeName` funzione per restituire i nomi dei tipi di dati per diverse variabili.</span><span class="sxs-lookup"><span data-stu-id="252b5-439">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#56)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="252b5-440">Riepilogo dei tipi di dati (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="252b5-440">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>