<Type Name="VBMath" FullName="Microsoft.VisualBasic.VBMath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="faf721f8a883c9e1e70696df3f0f2703ce1406c3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36658374" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class VBMath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VBMath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBMath" />
  <TypeSignature Language="VB.NET" Value="Public Module VBMath" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBMath sealed" />
  <TypeSignature Language="F#" Value="type VBMath = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Il modulo <see langword="VbMath" /> contiene procedure che consentono di eseguire operazioni matematiche.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo modulo supporta le parole chiave del linguaggio Visual Basic e i membri di libreria run-time per la generazione di numeri casuali.  
  
   
  
## Examples  
 Questo esempio viene utilizzato il `Rnd` funzione per generare un valore intero casuale compreso nell'intervallo da 1 a 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Randomize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza il generatore di numeri casuali.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize();" />
      <MemberSignature Language="F#" Value="static member Randomize : unit -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inizializza il generatore di numeri casuali.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo overload del metodo di `Randomize` metodo non accetta un valore di inizializzazione. Al contrario, il valore restituito da timer di sistema viene utilizzato come nuovo valore di inizializzazione.  
  
 Se `Randomize` non viene utilizzato, il `Rnd` funzione (senza argomenti) utilizza lo stesso numero come valore di inizializzazione la prima volta che viene chiamata e successivamente viene utilizzato l'ultimo numero generato come valore di inizializzazione.  
  
> [!NOTE]
>  Per ripetere le sequenze di numeri casuali, chiamare `Rnd` con un argomento negativo immediatamente prima di utilizzare `Randomize` con un argomento numerico.  
  
> [!IMPORTANT]
>  Poiché il `Random` istruzione e `Rnd` funzione iniziare con un valore di inizializzazione e generazione di numeri che rientrano in un intervallo limitato, i risultati potrebbero essere prevedibili da un utente che conosce l'algoritmo utilizzato per la loro generazione. Di conseguenza, il `Random` istruzione e `Rnd` funzione non deve essere usata per generare numeri casuali per l'utilizzo nella crittografia. Per ulteriori informazioni, vedere <xref:System.Security.Cryptography.RandomNumberGenerator>.  
  
   
  
## Examples  
 Questo esempio viene utilizzato il `Randomize` istruzione per inizializzare il generatore di numeri casuali. Poiché l'argomento number è stato omesso, `Randomize` utilizza il valore restituito dal `Timer` funzionare come nuovo valore di inizializzazione.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
      </Docs>
    </Member>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize(float64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize (Number As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize(double Number);" />
      <MemberSignature Language="F#" Value="static member Randomize : double -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number">Facoltativo. Oggetto <see langword="Object" /> o qualsiasi espressione numerica valida.</param>
        <summary>Inizializza il generatore di numeri casuali.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Randomize` viene utilizzato `Number` per inizializzare il `Rnd` generatore di numeri casuali della funzione, assegnarle un nuovo valore di inizializzazione. Se si omette `Number`, il valore restituito da timer di sistema viene utilizzato come nuovo valore di inizializzazione.  
  
 Se `Randomize` non viene utilizzato, il `Rnd` funzione (senza argomenti) utilizza lo stesso numero come valore di inizializzazione la prima volta che viene chiamata e successivamente viene utilizzato l'ultimo numero generato come valore di inizializzazione.  
  
> [!NOTE]
>  Per ripetere le sequenze di numeri casuali, chiamare `Rnd` con un argomento negativo immediatamente prima di utilizzare `Randomize` con un argomento numerico. Utilizzo `Randomize` con lo stesso valore per `Number` non ripetere la sequenza precedente.  
  
> [!IMPORTANT]
>  Poiché il `Random` istruzione e `Rnd` funzione iniziare con un valore di inizializzazione e generazione di numeri che rientrano in un intervallo limitato, i risultati potrebbero essere prevedibili da un utente che conosce l'algoritmo utilizzato per la loro generazione. Di conseguenza, il `Random` istruzione e `Rnd` funzione non deve essere usata per generare numeri casuali per l'utilizzo nella crittografia. Per ulteriori informazioni, vedere <xref:System.Security.Cryptography.RandomNumberGenerator>.  
  
   
  
## Examples  
 Questo esempio viene utilizzato il `Randomize` istruzione per inizializzare il generatore di numeri casuali. Poiché l'argomento number è stato omesso, `Randomize` utilizza il valore restituito dal `Timer` funzionare come nuovo valore di inizializzazione.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Rnd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un numero casuale di tipo <see langword="Single" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd();" />
      <MemberSignature Language="F#" Value="static member Rnd : unit -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un numero casuale di tipo <see langword="Single" />.</summary>
        <returns>Il successivo numero casuale nella sequenza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `Rnd` funzione restituisce un valore minore di 1, ma è maggiore o uguale a zero.  
  
 Prima di chiamare `Rnd`, utilizzare il `Randomize` istruzione senza un argomento per inizializzare il generatore di numeri casuali con un valore di inizializzazione in base ai timer di sistema.  
  
 Per generare numeri casuali compresi in un intervallo specifico, utilizzare la formula seguente.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 In questo caso `upperbound` è il numero massimo dell'intervallo, e `lowerbound` è il numero più basso nell'intervallo.  
  
> [!NOTE]
>  Per ripetere le sequenze di numeri casuali, chiamare `Rnd` con un argomento negativo immediatamente prima di utilizzare `Randomize` con un argomento numerico.  
  
> [!IMPORTANT]
>  Poiché il `Random` istruzione e `Rnd` funzione iniziare con un valore di inizializzazione e generazione di numeri che rientrano in un intervallo limitato, i risultati potrebbero essere prevedibili da un utente che conosce l'algoritmo utilizzato per la loro generazione. Di conseguenza, il `Random` istruzione e `Rnd` funzione non deve essere usata per generare numeri casuali per l'utilizzo nella crittografia.  
  
   
  
## Examples  
 Questo esempio viene utilizzato il `Rnd` funzione per generare un valore intero casuale compreso nell'intervallo da 1 a 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
      </Docs>
    </Member>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd(float32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd(float Number);" />
      <MemberSignature Language="F#" Value="static member Rnd : single -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number">Facoltativo. Valore <see langword="Single" /> o qualsiasi espressione <see langword="Single" /> valida.</param>
        <summary>Restituisce un numero casuale di tipo <see langword="Single" />.</summary>
        <returns>Se il valore di Number è minore di zero, Rnd genera lo stesso numero ogni volta, utilizzando <paramref name="Number" /> come valore di inizializzazione. Se il valore di Number è maggiore di zero, Rnd genera il successivo numero casuale nella sequenza. Se il valore di Number è uguale a zero, Rnd genera l'ultimo numero generato. Se Number viene omesso, Rnd genera il successivo numero casuale nella sequenza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `Rnd` funzione restituisce un valore minore di 1, ma è maggiore o uguale a zero.  
  
 Il valore di `Number` determina la modalità `Rnd` genera un numero casuale.  
  
 Per ogni valore iniziale specificato, la stessa sequenza numerica viene generata perché ogni chiamata successiva per la `Rnd` funzione utilizza il numero generato in precedenza come valore di inizializzazione per il numero successivo nella sequenza.  
  
 Prima di chiamare `Rnd`, utilizzare il `Randomize` istruzione senza un argomento per inizializzare il generatore di numeri casuali con un valore di inizializzazione in base ai timer di sistema.  
  
 Per generare numeri casuali compresi in un intervallo specifico, utilizzare la formula seguente.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 In questo caso `upperbound` è il numero massimo dell'intervallo, e `lowerbound` è il numero più basso nell'intervallo.  
  
> [!NOTE]
>  Per ripetere le sequenze di numeri casuali, chiamare `Rnd` con un argomento negativo immediatamente prima di utilizzare `Randomize` con un argomento numerico. Utilizzo `Randomize` con lo stesso valore per `Number` non ripetere la sequenza precedente.  
  
> [!IMPORTANT]
>  Poiché il `Random` istruzione e `Rnd` funzione iniziare con un valore di inizializzazione e generazione di numeri che rientrano in un intervallo limitato, i risultati potrebbero essere prevedibili da un utente che conosce l'algoritmo utilizzato per la loro generazione. Di conseguenza, il `Random` istruzione e `Rnd` funzione non deve essere usata per generare numeri casuali per l'utilizzo nella crittografia.  
  
   
  
## Examples  
 Questo esempio viene utilizzato il `Rnd` funzione per generare un valore intero casuale compreso nell'intervallo da 1 a 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
      </Docs>
    </Member>
  </Members>
</Type>