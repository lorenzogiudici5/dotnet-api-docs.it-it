<Type Name="HttpListenerElement" FullName="System.Net.Configuration.HttpListenerElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="94bfbb3f47cf1799104ef23bdabc47744b65aec7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460045" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpListenerElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpListenerElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Net.Configuration.HttpListenerElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerElement sealed : System::Configuration::ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta l'elemento HttpListener nel file di configurazione. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe corrisponde alla \<httpListener > elemento (impostazioni di rete) dell'elemento di configurazione. Questa classe fornisce accesso a livello di codice alle informazioni che possono essere archiviate nei file di configurazione.  
  
 Il <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> proprietà indica se <xref:System.Net.HttpListener> utilizza l'URI senza caratteri escape non elaborato anziché l'URI convertito in cui vengono convertiti i valori codificati in percentuale e vengono eseguiti altri passaggi di normalizzazione.  
  
 Quando un <xref:System.Net.HttpListener> istanza riceve una richiesta tramite il `http.sys` servizio, crea un'istanza della stringa URI fornita da `http.sys`e lo espone come il <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> proprietà.  
  
 Il `http.sys` servizio espone due stringhe URI di richiesta:  
  
-   URI non elaborato  
  
-   URI convertito  
  
 L'URI non elaborato il <xref:System.Uri?displayProperty=nameWithType> fornito nella riga della richiesta di una richiesta HTTP:  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 L'URI non elaborato fornito da `http.sys` per è indicata in precedenza, la richiesta di "percorso /". Rappresenta la stringa che segue il verbo HTTP, come è stato inviato in rete.  
  
 Il `http.sys` servizio crea un URI convertito dalle informazioni fornite nella richiesta utilizzando l'URI specificato nella riga della richiesta HTTP e l'intestazione Host per determinare il server di origine la richiesta deve essere inoltrato a. Questa operazione viene eseguita confrontando le informazioni della richiesta con un set di prefissi URI registrati. La documentazione SDK Server HTTP fa riferimento all'URI convertito come il [HTTP_COOKED_URL](http://go.microsoft.com/fwlink/?LinkID=166108) struttura.  
  
 Per poter essere in grado di confrontare la richiesta con i prefissi URI registrati, deve essere eseguita la normalizzazione della richiesta. Nell'esempio precedente l'URI convertito sarà come segue:  
  
 `http://www.contoso.com/path/`  
  
 Il `http.sys` servizio combina il <xref:System.Uri.Host%2A?displayProperty=nameWithType> valore della proprietà e la stringa nella riga della richiesta per creare un URI convertito. Inoltre, `http.sys` e <xref:System.Uri?displayProperty=nameWithType> classe anche eseguire le operazioni seguenti:  
  
-   Non consente l'escape tutte le percentuali di valori codificati.  
  
-   Caratteri non ASCII converte codificati in percentuale in una rappresentazione dei caratteri UTF-16. Si noti che i caratteri UTF-8 e ANSI o DBCS sono supportati anche i caratteri Unicode (codifica Unicode utilizzando il formato % uXXXX).  
  
-   Consente di eseguire altri passaggi di normalizzazione, come la compressione del percorso.  
  
 Poiché la richiesta non contiene alcuna informazione sulla codifica utilizzata per i valori codificati in percentuale, potrebbe non essere possibile determinare la codifica corretta solo analizzando i valori codificati in percentuale.  
  
 Pertanto `http.sys` fornisce due chiavi del Registro di sistema per la modifica del processo:  
  
|Chiave del Registro di sistema|Valore predefinito|Descrizione|  
|------------------|-------------------|-----------------|  
|EnableNonUTF8|1|Se è zero, `http.sys` accetta solo URL con codifica UTF-8.<br /><br /> Se diverso da zero, `http.sys` accetta anche URL con codifica ANSI o DBCS nelle richieste.|  
|FavorUTF8|1|Se diverso da zero, `http.sys` sempre eseguito un tentativo di decodificare un URL come UTF-8 per primo; se tale conversione non riesce ed EnableNonUTF8 è diverso da zero, Http.sys quindi tenta di decodificarlo come ANSI o DBCS.<br /><br /> Se è zero (ed EnableNonUTF8 è diverso da zero), `http.sys` eseguito un tentativo di decodificare come ANSI o DBCS; se non è riuscita, prova una conversione di UTF-8.|  
  
 Quando <xref:System.Net.HttpListener> riceve una richiesta, viene utilizzato l'URI convertito da `http.sys` come input per il <xref:System.Net.HttpListenerRequest.Url%2A> proprietà.  
  
 È necessario supportare i caratteri oltre ai caratteri e numeri negli URI. Un esempio è il seguente URI utilizzato per recuperare informazioni sul cliente per il cliente numero "1/3812":  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 Si noti la barra codificati in percentuale nell'Uri (% 2F). Questa operazione è necessaria, poiché in questo caso il carattere di barra rappresenta dati e non un delimitatore di percorso.  
  
 Passare la stringa al costruttore Uri determinerà l'URI seguente:  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 Il percorso di suddivisione in segmenti comporta i seguenti elementi:  
  
 `Customer('1`  
  
 `3812')`  
  
 Non è lo scopo del mittente della richiesta.  
  
 Se il <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> è impostata su false, successivamente, quando il <xref:System.Net.HttpListener> riceve una richiesta, viene utilizzato l'URI non elaborato anziché l'URI convertito da `http.sys` come input per il <xref:System.Net.HttpListenerRequest.Url%2A> proprietà.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="P:System.Net.HttpListenerRequest.Url" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpListenerElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Configuration.HttpListenerElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpListenerElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Configuration.HttpListenerElement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeouts">
      <MemberSignature Language="C#" Value="public System.Net.Configuration.HttpListenerTimeoutsElement Timeouts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Configuration.HttpListenerTimeoutsElement Timeouts" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerElement.Timeouts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timeouts As HttpListenerTimeoutsElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Configuration::HttpListenerTimeoutsElement ^ Timeouts { System::Net::Configuration::HttpListenerTimeoutsElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("timeouts")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.HttpListenerTimeoutsElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene gli elementi di timeout predefinito utilizzati per un oggetto <see cref="T:System.Net.HttpListener" />.</summary>
        <value>Restituisce <see cref="T:System.Net.Configuration.HttpListenerTimeoutsElement" />.  
  
 Elementi di timeout predefinito utilizzati per un oggetto <see cref="T:System.Net.HttpListener" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
        <altmember cref="T:System.Net.Configuration.HttpListenerTimeoutsElement" />
      </Docs>
    </Member>
    <Member MemberName="UnescapeRequestUrl">
      <MemberSignature Language="C#" Value="public bool UnescapeRequestUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnescapeRequestUrl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnescapeRequestUrl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnescapeRequestUrl { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("unescapeRequestUrl", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se <see cref="T:System.Net.HttpListener" /> utilizza l'URI senza codice di escape non elaborato anziché l'URI convertito.</summary>
        <value>Valore booleano che indica se <see cref="T:System.Net.HttpListener" /> utilizza l'URI senza codice di escape non elaborato anziché l'URI convertito.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> proprietà indica se <xref:System.Net.HttpListener> utilizza l'URI senza caratteri escape non elaborato anziché l'URI convertito in cui vengono convertiti i valori codificati in percentuale e vengono eseguiti altri passaggi di normalizzazione.  
  
 Quando un <xref:System.Net.HttpListener> istanza riceve una richiesta tramite il `http.sys` servizio, crea un'istanza della stringa URI fornita da `http.sys`e lo espone come il <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> proprietà.  
  
 Il `http.sys` servizio espone due stringhe URI di richiesta:  
  
-   URI non elaborato  
  
-   URI convertito  
  
 L'URI non elaborato il <xref:System.Uri?displayProperty=nameWithType> fornito nella riga della richiesta di una richiesta HTTP:  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 L'URI non elaborato fornito da `http.sys` per è indicata in precedenza, la richiesta di "percorso /". Rappresenta la stringa che segue il verbo HTTP, come è stato inviato in rete.  
  
 Il `http.sys` servizio crea un URI convertito dalle informazioni fornite nella richiesta utilizzando l'URI specificato nella riga della richiesta HTTP e l'intestazione Host per determinare il server di origine la richiesta deve essere inoltrato a. Questa operazione viene eseguita confrontando le informazioni della richiesta con un set di prefissi URI registrati. La documentazione SDK Server HTTP fa riferimento all'URI convertito come il [HTTP_COOKED_URL](http://go.microsoft.com/fwlink/?LinkID=166108) struttura.  
  
 Per poter essere in grado di confrontare la richiesta con i prefissi URI registrati, deve essere eseguita la normalizzazione della richiesta. Nell'esempio precedente l'URI convertito sarà come segue:  
  
 `http://www.contoso.com/path/`  
  
 Il `http.sys` servizio combina il <xref:System.Uri.Host%2A?displayProperty=nameWithType> valore della proprietà e la stringa nella riga della richiesta per creare un URI convertito. Inoltre, `http.sys` e <xref:System.Uri?displayProperty=nameWithType> classe anche eseguire le operazioni seguenti:  
  
-   Non consente l'escape tutte le percentuali di valori codificati.  
  
-   Caratteri non ASCII converte codificati in percentuale in una rappresentazione dei caratteri UTF-16. Si noti che i caratteri UTF-8 e ANSI o DBCS sono supportati anche i caratteri Unicode (codifica Unicode utilizzando il formato % uXXXX).  
  
-   Consente di eseguire altri passaggi di normalizzazione, come la compressione del percorso.  
  
 Poiché la richiesta non contiene alcuna informazione sulla codifica utilizzata per i valori codificati in percentuale, potrebbe non essere possibile determinare la codifica corretta solo analizzando i valori codificati in percentuale.  
  
 Pertanto `http.sys` fornisce due chiavi del Registro di sistema per la modifica del processo:  
  
|Chiave del Registro di sistema|Valore predefinito|Descrizione|  
|------------------|-------------------|-----------------|  
|EnableNonUTF8|1|Se è zero, `http.sys` accetta solo URL con codifica UTF-8.<br /><br /> Se diverso da zero, `http.sys` accetta anche URL con codifica ANSI o DBCS nelle richieste.|  
|FavorUTF8|1|Se diverso da zero, `http.sys` sempre eseguito un tentativo di decodificare un URL come UTF-8 per primo; se tale conversione non riesce ed EnableNonUTF8 è diverso da zero, Http.sys quindi tenta di decodificarlo come ANSI o DBCS.<br /><br /> Se è zero (ed EnableNonUTF8 è diverso da zero), `http.sys` eseguito un tentativo di decodificare come ANSI o DBCS; se non è riuscita, prova una conversione di UTF-8.|  
  
 Quando <xref:System.Net.HttpListener> riceve una richiesta, viene utilizzato l'URI convertito da `http.sys` come input per il <xref:System.Net.HttpListenerRequest.Url%2A> proprietà.  
  
 È necessario supportare i caratteri oltre ai caratteri e numeri negli URI. Un esempio è il seguente URI utilizzato per recuperare informazioni sul cliente per il cliente numero "1/3812":  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 Si noti la barra codificati in percentuale nell'Uri (% 2F). Questa operazione è necessaria, poiché in questo caso il carattere di barra rappresenta dati e non un delimitatore di percorso.  
  
 Passare la stringa al costruttore Uri determinerà l'URI seguente:  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 Il percorso di suddivisione in segmenti comporta i seguenti elementi:  
  
 `Customer('1`  
  
 `3812')`  
  
 Non è lo scopo del mittente della richiesta.  
  
 Se il <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> è impostata su false, successivamente, quando il <xref:System.Net.HttpListener> riceve una richiesta, viene utilizzato l'URI non elaborato anziché l'URI convertito da `http.sys` come input per il <xref:System.Net.HttpListenerRequest.Url%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="P:System.Net.HttpListenerRequest.Url" />
      </Docs>
    </Member>
  </Members>
</Type>