<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bde6eef3e191bd0a25d4c462afa81d1cbfd131ba" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37733115" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Trasforma i dati XML utilizzando un foglio di stile XSLT (Extensible Stylesheet Language for Transformations).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in Microsoft .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve usare lo spazio dei nomi `http://www.w3.org/1999/XSL/Transform`.  
  
 Argomenti aggiuntivi possono anche essere aggiunti al foglio di stile usando il <xref:System.Xml.Xsl.XsltArgumentList> classe. Questa classe contiene i parametri di input per gli oggetti di estensione e foglio di stile che possono essere chiamati dal foglio di stile.  
  
 Per trasformare dati XML:  
  
1.  Creare un <xref:System.Xml.Xsl.XslTransform> oggetto.  
  
2.  Usare il <xref:System.Xml.Xsl.XslTransform.Load%2A> per caricare il foglio di stile per la trasformazione. Questo metodo dispone di diversi overload e può caricare un foglio di stile usando un <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, o un URL con il percorso del file.  
  
3.  Usare il <xref:System.Xml.Xsl.XslTransform.Transform%2A> metodo per trasformare i dati XML. Questo metodo dispone di diversi overload e può gestire diversi tipi di input e output. È inoltre possibile specificare un <xref:System.Xml.Xsl.XsltArgumentList> contenente argomenti aggiuntivi da utilizzare come input durante la trasformazione.  
  
 **Considerazioni sulla sicurezza**  
  
 Quando si crea un'applicazione in cui viene utilizzata la classe <xref:System.Xml.Xsl.XslTransform>, è necessario conoscere i seguenti elementi e le relative implicazioni:  
  
-   Gli oggetti di estensione sono abilitati per impostazione predefinita. Vengono utilizzati se un oggetto <xref:System.Xml.Xsl.XsltArgumentList> contenente oggetti di estensione viene passato al metodo <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
-   Nei fogli di stile XSLT possono essere inclusi riferimenti ad altri file e a blocchi di script incorporati. Un utente malintenzionato può sfruttare questa situazione fornendo dati o fogli di stile che quando eseguita causerà il sistema di elaborare fino a quando il computer esaurimento delle risorse.  
  
-   Le applicazioni XSLT che vengono eseguite in un ambiente con attendibilità mista potrebbero consentire lo spoofing del foglio di stile. Ad esempio, un utente malintenzionato può caricare un oggetto con un foglio di stile dannoso e trasferirlo a un altro utente che in un secondo momento chiama il metodo <xref:System.Xml.Xsl.XslTransform.Transform%2A> ed esegue la trasformazione.  
  
 Questi problemi di sicurezza possono essere ridotte non accettando <xref:System.Xml.Xsl.XslTransform> oggetti, fogli di stile XSLT o dati di origine XML da origini non attendibili.  
  
 **Supporto per gli script**  
  
 Questa classe supporta lo scripting incorporato mediante il `msxsl:script` elemento.  
  
 Nella versione 1.1 di .NET Framework, l'evidenza del foglio di stile determina quali autorizzazioni sono assegnate agli script incorporati.  
  
-   Se il foglio di stile è stato caricato da un identificatore URI (Uniform Resource), l'URI viene usato per creare l'evidenza. Questo include l'URI e il sito e la zona.  
  
-   Se il foglio di stile è stato caricato da un'altra origine, è possibile fornire la prova passando un <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> dell'oggetto per il <xref:System.Xml.Xsl.XslTransform.Load%2A> (metodo). In caso contrario, l'assembly dello script sia totalmente attendibile.  
  
 I chiamanti semi-trusted: `UnmanagedCode` autorizzazione è necessaria per compilare lo script incorporato. `ControlEvidence` l'autorizzazione è necessaria per fornire <xref:System.Security.Policy.Evidence> per il <xref:System.Xml.Xsl.XslTransform.Load%2A> (metodo). Oggetto <xref:System.Security.SecurityException> viene generata un'eccezione se il chiamante non ha le autorizzazioni necessarie. Per altre informazioni, vedere <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> e <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>.  
  
 Il `msxsl:script` elemento presenta i requisiti seguenti:  
  
-   Il `msxsl:script` elemento appartiene il `urn:schemas-microsoft-com:xslt` dello spazio dei nomi. Il foglio di stile deve includere la dichiarazione dello spazio dei nomi `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.  
  
-   Il `msxsl:script` elemento può includere un `language` attributo che specifica il linguaggio di scripting da utilizzare. Il valore della `language` attributo deve essere uno dei seguenti: c#, CSharp, VB, VisualBasic, JScript o JavaScript. Poiché il nome della lingua non è tra maiuscole e minuscole, JavaScript e javascript sono entrambi validi. Se un `language` attributo non è specificato, viene impostato su JScript.  
  
-   Il `msxsl:script` elemento deve includere un `implements-prefix` attributo che contiene il prefisso che rappresenta lo spazio dei nomi associato al blocco di script. Questo spazio dei nomi deve essere definito all'interno del foglio di stile. Un foglio di stile può includere più blocchi di script che vengono raggruppati in base dello spazio dei nomi. Non è possibile avere blocchi di script con più lingue all'interno dello stesso spazio dei nomi. Blocchi di script possono chiamare una funzione definita in un altro blocco di script, purché i blocchi di script si trovano all'interno dello stesso spazio dei nomi. Il contenuto di un blocco di script venga analizzato in base a regole e alla sintassi del linguaggio di script (fornito dal `language` attributo). Ad esempio, se si dispone di un blocco di script c#, commenti sarebbero il prefisso per il `//` caratteri. I commenti devono essere contenuto XML valido.  
  
 `Note` È consigliabile racchiudere i blocchi di script in una sezione CDATA.  
  
```  
<msxsl:script implements-prefix='xy' language='C#'>  
  <![CDATA[  
  // Add code here.  
  ]]]></format>
    </remarks>
    <threadsafe>
      <see cref="T:System.Xml.Xsl.XslTransform" /> gli oggetti sono thread-safe solo per le operazioni di trasformazione. Altre operazioni non sono necessariamente essere thread-safe. È necessario assicurarsi che nessun altro metodi vengano chiamati sull'oggetto durante le operazioni di caricamento.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Xsl.XslTransform" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica il foglio di stile XSLT, inclusi i fogli di stile a cui viene fatto riferimento negli elementi <see langword="xsl:include" /> e <see langword="xsl:import" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">URL che specifica il foglio di stile XSLT da caricare.</param>
        <summary>Carica il foglio di stile XSLT specificato da un URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.  
  
 Questo metodo carica il foglio di stile XSLT, inclusi gli eventuali fogli di stile a cui fa riferimento `xsl:include` e `xsl:import` elementi. Le risorse esterne vengono risolte utilizzando un <xref:System.Xml.XmlUrlResolver> senza credenziali utente. Se i fogli di stile di visualizzazione si trovano su una risorsa di rete che richiede l'autenticazione, usare l'overload che accetta un <xref:System.Xml.XmlResolver> come uno dei relativi argomenti e specificare un <xref:System.Xml.XmlResolver> con le credenziali necessarie.  
  
 Se il foglio di stile contiene script incorporati, lo script viene compilato in un assembly. L'URI del foglio di stile viene usato per creare l'evidenza, che viene applicato all'assembly. Per problemi con il <xref:System.Xml.Xsl.XslTransform.Load%2A> fogli di stile e di metodo con script incorporati, vedere l'articolo Q316755 nella Microsoft Knowledge Base al http://support.microsoft.com.  
  
> [!NOTE]
>  Se il chiamante non dispone `UnmanagedCode` autorizzazione, lo script incorporato non viene compilata e un <xref:System.Security.SecurityException> viene generata un'eccezione. Per altre informazioni, vedere <xref:System.Security.Permissions.SecurityPermission> e <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Nell'esempio seguente Trasforma un documento XML in un documento HTML. Visualizza il codice ISBN, titolo e il prezzo per ogni libro in una tabella.  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 Nell'esempio vengono utilizzati i seguenti due file di input:  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">La risorsa caricata non è un foglio di stile valido.</exception>
        <exception cref="T:System.Security.SecurityException">Il foglio di stile contiene script incorporati e il chiamante non dispone di autorizzazione <see langword="UnmanagedCode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Oggetto <see cref="T:System.Xml.XmlReader" /> contenente il foglio di stile XSLT.</param>
        <summary>Carica il foglio di stile XSLT contenuto nell'oggetto <see cref="T:System.Xml.XmlReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Questo metodo carica il foglio di stile XSLT, inclusi gli eventuali fogli di stile a cui fa riferimento `xsl:include` e `xsl:import` elementi. Le risorse esterne vengono risolte utilizzando un <xref:System.Xml.XmlUrlResolver> senza credenziali utente. Se i fogli di stile di visualizzazione si trovano su una risorsa di rete che richiede l'autenticazione, usare l'overload che accetta un <xref:System.Xml.XmlResolver> come uno dei relativi argomenti e specificare un <xref:System.Xml.XmlResolver> con le credenziali necessarie.  
  
 Il foglio di stile viene caricato dal nodo corrente del <xref:System.Xml.XmlReader> attraverso tutti i relativi elementi figlio. In questo modo è possibile usare una parte di un documento come il foglio di stile. Dopo che il <xref:System.Xml.Xsl.XslTransform.Load%2A> restituzione del metodo, il <xref:System.Xml.XmlReader> è posizionato sul nodo successivo dopo la fine del foglio di stile. Se viene raggiunta la fine del documento, l'oggetto <xref:System.Xml.XmlReader> viene posizionato alla fine del file (EOF).  
  
 Se il foglio di stile contiene le entità, è necessario specificare un <xref:System.Xml.XmlReader> che può risolvere le entità (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> restituisce `true`). In questo caso, un <xref:System.Xml.XmlValidatingReader> può essere utilizzato.  
  
 Se il foglio di stile contiene script incorporati, lo script viene compilato in un assembly. L'assembly con attendibilità totale. La procedura consigliata consiste nel fornire l'evidenza mediante il <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> (metodo). Per problemi con il <xref:System.Xml.Xsl.XslTransform.Load%2A> fogli di stile e di metodo con script incorporati, vedere l'articolo Q316755 nella Microsoft Knowledge Base al http://support.microsoft.com.  
  
> [!NOTE]
>  Se il chiamante non dispone `UnmanagedCode` autorizzazione, lo script incorporato non viene compilata e un <xref:System.Security.SecurityException> viene generata un'eccezione. Per altre informazioni, vedere <xref:System.Security.Permissions.SecurityPermission> e <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Nell'esempio seguente Trasforma un file XML, l'ordinamento di tutti i libri in base al titolo.  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 L'esempio Usa i seguenti file di dati come input.  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Il nodo corrente non è conforme a un foglio di stile valido.</exception>
        <exception cref="T:System.Security.SecurityException">Il foglio di stile contiene script incorporati e il chiamante non dispone di autorizzazione <see langword="UnmanagedCode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Oggetto che implementa l'interfaccia <see cref="T:System.Xml.XPath.IXPathNavigable" />. In .NET Framework può essere un <see cref="T:System.Xml.XmlNode" /> (in genere un <see cref="T:System.Xml.XmlDocument" />) o un <see cref="T:System.Xml.XPath.XPathDocument" /> contenente il foglio di stile XSLT.</param>
        <summary>Carica il foglio di stile XSLT contenuto nell'oggetto <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Questo metodo carica il foglio di stile XSLT, inclusi gli eventuali fogli di stile a cui fa riferimento `xsl:include` e `xsl:import` elementi. Le risorse esterne vengono risolte utilizzando un <xref:System.Xml.XmlUrlResolver> senza credenziali utente. Se i fogli di stile di visualizzazione si trovano su una risorsa di rete che richiede l'autenticazione, usare l'overload che accetta un <xref:System.Xml.XmlResolver> come uno dei relativi argomenti e specificare un <xref:System.Xml.XmlResolver> con le credenziali necessarie.  
  
 Se il foglio di stile contiene script incorporati, lo script viene compilato in un assembly. L'assembly con attendibilità totale. La procedura consigliata consiste nel fornire l'evidenza mediante il <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> (metodo). Per problemi con il <xref:System.Xml.Xsl.XslTransform.Load%2A> fogli di stile e di metodo con script incorporati, vedere l'articolo Q316755 nella Microsoft Knowledge Base al http://support.microsoft.com.  
  
> [!NOTE]
>  Se il chiamante non dispone `UnmanagedCode` autorizzazione, lo script incorporato non viene compilata e un <xref:System.Security.SecurityException> viene generata un'eccezione. Per altre informazioni, vedere <xref:System.Security.Permissions.SecurityPermission> e <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">La risorsa caricata non è un foglio di stile valido.</exception>
        <exception cref="T:System.Security.SecurityException">Il foglio di stile contiene script incorporati e il chiamante non dispone di autorizzazione <see langword="UnmanagedCode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Oggetto <see cref="T:System.Xml.XPath.XPathNavigator" /> contenente il foglio di stile XSLT.</param>
        <summary>Carica il foglio di stile XSLT contenuto nell'oggetto <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Questo metodo carica il foglio di stile XSLT, inclusi gli eventuali fogli di stile a cui fa riferimento `xsl:include` e `xsl:import` elementi. Le risorse esterne vengono risolte utilizzando un <xref:System.Xml.XmlUrlResolver> senza credenziali utente. Se i fogli di stile di visualizzazione si trovano su una risorsa di rete che richiede l'autenticazione, usare l'overload che accetta un <xref:System.Xml.XmlResolver> come uno dei relativi argomenti e specificare un <xref:System.Xml.XmlResolver> con le credenziali necessarie.  
  
 Il foglio di stile viene caricato dalla posizione corrente di <xref:System.Xml.XPath.XPathNavigator>. Per usare solo una parte del documento caricato come foglio di stile, passare al nodo corrispondente all'inizio del foglio di stile. Dopo il <xref:System.Xml.Xsl.XslTransform.Load%2A> restituzione del metodo, il <xref:System.Xml.XPath.XPathNavigator> viene posizionato all'inizio del foglio di stile (sul `xsl:style sheet` nodo).  
  
 Se il foglio di stile contiene script incorporati, lo script viene compilato in un assembly. L'assembly con attendibilità totale. La procedura consigliata consiste nel fornire l'evidenza mediante il <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> (metodo). Per problemi con il <xref:System.Xml.Xsl.XslTransform.Load%2A> fogli di stile e di metodo con script incorporati, vedere l'articolo Q316755 nella Microsoft Knowledge Base al http://support.microsoft.com.  
  
> [!NOTE]
>  Se il chiamante non dispone `UnmanagedCode` autorizzazione, lo script incorporato non viene compilata e un <xref:System.Security.SecurityException> viene generata un'eccezione. Per altre informazioni, vedere <xref:System.Security.Permissions.SecurityPermission> e <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Il nodo corrente non è conforme a un foglio di stile valido.</exception>
        <exception cref="T:System.Security.SecurityException">Il foglio di stile contiene script incorporati e il chiamante non dispone di autorizzazione <see langword="UnmanagedCode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url">URL che specifica il foglio di stile XSLT da caricare.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> da usare per caricare il foglio di stile ed eventuali fogli di stile a cui si fa riferimento negli elementi <c>xsl:import</c> e <c>xsl:include</c>.  Se è <see langword="null" />, per aprire il foglio di stile verrà utilizzato un oggetto <see cref="T:System.Xml.XmlUrlResolver" /> predefinito senza credenziali utente. L'oggetto <see cref="T:System.Xml.XmlUrlResolver" /> predefinito non viene usato per risolvere eventuali risorse esterne presenti nel foglio di stile, pertanto gli elementi <c>xsl:import</c> e <c>xsl:include</c> non verranno risolti.  L'oggetto <see cref="T:System.Xml.XmlResolver" /> non viene inserito nella cache fino al completamento del metodo <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />.</param>
        <summary>Carica il foglio di stile XSLT specificato da un URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Se il foglio di stile contiene script incorporati, lo script viene compilato in un assembly. L'URI del foglio di stile viene usato per creare l'evidenza, che viene applicato all'assembly. Per problemi con il <xref:System.Xml.Xsl.XslTransform.Load%2A> fogli di stile e di metodo con script incorporati, vedere l'articolo Q316755 nella Microsoft Knowledge Base al http://support.microsoft.com.  
  
> [!NOTE]
>  Se il chiamante non dispone `UnmanagedCode` autorizzazione, lo script incorporato non viene compilata e un <xref:System.Security.SecurityException> viene generata un'eccezione. Per altre informazioni, vedere <xref:System.Security.Permissions.SecurityPermission> e <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Nell'esempio seguente Trasforma un documento XML in un documento HTML. L'esempio carica un foglio di stile XSLT che contiene un `xsl:include` elemento fa riferimento a un altro foglio di stile. Un' <xref:System.Xml.XmlUrlResolver> viene passato per il <xref:System.Xml.Xsl.XslTransform.Load%2A> metodo che imposta le credenziali necessarie per accedere alla risorsa di rete per il foglio di stile inclusi.  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 L'esempio Usa i seguenti file di dati come input.  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">La risorsa caricata non è un foglio di stile valido.</exception>
        <exception cref="T:System.Security.SecurityException">Il foglio di stile contiene script incorporati e il chiamante non dispone di autorizzazione <see langword="UnmanagedCode" />.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Oggetto <see cref="T:System.Xml.XmlReader" /> contenente il foglio di stile XSLT.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> usato per caricare i fogli di stile a cui si fa riferimento negli elementi <c>xsl:import</c> e <c>xsl:include</c>. Se è <see langword="null" /> , le risorse esterne non verranno risolte.  L'oggetto <see cref="T:System.Xml.XmlResolver" /> non viene inserito nella cache fino al completamento del metodo <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />.</param>
        <summary>Carica il foglio di stile XSLT contenuto nell'oggetto <see cref="T:System.Xml.XmlReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Questo metodo carica il foglio di stile XSLT, inclusi gli eventuali fogli di stile a cui fa riferimento `xsl:include` e `xsl:import` elementi. Il foglio di stile viene caricato dal nodo corrente del <xref:System.Xml.XmlReader> attraverso tutti i relativi elementi figlio. In questo modo è possibile usare una parte di un documento come il foglio di stile.  
  
 Dopo che il <xref:System.Xml.Xsl.XslTransform.Load%2A> restituzione del metodo, il <xref:System.Xml.XmlReader> è posizionato sul nodo successivo dopo la fine del foglio di stile. Se viene raggiunta la fine del documento, l'oggetto <xref:System.Xml.XmlReader> viene posizionato alla fine del file (EOF).  
  
 Se il foglio di stile contiene le entità, è necessario specificare un <xref:System.Xml.XmlReader> che può risolvere le entità (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> restituisce `true`). In questo caso, un <xref:System.Xml.XmlValidatingReader> può essere utilizzato.  
  
 Se il foglio di stile contiene script incorporati, lo script viene compilato in un assembly. L'assembly con attendibilità totale. La procedura consigliata consiste nel fornire l'evidenza mediante il <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> (metodo). Per problemi con il <xref:System.Xml.Xsl.XslTransform.Load%2A> fogli di stile e di metodo con script incorporati vedere l'articolo Q316755 nella Microsoft Knowledge Base al http://support.microsoft.com.  
  
> [!NOTE]
>  Se il chiamante non dispone `UnmanagedCode` autorizzazione, lo script incorporato non viene compilata e un <xref:System.Security.SecurityException> viene generata un'eccezione. Per altre informazioni, vedere <xref:System.Security.Permissions.SecurityPermission> e <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Il nodo corrente non è conforme a un foglio di stile valido.</exception>
        <exception cref="T:System.Security.SecurityException">Il foglio di stile contiene script incorporati e il chiamante non dispone di autorizzazione <see langword="UnmanagedCode" />.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Oggetto che implementa l'interfaccia <see cref="T:System.Xml.XPath.IXPathNavigable" />. In .NET Framework può essere un <see cref="T:System.Xml.XmlNode" /> (in genere un <see cref="T:System.Xml.XmlDocument" />) o un <see cref="T:System.Xml.XPath.XPathDocument" /> contenente il foglio di stile XSLT.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> usato per caricare i fogli di stile a cui si fa riferimento negli elementi <c>xsl:import</c> e <c>xsl:include</c>. Se è <see langword="null" /> , le risorse esterne non verranno risolte.  L'oggetto <see cref="T:System.Xml.XmlResolver" /> non viene inserito nella cache fino al completamento del metodo <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
        <summary>Carica il foglio di stile XSLT contenuto nell'oggetto <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Se il foglio di stile contiene script incorporati, lo script viene compilato in un assembly. L'assembly con attendibilità totale. La procedura consigliata consiste nel fornire l'evidenza mediante il <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> (metodo). Per problemi con il <xref:System.Xml.Xsl.XslTransform.Load%2A> fogli di stile e di metodo con script incorporati, vedere l'articolo Q316755 nella Microsoft Knowledge Base al http://support.microsoft.com.  
  
> [!NOTE]
>  Se il chiamante non dispone `UnmanagedCode` autorizzazione, lo script incorporato non viene compilata e un <xref:System.Security.SecurityException> viene generata un'eccezione. Per altre informazioni, vedere <xref:System.Security.Permissions.SecurityPermission> e <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">La risorsa caricata non è un foglio di stile valido.</exception>
        <exception cref="T:System.Security.SecurityException">Il foglio di stile contiene script incorporati e il chiamante non dispone di autorizzazione <see langword="UnmanagedCode" />.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Oggetto <see cref="T:System.Xml.XPath.XPathNavigator" /> contenente il foglio di stile XSLT.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> usato per caricare i fogli di stile a cui si fa riferimento negli elementi <c>xsl:import</c> e <c>xsl:include</c>. Se è <see langword="null" /> , le risorse esterne non verranno risolte.  L'oggetto <see cref="T:System.Xml.XmlResolver" /> non viene inserito nella cache fino al completamento del metodo <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
        <summary>Carica il foglio di stile XSLT contenuto nell'oggetto <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Il foglio di stile viene caricato dalla posizione corrente di <xref:System.Xml.XPath.XPathNavigator>. Per usare una parte del documento caricato come foglio di stile, passare al nodo corrispondente all'inizio del foglio di stile. Dopo il <xref:System.Xml.Xsl.XslTransform.Load%2A> restituzione del metodo, il <xref:System.Xml.XPath.XPathNavigator> viene posizionato all'inizio del foglio di stile (sul `xsl:style sheet` nodo).  
  
 Se il foglio di stile contiene script incorporati, lo script viene compilato in un assembly. L'assembly con attendibilità totale. La procedura consigliata consiste nel fornire l'evidenza mediante il <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>. Per problemi con il <xref:System.Xml.Xsl.XslTransform.Load%2A> fogli di stile e di metodo con script incorporati, vedere l'articolo Q316755 nella Microsoft Knowledge Base al http://support.microsoft.com.  
  
> [!NOTE]
>  Se il chiamante non dispone `UnmanagedCode` autorizzazione, lo script incorporato non viene compilata e un <xref:System.Security.SecurityException> viene generata un'eccezione. Per altre informazioni, vedere <xref:System.Security.Permissions.SecurityPermission> e <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Il nodo corrente non è conforme a un foglio di stile valido.</exception>
        <exception cref="T:System.Security.SecurityException">Il foglio di stile contiene script incorporati e il chiamante non dispone di autorizzazione <see langword="UnmanagedCode" />.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Oggetto <see cref="T:System.Xml.XmlReader" /> contenente il foglio di stile da caricare.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> usato per caricare i fogli di stile a cui si fa riferimento negli elementi <c>xsl:import</c> e <c>xsl:include</c>. Se è <see langword="null" /> , le risorse esterne non verranno risolte.  L'oggetto <see cref="T:System.Xml.XmlResolver" /> non viene inserito nella cache fino al completamento del metodo <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
        <param name="evidence">
          <see cref="T:System.Security.Policy.Evidence" /> impostato nell'assembly generato per il blocco di script nel foglio di stile XSLT.  Se è <see langword="null" />, i blocchi di script non vengono elaborati, la funzione XSLT <c>document()</c> non è supportata e gli oggetti di estensione privilegiati non sono consentiti.  Il chiamante deve disporre dell'autorizzazione <see langword="ControlEvidence" /> per fornire l'evidenza per l'assembly degli script. I chiamanti semi-trusted possono impostare questo parametro su <see langword="null" />.</param>
        <summary>Carica il foglio di stile XSLT contenuto nell'oggetto <see cref="T:System.Xml.XmlReader" />. Questo metodo consente di limitare le autorizzazioni del foglio di stile specificando l'evidenza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Questo metodo carica il foglio di stile XSLT, inclusi gli eventuali fogli di stile a cui fa riferimento `xsl:include` e `xsl:import` elementi. Il foglio di stile viene caricato dal nodo corrente del <xref:System.Xml.XmlReader> attraverso tutti i relativi elementi figlio. In questo modo è possibile usare una parte di un documento come il foglio di stile.  
  
 Dopo che il <xref:System.Xml.Xsl.XslTransform.Load%2A> restituzione del metodo, il <xref:System.Xml.XmlReader> è posizionato sul nodo successivo dopo la fine del foglio di stile. Se viene raggiunta la fine del documento, l'oggetto <xref:System.Xml.XmlReader> viene posizionato alla fine del file (EOF).  
  
 Se il foglio di stile contiene le entità, è necessario specificare un <xref:System.Xml.XmlReader> che può risolvere le entità (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> restituisce `true`). In questo caso, un <xref:System.Xml.XmlValidatingReader> può essere utilizzato.  
  
 Per problemi con il <xref:System.Xml.Xsl.XslTransform.Load%2A> fogli di stile e di metodo con script incorporati, vedere l'articolo Q316755 nella Microsoft Knowledge Base al http://support.microsoft.com.  
  
 Esistono diversi modi per fornire l'evidenza. La tabella seguente descrive il tipo di evidenza da fornire per gli scenari utente comuni.  
  
    
  
## Examples  
 L'esempio seguente esegue una trasformazione XSLT in cui `xsltReader` è un <xref:System.Xml.XmlReader> che contiene un foglio di stile e `secureURL` è un URL attendibile che può essere utilizzato per creare <xref:System.Security.Policy.Evidence>. Il <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> metodo viene utilizzato per creare <xref:System.Security.Policy.Evidence> quali viene applicata al foglio di stile.  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Il nodo corrente non è conforme a un foglio di stile valido.</exception>
        <exception cref="T:System.Security.SecurityException">Il foglio di stile a cui viene fatto riferimento richiede funzionalità non consentite dall'evidenza fornita.  Il chiamante tenta di fornire l'evidenza non disponendo di autorizzazione <see langword="ControlEvidence" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per fornire la prova. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Oggetto che implementa l'interfaccia <see cref="T:System.Xml.XPath.IXPathNavigable" />. In .NET Framework può essere un <see cref="T:System.Xml.XmlNode" /> (in genere un <see cref="T:System.Xml.XmlDocument" />) o un <see cref="T:System.Xml.XPath.XPathDocument" /> contenente il foglio di stile XSLT.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> usato per caricare i fogli di stile a cui si fa riferimento negli elementi <c>xsl:import</c> e <c>xsl:include</c>. Se è <see langword="null" /> , le risorse esterne non verranno risolte.  L'oggetto <see cref="T:System.Xml.XmlResolver" /> non viene inserito nella cache fino al completamento del metodo <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
        <param name="evidence">
          <see cref="T:System.Security.Policy.Evidence" /> impostato nell'assembly generato per il blocco di script nel foglio di stile XSLT.  Se è <see langword="null" />, i blocchi di script non vengono elaborati, la funzione XSLT <c>document()</c> non è supportata e gli oggetti di estensione privilegiati non sono consentiti.  Il chiamante deve disporre dell'autorizzazione <see langword="ControlEvidence" /> per fornire l'evidenza per l'assembly degli script. I chiamanti semi-trusted possono impostare questo parametro su <see langword="null" />.</param>
        <summary>Carica il foglio di stile XSLT contenuto nell'oggetto <see cref="T:System.Xml.XPath.IXPathNavigable" />. Questo metodo consente di limitare le autorizzazioni del foglio di stile specificando l'evidenza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Per problemi con il <xref:System.Xml.Xsl.XslTransform.Load%2A> fogli di stile e di metodo con script incorporati, vedere l'articolo Q316755 nella Microsoft Knowledge Base al http://support.microsoft.com.  
  
 Esistono diversi modi per fornire l'evidenza. La tabella seguente descrive il tipo di evidenza da fornire per gli scenari utente comuni.  
  
  ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">La risorsa caricata non è un foglio di stile valido.</exception>
        <exception cref="T:System.Security.SecurityException">Il foglio di stile a cui viene fatto riferimento richiede funzionalità non consentite dall'evidenza fornita.  Il chiamante tenta di fornire l'evidenza non disponendo di autorizzazione <see langword="ControlEvidence" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per fornire la prova. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Oggetto <see cref="T:System.Xml.XPath.XPathNavigator" /> contenente il foglio di stile da caricare.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> usato per caricare i fogli di stile a cui si fa riferimento negli elementi <c>xsl:import</c> e <c>xsl:include</c>. Se è <see langword="null" /> , le risorse esterne non verranno risolte.  L'oggetto <see cref="T:System.Xml.XmlResolver" /> non viene inserito nella cache fino al completamento del metodo <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
        <param name="evidence">
          <see cref="T:System.Security.Policy.Evidence" /> impostato nell'assembly generato per il blocco di script nel foglio di stile XSLT.  Se è <see langword="null" />, i blocchi di script non vengono elaborati, la funzione XSLT <c>document()</c> non è supportata e gli oggetti di estensione privilegiati non sono consentiti.  Il chiamante deve disporre dell'autorizzazione <see langword="ControlEvidence" /> per fornire l'evidenza per l'assembly degli script. I chiamanti semi-trusted possono impostare questo parametro su <see langword="null" />.</param>
        <summary>Carica il foglio di stile XSLT contenuto nell'oggetto <see cref="T:System.Xml.XPath.XPathNavigator" />. Questo metodo consente di limitare le autorizzazioni del foglio di stile specificando l'evidenza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Il foglio di stile viene caricato dalla posizione corrente di <xref:System.Xml.XPath.XPathNavigator>. Per usare una parte del documento caricato come foglio di stile, passare al nodo corrispondente all'inizio del foglio di stile. Dopo il <xref:System.Xml.Xsl.XslTransform.Load%2A> restituzione del metodo, il <xref:System.Xml.XPath.XPathNavigator> viene posizionato all'inizio del foglio di stile (sul `xsl:style sheet` nodo).  
  
 Per problemi con il <xref:System.Xml.Xsl.XslTransform.Load%2A> fogli di stile e di metodo con script incorporati, vedere l'articolo Q316755 nella Microsoft Knowledge Base al http://support.microsoft.com.  
  
 Esistono diversi modi per fornire l'evidenza. La tabella seguente descrive il tipo di evidenza da fornire per gli scenari utente comuni.  
  
    
  
## Examples  
 Nell'esempio seguente esegue una trasformazione XSLT utilizzando un foglio di stile da un'origine esterna. Perché il foglio di stile proviene da un'origine non attendibile, il `resolver` e `evidence` parametri vengono impostati `null`.  
  
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Il nodo corrente non è conforme a un foglio di stile valido.</exception>
        <exception cref="T:System.Security.SecurityException">Il foglio di stile a cui viene fatto riferimento richiede funzionalità non consentite dall'evidenza fornita.  Il chiamante tenta di fornire l'evidenza non disponendo di autorizzazione <see langword="ControlEvidence" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per fornire la prova. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Trasforma i dati XML tramite il foglio di stile XSLT caricato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile">URL del documento di origine da trasformare.</param>
        <param name="outputfile">URL del file di output.</param>
        <summary>Trasforma i dati XML nel file di input e visualizza il risultato in un file di output.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Questo metodo è obsoleto nella versione 1.1 di .NET Framework. L'impostazione delle <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> proprietà determina come il file XSLT `document()` funzione viene risolta. La procedura consigliata consiste nell'usare la <xref:System.Xml.Xsl.XslTransform.Transform%2A> un metodo che accetta un <xref:System.Xml.XmlResolver> dell'oggetto come uno dei relativi argomenti.  
  
   
  
## Examples  
 Nell'esempio seguente consente di trasformare il `books.xml` file utilizzando il `output.xsl` foglio di stile e visualizza i risultati nel `books.html` file.  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 L'esempio Usa i due file di input seguenti:  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">Oggetto che implementa l'interfaccia <see cref="T:System.Xml.XPath.IXPathNavigable" />. In .NET Framework può essere un <see cref="T:System.Xml.XmlNode" /> (in genere un <see cref="T:System.Xml.XmlDocument" />) o un <see cref="T:System.Xml.XPath.XPathDocument" /> contenente i dati da trasformare.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenente gli argomenti qualificati come spazi dei nomi che vengono utilizzati come input per la trasformazione.</param>
        <summary>Trasforma i dati XML in <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizzando gli <paramref name="args" /> specificati e visualizza i risultati in un <see cref="T:System.Xml.XmlReader" /> .</summary>
        <returns>
          <see cref="T:System.Xml.XmlReader" /> contenente i risultati della trasformazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Questo metodo è ora obsoleto. L'impostazione delle <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> proprietà determina come il file XSLT `document()` funzione viene risolta. La procedura consigliata consiste nell'usare la <xref:System.Xml.Xsl.XslTransform.Transform%2A> un metodo che accetta un <xref:System.Xml.XmlResolver> dell'oggetto come uno dei relativi argomenti.  
  
 Il `args` vengono confrontati con i `xsl:param` elementi definiti nel foglio di stile. Il `xsl:output` elemento non è supportato l'output in un <xref:System.Xml.XmlReader> (il `xsl:output` elemento viene ignorato). Visualizzare [output da un XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) per altre informazioni.  
  
 Questo metodo consente di eseguire una trasformazione asincrona del documento di origine.  
  
 Le trasformazioni si applicano all'intero documento. In altre parole, se viene passato un nodo diverso dal nodo radice del documento, il processo di trasformazione accederà comunque a tutti i nodi nel documento caricato. Per trasformare un frammento di nodo, è necessario creare un <xref:System.Xml.XmlDocument> contenente solo il nodo di frammento e passarlo <xref:System.Xml.XmlDocument> per il <xref:System.Xml.Xsl.XslTransform.Transform%2A> (metodo).  
  
 Nell'esempio seguente esegue una trasformazione in un frammento di nodo.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 L'esempio Usa la `library.xml` e `print_root.xsl` come input i file e viene visualizzato quanto segue nella console.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> contenente i dati da trasformare.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenente gli argomenti qualificati come spazi dei nomi che vengono utilizzati come input per la trasformazione.</param>
        <summary>Trasforma i dati XML in <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizzando gli <paramref name="args" /> specificati e visualizza i risultati in un <see cref="T:System.Xml.XmlReader" /> .</summary>
        <returns>
          <see cref="T:System.Xml.XmlReader" /> contenente i risultati della trasformazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Il `args` vengono confrontati con i `xsl:param` elementi definiti nel foglio di stile. Le selezioni di trasformazione applicano al documento nel suo complesso. In altre parole, se il nodo corrente è impostato su un albero di nodi diverso dal nodo radice del documento, questo non impedisce il processo di trasformazione l'accesso a tutti i nodi nel documento caricato. Dopo la trasformazione è stata eseguita, il <xref:System.Xml.XPath.XPathNavigator> rimane nello stato originale. Ciò significa che il nodo che è corrente prima del processo di trasformazione, rimane il nodo corrente dopo il <xref:System.Xml.Xsl.XslTransform.Transform%2A> chiamata al metodo.  
  
 In quanto <xref:System.Xml.XmlReader> fornisce l'output di sola lettura, la `xsl:output` elemento viene ignorato. Visualizzare [output da un XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) per altre informazioni.  
  
 Questo metodo consente di eseguire una trasformazione asincrona del documento di origine.  
  
> [!NOTE]
>  Questo metodo è obsoleto. L'impostazione di <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> proprietà determina come la funzione Document () XSLT viene risolta. La procedura consigliata consiste nell'usare la <xref:System.Xml.Xsl.XslTransform.Transform%2A> un metodo che accetta un <xref:System.Xml.XmlResolver> dell'oggetto come uno dei relativi argomenti.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante l'elaborazione della trasformazione XSLT.  Nota: questo comportamento è stato modificato rispetto alle versioni precedenti. In Microsoft .NET Framework versione 1.1 o precedente viene generato un oggetto <see cref="T:System.Xml.Xsl.XsltException" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile">URL del documento di origine da trasformare.</param>
        <param name="outputfile">URL del file di output.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> usato per risolvere la funzione XSLT <c>document()</c>. Se il valore è <see langword="null" />, la funzione <c>document()</c> non viene risolta.  L'oggetto <see cref="T:System.Xml.XmlResolver" /> non viene inserito nella cache fino al completamento del metodo <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</param>
        <summary>Trasforma i dati XML nel file di input e visualizza il risultato in un file di output.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
   
  
## Examples  
 Nell'esempio seguente esegue una trasformazione XSLT e gli output in un file. Un <xref:System.Xml.XmlUrlResolver> con impostazione predefinita viene usato le credenziali di risolvere le risorse esterne. Per informazioni dettagliate, vedere <xref:System.Net.CredentialCache.DefaultCredentials%2A>.  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">Oggetto che implementa l'interfaccia <see cref="T:System.Xml.XPath.IXPathNavigable" />. In .NET Framework può essere un <see cref="T:System.Xml.XmlNode" /> (in genere un <see cref="T:System.Xml.XmlDocument" />) o un <see cref="T:System.Xml.XPath.XPathDocument" /> contenente i dati da trasformare.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenente gli argomenti qualificati come spazi dei nomi che vengono utilizzati come input per la trasformazione.</param>
        <param name="output">Flusso in cui visualizzare il risultato.</param>
        <summary>Trasforma i dati XML in <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizzando gli <paramref name="args" /> specificati e visualizza i risultati in un <see cref="T:System.IO.Stream" /> .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Questo metodo è ora obsoleto. L'impostazione delle <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> proprietà determina come il file XSLT `document()` funzione viene risolta. La procedura consigliata consiste nell'usare la <xref:System.Xml.Xsl.XslTransform.Transform%2A> un metodo che accetta un <xref:System.Xml.XmlResolver> dell'oggetto come uno dei relativi argomenti.  
  
 Il `args` vengono confrontati con i `xsl:param` elementi definiti nel foglio di stile.  
  
 Le trasformazioni si applicano all'intero documento. In altre parole, se viene passato un nodo diverso dal nodo radice del documento, il processo di trasformazione accederà comunque a tutti i nodi nel documento caricato. Per trasformare un frammento di nodo, è necessario creare un <xref:System.Xml.XmlDocument> contenente solo il nodo di frammento e passarlo <xref:System.Xml.XmlDocument> per il <xref:System.Xml.Xsl.XslTransform.Transform%2A> (metodo).  
  
 Nell'esempio seguente esegue una trasformazione in un frammento di nodo.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 L'esempio Usa la `library.xml` e `print_root.xsl` come input i file e viene visualizzato quanto segue nella console.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante l'elaborazione della trasformazione XSLT.  Nota: questo comportamento è stato modificato rispetto alle versioni precedenti. In Microsoft .NET Framework versione 1.1 o precedente viene generato un oggetto <see cref="T:System.Xml.Xsl.XsltException" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">Oggetto che implementa l'interfaccia <see cref="T:System.Xml.XPath.IXPathNavigable" />. In .NET Framework può essere un <see cref="T:System.Xml.XmlNode" /> (in genere un <see cref="T:System.Xml.XmlDocument" />) o un <see cref="T:System.Xml.XPath.XPathDocument" /> contenente i dati da trasformare.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenente gli argomenti qualificati come spazi dei nomi che vengono utilizzati come input per la trasformazione.</param>
        <param name="output">Oggetto <see cref="T:System.IO.TextWriter" /> a cui si desidera restituire l'output.</param>
        <summary>Trasforma i dati XML in <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizzando gli <paramref name="args" /> specificati e visualizza i risultati in un <see cref="T:System.IO.TextWriter" /> .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Questo metodo è ora obsoleto. L'impostazione delle <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> proprietà determina come il file XSLT `document()` funzione viene risolta. La procedura consigliata consiste nell'usare la <xref:System.Xml.Xsl.XslTransform.Transform%2A> un metodo che accetta un <xref:System.Xml.XmlResolver> dell'oggetto come uno dei relativi argomenti.  
  
 Il `args` vengono confrontati con i `xsl:param` elementi definiti nel foglio di stile.  
  
 L'attributo di codifica in un `xsl:output` elemento non è supportato l'output in un <xref:System.IO.TextWriter>. Visualizzare [output da un XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) per informazioni specifiche su cui `xsl:output` gli attributi sono supportati.  
  
 Le trasformazioni si applicano all'intero documento. In altre parole, se viene passato un nodo diverso dal nodo radice del documento, il processo di trasformazione accederà comunque a tutti i nodi nel documento caricato. Per trasformare un frammento di nodo, è necessario creare un <xref:System.Xml.XmlDocument> contenente solo il nodo di frammento e passarlo <xref:System.Xml.XmlDocument> per il <xref:System.Xml.Xsl.XslTransform.Transform%2A> (metodo).  
  
 Nell'esempio seguente esegue una trasformazione in un frammento di nodo.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 L'esempio Usa la `library.xml` e `print_root.xsl` come input i file e viene visualizzato quanto segue nella console.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante l'elaborazione della trasformazione XSLT.  Nota: questo comportamento è stato modificato rispetto alle versioni precedenti. In Microsoft .NET Framework versione 1.1 o precedente viene generato un oggetto <see cref="T:System.Xml.Xsl.XsltException" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Oggetto che implementa l'interfaccia <see cref="T:System.Xml.XPath.IXPathNavigable" />. In .NET Framework può essere un <see cref="T:System.Xml.XmlNode" /> (in genere un <see cref="T:System.Xml.XmlDocument" />) o un <see cref="T:System.Xml.XPath.XPathDocument" /> contenente i dati da trasformare.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenente gli argomenti qualificati come spazi dei nomi che vengono utilizzati come input per la trasformazione.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> usato per risolvere la funzione XSLT <c>document()</c>. Se il valore è <see langword="null" />, la funzione <c>document()</c> non viene risolta.  L'oggetto <see cref="T:System.Xml.XmlResolver" /> non viene inserito nella cache fino al completamento del metodo <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />.</param>
        <summary>Trasforma i dati XML in <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizzando gli <paramref name="args" /> specificati e visualizza i risultati in un <see cref="T:System.Xml.XmlReader" /> .</summary>
        <returns>
          <see cref="T:System.Xml.XmlReader" /> contenente i risultati della trasformazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Il `args` vengono confrontati con i `xsl:param` elementi definiti nel foglio di stile. Il `xsl:output` elemento non è supportato l'output in un <xref:System.Xml.XmlReader> (il `xsl:output` elemento viene ignorato). Visualizzare [output da un XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) per altre informazioni.  
  
 Questo metodo consente di eseguire una trasformazione asincrona del documento di origine.  
  
 Le trasformazioni si applicano all'intero documento. In altre parole, se viene passato un nodo diverso dal nodo radice del documento, il processo di trasformazione accederà comunque a tutti i nodi nel documento caricato. Per trasformare un frammento di nodo, è necessario creare un <xref:System.Xml.XmlDocument> contenente solo il nodo di frammento e passarlo <xref:System.Xml.XmlDocument> per il <xref:System.Xml.Xsl.XslTransform.Transform%2A> (metodo).  
  
 Nell'esempio seguente esegue una trasformazione in un frammento di nodo.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 L'esempio Usa la `library.xml` e `print_root.xsl` come input i file e viene visualizzato quanto segue nella console.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 Nell'esempio seguente consente di trasformare un documento XML e restituisce i risultati in un `XmlReader`. Un' <xref:System.Xml.XmlUrlResolver> usata con le credenziali necessarie per elaborare qualsiasi trasformazione XSLT `document()` funzioni.  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">Oggetto che implementa l'interfaccia <see cref="T:System.Xml.XPath.IXPathNavigable" />. In .NET Framework può essere un <see cref="T:System.Xml.XmlNode" /> (in genere un <see cref="T:System.Xml.XmlDocument" />) o un <see cref="T:System.Xml.XPath.XPathDocument" /> contenente i dati da trasformare.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenente gli argomenti qualificati come spazi dei nomi che vengono utilizzati come input per la trasformazione.</param>
        <param name="output">Oggetto <see cref="T:System.Xml.XmlWriter" /> a cui si desidera restituire l'output.</param>
        <summary>Trasforma i dati XML in <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizzando gli <paramref name="args" /> specificati e visualizza i risultati in un <see cref="T:System.Xml.XmlWriter" /> .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Questo metodo è ora obsoleto. L'impostazione delle <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> proprietà determina come il file XSLT `document()` funzione viene risolta. La procedura consigliata consiste nell'usare la <xref:System.Xml.Xsl.XslTransform.Transform%2A> un metodo che accetta un <xref:System.Xml.XmlResolver> dell'oggetto come uno dei relativi argomenti.  
  
 Il `args` vengono confrontati con i `xsl:param` elementi definiti nel foglio di stile. Il `xsl:output` elemento non è supportato l'output in un <xref:System.Xml.XmlWriter> (`xsl:output` viene ignorato). Visualizzare [output da un XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) per altre informazioni.  
  
 Le trasformazioni si applicano all'intero documento. In altre parole, se viene passato un nodo diverso dal nodo radice del documento, il processo di trasformazione accederà comunque a tutti i nodi nel documento caricato. Per trasformare un frammento di nodo, è necessario creare un <xref:System.Xml.XmlDocument> contenente solo il nodo di frammento e passarlo <xref:System.Xml.XmlDocument> per il <xref:System.Xml.Xsl.XslTransform.Transform%2A> (metodo).  
  
 Nell'esempio seguente esegue una trasformazione in un frammento di nodo.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 L'esempio Usa la `library.xml` e `print_root.xsl` come input i file e viene visualizzato quanto segue nella console.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante l'elaborazione della trasformazione XSLT.  Nota: questo comportamento è stato modificato rispetto alle versioni precedenti. In Microsoft .NET Framework versione 1.1 o precedente viene generato un oggetto <see cref="T:System.Xml.Xsl.XsltException" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> contenente i dati da trasformare.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenente gli argomenti qualificati come spazi dei nomi che vengono utilizzati come input per la trasformazione.</param>
        <param name="output">Flusso in cui visualizzare il risultato.</param>
        <summary>Trasforma i dati XML in <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizzando gli <paramref name="args" /> specificati e visualizza i risultati in un <see cref="T:System.IO.Stream" /> .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Il `args` vengono confrontati con i `xsl:param` elementi definiti nel foglio di stile. Le selezioni di trasformazione applicano al documento nel suo complesso. In altre parole, se il nodo corrente è impostato su un albero di nodi diverso dal nodo radice del documento, questo non impedisce il processo di trasformazione l'accesso a tutti i nodi nel documento caricato. Dopo la trasformazione è stata eseguita, il <xref:System.Xml.XPath.XPathNavigator> rimane nello stato originale. Ciò significa che il nodo che è corrente prima del processo di trasformazione, rimane il nodo corrente dopo il <xref:System.Xml.Xsl.XslTransform.Transform%2A> chiamata al metodo.  
  
 Visualizzare [output da un XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) per informazioni specifiche su cui `xsl:output` gli attributi sono supportati.  
  
> [!NOTE]
>  Questo metodo è ora obsoleto. L'impostazione delle <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> proprietà determina come il file XSLT `document()` funzione viene risolta. La procedura consigliata consiste nell'usare la <xref:System.Xml.Xsl.XslTransform.Transform%2A> un metodo che accetta un <xref:System.Xml.XmlResolver> dell'oggetto come uno dei relativi argomenti.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante l'elaborazione della trasformazione XSLT.  Nota: questo comportamento è stato modificato rispetto alle versioni precedenti. In Microsoft .NET Framework versione 1.1 o precedente viene generato un oggetto <see cref="T:System.Xml.Xsl.XsltException" />.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> contenente i dati da trasformare.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenente gli argomenti qualificati come spazi dei nomi che vengono utilizzati come input per la trasformazione.</param>
        <param name="output">Oggetto <see cref="T:System.IO.TextWriter" /> a cui si desidera restituire l'output.</param>
        <summary>Trasforma i dati XML in <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizzando gli <paramref name="args" /> specificati e visualizza i risultati in un <see cref="T:System.IO.TextWriter" /> .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Il `args` vengono confrontati con i `xsl:param` elementi definiti nel foglio di stile. Le selezioni di trasformazione applicano al documento nel suo complesso. In altre parole, se il nodo corrente è impostato su un albero di nodi diverso dal nodo radice del documento, questo non impedisce il processo di trasformazione l'accesso a tutti i nodi nel documento caricato. Dopo la trasformazione viene eseguita, il <xref:System.Xml.XPath.XPathNavigator> rimane nello stato originale. Ciò significa che il nodo che è corrente prima del processo di trasformazione, rimane il nodo corrente dopo il <xref:System.Xml.Xsl.XslTransform.Transform%2A> chiamata al metodo.  
  
 L'attributo di codifica in un `xsl:output` elemento non è supportato l'output in un <xref:System.IO.TextWriter>. Visualizzare [output da un XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) per informazioni specifiche su cui `xsl:output` gli attributi sono supportati.  
  
> [!NOTE]
>  Questo metodo è ora obsoleto. L'impostazione delle <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> proprietà determina come il file XSLT `document()` funzione viene risolta. La procedura consigliata consiste nell'usare la <xref:System.Xml.Xsl.XslTransform.Transform%2A> un metodo che accetta un <xref:System.Xml.XmlResolver> dell'oggetto come uno dei relativi argomenti.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante l'elaborazione della trasformazione XSLT.  Nota: questo comportamento è stato modificato rispetto alle versioni precedenti. In Microsoft .NET Framework versione 1.1 o precedente viene generato un oggetto <see cref="T:System.Xml.Xsl.XsltException" />.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> contenente i dati da trasformare.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenente gli argomenti qualificati come spazi dei nomi che vengono utilizzati come input per la trasformazione.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> usato per risolvere la funzione XSLT <c>document()</c>. Se il valore è <see langword="null" />, la funzione <c>document()</c> non viene risolta.  L'oggetto <see cref="T:System.Xml.XmlResolver" /> non viene inserito nella cache fino al completamento del metodo <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />.</param>
        <summary>Trasforma i dati XML in <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizzando gli <paramref name="args" /> specificati e visualizza i risultati in un <see cref="T:System.Xml.XmlReader" /> .</summary>
        <returns>
          <see cref="T:System.Xml.XmlReader" /> contenente i risultati della trasformazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Il `args` vengono confrontati con i `xsl:param` elementi definiti nel foglio di stile. Le selezioni di trasformazione applicano al documento nel suo complesso. In altre parole, se il nodo corrente è impostato su un albero di nodi diverso dal nodo radice del documento, questo non impedisce il processo di trasformazione l'accesso a tutti i nodi nel documento caricato. Dopo la trasformazione è stata eseguita, il <xref:System.Xml.XPath.XPathNavigator> rimane nello stato originale. Ciò significa che il nodo che è corrente prima del processo di trasformazione, rimane il nodo corrente dopo il <xref:System.Xml.Xsl.XslTransform.Transform%2A> chiamata al metodo.  
  
 In quanto <xref:System.Xml.XmlReader> fornisce l'output di sola lettura, la `xsl:output` elemento viene ignorato. Visualizzare [output da un XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) per altre informazioni.  
  
 Questo metodo consente di eseguire una trasformazione asincrona del documento di origine.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante l'elaborazione della trasformazione XSLT.  Nota: questo comportamento è stato modificato rispetto alle versioni precedenti. In Microsoft .NET Framework versione 1.1 o precedente viene generato un oggetto <see cref="T:System.Xml.Xsl.XsltException" />.</exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> contenente i dati da trasformare.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenente gli argomenti qualificati come spazi dei nomi che vengono utilizzati come input per la trasformazione.</param>
        <param name="output">Oggetto <see cref="T:System.Xml.XmlWriter" /> a cui si desidera restituire l'output.</param>
        <summary>Trasforma i dati XML in <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizzando gli argomenti specificati e visualizza i risultati in un <see cref="T:System.Xml.XmlWriter" /> .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Il `args` vengono confrontati con i `xsl:param` elementi definiti nel foglio di stile. Le selezioni di trasformazione applicano al documento nel suo complesso. In altre parole, se il nodo corrente è impostato su un albero di nodi diverso dal nodo radice del documento, questo non impedisce il processo di trasformazione l'accesso a tutti i nodi nel documento caricato. Dopo la trasformazione viene eseguita, il <xref:System.Xml.XPath.XPathNavigator> rimane nello stato originale. Ciò significa che il nodo, che è corrente prima del processo di trasformazione, rimane il nodo corrente dopo il <xref:System.Xml.Xsl.XslTransform.Transform%2A> chiamata al metodo.  
  
 Il `xsl:output` elemento non è supportato l'output in un <xref:System.Xml.XmlWriter> (`xsl:output` viene ignorato). Visualizzare [output da un XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) per altre informazioni.  
  
> [!NOTE]
>  Questo metodo è ora obsoleto. L'impostazione delle <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> proprietà determina come il file XSLT `document()` funzione viene risolta. La procedura consigliata consiste nell'usare la <xref:System.Xml.Xsl.XslTransform.Transform%2A> un metodo che accetta un <xref:System.Xml.XmlResolver> dell'oggetto come uno dei relativi argomenti.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante l'elaborazione della trasformazione XSLT.  Nota: questo comportamento è stato modificato rispetto alle versioni precedenti. In Microsoft .NET Framework versione 1.1 o precedente viene generato un oggetto <see cref="T:System.Xml.Xsl.XsltException" />.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Oggetto che implementa l'interfaccia <see cref="T:System.Xml.XPath.IXPathNavigable" />. In .NET Framework può essere un <see cref="T:System.Xml.XmlNode" /> (in genere un <see cref="T:System.Xml.XmlDocument" />) o un <see cref="T:System.Xml.XPath.XPathDocument" /> contenente i dati da trasformare.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenente gli argomenti qualificati come spazi dei nomi che vengono utilizzati come input per la trasformazione.</param>
        <param name="output">Flusso in cui visualizzare il risultato.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> usato per risolvere la funzione XSLT <c>document()</c>. Se il valore è <see langword="null" />, la funzione <c>document()</c> non viene risolta.  L'oggetto <see cref="T:System.Xml.XmlResolver" /> non viene inserito nella cache fino al completamento del metodo <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</param>
        <summary>Trasforma i dati XML in <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizzando gli <paramref name="args" /> specificati e visualizza i risultati in un <see cref="T:System.IO.Stream" /> .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Il `args` vengono confrontati con i `xsl:param` elementi definiti nel foglio di stile.  
  
 Le trasformazioni si applicano all'intero documento. In altre parole, se viene passato un nodo diverso dal nodo radice del documento, il processo di trasformazione accederà comunque a tutti i nodi nel documento caricato. Per trasformare un frammento di nodo, è necessario creare un <xref:System.Xml.XmlDocument> contenente solo il nodo di frammento e passarlo <xref:System.Xml.XmlDocument> per il <xref:System.Xml.Xsl.XslTransform.Transform%2A> (metodo).  
  
 Nell'esempio seguente esegue una trasformazione in un frammento di nodo.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 L'esempio Usa la `library.xml` e `print_root.xsl` come input i file e viene visualizzato quanto segue nella console.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 Nell'esempio seguente esegue una trasformazione all'interno di una pagina ASP.NET.  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante l'elaborazione della trasformazione XSLT.  Nota: questo comportamento è stato modificato rispetto alle versioni precedenti. In Microsoft .NET Framework versione 1.1 o precedente viene generato un oggetto <see cref="T:System.Xml.Xsl.XsltException" />.</exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Oggetto che implementa l'interfaccia <see cref="T:System.Xml.XPath.IXPathNavigable" />. In .NET Framework può essere un <see cref="T:System.Xml.XmlNode" /> (in genere un <see cref="T:System.Xml.XmlDocument" />) o un <see cref="T:System.Xml.XPath.XPathDocument" /> contenente i dati da trasformare.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenente gli argomenti qualificati come spazi dei nomi che vengono utilizzati come input per la trasformazione.</param>
        <param name="output">Oggetto <see cref="T:System.IO.TextWriter" /> a cui si desidera restituire l'output.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> usato per risolvere la funzione XSLT <c>document()</c>. Se il valore è <see langword="null" />, la funzione <c>document()</c> non viene risolta.  L'oggetto <see cref="T:System.Xml.XmlResolver" /> non viene inserito nella cache fino al completamento del metodo <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />.</param>
        <summary>Trasforma i dati XML in <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizzando gli <paramref name="args" /> specificati e visualizza i risultati in un <see cref="T:System.IO.TextWriter" /> .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Il `args` vengono confrontati con i `xsl:param` elementi definiti nel foglio di stile.  
  
 L'attributo di codifica in un `xsl:output` elemento non è supportato l'output in un <xref:System.IO.TextWriter>. Visualizzare [output da un XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) per informazioni specifiche su cui `xsl:output` gli attributi sono supportati.  
  
 Le trasformazioni si applicano all'intero documento. In altre parole, se viene passato un nodo diverso dal nodo radice del documento, il processo di trasformazione accederà comunque a tutti i nodi nel documento caricato. Per trasformare un frammento di nodo, è necessario creare un <xref:System.Xml.XmlDocument> contenente solo il nodo di frammento e passarlo <xref:System.Xml.XmlDocument> per il <xref:System.Xml.Xsl.XslTransform.Transform%2A> (metodo).  
  
 Nell'esempio seguente esegue una trasformazione in un frammento di nodo.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 L'esempio Usa la `library.xml` e `print_root.xsl` come input i file e viene visualizzato quanto segue nella console.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 Nell'esempio seguente consente di trasformare un file XML e restituisce una stringa HTML. Il <xref:System.IO.StringReader> e <xref:System.IO.StringWriter> classi vengono utilizzate per leggere e scrivere le stringhe.  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 Nell'esempio viene utilizzato il file `books.xml` come input.  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante l'elaborazione della trasformazione XSLT.  Nota: questo comportamento è stato modificato rispetto alle versioni precedenti. In Microsoft .NET Framework versione 1.1 o precedente viene generato un oggetto <see cref="T:System.Xml.Xsl.XsltException" />.</exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Oggetto che implementa l'interfaccia <see cref="T:System.Xml.XPath.IXPathNavigable" />. In .NET Framework può essere un <see cref="T:System.Xml.XmlNode" /> (in genere un <see cref="T:System.Xml.XmlDocument" />) o un <see cref="T:System.Xml.XPath.XPathDocument" /> contenente i dati da trasformare.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenente gli argomenti qualificati come spazi dei nomi che vengono utilizzati come input per la trasformazione.</param>
        <param name="output">Oggetto <see cref="T:System.Xml.XmlWriter" /> a cui si desidera restituire l'output.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> usato per risolvere la funzione XSLT <c>document()</c>. Se il valore è <see langword="null" />, la funzione <c>document()</c> non viene risolta.  L'oggetto <see cref="T:System.Xml.XmlResolver" /> non viene inserito nella cache fino al completamento del metodo <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />.</param>
        <summary>Trasforma i dati XML in <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizzando gli <paramref name="args" /> specificati e visualizza i risultati in un <see cref="T:System.Xml.XmlWriter" /> .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Il `args` vengono confrontati con i `xsl:param` elementi definiti nel foglio di stile. Il `xsl:output` elemento non è supportato l'output in un <xref:System.Xml.XmlWriter> (`xsl:output` viene ignorato). Visualizzare [output da un XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) per altre informazioni.  
  
 Le trasformazioni si applicano all'intero documento. In altre parole, se viene passato un nodo diverso dal nodo radice del documento, il processo di trasformazione accederà comunque a tutti i nodi nel documento caricato. Per trasformare un frammento di nodo, è necessario creare un <xref:System.Xml.XmlDocument> contenente solo il nodo di frammento e passarlo <xref:System.Xml.XmlDocument> per il <xref:System.Xml.Xsl.XslTransform.Transform%2A> (metodo).  
  
 Nell'esempio seguente esegue una trasformazione in un frammento di nodo.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 L'esempio Usa la `library.xml` e `print_root.xsl` come input i file e viene visualizzato quanto segue nella console.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 Nell'esempio seguente Trasforma un documento XML in un documento HTML. Visualizza il codice ISBN, titolo e il prezzo per ogni libro in una tabella.  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 Nell'esempio vengono utilizzati i seguenti due file di input:  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante l'elaborazione della trasformazione XSLT.  Nota: questo comportamento è stato modificato rispetto alle versioni precedenti. In Microsoft .NET Framework versione 1.1 o precedente viene generato un oggetto <see cref="T:System.Xml.Xsl.XsltException" />.</exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> contenente i dati da trasformare.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenente gli argomenti qualificati come spazi dei nomi che vengono utilizzati come input per la trasformazione.</param>
        <param name="output">Flusso in cui visualizzare il risultato.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> usato per risolvere la funzione XSLT <c>document()</c>. Se il valore è <see langword="null" />, la funzione <c>document()</c> non viene risolta.  L'oggetto <see cref="T:System.Xml.XmlResolver" /> non viene inserito nella cache fino al completamento del metodo <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />.</param>
        <summary>Trasforma i dati XML in <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizzando gli <paramref name="args" /> specificati e visualizza i risultati in un <see cref="T:System.IO.Stream" /> .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Il `args` vengono confrontati con i `xsl:param` elementi definiti nel foglio di stile. Le selezioni di trasformazione applicano al documento nel suo complesso. In altre parole, se il nodo corrente è impostato su un albero di nodi diverso dal nodo radice del documento, questo non impedisce il processo di trasformazione l'accesso a tutti i nodi nel documento caricato. Dopo la trasformazione è stata eseguita, il <xref:System.Xml.XPath.XPathNavigator> rimane nello stato originale. Ciò significa che il nodo che è corrente prima del processo di trasformazione, rimane il nodo corrente dopo il <xref:System.Xml.Xsl.XslTransform.Transform%2A> chiamata al metodo.  
  
 Visualizzare [output da un XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) per informazioni specifiche su cui `xsl:output` gli attributi sono supportati.  
  
   
  
## Examples  
 L'esempio seguente carica una tabella clienti in un <xref:System.Xml.XmlDataDocument> ed esegue una trasformazione XSLT per inserire i dati del cliente in una tabella HTML. L'esempio Usa il database Northwind di Microsoft SQL Server 2000.  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 Nell'esempio viene utilizzato il file `customers.xsl` come input.  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante l'elaborazione della trasformazione XSLT.  Nota: questo comportamento è stato modificato rispetto alle versioni precedenti. In Microsoft .NET Framework versione 1.1 o precedente viene generato un oggetto <see cref="T:System.Xml.Xsl.XsltException" />.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> contenente i dati da trasformare.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenente gli argomenti qualificati come spazi dei nomi che vengono utilizzati come input per la trasformazione.</param>
        <param name="output">Oggetto <see cref="T:System.IO.TextWriter" /> a cui si desidera restituire l'output.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> usato per risolvere la funzione XSLT <c>document()</c>. Se il valore è <see langword="null" />, la funzione <c>document()</c> non viene risolta.  L'oggetto <see cref="T:System.Xml.XmlResolver" /> non viene inserito nella cache fino al completamento del metodo <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />.</param>
        <summary>Trasforma i dati XML in <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizzando gli <paramref name="args" /> specificati e visualizza i risultati in un <see cref="T:System.IO.TextWriter" /> .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Il `args` vengono confrontati con i `xsl:param` elementi definiti nel foglio di stile. Le selezioni di trasformazione applicano al documento nel suo complesso. In altre parole, se il nodo corrente è impostato su un albero di nodi diverso dal nodo radice del documento, questo non impedisce il processo di trasformazione l'accesso a tutti i nodi nel documento caricato. Dopo la trasformazione viene eseguita, il <xref:System.Xml.XPath.XPathNavigator> rimane nello stato originale. Ciò significa che il nodo che è corrente prima del processo di trasformazione, rimane il nodo corrente dopo il <xref:System.Xml.Xsl.XslTransform.Transform%2A> chiamata al metodo.  
  
 L'attributo di codifica in un `xsl:output` elemento non è supportato l'output in un <xref:System.IO.TextWriter>. Visualizzare [output da un XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) per informazioni specifiche su cui `xsl:output` gli attributi sono supportati.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante l'elaborazione della trasformazione XSLT.  Nota: questo comportamento è stato modificato rispetto alle versioni precedenti. In Microsoft .NET Framework versione 1.1 o precedente viene generato un oggetto <see cref="T:System.Xml.Xsl.XsltException" />.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> contenente i dati da trasformare.</param>
        <param name="args">
          <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenente gli argomenti qualificati come spazi dei nomi che vengono utilizzati come input per la trasformazione.</param>
        <param name="output">Oggetto <see cref="T:System.Xml.XmlWriter" /> a cui si desidera restituire l'output.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> usato per risolvere la funzione XSLT <c>document()</c>. Se il valore è <see langword="null" />, la funzione <c>document()</c> non viene risolta.  L'oggetto <see cref="T:System.Xml.XmlResolver" /> non viene inserito nella cache fino al completamento del metodo <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />.</param>
        <summary>Trasforma i dati XML in <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizzando gli argomenti specificati e visualizza i risultati in un <see cref="T:System.Xml.XmlWriter" /> .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> supporta la sintassi XSLT 1.0. Il foglio di stile XSLT deve includere la dichiarazione dello spazio dei nomi `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Il `args` vengono confrontati con i `xsl:param` elementi definiti nel foglio di stile. Le selezioni di trasformazione applicano al documento nel suo complesso. In altre parole, se il nodo corrente è impostato su un albero di nodi diverso dal nodo radice del documento, questo non impedisce il processo di trasformazione l'accesso a tutti i nodi nel documento caricato. Dopo la trasformazione viene eseguita, il <xref:System.Xml.XPath.XPathNavigator> rimane nello stato originale. Ciò significa che il nodo, che è corrente prima del processo di trasformazione, rimane il nodo corrente dopo il <xref:System.Xml.Xsl.XslTransform.Transform%2A> chiamata al metodo.  
  
 Il `xsl:output` elemento non è supportato l'output in un <xref:System.Xml.XmlWriter> (`xsl:output` viene ignorato). Visualizzare [output da un XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) per altre informazioni.  
  
   
  
## Examples  
 Nell'esempio seguente viene caricato e modifica di un documento XML prima di eseguire una trasformazione XSLT.  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante l'elaborazione della trasformazione XSLT.  Nota: questo comportamento è stato modificato rispetto alle versioni precedenti. In Microsoft .NET Framework versione 1.1 o precedente viene generato un oggetto <see cref="T:System.Xml.Xsl.XsltException" />.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Imposta l'oggetto <see cref="T:System.Xml.XmlResolver" /> utilizzato per risolvere risorse esterne quando viene chiamato il metodo <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</summary>
        <value>
          <see cref="T:System.Xml.XmlResolver" /> da utilizzare durante la trasformazione. Se impostato su <see langword="null" />, il file XSLT <c>Document ()</c> funzione non viene risolto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Il <xref:System.Xml.Xsl.XslTransform> classe è obsoleta in .NET Framework versione 2.0. Il <xref:System.Xml.Xsl.XslCompiledTransform> classe è il nuovo processore XSLT. Per altre informazioni, vedere [usando la classe XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) e [migrazione dalla classe XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 Nella versione 1.1 di .NET Framework, il livello di attendibilità dell'applicazione determina il comportamento predefinito:  
  
 `Fully trusted code:` Un valore predefinito <xref:System.Xml.XmlUrlResolver> senza utente delle credenziali viene usato per risolvere il `document()` (funzione). Se è necessaria l'autenticazione per accedere alla risorsa esterna, utilizzare questa proprietà per specificare un <xref:System.Xml.XmlResolver> con le credenziali necessarie.  
  
 `Semi-trusted code:` La proprietà è impostata su `null`, vale a dire il `document()` funzione non viene risolto. Poiché l'attendibilità totale è necessaria per specificare un <xref:System.Xml.XmlResolver>, questa proprietà non può anche essere impostata.  
  
 Questo sistema di risoluzione viene utilizzato quando il file XSLT `document()` funzione viene richiamata. Non è utilizzato per risolvere `xsl:import` e `xsl:include` elementi a cui fa riferimento il foglio di stile. Per specificare una <xref:System.Xml.XmlResolver> da utilizzare per risolvere `xsl:import` e `xsl:include` gli elementi di cui viene fatto riferimento nel foglio di stile, utilizzare il <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, che accetta un <xref:System.Xml.XmlResolver> come uno dei relativi argomenti.  
  
> [!NOTE]
>  Questa proprietà è obsoleta nella versione 1.1 di .NET Framework. Specifica un <xref:System.Xml.XmlResolver> utilizzando il <xref:System.Xml.Xsl.XslTransform.Transform%2A> metodo è la procedura consigliata. In questo caso, il <xref:System.Xml.XmlResolver> non viene memorizzato nella cache dopo il <xref:System.Xml.Xsl.XslTransform.Transform%2A> metodo viene completato.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>