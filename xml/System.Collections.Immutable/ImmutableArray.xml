<Type Name="ImmutableArray" FullName="System.Collections.Immutable.ImmutableArray">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6d49c6bdb483ea00a3cc5f142ce2c71b44e00ca4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableArray" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableArray extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableArray" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableArray" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableArray abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="66a1e-101">Fornisce i metodi per creare una matrice non modificabile, ovvero che non può essere modificata una volta che è stata creata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="66a1e-101">Provides methods for creating an array that is immutable; meaning it cannot be changed once it is created.</span>
      </span>
      <span data-ttu-id="66a1e-102">**Pacchetto NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">informazioni sulle raccolte non modificabili e su come installarle</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="66a1e-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <threadsafe>
      <span data-ttu-id="66a1e-103">Questo tipo è thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="66a1e-103">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="66a1e-104">Tipo di elemento memorizzato nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-104">The type of element stored in the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="66a1e-105">Matrice ordinata in cui effettuare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-105">The sorted array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="66a1e-106">Oggetto da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-106">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-107">Cerca un elemento specificato nella matrice non modificabile ordinata usando l'operatore di confronto predefinito e restituisce l'indice in base zero dell'elemento, se trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-107">Searches the sorted immutable array for a specified element using the default comparer and returns the zero-based index of the element, if it’s found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66a1e-108">Indice in base zero dell'elemento nella matrice, se l'elemento viene trovato. In caso contrario, un numero negativo che rappresenta il complemento bit per bit dell'indice dell'elemento successivo maggiore di <paramref name="value" /> o, se non è disponibile alcun elemento maggiore, il complemento bit per bit di <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-108">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="66a1e-109">
            <paramref name="value" /> non implementa <see cref="T:System.IComparable" /> o la ricerca rileva un elemento che non implementa <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-109">
              <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="66a1e-110">Tipo di elemento memorizzato nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-110">The type of element stored in the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="66a1e-111">Matrice ordinata in cui effettuare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-111">The sorted array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="66a1e-112">Oggetto da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-112">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="66a1e-113">Implementazione dell'operatore di confronto da usare durante il confronto di elementi oppure null per usare l'operatore di confronto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-113">The comparer implementation to use when comparing elements, or null to use the default comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-114">Cerca un elemento specificato in una matrice non modificabile ordinata e restituisce l'indice in base zero dell'elemento, se trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-114">Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it’s found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66a1e-115">Indice in base zero dell'elemento nella matrice, se l'elemento viene trovato. In caso contrario, un numero negativo che rappresenta il complemento bit per bit dell'indice dell'elemento successivo maggiore di <paramref name="value" /> o, se non è disponibile alcun elemento maggiore, il complemento bit per bit di <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-115">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="66a1e-116">
            <paramref name="comparer" /> ha un valore Null e <paramref name="value" /> non implementa <see cref="T:System.IComparable" /> o la ricerca rileva un elemento che non implementa <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-116">
              <paramref name="comparer" /> is null and <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, int index, int length, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, int32 index, int32 length, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), index As Integer, length As Integer, value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, int index, int length, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="66a1e-117">Tipo di elemento memorizzato nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-117">The type of element stored in the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="66a1e-118">Matrice ordinata in cui effettuare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-118">The sorted array to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="66a1e-119">Indice iniziale dell'intervallo in cui eseguire la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-119">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="66a1e-120">Lunghezza dell'intervallo in cui eseguire la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-120">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="66a1e-121">Oggetto da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-121">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-122">Cerca un elemento specificato in una matrice non modificabile ordinata e restituisce l'indice in base zero dell'elemento, se trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-122">Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it’s found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66a1e-123">Indice in base zero dell'elemento nella matrice, se l'elemento viene trovato. In caso contrario, un numero negativo che rappresenta il complemento bit per bit dell'indice dell'elemento successivo maggiore di <paramref name="value" /> o, se non è disponibile alcun elemento maggiore, il complemento bit per bit di <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-123">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="66a1e-124">
            <paramref name="value" /> non implementa <see cref="T:System.IComparable" /> o la ricerca rileva un elemento che non implementa <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-124">
              <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, int index, int length, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, int32 index, int32 length, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), index As Integer, length As Integer, value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, int index, int length, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="66a1e-125">Tipo di elemento memorizzato nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-125">The type of element stored in the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="66a1e-126">Matrice ordinata in cui effettuare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-126">The sorted array to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="66a1e-127">Indice iniziale dell'intervallo in cui eseguire la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-127">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="66a1e-128">Lunghezza dell'intervallo in cui eseguire la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-128">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="66a1e-129">Oggetto da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-129">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="66a1e-130">Operatore di confronto da usare durante il confronto dell'eguaglianza degli elementi oppure <see langword="null" /> per usare l'operatore di confronto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-130">The comparer to use when comparing elements for equality or <see langword="null" /> to use the default comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-131">Cerca un elemento specificato in una matrice non modificabile ordinata e restituisce l'indice in base zero dell'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-131">Searches a sorted immutable array for a specified element and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66a1e-132">Indice in base zero dell'elemento nella matrice, se l'elemento viene trovato. In caso contrario, un numero negativo che rappresenta il complemento bit per bit dell'indice dell'elemento successivo maggiore di <paramref name="value" /> o, se non è disponibile alcun elemento maggiore, il complemento bit per bit di <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-132">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="66a1e-133">
            <paramref name="comparer" /> ha un valore Null e <paramref name="value" /> non implementa <see cref="T:System.IComparable" /> o la ricerca rileva un elemento che non implementa <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-133">
              <paramref name="comparer" /> is null and <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) () As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="66a1e-134">Tipo di elementi memorizzati nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-134">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="66a1e-135">Crea una matrice non modificabile vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-135">Creates an empty immutable array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66a1e-136">Matrice non modificabile vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-136">An empty immutable array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="66a1e-137">Tipo di elementi memorizzati nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-137">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="item">
          <span data-ttu-id="66a1e-138">Oggetto usato per archiviare la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-138">The object to store in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-139">Crea una matrice non modificabile che contiene l'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-139">Creates an immutable array that contains the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66a1e-140">Restituisce una matrice non modificabile che contiene l'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-140">Returns an immutable array that contains the specified object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (ParamArray items As T()) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(... cli::array &lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="66a1e-141">Tipo di elementi memorizzati nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-141">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="66a1e-142">Matrice di oggetti con cui popolare la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-142">The array of objects to populate the array with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-143">Crea una matrice non modificabile dalla matrice di oggetti specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-143">Creates an immutable array from the specified array of objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66a1e-144">Matrice non modificabile che contiene la matrice di elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-144">An immutable array that contains the array of items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="66a1e-145">Tipo di elementi memorizzati nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-145">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="item1">
          <span data-ttu-id="66a1e-146">Primo oggetto usato per archiviare la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-146">The first object to store in the array.</span>
          </span>
        </param>
        <param name="item2">
          <span data-ttu-id="66a1e-147">Secondo oggetto usato per archiviare la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-147">The second object to store in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-148">Crea una matrice non modificabile che contiene gli oggetti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-148">Creates an immutable array that contains the specified objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66a1e-149">Restituisce una matrice non modificabile che contiene gli oggetti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-149">Returns an immutable array that contains the specified objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (System.Collections.Immutable.ImmutableArray&lt;T&gt; items, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; items, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (items As ImmutableArray(Of T), start As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(System::Collections::Immutable::ImmutableArray&lt;T&gt; items, int start, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="66a1e-150">Tipo di elementi memorizzati nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-150">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="66a1e-151">Matrice di origine degli oggetti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-151">The source array of objects.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="66a1e-152">Indice del primo elemento da copiare da <c>items</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-152">The index of the first element to copy from <c>items</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="66a1e-153">Numero di elementi da <c>items</c> da includere nella matrice non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-153">The number of elements from <c>items</c> to include in this immutable array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-154">Crea una matrice non modificabile con gli oggetti specificati di un'altra matrice non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-154">Creates an immutable array with the specified objects from another immutable array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66a1e-155">Matrice non modificabile che contiene gli oggetti specificati della matrice di origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-155">An immutable array that contains the specified objects from the source array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2, T item3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2, !!T item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T, item3 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2, T item3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
        <Parameter Name="item3" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="66a1e-156">Tipo di elementi memorizzati nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-156">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="item1">
          <span data-ttu-id="66a1e-157">Primo oggetto usato per archiviare la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-157">The first object to store in the array.</span>
          </span>
        </param>
        <param name="item2">
          <span data-ttu-id="66a1e-158">Secondo oggetto usato per archiviare la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-158">The second object to store in the array.</span>
          </span>
        </param>
        <param name="item3">
          <span data-ttu-id="66a1e-159">Terzo oggetto usato per archiviare la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-159">The third object to store in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-160">Crea una matrice non modificabile che contiene gli oggetti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-160">Creates an immutable array that contains the specified objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66a1e-161">Matrice non modificabile che contiene gli oggetti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-161">An immutable array that contains the specified objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T[] items, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (items As T(), start As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(cli::array &lt;T&gt; ^ items, int start, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="66a1e-162">Tipo di elementi memorizzati nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-162">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="66a1e-163">Matrice di origine degli oggetti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-163">The source array of objects.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="66a1e-164">Indice del primo elemento da copiare da <c>items</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-164">The index of the first element to copy from <c>items</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="66a1e-165">Numero di elementi da <c>items</c> da includere nella matrice non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-165">The number of elements from <c>items</c> to include in this immutable array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-166">Crea una matrice non modificabile con gli oggetti specificati di un'altra matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-166">Creates an immutable array with specified objects from another array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66a1e-167">Matrice non modificabile che contiene gli oggetti specificati della matrice di origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-167">An immutable array that contains the specified objects from the source array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2, T item3, T item4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2, !!T item3, !!T item4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T, item3 As T, item4 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2, T item3, T item4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
        <Parameter Name="item3" Type="T" />
        <Parameter Name="item4" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="66a1e-168">Tipo di elementi memorizzati nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-168">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="item1">
          <span data-ttu-id="66a1e-169">Primo oggetto usato per archiviare la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-169">The first object to store in the array.</span>
          </span>
        </param>
        <param name="item2">
          <span data-ttu-id="66a1e-170">Secondo oggetto usato per archiviare la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-170">The second object to store in the array.</span>
          </span>
        </param>
        <param name="item3">
          <span data-ttu-id="66a1e-171">Terzo oggetto usato per archiviare la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-171">The third object to store in the array.</span>
          </span>
        </param>
        <param name="item4">
          <span data-ttu-id="66a1e-172">Quarto oggetto usato per archiviare la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-172">The fourth object to store in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-173">Crea una matrice non modificabile che contiene gli oggetti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-173">Creates an immutable array that contains the specified objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66a1e-174">Matrice non modificabile che contiene gli oggetti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-174">An immutable array that contains the specified objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder CreateBuilder&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateBuilder``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) () As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ CreateBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="66a1e-175">Tipo di elementi memorizzati nel generatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-175">The type of elements stored in the builder.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="66a1e-176">Crea una matrice modificabile che può essere convertita in <see cref="T:System.Collections.Immutable.ImmutableArray" /> senza allocare nuova memoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-176">Creates a mutable array that can be converted to an <see cref="T:System.Collections.Immutable.ImmutableArray" /> without allocating new memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66a1e-177">Matrice modificabile del tipo specificato che può essere convertito in modo efficiente in una matrice non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-177">A mutable array of the specified type that can be efficiently converted to an immutable array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder CreateBuilder&lt;T&gt; (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateBuilder``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) (initialCapacity As Integer) As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ CreateBuilder(int initialCapacity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="66a1e-178">Tipo di elementi memorizzati nel generatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-178">The type of elements stored in the builder.</span>
          </span>
        </typeparam>
        <param name="initialCapacity">
          <span data-ttu-id="66a1e-179">Capacità iniziale del generatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-179">The initial capacity of the builder.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-180">Crea una matrice modificabile che può essere convertita in <see cref="T:System.Collections.Immutable.ImmutableArray" /> senza allocare nuova memoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-180">Creates a mutable array that can be converted to an <see cref="T:System.Collections.Immutable.ImmutableArray" /> without allocating new memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66a1e-181">Matrice modificabile del tipo specificato che può essere convertito in modo efficiente in una matrice non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-181">A mutable array of the specified type that can be efficiently converted to an immutable array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (items As IEnumerable(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; CreateRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="66a1e-182">Tipo di elemento memorizzato nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-182">The type of element stored in the array.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="66a1e-183">Elementi da aggiungere alla matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-183">The elements to add to the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-184">Crea un nuovo oggetto <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> popolato con gli elementi specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-184">Creates a new <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> populated with the specified items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66a1e-185">Matrice non modificabile che contiene gli elementi specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-185">An immutable array that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TResult) (items As ImmutableArray(Of TSource), selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items">
          <span data-ttu-id="66a1e-186">Matrice di origine con cui inizializzare la matrice risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-186">The source array to initialize the resulting array with.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="66a1e-187">Funzione da applicare a ogni elemento della matrice di origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-187">The function to apply to each element from the source array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-188">Inizializza una nuova istanza dell'elemento struct <see cref="T:System.Collections.Immutable.ImmutableArray`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-188">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66a1e-189">Questo overload consente la creazione efficiente di un <xref:System.Collections.Immutable.ImmutableArray%601> in base a un oggetto esistente <xref:System.Collections.Immutable.ImmutableArray%601>, in cui una funzione di mapping deve essere applicato a ogni elemento della matrice di origine.</span><span class="sxs-lookup"><span data-stu-id="66a1e-189">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from             the source array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, int32 start, int32 length, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TResult) (items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items">
          <span data-ttu-id="66a1e-190">Matrice di origine con cui inizializzare la matrice risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-190">The source array to initialize the resulting array with.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="66a1e-191">Indice del primo elemento nella matrice di origine da includere nella matrice risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-191">The index of the first element in the source array to include in the resulting array.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="66a1e-192">Numero di elementi della matrice di origine da includere nella matrice risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-192">The number of elements from the source array to include in the resulting array.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="66a1e-193">Funzione da applicare a ogni elemento della matrice di origine incluso nella matrice risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-193">The function to apply to each element from the source array included in the resulting array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-194">Inizializza una nuova istanza dell'elemento struct <see cref="T:System.Collections.Immutable.ImmutableArray`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-194">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66a1e-195">Questo overload consente la creazione efficiente di un <xref:System.Collections.Immutable.ImmutableArray%601> in base a una sezione di un oggetto esistente <xref:System.Collections.Immutable.ImmutableArray%601>, in cui una funzione di mapping deve essere applicato a ogni elemento della matrice di origine inclusa nella matrice risulta.</span><span class="sxs-lookup"><span data-stu-id="66a1e-195">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on a slice of an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from the source array             included in the resulting array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TArg,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, Func&lt;TSource,TArg,TResult&gt; selector, TArg arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TArg, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, class System.Func`3&lt;!!TSource, !!TArg, !!TResult&gt; selector, !!TArg arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1,``2},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TArg, TResult) (items As ImmutableArray(Of TSource), selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TArg, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, Func&lt;TSource, TArg, TResult&gt; ^ selector, TArg arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TArg" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TArg,TResult&gt;" />
        <Parameter Name="arg" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TArg">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items">
          <span data-ttu-id="66a1e-196">Matrice di origine con cui inizializzare la matrice risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-196">The source array to initialize the resulting array with.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="66a1e-197">Funzione da applicare a ogni elemento della matrice di origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-197">The function to apply to each element from the source array.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="66a1e-198">Argomento da passare alla funzione di mapping del selettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-198">An argument to be passed to the selector mapping function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-199">Inizializza una nuova istanza dell'elemento struct <see cref="T:System.Collections.Immutable.ImmutableArray`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-199">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66a1e-200">Questo overload consente la creazione efficiente di un <xref:System.Collections.Immutable.ImmutableArray%601> in base a un oggetto esistente <xref:System.Collections.Immutable.ImmutableArray%601>, in cui una funzione di mapping deve essere applicato a ogni elemento della matrice di origine.</span><span class="sxs-lookup"><span data-stu-id="66a1e-200">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from             the source array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TArg,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource,TArg,TResult&gt; selector, TArg arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TArg, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, int32 start, int32 length, class System.Func`3&lt;!!TSource, !!TArg, !!TResult&gt; selector, !!TArg arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1,``2},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TArg, TResult) (items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TArg, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource, TArg, TResult&gt; ^ selector, TArg arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TArg" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TArg,TResult&gt;" />
        <Parameter Name="arg" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TArg">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items">
          <span data-ttu-id="66a1e-201">Matrice di origine con cui inizializzare la matrice risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-201">The source array to initialize the resulting array with.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="66a1e-202">Indice del primo elemento nella matrice di origine da includere nella matrice risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-202">The index of the first element in the source array to include in the resulting array.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="66a1e-203">Numero di elementi della matrice di origine da includere nella matrice risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-203">The number of elements from the source array to include in the resulting array.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="66a1e-204">Funzione da applicare a ogni elemento della matrice di origine incluso nella matrice risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-204">The function to apply to each element from the source array included in the resulting array.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="66a1e-205">Argomento da passare alla funzione di mapping del selettore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-205">An argument to be passed to the selector mapping function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-206">Inizializza una nuova istanza dell'elemento struct <see cref="T:System.Collections.Immutable.ImmutableArray`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-206">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66a1e-207">Questo overload consente la creazione efficiente di un <xref:System.Collections.Immutable.ImmutableArray%601> in base a una sezione di un oggetto esistente <xref:System.Collections.Immutable.ImmutableArray%601>, in cui una funzione di mapping deve essere applicato a ogni elemento della matrice di origine inclusa nella matrice risulta.</span><span class="sxs-lookup"><span data-stu-id="66a1e-207">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on a slice of an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from the source array             included in the resulting array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableArray&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TSource&gt; ToImmutableArray&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; ToImmutableArray&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableArray(Of TSource) (items As IEnumerable(Of TSource)) As ImmutableArray(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableArray&lt;TSource&gt; ToImmutableArray(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="66a1e-208">Il tipo di elementi contenuti <c>elementi</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-208">The type of elements contained in <c>items</c>.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="66a1e-209">Raccolta di oggetti da copiare nella matrice non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-209">The collection of objects to copy to the immutable array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66a1e-210">Crea una matrice non modificabile dalla raccolta specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-210">Creates an immutable array from the specified collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66a1e-211">Matrice non modificabile che contiene la raccolta di oggetti specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66a1e-211">An immutable array that contains the specified collection of objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>